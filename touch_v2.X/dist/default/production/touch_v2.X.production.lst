

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Jan 17 21:28:56 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    21                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	text0,global,reloc=2,class=CODE,delta=1
    23                           	psect	text1,global,reloc=2,class=CODE,delta=1
    24                           	psect	text2,global,reloc=2,class=CODE,delta=1
    25                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text4,global,reloc=2,class=CODE,delta=1
    27                           	psect	text5,global,reloc=2,class=CODE,delta=1
    28                           	psect	text6,global,reloc=2,class=CODE,delta=1
    29                           	psect	text7,global,reloc=2,class=CODE,delta=1
    30                           	psect	text8,global,reloc=2,class=CODE,delta=1
    31                           	psect	text9,global,reloc=2,class=CODE,delta=1
    32                           	psect	text10,global,reloc=2,class=CODE,delta=1
    33                           	psect	text11,global,reloc=2,class=CODE,delta=1
    34                           	psect	text12,global,reloc=2,class=CODE,delta=1
    35                           	psect	text13,global,reloc=2,class=CODE,delta=1
    36                           	psect	text14,global,reloc=2,class=CODE,delta=1
    37                           	psect	text15,global,reloc=2,class=CODE,delta=1
    38                           	psect	text16,global,reloc=2,class=CODE,delta=1
    39                           	psect	text17,global,reloc=2,class=CODE,delta=1
    40                           	psect	text18,global,reloc=2,class=CODE,delta=1
    41                           	psect	text19,global,reloc=2,class=CODE,delta=1
    42                           	psect	text20,global,reloc=2,class=CODE,delta=1
    43                           	psect	text21,global,reloc=2,class=CODE,delta=1
    44                           	psect	text22,global,reloc=2,class=CODE,delta=1
    45                           	psect	text23,global,reloc=2,class=CODE,delta=1
    46                           	psect	text24,global,reloc=2,class=CODE,delta=1
    47                           	psect	text25,global,reloc=2,class=CODE,delta=1
    48                           	psect	text26,global,reloc=2,class=CODE,delta=1
    49                           	psect	text27,global,reloc=2,class=CODE,delta=1
    50                           	psect	text28,global,reloc=2,class=CODE,delta=1
    51                           	psect	text29,global,reloc=2,class=CODE,delta=1
    52                           	psect	text30,global,reloc=2,class=CODE,delta=1
    53                           	psect	text31,global,reloc=2,class=CODE,delta=1
    54                           	psect	text32,global,reloc=2,class=CODE,delta=1
    55                           	psect	text33,global,reloc=2,class=CODE,delta=1
    56                           	psect	text34,global,reloc=2,class=CODE,delta=1
    57                           	psect	text35,global,reloc=2,class=CODE,delta=1
    58                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text37,global,reloc=2,class=CODE,delta=1
    60                           	psect	text38,global,reloc=2,class=CODE,delta=1
    61                           	psect	text39,global,reloc=2,class=CODE,delta=1
    62                           	psect	text40,global,reloc=2,class=CODE,delta=1
    63                           	psect	text41,global,reloc=2,class=CODE,delta=1
    64                           	psect	text42,global,reloc=2,class=CODE,delta=1
    65                           	psect	text43,global,reloc=2,class=CODE,delta=1
    66                           	psect	text44,global,reloc=2,class=CODE,delta=1
    67                           	psect	text45,global,reloc=2,class=CODE,delta=1
    68                           	psect	text46,global,reloc=2,class=CODE,delta=1
    69                           	psect	text47,global,reloc=2,class=CODE,delta=1
    70                           	psect	text48,global,reloc=2,class=CODE,delta=1
    71                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text51,global,reloc=2,class=CODE,delta=1
    74                           	psect	text52,global,reloc=2,class=CODE,delta=1
    75                           	psect	text53,global,reloc=2,class=CODE,delta=1
    76                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text57,global,reloc=2,class=CODE,delta=1
    80                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text61,global,reloc=2,class=CODE,delta=1
    84                           	psect	text62,global,reloc=2,class=CODE,delta=1
    85                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=2
    87                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=2
    88                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=2
    89                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    90                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=1
    91                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
    92                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=1
    93                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=1
    94                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=1
    95                           	psect	text73,global,reloc=2,class=CODE,delta=1
    96                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=1
    98                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=1
    99                           	psect	text77,global,reloc=2,class=CODE,delta=1
   100                           	psect	text78,global,reloc=2,class=CODE,delta=1
   101                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=2
   102                           	psect	text80,global,reloc=2,class=CODE,delta=1,group=2
   103                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=2
   104                           	psect	text82,global,reloc=2,class=CODE,delta=1
   105                           	psect	text83,global,reloc=2,class=CODE,delta=1
   106                           	psect	text84,global,reloc=2,class=CODE,delta=1,group=2
   107                           	psect	text85,global,reloc=2,class=CODE,delta=1,group=2
   108                           	psect	text86,global,reloc=2,class=CODE,delta=1,group=2
   109                           	psect	text87,global,reloc=2,class=CODE,delta=1
   110                           	psect	text88,global,reloc=2,class=CODE,delta=1
   111                           	psect	text89,global,reloc=2,class=CODE,delta=1
   112                           	psect	text90,global,reloc=2,class=CODE,delta=1
   113                           	psect	text91,global,reloc=2,class=CODE,delta=1
   114                           	psect	text92,global,reloc=2,class=CODE,delta=1
   115                           	psect	text93,global,reloc=2,class=CODE,delta=1
   116                           	psect	text94,global,reloc=2,class=CODE,delta=1
   117                           	psect	text95,global,reloc=2,class=CODE,delta=1
   118                           	psect	text96,global,reloc=2,class=CODE,delta=1,inline
   119                           	psect	text97,global,reloc=2,class=CODE,delta=1,inline
   120                           	psect	text98,global,reloc=2,class=CODE,delta=1
   121                           	psect	text99,global,reloc=2,class=CODE,delta=1
   122                           	psect	text100,global,reloc=2,class=CODE,delta=1,group=2
   123                           	psect	text101,global,reloc=2,class=CODE,delta=1
   124                           	psect	text102,global,reloc=2,class=CODE,delta=1,group=2
   125                           	psect	text103,global,reloc=2,class=CODE,delta=1
   126                           	psect	text104,global,reloc=2,class=CODE,delta=1,group=1
   127                           	psect	text105,global,reloc=2,class=CODE,delta=1,group=1
   128                           	psect	text106,global,reloc=2,class=CODE,delta=1,group=1
   129                           	psect	text107,global,reloc=2,class=CODE,delta=1
   130                           	psect	text108,global,reloc=2,class=CODE,delta=1
   131                           	psect	text109,global,reloc=2,class=CODE,delta=1
   132                           	psect	text110,global,reloc=2,class=CODE,delta=1
   133                           	psect	text111,global,reloc=2,class=CODE,delta=1,group=1
   134                           	psect	text112,global,reloc=2,class=CODE,delta=1,group=1
   135                           	psect	text113,global,reloc=2,class=CODE,delta=1,group=1
   136                           	psect	text114,global,reloc=2,class=CODE,delta=1
   137                           	psect	text115,global,reloc=2,class=CODE,delta=1
   138                           	psect	text116,global,reloc=2,class=CODE,delta=1
   139                           	psect	text117,global,reloc=2,class=CODE,delta=1
   140                           	psect	text118,global,reloc=2,class=CODE,delta=1
   141                           	psect	text119,global,reloc=2,class=CODE,delta=1
   142                           	psect	text120,global,reloc=2,class=CODE,delta=1
   143                           	psect	text121,global,reloc=2,class=CODE,delta=1
   144                           	psect	text122,global,reloc=2,class=CODE,delta=1
   145                           	psect	text123,global,reloc=2,class=CODE,delta=1
   146                           	psect	text124,global,reloc=2,class=CODE,delta=1
   147                           	psect	text125,global,reloc=2,class=CODE,delta=1
   148                           	psect	text126,global,reloc=2,class=CODE,delta=1
   149                           	psect	text127,global,reloc=2,class=CODE,delta=1
   150                           	psect	text128,global,reloc=2,class=CODE,delta=1
   151                           	psect	text129,global,reloc=2,class=CODE,delta=1
   152                           	psect	text130,global,reloc=2,class=CODE,delta=1
   153                           	psect	text131,global,reloc=2,class=CODE,delta=1
   154                           	psect	text132,global,reloc=2,class=CODE,delta=1
   155                           	psect	text133,global,reloc=2,class=CODE,delta=1
   156                           	psect	text134,global,reloc=2,class=CODE,delta=1
   157                           	psect	text135,global,reloc=2,class=CODE,delta=1
   158                           	psect	text136,global,reloc=2,class=CODE,delta=1
   159                           	psect	text137,global,reloc=2,class=CODE,delta=1
   160                           	psect	text138,global,reloc=2,class=CODE,delta=1
   161                           	psect	text139,global,reloc=2,class=CODE,delta=1
   162                           	psect	text140,global,reloc=2,class=CODE,delta=1
   163                           	psect	text141,global,reloc=2,class=CODE,delta=1
   164                           	psect	text142,global,reloc=2,class=CODE,delta=1
   165                           	psect	text143,global,reloc=4,class=CODE,delta=1
   166                           	psect	text144,global,reloc=2,class=CODE,delta=1
   167                           	psect	text145,global,reloc=2,class=CODE,delta=1
   168                           	psect	text146,global,reloc=2,class=CODE,delta=1
   169                           	psect	text147,global,reloc=4,class=CODE,delta=1
   170                           	psect	text148,global,reloc=2,class=CODE,delta=1
   171                           	psect	text149,global,reloc=2,class=CODE,delta=1
   172                           	psect	text150,global,reloc=2,class=CODE,delta=1
   173                           	psect	text151,global,reloc=2,class=CODE,delta=1
   174                           	psect	text152,global,reloc=2,class=CODE,delta=1
   175                           	psect	text153,global,reloc=2,class=CODE,delta=1
   176                           	psect	text154,global,reloc=4,class=CODE,delta=1
   177                           	psect	text155,global,reloc=2,class=CODE,delta=1
   178                           	psect	text156,global,reloc=2,class=CODE,delta=1
   179                           	psect	text157,global,reloc=2,class=CODE,delta=1
   180                           	psect	text158,global,reloc=2,class=CODE,delta=1
   181                           	psect	text159,global,reloc=2,class=CODE,delta=1
   182                           	psect	text160,global,reloc=2,class=CODE,delta=1
   183                           	psect	text161,global,reloc=2,class=CODE,delta=1,group=1
   184                           	psect	text162,global,reloc=4,class=CODE,delta=1
   185                           	psect	text163,global,reloc=2,class=CODE,delta=1
   186                           	psect	text164,global,reloc=2,class=CODE,delta=1
   187                           	psect	text165,global,reloc=4,class=CODE,delta=1
   188                           	psect	text166,global,reloc=4,class=CODE,delta=1
   189                           	psect	text167,global,reloc=2,class=CODE,delta=1
   190                           	psect	text168,global,reloc=2,class=CODE,delta=1
   191                           	psect	text169,global,reloc=2,class=CODE,delta=1
   192                           	psect	text170,global,reloc=4,class=CODE,delta=1
   193                           	psect	text171,global,reloc=4,class=CODE,delta=1
   194                           	psect	text172,global,reloc=2,class=CODE,delta=1
   195                           	psect	text173,global,reloc=4,class=CODE,delta=1
   196                           	psect	text174,global,reloc=2,class=CODE,delta=1
   197                           	psect	text175,global,reloc=4,class=CODE,delta=1
   198                           	psect	text176,global,reloc=2,class=CODE,delta=1
   199                           	psect	text177,global,reloc=4,class=CODE,delta=1
   200                           	psect	text178,global,reloc=2,class=CODE,delta=1
   201                           	psect	text179,global,reloc=2,class=CODE,delta=1
   202                           	psect	text180,global,reloc=4,class=CODE,delta=1
   203                           	psect	text181,global,reloc=4,class=CODE,delta=1
   204                           	psect	text182,global,reloc=4,class=CODE,delta=1
   205                           	psect	text183,global,reloc=4,class=CODE,delta=1
   206                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   207                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   208                           	psect	text184,global,reloc=4,class=CODE,delta=1
   209                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   210                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   211  0000                     
   212                           ; Version 2.10
   213                           ; Generated 31/07/2019 GMT
   214                           ; 
   215                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   216                           ; All rights reserved.
   217                           ; 
   218                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   219                           ; 
   220                           ; Redistribution and use in source and binary forms, with or without modification, are
   221                           ; permitted provided that the following conditions are met:
   222                           ; 
   223                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   224                           ;        conditions and the following disclaimer.
   225                           ; 
   226                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   227                           ;        of conditions and the following disclaimer in the documentation and/or other
   228                           ;        materials provided with the distribution.
   229                           ; 
   230                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   231                           ;        software without specific prior written permission.
   232                           ; 
   233                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   234                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   235                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   236                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   237                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   238                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   239                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   240                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   241                           ; 
   242                           ; 
   243                           ; Code-generator required, PIC18F57K42 Definitions
   244                           ; 
   245                           ; SFR Addresses
   246  0000                     
   247 ;;_main$3870	offset	0
   248 ;;_main$3866	offset	2
   249 ;;_esr_temp	offset	4
   250 ;;_i_esr	offset	8
   251 ;;_shape	offset	10
   252 ;;_inp_index	offset	11
   253 ;;_k	offset	12
   254 ;;_j	offset	13
   255 ;;_i	offset	14
   256 ;;_mode	offset	15
   257 ;;_i_ror	offset	16
   258 ;;_s	offset=-2 (param)
   259 ;;_c	offset	0
   260 ;;_shape	offset=-1 (param)
   261 ;;_reset	offset=-2 (param)
   262 ;;_voltage	offset=-4 (param)
   263 ;;_voltage	offset=-4 (param)
   264 ;;_voltage	offset=-4 (param)
   265 ;;_set	offset=-1 (param)
   266 ;;_data	offset=-1 (param)
   267 ;;_cmd	offset=-1 (param)
   268 ;;_cmd	offset=-1 (param)
   269 ;;_data	offset=-1 (param)
   270 ;;__this	offset=-2 (param)
   271 ;;_soc	offset	0
   272 ;;_slot	offset	2
   273 ;;_cvoltage	offset=-4 (param)
   274 ;;_h	offset=-2 (param)
   275 ;;_h	offset=-2 (param)
   276 ;;_i	offset=-1 (param)
   277 ;;_fsm	offset=-1 (param)
   278 ;;_channel	offset=-1 (param)
   279 ;;_mode	offset=-1 (param)
   280 ;;_mode	offset=-1 (param)
   281 ;;_cmd	offset=-1 (param)
   282 ;;_i	offset	0
   283 ;;_h	offset=-2 (param)
   284 ;;_flipper	offset=-1 (param)
   285 ;;_f	offset	0
   286 ;;_ap	offset	6
   287 ;;_s	offset=-3 (param)
   288 ;;_fmt	offset=-5 (param)
   289 ;;_line	offset=-1 (param)
   290 ;;_vterm	offset=-2 (param)
   291 ;;_numMilliseconds	offset=-2 (param)
   292 ;;_vterm	offset=-1 (param)
   293 ;;_row	offset	0
   294 ;;_r	offset=-1 (param)
   295 ;;_c	offset=-2 (param)
   296 ;;_strPtr	offset=-4 (param)
   297 ;;_strPtr	offset=-1 (param)
   298 ;;_delay	offset=-4 (param)
   299 ;;_strPtr	offset=-1 (param)
   300 ;;_strPtr	offset=-2 (param)
   301 ;;__this	offset=-2 (param)
   302 ;;_clearBuffer	offset=-3 (param)
   303 ;;_s	offset	0
   304 ;;_k	offset	2
   305 ;;_dest	offset=-2 (param)
   306 ;;_c	offset=-4 (param)
   307 ;;_n	offset=-6 (param)
   308 ;;_ap	offset	0
   309 ;;_fmt	offset=-3 (param)
   310 ;;_cfmt	offset	0
   311 ;;_fp	offset=-2 (param)
   312 ;;_fmt	offset=-4 (param)
   313 ;;_ap	offset=-6 (param)
   314 ;;_vfpfcnvrt$5712	offset	0
   315 ;;_vfpfcnvrt$5723	offset	2
   316 ;;_vfpfcnvrt$5711	offset	4
   317 ;;_llu	offset	6
   318 ;;_ll	offset	14
   319 ;;_f	offset	22
   320 ;;_ct	offset	26
   321 ;;_cp	offset	29
   322 ;;_c	offset	31
   323 ;;_fp	offset=-2 (param)
   324 ;;_fmt	offset=-4 (param)
   325 ;;_ap	offset=-6 (param)
   326 ;;_xtoa$5697	offset	0
   327 ;;_xtoa$5696	offset	2
   328 ;;_n	offset	4
   329 ;;_c	offset	12
   330 ;;_i	offset	14
   331 ;;_w	offset	16
   332 ;;_p	offset	18
   333 ;;_fp	offset=-2 (param)
   334 ;;_d	offset=-10 (param)
   335 ;;_x	offset=-11 (param)
   336 ;;_toupper$6503	offset	0
   337 ;;_c	offset=-2 (param)
   338 ;;_c	offset=-2 (param)
   339 ;;_c	offset=-2 (param)
   340 ;;_n	offset	0
   341 ;;_i	offset	8
   342 ;;_w	offset	10
   343 ;;_p	offset	12
   344 ;;_fp	offset=-2 (param)
   345 ;;_d	offset=-10 (param)
   346 ;;_counter	offset	0
   347 ;;_dividend	offset=-8 (param)
   348 ;;_divisor	offset=-16 (param)
   349 ;;_quotient	offset	0
   350 ;;_counter	offset	8
   351 ;;_dividend	offset=-8 (param)
   352 ;;_divisor	offset=-16 (param)
   353 ;;_r	offset	0
   354 ;;_l	offset	2
   355 ;;__l	offset=-2 (param)
   356 ;;__r	offset=-4 (param)
   357 ;;_n	offset=-6 (param)
   358 ;;_nuls	offset	0
   359 ;;_l	offset	7
   360 ;;_p	offset	9
   361 ;;_cp	offset	11
   362 ;;_w	offset	13
   363 ;;_i	offset	15
   364 ;;_fp	offset=-2 (param)
   365 ;;_s	offset=-4 (param)
   366 ;;_efgtoa$5669	offset	0
   367 ;;_efgtoa$5668	offset	2
   368 ;;_efgtoa$5667	offset	4
   369 ;;_efgtoa$5663	offset	6
   370 ;;_efgtoa$5659	offset	8
   371 ;;_efgtoa$5658	offset	10
   372 ;;_u	offset	12
   373 ;;_g	offset	16
   374 ;;_l	offset	20
   375 ;;_h	offset	24
   376 ;;_ou	offset	28
   377 ;;_n	offset	32
   378 ;;_e	offset	34
   379 ;;_i	offset	36
   380 ;;_w	offset	38
   381 ;;_p	offset	40
   382 ;;_sign	offset	42
   383 ;;_d	offset	44
   384 ;;_ne	offset	46
   385 ;;_m	offset	48
   386 ;;_pp	offset	50
   387 ;;_t	offset	52
   388 ;;_mode	offset	54
   389 ;;_nmode	offset	55
   390 ;;_fp	offset=-2 (param)
   391 ;;_f	offset=-6 (param)
   392 ;;_c	offset=-7 (param)
   393 ;;_tolower$6488	offset	0
   394 ;;_c	offset=-2 (param)
   395 ;;_c	offset=-2 (param)
   396 ;;_d	offset	0
   397 ;;_s	offset	2
   398 ;;_dest	offset=-2 (param)
   399 ;;_src	offset=-4 (param)
   400 ;;_u	offset	0
   401 ;;_m	offset	4
   402 ;;_e	offset	8
   403 ;;_x	offset=-4 (param)
   404 ;;_u	offset	0
   405 ;;_e	offset	4
   406 ;;_x	offset=-4 (param)
   407 ;;_exp1	offset	0
   408 ;;_sign1	offset	1
   409 ;;_f1	offset=-4 (param)
   410 ;;_f1	offset=-4 (param)
   411 ;;_ff1	offset=-4 (param)
   412 ;;_ff2	offset=-8 (param)
   413 ;;_sign	offset	0
   414 ;;_counter	offset	1
   415 ;;_dividend	offset=-2 (param)
   416 ;;_divisor	offset=-4 (param)
   417 ;;_quotient	offset	0
   418 ;;_sign	offset	2
   419 ;;_counter	offset	3
   420 ;;_dividend	offset=-2 (param)
   421 ;;_divisor	offset=-4 (param)
   422 ;;_dtoa$5635	offset	0
   423 ;;_n	offset	2
   424 ;;_i	offset	10
   425 ;;_s	offset	12
   426 ;;_w	offset	14
   427 ;;_p	offset	16
   428 ;;_fp	offset=-2 (param)
   429 ;;_d	offset=-10 (param)
   430 ;;_a	offset=-2 (param)
   431 ;;_sign	offset	0
   432 ;;_counter	offset	1
   433 ;;_dividend	offset=-8 (param)
   434 ;;_divisor	offset=-16 (param)
   435 ;;_quotient	offset	0
   436 ;;_sign	offset	8
   437 ;;_counter	offset	9
   438 ;;_dividend	offset=-8 (param)
   439 ;;_divisor	offset=-16 (param)
   440 ;;_w	offset	0
   441 ;;_fp	offset=-2 (param)
   442 ;;_c	offset=-3 (param)
   443 ;;_w	offset	0
   444 ;;_i	offset	2
   445 ;;_fp	offset=-2 (param)
   446 ;;_buf	offset=-4 (param)
   447 ;;_p	offset=-6 (param)
   448 ;;_a	offset	0
   449 ;;_s	offset=-2 (param)
   450 ;;_i	offset	0
   451 ;;_c	offset	2
   452 ;;_s	offset=-2 (param)
   453 ;;_fp	offset=-4 (param)
   454 ;;_c	offset=-2 (param)
   455 ;;_fp	offset=-4 (param)
   456 ;;_c	offset=-1 (param)
   457 ;;__this	offset=-2 (param)
   458 ;;_c	offset=-3 (param)
   459 ;;_atoi$6219	offset	0
   460 ;;_atoi$6217	offset	2
   461 ;;_atoi$6218	offset	4
   462 ;;_n	offset	5
   463 ;;_neg	offset	7
   464 ;;_s	offset=-2 (param)
   465 ;;_isspace$6268	offset	0
   466 ;;_c	offset=-2 (param)
   467 ;;_c	offset=-2 (param)
   468 ;;_vterm	offset=-1 (param)
   469 ;;_new_response_info	offset=-1 (param)
   470 ;;_new_response_info	offset=-1 (param)
   471 ;;_level	offset=-2 (param)
   472 ;;_dutyValue	offset=-2 (param)
   473 ;;_timer	offset=-1 (param)
   474 ;;_timer	offset=-1 (param)
   475 ;;_count	offset=-3 (param)
   476 ;;_h	offset=-2 (param)
   477 ;;_u	offset	0
   478 ;;_x	offset=-4 (param)
   479 ;;_chan	offset=-1 (param)
   480 ;;_to_what	offset=-2 (param)
   481 ;;_u	offset	0
   482 ;;_s	offset=-2 (param)
   483 ;;_index	offset=-1 (param)
   484 ;;_arg	offset	0
   485 ;;_exp	offset	4
   486 ;;_sign	offset=-1 (param)
   487 ;;_val	offset=-5 (param)
   488 ;;_grs	offset	0
   489 ;;_rem	offset	4
   490 ;;_new_exp	offset	8
   491 ;;_aexp	offset	10
   492 ;;_bexp	offset	11
   493 ;;_sign	offset	12
   494 ;;_b	offset=-4 (param)
   495 ;;_a	offset=-8 (param)
   496 ;;_ff1	offset=-4 (param)
   497 ;;_ff2	offset=-8 (param)
   498 ;;_lp_speed	offset	0
   499 ;;_new	offset=-4 (param)
   500 ;;_bn	offset=-5 (param)
   501 ;;_slow	offset=-6 (param)
   502 ;;_b	offset=-4 (param)
   503 ;;_a	offset=-8 (param)
   504 ;;_grs	offset	0
   505 ;;_bexp	offset	1
   506 ;;_aexp	offset	2
   507 ;;_signs	offset	3
   508 ;;_b	offset=-4 (param)
   509 ;;_a	offset=-8 (param)
   510 ;;_prod	offset	0
   511 ;;_grs	offset	4
   512 ;;_temp	offset	8
   513 ;;_bexp	offset	10
   514 ;;_aexp	offset	11
   515 ;;_sign	offset	12
   516 ;;_b	offset=-4 (param)
   517 ;;_a	offset=-8 (param)
   518 ;;_InterruptHandler	offset=-3 (param)
   519 ;;_InterruptHandler	offset=-3 (param)
   520 ;;_InterruptHandler	offset=-3 (param)
   521 ;;_InterruptHandler	offset=-3 (param)
   522 ;;_InterruptHandler	offset=-3 (param)
   523 ;;_InterruptHandler	offset=-3 (param)
   524 ;;_state	offset	0
   525 ;;_InterruptHandler	offset=-3 (param)
   526 ;;_InterruptHandler	offset=-3 (param)
   527 ;;_InterruptHandler	offset=-3 (param)
   528 ;;_InterruptHandler	offset=-3 (param)
   529 ;;_i	offset	0
   530 ;;_sw_value	offset	1
   531 ;;_timerVal	offset=-2 (param)
   532 ;;_light	offset	0
   533 ;;_mode	offset=-1 (param)
   534 ;;_chan	offset=-1 (param)
   535 ;;_to_what	offset=-2 (param)
   536 ;;_u	offset	0
   537 ;;_s	offset=-2 (param)
   538 ;;_index	offset=-1 (param)
   539 ;;_arg	offset	0
   540 ;;_exp	offset	4
   541 ;;_sign	offset=-1 (param)
   542 ;;_val	offset=-5 (param)
   543 ;;_b	offset=-4 (param)
   544 ;;_a	offset=-8 (param)
   545 ;;_grs	offset	0
   546 ;;_bexp	offset	1
   547 ;;_aexp	offset	2
   548 ;;_signs	offset	3
   549 ;;_b	offset=-4 (param)
   550 ;;_a	offset=-8 (param)
   551 ;;_prod	offset	0
   552 ;;_grs	offset	4
   553 ;;_temp	offset	8
   554 ;;_bexp	offset	10
   555 ;;_aexp	offset	11
   556 ;;_sign	offset	12
   557 ;;_b	offset=-4 (param)
   558 ;;_a	offset=-8 (param)
   559 ;;_grs	offset	0
   560 ;;_rem	offset	4
   561 ;;_new_exp	offset	8
   562 ;;_aexp	offset	10
   563 ;;_bexp	offset	11
   564 ;;_sign	offset	12
   565 ;;_b	offset=-4 (param)
   566 ;;_a	offset=-8 (param)
   567 ;;_ff1	offset=-4 (param)
   568 ;;_ff2	offset=-8 (param)
   569 ;;_timerVal	offset=-2 (param)
   570 ;;_adj	offset	0
   571 ;;_log_ptr	offset	4
   572 ;;_f	offset	0
   573 ;;_ap	offset	6
   574 ;;_s	offset=-3 (param)
   575 ;;_fmt	offset=-5 (param)
   576 ;;_cfmt	offset	0
   577 ;;_fp	offset=-2 (param)
   578 ;;_fmt	offset=-4 (param)
   579 ;;_ap	offset=-6 (param)
   580 ;;_vfpfcnvrt$5712	offset	0
   581 ;;_vfpfcnvrt$5723	offset	2
   582 ;;_vfpfcnvrt$5711	offset	4
   583 ;;_llu	offset	6
   584 ;;_ll	offset	14
   585 ;;_f	offset	22
   586 ;;_ct	offset	26
   587 ;;_cp	offset	29
   588 ;;_c	offset	31
   589 ;;_fp	offset=-2 (param)
   590 ;;_fmt	offset=-4 (param)
   591 ;;_ap	offset=-6 (param)
   592 ;;_xtoa$5697	offset	0
   593 ;;_xtoa$5696	offset	2
   594 ;;_n	offset	4
   595 ;;_c	offset	12
   596 ;;_i	offset	14
   597 ;;_w	offset	16
   598 ;;_p	offset	18
   599 ;;_fp	offset=-2 (param)
   600 ;;_d	offset=-10 (param)
   601 ;;_x	offset=-11 (param)
   602 ;;_toupper$6503	offset	0
   603 ;;_c	offset=-2 (param)
   604 ;;_c	offset=-2 (param)
   605 ;;_c	offset=-2 (param)
   606 ;;_n	offset	0
   607 ;;_i	offset	8
   608 ;;_w	offset	10
   609 ;;_p	offset	12
   610 ;;_fp	offset=-2 (param)
   611 ;;_d	offset=-10 (param)
   612 ;;_counter	offset	0
   613 ;;_dividend	offset=-8 (param)
   614 ;;_divisor	offset=-16 (param)
   615 ;;_quotient	offset	0
   616 ;;_counter	offset	8
   617 ;;_dividend	offset=-8 (param)
   618 ;;_divisor	offset=-16 (param)
   619 ;;_r	offset	0
   620 ;;_l	offset	2
   621 ;;__l	offset=-2 (param)
   622 ;;__r	offset=-4 (param)
   623 ;;_n	offset=-6 (param)
   624 ;;_nuls	offset	0
   625 ;;_l	offset	7
   626 ;;_p	offset	9
   627 ;;_cp	offset	11
   628 ;;_w	offset	13
   629 ;;_i	offset	15
   630 ;;_fp	offset=-2 (param)
   631 ;;_s	offset=-4 (param)
   632 ;;_efgtoa$5669	offset	0
   633 ;;_efgtoa$5668	offset	2
   634 ;;_efgtoa$5667	offset	4
   635 ;;_efgtoa$5663	offset	6
   636 ;;_efgtoa$5659	offset	8
   637 ;;_efgtoa$5658	offset	10
   638 ;;_u	offset	12
   639 ;;_g	offset	16
   640 ;;_l	offset	20
   641 ;;_h	offset	24
   642 ;;_ou	offset	28
   643 ;;_n	offset	32
   644 ;;_e	offset	34
   645 ;;_i	offset	36
   646 ;;_w	offset	38
   647 ;;_p	offset	40
   648 ;;_sign	offset	42
   649 ;;_d	offset	44
   650 ;;_ne	offset	46
   651 ;;_m	offset	48
   652 ;;_pp	offset	50
   653 ;;_t	offset	52
   654 ;;_mode	offset	54
   655 ;;_nmode	offset	55
   656 ;;_fp	offset=-2 (param)
   657 ;;_f	offset=-6 (param)
   658 ;;_c	offset=-7 (param)
   659 ;;_tolower$6488	offset	0
   660 ;;_c	offset=-2 (param)
   661 ;;_c	offset=-2 (param)
   662 ;;_d	offset	0
   663 ;;_s	offset	2
   664 ;;_dest	offset=-2 (param)
   665 ;;_src	offset=-4 (param)
   666 ;;_u	offset	0
   667 ;;_m	offset	4
   668 ;;_e	offset	8
   669 ;;_x	offset=-4 (param)
   670 ;;_u	offset	0
   671 ;;_e	offset	4
   672 ;;_x	offset=-4 (param)
   673 ;;_exp1	offset	0
   674 ;;_sign1	offset	1
   675 ;;_f1	offset=-4 (param)
   676 ;;_f1	offset=-4 (param)
   677 ;;_ff1	offset=-4 (param)
   678 ;;_ff2	offset=-8 (param)
   679 ;;_sign	offset	0
   680 ;;_counter	offset	1
   681 ;;_dividend	offset=-2 (param)
   682 ;;_divisor	offset=-4 (param)
   683 ;;_quotient	offset	0
   684 ;;_sign	offset	2
   685 ;;_counter	offset	3
   686 ;;_dividend	offset=-2 (param)
   687 ;;_divisor	offset=-4 (param)
   688 ;;_dtoa$5635	offset	0
   689 ;;_n	offset	2
   690 ;;_i	offset	10
   691 ;;_s	offset	12
   692 ;;_w	offset	14
   693 ;;_p	offset	16
   694 ;;_fp	offset=-2 (param)
   695 ;;_d	offset=-10 (param)
   696 ;;_a	offset=-2 (param)
   697 ;;_sign	offset	0
   698 ;;_counter	offset	1
   699 ;;_dividend	offset=-8 (param)
   700 ;;_divisor	offset=-16 (param)
   701 ;;_quotient	offset	0
   702 ;;_sign	offset	8
   703 ;;_counter	offset	9
   704 ;;_dividend	offset=-8 (param)
   705 ;;_divisor	offset=-16 (param)
   706 ;;_w	offset	0
   707 ;;_fp	offset=-2 (param)
   708 ;;_c	offset=-3 (param)
   709 ;;_w	offset	0
   710 ;;_i	offset	2
   711 ;;_fp	offset=-2 (param)
   712 ;;_buf	offset=-4 (param)
   713 ;;_p	offset=-6 (param)
   714 ;;_a	offset	0
   715 ;;_s	offset=-2 (param)
   716 ;;_i	offset	0
   717 ;;_c	offset	2
   718 ;;_s	offset=-2 (param)
   719 ;;_fp	offset=-4 (param)
   720 ;;_c	offset=-2 (param)
   721 ;;_fp	offset=-4 (param)
   722 ;;_c	offset=-1 (param)
   723 ;;__this	offset=-2 (param)
   724 ;;_c	offset=-3 (param)
   725 ;;_atoi$6219	offset	0
   726 ;;_atoi$6217	offset	2
   727 ;;_atoi$6218	offset	4
   728 ;;_n	offset	5
   729 ;;_neg	offset	7
   730 ;;_s	offset=-2 (param)
   731 ;;_isspace$6268	offset	0
   732 ;;_c	offset=-2 (param)
   733 ;;_c	offset=-2 (param)
   734 ;;_dsize	offset=-2 (param)
   735 ;;_u	offset	0
   736 ;;_x	offset=-4 (param)
   737 ;;_f1p	offset=-2 (param)
   738 ;;_f2	offset=-6 (param)
   739 ;;_timer	offset=-1 (param)
   740 ;;_count	offset=-3 (param)
   741 ;;_channel	offset=-1 (param)
   742 ;;_i	offset	0
   743                           
   744                           	psect	idataBIGRAM
   745  016B54                     __pidataBIGRAM:
   746                           	opt callstack 0
   747                           
   748                           ;initializer for _port_data
   749  016B54  FF                 	db	255
   750  016B55  00                 	db	0
   751  016B56  FF                 	db	255
   752  016B57  00                 	db	0
   753  016B58  FF                 	db	255
   754  016B59  00                 	db	0
   755  016B5A  FF                 	db	255
   756  016B5B  00                 	db	0
   757  016B5C  FF                 	db	255
   758  016B5D  00                 	db	0
   759  016B5E  FF                 	db	255
   760  016B5F  00                 	db	0
   761  016B60  FF                 	db	255
   762  016B61  00                 	db	0
   763  016B62  FF                 	db	255
   764  016B63  00                 	db	0
   765  016B64  00                 	db	0
   766  016B65  00                 	db	0
   767  016B66  00                 	db	0
   768  016B67  00                 	db	0
   769  016B68  00                 	db	0
   770  016B69  00                 	db	0
   771  016B6A  00                 	db	0
   772  016B6B  00                 	db	0
   773  016B6C  00                 	db	0
   774  016B6D  00                 	db	0
   775  016B6E  00                 	db	0
   776  016B6F  00                 	db	0
   777  016B70  00                 	db	0
   778  016B71  00                 	db	0
   779  016B72  00                 	db	0
   780  016B73  00                 	db	0
   781  016B74  00                 	db	0
   782  016B75  00                 	db	0
   783  016B76  00                 	db	0
   784  016B77  00                 	db	0
   785  016B78  00                 	db	0
   786  016B79  00                 	db	0
   787  016B7A  00                 	db	0
   788  016B7B  00                 	db	0
   789  016B7C  00                 	db	0
   790  016B7D  00                 	db	0
   791  016B7E  00                 	db	0
   792  016B7F  00                 	db	0
   793  016B80  00                 	db	0
   794  016B81  00                 	db	0
   795  016B82  00                 	db	0
   796  016B83  00                 	db	0
   797  016B84  00                 	db	0
   798  016B85  00                 	db	0
   799  016B86  00                 	db	0
   800  016B87  00                 	db	0
   801  016B88  00                 	db	0
   802  016B89  00                 	db	0
   803  016B8A  00                 	db	0
   804  016B8B  00                 	db	0
   805  016B8C  00                 	db	0
   806  016B8D  00                 	db	0
   807  016B8E  00                 	db	0
   808  016B8F  00                 	db	0
   809  016B90  00                 	db	0
   810  016B91  00                 	db	0
   811  016B92  00                 	db	0
   812  016B93  00                 	db	0
   813  016B94  00                 	db	0
   814  016B95  00                 	db	0
   815  016B96  00                 	db	0
   816  016B97  00                 	db	0
   817  016B98  00                 	db	0
   818  016B99  00                 	db	0
   819  016B9A  00                 	db	0
   820  016B9B  00                 	db	0
   821  016B9C  00                 	db	0
   822  016B9D  00                 	db	0
   823  016B9E  00                 	db	0
   824  016B9F  00                 	db	0
   825  016BA0  00                 	db	0
   826  016BA1  00                 	db	0
   827  016BA2  00                 	db	0
   828  016BA3  00                 	db	0
   829  016BA4  00                 	db	0
   830  016BA5  00                 	db	0
   831  016BA6  00                 	db	0
   832  016BA7  00                 	db	0
   833  016BA8  00                 	db	0
   834  016BA9  00                 	db	0
   835  016BAA  00                 	db	0
   836  016BAB  00                 	db	0
   837  016BAC  00                 	db	0
   838  016BAD  00                 	db	0
   839  016BAE  00                 	db	0
   840  016BAF  00                 	db	0
   841  016BB0  00                 	db	0
   842  016BB1  00                 	db	0
   843  016BB2  00                 	db	0
   844  016BB3  00                 	db	0
   845  016BB4  00                 	db	0
   846  016BB5  00                 	db	0
   847  016BB6  00                 	db	0
   848  016BB7  00                 	db	0
   849  016BB8  00                 	db	0
   850  016BB9  00                 	db	0
   851  016BBA  00                 	db	0
   852  016BBB  00                 	db	0
   853  016BBC  00                 	db	0
   854  016BBD  00                 	db	0
   855  016BBE  00                 	db	0
   856  016BBF  00                 	db	0
   857  016BC0  00                 	db	0
   858  016BC1  00                 	db	0
   859  016BC2  00                 	db	0
   860  016BC3  00                 	db	0
   861  016BC4  00                 	db	0
   862  016BC5  00                 	db	0
   863  016BC6  00                 	db	0
   864  016BC7  00                 	db	0
   865  016BC8  00                 	db	0
   866  016BC9  00                 	db	0
   867  016BCA  00                 	db	0
   868  016BCB  00                 	db	0
   869  016BCC  00                 	db	0
   870  016BCD  00                 	db	0
   871  016BCE  00                 	db	0
   872  016BCF  00                 	db	0
   873  016BD0  00                 	db	0
   874  016BD1  00                 	db	0
   875  016BD2  00                 	db	0
   876  016BD3  00                 	db	0
   877  016BD4  00                 	db	0
   878  016BD5  00                 	db	0
   879  016BD6  00                 	db	0
   880  016BD7  00                 	db	0
   881  016BD8  00                 	db	0
   882  016BD9  00                 	db	0
   883  016BDA  00                 	db	0
   884  016BDB  00                 	db	0
   885  016BDC  00                 	db	0
   886  016BDD  00                 	db	0
   887  016BDE  00                 	db	0
   888  016BDF  00                 	db	0
   889  016BE0  00                 	db	0
   890  016BE1  00                 	db	0
   891  016BE2  00                 	db	0
   892  016BE3  00                 	db	0
   893  016BE4  00                 	db	0
   894  016BE5  00                 	db	0
   895  016BE6  00                 	db	0
   896  016BE7  00                 	db	0
   897  016BE8  00                 	db	0
   898  016BE9  00                 	db	0
   899  016BEA  00                 	db	0
   900  016BEB  00                 	db	0
   901  016BEC  00                 	db	0
   902  016BED  00                 	db	0
   903  016BEE  00                 	db	0
   904  016BEF  00                 	db	0
   905  016BF0  00                 	db	0
   906  016BF1  00                 	db	0
   907  016BF2  00                 	db	0
   908  016BF3  00                 	db	0
   909  016BF4  00                 	db	0
   910  016BF5  00                 	db	0
   911  016BF6  00                 	db	0
   912  016BF7  00                 	db	0
   913  016BF8  00                 	db	0
   914  016BF9  00                 	db	0
   915  016BFA  00                 	db	0
   916  016BFB  00                 	db	0
   917  016BFC  00                 	db	0
   918  016BFD  00                 	db	0
   919  016BFE  00                 	db	0
   920  016BFF  00                 	db	0
   921  016C00  00                 	db	0
   922  016C01  00                 	db	0
   923  016C02  00                 	db	0
   924  016C03  00                 	db	0
   925  016C04  00                 	db	0
   926  016C05  00                 	db	0
   927  016C06  00                 	db	0
   928  016C07  00                 	db	0
   929  016C08  00                 	db	0
   930  016C09  00                 	db	0
   931  016C0A  00                 	db	0
   932  016C0B  00                 	db	0
   933  016C0C  00                 	db	0
   934  016C0D  00                 	db	0
   935  016C0E  00                 	db	0
   936  016C0F  00                 	db	0
   937  016C10  00                 	db	0
   938  016C11  00                 	db	0
   939  016C12  00                 	db	0
   940  016C13  00                 	db	0
   941  016C14  00                 	db	0
   942  016C15  00                 	db	0
   943  016C16  00                 	db	0
   944  016C17  00                 	db	0
   945  016C18  00                 	db	0
   946  016C19  00                 	db	0
   947  016C1A  00                 	db	0
   948  016C1B  00                 	db	0
   949  016C1C  00                 	db	0
   950  016C1D  00                 	db	0
   951  016C1E  00                 	db	0
   952  016C1F  00                 	db	0
   953  016C20  00                 	db	0
   954  016C21  00                 	db	0
   955  016C22  00                 	db	0
   956  016C23  00                 	db	0
   957  016C24  00                 	db	0
   958  016C25  00                 	db	0
   959  016C26  00                 	db	0
   960  016C27  00                 	db	0
   961  016C28  00                 	db	0
   962  016C29  00                 	db	0
   963  016C2A  00                 	db	0
   964  016C2B  00                 	db	0
   965  016C2C  00                 	db	0
   966  016C2D  00                 	db	0
   967  016C2E  00                 	db	0
   968  016C2F  00                 	db	0
   969  016C30  00                 	db	0
   970  016C31  00                 	db	0
   971  016C32  00                 	db	0
   972  016C33  00                 	db	0
   973  016C34  00                 	db	0
   974  016C35  00                 	db	0
   975  016C36  00                 	db	0
   976  016C37  00                 	db	0
   977  016C38  00                 	db	0
   978  016C39  00                 	db	0
   979  016C3A  00                 	db	0
   980  016C3B  00                 	db	0
   981  016C3C  00                 	db	0
   982  016C3D  00                 	db	0
   983  016C3E  00                 	db	0
   984  016C3F  00                 	db	0
   985  016C40  00                 	db	0
   986  016C41  00                 	db	0
   987  016C42  00                 	db	0
   988  016C43  00                 	db	0
   989  016C44  00                 	db	0
   990  016C45  00                 	db	0
   991  016C46  00                 	db	0
   992  016C47  00                 	db	0
   993  016C48  00                 	db	0
   994  016C49  00                 	db	0
   995  016C4A  00                 	db	0
   996  016C4B  00                 	db	0
   997  016C4C  00                 	db	0
   998  016C4D  00                 	db	0
   999  016C4E  00                 	db	0
  1000  016C4F  00                 	db	0
  1001  016C50  00                 	db	0
  1002  016C51  00                 	db	0
  1003  016C52  00                 	db	0
  1004  016C53  00                 	db	0
  1005  016C54  00                 	db	0
  1006  016C55  00                 	db	0
  1007  016C56  00                 	db	0
  1008  016C57  00                 	db	0
  1009  016C58  00                 	db	0
  1010  016C59  00                 	db	0
  1011  016C5A  00                 	db	0
  1012  016C5B  00                 	db	0
  1013  016C5C  00                 	db	0
  1014  016C5D  00                 	db	0
  1015  016C5E  00                 	db	0
  1016  016C5F  00                 	db	0
  1017  016C60  00                 	db	0
  1018  016C61  00                 	db	0
  1019  016C62  00                 	db	0
  1020  016C63  00                 	db	0
  1021  016C64  00                 	db	0
  1022  016C65  00                 	db	0
  1023  016C66  00                 	db	0
  1024  016C67  00                 	db	0
  1025  016C68  00                 	db	0
  1026  016C69  00                 	db	0
  1027  016C6A  00                 	db	0
  1028  016C6B  00                 	db	0
  1029  016C6C  00                 	db	0
  1030  016C6D  00                 	db	0
  1031  016C6E  00                 	db	0
  1032  016C6F  00                 	db	0
  1033  016C70  00                 	db	0
  1034  016C71  00                 	db	0
  1035  016C72  00                 	db	0
  1036  016C73  00                 	db	0
  1037  016C74  00                 	db	0
  1038  016C75  00                 	db	0
  1039  016C76  00                 	db	0
  1040  016C77  00                 	db	0
  1041  016C78  00                 	db	0
  1042  016C79  00                 	db	0
  1043  016C7A  00                 	db	0
  1044  016C7B  00                 	db	0
  1045  016C7C  00                 	db	0
  1046  016C7D  00                 	db	0
  1047  016C7E  00                 	db	0
  1048  016C7F  00                 	db	0
  1049  016C80  00                 	db	0
  1050  016C81  00                 	db	0
  1051  016C82  00                 	db	0
  1052  016C83  00                 	db	0
  1053  016C84  00                 	db	0
  1054  016C85  00                 	db	0
  1055  016C86  00                 	db	0
  1056  016C87  00                 	db	0
  1057  016C88  00                 	db	0
  1058  016C89  00                 	db	0
  1059  016C8A  00                 	db	0
  1060  016C8B  00                 	db	0
  1061  016C8C  00                 	db	0
  1062  016C8D  00                 	db	0
  1063  016C8E  00                 	db	0
  1064  016C8F  00                 	db	0
  1065  016C90  00                 	db	0
  1066  016C91  00                 	db	0
  1067  016C92  00                 	db	0
  1068  016C93  00                 	db	0
  1069  016C94  00                 	db	0
  1070  016C95  00                 	db	0
  1071  016C96  00                 	db	0
  1072  016C97  00                 	db	0
  1073  016C98  00                 	db	0
  1074  016C99  00                 	db	0
  1075  016C9A  00                 	db	0
  1076  016C9B  00                 	db	0
  1077  016C9C  00                 	db	0
  1078  016C9D  00                 	db	0
  1079  016C9E  00                 	db	0
  1080  016C9F  00                 	db	0
  1081  016CA0  00                 	db	0
  1082  016CA1  00                 	db	0
  1083  016CA2  00                 	db	0
  1084  016CA3  00                 	db	0
  1085  016CA4  00                 	db	0
  1086  016CA5  00                 	db	0
  1087  016CA6  00                 	db	0
  1088  016CA7  00                 	db	0
  1089  016CA8  00                 	db	0
  1090  016CA9  00                 	db	0
  1091  016CAA  00                 	db	0
  1092  016CAB  00                 	db	0
  1093  016CAC  00                 	db	0
  1094  016CAD  00                 	db	0
  1095  016CAE  00                 	db	0
  1096  016CAF  00                 	db	0
  1097  016CB0  00                 	db	0
  1098  016CB1  00                 	db	0
  1099  016CB2  00                 	db	0
  1100  016CB3  00                 	db	0
  1101  016CB4  00                 	db	0
  1102  016CB5  00                 	db	0
  1103  016CB6  00                 	db	0
  1104  016CB7  00                 	db	0
  1105  016CB8  00                 	db	0
  1106  016CB9  00                 	db	0
  1107  016CBA  00                 	db	0
  1108  016CBB  00                 	db	0
  1109  016CBC  00                 	db	0
  1110  016CBD  00                 	db	0
  1111  016CBE  00                 	db	0
  1112  016CBF  00                 	db	0
  1113  016CC0  00                 	db	0
  1114  016CC1  00                 	db	0
  1115  016CC2  00                 	db	0
  1116  016CC3  00                 	db	0
  1117  016CC4  00                 	db	0
  1118  016CC5  00                 	db	0
  1119  016CC6  00                 	db	0
  1120  016CC7  00                 	db	0
  1121  016CC8  00                 	db	0
  1122  016CC9  00                 	db	0
  1123  016CCA  00                 	db	0
  1124  016CCB  00                 	db	0
  1125  016CCC  00                 	db	0
  1126  016CCD  00                 	db	0
  1127  016CCE  00                 	db	0
  1128  016CCF  00                 	db	0
  1129  016CD0  00                 	db	0
  1130  016CD1  00                 	db	0
  1131  016CD2  00                 	db	0
  1132  016CD3  00                 	db	0
  1133  016CD4  00                 	db	0
  1134  016CD5  00                 	db	0
  1135  016CD6  00                 	db	0
  1136  016CD7  00                 	db	0
  1137  016CD8  00                 	db	0
  1138  016CD9  00                 	db	0
  1139  016CDA  00                 	db	0
  1140  016CDB  00                 	db	0
  1141  016CDC  00                 	db	0
  1142  016CDD  00                 	db	0
  1143  016CDE  00                 	db	0
  1144  016CDF  00                 	db	0
  1145  016CE0  00                 	db	0
  1146  016CE1  00                 	db	0
  1147  016CE2  00                 	db	0
  1148  016CE3  00                 	db	0
  1149  016CE4  00                 	db	0
  1150  016CE5  00                 	db	0
  1151  016CE6  00                 	db	0
  1152  016CE7  00                 	db	0
  1153  016CE8  00                 	db	0
  1154  016CE9  00                 	db	0
  1155  016CEA  00                 	db	0
  1156  016CEB  00                 	db	0
  1157  016CEC  00                 	db	0
  1158  016CED  00                 	db	0
  1159  016CEE  00                 	db	0
  1160  016CEF  00                 	db	0
  1161  016CF0  00                 	db	0
  1162  016CF1  00                 	db	0
  1163  016CF2  00                 	db	0
  1164  016CF3  00                 	db	0
  1165  016CF4  00                 	db	0
  1166  016CF5  00                 	db	0
  1167  016CF6  00                 	db	0
  1168  016CF7  00                 	db	0
  1169  016CF8  00                 	db	0
  1170  016CF9  00                 	db	0
  1171  016CFA  00                 	db	0
  1172  016CFB  00                 	db	0
  1173  016CFC  00                 	db	0
  1174  016CFD  00                 	db	0
  1175  016CFE  00                 	db	0
  1176  016CFF  00                 	db	0
  1177  016D00  00                 	db	0
  1178  016D01  00                 	db	0
  1179  016D02  00                 	db	0
  1180  016D03  00                 	db	0
  1181  016D04  00                 	db	0
  1182  016D05  00                 	db	0
  1183  016D06  00                 	db	0
  1184  016D07  00                 	db	0
  1185  016D08  00                 	db	0
  1186  016D09  00                 	db	0
  1187  016D0A  00                 	db	0
  1188  016D0B  00                 	db	0
  1189  016D0C  00                 	db	0
  1190  016D0D  00                 	db	0
  1191  016D0E  00                 	db	0
  1192  016D0F  00                 	db	0
  1193  016D10  00                 	db	0
  1194  016D11  00                 	db	0
  1195  016D12  00                 	db	0
  1196  016D13  00                 	db	0
  1197  016D14  00                 	db	0
  1198  016D15  00                 	db	0
  1199  016D16  00                 	db	0
  1200  016D17  00                 	db	0
  1201  016D18  00                 	db	0
  1202  016D19  00                 	db	0
  1203  016D1A  00                 	db	0
  1204  016D1B  00                 	db	0
  1205  016D1C  00                 	db	0
  1206  016D1D  00                 	db	0
  1207  016D1E  00                 	db	0
  1208  016D1F  00                 	db	0
  1209  016D20  00                 	db	0
  1210  016D21  00                 	db	0
  1211  016D22  00                 	db	0
  1212  016D23  00                 	db	0
  1213  016D24  00                 	db	0
  1214  016D25  00                 	db	0
  1215  016D26  00                 	db	0
  1216  016D27  00                 	db	0
  1217  016D28  00                 	db	0
  1218  016D29  00                 	db	0
  1219  016D2A  00                 	db	0
  1220  016D2B  00                 	db	0
  1221  016D2C  00                 	db	0
  1222  016D2D  00                 	db	0
  1223  016D2E  00                 	db	0
  1224  016D2F  00                 	db	0
  1225  016D30  00                 	db	0
  1226  016D31  00                 	db	0
  1227  016D32  00                 	db	0
  1228  016D33  00                 	db	0
  1229  016D34  00                 	db	0
  1230  016D35  00                 	db	0
  1231  016D36  00                 	db	0
  1232  016D37  00                 	db	0
  1233  016D38  00                 	db	0
  1234  016D39  00                 	db	0
  1235  016D3A  00                 	db	0
  1236  016D3B  00                 	db	0
  1237  016D3C  00                 	db	0
  1238  016D3D  00                 	db	0
  1239  016D3E  00                 	db	0
  1240  016D3F  00                 	db	0
  1241  016D40  00                 	db	0
  1242  016D41  00                 	db	0
  1243  016D42  00                 	db	0
  1244  016D43  00                 	db	0
  1245  016D44  00                 	db	0
  1246  016D45  00                 	db	0
  1247  016D46  00                 	db	0
  1248  016D47  00                 	db	0
  1249  016D48  00                 	db	0
  1250  016D49  00                 	db	0
  1251  016D4A  00                 	db	0
  1252  016D4B  00                 	db	0
  1253  016D4C  00                 	db	0
  1254  016D4D  00                 	db	0
  1255  016D4E  00                 	db	0
  1256  016D4F  00                 	db	0
  1257  016D50  00                 	db	0
  1258  016D51  00                 	db	0
  1259  016D52  00                 	db	0
  1260  016D53  00                 	db	0
  1261                           
  1262                           ;initializer for _C
  1263  016D54  0000               	dw	0
  1264  016D56  0000               	dw	0
  1265  016D58  0000               	dw	0
  1266  016D5A  0000               	dw	0
  1267  016D5C  0000               	dw	0
  1268  016D5E  0000               	dw	0
  1269  016D60  0000               	dw	0
  1270  016D62  0000               	dw	0
  1271  016D64  0000               	dw	0
  1272  016D66  0000               	dw	0
  1273  016D68  0000               	dw	0
  1274  016D6A  0000               	dw	0
  1275  016D6C  0000               	dw	0
  1276  016D6E  0000               	dw	0
  1277  016D70  0000               	dw	0
  1278  016D72  0000               	dw	0
  1279  016D74  0000               	dw	0
  1280  016D76  0000               	dw	0
  1281  016D78  0000               	dw	0
  1282  016D7A  0000               	dw	0
  1283  016D7C  0000               	dw	0
  1284  016D7E  0000               	dw	0
  1285  016D80  0000               	dw	0
  1286  016D82  0000               	dw	0
  1287  016D84  0000               	dw	0
  1288  016D86  0000               	dw	0
  1289  016D88  0000               	dw	0
  1290  016D8A  0000               	dw	0
  1291  016D8C  0000               	dw	0
  1292  016D8E  0000               	dw	0
  1293  016D90  0000               	dw	0
  1294  016D92  0000               	dw	0
  1295  016D94  0000               	dw	0
  1296  016D96  0000               	dw	0
  1297  016D98  0000               	dw	0
  1298  016D9A  0000               	dw	0
  1299  016D9C  0000               	dw	0
  1300  016D9E  0000               	dw	0
  1301  016DA0  0000               	dw	0
  1302  016DA2  0000               	dw	0
  1303  016DA4  0000               	dw	0
  1304  016DA6  0000               	dw	0
  1305  016DA8  0000               	dw	0
  1306  016DAA  0000               	dw	0
  1307  016DAC  0000               	dw	0
  1308  016DAE  0000               	dw	0
  1309  016DB0  0000               	dw	0
  1310  016DB2  0000               	dw	0
  1311  016DB4  0000               	dw	0
  1312  016DB6  0000               	dw	0
  1313  016DB8  0000               	dw	0
  1314  016DBA  0000               	dw	0
  1315  016DBC  0000               	dw	0
  1316  016DBE  0000               	dw	0
  1317  016DC0  0000               	dw	0
  1318  016DC2  0000               	dw	0
  1319  016DC4  0000               	dw	0
  1320  016DC6  0000               	dw	0
  1321  016DC8  0000               	dw	0
  1322  016DCA  0000               	dw	0
  1323  016DCC  0000               	dw	0
  1324  016DCE  0000               	dw	0
  1325  016DD0  0000               	dw	0
  1326  016DD2  0000               	dw	0
  1327  016DD4  0000               	dw	0
  1328  016DD6  0000               	dw	0
  1329  016DD8  0000               	dw	0
  1330  016DDA  0000               	dw	0
  1331  016DDC  0000               	dw	0
  1332  016DDE  0000               	dw	0
  1333  016DE0  0000               	dw	0
  1334  016DE2  42FA               	dw	17146
  1335  016DE4  0000               	dw	0
  1336  016DE6  0000               	dw	0
  1337  016DE8  0000               	dw	0
  1338  016DEA  0000               	dw	0
  1339  016DEC  0000               	dw	0
  1340  016DEE  0000               	dw	0
  1341  016DF0  0000               	dw	0
  1342  016DF2  0000               	dw	0
  1343  016DF4  0000               	dw	0
  1344  016DF6  0000               	dw	0
  1345  016DF8  0000               	dw	0
  1346  016DFA  0000               	dw	0
  1347  016DFC  0000               	dw	0
  1348  016DFE  0000               	dw	0
  1349  016E00  0000               	dw	0
  1350  016E02  0000               	dw	0
  1351  016E04  0000               	dw	0
  1352  016E06  0000               	dw	0
  1353  016E08  0000               	dw	0
  1354  016E0A  0000               	dw	0
  1355  016E0C  00                 	db	0
  1356  016E0D  01                 	db	1
  1357  016E0E  0000               	dw	0
  1358  016E10  3F80               	dw	16256
  1359  016E12  0000               	dw	0
  1360  016E14  3F80               	dw	16256
  1361  016E16  00                 	db	0
  1362  016E17  00                 	db	0
  1363  016E18  00                 	db	0
  1364  016E19  00                 	db	0
  1365  016E1A  00                 	db	0
  1366  016E1B  00                 	db	0
  1367  016E1C  00                 	db	0
  1368  016E1D  00                 	db	0
  1369  016E1E  00                 	db	0
  1370  016E1F  00                 	db	0
  1371  016E20  00                 	db	0
  1372  016E21  00                 	db	0
  1373  016E22  00                 	db	0
  1374  016E23  00                 	db	0
  1375  016E24  00                 	db	0
  1376  016E25  00                 	db	0
  1377  016E26  00                 	db	0
  1378  016E27  00                 	db	0
  1379  016E28  00                 	db	0
  1380  016E29  00                 	db	0
  1381  016E2A  00                 	db	0
  1382  016E2B  00                 	db	0
  1383  016E2C  00                 	db	0
  1384  016E2D  00                 	db	0
  1385  016E2E  00                 	db	0
  1386  016E2F  00                 	db	0
  1387  016E30  00                 	db	0
  1388  016E31  00                 	db	0
  1389  016E32  00                 	db	0
  1390  016E33  00                 	db	0
  1391  016E34  00                 	db	0
  1392  016E35  00                 	db	0
  1393  016E36  00                 	db	0
  1394  016E37  00                 	db	0
  1395  016E38  00                 	db	0
  1396  016E39  00                 	db	0
  1397  016E3A  00                 	db	0
  1398  016E3B  00                 	db	0
  1399  016E3C  00                 	db	0
  1400  016E3D  00                 	db	0
  1401  016E3E  00                 	db	0
  1402  016E3F  00                 	db	0
  1403  016E40  00                 	db	0
  1404  016E41  00                 	db	0
  1405  016E42  00                 	db	0
  1406  016E43  00                 	db	0
  1407  016E44  00                 	db	0
  1408  016E45  00                 	db	0
  1409  016E46  00                 	db	0
  1410  016E47  00                 	db	0
  1411  016E48  00                 	db	0
  1412  016E49  00                 	db	0
  1413  016E4A  00                 	db	0
  1414  016E4B  00                 	db	0
  1415  016E4C  00                 	db	0
  1416  016E4D  00                 	db	0
  1417  016E4E  00                 	db	0
  1418  016E4F  00                 	db	0
  1419  016E50  00                 	db	0
  1420  016E51  00                 	db	0
  1421  016E52  00                 	db	0
  1422  016E53  00                 	db	0
  1423  016E54  00                 	db	0
  1424  016E55  00                 	db	0
  1425  016E56  00                 	db	0
  1426  016E57  00                 	db	0
  1427  016E58  00                 	db	0
  1428  016E59  00                 	db	0
  1429  016E5A  00                 	db	0
  1430  016E5B  00                 	db	0
  1431  016E5C  00                 	db	0
  1432  016E5D  00                 	db	0
  1433  016E5E  00                 	db	0
  1434  016E5F  00                 	db	0
  1435  016E60  00                 	db	0
  1436  016E61  00                 	db	0
  1437  016E62  0000               	dw	0
  1438  016E64  0000               	dw	0
  1439  016E66  0000               	dw	0
  1440  016E68  0000               	dw	0
  1441  016E6A  0000               	dw	0
  1442  016E6C  0000               	dw	0
  1443  016E6E  0000               	dw	0
  1444  016E70  0000               	dw	0
  1445  016E72  0000               	dw	0
  1446  016E74  0000               	dw	0
  1447  016E76  01                 	db	1
  1448  016E77  00                 	db	0
  1449  016E78  00                 	db	0
  1450  016E79  00                 	db	0
  1451  016E7A  00                 	db	0
  1452  016E7B  00                 	db	0
  1453  016E7C  00                 	db	0
  1454  016E7D  00                 	db	0
  1455  016E7E  00                 	db	0
  1456                           
  1457                           	psect	idataBANK0
  1458  01BC74                     __pidataBANK0:
  1459                           	opt callstack 0
  1460                           
  1461                           ;initializer for _R
  1462  01BC74  0000               	dw	0
  1463  01BC76  0000               	dw	0
  1464  01BC78  0000               	dw	0
  1465  01BC7A  0000               	dw	0
  1466  01BC7C  0000               	dw	0
  1467  01BC7E  0000               	dw	0
  1468  01BC80  0000               	dw	0
  1469  01BC82  0000               	dw	0
  1470  01BC84  0000               	dw	0
  1471  01BC86  0000               	dw	0
  1472  01BC88  0000               	dw	0
  1473  01BC8A  0000               	dw	0
  1474  01BC8C  0000               	dw	0
  1475  01BC8E  0000               	dw	0
  1476  01BC90  0000               	dw	0
  1477  01BC92  0000               	dw	0
  1478  01BC94  0FFF               	dw	4095
  1479  01BC96  0777               	dw	1911
  1480  01BC98  0000               	dw	0
  1481  01BC9A  0F67               	dw	3943
  1482  01BC9C  0F8F               	dw	3983
  1483  01BC9E  0000               	dw	0
  1484  01BCA0  0000               	dw	0
  1485  01BCA2  0000               	dw	0
  1486  01BCA4  0000               	dw	0
  1487  01BCA6  00                 	db	0
  1488  01BCA7  0000               	dw	0
  1489  01BCA9  00                 	db	0
  1490                           
  1491                           	psect	idataBANK1
  1492  01A550                     __pidataBANK1:
  1493                           	opt callstack 0
  1494                           
  1495                           ;initializer for stoa@F1166
  1496  01A550  28                 	db	40
  1497  01A551  6E                 	db	110
  1498  01A552  75                 	db	117
  1499  01A553  6C                 	db	108
  1500  01A554  6C                 	db	108
  1501  01A555  29                 	db	41
  1502  01A556  00                 	db	0
  1503                           
  1504                           ;initializer for _V
  1505  01A557  00                 	db	0
  1506  01A558  00                 	db	0
  1507  01A559  00                 	db	0
  1508  01A55A  00                 	db	0
  1509  01A55B  00                 	db	0
  1510  01A55C  00                 	db	0
  1511  01A55D  00                 	db	0
  1512  01A55E  00                 	db	0
  1513  01A55F  00                 	db	0
  1514  01A560  00                 	db	0
  1515  01A561  00                 	db	0
  1516  01A562  00                 	db	0
  1517  01A563  00                 	db	0
  1518  01A564  00                 	db	0
  1519  01A565  00                 	db	0
  1520  01A566  00                 	db	0
  1521  01A567  00                 	db	0
  1522  01A568  00                 	db	0
  1523  01A569  00                 	db	0
  1524  01A56A  00                 	db	0
  1525  01A56B  00                 	db	0
  1526  01A56C  00                 	db	0
  1527  01A56D  00                 	db	0
  1528  01A56E  00                 	db	0
  1529  01A56F  00                 	db	0
  1530  01A570  00                 	db	0
  1531  01A571  00                 	db	0
  1532  01A572  00                 	db	0
  1533  01A573  00                 	db	0
  1534  01A574  00                 	db	0
  1535  01A575  00                 	db	0
  1536  01A576  00                 	db	0
  1537  01A577  00                 	db	0
  1538  01A578  00                 	db	0
  1539  01A579  00                 	db	0
  1540  01A57A  00                 	db	0
  1541  01A57B  00                 	db	0
  1542  01A57C  00                 	db	0
  1543  01A57D  00                 	db	0
  1544  01A57E  00                 	db	0
  1545  01A57F  00                 	db	0
  1546  01A580  00                 	db	0
  1547  01A581  00                 	db	0
  1548  01A582  00                 	db	0
  1549  01A583  00                 	db	0
  1550  01A584  00                 	db	0
  1551  01A585  00                 	db	0
  1552  01A586  00                 	db	0
  1553  01A587  00                 	db	0
  1554  01A588  00                 	db	0
  1555  01A589  00                 	db	0
  1556  01A58A  00                 	db	0
  1557  01A58B  00                 	db	0
  1558  01A58C  00                 	db	0
  1559  01A58D  00                 	db	0
  1560  01A58E  00                 	db	0
  1561  01A58F  00                 	db	0
  1562  01A590  00                 	db	0
  1563  01A591  00                 	db	0
  1564  01A592  00                 	db	0
  1565  01A593  00                 	db	0
  1566  01A594  00                 	db	0
  1567  01A595  00                 	db	0
  1568  01A596  00                 	db	0
  1569  01A597  00                 	db	0
  1570  01A598  00                 	db	0
  1571  01A599  00                 	db	0
  1572  01A59A  00                 	db	0
  1573  01A59B  00                 	db	0
  1574  01A59C  00                 	db	0
  1575  01A59D  00                 	db	0
  1576  01A59E  00                 	db	0
  1577  01A59F  00                 	db	0
  1578  01A5A0  00                 	db	0
  1579  01A5A1  00                 	db	0
  1580  01A5A2  00                 	db	0
  1581  01A5A3  00                 	db	0
  1582  01A5A4  00                 	db	0
  1583  01A5A5  00                 	db	0
  1584  01A5A6  00                 	db	0
  1585  01A5A7  00                 	db	0
  1586  01A5A8  00                 	db	0
  1587  01A5A9  00                 	db	0
  1588  01A5AA  00                 	db	0
  1589  01A5AB  00                 	db	0
  1590  01A5AC  00                 	db	0
  1591  01A5AD  00                 	db	0
  1592  01A5AE  00                 	db	0
  1593  01A5AF  00                 	db	0
  1594  01A5B0  00                 	db	0
  1595  01A5B1  00                 	db	0
  1596  01A5B2  00                 	db	0
  1597  01A5B3  00                 	db	0
  1598  01A5B4  00                 	db	0
  1599  01A5B5  00                 	db	0
  1600  01A5B6  00                 	db	0
  1601  01A5B7  00                 	db	0
  1602  01A5B8  00                 	db	0
  1603  01A5B9  00                 	db	0
  1604  01A5BA  00                 	db	0
  1605  01A5BB  00                 	db	0
  1606  01A5BC  00                 	db	0
  1607  01A5BD  00                 	db	0
  1608  01A5BE  00                 	db	0
  1609  01A5BF  00                 	db	0
  1610  01A5C0  00                 	db	0
  1611  01A5C1  00                 	db	0
  1612  01A5C2  00                 	db	0
  1613  01A5C3  00                 	db	0
  1614  01A5C4  00                 	db	0
  1615  01A5C5  00                 	db	0
  1616  01A5C6  00                 	db	0
  1617  01A5C7  00                 	db	0
  1618  01A5C8  00                 	db	0
  1619  01A5C9  00                 	db	0
  1620  01A5CA  00                 	db	0
  1621  01A5CB  00                 	db	0
  1622  01A5CC  00                 	db	0
  1623  01A5CD  00                 	db	0
  1624  01A5CE  00                 	db	0
  1625  01A5CF  00                 	db	0
  1626  01A5D0  00                 	db	0
  1627  01A5D1  00                 	db	0
  1628  01A5D2  00                 	db	0
  1629  01A5D3  00                 	db	0
  1630  01A5D4  00                 	db	0
  1631  01A5D5  00                 	db	0
  1632  01A5D6  00                 	db	0
  1633  01A5D7  00                 	db	0
  1634  01A5D8  0000               	dw	0
  1635  01A5DA  0000               	dw	0
  1636  01A5DC  0000               	dw	0
  1637  01A5DE  0000               	dw	0
  1638  01A5E0  00                 	db	0
  1639  01A5E1  00                 	db	0
  1640  01A5E2  00                 	db	0
  1641  01A5E3  00                 	db	0
  1642  01A5E4  00                 	db	0
  1643  01A5E5  00                 	db	0
  1644  01A5E6  0000               	dw	0
  1645  01A5E8  0000               	dw	0
  1646  01A5EA  0000               	dw	0
  1647  01A5EC  0000               	dw	0
  1648  01A5EE  0000               	dw	0
  1649  01A5F0  0000               	dw	0
  1650  01A5F2  00                 	db	0
  1651  01A5F3  00                 	db	0
  1652  01A5F4  00                 	db	0
  1653  01A5F5  00                 	db	0
  1654  01A5F6  00                 	db	0
  1655  01A5F7  00                 	db	0
  1656  01A5F8  00                 	db	0
  1657  01A5F9  00                 	db	0
  1658  01A5FA  00                 	db	0
  1659  01A5FB  00                 	db	0
  1660  01A5FC  00                 	db	0
  1661  01A5FD  0000               	dw	0
  1662  01A5FF  0000               	dw	0
  1663  01A601  2D                 	db	45
  1664  01A602  00                 	db	0
  1665  01A603  00                 	db	0
  1666  01A604  00                 	db	0
  1667  01A605  00                 	db	0
  1668  01A606  0000               	dw	0
  1669  01A608  0000               	dw	0
  1670  01A60A  0000               	dw	0
  1671  01A60C  0000               	dw	0
  1672  01A60E  0000               	dw	0
  1673  01A610  0000               	dw	0
  1674  01A612  0000               	dw	0
  1675  01A614  0000               	dw	0
  1676                           
  1677                           ;initializer for _H
  1678  01A616  00                 	db	0
  1679  01A617  00                 	db	0
  1680  01A618  01                 	db	1
  1681  01A619  00                 	db	0
  1682  01A61A  01                 	db	1
  1683  01A61B  00                 	db	0
  1684  01A61C  00                 	db	0
  1685                           
  1686                           	psect	mediumconst
  1687  00F9EA                     __pmediumconst:
  1688                           	opt callstack 0
  1689  00F9EA  00                 	db	0
  1690  00F9EB                     _BVSOC_TABLE:
  1691                           	opt callstack 0
  1692  00F9EB  59D8               	dw	23000
  1693  00F9ED  0000               	dw	0
  1694  00F9EF  0005               	dw	5
  1695  00F9F1  0000               	dw	0
  1696  00F9F3  5B68               	dw	23400
  1697  00F9F5  0000               	dw	0
  1698  00F9F7  000A               	dw	10
  1699  00F9F9  0000               	dw	0
  1700  00F9FB  5C30               	dw	23600
  1701  00F9FD  0000               	dw	0
  1702  00F9FF  0014               	dw	20
  1703  00FA01  0000               	dw	0
  1704  00FA03  5E38               	dw	24120
  1705  00FA05  0000               	dw	0
  1706  00FA07  0019               	dw	25
  1707  00FA09  0000               	dw	0
  1708  00FA0B  5E88               	dw	24200
  1709  00FA0D  0000               	dw	0
  1710  00FA0F  001E               	dw	30
  1711  00FA11  0000               	dw	0
  1712  00FA13  5F78               	dw	24440
  1713  00FA15  0000               	dw	0
  1714  00FA17  0028               	dw	40
  1715  00FA19  0000               	dw	0
  1716  00FA1B  5FDC               	dw	24540
  1717  00FA1D  0000               	dw	0
  1718  00FA1F  002D               	dw	45
  1719  00FA21  0000               	dw	0
  1720  00FA23  6018               	dw	24600
  1721  00FA25  0000               	dw	0
  1722  00FA27  0032               	dw	50
  1723  00FA29  0000               	dw	0
  1724  00FA2B  6046               	dw	24646
  1725  00FA2D  0000               	dw	0
  1726  00FA2F  0035               	dw	53
  1727  00FA31  0000               	dw	0
  1728  00FA33  607C               	dw	24700
  1729  00FA35  0000               	dw	0
  1730  00FA37  0037               	dw	55
  1731  00FA39  0000               	dw	0
  1732  00FA3B  60AE               	dw	24750
  1733  00FA3D  0000               	dw	0
  1734  00FA3F  0039               	dw	57
  1735  00FA41  0000               	dw	0
  1736  00FA43  60E0               	dw	24800
  1737  00FA45  0000               	dw	0
  1738  00FA47  003C               	dw	60
  1739  00FA49  0000               	dw	0
  1740  00FA4B  6112               	dw	24850
  1741  00FA4D  0000               	dw	0
  1742  00FA4F  003F               	dw	63
  1743  00FA51  0000               	dw	0
  1744  00FA53  615D               	dw	24925
  1745  00FA55  0000               	dw	0
  1746  00FA57  0043               	dw	67
  1747  00FA59  0000               	dw	0
  1748  00FA5B  61A8               	dw	25000
  1749  00FA5D  0000               	dw	0
  1750  00FA5F  0046               	dw	70
  1751  00FA61  0000               	dw	0
  1752  00FA63  61BC               	dw	25020
  1753  00FA65  0000               	dw	0
  1754  00FA67  0048               	dw	72
  1755  00FA69  0000               	dw	0
  1756  00FA6B  61D0               	dw	25040
  1757  00FA6D  0000               	dw	0
  1758  00FA6F  004B               	dw	75
  1759  00FA71  0000               	dw	0
  1760  00FA73  61DA               	dw	25050
  1761  00FA75  0000               	dw	0
  1762  00FA77  0050               	dw	80
  1763  00FA79  0000               	dw	0
  1764  00FA7B  61E4               	dw	25060
  1765  00FA7D  0000               	dw	0
  1766  00FA7F  0055               	dw	85
  1767  00FA81  0000               	dw	0
  1768  00FA83  61F8               	dw	25080
  1769  00FA85  0000               	dw	0
  1770  00FA87  005A               	dw	90
  1771  00FA89  0000               	dw	0
  1772  00FA8B  6208               	dw	25096
  1773  00FA8D  0000               	dw	0
  1774  00FA8F  005C               	dw	92
  1775  00FA91  0000               	dw	0
  1776  00FA93  6222               	dw	25122
  1777  00FA95  0000               	dw	0
  1778  00FA97  005D               	dw	93
  1779  00FA99  0000               	dw	0
  1780  00FA9B  6234               	dw	25140
  1781  00FA9D  0000               	dw	0
  1782  00FA9F  005F               	dw	95
  1783  00FAA1  0000               	dw	0
  1784  00FAA3  6248               	dw	25160
  1785  00FAA5  0000               	dw	0
  1786  00FAA7  0061               	dw	97
  1787  00FAA9  0000               	dw	0
  1788  00FAAB  625C               	dw	25180
  1789  00FAAD  0000               	dw	0
  1790  00FAAF  0064               	dw	100
  1791  00FAB1  0000               	dw	0
  1792  00FAB3  6784               	dw	26500
  1793  00FAB5  0000               	dw	0
  1794  00FAB7  0062               	dw	98
  1795  00FAB9  0000               	dw	0
  1796  00FABB                     __end_of_BVSOC_TABLE:
  1797                           	opt callstack 0
  1798  00FABB                     _T:
  1799                           	opt callstack 0
  1800  00FABB  63                 	db	99
  1801  00FABC  6F                 	db	111
  1802  00FABD  6D                 	db	109
  1803  00FABE  6D                 	db	109
  1804  00FABF  61                 	db	97
  1805  00FAC0  6E                 	db	110
  1806  00FAC1  64                 	db	100
  1807  00FAC2  73                 	db	115
  1808  00FAC3  20                 	db	32
  1809  00FAC4  31                 	db	49
  1810  00FAC5  00                 	db	0
  1811  00FAC6  00                 	db	0
  1812  00FAC7  00                 	db	0
  1813  00FAC8  00                 	db	0
  1814  00FAC9  00                 	db	0
  1815  00FACA  00                 	db	0
  1816  00FACB  00                 	db	0
  1817  00FACC  00                 	db	0
  1818  00FACD  64                 	db	100
  1819  00FACE  69                 	db	105
  1820  00FACF  73                 	db	115
  1821  00FAD0  70                 	db	112
  1822  00FAD1  6C                 	db	108
  1823  00FAD2  61                 	db	97
  1824  00FAD3  79                 	db	121
  1825  00FAD4  73                 	db	115
  1826  00FAD5  20                 	db	32
  1827  00FAD6  31                 	db	49
  1828  00FAD7  00                 	db	0
  1829  00FAD8  00                 	db	0
  1830  00FAD9  00                 	db	0
  1831  00FADA  00                 	db	0
  1832  00FADB  00                 	db	0
  1833  00FADC  00                 	db	0
  1834  00FADD  00                 	db	0
  1835  00FADE  00                 	db	0
  1836  00FADF  63                 	db	99
  1837  00FAE0  6F                 	db	111
  1838  00FAE1  6D                 	db	109
  1839  00FAE2  6D                 	db	109
  1840  00FAE3  61                 	db	97
  1841  00FAE4  6E                 	db	110
  1842  00FAE5  64                 	db	100
  1843  00FAE6  73                 	db	115
  1844  00FAE7  20                 	db	32
  1845  00FAE8  32                 	db	50
  1846  00FAE9  00                 	db	0
  1847  00FAEA  00                 	db	0
  1848  00FAEB  00                 	db	0
  1849  00FAEC  00                 	db	0
  1850  00FAED  00                 	db	0
  1851  00FAEE  00                 	db	0
  1852  00FAEF  00                 	db	0
  1853  00FAF0  00                 	db	0
  1854  00FAF1  64                 	db	100
  1855  00FAF2  69                 	db	105
  1856  00FAF3  73                 	db	115
  1857  00FAF4  70                 	db	112
  1858  00FAF5  6C                 	db	108
  1859  00FAF6  61                 	db	97
  1860  00FAF7  79                 	db	121
  1861  00FAF8  73                 	db	115
  1862  00FAF9  20                 	db	32
  1863  00FAFA  32                 	db	50
  1864  00FAFB  00                 	db	0
  1865  00FAFC  00                 	db	0
  1866  00FAFD  00                 	db	0
  1867  00FAFE  00                 	db	0
  1868  00FAFF  00                 	db	0
  1869  00FB00  00                 	db	0
  1870  00FB01  00                 	db	0
  1871  00FB02  00                 	db	0
  1872  00FB03  63                 	db	99
  1873  00FB04  6F                 	db	111
  1874  00FB05  6D                 	db	109
  1875  00FB06  6D                 	db	109
  1876  00FB07  61                 	db	97
  1877  00FB08  6E                 	db	110
  1878  00FB09  64                 	db	100
  1879  00FB0A  73                 	db	115
  1880  00FB0B  20                 	db	32
  1881  00FB0C  33                 	db	51
  1882  00FB0D  00                 	db	0
  1883  00FB0E  00                 	db	0
  1884  00FB0F  00                 	db	0
  1885  00FB10  00                 	db	0
  1886  00FB11  00                 	db	0
  1887  00FB12  00                 	db	0
  1888  00FB13  00                 	db	0
  1889  00FB14  00                 	db	0
  1890  00FB15  64                 	db	100
  1891  00FB16  69                 	db	105
  1892  00FB17  73                 	db	115
  1893  00FB18  70                 	db	112
  1894  00FB19  6C                 	db	108
  1895  00FB1A  61                 	db	97
  1896  00FB1B  79                 	db	121
  1897  00FB1C  73                 	db	115
  1898  00FB1D  20                 	db	32
  1899  00FB1E  33                 	db	51
  1900  00FB1F  00                 	db	0
  1901  00FB20  00                 	db	0
  1902  00FB21  00                 	db	0
  1903  00FB22  00                 	db	0
  1904  00FB23  00                 	db	0
  1905  00FB24  00                 	db	0
  1906  00FB25  00                 	db	0
  1907  00FB26  00                 	db	0
  1908  00FB27  63                 	db	99
  1909  00FB28  6F                 	db	111
  1910  00FB29  6D                 	db	109
  1911  00FB2A  6D                 	db	109
  1912  00FB2B  61                 	db	97
  1913  00FB2C  6E                 	db	110
  1914  00FB2D  64                 	db	100
  1915  00FB2E  73                 	db	115
  1916  00FB2F  20                 	db	32
  1917  00FB30  34                 	db	52
  1918  00FB31  00                 	db	0
  1919  00FB32  00                 	db	0
  1920  00FB33  00                 	db	0
  1921  00FB34  00                 	db	0
  1922  00FB35  00                 	db	0
  1923  00FB36  00                 	db	0
  1924  00FB37  00                 	db	0
  1925  00FB38  00                 	db	0
  1926  00FB39  64                 	db	100
  1927  00FB3A  69                 	db	105
  1928  00FB3B  73                 	db	115
  1929  00FB3C  70                 	db	112
  1930  00FB3D  6C                 	db	108
  1931  00FB3E  61                 	db	97
  1932  00FB3F  79                 	db	121
  1933  00FB40  73                 	db	115
  1934  00FB41  20                 	db	32
  1935  00FB42  34                 	db	52
  1936  00FB43  00                 	db	0
  1937  00FB44  00                 	db	0
  1938  00FB45  00                 	db	0
  1939  00FB46  00                 	db	0
  1940  00FB47  00                 	db	0
  1941  00FB48  00                 	db	0
  1942  00FB49  00                 	db	0
  1943  00FB4A  00                 	db	0
  1944  00FB4B                     __end_of_T:
  1945                           	opt callstack 0
  1946  00FB4B                     _spin:
  1947                           	opt callstack 0
  1948  00FB4B  7C                 	db	124
  1949  00FB4C  7C                 	db	124
  1950  00FB4D  2F                 	db	47
  1951  00FB4E  2F                 	db	47
  1952  00FB4F  2D                 	db	45
  1953  00FB50  2D                 	db	45
  1954  00FB51  00                 	db	0
  1955  00FB52  00                 	db	0
  1956  00FB53  00                 	db	0
  1957  00FB54  00                 	db	0
  1958  00FB55  00                 	db	0
  1959  00FB56  00                 	db	0
  1960  00FB57  00                 	db	0
  1961  00FB58  00                 	db	0
  1962  00FB59  00                 	db	0
  1963  00FB5A  00                 	db	0
  1964  00FB5B  00                 	db	0
  1965  00FB5C  00                 	db	0
  1966  00FB5D  00                 	db	0
  1967  00FB5E  00                 	db	0
  1968  00FB5F  7C                 	db	124
  1969  00FB60  7C                 	db	124
  1970  00FB61  2F                 	db	47
  1971  00FB62  2F                 	db	47
  1972  00FB63  2D                 	db	45
  1973  00FB64  2D                 	db	45
  1974  00FB65  5C                 	db	92
  1975  00FB66  5C                 	db	92
  1976  00FB67  00                 	db	0
  1977  00FB68  00                 	db	0
  1978  00FB69  00                 	db	0
  1979  00FB6A  00                 	db	0
  1980  00FB6B  00                 	db	0
  1981  00FB6C  00                 	db	0
  1982  00FB6D  00                 	db	0
  1983  00FB6E  00                 	db	0
  1984  00FB6F  00                 	db	0
  1985  00FB70  00                 	db	0
  1986  00FB71  00                 	db	0
  1987  00FB72  00                 	db	0
  1988  00FB73  4F                 	db	79
  1989  00FB74  4F                 	db	79
  1990  00FB75  4F                 	db	79
  1991  00FB76  4F                 	db	79
  1992  00FB77  4F                 	db	79
  1993  00FB78  4F                 	db	79
  1994  00FB79  2D                 	db	45
  1995  00FB7A  2D                 	db	45
  1996  00FB7B  5F                 	db	95
  1997  00FB7C  5F                 	db	95
  1998  00FB7D  2D                 	db	45
  1999  00FB7E  00                 	db	0
  2000  00FB7F  00                 	db	0
  2001  00FB80  00                 	db	0
  2002  00FB81  00                 	db	0
  2003  00FB82  00                 	db	0
  2004  00FB83  00                 	db	0
  2005  00FB84  00                 	db	0
  2006  00FB85  00                 	db	0
  2007  00FB86  00                 	db	0
  2008  00FB87  76                 	db	118
  2009  00FB88  76                 	db	118
  2010  00FB89  3C                 	db	60
  2011  00FB8A  3C                 	db	60
  2012  00FB8B  5E                 	db	94
  2013  00FB8C  5E                 	db	94
  2014  00FB8D  3E                 	db	62
  2015  00FB8E  3E                 	db	62
  2016  00FB8F  00                 	db	0
  2017  00FB90  00                 	db	0
  2018  00FB91  00                 	db	0
  2019  00FB92  00                 	db	0
  2020  00FB93  00                 	db	0
  2021  00FB94  00                 	db	0
  2022  00FB95  00                 	db	0
  2023  00FB96  00                 	db	0
  2024  00FB97  00                 	db	0
  2025  00FB98  00                 	db	0
  2026  00FB99  00                 	db	0
  2027  00FB9A  00                 	db	0
  2028  00FB9B  2E                 	db	46
  2029  00FB9C  2E                 	db	46
  2030  00FB9D  2A                 	db	42
  2031  00FB9E  2A                 	db	42
  2032  00FB9F  78                 	db	120
  2033  00FBA0  23                 	db	35
  2034  00FBA1  78                 	db	120
  2035  00FBA2  23                 	db	35
  2036  00FBA3  58                 	db	88
  2037  00FBA4  58                 	db	88
  2038  00FBA5  7C                 	db	124
  2039  00FBA6  7C                 	db	124
  2040  00FBA7  2D                 	db	45
  2041  00FBA8  2D                 	db	45
  2042  00FBA9  00                 	db	0
  2043  00FBAA  00                 	db	0
  2044  00FBAB  00                 	db	0
  2045  00FBAC  00                 	db	0
  2046  00FBAD  00                 	db	0
  2047  00FBAE  00                 	db	0
  2048  00FBAF  2E                 	db	46
  2049  00FBB0  2E                 	db	46
  2050  00FBB1  6F                 	db	111
  2051  00FBB2  6F                 	db	111
  2052  00FBB3  4F                 	db	79
  2053  00FBB4  4F                 	db	79
  2054  00FBB5  6F                 	db	111
  2055  00FBB6  6F                 	db	111
  2056  00FBB7  00                 	db	0
  2057  00FBB8  00                 	db	0
  2058  00FBB9  00                 	db	0
  2059  00FBBA  00                 	db	0
  2060  00FBBB  00                 	db	0
  2061  00FBBC  00                 	db	0
  2062  00FBBD  00                 	db	0
  2063  00FBBE  00                 	db	0
  2064  00FBBF  00                 	db	0
  2065  00FBC0  00                 	db	0
  2066  00FBC1  00                 	db	0
  2067  00FBC2  00                 	db	0
  2068  00FBC3                     __end_of_spin:
  2069                           	opt callstack 0
  2070  00FBC3  0000               	dw	0
  2071  00FBC5  3F80               	dw	16256
  2072  00FBC7  0000               	dw	0
  2073  00FBC9  3FC0               	dw	16320
  2074  00FBCB                     __end_of_bp:
  2075                           	opt callstack 0
  2076  00FBCB  AA00               	dw	43520
  2077  00FBCD  3FB8               	dw	16312
  2078  00FBCF                     __end_of_ivln2_h:
  2079                           	opt callstack 0
  2080  00FBCF  23C6               	dw	9158
  2081  00FBD1  B8F6               	dw	47350
  2082  00FBD3                     __end_of_cp_l:
  2083                           	opt callstack 0
  2084  00FBD3  4000               	dw	16384
  2085  00FBD5  3F76               	dw	16246
  2086  00FBD7                     __end_of_cp_h:
  2087                           	opt callstack 0
  2088  0000                     _IVTADL	set	14493
  2089  0000                     _IVTADH	set	14494
  2090  0000                     _IVTADU	set	14495
  2091  0000                     _PIR6bits	set	14758
  2092  0000                     _PIR4bits	set	14756
  2093  0000                     _PIE8bits	set	14744
  2094  0000                     _PIR8bits	set	14760
  2095  0000                     _SCANPR	set	14839
  2096  0000                     _DMA2PR	set	14836
  2097  0000                     _DMA1PR	set	14835
  2098  0000                     _MAINPR	set	14834
  2099  0000                     _ISRPR	set	14833
  2100  0000                     _PIE2bits	set	14738
  2101  0000                     _PIR2bits	set	14754
  2102  0000                     _PIE9bits	set	14745
  2103  0000                     _PIR9bits	set	14761
  2104  0000                     _PIE6bits	set	14742
  2105  0000                     _PIE3bits	set	14739
  2106  0000                     _PMD7	set	14791
  2107  0000                     _PMD6	set	14790
  2108  0000                     _PMD5	set	14789
  2109  0000                     _PMD4	set	14788
  2110  0000                     _PMD3	set	14787
  2111  0000                     _PMD2	set	14786
  2112  0000                     _PMD1	set	14785
  2113  0000                     _PMD0	set	14784
  2114  0000                     _OSCTUNE	set	14814
  2115  0000                     _OSCFRQ	set	14815
  2116  0000                     _OSCEN	set	14813
  2117  0000                     _OSCCON3	set	14811
  2118  0000                     _OSCCON1	set	14809
  2119  0000                     _IPR8bits	set	14728
  2120  0000                     _IPR9bits	set	14729
  2121  0000                     _IPR5bits	set	14725
  2122  0000                     _IPR1bits	set	14721
  2123  0000                     _IPR3bits	set	14723
  2124  0000                     _IPR6bits	set	14726
  2125  0000                     _IPR2bits	set	14722
  2126  0000                     _PIE5bits	set	14741
  2127  0000                     _PIE1bits	set	14737
  2128  0000                     _PIR5bits	set	14757
  2129  0000                     _PIR1bits	set	14753
  2130  0000                     _PLLR	set	118496
  2131  0000                     _SPI1SDIPPS	set	15071
  2132  0000                     _U1RXPPS	set	15077
  2133  0000                     _RC6PPS	set	14870
  2134  0000                     _RC5PPS	set	14869
  2135  0000                     _INT1PPS	set	15041
  2136  0000                     _RD1PPS	set	14873
  2137  0000                     _INT0PPS	set	15040
  2138  0000                     _RC3PPS	set	14867
  2139  0000                     _RB6PPS	set	14862
  2140  0000                     _SPI1SCKPPS	set	15070
  2141  0000                     _U2RXPPS	set	15080
  2142  0000                     _SLRCONF	set	14995
  2143  0000                     _SLRCONE	set	14979
  2144  0000                     _SLRCOND	set	14963
  2145  0000                     _SLRCONC	set	14947
  2146  0000                     _SLRCONB	set	14931
  2147  0000                     _SLRCONA	set	14915
  2148  0000                     _ODCOND	set	14962
  2149  0000                     _ODCONC	set	14946
  2150  0000                     _ODCONB	set	14930
  2151  0000                     _ODCONA	set	14914
  2152  0000                     _ODCONF	set	14994
  2153  0000                     _ODCONE	set	14978
  2154  0000                     _WPUC	set	14945
  2155  0000                     _WPUA	set	14913
  2156  0000                     _WPUB	set	14929
  2157  0000                     _WPUE	set	14977
  2158  0000                     _WPUF	set	14993
  2159  0000                     _WPUD	set	14961
  2160  0000                     _ANSELA	set	14912
  2161  0000                     _ANSELF	set	14992
  2162  0000                     _ANSELE	set	14976
  2163  0000                     _ANSELB	set	14928
  2164  0000                     _ANSELC	set	14944
  2165  0000                     _ANSELD	set	14960
  2166  0000                     _DMA2SSA	set	15321
  2167  0000                     _DMA1SSA	set	15353
  2168  0000                     _DMA2DSZ	set	15310
  2169  0000                     _DMA2SSZ	set	15319
  2170  0000                     _DMA2DSA	set	15312
  2171  0000                     _DMA1DSZ	set	15342
  2172  0000                     _DMA1SSZ	set	15351
  2173  0000                     _DMA1DSA	set	15344
  2174  0000                     _DMA2CON0bits	set	15324
  2175  0000                     _DMA2CON1bits	set	15325
  2176  0000                     _DMA1CON0bits	set	15356
  2177  0000                     _DMA1CON1bits	set	15357
  2178  0000                     _DMA2CON0	set	15324
  2179  0000                     _DMA2AIRQ	set	15326
  2180  0000                     _DMA2SIRQ	set	15327
  2181  0000                     _DMA2CON1	set	15325
  2182  0000                     _DMA1CON0	set	15356
  2183  0000                     _DMA1AIRQ	set	15358
  2184  0000                     _DMA1SIRQ	set	15359
  2185  0000                     _DMA1CON1	set	15357
  2186  0000                     _CLKRCON	set	15589
  2187  0000                     _CLKRCLK	set	15590
  2188  0000                     _SPI1INTFbits	set	15642
  2189  0000                     _SPI1CON0bits	set	15636
  2190  0000                     _SPI1RXB	set	15632
  2191  0000                     _SPI1TXB	set	15633
  2192  0000                     _SPI1TCNTL	set	15634
  2193  0000                     _SPI1CON0	set	15636
  2194  0000                     _SPI1CLK	set	15644
  2195  0000                     _SPI1BAUD	set	15641
  2196  0000                     _SPI1CON2	set	15638
  2197  0000                     _SPI1CON1	set	15637
  2198  0000                     _U2RXB	set	15824
  2199  0000                     _U2TXB	set	15826
  2200  0000                     _U2ERRIE	set	15842
  2201  0000                     _U2ERRIR	set	15841
  2202  0000                     _U2UIR	set	15840
  2203  0000                     _U2FIFO	set	15839
  2204  0000                     _U2BRGH	set	15838
  2205  0000                     _U2BRGL	set	15837
  2206  0000                     _U2CON2	set	15836
  2207  0000                     _U2CON1	set	15835
  2208  0000                     _U2CON0	set	15834
  2209  0000                     _U2P3L	set	15832
  2210  0000                     _U2P2L	set	15830
  2211  0000                     _U2P1L	set	15828
  2212  0000                     _U1RXB	set	15848
  2213  0000                     _U1ERRIE	set	15866
  2214  0000                     _U1ERRIR	set	15865
  2215  0000                     _U1UIR	set	15864
  2216  0000                     _U1FIFO	set	15863
  2217  0000                     _U1BRGH	set	15862
  2218  0000                     _U1BRGL	set	15861
  2219  0000                     _U1CON2	set	15860
  2220  0000                     _U1CON1	set	15859
  2221  0000                     _U1CON0	set	15858
  2222  0000                     _U1P3H	set	15857
  2223  0000                     _U1P3L	set	15856
  2224  0000                     _U1P2H	set	15855
  2225  0000                     _U1P2L	set	15854
  2226  0000                     _U1P1H	set	15853
  2227  0000                     _U1P1L	set	15852
  2228  0000                     _FVRCON	set	16065
  2229  0000                     _ADFLTRL	set	16102
  2230  0000                     _ADFLTRH	set	16103
  2231  0000                     _ADCON0bits	set	16120
  2232  0000                     _ADCON0	set	16120
  2233  0000                     _ADCLK	set	16127
  2234  0000                     _ADACT	set	16126
  2235  0000                     _ADREF	set	16125
  2236  0000                     _ADSTAT	set	16124
  2237  0000                     _ADCON3	set	16123
  2238  0000                     _ADCON2	set	16122
  2239  0000                     _ADCON1	set	16121
  2240  0000                     _ADPREH	set	16119
  2241  0000                     _ADPREL	set	16118
  2242  0000                     _ADCAP	set	16117
  2243  0000                     _ADACQH	set	16116
  2244  0000                     _ADACQL	set	16115
  2245  0000                     _ADPCH	set	16113
  2246  0000                     _ADRPT	set	16108
  2247  0000                     _ADACCU	set	16106
  2248  0000                     _ADSTPTH	set	16101
  2249  0000                     _ADSTPTL	set	16100
  2250  0000                     _ADUTHH	set	16097
  2251  0000                     _ADUTHL	set	16096
  2252  0000                     _ADLTHH	set	16095
  2253  0000                     _ADLTHL	set	16094
  2254  0000                     _CCPTMRS1bits	set	16223
  2255  0000                     _PORTFbits	set	16335
  2256  0000                     _LATDbits	set	16317
  2257  0000                     _PORTBbits	set	16331
  2258  0000                     _T3CONbits	set	16294
  2259  0000                     _T3CON	set	16294
  2260  0000                     _TMR3L	set	16292
  2261  0000                     _TMR3H	set	16293
  2262  0000                     _T3CLK	set	16297
  2263  0000                     _T3GATE	set	16296
  2264  0000                     _T3GCON	set	16295
  2265  0000                     _T2CON	set	16300
  2266  0000                     _T2TMR	set	16298
  2267  0000                     _T2PR	set	16299
  2268  0000                     _T2RST	set	16303
  2269  0000                     _T2HLT	set	16301
  2270  0000                     _T2CLKCON	set	16302
  2271  0000                     _PWM8DCL	set	16224
  2272  0000                     _PWM8DCH	set	16225
  2273  0000                     _PWM8CON	set	16226
  2274  0000                     _LATEbits	set	16318
  2275  0000                     _T5CONbits	set	16282
  2276  0000                     _T5CON	set	16282
  2277  0000                     _TMR5L	set	16280
  2278  0000                     _TMR5H	set	16281
  2279  0000                     _T5CLK	set	16285
  2280  0000                     _T5GATE	set	16284
  2281  0000                     _T5GCON	set	16283
  2282  0000                     _LATFbits	set	16319
  2283  0000                     _LATCbits	set	16316
  2284  0000                     _T6CON	set	16276
  2285  0000                     _T6TMR	set	16274
  2286  0000                     _T6PR	set	16275
  2287  0000                     _T6RST	set	16279
  2288  0000                     _T6HLT	set	16277
  2289  0000                     _T6CLKCON	set	16278
  2290  0000                     _TRISD	set	16325
  2291  0000                     _TRISC	set	16324
  2292  0000                     _TRISB	set	16323
  2293  0000                     _TRISA	set	16322
  2294  0000                     _TRISF	set	16327
  2295  0000                     _TRISE	set	16326
  2296  0000                     _LATC	set	16316
  2297  0000                     _LATB	set	16315
  2298  0000                     _LATF	set	16319
  2299  0000                     _LATA	set	16314
  2300  0000                     _LATD	set	16317
  2301  0000                     _LATE	set	16318
  2302  0000                     _IVTLOCKbits	set	16340
  2303  0000                     _IVTLOCK	set	16340
  2304  0000                     _INTCON0bits	set	16338
  2305  0000                     _GIE	set	130711
  2306  00FBD7                     STR_64:
  2307                           
  2308                           ; BSR set to: 57
  2309  00FBD7  20                 	db	32
  2310  00FBD8  25                 	db	37
  2311  00FBD9  63                 	db	99	;'c'
  2312  00FBDA  20                 	db	32
  2313  00FBDB  2C                 	db	44
  2314  00FBDC  25                 	db	37
  2315  00FBDD  6C                 	db	108	;'l'
  2316  00FBDE  75                 	db	117	;'u'
  2317  00FBDF  2C                 	db	44
  2318  00FBE0  25                 	db	37
  2319  00FBE1  34                 	db	52	;'4'
  2320  00FBE2  2E                 	db	46
  2321  00FBE3  34                 	db	52	;'4'
  2322  00FBE4  66                 	db	102	;'f'
  2323  00FBE5  2C                 	db	44
  2324  00FBE6  25                 	db	37
  2325  00FBE7  34                 	db	52	;'4'
  2326  00FBE8  2E                 	db	46
  2327  00FBE9  34                 	db	52	;'4'
  2328  00FBEA  66                 	db	102	;'f'
  2329  00FBEB  2C                 	db	44
  2330  00FBEC  25                 	db	37
  2331  00FBED  34                 	db	52	;'4'
  2332  00FBEE  2E                 	db	46
  2333  00FBEF  34                 	db	52	;'4'
  2334  00FBF0  66                 	db	102	;'f'
  2335  00FBF1  2C                 	db	44
  2336  00FBF2  25                 	db	37
  2337  00FBF3  34                 	db	52	;'4'
  2338  00FBF4  2E                 	db	46
  2339  00FBF5  34                 	db	52	;'4'
  2340  00FBF6  66                 	db	102	;'f'
  2341  00FBF7  2C                 	db	44
  2342  00FBF8  25                 	db	37
  2343  00FBF9  34                 	db	52	;'4'
  2344  00FBFA  2E                 	db	46
  2345  00FBFB  33                 	db	51	;'3'
  2346  00FBFC  66                 	db	102	;'f'
  2347  00FBFD  2C                 	db	44
  2348  00FBFE  25                 	db	37
  2349  00FBFF  34                 	db	52	;'4'
  2350  00FC00  2E                 	db	46
  2351  00FC01  33                 	db	51	;'3'
  2352  00FC02  66                 	db	102	;'f'
  2353  00FC03  2C                 	db	44
  2354  00FC04  25                 	db	37
  2355  00FC05  34                 	db	52	;'4'
  2356  00FC06  2E                 	db	46
  2357  00FC07  33                 	db	51	;'3'
  2358  00FC08  66                 	db	102	;'f'
  2359  00FC09  2C                 	db	44
  2360  00FC0A  25                 	db	37
  2361  00FC0B  34                 	db	52	;'4'
  2362  00FC0C  2E                 	db	46
  2363  00FC0D  33                 	db	51	;'3'
  2364  00FC0E  66                 	db	102	;'f'
  2365  00FC0F  2C                 	db	44
  2366  00FC10  25                 	db	37
  2367  00FC11  34                 	db	52	;'4'
  2368  00FC12  2E                 	db	46
  2369  00FC13  33                 	db	51	;'3'
  2370  00FC14  66                 	db	102	;'f'
  2371  00FC15  2C                 	db	44
  2372  00FC16  25                 	db	37
  2373  00FC17  34                 	db	52	;'4'
  2374  00FC18  2E                 	db	46
  2375  00FC19  33                 	db	51	;'3'
  2376  00FC1A  66                 	db	102	;'f'
  2377  00FC1B  2C                 	db	44
  2378  00FC1C  25                 	db	37
  2379  00FC1D  64                 	db	100	;'d'
  2380  00FC1E  2C                 	db	44
  2381  00FC1F  25                 	db	37
  2382  00FC20  64                 	db	100	;'d'
  2383  00FC21  2C                 	db	44
  2384  00FC22  25                 	db	37
  2385  00FC23  32                 	db	50	;'2'
  2386  00FC24  2E                 	db	46
  2387  00FC25  36                 	db	54	;'6'
  2388  00FC26  66                 	db	102	;'f'
  2389  00FC27  2C                 	db	44
  2390  00FC28  25                 	db	37
  2391  00FC29  34                 	db	52	;'4'
  2392  00FC2A  2E                 	db	46
  2393  00FC2B  33                 	db	51	;'3'
  2394  00FC2C  66                 	db	102	;'f'
  2395  00FC2D  2C                 	db	44
  2396  00FC2E  25                 	db	37
  2397  00FC2F  64                 	db	100	;'d'
  2398  00FC30  2C                 	db	44
  2399  00FC31  25                 	db	37
  2400  00FC32  64                 	db	100	;'d'
  2401  00FC33  2C                 	db	44
  2402  00FC34  25                 	db	37
  2403  00FC35  6C                 	db	108	;'l'
  2404  00FC36  75                 	db	117	;'u'
  2405  00FC37  2C                 	db	44
  2406  00FC38  25                 	db	37
  2407  00FC39  6C                 	db	108	;'l'
  2408  00FC3A  75                 	db	117	;'u'
  2409  00FC3B  2C                 	db	44
  2410  00FC3C  25                 	db	37
  2411  00FC3D  34                 	db	52	;'4'
  2412  00FC3E  2E                 	db	46
  2413  00FC3F  33                 	db	51	;'3'
  2414  00FC40  66                 	db	102	;'f'
  2415  00FC41  2C                 	db	44
  2416  00FC42  25                 	db	37
  2417  00FC43  34                 	db	52	;'4'
  2418  00FC44  2E                 	db	46
  2419  00FC45  33                 	db	51	;'3'
  2420  00FC46  66                 	db	102	;'f'
  2421  00FC47  2C                 	db	44
  2422  00FC48  25                 	db	37
  2423  00FC49  34                 	db	52	;'4'
  2424  00FC4A  2E                 	db	46
  2425  00FC4B  33                 	db	51	;'3'
  2426  00FC4C  66                 	db	102	;'f'
  2427  00FC4D  0D                 	db	13
  2428  00FC4E  0A                 	db	10
  2429  00FC4F  00                 	db	0
  2430  00FC50                     STR_17:
  2431                           
  2432                           ; BSR set to: 57
  2433  00FC50  52                 	db	82	;'R'
  2434  00FC51  31                 	db	49	;'1'
  2435  00FC52  20                 	db	32
  2436  00FC53  25                 	db	37
  2437  00FC54  32                 	db	50	;'2'
  2438  00FC55  2E                 	db	46
  2439  00FC56  33                 	db	51	;'3'
  2440  00FC57  66                 	db	102	;'f'
  2441  00FC58  20                 	db	32
  2442  00FC59  25                 	db	37
  2443  00FC5A  33                 	db	51	;'3'
  2444  00FC5B  2E                 	db	46
  2445  00FC5C  34                 	db	52	;'4'
  2446  00FC5D  66                 	db	102	;'f'
  2447  00FC5E  20                 	db	32
  2448  00FC5F  20                 	db	32
  2449  00FC60  20                 	db	32
  2450  00FC61  20                 	db	32
  2451  00FC62  20                 	db	32
  2452  00FC63  20                 	db	32
  2453  00FC64  20                 	db	32
  2454  00FC65  20                 	db	32
  2455  00FC66  20                 	db	32
  2456  00FC67  20                 	db	32
  2457  00FC68  20                 	db	32
  2458  00FC69  00                 	db	0
  2459  00FC6A                     STR_18:
  2460                           
  2461                           ; BSR set to: 57
  2462  00FC6A  52                 	db	82	;'R'
  2463  00FC6B  32                 	db	50	;'2'
  2464  00FC6C  20                 	db	32
  2465  00FC6D  25                 	db	37
  2466  00FC6E  32                 	db	50	;'2'
  2467  00FC6F  2E                 	db	46
  2468  00FC70  33                 	db	51	;'3'
  2469  00FC71  66                 	db	102	;'f'
  2470  00FC72  20                 	db	32
  2471  00FC73  25                 	db	37
  2472  00FC74  33                 	db	51	;'3'
  2473  00FC75  2E                 	db	46
  2474  00FC76  34                 	db	52	;'4'
  2475  00FC77  66                 	db	102	;'f'
  2476  00FC78  20                 	db	32
  2477  00FC79  20                 	db	32
  2478  00FC7A  20                 	db	32
  2479  00FC7B  20                 	db	32
  2480  00FC7C  20                 	db	32
  2481  00FC7D  20                 	db	32
  2482  00FC7E  20                 	db	32
  2483  00FC7F  20                 	db	32
  2484  00FC80  20                 	db	32
  2485  00FC81  20                 	db	32
  2486  00FC82  20                 	db	32
  2487  00FC83  00                 	db	0
  2488  00FC84                     STR_9:
  2489                           
  2490                           ; BSR set to: 57
  2491  00FC84  53                 	db	83	;'S'
  2492  00FC85  20                 	db	32
  2493  00FC86  53                 	db	83	;'S'
  2494  00FC87  25                 	db	37
  2495  00FC88  63                 	db	99	;'c'
  2496  00FC89  43                 	db	67	;'C'
  2497  00FC8A  20                 	db	32
  2498  00FC8B  25                 	db	37
  2499  00FC8C  64                 	db	100	;'d'
  2500  00FC8D  20                 	db	32
  2501  00FC8E  25                 	db	37
  2502  00FC8F  32                 	db	50	;'2'
  2503  00FC90  2E                 	db	46
  2504  00FC91  34                 	db	52	;'4'
  2505  00FC92  66                 	db	102	;'f'
  2506  00FC93  20                 	db	32
  2507  00FC94  20                 	db	32
  2508  00FC95  20                 	db	32
  2509  00FC96  20                 	db	32
  2510  00FC97  20                 	db	32
  2511  00FC98  20                 	db	32
  2512  00FC99  20                 	db	32
  2513  00FC9A  20                 	db	32
  2514  00FC9B  20                 	db	32
  2515  00FC9C  20                 	db	32
  2516  00FC9D  00                 	db	0
  2517  00FC9E                     
  2518                           ; BSR set to: 57
  2519  00FC9E  20                 	db	32
  2520  00FC9F  4D                 	db	77	;'M'
  2521  00FCA0  65                 	db	101	;'e'
  2522  00FCA1  73                 	db	115	;'s'
  2523  00FCA2  67                 	db	103	;'g'
  2524  00FCA3  20                 	db	32
  2525  00FCA4  25                 	db	37
  2526  00FCA5  64                 	db	100	;'d'
  2527  00FCA6  20                 	db	32
  2528  00FCA7  53                 	db	83	;'S'
  2529  00FCA8  74                 	db	116	;'t'
  2530  00FCA9  61                 	db	97	;'a'
  2531  00FCAA  63                 	db	99	;'c'
  2532  00FCAB  6B                 	db	107	;'k'
  2533  00FCAC  20                 	db	32
  2534  00FCAD  25                 	db	37
  2535  00FCAE  64                 	db	100	;'d'
  2536  00FCAF  20                 	db	32
  2537  00FCB0  20                 	db	32
  2538  00FCB1  20                 	db	32
  2539  00FCB2  20                 	db	32
  2540  00FCB3  20                 	db	32
  2541  00FCB4  20                 	db	32
  2542  00FCB5  00                 	db	0
  2543  00FCB6                     STR_37:
  2544                           
  2545                           ; BSR set to: 57
  2546  00FCB6  45                 	db	69	;'E'
  2547  00FCB7  53                 	db	83	;'S'
  2548  00FCB8  52                 	db	82	;'R'
  2549  00FCB9  20                 	db	32
  2550  00FCBA  20                 	db	32
  2551  00FCBB  25                 	db	37
  2552  00FCBC  32                 	db	50	;'2'
  2553  00FCBD  2E                 	db	46
  2554  00FCBE  36                 	db	54	;'6'
  2555  00FCBF  66                 	db	102	;'f'
  2556  00FCC0  20                 	db	32
  2557  00FCC1  20                 	db	32
  2558  00FCC2  20                 	db	32
  2559  00FCC3  20                 	db	32
  2560  00FCC4  20                 	db	32
  2561  00FCC5  20                 	db	32
  2562  00FCC6  20                 	db	32
  2563  00FCC7  20                 	db	32
  2564  00FCC8  20                 	db	32
  2565  00FCC9  20                 	db	32
  2566  00FCCA  20                 	db	32
  2567  00FCCB  20                 	db	32
  2568  00FCCC  00                 	db	0
  2569  00FCCD                     STR_36:
  2570                           
  2571                           ; BSR set to: 57
  2572  00FCCD  53                 	db	83	;'S'
  2573  00FCCE  25                 	db	37
  2574  00FCCF  63                 	db	99	;'c'
  2575  00FCD0  43                 	db	67	;'C'
  2576  00FCD1  20                 	db	32
  2577  00FCD2  25                 	db	37
  2578  00FCD3  64                 	db	100	;'d'
  2579  00FCD4  20                 	db	32
  2580  00FCD5  52                 	db	82	;'R'
  2581  00FCD6  55                 	db	85	;'U'
  2582  00FCD7  4E                 	db	78	;'N'
  2583  00FCD8  20                 	db	32
  2584  00FCD9  25                 	db	37
  2585  00FCDA  64                 	db	100	;'d'
  2586  00FCDB  20                 	db	32
  2587  00FCDC  20                 	db	32
  2588  00FCDD  20                 	db	32
  2589  00FCDE  20                 	db	32
  2590  00FCDF  20                 	db	32
  2591  00FCE0  20                 	db	32
  2592  00FCE1  20                 	db	32
  2593  00FCE2  20                 	db	32
  2594  00FCE3  00                 	db	0
  2595  00FCE4                     STR_34:
  2596                           
  2597                           ; BSR set to: 57
  2598  00FCE4  42                 	db	66	;'B'
  2599  00FCE5  41                 	db	65	;'A'
  2600  00FCE6  54                 	db	84	;'T'
  2601  00FCE7  54                 	db	84	;'T'
  2602  00FCE8  20                 	db	32
  2603  00FCE9  50                 	db	80	;'P'
  2604  00FCEA  57                 	db	87	;'W'
  2605  00FCEB  52                 	db	82	;'R'
  2606  00FCEC  20                 	db	32
  2607  00FCED  25                 	db	37
  2608  00FCEE  33                 	db	51	;'3'
  2609  00FCEF  2E                 	db	46
  2610  00FCF0  32                 	db	50	;'2'
  2611  00FCF1  66                 	db	102	;'f'
  2612  00FCF2  20                 	db	32
  2613  00FCF3  20                 	db	32
  2614  00FCF4  20                 	db	32
  2615  00FCF5  20                 	db	32
  2616  00FCF6  20                 	db	32
  2617  00FCF7  20                 	db	32
  2618  00FCF8  20                 	db	32
  2619  00FCF9  20                 	db	32
  2620  00FCFA  00                 	db	0
  2621  00FCFB                     STR_38:
  2622                           
  2623                           ; BSR set to: 57
  2624  00FCFB  52                 	db	82	;'R'
  2625  00FCFC  31                 	db	49	;'1'
  2626  00FCFD  20                 	db	32
  2627  00FCFE  25                 	db	37
  2628  00FCFF  32                 	db	50	;'2'
  2629  00FD00  2E                 	db	46
  2630  00FD01  33                 	db	51	;'3'
  2631  00FD02  66                 	db	102	;'f'
  2632  00FD03  20                 	db	32
  2633  00FD04  25                 	db	37
  2634  00FD05  33                 	db	51	;'3'
  2635  00FD06  2E                 	db	46
  2636  00FD07  34                 	db	52	;'4'
  2637  00FD08  66                 	db	102	;'f'
  2638  00FD09  20                 	db	32
  2639  00FD0A  20                 	db	32
  2640  00FD0B  20                 	db	32
  2641  00FD0C  20                 	db	32
  2642  00FD0D  20                 	db	32
  2643  00FD0E  20                 	db	32
  2644  00FD0F  20                 	db	32
  2645  00FD10  20                 	db	32
  2646  00FD11  00                 	db	0
  2647  00FD12                     STR_39:
  2648                           
  2649                           ; BSR set to: 57
  2650  00FD12  52                 	db	82	;'R'
  2651  00FD13  32                 	db	50	;'2'
  2652  00FD14  20                 	db	32
  2653  00FD15  25                 	db	37
  2654  00FD16  32                 	db	50	;'2'
  2655  00FD17  2E                 	db	46
  2656  00FD18  33                 	db	51	;'3'
  2657  00FD19  66                 	db	102	;'f'
  2658  00FD1A  20                 	db	32
  2659  00FD1B  25                 	db	37
  2660  00FD1C  33                 	db	51	;'3'
  2661  00FD1D  2E                 	db	46
  2662  00FD1E  34                 	db	52	;'4'
  2663  00FD1F  66                 	db	102	;'f'
  2664  00FD20  20                 	db	32
  2665  00FD21  20                 	db	32
  2666  00FD22  20                 	db	32
  2667  00FD23  20                 	db	32
  2668  00FD24  20                 	db	32
  2669  00FD25  20                 	db	32
  2670  00FD26  20                 	db	32
  2671  00FD27  20                 	db	32
  2672  00FD28  00                 	db	0
  2673  00FD29                     STR_35:
  2674                           
  2675                           ; BSR set to: 57
  2676  00FD29  42                 	db	66	;'B'
  2677  00FD2A  41                 	db	65	;'A'
  2678  00FD2B  48                 	db	72	;'H'
  2679  00FD2C  20                 	db	32
  2680  00FD2D  25                 	db	37
  2681  00FD2E  33                 	db	51	;'3'
  2682  00FD2F  2E                 	db	46
  2683  00FD30  32                 	db	50	;'2'
  2684  00FD31  66                 	db	102	;'f'
  2685  00FD32  20                 	db	32
  2686  00FD33  50                 	db	80	;'P'
  2687  00FD34  25                 	db	37
  2688  00FD35  33                 	db	51	;'3'
  2689  00FD36  2E                 	db	46
  2690  00FD37  32                 	db	50	;'2'
  2691  00FD38  66                 	db	102	;'f'
  2692  00FD39  20                 	db	32
  2693  00FD3A  20                 	db	32
  2694  00FD3B  20                 	db	32
  2695  00FD3C  20                 	db	32
  2696  00FD3D  20                 	db	32
  2697  00FD3E  20                 	db	32
  2698  00FD3F  00                 	db	0
  2699  00FD40                     STR_16:
  2700                           
  2701                           ; BSR set to: 57
  2702  00FD40  45                 	db	69	;'E'
  2703  00FD41  53                 	db	83	;'S'
  2704  00FD42  52                 	db	82	;'R'
  2705  00FD43  20                 	db	32
  2706  00FD44  20                 	db	32
  2707  00FD45  25                 	db	37
  2708  00FD46  32                 	db	50	;'2'
  2709  00FD47  2E                 	db	46
  2710  00FD48  36                 	db	54	;'6'
  2711  00FD49  66                 	db	102	;'f'
  2712  00FD4A  20                 	db	32
  2713  00FD4B  20                 	db	32
  2714  00FD4C  20                 	db	32
  2715  00FD4D  20                 	db	32
  2716  00FD4E  20                 	db	32
  2717  00FD4F  20                 	db	32
  2718  00FD50  20                 	db	32
  2719  00FD51  20                 	db	32
  2720  00FD52  20                 	db	32
  2721  00FD53  20                 	db	32
  2722  00FD54  20                 	db	32
  2723  00FD55  00                 	db	0
  2724  00FD56                     STR_10:
  2725                           
  2726                           ; BSR set to: 57
  2727  00FD56  53                 	db	83	;'S'
  2728  00FD57  74                 	db	116	;'t'
  2729  00FD58  61                 	db	97	;'a'
  2730  00FD59  74                 	db	116	;'t'
  2731  00FD5A  69                 	db	105	;'i'
  2732  00FD5B  63                 	db	99	;'c'
  2733  00FD5C  20                 	db	32
  2734  00FD5D  53                 	db	83	;'S'
  2735  00FD5E  4F                 	db	79	;'O'
  2736  00FD5F  43                 	db	67	;'C'
  2737  00FD60  20                 	db	32
  2738  00FD61  25                 	db	37
  2739  00FD62  64                 	db	100	;'d'
  2740  00FD63  20                 	db	32
  2741  00FD64  20                 	db	32
  2742  00FD65  20                 	db	32
  2743  00FD66  20                 	db	32
  2744  00FD67  20                 	db	32
  2745  00FD68  20                 	db	32
  2746  00FD69  20                 	db	32
  2747  00FD6A  20                 	db	32
  2748  00FD6B  00                 	db	0
  2749  00FD6C                     STR_31:
  2750                           
  2751                           ; BSR set to: 57
  2752  00FD6C  42                 	db	66	;'B'
  2753  00FD6D  41                 	db	65	;'A'
  2754  00FD6E  54                 	db	84	;'T'
  2755  00FD6F  20                 	db	32
  2756  00FD70  49                 	db	73	;'I'
  2757  00FD71  57                 	db	87	;'W'
  2758  00FD72  48                 	db	72	;'H'
  2759  00FD73  20                 	db	32
  2760  00FD74  25                 	db	37
  2761  00FD75  34                 	db	52	;'4'
  2762  00FD76  2E                 	db	46
  2763  00FD77  31                 	db	49	;'1'
  2764  00FD78  66                 	db	102	;'f'
  2765  00FD79  20                 	db	32
  2766  00FD7A  20                 	db	32
  2767  00FD7B  20                 	db	32
  2768  00FD7C  20                 	db	32
  2769  00FD7D  20                 	db	32
  2770  00FD7E  20                 	db	32
  2771  00FD7F  20                 	db	32
  2772  00FD80  20                 	db	32
  2773  00FD81  00                 	db	0
  2774  00FD82                     STR_32:
  2775                           
  2776                           ; BSR set to: 57
  2777  00FD82  42                 	db	66	;'B'
  2778  00FD83  41                 	db	65	;'A'
  2779  00FD84  54                 	db	84	;'T'
  2780  00FD85  20                 	db	32
  2781  00FD86  4F                 	db	79	;'O'
  2782  00FD87  57                 	db	87	;'W'
  2783  00FD88  48                 	db	72	;'H'
  2784  00FD89  20                 	db	32
  2785  00FD8A  25                 	db	37
  2786  00FD8B  34                 	db	52	;'4'
  2787  00FD8C  2E                 	db	46
  2788  00FD8D  31                 	db	49	;'1'
  2789  00FD8E  66                 	db	102	;'f'
  2790  00FD8F  20                 	db	32
  2791  00FD90  20                 	db	32
  2792  00FD91  20                 	db	32
  2793  00FD92  20                 	db	32
  2794  00FD93  20                 	db	32
  2795  00FD94  20                 	db	32
  2796  00FD95  20                 	db	32
  2797  00FD96  20                 	db	32
  2798  00FD97  00                 	db	0
  2799  00FD98                     STR_33:
  2800                           
  2801                           ; BSR set to: 57
  2802  00FD98  42                 	db	66	;'B'
  2803  00FD99  41                 	db	65	;'A'
  2804  00FD9A  54                 	db	84	;'T'
  2805  00FD9B  20                 	db	32
  2806  00FD9C  54                 	db	84	;'T'
  2807  00FD9D  57                 	db	87	;'W'
  2808  00FD9E  48                 	db	72	;'H'
  2809  00FD9F  20                 	db	32
  2810  00FDA0  25                 	db	37
  2811  00FDA1  34                 	db	52	;'4'
  2812  00FDA2  2E                 	db	46
  2813  00FDA3  31                 	db	49	;'1'
  2814  00FDA4  66                 	db	102	;'f'
  2815  00FDA5  20                 	db	32
  2816  00FDA6  20                 	db	32
  2817  00FDA7  20                 	db	32
  2818  00FDA8  20                 	db	32
  2819  00FDA9  20                 	db	32
  2820  00FDAA  20                 	db	32
  2821  00FDAB  20                 	db	32
  2822  00FDAC  20                 	db	32
  2823  00FDAD  00                 	db	0
  2824  00FDAE                     STR_27:
  2825                           
  2826                           ; BSR set to: 57
  2827  00FDAE  49                 	db	73	;'I'
  2828  00FDAF  4E                 	db	78	;'N'
  2829  00FDB0  56                 	db	86	;'V'
  2830  00FDB1  20                 	db	32
  2831  00FDB2  20                 	db	32
  2832  00FDB3  57                 	db	87	;'W'
  2833  00FDB4  48                 	db	72	;'H'
  2834  00FDB5  20                 	db	32
  2835  00FDB6  25                 	db	37
  2836  00FDB7  33                 	db	51	;'3'
  2837  00FDB8  2E                 	db	46
  2838  00FDB9  32                 	db	50	;'2'
  2839  00FDBA  66                 	db	102	;'f'
  2840  00FDBB  20                 	db	32
  2841  00FDBC  20                 	db	32
  2842  00FDBD  20                 	db	32
  2843  00FDBE  20                 	db	32
  2844  00FDBF  20                 	db	32
  2845  00FDC0  20                 	db	32
  2846  00FDC1  20                 	db	32
  2847  00FDC2  20                 	db	32
  2848  00FDC3  00                 	db	0
  2849  00FDC4                     STR_26:
  2850                           
  2851                           ; BSR set to: 57
  2852  00FDC4  4C                 	db	76	;'L'
  2853  00FDC5  4F                 	db	79	;'O'
  2854  00FDC6  41                 	db	65	;'A'
  2855  00FDC7  44                 	db	68	;'D'
  2856  00FDC8  20                 	db	32
  2857  00FDC9  57                 	db	87	;'W'
  2858  00FDCA  48                 	db	72	;'H'
  2859  00FDCB  20                 	db	32
  2860  00FDCC  25                 	db	37
  2861  00FDCD  33                 	db	51	;'3'
  2862  00FDCE  2E                 	db	46
  2863  00FDCF  32                 	db	50	;'2'
  2864  00FDD0  66                 	db	102	;'f'
  2865  00FDD1  20                 	db	32
  2866  00FDD2  20                 	db	32
  2867  00FDD3  20                 	db	32
  2868  00FDD4  20                 	db	32
  2869  00FDD5  20                 	db	32
  2870  00FDD6  20                 	db	32
  2871  00FDD7  20                 	db	32
  2872  00FDD8  20                 	db	32
  2873  00FDD9  00                 	db	0
  2874  00FDDA                     STR_25:
  2875                           
  2876                           ; BSR set to: 57
  2877  00FDDA  50                 	db	80	;'P'
  2878  00FDDB  56                 	db	86	;'V'
  2879  00FDDC  20                 	db	32
  2880  00FDDD  25                 	db	37
  2881  00FDDE  63                 	db	99	;'c'
  2882  00FDDF  20                 	db	32
  2883  00FDE0  57                 	db	87	;'W'
  2884  00FDE1  48                 	db	72	;'H'
  2885  00FDE2  20                 	db	32
  2886  00FDE3  25                 	db	37
  2887  00FDE4  33                 	db	51	;'3'
  2888  00FDE5  2E                 	db	46
  2889  00FDE6  32                 	db	50	;'2'
  2890  00FDE7  66                 	db	102	;'f'
  2891  00FDE8  20                 	db	32
  2892  00FDE9  20                 	db	32
  2893  00FDEA  20                 	db	32
  2894  00FDEB  20                 	db	32
  2895  00FDEC  20                 	db	32
  2896  00FDED  20                 	db	32
  2897  00FDEE  20                 	db	32
  2898  00FDEF  00                 	db	0
  2899  00FDF0                     STR_24:
  2900                           
  2901                           ; BSR set to: 57
  2902  00FDF0  49                 	db	73	;'I'
  2903  00FDF1  4E                 	db	78	;'N'
  2904  00FDF2  56                 	db	86	;'V'
  2905  00FDF3  20                 	db	32
  2906  00FDF4  20                 	db	32
  2907  00FDF5  50                 	db	80	;'P'
  2908  00FDF6  57                 	db	87	;'W'
  2909  00FDF7  52                 	db	82	;'R'
  2910  00FDF8  20                 	db	32
  2911  00FDF9  25                 	db	37
  2912  00FDFA  33                 	db	51	;'3'
  2913  00FDFB  2E                 	db	46
  2914  00FDFC  32                 	db	50	;'2'
  2915  00FDFD  66                 	db	102	;'f'
  2916  00FDFE  20                 	db	32
  2917  00FDFF  20                 	db	32
  2918  00FE00  20                 	db	32
  2919  00FE01  20                 	db	32
  2920  00FE02  20                 	db	32
  2921  00FE03  20                 	db	32
  2922  00FE04  20                 	db	32
  2923  00FE05  00                 	db	0
  2924  00FE06                     STR_23:
  2925                           
  2926                           ; BSR set to: 57
  2927  00FE06  4C                 	db	76	;'L'
  2928  00FE07  4F                 	db	79	;'O'
  2929  00FE08  41                 	db	65	;'A'
  2930  00FE09  44                 	db	68	;'D'
  2931  00FE0A  20                 	db	32
  2932  00FE0B  50                 	db	80	;'P'
  2933  00FE0C  57                 	db	87	;'W'
  2934  00FE0D  52                 	db	82	;'R'
  2935  00FE0E  20                 	db	32
  2936  00FE0F  25                 	db	37
  2937  00FE10  33                 	db	51	;'3'
  2938  00FE11  2E                 	db	46
  2939  00FE12  32                 	db	50	;'2'
  2940  00FE13  66                 	db	102	;'f'
  2941  00FE14  20                 	db	32
  2942  00FE15  20                 	db	32
  2943  00FE16  20                 	db	32
  2944  00FE17  20                 	db	32
  2945  00FE18  20                 	db	32
  2946  00FE19  20                 	db	32
  2947  00FE1A  20                 	db	32
  2948  00FE1B  00                 	db	0
  2949  00FE1C                     STR_22:
  2950                           
  2951                           ; BSR set to: 57
  2952  00FE1C  50                 	db	80	;'P'
  2953  00FE1D  56                 	db	86	;'V'
  2954  00FE1E  20                 	db	32
  2955  00FE1F  25                 	db	37
  2956  00FE20  63                 	db	99	;'c'
  2957  00FE21  20                 	db	32
  2958  00FE22  50                 	db	80	;'P'
  2959  00FE23  57                 	db	87	;'W'
  2960  00FE24  52                 	db	82	;'R'
  2961  00FE25  20                 	db	32
  2962  00FE26  25                 	db	37
  2963  00FE27  33                 	db	51	;'3'
  2964  00FE28  2E                 	db	46
  2965  00FE29  32                 	db	50	;'2'
  2966  00FE2A  66                 	db	102	;'f'
  2967  00FE2B  20                 	db	32
  2968  00FE2C  20                 	db	32
  2969  00FE2D  20                 	db	32
  2970  00FE2E  20                 	db	32
  2971  00FE2F  20                 	db	32
  2972  00FE30  20                 	db	32
  2973  00FE31  00                 	db	0
  2974  00FE32                     STR_11:
  2975                           
  2976                           ; BSR set to: 57
  2977  00FE32  42                 	db	66	;'B'
  2978  00FE33  61                 	db	97	;'a'
  2979  00FE34  74                 	db	116	;'t'
  2980  00FE35  74                 	db	116	;'t'
  2981  00FE36  65                 	db	101	;'e'
  2982  00FE37  72                 	db	114	;'r'
  2983  00FE38  79                 	db	121	;'y'
  2984  00FE39  20                 	db	32
  2985  00FE3A  41                 	db	65	;'A'
  2986  00FE3B  68                 	db	104	;'h'
  2987  00FE3C  20                 	db	32
  2988  00FE3D  25                 	db	37
  2989  00FE3E  33                 	db	51	;'3'
  2990  00FE3F  2E                 	db	46
  2991  00FE40  32                 	db	50	;'2'
  2992  00FE41  66                 	db	102	;'f'
  2993  00FE42  20                 	db	32
  2994  00FE43  20                 	db	32
  2995  00FE44  20                 	db	32
  2996  00FE45  20                 	db	32
  2997  00FE46  20                 	db	32
  2998  00FE47  00                 	db	0
  2999  00FE48                     STR_29:
  3000                           
  3001                           ; BSR set to: 57
  3002  00FE48  42                 	db	66	;'B'
  3003  00FE49  56                 	db	86	;'V'
  3004  00FE4A  20                 	db	32
  3005  00FE4B  25                 	db	37
  3006  00FE4C  32                 	db	50	;'2'
  3007  00FE4D  2E                 	db	46
  3008  00FE4E  32                 	db	50	;'2'
  3009  00FE4F  66                 	db	102	;'f'
  3010  00FE50  20                 	db	32
  3011  00FE51  42                 	db	66	;'B'
  3012  00FE52  41                 	db	65	;'A'
  3013  00FE53  20                 	db	32
  3014  00FE54  25                 	db	37
  3015  00FE55  32                 	db	50	;'2'
  3016  00FE56  2E                 	db	46
  3017  00FE57  32                 	db	50	;'2'
  3018  00FE58  66                 	db	102	;'f'
  3019  00FE59  20                 	db	32
  3020  00FE5A  20                 	db	32
  3021  00FE5B  20                 	db	32
  3022  00FE5C  20                 	db	32
  3023  00FE5D  00                 	db	0
  3024  00FE5E                     STR_30:
  3025                           
  3026                           ; BSR set to: 57
  3027  00FE5E  43                 	db	67	;'C'
  3028  00FE5F  56                 	db	86	;'V'
  3029  00FE60  20                 	db	32
  3030  00FE61  25                 	db	37
  3031  00FE62  32                 	db	50	;'2'
  3032  00FE63  2E                 	db	46
  3033  00FE64  32                 	db	50	;'2'
  3034  00FE65  66                 	db	102	;'f'
  3035  00FE66  20                 	db	32
  3036  00FE67  4C                 	db	76	;'L'
  3037  00FE68  41                 	db	65	;'A'
  3038  00FE69  20                 	db	32
  3039  00FE6A  25                 	db	37
  3040  00FE6B  32                 	db	50	;'2'
  3041  00FE6C  2E                 	db	46
  3042  00FE6D  32                 	db	50	;'2'
  3043  00FE6E  66                 	db	102	;'f'
  3044  00FE6F  20                 	db	32
  3045  00FE70  20                 	db	32
  3046  00FE71  20                 	db	32
  3047  00FE72  20                 	db	32
  3048  00FE73  00                 	db	0
  3049  00FE74                     STR_28:
  3050                           
  3051                           ; BSR set to: 57
  3052  00FE74  50                 	db	80	;'P'
  3053  00FE75  56                 	db	86	;'V'
  3054  00FE76  20                 	db	32
  3055  00FE77  25                 	db	37
  3056  00FE78  32                 	db	50	;'2'
  3057  00FE79  2E                 	db	46
  3058  00FE7A  32                 	db	50	;'2'
  3059  00FE7B  66                 	db	102	;'f'
  3060  00FE7C  20                 	db	32
  3061  00FE7D  50                 	db	80	;'P'
  3062  00FE7E  41                 	db	65	;'A'
  3063  00FE7F  20                 	db	32
  3064  00FE80  25                 	db	37
  3065  00FE81  32                 	db	50	;'2'
  3066  00FE82  2E                 	db	46
  3067  00FE83  32                 	db	50	;'2'
  3068  00FE84  66                 	db	102	;'f'
  3069  00FE85  20                 	db	32
  3070  00FE86  20                 	db	32
  3071  00FE87  20                 	db	32
  3072  00FE88  20                 	db	32
  3073  00FE89  00                 	db	0
  3074  00FE8A                     STR_40:
  3075                           
  3076                           ; BSR set to: 57
  3077  00FE8A  25                 	db	37
  3078  00FE8B  64                 	db	100	;'d'
  3079  00FE8C  20                 	db	32
  3080  00FE8D  25                 	db	37
  3081  00FE8E  32                 	db	50	;'2'
  3082  00FE8F  2E                 	db	46
  3083  00FE90  34                 	db	52	;'4'
  3084  00FE91  66                 	db	102	;'f'
  3085  00FE92  2C                 	db	44
  3086  00FE93  20                 	db	32
  3087  00FE94  25                 	db	37
  3088  00FE95  64                 	db	100	;'d'
  3089  00FE96  20                 	db	32
  3090  00FE97  20                 	db	32
  3091  00FE98  54                 	db	84	;'T'
  3092  00FE99  52                 	db	82	;'R'
  3093  00FE9A  49                 	db	73	;'I'
  3094  00FE9B  4D                 	db	77	;'M'
  3095  00FE9C  20                 	db	32
  3096  00FE9D  20                 	db	32
  3097  00FE9E  20                 	db	32
  3098  00FE9F  00                 	db	0
  3099  00FEA0                     STR_5:
  3100                           
  3101                           ; BSR set to: 57
  3102  00FEA0  20                 	db	32
  3103  00FEA1  20                 	db	32
  3104  00FEA2  20                 	db	32
  3105  00FEA3  20                 	db	32
  3106  00FEA4  20                 	db	32
  3107  00FEA5  20                 	db	32
  3108  00FEA6  20                 	db	32
  3109  00FEA7  20                 	db	32
  3110  00FEA8  20                 	db	32
  3111  00FEA9  20                 	db	32
  3112  00FEAA  20                 	db	32
  3113  00FEAB  20                 	db	32
  3114  00FEAC  20                 	db	32
  3115  00FEAD  20                 	db	32
  3116  00FEAE  20                 	db	32
  3117  00FEAF  20                 	db	32
  3118  00FEB0  20                 	db	32
  3119  00FEB1  20                 	db	32
  3120  00FEB2  20                 	db	32
  3121  00FEB3  20                 	db	32
  3122  00FEB4  00                 	db	0
  3123  00FEB5                     STR_8:
  3124                           
  3125                           ; BSR set to: 57
  3126  00FEB5  42                 	db	66	;'B'
  3127  00FEB6  56                 	db	86	;'V'
  3128  00FEB7  20                 	db	32
  3129  00FEB8  25                 	db	37
  3130  00FEB9  32                 	db	50	;'2'
  3131  00FEBA  2E                 	db	46
  3132  00FEBB  34                 	db	52	;'4'
  3133  00FEBC  66                 	db	102	;'f'
  3134  00FEBD  20                 	db	32
  3135  00FEBE  20                 	db	32
  3136  00FEBF  20                 	db	32
  3137  00FEC0  20                 	db	32
  3138  00FEC1  20                 	db	32
  3139  00FEC2  20                 	db	32
  3140  00FEC3  20                 	db	32
  3141  00FEC4  20                 	db	32
  3142  00FEC5  20                 	db	32
  3143  00FEC6  20                 	db	32
  3144  00FEC7  20                 	db	32
  3145  00FEC8  20                 	db	32
  3146  00FEC9  00                 	db	0
  3147  00FECA                     STR_4:
  3148                           
  3149                           ; BSR set to: 57
  3150  00FECA  20                 	db	32
  3151  00FECB  4E                 	db	78	;'N'
  3152  00FECC  53                 	db	83	;'S'
  3153  00FECD  41                 	db	65	;'A'
  3154  00FECE  53                 	db	83	;'S'
  3155  00FECF  50                 	db	80	;'P'
  3156  00FED0  4F                 	db	79	;'O'
  3157  00FED1  4F                 	db	79	;'O'
  3158  00FED2  4B                 	db	75	;'K'
  3159  00FED3  20                 	db	32
  3160  00FED4  20                 	db	32
  3161  00FED5  20                 	db	32
  3162  00FED6  20                 	db	32
  3163  00FED7  20                 	db	32
  3164  00FED8  20                 	db	32
  3165  00FED9  20                 	db	32
  3166  00FEDA  20                 	db	32
  3167  00FEDB  20                 	db	32
  3168  00FEDC  20                 	db	32
  3169  00FEDD  20                 	db	32
  3170  00FEDE  00                 	db	0
  3171  00FEDF                     STR_12:
  3172                           
  3173                           ; BSR set to: 57
  3174  00FEDF  42                 	db	66	;'B'
  3175  00FEE0  61                 	db	97	;'a'
  3176  00FEE1  74                 	db	116	;'t'
  3177  00FEE2  74                 	db	116	;'t'
  3178  00FEE3  65                 	db	101	;'e'
  3179  00FEE4  72                 	db	114	;'r'
  3180  00FEE5  79                 	db	121	;'y'
  3181  00FEE6  20                 	db	32
  3182  00FEE7  45                 	db	69	;'E'
  3183  00FEE8  53                 	db	83	;'S'
  3184  00FEE9  52                 	db	82	;'R'
  3185  00FEEA  20                 	db	32
  3186  00FEEB  20                 	db	32
  3187  00FEEC  20                 	db	32
  3188  00FEED  20                 	db	32
  3189  00FEEE  20                 	db	32
  3190  00FEEF  20                 	db	32
  3191  00FEF0  20                 	db	32
  3192  00FEF1  20                 	db	32
  3193  00FEF2  20                 	db	32
  3194  00FEF3  00                 	db	0
  3195  00FEF4                     STR_13:
  3196                           
  3197                           ; BSR set to: 57
  3198  00FEF4  43                 	db	67	;'C'
  3199  00FEF5  61                 	db	97	;'a'
  3200  00FEF6  6C                 	db	108	;'l'
  3201  00FEF7  63                 	db	99	;'c'
  3202  00FEF8  75                 	db	117	;'u'
  3203  00FEF9  6C                 	db	108	;'l'
  3204  00FEFA  61                 	db	97	;'a'
  3205  00FEFB  74                 	db	116	;'t'
  3206  00FEFC  69                 	db	105	;'i'
  3207  00FEFD  6F                 	db	111	;'o'
  3208  00FEFE  6E                 	db	110	;'n'
  3209  00FEFF  20                 	db	32
  3210  00FF00  20                 	db	32
  3211  00FF01  20                 	db	32
  3212  00FF02  20                 	db	32
  3213  00FF03  20                 	db	32
  3214  00FF04  20                 	db	32
  3215  00FF05  20                 	db	32
  3216  00FF06  20                 	db	32
  3217  00FF07  20                 	db	32
  3218  00FF08  00                 	db	0
  3219  00FF09                     STR_2:
  3220                           
  3221                           ; BSR set to: 57
  3222  00FF09  20                 	db	32
  3223  00FF0A  56                 	db	86	;'V'
  3224  00FF0B  65                 	db	101	;'e'
  3225  00FF0C  72                 	db	114	;'r'
  3226  00FF0D  73                 	db	115	;'s'
  3227  00FF0E  69                 	db	105	;'i'
  3228  00FF0F  6F                 	db	111	;'o'
  3229  00FF10  6E                 	db	110	;'n'
  3230  00FF11  20                 	db	32
  3231  00FF12  25                 	db	37
  3232  00FF13  73                 	db	115	;'s'
  3233  00FF14  20                 	db	32
  3234  00FF15  20                 	db	32
  3235  00FF16  20                 	db	32
  3236  00FF17  20                 	db	32
  3237  00FF18  20                 	db	32
  3238  00FF19  20                 	db	32
  3239  00FF1A  20                 	db	32
  3240  00FF1B  20                 	db	32
  3241  00FF1C  20                 	db	32
  3242  00FF1D  00                 	db	0
  3243  00FF1E                     STR_1:
  3244                           
  3245                           ; BSR set to: 57
  3246  00FF1E  20                 	db	32
  3247  00FF1F  4D                 	db	77	;'M'
  3248  00FF20  42                 	db	66	;'B'
  3249  00FF21  4D                 	db	77	;'M'
  3250  00FF22  43                 	db	67	;'C'
  3251  00FF23  20                 	db	32
  3252  00FF24  53                 	db	83	;'S'
  3253  00FF25  4F                 	db	79	;'O'
  3254  00FF26  4C                 	db	76	;'L'
  3255  00FF27  41                 	db	65	;'A'
  3256  00FF28  52                 	db	82	;'R'
  3257  00FF29  4D                 	db	77	;'M'
  3258  00FF2A  4F                 	db	79	;'O'
  3259  00FF2B  4E                 	db	78	;'N'
  3260  00FF2C  20                 	db	32
  3261  00FF2D  20                 	db	32
  3262  00FF2E  20                 	db	32
  3263  00FF2F  20                 	db	32
  3264  00FF30  20                 	db	32
  3265  00FF31  20                 	db	32
  3266  00FF32  00                 	db	0
  3267  00FF33                     STR_15:
  3268                           
  3269                           ; BSR set to: 57
  3270  00FF33  43                 	db	67	;'C'
  3271  00FF34  68                 	db	104	;'h'
  3272  00FF35  65                 	db	101	;'e'
  3273  00FF36  63                 	db	99	;'c'
  3274  00FF37  6B                 	db	107	;'k'
  3275  00FF38  69                 	db	105	;'i'
  3276  00FF39  6E                 	db	110	;'n'
  3277  00FF3A  67                 	db	103	;'g'
  3278  00FF3B  20                 	db	32
  3279  00FF3C  25                 	db	37
  3280  00FF3D  63                 	db	99	;'c'
  3281  00FF3E  20                 	db	32
  3282  00FF3F  25                 	db	37
  3283  00FF40  63                 	db	99	;'c'
  3284  00FF41  20                 	db	32
  3285  00FF42  20                 	db	32
  3286  00FF43  20                 	db	32
  3287  00FF44  20                 	db	32
  3288  00FF45  20                 	db	32
  3289  00FF46  20                 	db	32
  3290  00FF47  00                 	db	0
  3291  00FF48                     STR_14:
  3292                           
  3293                           ; BSR set to: 57
  3294  00FF48  43                 	db	67	;'C'
  3295  00FF49  68                 	db	104	;'h'
  3296  00FF4A  65                 	db	101	;'e'
  3297  00FF4B  63                 	db	99	;'c'
  3298  00FF4C  6B                 	db	107	;'k'
  3299  00FF4D  20                 	db	32
  3300  00FF4E  33                 	db	51	;'3'
  3301  00FF4F  30                 	db	48	;'0'
  3302  00FF50  20                 	db	32
  3303  00FF51  73                 	db	115	;'s'
  3304  00FF52  65                 	db	101	;'e'
  3305  00FF53  63                 	db	99	;'c'
  3306  00FF54  6F                 	db	111	;'o'
  3307  00FF55  6E                 	db	110	;'n'
  3308  00FF56  64                 	db	100	;'d'
  3309  00FF57  73                 	db	115	;'s'
  3310  00FF58  20                 	db	32
  3311  00FF59  20                 	db	32
  3312  00FF5A  20                 	db	32
  3313  00FF5B  20                 	db	32
  3314  00FF5C  00                 	db	0
  3315  00FF5D                     STR_47:
  3316                           
  3317                           ; BSR set to: 57
  3318  00FF5D  48                 	db	72	;'H'
  3319  00FF5E  45                 	db	69	;'E'
  3320  00FF5F  4C                 	db	76	;'L'
  3321  00FF60  50                 	db	80	;'P'
  3322  00FF61  20                 	db	32
  3323  00FF62  25                 	db	37
  3324  00FF63  73                 	db	115	;'s'
  3325  00FF64  20                 	db	32
  3326  00FF65  20                 	db	32
  3327  00FF66  20                 	db	32
  3328  00FF67  20                 	db	32
  3329  00FF68  20                 	db	32
  3330  00FF69  20                 	db	32
  3331  00FF6A  20                 	db	32
  3332  00FF6B  20                 	db	32
  3333  00FF6C  20                 	db	32
  3334  00FF6D  20                 	db	32
  3335  00FF6E  20                 	db	32
  3336  00FF6F  00                 	db	0
  3337  00FF70                     
  3338                           ; BSR set to: 57
  3339  00FF70  44                 	db	68	;'D'
  3340  00FF71  49                 	db	73	;'I'
  3341  00FF72  53                 	db	83	;'S'
  3342  00FF73  50                 	db	80	;'P'
  3343  00FF74  4C                 	db	76	;'L'
  3344  00FF75  41                 	db	65	;'A'
  3345  00FF76  59                 	db	89	;'Y'
  3346  00FF77  20                 	db	32
  3347  00FF78  25                 	db	37
  3348  00FF79  73                 	db	115	;'s'
  3349  00FF7A  20                 	db	32
  3350  00FF7B  20                 	db	32
  3351  00FF7C  20                 	db	32
  3352  00FF7D  20                 	db	32
  3353  00FF7E  20                 	db	32
  3354  00FF7F  20                 	db	32
  3355  00FF80  20                 	db	32
  3356  00FF81  20                 	db	32
  3357  00FF82  00                 	db	0
  3358  00FF83                     
  3359                           ; BSR set to: 57
  3360  00FF83  25                 	db	37
  3361  00FF84  64                 	db	100	;'d'
  3362  00FF85  20                 	db	32
  3363  00FF86  25                 	db	37
  3364  00FF87  32                 	db	50	;'2'
  3365  00FF88  2E                 	db	46
  3366  00FF89  34                 	db	52	;'4'
  3367  00FF8A  66                 	db	102	;'f'
  3368  00FF8B  2C                 	db	44
  3369  00FF8C  20                 	db	32
  3370  00FF8D  25                 	db	37
  3371  00FF8E  64                 	db	100	;'d'
  3372  00FF8F  20                 	db	32
  3373  00FF90  20                 	db	32
  3374  00FF91  20                 	db	32
  3375  00FF92  23                 	db	35
  3376  00FF93  00                 	db	0
  3377  00FF94                     STR_19:
  3378                           
  3379                           ; BSR set to: 57
  3380  00FF94  25                 	db	37
  3381  00FF95  64                 	db	100	;'d'
  3382  00FF96  20                 	db	32
  3383  00FF97  25                 	db	37
  3384  00FF98  32                 	db	50	;'2'
  3385  00FF99  2E                 	db	46
  3386  00FF9A  34                 	db	52	;'4'
  3387  00FF9B  66                 	db	102	;'f'
  3388  00FF9C  20                 	db	32
  3389  00FF9D  20                 	db	32
  3390  00FF9E  20                 	db	32
  3391  00FF9F  25                 	db	37
  3392  00FFA0  64                 	db	100	;'d'
  3393  00FFA1  20                 	db	32
  3394  00FFA2  20                 	db	32
  3395  00FFA3  00                 	db	0
  3396  00FFA4                     STR_51:
  3397                           
  3398                           ; BSR set to: 57
  3399  00FFA4  76                 	db	118	;'v'
  3400  00FFA5  74                 	db	116	;'t'
  3401  00FFA6  65                 	db	101	;'e'
  3402  00FFA7  72                 	db	114	;'r'
  3403  00FFA8  6D                 	db	109	;'m'
  3404  00FFA9  20                 	db	32
  3405  00FFAA  25                 	db	37
  3406  00FFAB  78                 	db	120	;'x'
  3407  00FFAC  3A                 	db	58	;':'
  3408  00FFAD  25                 	db	37
  3409  00FFAE  78                 	db	120	;'x'
  3410  00FFAF  20                 	db	32
  3411  00FFB0  20                 	db	32
  3412  00FFB1  20                 	db	32
  3413  00FFB2  00                 	db	0
  3414  00FFB3                     STR_45:
  3415                           
  3416                           ; BSR set to: 57
  3417  00FFB3  4A                 	db	74	;'J'
  3418  00FFB4  61                 	db	97	;'a'
  3419  00FFB5  6E                 	db	110	;'n'
  3420  00FFB6  20                 	db	32
  3421  00FFB7  31                 	db	49	;'1'
  3422  00FFB8  37                 	db	55	;'7'
  3423  00FFB9  20                 	db	32
  3424  00FFBA  32                 	db	50	;'2'
  3425  00FFBB  30                 	db	48	;'0'
  3426  00FFBC  32                 	db	50	;'2'
  3427  00FFBD  30                 	db	48	;'0'
  3428  00FFBE  00                 	db	0
  3429  00FFBF                     STR_49:
  3430                           
  3431                           ; BSR set to: 57
  3432  00FFBF  25                 	db	37
  3433  00FFC0  73                 	db	115	;'s'
  3434  00FFC1  20                 	db	32
  3435  00FFC2  20                 	db	32
  3436  00FFC3  20                 	db	32
  3437  00FFC4  20                 	db	32
  3438  00FFC5  20                 	db	32
  3439  00FFC6  20                 	db	32
  3440  00FFC7  20                 	db	32
  3441  00FFC8  00                 	db	0
  3442  00FFC9                     STR_46:
  3443                           
  3444                           ; BSR set to: 57
  3445  00FFC9  30                 	db	48	;'0'
  3446  00FFCA  37                 	db	55	;'7'
  3447  00FFCB  3A                 	db	58	;':'
  3448  00FFCC  35                 	db	53	;'5'
  3449  00FFCD  38                 	db	56	;'8'
  3450  00FFCE  3A                 	db	58	;':'
  3451  00FFCF  33                 	db	51	;'3'
  3452  00FFD0  30                 	db	48	;'0'
  3453  00FFD1  00                 	db	0
  3454  00FFD2                     STR_3:
  3455                           
  3456                           ; BSR set to: 57
  3457  00FFD2  31                 	db	49	;'1'
  3458  00FFD3  2E                 	db	46
  3459  00FFD4  31                 	db	49	;'1'
  3460  00FFD5  31                 	db	49	;'1'
  3461  00FFD6  00                 	db	0
  3462  00FFD7                     STR_65:
  3463                           
  3464                           ; BSR set to: 57
  3465  00FFD7  49                 	db	73	;'I'
  3466  00FFD8  4E                 	db	78	;'N'
  3467  00FFD9  46                 	db	70	;'F'
  3468  00FFDA  00                 	db	0
  3469  00FFDB                     STR_69:
  3470                           
  3471                           ; BSR set to: 57
  3472  00FFDB  4E                 	db	78	;'N'
  3473  00FFDC  41                 	db	65	;'A'
  3474  00FFDD  4E                 	db	78	;'N'
  3475  00FFDE  00                 	db	0
  3476  00FFDF                     STR_66:
  3477                           
  3478                           ; BSR set to: 57
  3479  00FFDF  69                 	db	105	;'i'
  3480  00FFE0  6E                 	db	110	;'n'
  3481  00FFE1  66                 	db	102	;'f'
  3482  00FFE2  00                 	db	0
  3483  00FFE3                     STR_70:
  3484                           
  3485                           ; BSR set to: 57
  3486  00FFE3  6E                 	db	110	;'n'
  3487  00FFE4  61                 	db	97	;'a'
  3488  00FFE5  6E                 	db	110	;'n'
  3489  00FFE6  00                 	db	0
  3490  00FFE7                     STR_96:
  3491                           
  3492                           ; BSR set to: 57
  3493  00FFE7  6C                 	db	108	;'l'
  3494  00FFE8  58                 	db	88	;'X'
  3495  00FFE9  00                 	db	0
  3496  00FFEA                     STR_73:
  3497                           
  3498                           ; BSR set to: 57
  3499  00FFEA  6C                 	db	108	;'l'
  3500  00FFEB  64                 	db	100	;'d'
  3501  00FFEC  00                 	db	0
  3502  00FFED                     STR_82:
  3503                           
  3504                           ; BSR set to: 57
  3505  00FFED  6C                 	db	108	;'l'
  3506  00FFEE  66                 	db	102	;'f'
  3507  00FFEF  00                 	db	0
  3508  00FFF0                     STR_77:
  3509                           
  3510                           ; BSR set to: 57
  3511  00FFF0  6C                 	db	108	;'l'
  3512  00FFF1  69                 	db	105	;'i'
  3513  00FFF2  00                 	db	0
  3514  00FFF3                     STR_87:
  3515                           
  3516                           ; BSR set to: 57
  3517  00FFF3  6C                 	db	108	;'l'
  3518  00FFF4  75                 	db	117	;'u'
  3519  00FFF5  00                 	db	0
  3520  00FFF6                     STR_92:
  3521                           
  3522                           ; BSR set to: 57
  3523  00FFF6  6C                 	db	108	;'l'
  3524  00FFF7  78                 	db	120	;'x'
  3525  00FFF8  00                 	db	0
  3526  00FFF9                     STR_44:
  3527                           
  3528                           ; BSR set to: 57
  3529  00FFF9  25                 	db	37
  3530  00FFFA  63                 	db	99	;'c'
  3531  00FFFB  00                 	db	0
  3532  00FFFC                     STR_43:
  3533                           
  3534                           ; BSR set to: 57
  3535  00FFFC  25                 	db	37
  3536  00FFFD  73                 	db	115	;'s'
  3537  00FFFE  00                 	db	0
  3538  0000                     
  3539                           ; #config settings
  3540  00FFFF  00                 	db	0	; dummy byte at the end
  3541  0000                     
  3542                           	psect	cinit
  3543  01A2CA                     __pcinit:
  3544                           	opt callstack 0
  3545  01A2CA                     start_initialization:
  3546                           	opt callstack 0
  3547  01A2CA                     __initialization:
  3548                           	opt callstack 0
  3549                           
  3550                           ; Initialize objects allocated to BIGRAM (811 bytes)
  3551                           ; load TBLPTR registers with __pidataBIGRAM
  3552  01A2CA  0E54               	movlw	low __pidataBIGRAM
  3553  01A2CC  6EF6               	movwf	tblptrl,c
  3554  01A2CE  0E6B               	movlw	high __pidataBIGRAM
  3555  01A2D0  6EF7               	movwf	tblptrh,c
  3556  01A2D2  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  3557  01A2D4  6EF8               	movwf	tblptru,c
  3558  01A2D6  EE01  F0FF         	lfsr	0,__pdataBIGRAM
  3559  01A2DA  EE20 F32B          	lfsr	2,811
  3560  01A2DE                     copy_data0:
  3561  01A2DE  0009               	tblrd		*+
  3562  01A2E0  006F FFD7 FFEE     	movff	tablat,postinc0
  3563  01A2E6  50DD               	movf	postdec2,w,c
  3564  01A2E8  50D9               	movf	fsr2l,w,c
  3565  01A2EA  E1F9               	bnz	copy_data0
  3566  01A2EC  50DA               	movf	fsr2h,w,c
  3567  01A2EE  E1F7               	bnz	copy_data0
  3568                           
  3569                           ; Initialize objects allocated to BANK1 (205 bytes)
  3570                           ; load TBLPTR registers with __pidataBANK1
  3571  01A2F0  0E50               	movlw	low __pidataBANK1
  3572  01A2F2  6EF6               	movwf	tblptrl,c
  3573  01A2F4  0EA5               	movlw	high __pidataBANK1
  3574  01A2F6  6EF7               	movwf	tblptrh,c
  3575  01A2F8  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  3576  01A2FA  6EF8               	movwf	tblptru,c
  3577  01A2FC  EE00  F100         	lfsr	0,__pdataBANK1
  3578  01A300  EE20 F0CD          	lfsr	2,205
  3579  01A304                     copy_data1:
  3580  01A304  0009               	tblrd		*+
  3581  01A306  006F FFD7 FFEE     	movff	tablat,postinc0
  3582  01A30C  50DD               	movf	postdec2,w,c
  3583  01A30E  50D9               	movf	fsr2l,w,c
  3584  01A310  E1F9               	bnz	copy_data1
  3585                           
  3586                           ; Initialize objects allocated to BANK0 (54 bytes)
  3587                           ; load TBLPTR registers with __pidataBANK0
  3588  01A312  0E74               	movlw	low __pidataBANK0
  3589  01A314  6EF6               	movwf	tblptrl,c
  3590  01A316  0EBC               	movlw	high __pidataBANK0
  3591  01A318  6EF7               	movwf	tblptrh,c
  3592  01A31A  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  3593  01A31C  6EF8               	movwf	tblptru,c
  3594  01A31E  EE00  F0AF         	lfsr	0,__pdataBANK0
  3595  01A322  EE20 F036          	lfsr	2,54
  3596  01A326                     copy_data2:
  3597  01A326  0009               	tblrd		*+
  3598  01A328  006F FFD7 FFEE     	movff	tablat,postinc0
  3599  01A32E  50DD               	movf	postdec2,w,c
  3600  01A330  50D9               	movf	fsr2l,w,c
  3601  01A332  E1F9               	bnz	copy_data2
  3602                           
  3603                           ; Clear objects allocated to BIGRAM (482 bytes)
  3604  01A334  EE02  F02A         	lfsr	0,__pbssBIGRAM
  3605  01A338  EE20 F1E2          	lfsr	2,482
  3606  01A33C                     clear_0:
  3607  01A33C  6AEE               	clrf	postinc0,c
  3608  01A33E  50DD               	movf	postdec2,w,c
  3609  01A340  50D9               	movf	fsr2l,w,c
  3610  01A342  E1FC               	bnz	clear_0
  3611  01A344  50DA               	movf	fsr2h,w,c
  3612  01A346  E1FA               	bnz	clear_0
  3613                           
  3614                           ; Clear objects allocated to BANK4 (255 bytes)
  3615  01A348  EE01  F000         	lfsr	0,__pbssBANK4
  3616  01A34C  EE20 F0FF          	lfsr	2,255
  3617  01A350                     clear_1:
  3618  01A350  6AEE               	clrf	postinc0,c
  3619  01A352  50DD               	movf	postdec2,w,c
  3620  01A354  50D9               	movf	fsr2l,w,c
  3621  01A356  E1FC               	bnz	clear_1
  3622  01A358  50DA               	movf	fsr2h,w,c
  3623  01A35A  E1FA               	bnz	clear_1
  3624                           
  3625                           ; Clear objects allocated to BANK3 (198 bytes)
  3626  01A35C  EE00  F300         	lfsr	0,__pbssBANK3
  3627  01A360  0EC6               	movlw	198
  3628  01A362                     clear_2:
  3629  01A362  6AEE               	clrf	postinc0,c
  3630  01A364  06E8               	decf	wreg,f,c
  3631  01A366  E1FD               	bnz	clear_2
  3632                           
  3633                           ; Clear objects allocated to BANK2 (231 bytes)
  3634  01A368  EE00  F200         	lfsr	0,__pbssBANK2
  3635  01A36C  0EE7               	movlw	231
  3636  01A36E                     clear_3:
  3637  01A36E  6AEE               	clrf	postinc0,c
  3638  01A370  06E8               	decf	wreg,f,c
  3639  01A372  E1FD               	bnz	clear_3
  3640                           
  3641                           ; Clear objects allocated to BANK1 (46 bytes)
  3642  01A374  EE00  F1CD         	lfsr	0,__pbssBANK1
  3643  01A378  0E2E               	movlw	46
  3644  01A37A                     clear_4:
  3645  01A37A  6AEE               	clrf	postinc0,c
  3646  01A37C  06E8               	decf	wreg,f,c
  3647  01A37E  E1FD               	bnz	clear_4
  3648                           
  3649                           ; Clear objects allocated to BANK0 (79 bytes)
  3650  01A380  EE00  F060         	lfsr	0,__pbssBANK0
  3651  01A384  0E4F               	movlw	79
  3652  01A386                     clear_5:
  3653  01A386  6AEE               	clrf	postinc0,c
  3654  01A388  06E8               	decf	wreg,f,c
  3655  01A38A  E1FD               	bnz	clear_5
  3656                           
  3657                           ; Clear objects allocated to COMRAM (14 bytes)
  3658  01A38C  EE00  F03A         	lfsr	0,__pbssCOMRAM
  3659  01A390  0E0E               	movlw	14
  3660  01A392                     clear_6:
  3661  01A392  6AEE               	clrf	postinc0,c
  3662  01A394  06E8               	decf	wreg,f,c
  3663  01A396  E1FD               	bnz	clear_6
  3664                           
  3665                           ;
  3666                           ; Setup IVTBASE
  3667                           ;
  3668  01A398  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  3669  01A39A  6ED5               	movwf	213,c
  3670  01A39C  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  3671  01A39E  6ED6               	movwf	214,c
  3672  01A3A0  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  3673  01A3A2  6ED7               	movwf	215,c
  3674  01A3A4                     end_of_initialization:
  3675                           	opt callstack 0
  3676  01A3A4                     __end_of__initialization:
  3677                           	opt callstack 0
  3678  01A3A4  0100               	movlb	0
  3679  01A3A6  EF22  F089         	goto	_main	;jump to C main() function
  3680                           
  3681                           	psect	bssCOMRAM
  3682  00003A                     __pbssCOMRAM:
  3683                           	opt callstack 0
  3684  00003A                     _width:
  3685                           	opt callstack 0
  3686  00003A                     	ds	2
  3687  00003C                     _prec:
  3688                           	opt callstack 0
  3689  00003C                     	ds	2
  3690  00003E                     _flags:
  3691                           	opt callstack 0
  3692  00003E                     	ds	2
  3693  000040                     calc_bsoc@log_update_wait:
  3694                           	opt callstack 0
  3695  000040                     	ds	1
  3696  000041                     check_day_time@day_delay:
  3697                           	opt callstack 0
  3698  000041                     	ds	1
  3699  000042                     dac_spi_control@S0:
  3700                           	opt callstack 0
  3701  000042                     	ds	1
  3702  000043                     dac_spi_control@init:
  3703                           	opt callstack 0
  3704  000043                     	ds	1
  3705  000044                     _uart2RxHead:
  3706                           	opt callstack 0
  3707  000044                     	ds	1
  3708  000045                     _uart2TxBufferRemaining:
  3709                           	opt callstack 0
  3710  000045                     	ds	1
  3711  000046                     _uart2TxTail:
  3712                           	opt callstack 0
  3713  000046                     	ds	1
  3714  000047                     _uart1RxHead:
  3715                           	opt callstack 0
  3716  000047                     	ds	1
  3717                           
  3718                           	psect	bssBANK0
  3719  000060                     __pbssBANK0:
  3720                           	opt callstack 0
  3721  000060                     fabsf@F463:
  3722                           	opt callstack 0
  3723  000060                     	ds	4
  3724  000064                     ___fpclassifyf@F463:
  3725                           	opt callstack 0
  3726  000064                     	ds	4
  3727  000068                     calc_ror_data@bcror:
  3728                           	opt callstack 0
  3729  000068                     	ds	4
  3730  00006C                     calc_ror_data@bvror:
  3731                           	opt callstack 0
  3732  00006C                     	ds	4
  3733  000070                     calc_model_data@bcror:
  3734                           	opt callstack 0
  3735  000070                     	ds	4
  3736  000074                     calc_model_data@bvror:
  3737                           	opt callstack 0
  3738  000074                     	ds	4
  3739  000078                     wdtdelay@dcount:
  3740                           	opt callstack 0
  3741  000078                     	ds	4
  3742  00007C                     _TMR3_InterruptHandler:
  3743                           	opt callstack 0
  3744  00007C                     	ds	3
  3745  00007F                     _TMR5_InterruptHandler:
  3746                           	opt callstack 0
  3747  00007F                     	ds	3
  3748  000082                     _TMR6_InterruptHandler:
  3749                           	opt callstack 0
  3750  000082                     	ds	3
  3751  000085                     _ADCC_ADTI_InterruptHandler:
  3752                           	opt callstack 0
  3753  000085                     	ds	3
  3754  000088                     _ADCC_ADI_InterruptHandler:
  3755                           	opt callstack 0
  3756  000088                     	ds	3
  3757  00008B                     _UART1_RxInterruptHandler:
  3758                           	opt callstack 0
  3759  00008B                     	ds	3
  3760  00008E                     _UART2_TxInterruptHandler:
  3761                           	opt callstack 0
  3762  00008E                     	ds	3
  3763  000091                     _UART2_RxInterruptHandler:
  3764                           	opt callstack 0
  3765  000091                     	ds	3
  3766  000094                     _INT1_InterruptHandler:
  3767                           	opt callstack 0
  3768  000094                     	ds	3
  3769  000097                     _INT0_InterruptHandler:
  3770                           	opt callstack 0
  3771  000097                     	ds	3
  3772  00009A                     _nout:
  3773                           	opt callstack 0
  3774  00009A                     	ds	2
  3775  00009C                     TMR3_ISR@CountCallBack:
  3776                           	opt callstack 0
  3777  00009C                     	ds	2
  3778  00009E                     _timer3ReloadVal:
  3779                           	opt callstack 0
  3780  00009E                     	ds	2
  3781  0000A0                     TMR5_ISR@CountCallBack:
  3782                           	opt callstack 0
  3783  0000A0                     	ds	2
  3784  0000A2                     _timer5ReloadVal:
  3785                           	opt callstack 0
  3786  0000A2                     	ds	2
  3787  0000A4                     esr_check@esr_state:
  3788                           	opt callstack 0
  3789  0000A4                     	ds	1
  3790  0000A5                     dac_spi_control@SB:
  3791                           	opt callstack 0
  3792  0000A5                     	ds	1
  3793  0000A6                     dac_spi_control@SC:
  3794                           	opt callstack 0
  3795  0000A6                     	ds	1
  3796  0000A7                     dac_spi_control@S2:
  3797                           	opt callstack 0
  3798  0000A7                     	ds	1
  3799  0000A8                     dac_spi_control@S1:
  3800                           	opt callstack 0
  3801  0000A8                     	ds	1
  3802  0000A9                     _mode_sw:
  3803                           	opt callstack 0
  3804  0000A9                     	ds	1
  3805  0000AA                     _uart2RxCount:
  3806                           	opt callstack 0
  3807  0000AA                     	ds	1
  3808  0000AB                     _uart2RxTail:
  3809                           	opt callstack 0
  3810  0000AB                     	ds	1
  3811  0000AC                     _uart2TxHead:
  3812                           	opt callstack 0
  3813  0000AC                     	ds	1
  3814  0000AD                     _uart1RxCount:
  3815                           	opt callstack 0
  3816  0000AD                     	ds	1
  3817  0000AE                     _uart1RxTail:
  3818                           	opt callstack 0
  3819  0000AE                     	ds	1
  3820                           
  3821                           	psect	dataBANK0
  3822  0000AF                     __pdataBANK0:
  3823                           	opt callstack 0
  3824  0000AF                     _R:
  3825                           	opt callstack 0
  3826  0000AF                     	ds	54
  3827                           
  3828                           	psect	bssBANK1
  3829  0001CD                     __pbssBANK1:
  3830                           	opt callstack 0
  3831  0001CD                     _spi_link:
  3832                           	opt callstack 0
  3833  0001CD                     	ds	12
  3834  0001D9                     _uart1RxBuffer:
  3835                           	opt callstack 0
  3836  0001D9                     	ds	8
  3837  0001E1                     spinners@s:
  3838                           	opt callstack 0
  3839  0001E1                     	ds	6
  3840  0001E7                     floorf@F524:
  3841                           	opt callstack 0
  3842  0001E7                     	ds	4
  3843  0001EB                     _utctime:
  3844                           	opt callstack 0
  3845  0001EB                     	ds	4
  3846  0001EF                     _P:
  3847                           	opt callstack 0
  3848  0001EF                     	ds	4
  3849  0001F3                     _seed:
  3850                           	opt callstack 0
  3851  0001F3                     	ds	8
  3852                           
  3853                           	psect	dataBANK1
  3854  000100                     __pdataBANK1:
  3855                           	opt callstack 0
  3856  000100                     stoa@F1166:
  3857                           	opt callstack 0
  3858  000100                     	ds	7
  3859  000107                     _V:
  3860                           	opt callstack 0
  3861  000107                     	ds	191
  3862  0001C6                     _H:
  3863                           	opt callstack 0
  3864  0001C6                     	ds	7
  3865                           
  3866                           	psect	bssBANK2
  3867  000200                     __pbssBANK2:
  3868                           	opt callstack 0
  3869  000200                     lp_filter@smooth:
  3870                           	opt callstack 0
  3871  000200                     	ds	84
  3872  000254                     _S:
  3873                           	opt callstack 0
  3874  000254                     	ds	41
  3875  00027D                     _tickCount:
  3876                           	opt callstack 0
  3877  00027D                     	ds	26
  3878  000297                     _dbuf:
  3879                           	opt callstack 0
  3880  000297                     	ds	80
  3881                           
  3882                           	psect	bssBANK3
  3883  000300                     __pbssBANK3:
  3884                           	opt callstack 0
  3885  000300                     _uart2TxBuffer:
  3886                           	opt callstack 0
  3887  000300                     	ds	64
  3888  000340                     _ring_buf2:
  3889                           	opt callstack 0
  3890  000340                     	ds	67
  3891  000383                     _ring_buf1:
  3892                           	opt callstack 0
  3893  000383                     	ds	67
  3894                           
  3895                           	psect	bssBANK4
  3896  000400                     __pbssBANK4:
  3897                           	opt callstack 0
  3898  000400                     _uart2RxBuffer:
  3899                           	opt callstack 0
  3900  000400                     	ds	255
  3901                           
  3902                           	psect	bssBIGRAM
  3903  00082A                     __pbssBIGRAM:
  3904                           	opt callstack 0
  3905  00082A                     _D:
  3906                           	opt callstack 0
  3907  00082A                     	ds	482
  3908                           
  3909                           	psect	dataBIGRAM
  3910  0004FF                     __pdataBIGRAM:
  3911                           	opt callstack 0
  3912  0004FF                     _port_data:
  3913                           	opt callstack 0
  3914  0004FF                     	ds	512
  3915  0006FF                     _C:
  3916                           	opt callstack 0
  3917  0006FF                     	ds	299
  3918                           
  3919                           	psect	cstackBANK0
  3920  0000E5                     __pcstackBANK0:
  3921                           	opt callstack 0
  3922  0000E5                     ??_TMR3_ISR:
  3923                           
  3924                           ; 1 bytes @ 0x0
  3925  0000E5                     	ds	25
  3926                           
  3927                           	psect	cstackCOMRAM
  3928  000021                     __pcstackCOMRAM:
  3929                           	opt callstack 0
  3930  000021                     ??_ADCC_ThresholdISR:
  3931  000021                     
  3932                           ; 1 bytes @ 0x0
  3933  000021                     	ds	5
  3934  000026                     ??_TMR6_ISR:
  3935                           
  3936                           ; 1 bytes @ 0x5
  3937  000026                     	ds	1
  3938  000027                     ??_INT1_ISR:
  3939  000027                     
  3940                           ; 1 bytes @ 0x6
  3941  000027                     	ds	4
  3942  00002B                     ??_TMR5_ISR:
  3943                           
  3944                           ; 1 bytes @ 0xA
  3945  00002B                     	ds	15
  3946                           
  3947 ;;
  3948 ;;Main: autosize = 17, tempsize = 0, incstack = 0, save=0
  3949 ;;
  3950 ;; *************** function _main *****************
  3951 ;; Defined at:
  3952 ;;		line 187 in file "main.c"
  3953 ;; Parameters:    Size  Location     Type
  3954 ;;		None
  3955 ;; Auto vars:     Size  Location     Type
  3956 ;;  esr_temp        4  [STACK] float 
  3957 ;;  i_esr           2  [STACK] unsigned short 
  3958 ;;  shape           1  [STACK] unsigned char 
  3959 ;;  inp_index       1  [STACK] unsigned char 
  3960 ;;  k               1  [STACK] unsigned char 
  3961 ;;  j               1  [STACK] unsigned char 
  3962 ;;  i               1  [STACK] unsigned char 
  3963 ;;  mode            1  [STACK] enum E17013
  3964 ;;  i_ror           1  [STACK] unsigned char 
  3965 ;; Return value:  Size  Location     Type
  3966 ;;                  1  [STACK] void 
  3967 ;; Registers used:
  3968 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  3969 ;; Tracked objects:
  3970 ;;		On entry : 0/0
  3971 ;;		On exit  : 0/0
  3972 ;;		Unchanged: 0/0
  3973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3977 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3978 ;;Total ram usage:        0 bytes
  3979 ;; Hardware stack levels required when called:   29
  3980 ;; This function calls:
  3981 ;;		_SYSTEM_Initialize
  3982 ;;		_StartTimer
  3983 ;;		_TimerDone
  3984 ;;		_WaitMs
  3985 ;;		___fladd
  3986 ;;		___flge
  3987 ;;		___fltol
  3988 ;;		_calc_model_data
  3989 ;;		_calc_ror_data
  3990 ;;		_check_adc_scan
  3991 ;;		_check_enter_button
  3992 ;;		_check_help
  3993 ;;		_clear_adc_scan
  3994 ;;		_clear_hid_pflags
  3995 ;;		_conv_raw_result
  3996 ;;		_convert_adc_data
  3997 ;;		_eaDogM_WriteCommand
  3998 ;;		_esr_check
  3999 ;;		_fabsf
  4000 ;;		_get_raw_result
  4001 ;;		_get_switch
  4002 ;;		_get_vterm_ptr
  4003 ;;		_hid_display
  4004 ;;		_init_bsoc
  4005 ;;		_init_display
  4006 ;;		_init_port_dma
  4007 ;;		_lp_filter
  4008 ;;		_mode_lamp_dim
  4009 ;;		_set_dac
  4010 ;;		_set_dac_a
  4011 ;;		_set_dac_b
  4012 ;;		_set_display_info
  4013 ;;		_set_load_relay_one
  4014 ;;		_set_load_relay_two
  4015 ;;		_set_vterm
  4016 ;;		_spinners
  4017 ;;		_sprintf
  4018 ;;		_srand
  4019 ;;		_start_adc_scan
  4020 ;;		_start_switch_handler
  4021 ;;		_static_soc
  4022 ;;		_update_lcd
  4023 ;;		_wait_lcd_done
  4024 ;; This function is called by:
  4025 ;;		Startup code after reset
  4026 ;; This function uses a reentrant model
  4027 ;;
  4028                           
  4029                           	psect	text0
  4030  011244                     __ptext0:
  4031                           	opt callstack 0
  4032  011244                     _main:
  4033                           	opt callstack 0
  4034                           
  4035                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  4036  011244  0E11               	movlw	17
  4037  011246  26E1               	addwf	fsr1l,f,c
  4038  011248  0E00               	movlw	0
  4039  01124A  22E2               	addwfc	fsr1h,f,c
  4040                           
  4041                           ;main.c: 189:  UI_STATES mode;;main.c: 190:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC, i_ror;
  4042                           ;stkvar	_inp_index @ sp[(-17)+11]
  4043                           
  4044                           ;incstack = 0
  4045  01124C  0EFA               	movlw	-6
  4046  01124E  6AE3               	clrf	plusw1,c
  4047                           
  4048                           ;stkvar	_i @ sp[(-17)+14]
  4049  011250  0EFD               	movlw	-3
  4050  011252  6AE3               	clrf	plusw1,c
  4051                           
  4052                           ;stkvar	_j @ sp[(-17)+13]
  4053  011254  0EFC               	movlw	-4
  4054  011256  6AE3               	clrf	plusw1,c
  4055  011258  2AE3               	incf	plusw1,f,c
  4056                           
  4057                           ;stkvar	_k @ sp[(-17)+12]
  4058  01125A  0EFB               	movlw	-5
  4059  01125C  6AE3               	clrf	plusw1,c
  4060  01125E  82E3               	bsf	plusw1,1,c
  4061                           
  4062                           ;main.c: 193:  SYSTEM_Initialize();
  4063  011260  ECC5  F0DB         	call	_SYSTEM_Initialize	;wreg free
  4064                           
  4065                           ; BSR set to: 60
  4066                           ;main.c: 196:  (INTCON0bits.GIEH = 1);
  4067  011264  8ED2               	bsf	210,7,c	;volatile
  4068                           
  4069                           ; BSR set to: 60
  4070                           ;main.c: 199:  (INTCON0bits.GIEL = 1);
  4071  011266  8CD2               	bsf	210,6,c	;volatile
  4072                           
  4073                           ; BSR set to: 60
  4074                           ;main.c: 201:  V.ui_state = UI_STATE_INIT;
  4075  011268  0101               	movlb	1	; () banked
  4076  01126A  6B07               	clrf	_V& (0+255),b	;volatile
  4077                           
  4078                           ; BSR set to: 1
  4079                           ;main.c: 206:  WaitMs(300);
  4080  01126C  0E2C               	movlw	44
  4081  01126E  6EE6               	movwf	postinc1,c
  4082  011270  0E01               	movlw	1
  4083  011272  6EE6               	movwf	postinc1,c
  4084  011274  EC55  F0DE         	call	_WaitMs	;wreg free
  4085                           
  4086                           ;main.c: 207:  if (PORTBbits.RB0) {
  4087  011278  A0CB               	btfss	203,0,c	;volatile
  4088  01127A  D004               	goto	l13365
  4089                           
  4090                           ;main.c: 208:   mode = UI_STATE_HOST;
  4091                           ;stkvar	_mode @ sp[(-17)+15]
  4092  01127C  0EFE               	movlw	-2
  4093  01127E  6AE3               	clrf	plusw1,c
  4094  011280  2AE3               	incf	plusw1,f,c
  4095                           
  4096                           ;main.c: 209:  } else {
  4097  011282  D004               	goto	l13367
  4098  011284                     l13365:
  4099                           
  4100                           ;main.c: 210:   mode = UI_STATE_LOG;
  4101                           ;stkvar	_mode @ sp[(-17)+15]
  4102  011284  0EFE               	movlw	-2
  4103  011286  6AE3               	clrf	plusw1,c
  4104  011288  80E3               	bsf	plusw1,0,c
  4105  01128A  82E3               	bsf	plusw1,1,c	;indir
  4106  01128C                     l13367:
  4107                           
  4108                           ;main.c: 213:  if (mode == UI_STATE_HOST) {
  4109                           ;stkvar	_mode @ sp[(-17)+15]
  4110  01128C  0EFE               	movlw	-2
  4111  01128E  04E3               	decf	plusw1,w,c
  4112  011290  A4D8               	btfss	status,2,c
  4113  011292  D007               	goto	l1342
  4114                           
  4115                           ;main.c: 214:   do { LATDbits.LATD0 = 1; } while(0);
  4116  011294  80BD               	bsf	189,0,c	;volatile
  4117                           
  4118                           ;main.c: 215:   V.mode_pwm = 70;
  4119  011296  0E00               	movlw	0
  4120  011298  0101               	movlb	1	; () banked
  4121  01129A  6F9D               	movwf	(_V+150)& (0+255),b	;volatile
  4122  01129C  0E46               	movlw	70
  4123  01129E  6F9C               	movwf	(_V+149)& (0+255),b	;volatile
  4124                           
  4125                           ;main.c: 216:  } else {
  4126  0112A0  D004               	goto	l13371
  4127  0112A2                     l1342:
  4128  0112A2  90BD               	bcf	189,0,c	;volatile
  4129                           
  4130                           ;main.c: 218:   V.mode_pwm = 0;
  4131  0112A4  0101               	movlb	1	; () banked
  4132  0112A6  6B9C               	clrf	(_V+149)& (0+255),b	;volatile
  4133  0112A8  6B9D               	clrf	(_V+150)& (0+255),b	;volatile
  4134  0112AA                     l13371:
  4135                           
  4136                           ; BSR set to: 1
  4137                           ;main.c: 220:  mode_lamp_dim(V.mode_pwm);
  4138  0112AA  0060  F673  FFE6   	movff	_V+149,postinc1
  4139  0112B0  0060  F677  FFE6   	movff	_V+150,postinc1
  4140  0112B6  ECF5  F0E1         	call	_mode_lamp_dim	;wreg free
  4141  0112BA  D325               	goto	l13491
  4142  0112BC                     l13373:
  4143                           
  4144                           ; BSR set to: 1
  4145                           ;main.c: 228:    init_port_dma();
  4146  0112BC  ECD8  F0DE         	call	_init_port_dma	;wreg free
  4147                           
  4148                           ; BSR set to: 59
  4149                           ;main.c: 230:    init_display();
  4150  0112C0  EC7E  F0D0         	call	_init_display	;wreg free
  4151                           
  4152                           ; BSR set to: 61
  4153                           ;main.c: 231:    eaDogM_WriteCommand(0b00001100);
  4154  0112C4  0E0C               	movlw	12
  4155  0112C6  6EE6               	movwf	postinc1,c
  4156  0112C8  EC6B  F0E2         	call	_eaDogM_WriteCommand	;wreg free
  4157                           
  4158                           ; BSR set to: 0
  4159                           ;main.c: 235:    set_load_relay_one(1);
  4160  0112CC  0E01               	movlw	1
  4161  0112CE  6EE6               	movwf	postinc1,c
  4162  0112D0  EC53  F0E2         	call	_set_load_relay_one	;wreg free
  4163                           
  4164                           ;main.c: 236:    set_load_relay_two(1);
  4165  0112D4  0E01               	movlw	1
  4166  0112D6  6EE6               	movwf	postinc1,c
  4167  0112D8  EC4B  F0E2         	call	_set_load_relay_two	;wreg free
  4168                           
  4169                           ;main.c: 238:    V.ui_state = mode;
  4170                           ;stkvar	_mode @ sp[(-17)+15]
  4171  0112DC  0EFE               	movlw	-2
  4172  0112DE  006F FF8C  F107    	movff	plusw1,_V	;volatile
  4173                           
  4174                           ;main.c: 239:    srand(1957);
  4175  0112E4  0EA5               	movlw	165
  4176  0112E6  6EE6               	movwf	postinc1,c
  4177  0112E8  0E07               	movlw	7
  4178  0112EA  6EE6               	movwf	postinc1,c
  4179  0112EC  EC70  F0DE         	call	_srand	;wreg free
  4180                           
  4181                           ; BSR set to: 1
  4182                           ;main.c: 240:    set_vterm(0);
  4183  0112F0  0E00               	movlw	0
  4184  0112F2  6EE6               	movwf	postinc1,c
  4185  0112F4  ECA0  F0E1         	call	_set_vterm	;wreg free
  4186                           
  4187                           ;main.c: 241:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON      ");
  4188  0112F8  0E1E               	movlw	low STR_1
  4189  0112FA  6EE6               	movwf	postinc1,c
  4190  0112FC  0EFF               	movlw	high STR_1
  4191  0112FE  6EE6               	movwf	postinc1,c
  4192  011300  0E00               	movlw	0
  4193  011302  6EE6               	movwf	postinc1,c
  4194  011304  0E00               	movlw	0
  4195  011306  6EE6               	movwf	postinc1,c
  4196  011308  EC38  F0DF         	call	_get_vterm_ptr	;wreg free
  4197  01130C  0060  F007  FFE6   	movff	btemp,postinc1
  4198  011312  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4199  011318  0E04               	movlw	4
  4200  01131A  6EE6               	movwf	postinc1,c
  4201  01131C  EC08  F0CF         	call	_sprintf	;wreg free
  4202                           
  4203                           ; BSR set to: 0
  4204                           ;main.c: 242:    sprintf(get_vterm_ptr(1, 0), " Version %s         ", "1.11");
  4205  011320  0ED2               	movlw	low STR_3
  4206  011322  6EE6               	movwf	postinc1,c
  4207  011324  0EFF               	movlw	high STR_3
  4208  011326  6EE6               	movwf	postinc1,c
  4209  011328  0E09               	movlw	low STR_2
  4210  01132A  6EE6               	movwf	postinc1,c
  4211  01132C  0EFF               	movlw	high STR_2
  4212  01132E  6EE6               	movwf	postinc1,c
  4213  011330  0E00               	movlw	0
  4214  011332  6EE6               	movwf	postinc1,c
  4215  011334  0E01               	movlw	1
  4216  011336  6EE6               	movwf	postinc1,c
  4217  011338  EC38  F0DF         	call	_get_vterm_ptr	;wreg free
  4218  01133C  0060  F007  FFE6   	movff	btemp,postinc1
  4219  011342  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4220  011348  0E06               	movlw	6
  4221  01134A  6EE6               	movwf	postinc1,c
  4222  01134C  EC08  F0CF         	call	_sprintf	;wreg free
  4223                           
  4224                           ; BSR set to: 0
  4225                           ;main.c: 243:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK           ");
  4226  011350  0ECA               	movlw	low STR_4
  4227  011352  6EE6               	movwf	postinc1,c
  4228  011354  0EFE               	movlw	high STR_4
  4229  011356  6EE6               	movwf	postinc1,c
  4230  011358  0E00               	movlw	0
  4231  01135A  6EE6               	movwf	postinc1,c
  4232  01135C  0E02               	movlw	2
  4233  01135E  6EE6               	movwf	postinc1,c
  4234  011360  EC38  F0DF         	call	_get_vterm_ptr	;wreg free
  4235  011364  0060  F007  FFE6   	movff	btemp,postinc1
  4236  01136A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4237  011370  0E04               	movlw	4
  4238  011372  6EE6               	movwf	postinc1,c
  4239  011374  EC08  F0CF         	call	_sprintf	;wreg free
  4240                           
  4241                           ; BSR set to: 0
  4242                           ;main.c: 244:    sprintf(get_vterm_ptr(0, 2), "                    ");
  4243  011378  0EA0               	movlw	low STR_5
  4244  01137A  6EE6               	movwf	postinc1,c
  4245  01137C  0EFE               	movlw	high STR_5
  4246  01137E  6EE6               	movwf	postinc1,c
  4247  011380  0E02               	movlw	2
  4248  011382  6EE6               	movwf	postinc1,c
  4249  011384  0E00               	movlw	0
  4250  011386  6EE6               	movwf	postinc1,c
  4251  011388  EC38  F0DF         	call	_get_vterm_ptr	;wreg free
  4252  01138C  0060  F007  FFE6   	movff	btemp,postinc1
  4253  011392  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4254  011398  0E04               	movlw	4
  4255  01139A  6EE6               	movwf	postinc1,c
  4256  01139C  EC08  F0CF         	call	_sprintf	;wreg free
  4257                           
  4258                           ; BSR set to: 0
  4259                           ;main.c: 245:    sprintf(get_vterm_ptr(1, 2), "                    ");
  4260  0113A0  0EA0               	movlw	low STR_5
  4261  0113A2  6EE6               	movwf	postinc1,c
  4262  0113A4  0EFE               	movlw	high STR_5
  4263  0113A6  6EE6               	movwf	postinc1,c
  4264  0113A8  0E02               	movlw	2
  4265  0113AA  6EE6               	movwf	postinc1,c
  4266  0113AC  0E01               	movlw	1
  4267  0113AE  6EE6               	movwf	postinc1,c
  4268  0113B0  EC38  F0DF         	call	_get_vterm_ptr	;wreg free
  4269  0113B4  0060  F007  FFE6   	movff	btemp,postinc1
  4270  0113BA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4271  0113C0  0E04               	movlw	4
  4272  0113C2  6EE6               	movwf	postinc1,c
  4273  0113C4  EC08  F0CF         	call	_sprintf	;wreg free
  4274                           
  4275                           ; BSR set to: 0
  4276                           ;main.c: 246:    sprintf(get_vterm_ptr(2, 2), "                    ");
  4277  0113C8  0EA0               	movlw	low STR_5
  4278  0113CA  6EE6               	movwf	postinc1,c
  4279  0113CC  0EFE               	movlw	high STR_5
  4280  0113CE  6EE6               	movwf	postinc1,c
  4281  0113D0  0E02               	movlw	2
  4282  0113D2  6EE6               	movwf	postinc1,c
  4283  0113D4  0E02               	movlw	2
  4284  0113D6  6EE6               	movwf	postinc1,c
  4285  0113D8  EC38  F0DF         	call	_get_vterm_ptr	;wreg free
  4286  0113DC  0060  F007  FFE6   	movff	btemp,postinc1
  4287  0113E2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4288  0113E8  0E04               	movlw	4
  4289  0113EA  6EE6               	movwf	postinc1,c
  4290  0113EC  EC08  F0CF         	call	_sprintf	;wreg free
  4291                           
  4292                           ; BSR set to: 0
  4293                           ;main.c: 247:    update_lcd(0);
  4294  0113F0  0E00               	movlw	0
  4295  0113F2  6EE6               	movwf	postinc1,c
  4296  0113F4  EC80  F0CE         	call	_update_lcd	;wreg free
  4297                           
  4298                           ;main.c: 248:    WaitMs(1000);
  4299  0113F8  0EE8               	movlw	232
  4300  0113FA  6EE6               	movwf	postinc1,c
  4301  0113FC  0E03               	movlw	3
  4302  0113FE  6EE6               	movwf	postinc1,c
  4303  011400  EC55  F0DE         	call	_WaitMs	;wreg free
  4304                           
  4305                           ;main.c: 249:    StartTimer(TMR_DISPLAY, 250);
  4306  011404  0EFA               	movlw	250
  4307  011406  6EE6               	movwf	postinc1,c
  4308  011408  0E00               	movlw	0
  4309  01140A  6EE6               	movwf	postinc1,c
  4310  01140C  0E0A               	movlw	10
  4311  01140E  6EE6               	movwf	postinc1,c
  4312  011410  EC66  F0DD         	call	_StartTimer	;wreg free
  4313                           
  4314                           ;main.c: 250:    StartTimer(TMR_ADC, 200);
  4315  011414  0EC8               	movlw	200
  4316  011416  6EE6               	movwf	postinc1,c
  4317  011418  0E00               	movlw	0
  4318  01141A  6EE6               	movwf	postinc1,c
  4319  01141C  0E01               	movlw	1
  4320  01141E  6EE6               	movwf	postinc1,c
  4321  011420  EC66  F0DD         	call	_StartTimer	;wreg free
  4322                           
  4323                           ;main.c: 251:    StartTimer(TMR_INFO, 3000);
  4324  011424  0EB8               	movlw	184
  4325  011426  6EE6               	movwf	postinc1,c
  4326  011428  0E0B               	movlw	11
  4327  01142A  6EE6               	movwf	postinc1,c
  4328  01142C  0E07               	movlw	7
  4329  01142E  6EE6               	movwf	postinc1,c
  4330  011430  EC66  F0DD         	call	_StartTimer	;wreg free
  4331                           
  4332                           ;main.c: 252:    StartTimer(TMR_FLIPPER, 1500);
  4333  011434  0EDC               	movlw	220
  4334  011436  6EE6               	movwf	postinc1,c
  4335  011438  0E05               	movlw	5
  4336  01143A  6EE6               	movwf	postinc1,c
  4337  01143C  0E0B               	movlw	11
  4338  01143E  6EE6               	movwf	postinc1,c
  4339  011440  EC66  F0DD         	call	_StartTimer	;wreg free
  4340                           
  4341                           ;main.c: 253:    StartTimer(TMR_HELPDIS, 3000);
  4342  011444  0EB8               	movlw	184
  4343  011446  6EE6               	movwf	postinc1,c
  4344  011448  0E0B               	movlw	11
  4345  01144A  6EE6               	movwf	postinc1,c
  4346  01144C  0E09               	movlw	9
  4347  01144E  6EE6               	movwf	postinc1,c
  4348  011450  EC66  F0DD         	call	_StartTimer	;wreg free
  4349                           
  4350                           ;main.c: 255:    start_adc_scan();
  4351  011454  ECDC  F0D9         	call	_start_adc_scan	;wreg free
  4352                           
  4353                           ;main.c: 256:    start_switch_handler();
  4354  011458  EC62  F0E1         	call	_start_switch_handler	;wreg free
  4355                           
  4356                           ; BSR set to: 57
  4357                           ;main.c: 257:    WaitMs(1000);
  4358  01145C  0EE8               	movlw	232
  4359  01145E  6EE6               	movwf	postinc1,c
  4360  011460  0E03               	movlw	3
  4361  011462  6EE6               	movwf	postinc1,c
  4362  011464  EC55  F0DE         	call	_WaitMs	;wreg free
  4363                           
  4364                           ;main.c: 262:    i_ror = 1;
  4365                           ;stkvar	_i_ror @ sp[(-17)+16]
  4366  011468  0EFF               	movlw	-1
  4367  01146A  6AE3               	clrf	plusw1,c
  4368  01146C  2AE3               	incf	plusw1,f,c
  4369  01146E                     l13423:
  4370                           
  4371                           ;main.c: 264:     calc_ror_data();
  4372  01146E  ECC0  F0C6         	call	_calc_ror_data	;wreg free
  4373                           
  4374                           ;main.c: 265:     sprintf(get_vterm_ptr(1, 0), "BV %2.4f            ", conv_raw_result(V
      +                          _BAT, CONV));
  4375  011472  0E00               	movlw	0
  4376  011474  6EE6               	movwf	postinc1,c
  4377  011476  0E04               	movlw	4
  4378  011478  6EE6               	movwf	postinc1,c
  4379  01147A  EC87  F0A9         	call	_conv_raw_result	;wreg free
  4380  01147E  0060  F007  FFE6   	movff	btemp,postinc1
  4381  011484  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4382  01148A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  4383  011490  0060  F013  FFE6   	movff	btemp+3,postinc1
  4384  011496  0EB5               	movlw	low STR_8
  4385  011498  6EE6               	movwf	postinc1,c
  4386  01149A  0EFE               	movlw	high STR_8
  4387  01149C  6EE6               	movwf	postinc1,c
  4388  01149E  0E00               	movlw	0
  4389  0114A0  6EE6               	movwf	postinc1,c
  4390  0114A2  0E01               	movlw	1
  4391  0114A4  6EE6               	movwf	postinc1,c
  4392  0114A6  EC38  F0DF         	call	_get_vterm_ptr	;wreg free
  4393  0114AA  0060  F007  FFE6   	movff	btemp,postinc1
  4394  0114B0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4395  0114B6  0E08               	movlw	8
  4396  0114B8  6EE6               	movwf	postinc1,c
  4397  0114BA  EC08  F0CF         	call	_sprintf	;wreg free
  4398                           
  4399                           ; BSR set to: 0
  4400                           ;main.c: 266:     sprintf(get_vterm_ptr(2, 0), "S S%cC %d %2.4f          ", spinners(5, 
      +                          0), i_ror, C.bv_ror);
  4401  0114BE  EE21  F36B         	lfsr	2,_C+108	;volatile
  4402  0114C2  006F FF7B FFE6     	movff	postinc2,postinc1
  4403  0114C8  006F FF7B FFE6     	movff	postinc2,postinc1
  4404  0114CE  006F FF7B FFE6     	movff	postinc2,postinc1
  4405  0114D4  006F FF7B FFE6     	movff	postinc2,postinc1
  4406                           
  4407                           ;stkvar	_i_ror @ sp[(-21)+16]
  4408  0114DA  0EFB               	movlw	-5
  4409  0114DC  50E3               	movf	plusw1,w,c
  4410  0114DE  6EE6               	movwf	postinc1,c
  4411  0114E0  0E00               	movlw	0
  4412  0114E2  6EE6               	movwf	postinc1,c
  4413  0114E4  0E00               	movlw	0
  4414  0114E6  6EE6               	movwf	postinc1,c
  4415  0114E8  0E05               	movlw	5
  4416  0114EA  6EE6               	movwf	postinc1,c
  4417  0114EC  EC8D  F0CF         	call	_spinners	;wreg free
  4418  0114F0  5001               	movf	btemp^0,w,c
  4419  0114F2  6EE6               	movwf	postinc1,c
  4420  0114F4  0E00               	movlw	0
  4421  0114F6  6EE6               	movwf	postinc1,c
  4422  0114F8  0E84               	movlw	low STR_9
  4423  0114FA  6EE6               	movwf	postinc1,c
  4424  0114FC  0EFC               	movlw	high STR_9
  4425  0114FE  6EE6               	movwf	postinc1,c
  4426  011500  0E00               	movlw	0
  4427  011502  6EE6               	movwf	postinc1,c
  4428  011504  0E02               	movlw	2
  4429  011506  6EE6               	movwf	postinc1,c
  4430  011508  EC38  F0DF         	call	_get_vterm_ptr	;wreg free
  4431  01150C  0060  F007  FFE6   	movff	btemp,postinc1
  4432  011512  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4433  011518  0E0C               	movlw	12
  4434  01151A  6EE6               	movwf	postinc1,c
  4435  01151C  EC08  F0CF         	call	_sprintf	;wreg free
  4436                           
  4437                           ; BSR set to: 0
  4438                           ;main.c: 267:     update_lcd(0);
  4439  011520  0E00               	movlw	0
  4440  011522  6EE6               	movwf	postinc1,c
  4441  011524  EC80  F0CE         	call	_update_lcd	;wreg free
  4442                           
  4443                           ;main.c: 268:     clear_adc_scan();
  4444  011528  ECB7  F0E2         	call	_clear_adc_scan	;wreg free
  4445                           
  4446                           ; BSR set to: 0
  4447                           ;main.c: 269:     start_adc_scan();
  4448  01152C  ECDC  F0D9         	call	_start_adc_scan	;wreg free
  4449                           
  4450                           ;main.c: 270:     WaitMs(2000);
  4451  011530  0ED0               	movlw	208
  4452  011532  6EE6               	movwf	postinc1,c
  4453  011534  0E07               	movlw	7
  4454  011536  6EE6               	movwf	postinc1,c
  4455  011538  EC55  F0DE         	call	_WaitMs	;wreg free
  4456                           
  4457                           ;main.c: 273:    } while ((i_ror++ < 30) && (C.bv_ror > 0.0140));
  4458                           ;stkvar	_i_ror @ sp[(-17)+16]
  4459  01153C  0EFF               	movlw	-1
  4460  01153E  006F FF8C  F00C    	movff	plusw1,btemp+11
  4461  011544  2A0C               	incf	(btemp+11)^0,f,c
  4462  011546  0060  F033  FFE3   	movff	btemp+11,plusw1
  4463  01154C  060C               	decf	(btemp+11)^0,f,c
  4464  01154E  0E1E               	movlw	30
  4465  011550  600C               	cpfslt	(btemp+11)^0,c
  4466  011552  D01A               	goto	u12840
  4467  011554  EE21  F36B         	lfsr	2,_C+108	;volatile
  4468  011558  006F FF7B FFE6     	movff	postinc2,postinc1
  4469  01155E  006F FF7B FFE6     	movff	postinc2,postinc1
  4470  011564  006F FF7B FFE6     	movff	postinc2,postinc1
  4471  01156A  006F FF7B FFE6     	movff	postinc2,postinc1
  4472  011570  0E42               	movlw	66
  4473  011572  6EE6               	movwf	postinc1,c
  4474  011574  0E60               	movlw	96
  4475  011576  6EE6               	movwf	postinc1,c
  4476  011578  0E65               	movlw	101
  4477  01157A  6EE6               	movwf	postinc1,c
  4478  01157C  0E3C               	movlw	60
  4479  01157E  6EE6               	movwf	postinc1,c
  4480  011580  ECFC  F0C8         	call	___flge	;wreg free
  4481  011584  A001               	btfss	btemp& (0+255),0,c
  4482  011586  D773               	goto	l13423
  4483  011588                     u12840:
  4484                           
  4485                           ;main.c: 275:    static_soc();
  4486  011588  ECA0  F0DA         	call	_static_soc	;wreg free
  4487                           
  4488                           ;main.c: 276:    init_bsoc();
  4489  01158C  ECFB  F0BD         	call	_init_bsoc	;wreg free
  4490                           
  4491                           ;main.c: 277:    set_load_relay_one(0);
  4492  011590  0E00               	movlw	0
  4493  011592  6EE6               	movwf	postinc1,c
  4494  011594  EC53  F0E2         	call	_set_load_relay_one	;wreg free
  4495                           
  4496                           ;main.c: 278:    set_load_relay_two(0);
  4497  011598  0E00               	movlw	0
  4498  01159A  6EE6               	movwf	postinc1,c
  4499  01159C  EC4B  F0E2         	call	_set_load_relay_two	;wreg free
  4500                           
  4501                           ;main.c: 279:    sprintf(get_vterm_ptr(0, 0), "Static SOC %d        ", C.soc);
  4502  0115A0  EE21  F3B5         	lfsr	2,_C+182	;volatile
  4503  0115A4  006F FF78  F00B    	movff	postinc2,btemp+10
  4504  0115AA  006F FF74  F00C    	movff	postdec2,btemp+11
  4505  0115B0  0060  F02F  FFE6   	movff	btemp+10,postinc1
  4506  0115B6  0060  F033  FFE6   	movff	btemp+11,postinc1
  4507  0115BC  0E56               	movlw	low STR_10
  4508  0115BE  6EE6               	movwf	postinc1,c
  4509  0115C0  0EFD               	movlw	high STR_10
  4510  0115C2  6EE6               	movwf	postinc1,c
  4511  0115C4  0E00               	movlw	0
  4512  0115C6  6EE6               	movwf	postinc1,c
  4513  0115C8  0E00               	movlw	0
  4514  0115CA  6EE6               	movwf	postinc1,c
  4515  0115CC  EC38  F0DF         	call	_get_vterm_ptr	;wreg free
  4516  0115D0  0060  F007  FFE6   	movff	btemp,postinc1
  4517  0115D6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4518  0115DC  0E06               	movlw	6
  4519  0115DE  6EE6               	movwf	postinc1,c
  4520  0115E0  EC08  F0CF         	call	_sprintf	;wreg free
  4521                           
  4522                           ; BSR set to: 0
  4523                           ;main.c: 280:    sprintf(get_vterm_ptr(1, 0), "Battery Ah %3.2f     ", C.dynamic_ah);
  4524  0115E4  EE21  F38F         	lfsr	2,_C+144	;volatile
  4525  0115E8  006F FF7B FFE6     	movff	postinc2,postinc1
  4526  0115EE  006F FF7B FFE6     	movff	postinc2,postinc1
  4527  0115F4  006F FF7B FFE6     	movff	postinc2,postinc1
  4528  0115FA  006F FF7B FFE6     	movff	postinc2,postinc1
  4529  011600  0E32               	movlw	low STR_11
  4530  011602  6EE6               	movwf	postinc1,c
  4531  011604  0EFE               	movlw	high STR_11
  4532  011606  6EE6               	movwf	postinc1,c
  4533  011608  0E00               	movlw	0
  4534  01160A  6EE6               	movwf	postinc1,c
  4535  01160C  0E01               	movlw	1
  4536  01160E  6EE6               	movwf	postinc1,c
  4537  011610  EC38  F0DF         	call	_get_vterm_ptr	;wreg free
  4538  011614  0060  F007  FFE6   	movff	btemp,postinc1
  4539  01161A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4540  011620  0E08               	movlw	8
  4541  011622  6EE6               	movwf	postinc1,c
  4542  011624  EC08  F0CF         	call	_sprintf	;wreg free
  4543                           
  4544                           ; BSR set to: 0
  4545                           ;main.c: 281:    update_lcd(0);
  4546  011628  0E00               	movlw	0
  4547  01162A  6EE6               	movwf	postinc1,c
  4548  01162C  EC80  F0CE         	call	_update_lcd	;wreg free
  4549                           
  4550                           ;main.c: 282:    WaitMs(2000);
  4551  011630  0ED0               	movlw	208
  4552  011632  6EE6               	movwf	postinc1,c
  4553  011634  0E07               	movlw	7
  4554  011636  6EE6               	movwf	postinc1,c
  4555  011638  EC55  F0DE         	call	_WaitMs	;wreg free
  4556                           
  4557                           ;main.c: 283:    sprintf(get_vterm_ptr(0, 0), "Battery ESR         ");
  4558  01163C  0EDF               	movlw	low STR_12
  4559  01163E  6EE6               	movwf	postinc1,c
  4560  011640  0EFE               	movlw	high STR_12
  4561  011642  6EE6               	movwf	postinc1,c
  4562  011644  0E00               	movlw	0
  4563  011646  6EE6               	movwf	postinc1,c
  4564  011648  0E00               	movlw	0
  4565  01164A  6EE6               	movwf	postinc1,c
  4566  01164C  EC38  F0DF         	call	_get_vterm_ptr	;wreg free
  4567  011650  0060  F007  FFE6   	movff	btemp,postinc1
  4568  011656  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4569  01165C  0E04               	movlw	4
  4570  01165E  6EE6               	movwf	postinc1,c
  4571  011660  EC08  F0CF         	call	_sprintf	;wreg free
  4572                           
  4573                           ; BSR set to: 0
  4574                           ;main.c: 284:    sprintf(get_vterm_ptr(1, 0), "Calculation         ");
  4575  011664  0EF4               	movlw	low STR_13
  4576  011666  6EE6               	movwf	postinc1,c
  4577  011668  0EFE               	movlw	high STR_13
  4578  01166A  6EE6               	movwf	postinc1,c
  4579  01166C  0E00               	movlw	0
  4580  01166E  6EE6               	movwf	postinc1,c
  4581  011670  0E01               	movlw	1
  4582  011672  6EE6               	movwf	postinc1,c
  4583  011674  EC38  F0DF         	call	_get_vterm_ptr	;wreg free
  4584  011678  0060  F007  FFE6   	movff	btemp,postinc1
  4585  01167E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4586  011684  0E04               	movlw	4
  4587  011686  6EE6               	movwf	postinc1,c
  4588  011688  EC08  F0CF         	call	_sprintf	;wreg free
  4589                           
  4590                           ; BSR set to: 0
  4591                           ;main.c: 285:    sprintf(get_vterm_ptr(2, 0), "Check 30 seconds    ");
  4592  01168C  0E48               	movlw	low STR_14
  4593  01168E  6EE6               	movwf	postinc1,c
  4594  011690  0EFF               	movlw	high STR_14
  4595  011692  6EE6               	movwf	postinc1,c
  4596  011694  0E00               	movlw	0
  4597  011696  6EE6               	movwf	postinc1,c
  4598  011698  0E02               	movlw	2
  4599  01169A  6EE6               	movwf	postinc1,c
  4600  01169C  EC38  F0DF         	call	_get_vterm_ptr	;wreg free
  4601  0116A0  0060  F007  FFE6   	movff	btemp,postinc1
  4602  0116A6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4603  0116AC  0E04               	movlw	4
  4604  0116AE  6EE6               	movwf	postinc1,c
  4605  0116B0  EC08  F0CF         	call	_sprintf	;wreg free
  4606                           
  4607                           ; BSR set to: 0
  4608                           ;main.c: 286:    update_lcd(0);
  4609  0116B4  0E00               	movlw	0
  4610  0116B6  6EE6               	movwf	postinc1,c
  4611  0116B8  EC80  F0CE         	call	_update_lcd	;wreg free
  4612                           
  4613                           ;main.c: 287:    uint16_t i_esr = 1;
  4614  0116BC  0E01               	movlw	1
  4615  0116BE  6E0B               	movwf	(btemp+10)^0,c
  4616  0116C0  0E00               	movlw	0
  4617  0116C2  6E0C               	movwf	(btemp+11)^0,c
  4618                           
  4619                           ;stkvar	_i_esr @ sp[(-17)+8]
  4620  0116C4  0EF7               	movlw	-9
  4621  0116C6  0060  F02F  FFE3   	movff	btemp+10,plusw1
  4622  0116CC  0EF8               	movlw	-8
  4623  0116CE  0060  F033  FFE3   	movff	btemp+11,plusw1
  4624                           
  4625                           ;main.c: 289:    float esr_temp;;main.c: 290:    while ((esr_temp = esr_check(0)) < 0.0)
      +                           {
  4626  0116D4  D06D               	goto	l13481
  4627  0116D6                     l13469:
  4628                           
  4629                           ;main.c: 291:     WaitMs(110);
  4630  0116D6  0E6E               	movlw	110
  4631  0116D8  6EE6               	movwf	postinc1,c
  4632  0116DA  0E00               	movlw	0
  4633  0116DC  6EE6               	movwf	postinc1,c
  4634  0116DE  EC55  F0DE         	call	_WaitMs	;wreg free
  4635                           
  4636                           ;main.c: 292:     shape = (uint8_t) fabsf(esr_temp);
  4637                           ;stkvar	_esr_temp @ sp[(-17)+4]
  4638  0116E2  0EF3               	movlw	-13
  4639  0116E4  006F FF8F FFE6     	movff	plusw1,postinc1
  4640  0116EA  006F FF8F FFE6     	movff	plusw1,postinc1
  4641  0116F0  006F FF8F FFE6     	movff	plusw1,postinc1
  4642  0116F6  006F FF8F FFE6     	movff	plusw1,postinc1
  4643  0116FC  EC2A  F0D4         	call	_fabsf	;wreg free
  4644  011700  0060  F007  FFE6   	movff	btemp,postinc1
  4645  011706  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4646  01170C  0060  F00F  FFE6   	movff	btemp+2,postinc1
  4647  011712  0060  F013  FFE6   	movff	btemp+3,postinc1
  4648  011718  EC43  F0C8         	call	___fltol	;wreg free
  4649  01171C  0060  F004  F00C   	movff	btemp,btemp+11
  4650                           
  4651                           ;stkvar	_shape @ sp[(-17)+10]
  4652  011722  0EF9               	movlw	-7
  4653  011724  0060  F033  FFE3   	movff	btemp+11,plusw1
  4654                           
  4655                           ;main.c: 293:     sprintf(get_vterm_ptr(2, 0), "Checking %c %c      ", spinners(0, 0), s
      +                          pinners(shape, 0));
  4656  01172A  0E00               	movlw	0
  4657  01172C  6EE6               	movwf	postinc1,c
  4658                           
  4659                           ;stkvar	_shape @ sp[(-18)+10]
  4660  01172E  0EF8               	movlw	-8
  4661  011730  50E3               	movf	plusw1,w,c
  4662  011732  6EE6               	movwf	postinc1,c
  4663  011734  EC8D  F0CF         	call	_spinners	;wreg free
  4664  011738  5001               	movf	btemp^0,w,c
  4665  01173A  6EE6               	movwf	postinc1,c
  4666  01173C  0E00               	movlw	0
  4667  01173E  6EE6               	movwf	postinc1,c
  4668  011740  0E00               	movlw	0
  4669  011742  6EE6               	movwf	postinc1,c
  4670  011744  0E00               	movlw	0
  4671  011746  6EE6               	movwf	postinc1,c
  4672  011748  EC8D  F0CF         	call	_spinners	;wreg free
  4673  01174C  5001               	movf	btemp^0,w,c
  4674  01174E  6EE6               	movwf	postinc1,c
  4675  011750  0E00               	movlw	0
  4676  011752  6EE6               	movwf	postinc1,c
  4677  011754  0E33               	movlw	low STR_15
  4678  011756  6EE6               	movwf	postinc1,c
  4679  011758  0EFF               	movlw	high STR_15
  4680  01175A  6EE6               	movwf	postinc1,c
  4681  01175C  0E00               	movlw	0
  4682  01175E  6EE6               	movwf	postinc1,c
  4683  011760  0E02               	movlw	2
  4684  011762  6EE6               	movwf	postinc1,c
  4685  011764  EC38  F0DF         	call	_get_vterm_ptr	;wreg free
  4686  011768  0060  F007  FFE6   	movff	btemp,postinc1
  4687  01176E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4688  011774  0E08               	movlw	8
  4689  011776  6EE6               	movwf	postinc1,c
  4690  011778  EC08  F0CF         	call	_sprintf	;wreg free
  4691                           
  4692                           ; BSR set to: 0
  4693                           ;main.c: 294:     update_lcd(0);
  4694  01177C  0E00               	movlw	0
  4695  01177E  6EE6               	movwf	postinc1,c
  4696  011780  EC80  F0CE         	call	_update_lcd	;wreg free
  4697                           
  4698                           ;main.c: 296:     if (i_esr++ > 512)
  4699                           ;stkvar	_i_esr @ sp[(-17)+8]
  4700  011784  50E1               	movf	fsr1l,w,c
  4701  011786  0FF7               	addlw	-9
  4702  011788  6ED9               	movwf	fsr2l,c
  4703  01178A  50E2               	movf	fsr1h,w,c
  4704  01178C  6EDA               	movwf	fsr2h,c
  4705  01178E  0EFF               	movlw	255
  4706  011790  22DA               	addwfc	fsr2h,f,c
  4707  011792  006F FF7C  F00B    	movff	indf2,btemp+10
  4708  011798  0E01               	movlw	1
  4709  01179A  26DE               	addwf	postinc2,f,c
  4710  01179C  006F FF7C  F00C    	movff	indf2,btemp+11
  4711  0117A2  0E00               	movlw	0
  4712  0117A4  22DD               	addwfc	postdec2,f,c
  4713  0117A6  040B               	decf	(btemp+10)^0,w,c
  4714  0117A8  0E02               	movlw	2
  4715  0117AA  580C               	subwfb	(btemp+11)^0,w,c
  4716  0117AC  B0D8               	btfsc	status,0,c
  4717  0117AE  D017               	goto	u12860
  4718  0117B0                     l13481:
  4719                           
  4720                           ;main.c: 290:    while ((esr_temp = esr_check(0)) < 0.0) {
  4721  0117B0  0E00               	movlw	0
  4722  0117B2  6EE6               	movwf	postinc1,c
  4723  0117B4  ECB6  F0B8         	call	_esr_check	;wreg free
  4724                           
  4725                           ;stkvar	_esr_temp @ sp[(-17)+4]
  4726  0117B8  0EF3               	movlw	-13
  4727  0117BA  0060  F007  FFE3   	movff	btemp,plusw1
  4728  0117C0  0EF4               	movlw	-12
  4729  0117C2  0060  F00B  FFE3   	movff	btemp+1,plusw1
  4730  0117C8  0EF5               	movlw	-11
  4731  0117CA  0060  F00F  FFE3   	movff	btemp+2,plusw1
  4732  0117D0  0EF6               	movlw	-10
  4733  0117D2  0060  F013  FFE3   	movff	btemp+3,plusw1
  4734  0117D8  0EF6               	movlw	-10
  4735  0117DA  BEE3               	btfsc	plusw1,7,c
  4736  0117DC  D77C               	goto	l13469
  4737  0117DE                     u12860:
  4738                           
  4739                           ;main.c: 299:    sprintf(get_vterm_ptr(0, 0), "ESR  %2.6f           ", C.esr);
  4740  0117DE  EE21  F387         	lfsr	2,_C+136	;volatile
  4741  0117E2  006F FF7B FFE6     	movff	postinc2,postinc1
  4742  0117E8  006F FF7B FFE6     	movff	postinc2,postinc1
  4743  0117EE  006F FF7B FFE6     	movff	postinc2,postinc1
  4744  0117F4  006F FF7B FFE6     	movff	postinc2,postinc1
  4745  0117FA  0E40               	movlw	low STR_16
  4746  0117FC  6EE6               	movwf	postinc1,c
  4747  0117FE  0EFD               	movlw	high STR_16
  4748  011800  6EE6               	movwf	postinc1,c
  4749  011802  0E00               	movlw	0
  4750  011804  6EE6               	movwf	postinc1,c
  4751  011806  0E00               	movlw	0
  4752  011808  6EE6               	movwf	postinc1,c
  4753  01180A  EC38  F0DF         	call	_get_vterm_ptr	;wreg free
  4754  01180E  0060  F007  FFE6   	movff	btemp,postinc1
  4755  011814  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4756  01181A  0E08               	movlw	8
  4757  01181C  6EE6               	movwf	postinc1,c
  4758  01181E  EC08  F0CF         	call	_sprintf	;wreg free
  4759                           
  4760                           ;main.c: 300:    sprintf(get_vterm_ptr(1, 0), "R1 %2.3f %3.4f           ", C.bv_one_load
      +                          , C.load_i1);
  4761  011822  EE22  F00D         	lfsr	2,_C+270	;volatile
  4762  011826  006F FF7B FFE6     	movff	postinc2,postinc1
  4763  01182C  006F FF7B FFE6     	movff	postinc2,postinc1
  4764  011832  006F FF7B FFE6     	movff	postinc2,postinc1
  4765  011838  006F FF7B FFE6     	movff	postinc2,postinc1
  4766  01183E  EE22  F019         	lfsr	2,_C+282	;volatile
  4767  011842  006F FF7B FFE6     	movff	postinc2,postinc1
  4768  011848  006F FF7B FFE6     	movff	postinc2,postinc1
  4769  01184E  006F FF7B FFE6     	movff	postinc2,postinc1
  4770  011854  006F FF7B FFE6     	movff	postinc2,postinc1
  4771  01185A  0E50               	movlw	low STR_17
  4772  01185C  6EE6               	movwf	postinc1,c
  4773  01185E  0EFC               	movlw	high STR_17
  4774  011860  6EE6               	movwf	postinc1,c
  4775  011862  0E00               	movlw	0
  4776  011864  6EE6               	movwf	postinc1,c
  4777  011866  0E01               	movlw	1
  4778  011868  6EE6               	movwf	postinc1,c
  4779  01186A  EC38  F0DF         	call	_get_vterm_ptr	;wreg free
  4780  01186E  0060  F007  FFE6   	movff	btemp,postinc1
  4781  011874  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4782  01187A  0E0C               	movlw	12
  4783  01187C  6EE6               	movwf	postinc1,c
  4784  01187E  EC08  F0CF         	call	_sprintf	;wreg free
  4785                           
  4786                           ;main.c: 301:    sprintf(get_vterm_ptr(2, 0), "R2 %2.3f %3.4f           ", C.bv_full_loa
      +                          d, C.load_i2);
  4787  011882  EE22  F011         	lfsr	2,_C+274	;volatile
  4788  011886  006F FF7B FFE6     	movff	postinc2,postinc1
  4789  01188C  006F FF7B FFE6     	movff	postinc2,postinc1
  4790  011892  006F FF7B FFE6     	movff	postinc2,postinc1
  4791  011898  006F FF7B FFE6     	movff	postinc2,postinc1
  4792  01189E  EE22  F01D         	lfsr	2,_C+286	;volatile
  4793  0118A2  006F FF7B FFE6     	movff	postinc2,postinc1
  4794  0118A8  006F FF7B FFE6     	movff	postinc2,postinc1
  4795  0118AE  006F FF7B FFE6     	movff	postinc2,postinc1
  4796  0118B4  006F FF7B FFE6     	movff	postinc2,postinc1
  4797  0118BA  0E6A               	movlw	low STR_18
  4798  0118BC  6EE6               	movwf	postinc1,c
  4799  0118BE  0EFC               	movlw	high STR_18
  4800  0118C0  6EE6               	movwf	postinc1,c
  4801  0118C2  0E00               	movlw	0
  4802  0118C4  6EE6               	movwf	postinc1,c
  4803  0118C6  0E02               	movlw	2
  4804  0118C8  6EE6               	movwf	postinc1,c
  4805  0118CA  EC38  F0DF         	call	_get_vterm_ptr	;wreg free
  4806  0118CE  0060  F007  FFE6   	movff	btemp,postinc1
  4807  0118D4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4808  0118DA  0E0C               	movlw	12
  4809  0118DC  6EE6               	movwf	postinc1,c
  4810  0118DE  EC08  F0CF         	call	_sprintf	;wreg free
  4811                           
  4812                           ;main.c: 302:    update_lcd(0);
  4813  0118E2  0E00               	movlw	0
  4814  0118E4  6EE6               	movwf	postinc1,c
  4815  0118E6  EC80  F0CE         	call	_update_lcd	;wreg free
  4816                           
  4817                           ;main.c: 303:    WaitMs(5000);
  4818  0118EA  0E88               	movlw	136
  4819  0118EC  6EE6               	movwf	postinc1,c
  4820  0118EE  0E13               	movlw	19
  4821  0118F0  6EE6               	movwf	postinc1,c
  4822  0118F2  EC55  F0DE         	call	_WaitMs	;wreg free
  4823                           
  4824                           ;main.c: 304:    V.system_stable = 1;
  4825  0118F6  0E01               	movlw	1
  4826  0118F8  0101               	movlb	1	; () banked
  4827  0118FA  6FB5               	movwf	(_V+174)& (0+255),b	;volatile
  4828                           
  4829                           ;main.c: 305:    break;
  4830  0118FC  D01B               	goto	l13493
  4831  0118FE                     l1358:
  4832                           
  4833                           ; BSR set to: 1
  4834                           ;main.c: 311:    P.SYSTEM_STABLE = 1;
  4835  0118FE  81F0               	bsf	(_P+1)& (0+255),0,b	;volatile
  4836                           
  4837                           ;main.c: 312:    break;
  4838  011900  D019               	goto	l13493
  4839  011902                     l1360:
  4840                           
  4841                           ; BSR set to: 1
  4842                           ;main.c: 315:    V.ui_state = UI_STATE_INIT;
  4843  011902  6B07               	clrf	_V& (0+255),b	;volatile
  4844                           
  4845                           ;main.c: 316:    break;
  4846  011904  D017               	goto	l13493
  4847  011906                     l13491:
  4848  011906  0101               	movlb	1	; () banked
  4849  011908  5107               	movf	_V& (0+255),w,b	;volatile
  4850  01190A  6E0B               	movwf	(btemp+10)^0,c
  4851  01190C  6A0C               	clrf	(btemp+11)^0,c
  4852                           
  4853                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4854                           ; Switch size 1, requested type "simple"
  4855                           ; Number of cases is 1, Range of values is 0 to 0
  4856                           ; switch strategies available:
  4857                           ; Name         Instructions Cycles
  4858                           ; simple_byte            4     3 (average)
  4859                           ;	Chosen strategy is simple_byte
  4860  01190E  500C               	movf	(btemp+11)^0,w,c
  4861  011910  0A00               	xorlw	0	; case 0
  4862  011912  A4D8               	btfss	status,2,c
  4863  011914  D7F6               	goto	l1360
  4864                           
  4865                           ; BSR set to: 1
  4866                           ; Switch size 1, requested type "simple"
  4867                           ; Number of cases is 5, Range of values is 0 to 5
  4868                           ; switch strategies available:
  4869                           ; Name         Instructions Cycles
  4870                           ; simple_byte           16     9 (average)
  4871                           ;	Chosen strategy is simple_byte
  4872  011916  500B               	movf	(btemp+10)^0,w,c
  4873  011918  0A00               	xorlw	0	; case 0
  4874  01191A  B4D8               	btfsc	status,2,c
  4875  01191C  D4CF               	goto	l13373
  4876  01191E  0A01               	xorlw	1	; case 1
  4877  011920  B4D8               	btfsc	status,2,c
  4878  011922  D008               	goto	l13493
  4879  011924  0A02               	xorlw	2	; case 3
  4880  011926  B4D8               	btfsc	status,2,c
  4881  011928  D005               	goto	l13493
  4882  01192A  0A07               	xorlw	7	; case 4
  4883  01192C  B4D8               	btfsc	status,2,c
  4884  01192E  D7E7               	goto	l1358
  4885  011930  0A01               	xorlw	1	; case 5
  4886  011932  D7E7               	goto	l1360
  4887  011934                     l13493:
  4888                           
  4889                           ; BSR set to: 1
  4890                           ;main.c: 319:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  4891  011934  0E01               	movlw	1
  4892  011936  6EE6               	movwf	postinc1,c
  4893  011938  ECBB  F0DF         	call	_TimerDone	;wreg free
  4894  01193C  5001               	movf	btemp^0,w,c
  4895  01193E  B4D8               	btfsc	status,2,c
  4896  011940  D013               	goto	l13505
  4897  011942  ECA7  F0E2         	call	_check_adc_scan	;wreg free
  4898  011946  5001               	movf	btemp^0,w,c
  4899  011948  B4D8               	btfsc	status,2,c
  4900  01194A  D00E               	goto	l13505
  4901                           
  4902                           ;main.c: 323:    convert_adc_data();
  4903  01194C  ECCE  F0D3         	call	_convert_adc_data	;wreg free
  4904                           
  4905                           ;main.c: 327:    clear_adc_scan();
  4906  011950  ECB7  F0E2         	call	_clear_adc_scan	;wreg free
  4907                           
  4908                           ; BSR set to: 0
  4909                           ;main.c: 328:    start_adc_scan();
  4910  011954  ECDC  F0D9         	call	_start_adc_scan	;wreg free
  4911                           
  4912                           ;main.c: 329:    StartTimer(TMR_ADC, 200);
  4913  011958  0EC8               	movlw	200
  4914  01195A  6EE6               	movwf	postinc1,c
  4915  01195C  0E00               	movlw	0
  4916  01195E  6EE6               	movwf	postinc1,c
  4917  011960  0E01               	movlw	1
  4918  011962  6EE6               	movwf	postinc1,c
  4919  011964  EC66  F0DD         	call	_StartTimer	;wreg free
  4920  011968                     l13505:
  4921                           
  4922                           ;main.c: 336:   if (TimerDone(TMR_DISPLAY)) {
  4923                           
  4924                           ;main.c: 332:   if (V.ticks) {
  4925  011968  0E0A               	movlw	10
  4926  01196A  6EE6               	movwf	postinc1,c
  4927  01196C  ECBB  F0DF         	call	_TimerDone	;wreg free
  4928  011970  5001               	movf	btemp^0,w,c
  4929  011972  B4D8               	btfsc	status,2,c
  4930  011974  EF5B  F091         	goto	l13589
  4931                           
  4932                           ;main.c: 337:    if (TimerDone(TMR_HELPDIS)) {
  4933  011978  0E09               	movlw	9
  4934  01197A  6EE6               	movwf	postinc1,c
  4935  01197C  ECBB  F0DF         	call	_TimerDone	;wreg free
  4936  011980  5001               	movf	btemp^0,w,c
  4937  011982  B4D8               	btfsc	status,2,c
  4938  011984  D004               	goto	l13513
  4939                           
  4940                           ;main.c: 338:     set_display_info(DIS_STR);
  4941  011986  0E00               	movlw	0
  4942  011988  6EE6               	movwf	postinc1,c
  4943  01198A  ECAF  F0E1         	call	_set_display_info	;wreg free
  4944  01198E                     l13513:
  4945                           
  4946                           ;main.c: 340:    calc_model_data();
  4947  01198E  EC51  F0AE         	call	_calc_model_data	;wreg free
  4948                           
  4949                           ; BSR set to: 57
  4950                           ;main.c: 347:     hid_display(&H);
  4951                           
  4952                           ;main.c: 342:    if (0) {
  4953  011992  0EC6               	movlw	low _H
  4954  011994  6EE6               	movwf	postinc1,c
  4955  011996  0E01               	movlw	high _H
  4956  011998  6EE6               	movwf	postinc1,c
  4957  01199A  EC59  F0C3         	call	_hid_display	;wreg free
  4958                           
  4959                           ;main.c: 348:     switch (H.hid_display) {
  4960  01199E  EFF1  F090         	goto	l13561
  4961  0119A2                     l1368:
  4962                           
  4963                           ; BSR set to: 1
  4964                           ;main.c: 350:      V.calib = 0;
  4965  0119A2  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  4966                           
  4967                           ; BSR set to: 1
  4968                           ;main.c: 351:      sprintf(get_vterm_ptr(0, 0), "PV %c PWR %3.2f      ", (C.day) ? 'D' :
      +                           ' ', C.p_pv);
  4969  0119A4  EE22  F021         	lfsr	2,_C+290	;volatile
  4970  0119A8  50DF               	movf	indf2,w,c
  4971  0119AA  A4D8               	btfss	status,2,c
  4972  0119AC  D002               	goto	l13523
  4973                           
  4974                           ; BSR set to: 1
  4975  0119AE  0E20               	movlw	32
  4976  0119B0  D001               	goto	L1
  4977  0119B2                     l13523:
  4978                           
  4979                           ; BSR set to: 1
  4980  0119B2  0E44               	movlw	68
  4981  0119B4                     L1:
  4982  0119B4  6E0B               	movwf	(btemp+10)^0,c
  4983  0119B6  0E00               	movlw	0
  4984  0119B8  6E0C               	movwf	(btemp+11)^0,c
  4985                           
  4986                           ;stkvar	_main$3866 @ sp[(-17)+2]
  4987  0119BA  0EF1               	movlw	-15
  4988  0119BC  0060  F02F  FFE3   	movff	btemp+10,plusw1
  4989  0119C2  0EF2               	movlw	-14
  4990  0119C4  0060  F033  FFE3   	movff	btemp+11,plusw1
  4991                           
  4992                           ; BSR set to: 1
  4993  0119CA  EE21  F37B         	lfsr	2,_C+124	;volatile
  4994  0119CE  006F FF7B FFE6     	movff	postinc2,postinc1
  4995  0119D4  006F FF7B FFE6     	movff	postinc2,postinc1
  4996  0119DA  006F FF7B FFE6     	movff	postinc2,postinc1
  4997  0119E0  006F FF7B FFE6     	movff	postinc2,postinc1
  4998                           
  4999                           ;stkvar	_main$3866 @ sp[(-21)+2]
  5000  0119E6  0EED               	movlw	-19
  5001  0119E8  006F FF8F FFE6     	movff	plusw1,postinc1
  5002  0119EE  006F FF8F FFE6     	movff	plusw1,postinc1
  5003  0119F4  0E1C               	movlw	low STR_22
  5004  0119F6  6EE6               	movwf	postinc1,c
  5005  0119F8  0EFE               	movlw	high STR_22
  5006  0119FA  6EE6               	movwf	postinc1,c
  5007  0119FC  0E00               	movlw	0
  5008  0119FE  6EE6               	movwf	postinc1,c
  5009  011A00  0E00               	movlw	0
  5010  011A02  6EE6               	movwf	postinc1,c
  5011  011A04  EC38  F0DF         	call	_get_vterm_ptr	;wreg free
  5012  011A08  0060  F007  FFE6   	movff	btemp,postinc1
  5013  011A0E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5014  011A14  0E0A               	movlw	10
  5015  011A16  6EE6               	movwf	postinc1,c
  5016  011A18  EC08  F0CF         	call	_sprintf	;wreg free
  5017                           
  5018                           ; BSR set to: 0
  5019                           ;main.c: 352:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f       ", C.p_load);
  5020  011A1C  EE21  F373         	lfsr	2,_C+116	;volatile
  5021  011A20  006F FF7B FFE6     	movff	postinc2,postinc1
  5022  011A26  006F FF7B FFE6     	movff	postinc2,postinc1
  5023  011A2C  006F FF7B FFE6     	movff	postinc2,postinc1
  5024  011A32  006F FF7B FFE6     	movff	postinc2,postinc1
  5025  011A38  0E06               	movlw	low STR_23
  5026  011A3A  6EE6               	movwf	postinc1,c
  5027  011A3C  0EFE               	movlw	high STR_23
  5028  011A3E  6EE6               	movwf	postinc1,c
  5029  011A40  0E00               	movlw	0
  5030  011A42  6EE6               	movwf	postinc1,c
  5031  011A44  0E01               	movlw	1
  5032  011A46  6EE6               	movwf	postinc1,c
  5033  011A48  EC38  F0DF         	call	_get_vterm_ptr	;wreg free
  5034  011A4C  0060  F007  FFE6   	movff	btemp,postinc1
  5035  011A52  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5036  011A58  0E08               	movlw	8
  5037  011A5A  6EE6               	movwf	postinc1,c
  5038  011A5C  EC08  F0CF         	call	_sprintf	;wreg free
  5039                           
  5040                           ; BSR set to: 0
  5041                           ;main.c: 353:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f       ", C.p_inverter);
  5042  011A60  EE21  F377         	lfsr	2,_C+120	;volatile
  5043  011A64  006F FF7B FFE6     	movff	postinc2,postinc1
  5044  011A6A  006F FF7B FFE6     	movff	postinc2,postinc1
  5045  011A70  006F FF7B FFE6     	movff	postinc2,postinc1
  5046  011A76  006F FF7B FFE6     	movff	postinc2,postinc1
  5047  011A7C  0EF0               	movlw	low STR_24
  5048  011A7E  6EE6               	movwf	postinc1,c
  5049  011A80  0EFD               	movlw	high STR_24
  5050  011A82  6EE6               	movwf	postinc1,c
  5051  011A84  0E00               	movlw	0
  5052  011A86  6EE6               	movwf	postinc1,c
  5053  011A88  0E02               	movlw	2
  5054  011A8A  6EE6               	movwf	postinc1,c
  5055  011A8C  EC38  F0DF         	call	_get_vterm_ptr	;wreg free
  5056  011A90  0060  F007  FFE6   	movff	btemp,postinc1
  5057  011A96  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5058  011A9C  0E08               	movlw	8
  5059  011A9E  6EE6               	movwf	postinc1,c
  5060  011AA0  EC08  F0CF         	call	_sprintf	;wreg free
  5061                           
  5062                           ; BSR set to: 0
  5063                           ;main.c: 355:      sprintf(get_vterm_ptr(0, 1), "PV %c WH %3.2f       ", (C.day) ? 'D' :
      +                           ' ', C.pvkw);
  5064  011AA4  EE22  F021         	lfsr	2,_C+290	;volatile
  5065  011AA8  50DF               	movf	indf2,w,c
  5066  011AAA  A4D8               	btfss	status,2,c
  5067  011AAC  D002               	goto	l13535
  5068                           
  5069                           ; BSR set to: 0
  5070  011AAE  0E20               	movlw	32
  5071  011AB0  D001               	goto	L2
  5072  011AB2                     l13535:
  5073                           
  5074                           ; BSR set to: 0
  5075  011AB2  0E44               	movlw	68
  5076  011AB4                     L2:
  5077  011AB4  6E0B               	movwf	(btemp+10)^0,c
  5078  011AB6  0E00               	movlw	0
  5079  011AB8  6E0C               	movwf	(btemp+11)^0,c
  5080                           
  5081                           ;stkvar	_main$3870 @ sp[(-17)+0]
  5082  011ABA  0EEF               	movlw	-17
  5083  011ABC  0060  F02F  FFE3   	movff	btemp+10,plusw1
  5084  011AC2  0EF0               	movlw	-16
  5085  011AC4  0060  F033  FFE3   	movff	btemp+11,plusw1
  5086                           
  5087                           ; BSR set to: 0
  5088  011ACA  EE21  F3A7         	lfsr	2,_C+168	;volatile
  5089  011ACE  006F FF7B FFE6     	movff	postinc2,postinc1
  5090  011AD4  006F FF7B FFE6     	movff	postinc2,postinc1
  5091  011ADA  006F FF7B FFE6     	movff	postinc2,postinc1
  5092  011AE0  006F FF7B FFE6     	movff	postinc2,postinc1
  5093                           
  5094                           ;stkvar	_main$3870 @ sp[(-21)+0]
  5095  011AE6  0EEB               	movlw	-21
  5096  011AE8  006F FF8F FFE6     	movff	plusw1,postinc1
  5097  011AEE  006F FF8F FFE6     	movff	plusw1,postinc1
  5098  011AF4  0EDA               	movlw	low STR_25
  5099  011AF6  6EE6               	movwf	postinc1,c
  5100  011AF8  0EFD               	movlw	high STR_25
  5101  011AFA  6EE6               	movwf	postinc1,c
  5102  011AFC  0E01               	movlw	1
  5103  011AFE  6EE6               	movwf	postinc1,c
  5104  011B00  0E00               	movlw	0
  5105  011B02  6EE6               	movwf	postinc1,c
  5106  011B04  EC38  F0DF         	call	_get_vterm_ptr	;wreg free
  5107  011B08  0060  F007  FFE6   	movff	btemp,postinc1
  5108  011B0E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5109  011B14  0E0A               	movlw	10
  5110  011B16  6EE6               	movwf	postinc1,c
  5111  011B18  EC08  F0CF         	call	_sprintf	;wreg free
  5112                           
  5113                           ; BSR set to: 0
  5114                           ;main.c: 356:      sprintf(get_vterm_ptr(1, 1), "LOAD WH %3.2f        ", C.loadkw);
  5115  011B1C  EE21  F3AF         	lfsr	2,_C+176	;volatile
  5116  011B20  006F FF7B FFE6     	movff	postinc2,postinc1
  5117  011B26  006F FF7B FFE6     	movff	postinc2,postinc1
  5118  011B2C  006F FF7B FFE6     	movff	postinc2,postinc1
  5119  011B32  006F FF7B FFE6     	movff	postinc2,postinc1
  5120  011B38  0EC4               	movlw	low STR_26
  5121  011B3A  6EE6               	movwf	postinc1,c
  5122  011B3C  0EFD               	movlw	high STR_26
  5123  011B3E  6EE6               	movwf	postinc1,c
  5124  011B40  0E01               	movlw	1
  5125  011B42  6EE6               	movwf	postinc1,c
  5126  011B44  0E01               	movlw	1
  5127  011B46  6EE6               	movwf	postinc1,c
  5128  011B48  EC38  F0DF         	call	_get_vterm_ptr	;wreg free
  5129  011B4C  0060  F007  FFE6   	movff	btemp,postinc1
  5130  011B52  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5131  011B58  0E08               	movlw	8
  5132  011B5A  6EE6               	movwf	postinc1,c
  5133  011B5C  EC08  F0CF         	call	_sprintf	;wreg free
  5134                           
  5135                           ; BSR set to: 0
  5136                           ;main.c: 357:      sprintf(get_vterm_ptr(2, 1), "INV  WH %3.2f        ", C.invkw);
  5137  011B60  EE21  F3AB         	lfsr	2,_C+172	;volatile
  5138  011B64  006F FF7B FFE6     	movff	postinc2,postinc1
  5139  011B6A  006F FF7B FFE6     	movff	postinc2,postinc1
  5140  011B70  006F FF7B FFE6     	movff	postinc2,postinc1
  5141  011B76  006F FF7B FFE6     	movff	postinc2,postinc1
  5142  011B7C  0EAE               	movlw	low STR_27
  5143  011B7E  6EE6               	movwf	postinc1,c
  5144  011B80  0EFD               	movlw	high STR_27
  5145  011B82  6EE6               	movwf	postinc1,c
  5146  011B84  0E01               	movlw	1
  5147  011B86  6EE6               	movwf	postinc1,c
  5148  011B88  0E02               	movlw	2
  5149  011B8A  6EE6               	movwf	postinc1,c
  5150  011B8C  EC38  F0DF         	call	_get_vterm_ptr	;wreg free
  5151  011B90  0060  F007  FFE6   	movff	btemp,postinc1
  5152  011B96  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5153  011B9C  0E08               	movlw	8
  5154  011B9E  6EE6               	movwf	postinc1,c
  5155  011BA0  EC08  F0CF         	call	_sprintf	;wreg free
  5156                           
  5157                           ;main.c: 358:      break;
  5158  011BA4  D334               	goto	l13563
  5159  011BA6                     l1378:
  5160                           
  5161                           ; BSR set to: 1
  5162                           ;main.c: 360:      V.calib = 0;
  5163  011BA6  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  5164                           
  5165                           ; BSR set to: 1
  5166                           ;main.c: 361:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f    ", C.calc[V_PV], C
      +                          .calc[C_PV]);
  5167  011BA8  EE21  F303         	lfsr	2,_C+4	;volatile
  5168  011BAC  006F FF7B FFE6     	movff	postinc2,postinc1
  5169  011BB2  006F FF7B FFE6     	movff	postinc2,postinc1
  5170  011BB8  006F FF7B FFE6     	movff	postinc2,postinc1
  5171  011BBE  006F FF7B FFE6     	movff	postinc2,postinc1
  5172  011BC4  EE21  F313         	lfsr	2,_C+20	;volatile
  5173  011BC8  006F FF7B FFE6     	movff	postinc2,postinc1
  5174  011BCE  006F FF7B FFE6     	movff	postinc2,postinc1
  5175  011BD4  006F FF7B FFE6     	movff	postinc2,postinc1
  5176  011BDA  006F FF7B FFE6     	movff	postinc2,postinc1
  5177  011BE0  0E74               	movlw	low STR_28
  5178  011BE2  6EE6               	movwf	postinc1,c
  5179  011BE4  0EFE               	movlw	high STR_28
  5180  011BE6  6EE6               	movwf	postinc1,c
  5181  011BE8  0E00               	movlw	0
  5182  011BEA  6EE6               	movwf	postinc1,c
  5183  011BEC  0E00               	movlw	0
  5184  011BEE  6EE6               	movwf	postinc1,c
  5185  011BF0  EC38  F0DF         	call	_get_vterm_ptr	;wreg free
  5186  011BF4  0060  F007  FFE6   	movff	btemp,postinc1
  5187  011BFA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5188  011C00  0E0C               	movlw	12
  5189  011C02  6EE6               	movwf	postinc1,c
  5190  011C04  EC08  F0CF         	call	_sprintf	;wreg free
  5191                           
  5192                           ;main.c: 362:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f    ", C.calc[V_BAT], 
      +                          C.calc[C_BATT]);
  5193  011C08  EE21  F2FF         	lfsr	2,_C
  5194  011C0C  006F FF7B FFE6     	movff	postinc2,postinc1
  5195  011C12  006F FF7B FFE6     	movff	postinc2,postinc1
  5196  011C18  006F FF7B FFE6     	movff	postinc2,postinc1
  5197  011C1E  006F FF7B FFE6     	movff	postinc2,postinc1
  5198  011C24  EE21  F30F         	lfsr	2,_C+16	;volatile
  5199  011C28  006F FF7B FFE6     	movff	postinc2,postinc1
  5200  011C2E  006F FF7B FFE6     	movff	postinc2,postinc1
  5201  011C34  006F FF7B FFE6     	movff	postinc2,postinc1
  5202  011C3A  006F FF7B FFE6     	movff	postinc2,postinc1
  5203  011C40  0E48               	movlw	low STR_29
  5204  011C42  6EE6               	movwf	postinc1,c
  5205  011C44  0EFE               	movlw	high STR_29
  5206  011C46  6EE6               	movwf	postinc1,c
  5207  011C48  0E00               	movlw	0
  5208  011C4A  6EE6               	movwf	postinc1,c
  5209  011C4C  0E01               	movlw	1
  5210  011C4E  6EE6               	movwf	postinc1,c
  5211  011C50  EC38  F0DF         	call	_get_vterm_ptr	;wreg free
  5212  011C54  0060  F007  FFE6   	movff	btemp,postinc1
  5213  011C5A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5214  011C60  0E0C               	movlw	12
  5215  011C62  6EE6               	movwf	postinc1,c
  5216  011C64  EC08  F0CF         	call	_sprintf	;wreg free
  5217                           
  5218                           ;main.c: 363:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f    ", C.calc[V_CC], C
      +                          .c_load);
  5219  011C68  EE21  F33F         	lfsr	2,_C+64	;volatile
  5220  011C6C  006F FF7B FFE6     	movff	postinc2,postinc1
  5221  011C72  006F FF7B FFE6     	movff	postinc2,postinc1
  5222  011C78  006F FF7B FFE6     	movff	postinc2,postinc1
  5223  011C7E  006F FF7B FFE6     	movff	postinc2,postinc1
  5224  011C84  EE21  F307         	lfsr	2,_C+8	;volatile
  5225  011C88  006F FF7B FFE6     	movff	postinc2,postinc1
  5226  011C8E  006F FF7B FFE6     	movff	postinc2,postinc1
  5227  011C94  006F FF7B FFE6     	movff	postinc2,postinc1
  5228  011C9A  006F FF7B FFE6     	movff	postinc2,postinc1
  5229  011CA0  0E5E               	movlw	low STR_30
  5230  011CA2  6EE6               	movwf	postinc1,c
  5231  011CA4  0EFE               	movlw	high STR_30
  5232  011CA6  6EE6               	movwf	postinc1,c
  5233  011CA8  0E00               	movlw	0
  5234  011CAA  6EE6               	movwf	postinc1,c
  5235  011CAC  0E02               	movlw	2
  5236  011CAE  6EE6               	movwf	postinc1,c
  5237  011CB0  EC38  F0DF         	call	_get_vterm_ptr	;wreg free
  5238  011CB4  0060  F007  FFE6   	movff	btemp,postinc1
  5239  011CBA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5240  011CC0  0E0C               	movlw	12
  5241  011CC2  6EE6               	movwf	postinc1,c
  5242  011CC4  EC08  F0CF         	call	_sprintf	;wreg free
  5243                           
  5244                           ;main.c: 365:      sprintf(get_vterm_ptr(0, 1), "BAT IWH %4.1f        ", C.bkwi);
  5245  011CC8  EE21  F39F         	lfsr	2,_C+160	;volatile
  5246  011CCC  006F FF7B FFE6     	movff	postinc2,postinc1
  5247  011CD2  006F FF7B FFE6     	movff	postinc2,postinc1
  5248  011CD8  006F FF7B FFE6     	movff	postinc2,postinc1
  5249  011CDE  006F FF7B FFE6     	movff	postinc2,postinc1
  5250  011CE4  0E6C               	movlw	low STR_31
  5251  011CE6  6EE6               	movwf	postinc1,c
  5252  011CE8  0EFD               	movlw	high STR_31
  5253  011CEA  6EE6               	movwf	postinc1,c
  5254  011CEC  0E01               	movlw	1
  5255  011CEE  6EE6               	movwf	postinc1,c
  5256  011CF0  0E00               	movlw	0
  5257  011CF2  6EE6               	movwf	postinc1,c
  5258  011CF4  EC38  F0DF         	call	_get_vterm_ptr	;wreg free
  5259  011CF8  0060  F007  FFE6   	movff	btemp,postinc1
  5260  011CFE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5261  011D04  0E08               	movlw	8
  5262  011D06  6EE6               	movwf	postinc1,c
  5263  011D08  EC08  F0CF         	call	_sprintf	;wreg free
  5264                           
  5265                           ;main.c: 366:      sprintf(get_vterm_ptr(1, 1), "BAT OWH %4.1f        ", C.bkwo);
  5266  011D0C  EE21  F3A3         	lfsr	2,_C+164	;volatile
  5267  011D10  006F FF7B FFE6     	movff	postinc2,postinc1
  5268  011D16  006F FF7B FFE6     	movff	postinc2,postinc1
  5269  011D1C  006F FF7B FFE6     	movff	postinc2,postinc1
  5270  011D22  006F FF7B FFE6     	movff	postinc2,postinc1
  5271  011D28  0E82               	movlw	low STR_32
  5272  011D2A  6EE6               	movwf	postinc1,c
  5273  011D2C  0EFD               	movlw	high STR_32
  5274  011D2E  6EE6               	movwf	postinc1,c
  5275  011D30  0E01               	movlw	1
  5276  011D32  6EE6               	movwf	postinc1,c
  5277  011D34  0E01               	movlw	1
  5278  011D36  6EE6               	movwf	postinc1,c
  5279  011D38  EC38  F0DF         	call	_get_vterm_ptr	;wreg free
  5280  011D3C  0060  F007  FFE6   	movff	btemp,postinc1
  5281  011D42  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5282  011D48  0E08               	movlw	8
  5283  011D4A  6EE6               	movwf	postinc1,c
  5284  011D4C  EC08  F0CF         	call	_sprintf	;wreg free
  5285                           
  5286                           ;main.c: 367:      sprintf(get_vterm_ptr(2, 1), "BAT TWH %4.1f        ", C.bkwi + C.bkwo
      +                          );
  5287  011D50  EE21  F3A3         	lfsr	2,_C+164	;volatile
  5288  011D54  006F FF7B FFE6     	movff	postinc2,postinc1
  5289  011D5A  006F FF7B FFE6     	movff	postinc2,postinc1
  5290  011D60  006F FF7B FFE6     	movff	postinc2,postinc1
  5291  011D66  006F FF7B FFE6     	movff	postinc2,postinc1
  5292  011D6C  EE21  F39F         	lfsr	2,_C+160	;volatile
  5293  011D70  006F FF7B FFE6     	movff	postinc2,postinc1
  5294  011D76  006F FF7B FFE6     	movff	postinc2,postinc1
  5295  011D7C  006F FF7B FFE6     	movff	postinc2,postinc1
  5296  011D82  006F FF7B FFE6     	movff	postinc2,postinc1
  5297  011D88  ECEC  F0A2         	call	___fladd	;wreg free
  5298  011D8C  0060  F007  FFE6   	movff	btemp,postinc1
  5299  011D92  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5300  011D98  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5301  011D9E  0060  F013  FFE6   	movff	btemp+3,postinc1
  5302  011DA4  0E98               	movlw	low STR_33
  5303  011DA6  6EE6               	movwf	postinc1,c
  5304  011DA8  0EFD               	movlw	high STR_33
  5305  011DAA  6EE6               	movwf	postinc1,c
  5306  011DAC  0E01               	movlw	1
  5307  011DAE  6EE6               	movwf	postinc1,c
  5308  011DB0  0E02               	movlw	2
  5309  011DB2  6EE6               	movwf	postinc1,c
  5310  011DB4  EC38  F0DF         	call	_get_vterm_ptr	;wreg free
  5311  011DB8  0060  F007  FFE6   	movff	btemp,postinc1
  5312  011DBE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5313  011DC4  0E08               	movlw	8
  5314  011DC6  6EE6               	movwf	postinc1,c
  5315  011DC8  EC08  F0CF         	call	_sprintf	;wreg free
  5316                           
  5317                           ;main.c: 368:      break;
  5318  011DCC  D220               	goto	l13563
  5319  011DCE                     l1379:
  5320                           
  5321                           ; BSR set to: 1
  5322                           ;main.c: 370:      V.calib = 0;
  5323  011DCE  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  5324                           
  5325                           ; BSR set to: 1
  5326                           ;main.c: 371:      sprintf(get_vterm_ptr(0, 0), "BATT PWR %3.2f        ", C.p_bat);
  5327  011DD0  EE21  F37F         	lfsr	2,_C+128	;volatile
  5328  011DD4  006F FF7B FFE6     	movff	postinc2,postinc1
  5329  011DDA  006F FF7B FFE6     	movff	postinc2,postinc1
  5330  011DE0  006F FF7B FFE6     	movff	postinc2,postinc1
  5331  011DE6  006F FF7B FFE6     	movff	postinc2,postinc1
  5332  011DEC  0EE4               	movlw	low STR_34
  5333  011DEE  6EE6               	movwf	postinc1,c
  5334  011DF0  0EFC               	movlw	high STR_34
  5335  011DF2  6EE6               	movwf	postinc1,c
  5336  011DF4  0E00               	movlw	0
  5337  011DF6  6EE6               	movwf	postinc1,c
  5338  011DF8  0E00               	movlw	0
  5339  011DFA  6EE6               	movwf	postinc1,c
  5340  011DFC  EC38  F0DF         	call	_get_vterm_ptr	;wreg free
  5341  011E00  0060  F007  FFE6   	movff	btemp,postinc1
  5342  011E06  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5343  011E0C  0E08               	movlw	8
  5344  011E0E  6EE6               	movwf	postinc1,c
  5345  011E10  EC08  F0CF         	call	_sprintf	;wreg free
  5346                           
  5347                           ;main.c: 372:      sprintf(get_vterm_ptr(1, 0), "BAH %3.2f P%3.2f      ", C.dynamic_ah, 
      +                          C.pv_ah);
  5348  011E14  EE21  F393         	lfsr	2,_C+148	;volatile
  5349  011E18  006F FF7B FFE6     	movff	postinc2,postinc1
  5350  011E1E  006F FF7B FFE6     	movff	postinc2,postinc1
  5351  011E24  006F FF7B FFE6     	movff	postinc2,postinc1
  5352  011E2A  006F FF7B FFE6     	movff	postinc2,postinc1
  5353  011E30  EE21  F38F         	lfsr	2,_C+144	;volatile
  5354  011E34  006F FF7B FFE6     	movff	postinc2,postinc1
  5355  011E3A  006F FF7B FFE6     	movff	postinc2,postinc1
  5356  011E40  006F FF7B FFE6     	movff	postinc2,postinc1
  5357  011E46  006F FF7B FFE6     	movff	postinc2,postinc1
  5358  011E4C  0E29               	movlw	low STR_35
  5359  011E4E  6EE6               	movwf	postinc1,c
  5360  011E50  0EFD               	movlw	high STR_35
  5361  011E52  6EE6               	movwf	postinc1,c
  5362  011E54  0E00               	movlw	0
  5363  011E56  6EE6               	movwf	postinc1,c
  5364  011E58  0E01               	movlw	1
  5365  011E5A  6EE6               	movwf	postinc1,c
  5366  011E5C  EC38  F0DF         	call	_get_vterm_ptr	;wreg free
  5367  011E60  0060  F007  FFE6   	movff	btemp,postinc1
  5368  011E66  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5369  011E6C  0E0C               	movlw	12
  5370  011E6E  6EE6               	movwf	postinc1,c
  5371  011E70  EC08  F0CF         	call	_sprintf	;wreg free
  5372                           
  5373                           ;main.c: 373:      sprintf(get_vterm_ptr(2, 0), "S%cC %d RUN %d        ", spinners(5, 0)
      +                          , C.soc, C.runtime);
  5374  011E74  EE21  F3B3         	lfsr	2,_C+180	;volatile
  5375  011E78  006F FF78  F00B    	movff	postinc2,btemp+10
  5376  011E7E  006F FF74  F00C    	movff	postdec2,btemp+11
  5377  011E84  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5378  011E8A  0060  F033  FFE6   	movff	btemp+11,postinc1
  5379  011E90  EE21  F3B5         	lfsr	2,_C+182	;volatile
  5380  011E94  006F FF78  F00B    	movff	postinc2,btemp+10
  5381  011E9A  006F FF74  F00C    	movff	postdec2,btemp+11
  5382  011EA0  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5383  011EA6  0060  F033  FFE6   	movff	btemp+11,postinc1
  5384  011EAC  0E00               	movlw	0
  5385  011EAE  6EE6               	movwf	postinc1,c
  5386  011EB0  0E05               	movlw	5
  5387  011EB2  6EE6               	movwf	postinc1,c
  5388  011EB4  EC8D  F0CF         	call	_spinners	;wreg free
  5389  011EB8  5001               	movf	btemp^0,w,c
  5390  011EBA  6EE6               	movwf	postinc1,c
  5391  011EBC  0E00               	movlw	0
  5392  011EBE  6EE6               	movwf	postinc1,c
  5393  011EC0  0ECD               	movlw	low STR_36
  5394  011EC2  6EE6               	movwf	postinc1,c
  5395  011EC4  0EFC               	movlw	high STR_36
  5396  011EC6  6EE6               	movwf	postinc1,c
  5397  011EC8  0E00               	movlw	0
  5398  011ECA  6EE6               	movwf	postinc1,c
  5399  011ECC  0E02               	movlw	2
  5400  011ECE  6EE6               	movwf	postinc1,c
  5401  011ED0  EC38  F0DF         	call	_get_vterm_ptr	;wreg free
  5402  011ED4  0060  F007  FFE6   	movff	btemp,postinc1
  5403  011EDA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5404  011EE0  0E0A               	movlw	10
  5405  011EE2  6EE6               	movwf	postinc1,c
  5406  011EE4  EC08  F0CF         	call	_sprintf	;wreg free
  5407                           
  5408                           ;main.c: 375:      sprintf(get_vterm_ptr(0, 1), "ESR  %2.6f            ", C.esr);
  5409  011EE8  EE21  F387         	lfsr	2,_C+136	;volatile
  5410  011EEC  006F FF7B FFE6     	movff	postinc2,postinc1
  5411  011EF2  006F FF7B FFE6     	movff	postinc2,postinc1
  5412  011EF8  006F FF7B FFE6     	movff	postinc2,postinc1
  5413  011EFE  006F FF7B FFE6     	movff	postinc2,postinc1
  5414  011F04  0EB6               	movlw	low STR_37
  5415  011F06  6EE6               	movwf	postinc1,c
  5416  011F08  0EFC               	movlw	high STR_37
  5417  011F0A  6EE6               	movwf	postinc1,c
  5418  011F0C  0E01               	movlw	1
  5419  011F0E  6EE6               	movwf	postinc1,c
  5420  011F10  0E00               	movlw	0
  5421  011F12  6EE6               	movwf	postinc1,c
  5422  011F14  EC38  F0DF         	call	_get_vterm_ptr	;wreg free
  5423  011F18  0060  F007  FFE6   	movff	btemp,postinc1
  5424  011F1E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5425  011F24  0E08               	movlw	8
  5426  011F26  6EE6               	movwf	postinc1,c
  5427  011F28  EC08  F0CF         	call	_sprintf	;wreg free
  5428                           
  5429                           ;main.c: 376:      sprintf(get_vterm_ptr(1, 1), "R1 %2.3f %3.4f        ", C.bv_one_load,
      +                           C.load_i1);
  5430  011F2C  EE22  F00D         	lfsr	2,_C+270	;volatile
  5431  011F30  006F FF7B FFE6     	movff	postinc2,postinc1
  5432  011F36  006F FF7B FFE6     	movff	postinc2,postinc1
  5433  011F3C  006F FF7B FFE6     	movff	postinc2,postinc1
  5434  011F42  006F FF7B FFE6     	movff	postinc2,postinc1
  5435  011F48  EE22  F019         	lfsr	2,_C+282	;volatile
  5436  011F4C  006F FF7B FFE6     	movff	postinc2,postinc1
  5437  011F52  006F FF7B FFE6     	movff	postinc2,postinc1
  5438  011F58  006F FF7B FFE6     	movff	postinc2,postinc1
  5439  011F5E  006F FF7B FFE6     	movff	postinc2,postinc1
  5440  011F64  0EFB               	movlw	low STR_38
  5441  011F66  6EE6               	movwf	postinc1,c
  5442  011F68  0EFC               	movlw	high STR_38
  5443  011F6A  6EE6               	movwf	postinc1,c
  5444  011F6C  0E01               	movlw	1
  5445  011F6E  6EE6               	movwf	postinc1,c
  5446  011F70  0E01               	movlw	1
  5447  011F72  6EE6               	movwf	postinc1,c
  5448  011F74  EC38  F0DF         	call	_get_vterm_ptr	;wreg free
  5449  011F78  0060  F007  FFE6   	movff	btemp,postinc1
  5450  011F7E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5451  011F84  0E0C               	movlw	12
  5452  011F86  6EE6               	movwf	postinc1,c
  5453  011F88  EC08  F0CF         	call	_sprintf	;wreg free
  5454                           
  5455                           ;main.c: 377:      sprintf(get_vterm_ptr(2, 1), "R2 %2.3f %3.4f        ", C.bv_full_load
      +                          , C.load_i2);
  5456  011F8C  EE22  F011         	lfsr	2,_C+274	;volatile
  5457  011F90  006F FF7B FFE6     	movff	postinc2,postinc1
  5458  011F96  006F FF7B FFE6     	movff	postinc2,postinc1
  5459  011F9C  006F FF7B FFE6     	movff	postinc2,postinc1
  5460  011FA2  006F FF7B FFE6     	movff	postinc2,postinc1
  5461  011FA8  EE22  F01D         	lfsr	2,_C+286	;volatile
  5462  011FAC  006F FF7B FFE6     	movff	postinc2,postinc1
  5463  011FB2  006F FF7B FFE6     	movff	postinc2,postinc1
  5464  011FB8  006F FF7B FFE6     	movff	postinc2,postinc1
  5465  011FBE  006F FF7B FFE6     	movff	postinc2,postinc1
  5466  011FC4  0E12               	movlw	low STR_39
  5467  011FC6  6EE6               	movwf	postinc1,c
  5468  011FC8  0EFD               	movlw	high STR_39
  5469  011FCA  6EE6               	movwf	postinc1,c
  5470  011FCC  0E01               	movlw	1
  5471  011FCE  6EE6               	movwf	postinc1,c
  5472  011FD0  0E02               	movlw	2
  5473  011FD2  6EE6               	movwf	postinc1,c
  5474  011FD4  EC38  F0DF         	call	_get_vterm_ptr	;wreg free
  5475  011FD8  0060  F007  FFE6   	movff	btemp,postinc1
  5476  011FDE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5477  011FE4  0E0C               	movlw	12
  5478  011FE6  6EE6               	movwf	postinc1,c
  5479  011FE8  EC08  F0CF         	call	_sprintf	;wreg free
  5480                           
  5481                           ;main.c: 378:      break;
  5482  011FEC  D110               	goto	l13563
  5483  011FEE                     l13547:
  5484                           
  5485                           ; BSR set to: 1
  5486                           ;main.c: 380:      if (!V.calib) {
  5487  011FEE  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
  5488  011FF0  A4D8               	btfss	status,2,c
  5489  011FF2  D02D               	goto	l13551
  5490                           
  5491                           ; BSR set to: 1
  5492                           ;main.c: 381:       lp_filter(0.0, i, -1);
  5493  011FF4  0EFF               	movlw	255
  5494  011FF6  6EE6               	movwf	postinc1,c
  5495                           
  5496                           ;stkvar	_i @ sp[(-18)+14]
  5497  011FF8  0EFC               	movlw	-4
  5498  011FFA  50E3               	movf	plusw1,w,c
  5499  011FFC  6EE6               	movwf	postinc1,c
  5500  011FFE  0E00               	movlw	0
  5501  012000  6EE6               	movwf	postinc1,c
  5502  012002  0E00               	movlw	0
  5503  012004  6EE6               	movwf	postinc1,c
  5504  012006  0E00               	movlw	0
  5505  012008  6EE6               	movwf	postinc1,c
  5506  01200A  0E00               	movlw	0
  5507  01200C  6EE6               	movwf	postinc1,c
  5508  01200E  EC47  F0C4         	call	_lp_filter	;wreg free
  5509                           
  5510                           ;main.c: 382:       lp_filter(0.0, j, -1);
  5511  012012  0EFF               	movlw	255
  5512  012014  6EE6               	movwf	postinc1,c
  5513                           
  5514                           ;stkvar	_j @ sp[(-18)+13]
  5515  012016  0EFB               	movlw	-5
  5516  012018  50E3               	movf	plusw1,w,c
  5517  01201A  6EE6               	movwf	postinc1,c
  5518  01201C  0E00               	movlw	0
  5519  01201E  6EE6               	movwf	postinc1,c
  5520  012020  0E00               	movlw	0
  5521  012022  6EE6               	movwf	postinc1,c
  5522  012024  0E00               	movlw	0
  5523  012026  6EE6               	movwf	postinc1,c
  5524  012028  0E00               	movlw	0
  5525  01202A  6EE6               	movwf	postinc1,c
  5526  01202C  EC47  F0C4         	call	_lp_filter	;wreg free
  5527                           
  5528                           ;main.c: 383:       lp_filter(0.0, k, -1);
  5529  012030  0EFF               	movlw	255
  5530  012032  6EE6               	movwf	postinc1,c
  5531                           
  5532                           ;stkvar	_k @ sp[(-18)+12]
  5533  012034  0EFA               	movlw	-6
  5534  012036  50E3               	movf	plusw1,w,c
  5535  012038  6EE6               	movwf	postinc1,c
  5536  01203A  0E00               	movlw	0
  5537  01203C  6EE6               	movwf	postinc1,c
  5538  01203E  0E00               	movlw	0
  5539  012040  6EE6               	movwf	postinc1,c
  5540  012042  0E00               	movlw	0
  5541  012044  6EE6               	movwf	postinc1,c
  5542  012046  0E00               	movlw	0
  5543  012048  6EE6               	movwf	postinc1,c
  5544  01204A  EC47  F0C4         	call	_lp_filter	;wreg free
  5545  01204E                     l13551:
  5546                           
  5547                           ;main.c: 385:      V.calib = 1;
  5548  01204E  0E01               	movlw	1
  5549  012050  0101               	movlb	1	; () banked
  5550  012052  6FB3               	movwf	(_V+172)& (0+255),b	;volatile
  5551                           
  5552                           ; BSR set to: 1
  5553                           ;main.c: 386:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          i), C.calc[i], inp_index + 1);
  5554                           ;stkvar	_inp_index @ sp[(-17)+11]
  5555  012054  0EFA               	movlw	-6
  5556  012056  50E3               	movf	plusw1,w,c
  5557  012058  6E0B               	movwf	(btemp+10)^0,c
  5558  01205A  6A0C               	clrf	(btemp+11)^0,c
  5559  01205C  0E01               	movlw	1
  5560  01205E  260B               	addwf	(btemp+10)^0,f,c
  5561  012060  0E00               	movlw	0
  5562  012062  220C               	addwfc	(btemp+11)^0,f,c
  5563  012064  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5564  01206A  0060  F033  FFE6   	movff	btemp+11,postinc1
  5565                           
  5566                           ;stkvar	_i @ sp[(-19)+14]
  5567  012070  0EFB               	movlw	-5
  5568  012072  50E3               	movf	plusw1,w,c
  5569  012074  0D04               	mullw	4
  5570  012076  0EFF               	movlw	low _C
  5571  012078  24F3               	addwf	243,w,c
  5572  01207A  6ED9               	movwf	fsr2l,c
  5573  01207C  0E06               	movlw	high _C
  5574  01207E  20F4               	addwfc	prodh,w,c
  5575  012080  6EDA               	movwf	fsr2h,c
  5576  012082  006F FF7B FFE6     	movff	postinc2,postinc1
  5577  012088  006F FF7B FFE6     	movff	postinc2,postinc1
  5578  01208E  006F FF7B FFE6     	movff	postinc2,postinc1
  5579  012094  006F FF7B FFE6     	movff	postinc2,postinc1
  5580                           
  5581                           ;stkvar	_i @ sp[(-23)+14]
  5582  01209A  0EF7               	movlw	-9
  5583  01209C  50E3               	movf	plusw1,w,c
  5584  01209E  6EE6               	movwf	postinc1,c
  5585  0120A0  ECBE  F0E1         	call	_get_raw_result	;wreg free
  5586  0120A4  0060  F007  FFE6   	movff	btemp,postinc1
  5587  0120AA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5588  0120B0  0E8A               	movlw	low STR_40
  5589  0120B2  6EE6               	movwf	postinc1,c
  5590  0120B4  0EFE               	movlw	high STR_40
  5591  0120B6  6EE6               	movwf	postinc1,c
  5592  0120B8  0E00               	movlw	0
  5593  0120BA  6EE6               	movwf	postinc1,c
  5594  0120BC  0E00               	movlw	0
  5595  0120BE  6EE6               	movwf	postinc1,c
  5596  0120C0  EC38  F0DF         	call	_get_vterm_ptr	;wreg free
  5597  0120C4  0060  F007  FFE6   	movff	btemp,postinc1
  5598  0120CA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5599  0120D0  0E0C               	movlw	12
  5600  0120D2  6EE6               	movwf	postinc1,c
  5601  0120D4  EC08  F0CF         	call	_sprintf	;wreg free
  5602                           
  5603                           ; BSR set to: 0
  5604                           ;main.c: 387:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          j), C.calc[j], inp_index + 2);
  5605                           ;stkvar	_inp_index @ sp[(-17)+11]
  5606  0120D8  0EFA               	movlw	-6
  5607  0120DA  50E3               	movf	plusw1,w,c
  5608  0120DC  6E0B               	movwf	(btemp+10)^0,c
  5609  0120DE  6A0C               	clrf	(btemp+11)^0,c
  5610  0120E0  0E02               	movlw	2
  5611  0120E2  260B               	addwf	(btemp+10)^0,f,c
  5612  0120E4  0E00               	movlw	0
  5613  0120E6  220C               	addwfc	(btemp+11)^0,f,c
  5614  0120E8  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5615  0120EE  0060  F033  FFE6   	movff	btemp+11,postinc1
  5616                           
  5617                           ;stkvar	_j @ sp[(-19)+13]
  5618  0120F4  0EFA               	movlw	-6
  5619  0120F6  50E3               	movf	plusw1,w,c
  5620  0120F8  0D04               	mullw	4
  5621  0120FA  0EFF               	movlw	low _C
  5622  0120FC  24F3               	addwf	243,w,c
  5623  0120FE  6ED9               	movwf	fsr2l,c
  5624  012100  0E06               	movlw	high _C
  5625  012102  20F4               	addwfc	prodh,w,c
  5626  012104  6EDA               	movwf	fsr2h,c
  5627  012106  006F FF7B FFE6     	movff	postinc2,postinc1
  5628  01210C  006F FF7B FFE6     	movff	postinc2,postinc1
  5629  012112  006F FF7B FFE6     	movff	postinc2,postinc1
  5630  012118  006F FF7B FFE6     	movff	postinc2,postinc1
  5631                           
  5632                           ;stkvar	_j @ sp[(-23)+13]
  5633  01211E  0EF6               	movlw	-10
  5634  012120  50E3               	movf	plusw1,w,c
  5635  012122  6EE6               	movwf	postinc1,c
  5636  012124  ECBE  F0E1         	call	_get_raw_result	;wreg free
  5637  012128  0060  F007  FFE6   	movff	btemp,postinc1
  5638  01212E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5639  012134  0E8A               	movlw	low STR_40
  5640  012136  6EE6               	movwf	postinc1,c
  5641  012138  0EFE               	movlw	high STR_40
  5642  01213A  6EE6               	movwf	postinc1,c
  5643  01213C  0E00               	movlw	0
  5644  01213E  6EE6               	movwf	postinc1,c
  5645  012140  0E01               	movlw	1
  5646  012142  6EE6               	movwf	postinc1,c
  5647  012144  EC38  F0DF         	call	_get_vterm_ptr	;wreg free
  5648  012148  0060  F007  FFE6   	movff	btemp,postinc1
  5649  01214E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5650  012154  0E0C               	movlw	12
  5651  012156  6EE6               	movwf	postinc1,c
  5652  012158  EC08  F0CF         	call	_sprintf	;wreg free
  5653                           
  5654                           ; BSR set to: 0
  5655                           ;main.c: 388:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          k), C.calc[k], inp_index + 3);
  5656                           ;stkvar	_inp_index @ sp[(-17)+11]
  5657  01215C  0EFA               	movlw	-6
  5658  01215E  50E3               	movf	plusw1,w,c
  5659  012160  6E0B               	movwf	(btemp+10)^0,c
  5660  012162  6A0C               	clrf	(btemp+11)^0,c
  5661  012164  0E03               	movlw	3
  5662  012166  260B               	addwf	(btemp+10)^0,f,c
  5663  012168  0E00               	movlw	0
  5664  01216A  220C               	addwfc	(btemp+11)^0,f,c
  5665  01216C  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5666  012172  0060  F033  FFE6   	movff	btemp+11,postinc1
  5667                           
  5668                           ;stkvar	_k @ sp[(-19)+12]
  5669  012178  0EF9               	movlw	-7
  5670  01217A  50E3               	movf	plusw1,w,c
  5671  01217C  0D04               	mullw	4
  5672  01217E  0EFF               	movlw	low _C
  5673  012180  24F3               	addwf	243,w,c
  5674  012182  6ED9               	movwf	fsr2l,c
  5675  012184  0E06               	movlw	high _C
  5676  012186  20F4               	addwfc	prodh,w,c
  5677  012188  6EDA               	movwf	fsr2h,c
  5678  01218A  006F FF7B FFE6     	movff	postinc2,postinc1
  5679  012190  006F FF7B FFE6     	movff	postinc2,postinc1
  5680  012196  006F FF7B FFE6     	movff	postinc2,postinc1
  5681  01219C  006F FF7B FFE6     	movff	postinc2,postinc1
  5682                           
  5683                           ;stkvar	_k @ sp[(-23)+12]
  5684  0121A2  0EF5               	movlw	-11
  5685  0121A4  50E3               	movf	plusw1,w,c
  5686  0121A6  6EE6               	movwf	postinc1,c
  5687  0121A8  ECBE  F0E1         	call	_get_raw_result	;wreg free
  5688  0121AC  0060  F007  FFE6   	movff	btemp,postinc1
  5689  0121B2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5690  0121B8  0E8A               	movlw	low STR_40
  5691  0121BA  6EE6               	movwf	postinc1,c
  5692  0121BC  0EFE               	movlw	high STR_40
  5693  0121BE  6EE6               	movwf	postinc1,c
  5694  0121C0  0E00               	movlw	0
  5695  0121C2  6EE6               	movwf	postinc1,c
  5696  0121C4  0E02               	movlw	2
  5697  0121C6  6EE6               	movwf	postinc1,c
  5698  0121C8  EC38  F0DF         	call	_get_vterm_ptr	;wreg free
  5699  0121CC  0060  F007  FFE6   	movff	btemp,postinc1
  5700  0121D2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5701  0121D8  0E0C               	movlw	12
  5702  0121DA  6EE6               	movwf	postinc1,c
  5703  0121DC  EC08  F0CF         	call	_sprintf	;wreg free
  5704                           
  5705                           ;main.c: 389:      break;
  5706  0121E0  D016               	goto	l13563
  5707  0121E2                     l13561:
  5708  0121E2  0101               	movlb	1	; () banked
  5709  0121E4  51C6               	movf	_H& (0+255),w,b
  5710  0121E6  6E0B               	movwf	(btemp+10)^0,c
  5711  0121E8  6A0C               	clrf	(btemp+11)^0,c
  5712                           
  5713                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5714                           ; Switch size 1, requested type "simple"
  5715                           ; Number of cases is 1, Range of values is 0 to 0
  5716                           ; switch strategies available:
  5717                           ; Name         Instructions Cycles
  5718                           ; simple_byte            4     3 (average)
  5719                           ;	Chosen strategy is simple_byte
  5720  0121EA  500C               	movf	(btemp+11)^0,w,c
  5721  0121EC  0A00               	xorlw	0	; case 0
  5722  0121EE  A4D8               	btfss	status,2,c
  5723  0121F0  D00E               	goto	l13563
  5724                           
  5725                           ; BSR set to: 1
  5726                           ; Switch size 1, requested type "simple"
  5727                           ; Number of cases is 4, Range of values is 0 to 3
  5728                           ; switch strategies available:
  5729                           ; Name         Instructions Cycles
  5730                           ; simple_byte           13     7 (average)
  5731                           ;	Chosen strategy is simple_byte
  5732  0121F2  500B               	movf	(btemp+10)^0,w,c
  5733  0121F4  0A00               	xorlw	0	; case 0
  5734  0121F6  B4D8               	btfsc	status,2,c
  5735  0121F8  D4D6               	goto	l1378
  5736  0121FA  0A01               	xorlw	1	; case 1
  5737  0121FC  B4D8               	btfsc	status,2,c
  5738  0121FE  EFD1  F08C         	goto	l1368
  5739  012202  0A03               	xorlw	3	; case 2
  5740  012204  B4D8               	btfsc	status,2,c
  5741  012206  D5E3               	goto	l1379
  5742  012208  0A01               	xorlw	1	; case 3
  5743  01220A  B4D8               	btfsc	status,2,c
  5744  01220C  D6F0               	goto	l13547
  5745  01220E                     l13563:
  5746                           
  5747                           ;main.c: 393:     clear_hid_pflags(&H);
  5748  01220E  0EC6               	movlw	low _H
  5749  012210  6EE6               	movwf	postinc1,c
  5750  012212  0E01               	movlw	high _H
  5751  012214  6EE6               	movwf	postinc1,c
  5752  012216  EC7A  F0DC         	call	_clear_hid_pflags	;wreg free
  5753                           
  5754                           ;main.c: 395:    StartTimer(TMR_DISPLAY, 250);
  5755  01221A  0EFA               	movlw	250
  5756  01221C  6EE6               	movwf	postinc1,c
  5757  01221E  0E00               	movlw	0
  5758  012220  6EE6               	movwf	postinc1,c
  5759  012222  0E0A               	movlw	10
  5760  012224  6EE6               	movwf	postinc1,c
  5761  012226  EC66  F0DD         	call	_StartTimer	;wreg free
  5762                           
  5763                           ;main.c: 396:    V.enter = check_enter_button(&H);
  5764  01222A  0EC6               	movlw	low _H
  5765  01222C  6EE6               	movwf	postinc1,c
  5766  01222E  0E01               	movlw	high _H
  5767  012230  6EE6               	movwf	postinc1,c
  5768  012232  ECD0  F0D8         	call	_check_enter_button	;wreg free
  5769  012236  5001               	movf	btemp^0,w,c
  5770  012238  0101               	movlb	1	; () banked
  5771  01223A  6FB4               	movwf	(_V+173)& (0+255),b	;volatile
  5772                           
  5773                           ; BSR set to: 1
  5774                           ;main.c: 397:    if (V.enter && (H.hid_display != HID_AUX)) {
  5775  01223C  51B4               	movf	(_V+173)& (0+255),w,b	;volatile
  5776  01223E  B4D8               	btfsc	status,2,c
  5777  012240  D011               	goto	l13577
  5778                           
  5779                           ; BSR set to: 1
  5780  012242  0E03               	movlw	3
  5781  012244  19C6               	xorwf	_H& (0+255),w,b
  5782  012246  B4D8               	btfsc	status,2,c
  5783  012248  D00D               	goto	l13577
  5784                           
  5785                           ; BSR set to: 1
  5786                           ;main.c: 398:     V.enter = 0;
  5787  01224A  6BB4               	clrf	(_V+173)& (0+255),b	;volatile
  5788                           
  5789                           ; BSR set to: 1
  5790                           ;main.c: 399:     V.screen = ~V.screen;
  5791  01224C  A1A3               	btfss	(_V+156)& (0+255),0,b	;volatile
  5792  01224E  D002               	goto	u12960
  5793  012250  0E01               	movlw	1
  5794  012252  D001               	goto	u12966
  5795  012254                     u12960:
  5796  012254  0E00               	movlw	0
  5797  012256                     u12966:
  5798  012256  0AFF               	xorlw	255
  5799  012258  6E0C               	movwf	(btemp+11)^0,c
  5800  01225A  51A3               	movf	(_V+156)& (0+255),w,b	;volatile
  5801  01225C  180C               	xorwf	(btemp+11)^0,w,c
  5802  01225E  0BFE               	andlw	-2
  5803  012260  180C               	xorwf	(btemp+11)^0,w,c
  5804  012262  6FA3               	movwf	(_V+156)& (0+255),b	;volatile
  5805  012264                     l13577:
  5806                           
  5807                           ; BSR set to: 1
  5808                           ;main.c: 401:    set_vterm(V.screen);
  5809  012264  A1A3               	btfss	(_V+156)& (0+255),0,b	;volatile
  5810  012266  D002               	goto	u12970
  5811  012268  0E01               	movlw	1
  5812  01226A  D001               	goto	u12976
  5813  01226C                     u12970:
  5814  01226C  0E00               	movlw	0
  5815  01226E                     u12976:
  5816  01226E  6EE6               	movwf	postinc1,c
  5817  012270  ECA0  F0E1         	call	_set_vterm	;wreg free
  5818                           
  5819                           ;main.c: 402:    update_lcd(V.screen);
  5820  012274  0101               	movlb	1	; () banked
  5821  012276  A1A3               	btfss	(_V+156)& (0+255),0,b	;volatile
  5822  012278  D002               	goto	u12980
  5823  01227A  0E01               	movlw	1
  5824  01227C  D001               	goto	u12986
  5825  01227E                     u12980:
  5826  01227E  0E00               	movlw	0
  5827  012280                     u12986:
  5828  012280  6EE6               	movwf	postinc1,c
  5829  012282  EC80  F0CE         	call	_update_lcd	;wreg free
  5830                           
  5831                           ;main.c: 404:    wait_lcd_done();
  5832  012286  ECCD  F0E1         	call	_wait_lcd_done	;wreg free
  5833                           
  5834                           ; BSR set to: 0
  5835                           ;main.c: 405:    set_dac_a(1.00);
  5836  01228A  0E00               	movlw	0
  5837  01228C  6EE6               	movwf	postinc1,c
  5838  01228E  0E00               	movlw	0
  5839  012290  6EE6               	movwf	postinc1,c
  5840  012292  0E80               	movlw	128
  5841  012294  6EE6               	movwf	postinc1,c
  5842  012296  0E3F               	movlw	63
  5843  012298  6EE6               	movwf	postinc1,c
  5844  01229A  ECA4  F0DE         	call	_set_dac_a	;wreg free
  5845                           
  5846                           ;main.c: 406:    set_dac_b(2.00);
  5847  01229E  0E00               	movlw	0
  5848  0122A0  6EE6               	movwf	postinc1,c
  5849  0122A2  0E00               	movlw	0
  5850  0122A4  6EE6               	movwf	postinc1,c
  5851  0122A6  0E00               	movlw	0
  5852  0122A8  6EE6               	movwf	postinc1,c
  5853  0122AA  0E40               	movlw	64
  5854  0122AC  6EE6               	movwf	postinc1,c
  5855  0122AE  EC8A  F0DE         	call	_set_dac_b	;wreg free
  5856                           
  5857                           ;main.c: 407:    set_dac();
  5858  0122B2  ECD3  F0D5         	call	_set_dac	;wreg free
  5859  0122B6                     l13589:
  5860                           
  5861                           ;main.c: 413:   check_help(V.flipper);
  5862  0122B6  0101               	movlb	1	; () banked
  5863  0122B8  51B2               	movf	(_V+171)& (0+255),w,b	;volatile
  5864  0122BA  6EE6               	movwf	postinc1,c
  5865  0122BC  EC4E  F0C1         	call	_check_help	;wreg free
  5866                           
  5867                           ;main.c: 415:   if (V.enter) {
  5868  0122C0  0101               	movlb	1	; () banked
  5869  0122C2  51B4               	movf	(_V+173)& (0+255),w,b	;volatile
  5870  0122C4  B4D8               	btfsc	status,2,c
  5871  0122C6  D062               	goto	l1384
  5872                           
  5873                           ; BSR set to: 1
  5874                           ;main.c: 416:    V.enter = 0;
  5875  0122C8  6BB4               	clrf	(_V+173)& (0+255),b	;volatile
  5876                           
  5877                           ;main.c: 417:    V.calib = 0;
  5878  0122CA  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  5879                           
  5880                           ; BSR set to: 1
  5881                           ;main.c: 418:    inp_index += 3;
  5882                           ;stkvar	_inp_index @ sp[(-17)+11]
  5883  0122CC  0EFA               	movlw	-6
  5884  0122CE  006F FF8C  F001    	movff	plusw1,btemp
  5885  0122D4  0E03               	movlw	3
  5886  0122D6  2601               	addwf	btemp^0,f,c
  5887  0122D8  0EFA               	movlw	-6
  5888  0122DA  0060  F007  FFE3   	movff	btemp,plusw1
  5889                           
  5890                           ;main.c: 419:    if (inp_index > 9)
  5891                           ;stkvar	_inp_index @ sp[(-17)+11]
  5892  0122E0  0EFA               	movlw	-6
  5893  0122E2  006F FF8C  F001    	movff	plusw1,btemp
  5894  0122E8  0E09               	movlw	9
  5895  0122EA  6401               	cpfsgt	btemp^0,c
  5896  0122EC  D03A               	goto	l13617
  5897                           
  5898                           ; BSR set to: 1
  5899                           ;main.c: 420:     inp_index = 0;
  5900                           ;stkvar	_inp_index @ sp[(-17)+11]
  5901  0122EE  0EFA               	movlw	-6
  5902  0122F0  6AE3               	clrf	plusw1,c
  5903  0122F2  D037               	goto	l13617
  5904  0122F4                     l13599:
  5905                           
  5906                           ; BSR set to: 1
  5907                           ;main.c: 423:     i = C_BATT;
  5908                           ;stkvar	_i @ sp[(-17)+14]
  5909  0122F4  0EFD               	movlw	-3
  5910  0122F6  6AE3               	clrf	plusw1,c
  5911                           
  5912                           ; BSR set to: 1
  5913                           ;main.c: 424:     j = C_PV;
  5914                           ;stkvar	_j @ sp[(-17)+13]
  5915  0122F8  0EFC               	movlw	-4
  5916  0122FA  6AE3               	clrf	plusw1,c
  5917  0122FC  2AE3               	incf	plusw1,f,c
  5918                           
  5919                           ; BSR set to: 1
  5920                           ;main.c: 425:     k = V_CC;
  5921                           ;stkvar	_k @ sp[(-17)+12]
  5922  0122FE  0EFB               	movlw	-5
  5923  012300  6AE3               	clrf	plusw1,c
  5924  012302  82E3               	bsf	plusw1,1,c
  5925                           
  5926                           ;main.c: 426:     break;
  5927  012304  D043               	goto	l1384
  5928  012306                     l13605:
  5929                           
  5930                           ; BSR set to: 1
  5931                           ;main.c: 428:     i = V_BAT;
  5932                           ;stkvar	_i @ sp[(-17)+14]
  5933  012306  0EFD               	movlw	-3
  5934  012308  6AE3               	clrf	plusw1,c
  5935  01230A  84E3               	bsf	plusw1,2,c
  5936                           
  5937                           ;main.c: 429:     j = V_PV;
  5938                           ;stkvar	_j @ sp[(-17)+13]
  5939  01230C  0EFC               	movlw	-4
  5940  01230E  6AE3               	clrf	plusw1,c
  5941  012310  80E3               	bsf	plusw1,0,c
  5942  012312  84E3               	bsf	plusw1,2,c	;indir
  5943                           
  5944                           ;main.c: 430:     k = V_CBUS;
  5945                           ;stkvar	_k @ sp[(-17)+12]
  5946  012314  0EFB               	movlw	-5
  5947  012316  6AE3               	clrf	plusw1,c
  5948  012318  82E3               	bsf	plusw1,1,c
  5949  01231A  84E3               	bsf	plusw1,2,c	;indir
  5950                           
  5951                           ;main.c: 431:     break;
  5952  01231C  D037               	goto	l1384
  5953  01231E                     l13607:
  5954                           
  5955                           ; BSR set to: 1
  5956                           ;main.c: 433:     i = V_BBAT;
  5957                           ;stkvar	_i @ sp[(-17)+14]
  5958  01231E  0EFD               	movlw	-3
  5959  012320  6AE3               	clrf	plusw1,c
  5960  012322  82E3               	bsf	plusw1,1,c
  5961  012324  86E3               	bsf	plusw1,3,c	;indir
  5962                           
  5963                           ; BSR set to: 1
  5964                           ;main.c: 434:     j = V_TEMP;
  5965  012326  0E0B               	movlw	11
  5966  012328  6E0C               	movwf	(btemp+11)^0,c
  5967                           
  5968                           ;stkvar	_j @ sp[(-17)+13]
  5969  01232A  0EFC               	movlw	-4
  5970  01232C  0060  F033  FFE3   	movff	btemp+11,plusw1
  5971                           
  5972                           ; BSR set to: 1
  5973                           ;main.c: 435:     k = V_INVERTER;
  5974                           ;stkvar	_k @ sp[(-17)+12]
  5975  012332  0EFB               	movlw	-5
  5976  012334  6AE3               	clrf	plusw1,c
  5977  012336  84E3               	bsf	plusw1,2,c
  5978  012338  86E3               	bsf	plusw1,3,c	;indir
  5979                           
  5980                           ;main.c: 436:     break;
  5981  01233A  D028               	goto	l1384
  5982  01233C                     l13613:
  5983                           
  5984                           ; BSR set to: 1
  5985                           ;main.c: 438:     i = V_LIGHT_SENSOR;
  5986  01233C  0E0D               	movlw	13
  5987  01233E  6E0C               	movwf	(btemp+11)^0,c
  5988                           
  5989                           ;stkvar	_i @ sp[(-17)+14]
  5990  012340  0EFD               	movlw	-3
  5991  012342  0060  F033  FFE3   	movff	btemp+11,plusw1
  5992                           
  5993                           ;main.c: 439:     j = V_LIGHT_SENSOR;
  5994  012348  0E0D               	movlw	13
  5995  01234A  6E0C               	movwf	(btemp+11)^0,c
  5996                           
  5997                           ;stkvar	_j @ sp[(-17)+13]
  5998  01234C  0EFC               	movlw	-4
  5999  01234E  0060  F033  FFE3   	movff	btemp+11,plusw1
  6000                           
  6001                           ;main.c: 440:     k = V_LIGHT_SENSOR;
  6002  012354  0E0D               	movlw	13
  6003  012356  6E0C               	movwf	(btemp+11)^0,c
  6004                           
  6005                           ;stkvar	_k @ sp[(-17)+12]
  6006  012358  0EFB               	movlw	-5
  6007  01235A  0060  F033  FFE3   	movff	btemp+11,plusw1
  6008                           
  6009                           ;main.c: 441:     break;
  6010  012360  D015               	goto	l1384
  6011  012362                     l13617:
  6012                           
  6013                           ; BSR set to: 1
  6014                           ;stkvar	_inp_index @ sp[(-17)+11]
  6015  012362  0EFA               	movlw	-6
  6016  012364  50E3               	movf	plusw1,w,c
  6017  012366  6E0B               	movwf	(btemp+10)^0,c
  6018  012368  6A0C               	clrf	(btemp+11)^0,c
  6019                           
  6020                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6021                           ; Switch size 1, requested type "simple"
  6022                           ; Number of cases is 1, Range of values is 0 to 0
  6023                           ; switch strategies available:
  6024                           ; Name         Instructions Cycles
  6025                           ; simple_byte            4     3 (average)
  6026                           ;	Chosen strategy is simple_byte
  6027  01236A  500C               	movf	(btemp+11)^0,w,c
  6028  01236C  0A00               	xorlw	0	; case 0
  6029  01236E  A4D8               	btfss	status,2,c
  6030  012370  D00D               	goto	l1384
  6031                           
  6032                           ; BSR set to: 1
  6033                           ; Switch size 1, requested type "simple"
  6034                           ; Number of cases is 4, Range of values is 0 to 9
  6035                           ; switch strategies available:
  6036                           ; Name         Instructions Cycles
  6037                           ; simple_byte           13     7 (average)
  6038                           ;	Chosen strategy is simple_byte
  6039  012372  500B               	movf	(btemp+10)^0,w,c
  6040  012374  0A00               	xorlw	0	; case 0
  6041  012376  B4D8               	btfsc	status,2,c
  6042  012378  D7BD               	goto	l13599
  6043  01237A  0A03               	xorlw	3	; case 3
  6044  01237C  B4D8               	btfsc	status,2,c
  6045  01237E  D7C3               	goto	l13605
  6046  012380  0A05               	xorlw	5	; case 6
  6047  012382  B4D8               	btfsc	status,2,c
  6048  012384  D7CC               	goto	l13607
  6049  012386  0A0F               	xorlw	15	; case 9
  6050  012388  B4D8               	btfsc	status,2,c
  6051  01238A  D7D8               	goto	l13613
  6052  01238C                     l1384:
  6053                           
  6054                           ; BSR set to: 1
  6055                           ;main.c: 450:   if (V.set_sequ) {
  6056  01238C  A1A2               	btfss	(_V+155)& (0+255),0,b	;volatile
  6057  01238E  EF83  F08C         	goto	l13491
  6058                           
  6059                           ; BSR set to: 1
  6060                           ;main.c: 451:    if (TimerDone(TMR_INFO)) {
  6061  012392  0E07               	movlw	7
  6062  012394  6EE6               	movwf	postinc1,c
  6063  012396  ECBB  F0DF         	call	_TimerDone	;wreg free
  6064  01239A  5001               	movf	btemp^0,w,c
  6065  01239C  B4D8               	btfsc	status,2,c
  6066  01239E  D00C               	goto	l13627
  6067                           
  6068                           ;main.c: 452:     V.set_sequ = 0;
  6069  0123A0  0101               	movlb	1	; () banked
  6070  0123A2  91A2               	bcf	(_V+155)& (0+255),0,b	;volatile
  6071                           
  6072                           ; BSR set to: 1
  6073                           ;main.c: 453:     set_vterm(0);
  6074  0123A4  0E00               	movlw	0
  6075  0123A6  6EE6               	movwf	postinc1,c
  6076  0123A8  ECA0  F0E1         	call	_set_vterm	;wreg free
  6077                           
  6078                           ;main.c: 454:     update_lcd(0);
  6079  0123AC  0E00               	movlw	0
  6080  0123AE  6EE6               	movwf	postinc1,c
  6081  0123B0  EC80  F0CE         	call	_update_lcd	;wreg free
  6082                           
  6083                           ;main.c: 455:    } else {
  6084  0123B4  EF83  F08C         	goto	l13491
  6085  0123B8                     l13627:
  6086                           
  6087                           ;main.c: 456:     set_vterm(2);
  6088  0123B8  0E02               	movlw	2
  6089  0123BA  6EE6               	movwf	postinc1,c
  6090  0123BC  ECA0  F0E1         	call	_set_vterm	;wreg free
  6091                           
  6092                           ;main.c: 457:     update_lcd(2);
  6093  0123C0  0E02               	movlw	2
  6094  0123C2  6EE6               	movwf	postinc1,c
  6095  0123C4  EC80  F0CE         	call	_update_lcd	;wreg free
  6096  0123C8  EF83  F08C         	goto	l13491
  6097  0123CC                     __end_of_main:
  6098                           	opt callstack 0
  6099                           
  6100 ;; *************** function _static_soc *****************
  6101 ;; Defined at:
  6102 ;;		line 117 in file "mbmc.c"
  6103 ;; Parameters:    Size  Location     Type
  6104 ;;		None
  6105 ;; Auto vars:     Size  Location     Type
  6106 ;;		None
  6107 ;; Return value:  Size  Location     Type
  6108 ;;                  1  [STACK] void 
  6109 ;; Registers used:
  6110 ;;		wreg, fsr2l, fsr2h
  6111 ;; Tracked objects:
  6112 ;;		On entry : 0/0
  6113 ;;		On exit  : 0/0
  6114 ;;		Unchanged: 0/0
  6115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6119 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6120 ;;Total ram usage:        0 bytes
  6121 ;; Hardware stack levels used:    1
  6122 ;; Hardware stack levels required when called:   15
  6123 ;; This function calls:
  6124 ;;		Nothing
  6125 ;; This function is called by:
  6126 ;;		_main
  6127 ;; This function uses a reentrant model
  6128 ;;
  6129                           
  6130                           	psect	text1
  6131  01B540                     __ptext1:
  6132                           	opt callstack 0
  6133  01B540                     _static_soc:
  6134                           	opt callstack 15
  6135                           
  6136                           ;mbmc.c: 119:  C.runtime = 120;
  6137                           
  6138                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6139                           ;incstack = 0
  6140  01B540  0E78               	movlw	120
  6141  01B542  006F FFA0  F7B3    	movff	wreg,_C+180	;volatile
  6142  01B548  0E00               	movlw	0
  6143  01B54A  006F FFA0  F7B4    	movff	wreg,_C+181	;volatile
  6144                           
  6145                           ;mbmc.c: 120:  C.soc = 100;
  6146  01B550  0E64               	movlw	100
  6147  01B552  006F FFA0  F7B5    	movff	wreg,_C+182	;volatile
  6148  01B558  0E00               	movlw	0
  6149  01B55A  006F FFA0  F7B6    	movff	wreg,_C+183	;volatile
  6150                           
  6151                           ;mbmc.c: 121:  C.dynamic_ah = C.bank_ah;
  6152  01B560  EE21  F38B         	lfsr	2,_C+140	;volatile
  6153  01B564  006F FF78  F78F    	movff	postinc2,_C+144	;volatile
  6154  01B56A  006F FF78  F790    	movff	postinc2,_C+145	;volatile
  6155  01B570  006F FF78  F791    	movff	postinc2,_C+146	;volatile
  6156  01B576  006F FF74  F792    	movff	postdec2,_C+147	;volatile
  6157                           
  6158                           ;mbmc.c: 122:  C.dynamic_ah_adj = C.dynamic_ah;
  6159  01B57C  EE21  F38F         	lfsr	2,_C+144	;volatile
  6160  01B580  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
  6161  01B586  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
  6162  01B58C  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
  6163  01B592  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
  6164                           
  6165                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  6166  01B598  0012               	return		;funcret
  6167  01B59A                     __end_of_static_soc:
  6168                           	opt callstack 0
  6169                           
  6170 ;; *************** function _start_switch_handler *****************
  6171 ;; Defined at:
  6172 ;;		line 122 in file "dio.c"
  6173 ;; Parameters:    Size  Location     Type
  6174 ;;		None
  6175 ;; Auto vars:     Size  Location     Type
  6176 ;;		None
  6177 ;; Return value:  Size  Location     Type
  6178 ;;                  1  [STACK] void 
  6179 ;; Registers used:
  6180 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  6181 ;; Tracked objects:
  6182 ;;		On entry : 1/0
  6183 ;;		On exit  : 3F/39
  6184 ;;		Unchanged: 0/0
  6185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6190 ;;Total ram usage:        0 bytes
  6191 ;; Hardware stack levels used:    1
  6192 ;; Hardware stack levels required when called:   16
  6193 ;; This function calls:
  6194 ;;		_INT1_SetInterruptHandler
  6195 ;; This function is called by:
  6196 ;;		_main
  6197 ;; This function uses a reentrant model
  6198 ;;
  6199                           
  6200                           	psect	text2
  6201  01C2C4                     __ptext2:
  6202                           	opt callstack 0
  6203  01C2C4                     _start_switch_handler:
  6204                           	opt callstack 14
  6205                           
  6206                           ;dio.c: 124:  (PIE5bits.INT1IE = 0);
  6207                           
  6208                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6209                           ;incstack = 0
  6210  01C2C4  0139               	movlb	57	; () banked
  6211  01C2C6  9195               	bcf	149,0,b	;volatile
  6212                           
  6213                           ; BSR set to: 57
  6214                           ;dio.c: 125:  INT1_SetInterruptHandler(switch_handler);
  6215  01C2C8  0E4C               	movlw	low _switch_handler
  6216  01C2CA  6EE6               	movwf	postinc1,c
  6217  01C2CC  0E97               	movlw	high _switch_handler
  6218  01C2CE  6EE6               	movwf	postinc1,c
  6219  01C2D0  0E01               	movlw	low (_switch_handler shr (0+16))
  6220  01C2D2  6EE6               	movwf	postinc1,c
  6221  01C2D4  EC47  F0E0         	call	_INT1_SetInterruptHandler	;wreg free
  6222                           
  6223                           ;dio.c: 126:  S.button[SNULL].sw = SW_INVALID;
  6224  01C2D8  0E02               	movlw	2
  6225  01C2DA  0102               	movlb	2	; () banked
  6226  01C2DC  6F77               	movwf	(_S+35)& (0+255),b	;volatile
  6227                           
  6228                           ; BSR set to: 2
  6229                           ;dio.c: 127:  (PIE5bits.INT1IE = 1);
  6230  01C2DE  0139               	movlb	57	; () banked
  6231  01C2E0  8195               	bsf	149,0,b	;volatile
  6232                           
  6233                           ; BSR set to: 57
  6234                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  6235  01C2E2  0012               	return		;funcret
  6236  01C2E4                     __end_of_start_switch_handler:
  6237                           	opt callstack 0
  6238                           
  6239 ;; *************** function _srand *****************
  6240 ;; Defined at:
  6241 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  6242 ;; Parameters:    Size  Location     Type
  6243 ;;  s               2  [STACK] unsigned int 
  6244 ;; Auto vars:     Size  Location     Type
  6245 ;;		None
  6246 ;; Return value:  Size  Location     Type
  6247 ;;                  1  [STACK] void 
  6248 ;; Registers used:
  6249 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  6250 ;; Tracked objects:
  6251 ;;		On entry : 0/0
  6252 ;;		On exit  : 3F/1
  6253 ;;		Unchanged: 0/0
  6254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6259 ;;Total ram usage:        0 bytes
  6260 ;; Hardware stack levels used:    1
  6261 ;; Hardware stack levels required when called:   15
  6262 ;; This function calls:
  6263 ;;		Nothing
  6264 ;; This function is called by:
  6265 ;;		_main
  6266 ;; This function uses a reentrant model
  6267 ;;
  6268                           
  6269                           	psect	text3
  6270  01BCE0                     __ptext3:
  6271                           	opt callstack 0
  6272  01BCE0                     _srand:
  6273                           	opt callstack 15
  6274                           
  6275                           ;stkvar	_s @ sp[(0)+-2]
  6276                           
  6277                           ; BSR set to: 57
  6278                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6279                           ;incstack = 0
  6280  01BCE0  0EFE               	movlw	-2
  6281  01BCE2  50E3               	movf	plusw1,w,c
  6282  01BCE4  0FFF               	addlw	255
  6283  01BCE6  6E0B               	movwf	(btemp+10)^0,c
  6284  01BCE8  0EFF               	movlw	-1
  6285  01BCEA  006F FF8C  F00C    	movff	plusw1,btemp+11
  6286  01BCF0  0EFF               	movlw	255
  6287  01BCF2  220C               	addwfc	(btemp+11)^0,f,c
  6288  01BCF4  0060  F02C  F1F3   	movff	btemp+10,_seed
  6289  01BCFA  0060  F030  F1F4   	movff	btemp+11,_seed+1
  6290  01BD00  0101               	movlb	1	; () banked
  6291  01BD02  6BF5               	clrf	(_seed+2)& (0+255),b
  6292  01BD04  6BF6               	clrf	(_seed+3)& (0+255),b
  6293  01BD06  6BF7               	clrf	(_seed+4)& (0+255),b
  6294  01BD08  6BF8               	clrf	(_seed+5)& (0+255),b
  6295  01BD0A  6BF9               	clrf	(_seed+6)& (0+255),b
  6296  01BD0C  6BFA               	clrf	(_seed+7)& (0+255),b
  6297                           
  6298                           ; BSR set to: 1
  6299                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  6300  01BD0E  52E5               	movf	postdec1,f,c
  6301  01BD10  52E5               	movf	postdec1,f,c
  6302  01BD12  0012               	return		;funcret
  6303  01BD14                     __end_of_srand:
  6304                           	opt callstack 0
  6305                           
  6306 ;; *************** function _spinners *****************
  6307 ;; Defined at:
  6308 ;;		line 146 in file "mbmc.c"
  6309 ;; Parameters:    Size  Location     Type
  6310 ;;  shape           1  [STACK] unsigned char 
  6311 ;;  reset           1  [STACK] const unsigned char 
  6312 ;; Auto vars:     Size  Location     Type
  6313 ;;  c               1  [STACK] unsigned char 
  6314 ;; Return value:  Size  Location     Type
  6315 ;;                  1  [STACK] unsigned char 
  6316 ;; Registers used:
  6317 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl, prodh
  6318 ;; Tracked objects:
  6319 ;;		On entry : 0/0
  6320 ;;		On exit  : 0/0
  6321 ;;		Unchanged: 0/0
  6322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6326 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6327 ;;Total ram usage:        0 bytes
  6328 ;; Hardware stack levels used:    1
  6329 ;; Hardware stack levels required when called:   16
  6330 ;; This function calls:
  6331 ;;		_strlen
  6332 ;; This function is called by:
  6333 ;;		_main
  6334 ;; This function uses a reentrant model
  6335 ;;
  6336                           
  6337                           	psect	text4
  6338  019F1A                     __ptext4:
  6339                           	opt callstack 0
  6340  019F1A                     _spinners:
  6341                           	opt callstack 0
  6342                           
  6343                           ; BSR set to: 1
  6344                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6345  019F1A  52E6               	movf	postinc1,f,c
  6346                           
  6347                           ;mbmc.c: 146: char spinners(uint8_t shape, const uint8_t reset);mbmc.c: 147: {;mbmc.c: 1
      +                          48:  static uint8_t s[6];;mbmc.c: 149:  char c;;mbmc.c: 151:  if (shape > (6 - 1))
  6348                           ;stkvar	_shape @ sp[(-1)+-1]
  6349                           
  6350                           ;incstack = 0
  6351  019F1C  0EFE               	movlw	-2
  6352  019F1E  006F FF8C  F001    	movff	plusw1,btemp
  6353  019F24  0E05               	movlw	5
  6354  019F26  6401               	cpfsgt	btemp^0,c
  6355  019F28  D002               	goto	l1954
  6356                           
  6357                           ;mbmc.c: 152:   shape = 0;
  6358                           ;stkvar	_shape @ sp[(-1)+-1]
  6359  019F2A  0EFE               	movlw	-2
  6360  019F2C  6AE3               	clrf	plusw1,c
  6361  019F2E                     l1954:
  6362                           
  6363                           ;mbmc.c: 153:  if (reset)
  6364                           ;stkvar	_reset @ sp[(-1)+-2]
  6365  019F2E  0EFD               	movlw	-3
  6366  019F30  50E3               	movf	plusw1,w,c
  6367  019F32  B4D8               	btfsc	status,2,c
  6368  019F34  D00C               	goto	l11101
  6369                           
  6370                           ;mbmc.c: 154:   s[shape] = 0;
  6371                           ;stkvar	_shape @ sp[(-1)+-1]
  6372  019F36  0EFE               	movlw	-2
  6373  019F38  50E3               	movf	plusw1,w,c
  6374  019F3A  6E0B               	movwf	(btemp+10)^0,c
  6375  019F3C  6A0C               	clrf	(btemp+11)^0,c
  6376  019F3E  0EE1               	movlw	low spinners@s
  6377  019F40  240B               	addwf	(btemp+10)^0,w,c
  6378  019F42  6ED9               	movwf	fsr2l,c
  6379  019F44  0E01               	movlw	high spinners@s
  6380  019F46  200C               	addwfc	(btemp+11)^0,w,c
  6381  019F48  6EDA               	movwf	fsr2h,c
  6382  019F4A  0E00               	movlw	0
  6383  019F4C  6EDF               	movwf	indf2,c
  6384  019F4E                     l11101:
  6385                           
  6386                           ;mbmc.c: 155:  c = spin[shape][s[shape]];
  6387                           ;stkvar	_shape @ sp[(-1)+-1]
  6388  019F4E  0EFE               	movlw	-2
  6389  019F50  50E3               	movf	plusw1,w,c
  6390  019F52  0D14               	mullw	20
  6391  019F54  0E4B               	movlw	low _spin
  6392  019F56  6E0B               	movwf	(btemp+10)^0,c
  6393  019F58  0EFB               	movlw	high _spin
  6394  019F5A  6E0C               	movwf	(btemp+11)^0,c
  6395  019F5C  50F3               	movf	243,w,c
  6396  019F5E  260B               	addwf	(btemp+10)^0,f,c
  6397  019F60  50F4               	movf	244,w,c
  6398  019F62  220C               	addwfc	(btemp+11)^0,f,c
  6399                           
  6400                           ;stkvar	_shape @ sp[(-1)+-1]
  6401  019F64  0EFE               	movlw	-2
  6402  019F66  50E3               	movf	plusw1,w,c
  6403  019F68  6E09               	movwf	(btemp+8)^0,c
  6404  019F6A  6A0A               	clrf	(btemp+9)^0,c
  6405  019F6C  0EE1               	movlw	low spinners@s
  6406  019F6E  2409               	addwf	(btemp+8)^0,w,c
  6407  019F70  6ED9               	movwf	fsr2l,c
  6408  019F72  0E01               	movlw	high spinners@s
  6409  019F74  200A               	addwfc	(btemp+9)^0,w,c
  6410  019F76  6EDA               	movwf	fsr2h,c
  6411  019F78  50DF               	movf	indf2,w,c
  6412  019F7A  260B               	addwf	(btemp+10)^0,f,c
  6413  019F7C  0E00               	movlw	0
  6414  019F7E  220C               	addwfc	(btemp+11)^0,f,c
  6415  019F80  0060  F02F  FFF6   	movff	btemp+10,tblptrl
  6416  019F86  0060  F033  FFF7   	movff	btemp+11,tblptrh
  6417  019F8C                     	if	0	;tblptru may be non-zero
  6418  019F8C                     	endif
  6419  019F8C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6420  019F8C  0E00               	movlw	low (__mediumconst shr (0+16))
  6421  019F8E  6EF8               	movwf	tblptru,c
  6422  019F90                     	endif
  6423                           
  6424                           ;stkvar	_c @ sp[(-1)+0]
  6425  019F90  0008               	tblrd		*
  6426  019F92  0EFF               	movlw	-1
  6427  019F94  006F FFD7 FFE3     	movff	tablat,plusw1
  6428                           
  6429                           ;mbmc.c: 156:  if (++s[shape] >= strlen(spin[shape]))
  6430                           ;stkvar	_shape @ sp[(-1)+-1]
  6431  019F9A  0EFE               	movlw	-2
  6432  019F9C  50E3               	movf	plusw1,w,c
  6433  019F9E  0D14               	mullw	20
  6434  019FA0  0E4B               	movlw	low _spin
  6435  019FA2  6E0B               	movwf	(btemp+10)^0,c
  6436  019FA4  0EFB               	movlw	high _spin
  6437  019FA6  6E0C               	movwf	(btemp+11)^0,c
  6438  019FA8  50F3               	movf	243,w,c
  6439  019FAA  260B               	addwf	(btemp+10)^0,f,c
  6440  019FAC  50F4               	movf	244,w,c
  6441  019FAE  220C               	addwfc	(btemp+11)^0,f,c
  6442  019FB0  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6443  019FB6  0060  F033  FFE6   	movff	btemp+11,postinc1
  6444  019FBC  EC24  F0D6         	call	_strlen	;wreg free
  6445                           
  6446                           ;stkvar	_shape @ sp[(-1)+-1]
  6447  019FC0  0EFE               	movlw	-2
  6448  019FC2  50E3               	movf	plusw1,w,c
  6449  019FC4  6E0B               	movwf	(btemp+10)^0,c
  6450  019FC6  6A0C               	clrf	(btemp+11)^0,c
  6451  019FC8  0EE1               	movlw	low spinners@s
  6452  019FCA  240B               	addwf	(btemp+10)^0,w,c
  6453  019FCC  6ED9               	movwf	fsr2l,c
  6454  019FCE  0E01               	movlw	high spinners@s
  6455  019FD0  200C               	addwfc	(btemp+11)^0,w,c
  6456  019FD2  6EDA               	movwf	fsr2h,c
  6457  019FD4  2ADF               	incf	indf2,f,c
  6458  019FD6  50DF               	movf	indf2,w,c
  6459  019FD8  6E0B               	movwf	(btemp+10)^0,c
  6460  019FDA  6A0C               	clrf	(btemp+11)^0,c
  6461  019FDC  5001               	movf	btemp^0,w,c
  6462  019FDE  5C0B               	subwf	(btemp+10)^0,w,c
  6463  019FE0  5002               	movf	(btemp+1)^0,w,c
  6464  019FE2  580C               	subwfb	(btemp+11)^0,w,c
  6465  019FE4  A0D8               	btfss	status,0,c
  6466  019FE6  D00C               	goto	l11107
  6467                           
  6468                           ;mbmc.c: 157:   s[shape] = 0;
  6469                           ;stkvar	_shape @ sp[(-1)+-1]
  6470  019FE8  0EFE               	movlw	-2
  6471  019FEA  50E3               	movf	plusw1,w,c
  6472  019FEC  6E0B               	movwf	(btemp+10)^0,c
  6473  019FEE  6A0C               	clrf	(btemp+11)^0,c
  6474  019FF0  0EE1               	movlw	low spinners@s
  6475  019FF2  240B               	addwf	(btemp+10)^0,w,c
  6476  019FF4  6ED9               	movwf	fsr2l,c
  6477  019FF6  0E01               	movlw	high spinners@s
  6478  019FF8  200C               	addwfc	(btemp+11)^0,w,c
  6479  019FFA  6EDA               	movwf	fsr2h,c
  6480  019FFC  0E00               	movlw	0
  6481  019FFE  6EDF               	movwf	indf2,c
  6482  01A000                     l11107:
  6483                           
  6484                           ;mbmc.c: 158:  return c;
  6485                           ;stkvar	_c @ sp[(-1)+0]
  6486  01A000  0EFF               	movlw	-1
  6487  01A002  006F FF8C  F001    	movff	plusw1,btemp
  6488                           
  6489                           ; _spinners: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
  6490  01A008  52E5               	movf	postdec1,f,c
  6491  01A00A  52E5               	movf	postdec1,f,c
  6492  01A00C  52E5               	movf	postdec1,f,c
  6493  01A00E  0012               	return		;funcret
  6494  01A010                     __end_of_spinners:
  6495                           	opt callstack 0
  6496                           
  6497 ;; *************** function _set_dac_b *****************
  6498 ;; Defined at:
  6499 ;;		line 280 in file "daq.c"
  6500 ;; Parameters:    Size  Location     Type
  6501 ;;  voltage         4  [STACK] float 
  6502 ;; Auto vars:     Size  Location     Type
  6503 ;;		None
  6504 ;; Return value:  Size  Location     Type
  6505 ;;                  2  [STACK] unsigned short 
  6506 ;; Registers used:
  6507 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  6508 ;; Tracked objects:
  6509 ;;		On entry : 0/0
  6510 ;;		On exit  : 0/0
  6511 ;;		Unchanged: 0/0
  6512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6517 ;;Total ram usage:        0 bytes
  6518 ;; Hardware stack levels used:    1
  6519 ;; Hardware stack levels required when called:   17
  6520 ;; This function calls:
  6521 ;;		_convert_dac_raw
  6522 ;; This function is called by:
  6523 ;;		_main
  6524 ;; This function uses a reentrant model
  6525 ;;
  6526                           
  6527                           	psect	text5
  6528  01BD14                     __ptext5:
  6529                           	opt callstack 0
  6530  01BD14                     _set_dac_b:
  6531                           	opt callstack 13
  6532                           
  6533                           ;daq.c: 280: uint16_t set_dac_b(float voltage);daq.c: 281: {;daq.c: 282:  R.raw_dac[1] =
      +                           convert_dac_raw(voltage);
  6534                           ;stkvar	_voltage @ sp[(0)+-4]
  6535                           
  6536                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6537                           ;incstack = 0
  6538  01BD14  0EFC               	movlw	-4
  6539  01BD16  006F FF8F FFE6     	movff	plusw1,postinc1
  6540  01BD1C  006F FF8F FFE6     	movff	plusw1,postinc1
  6541  01BD22  006F FF8F FFE6     	movff	plusw1,postinc1
  6542  01BD28  006F FF8F FFE6     	movff	plusw1,postinc1
  6543  01BD2E  EC08  F0D0         	call	_convert_dac_raw	;wreg free
  6544  01BD32  0060  F004  F0D1   	movff	btemp,_R+34	;volatile
  6545  01BD38  0060  F008  F0D2   	movff	btemp+1,_R+35	;volatile
  6546                           
  6547                           ; _set_dac_b: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  6548                           
  6549                           ;daq.c: 283:  return R.raw_dac[1];;	Return value of _set_dac_b is never used
  6550  01BD3E  52E5               	movf	postdec1,f,c
  6551  01BD40  52E5               	movf	postdec1,f,c
  6552  01BD42  52E5               	movf	postdec1,f,c
  6553  01BD44  52E5               	movf	postdec1,f,c
  6554  01BD46  0012               	return		;funcret
  6555  01BD48                     __end_of_set_dac_b:
  6556                           	opt callstack 0
  6557                           
  6558 ;; *************** function _set_dac_a *****************
  6559 ;; Defined at:
  6560 ;;		line 274 in file "daq.c"
  6561 ;; Parameters:    Size  Location     Type
  6562 ;;  voltage         4  [STACK] float 
  6563 ;; Auto vars:     Size  Location     Type
  6564 ;;		None
  6565 ;; Return value:  Size  Location     Type
  6566 ;;                  2  [STACK] unsigned short 
  6567 ;; Registers used:
  6568 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  6569 ;; Tracked objects:
  6570 ;;		On entry : 3F/0
  6571 ;;		On exit  : 0/0
  6572 ;;		Unchanged: 0/0
  6573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6578 ;;Total ram usage:        0 bytes
  6579 ;; Hardware stack levels used:    1
  6580 ;; Hardware stack levels required when called:   17
  6581 ;; This function calls:
  6582 ;;		_convert_dac_raw
  6583 ;; This function is called by:
  6584 ;;		_main
  6585 ;; This function uses a reentrant model
  6586 ;;
  6587                           
  6588                           	psect	text6
  6589  01BD48                     __ptext6:
  6590                           	opt callstack 0
  6591  01BD48                     _set_dac_a:
  6592                           	opt callstack 13
  6593                           
  6594                           ;daq.c: 274: uint16_t set_dac_a(float voltage);daq.c: 275: {;daq.c: 276:  R.raw_dac[0] =
      +                           convert_dac_raw(voltage);
  6595                           ;stkvar	_voltage @ sp[(0)+-4]
  6596                           
  6597                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6598                           ;incstack = 0
  6599  01BD48  0EFC               	movlw	-4
  6600  01BD4A  006F FF8F FFE6     	movff	plusw1,postinc1
  6601  01BD50  006F FF8F FFE6     	movff	plusw1,postinc1
  6602  01BD56  006F FF8F FFE6     	movff	plusw1,postinc1
  6603  01BD5C  006F FF8F FFE6     	movff	plusw1,postinc1
  6604  01BD62  EC08  F0D0         	call	_convert_dac_raw	;wreg free
  6605  01BD66  0060  F004  F0CF   	movff	btemp,_R+32	;volatile
  6606  01BD6C  0060  F008  F0D0   	movff	btemp+1,_R+33	;volatile
  6607                           
  6608                           ; _set_dac_a: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  6609                           
  6610                           ;daq.c: 277:  return R.raw_dac[0];;	Return value of _set_dac_a is never used
  6611  01BD72  52E5               	movf	postdec1,f,c
  6612  01BD74  52E5               	movf	postdec1,f,c
  6613  01BD76  52E5               	movf	postdec1,f,c
  6614  01BD78  52E5               	movf	postdec1,f,c
  6615  01BD7A  0012               	return		;funcret
  6616  01BD7C                     __end_of_set_dac_a:
  6617                           	opt callstack 0
  6618                           
  6619 ;; *************** function _convert_dac_raw *****************
  6620 ;; Defined at:
  6621 ;;		line 259 in file "daq.c"
  6622 ;; Parameters:    Size  Location     Type
  6623 ;;  voltage         4  [STACK] float 
  6624 ;; Auto vars:     Size  Location     Type
  6625 ;;		None
  6626 ;; Return value:  Size  Location     Type
  6627 ;;                  2  [STACK] unsigned short 
  6628 ;; Registers used:
  6629 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  6630 ;; Tracked objects:
  6631 ;;		On entry : 0/0
  6632 ;;		On exit  : 0/0
  6633 ;;		Unchanged: 0/0
  6634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6639 ;;Total ram usage:        0 bytes
  6640 ;; Hardware stack levels used:    1
  6641 ;; Hardware stack levels required when called:   16
  6642 ;; This function calls:
  6643 ;;		___fldiv
  6644 ;;		___flge
  6645 ;;		___fltol
  6646 ;; This function is called by:
  6647 ;;		_set_dac_a
  6648 ;;		_set_dac_b
  6649 ;; This function uses a reentrant model
  6650 ;;
  6651                           
  6652                           	psect	text7
  6653  01A010                     __ptext7:
  6654                           	opt callstack 0
  6655  01A010                     _convert_dac_raw:
  6656                           	opt callstack 13
  6657                           
  6658                           ;daq.c: 259: static uint16_t convert_dac_raw(float voltage);daq.c: 260: {;daq.c: 264:  i
      +                          f (voltage < 0.0)
  6659                           ;stkvar	_voltage @ sp[(0)+-4]
  6660                           
  6661                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6662                           ;incstack = 0
  6663  01A010  0EFF               	movlw	-1
  6664  01A012  AEE3               	btfss	plusw1,7,c
  6665  01A014  D018               	goto	l10713
  6666                           
  6667                           ;daq.c: 265:   voltage=0.0;
  6668  01A016  0E00               	movlw	0
  6669  01A018  6E09               	movwf	(btemp+8)^0,c
  6670  01A01A  0E00               	movlw	0
  6671  01A01C  6E0A               	movwf	(btemp+9)^0,c
  6672  01A01E  0E00               	movlw	0
  6673  01A020  6E0B               	movwf	(btemp+10)^0,c
  6674  01A022  0E00               	movlw	0
  6675  01A024  6E0C               	movwf	(btemp+11)^0,c
  6676                           
  6677                           ;stkvar	_voltage @ sp[(0)+-4]
  6678  01A026  0EFC               	movlw	-4
  6679  01A028  0060  F027  FFE3   	movff	btemp+8,plusw1
  6680  01A02E  0EFD               	movlw	-3
  6681  01A030  0060  F02B  FFE3   	movff	btemp+9,plusw1
  6682  01A036  0EFE               	movlw	-2
  6683  01A038  0060  F02F  FFE3   	movff	btemp+10,plusw1
  6684  01A03E  0EFF               	movlw	-1
  6685  01A040  0060  F033  FFE3   	movff	btemp+11,plusw1
  6686  01A046                     l10713:
  6687                           
  6688                           ;daq.c: 266:  if (voltage >10.0)
  6689                           ;stkvar	_voltage @ sp[(0)+-4]
  6690  01A046  0EFC               	movlw	-4
  6691  01A048  006F FF8F FFE6     	movff	plusw1,postinc1
  6692  01A04E  006F FF8F FFE6     	movff	plusw1,postinc1
  6693  01A054  006F FF8F FFE6     	movff	plusw1,postinc1
  6694  01A05A  006F FF8F FFE6     	movff	plusw1,postinc1
  6695  01A060  0E00               	movlw	0
  6696  01A062  6EE6               	movwf	postinc1,c
  6697  01A064  0E00               	movlw	0
  6698  01A066  6EE6               	movwf	postinc1,c
  6699  01A068  0E20               	movlw	32
  6700  01A06A  6EE6               	movwf	postinc1,c
  6701  01A06C  0E41               	movlw	65
  6702  01A06E  6EE6               	movwf	postinc1,c
  6703  01A070  ECFC  F0C8         	call	___flge	;wreg free
  6704  01A074  B001               	btfsc	btemp& (0+255),0,c
  6705  01A076  D018               	goto	l10717
  6706                           
  6707                           ;daq.c: 267:   voltage=10.0;
  6708  01A078  0E00               	movlw	0
  6709  01A07A  6E09               	movwf	(btemp+8)^0,c
  6710  01A07C  0E00               	movlw	0
  6711  01A07E  6E0A               	movwf	(btemp+9)^0,c
  6712  01A080  0E20               	movlw	32
  6713  01A082  6E0B               	movwf	(btemp+10)^0,c
  6714  01A084  0E41               	movlw	65
  6715  01A086  6E0C               	movwf	(btemp+11)^0,c
  6716                           
  6717                           ;stkvar	_voltage @ sp[(0)+-4]
  6718  01A088  0EFC               	movlw	-4
  6719  01A08A  0060  F027  FFE3   	movff	btemp+8,plusw1
  6720  01A090  0EFD               	movlw	-3
  6721  01A092  0060  F02B  FFE3   	movff	btemp+9,plusw1
  6722  01A098  0EFE               	movlw	-2
  6723  01A09A  0060  F02F  FFE3   	movff	btemp+10,plusw1
  6724  01A0A0  0EFF               	movlw	-1
  6725  01A0A2  0060  F033  FFE3   	movff	btemp+11,plusw1
  6726  01A0A8                     l10717:
  6727                           
  6728                           ;daq.c: 271:  return(uint16_t) (voltage / 0.002442);
  6729  01A0A8  0EF6               	movlw	246
  6730  01A0AA  6EE6               	movwf	postinc1,c
  6731  01A0AC  0E09               	movlw	9
  6732  01A0AE  6EE6               	movwf	postinc1,c
  6733  01A0B0  0E20               	movlw	32
  6734  01A0B2  6EE6               	movwf	postinc1,c
  6735  01A0B4  0E3B               	movlw	59
  6736  01A0B6  6EE6               	movwf	postinc1,c
  6737                           
  6738                           ;stkvar	_voltage @ sp[(-4)+-4]
  6739  01A0B8  0EF8               	movlw	-8
  6740  01A0BA  006F FF8F FFE6     	movff	plusw1,postinc1
  6741  01A0C0  006F FF8F FFE6     	movff	plusw1,postinc1
  6742  01A0C6  006F FF8F FFE6     	movff	plusw1,postinc1
  6743  01A0CC  006F FF8F FFE6     	movff	plusw1,postinc1
  6744  01A0D2  ECCA  F0A6         	call	___fldiv	;wreg free
  6745  01A0D6  0060  F007  FFE6   	movff	btemp,postinc1
  6746  01A0DC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6747  01A0E2  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6748  01A0E8  0060  F013  FFE6   	movff	btemp+3,postinc1
  6749  01A0EE  EC43  F0C8         	call	___fltol	;wreg free
  6750                           
  6751                           ; _convert_dac_raw: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          4, argsize = 4, vargsize = 0
  6752  01A0F2  52E5               	movf	postdec1,f,c
  6753  01A0F4  52E5               	movf	postdec1,f,c
  6754  01A0F6  52E5               	movf	postdec1,f,c
  6755  01A0F8  52E5               	movf	postdec1,f,c
  6756  01A0FA  0012               	return		;funcret
  6757  01A0FC                     __end_of_convert_dac_raw:
  6758                           	opt callstack 0
  6759                           
  6760 ;; *************** function _set_dac *****************
  6761 ;; Defined at:
  6762 ;;		line 239 in file "daq.c"
  6763 ;; Parameters:    Size  Location     Type
  6764 ;;		None
  6765 ;; Auto vars:     Size  Location     Type
  6766 ;;		None
  6767 ;; Return value:  Size  Location     Type
  6768 ;;                  1  [STACK] void 
  6769 ;; Registers used:
  6770 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+11
  6771 ;; Tracked objects:
  6772 ;;		On entry : 0/0
  6773 ;;		On exit  : 0/0
  6774 ;;		Unchanged: 0/0
  6775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6779 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6780 ;;Total ram usage:        0 bytes
  6781 ;; Hardware stack levels used:    1
  6782 ;; Hardware stack levels required when called:   16
  6783 ;; This function calls:
  6784 ;;		_SPI1_Exchange8bit
  6785 ;;		_dac_spi_control
  6786 ;; This function is called by:
  6787 ;;		_main
  6788 ;; This function uses a reentrant model
  6789 ;;
  6790                           
  6791                           	psect	text8
  6792  01ABA6                     __ptext8:
  6793                           	opt callstack 0
  6794  01ABA6                     _set_dac:
  6795                           	opt callstack 14
  6796                           
  6797                           ;daq.c: 241:  dac_spi_control(1);
  6798                           
  6799                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6800                           ;incstack = 0
  6801  01ABA6  0E01               	movlw	1
  6802  01ABA8  6EE6               	movwf	postinc1,c
  6803  01ABAA  EC96  F0D8         	call	_dac_spi_control	;wreg free
  6804                           
  6805                           ;daq.c: 242:  R.max5322_cmd.map.dac0 = R.raw_dac[0]&0xff;
  6806  01ABAE  C0CF  F0D3         	movff	_R+32,_R+36	;volatile
  6807                           
  6808                           ;daq.c: 243:  R.max5322_cmd.map.dac1 = (R.raw_dac[0] > 8) &0xf;
  6809  01ABB2  0100               	movlb	0	; () banked
  6810  01ABB4  51D0               	movf	(_R+33)& (0+255),w,b	;volatile
  6811  01ABB6  E104               	bnz	u10381
  6812  01ABB8  0E09               	movlw	9
  6813  01ABBA  5DCF               	subwf	(_R+32)& (0+255),w,b	;volatile
  6814  01ABBC  A0D8               	btfss	status,0,c
  6815  01ABBE  D003               	goto	u10380
  6816  01ABC0                     u10381:
  6817  01ABC0  6A0C               	clrf	(btemp+11)^0,c
  6818  01ABC2  2A0C               	incf	(btemp+11)^0,f,c
  6819  01ABC4  D001               	goto	u10398
  6820  01ABC6                     u10380:
  6821  01ABC6  6A0C               	clrf	(btemp+11)^0,c
  6822  01ABC8                     u10398:
  6823  01ABC8  0E0F               	movlw	15
  6824  01ABCA  160C               	andwf	(btemp+11)^0,f,c
  6825  01ABCC  0100               	movlb	0	; () banked
  6826  01ABCE  51D4               	movf	(_R+37)& (0+255),w,b	;volatile
  6827  01ABD0  180C               	xorwf	(btemp+11)^0,w,c
  6828  01ABD2  0BF0               	andlw	-16
  6829  01ABD4  180C               	xorwf	(btemp+11)^0,w,c
  6830  01ABD6  6FD4               	movwf	(_R+37)& (0+255),b	;volatile
  6831                           
  6832                           ; BSR set to: 0
  6833                           ;daq.c: 244:  R.max5322_cmd.map.cont = 0b0100;
  6834  01ABD8  51D4               	movf	(_R+37)& (0+255),w,b	;volatile
  6835  01ABDA  0B0F               	andlw	-241
  6836  01ABDC  0940               	iorlw	64
  6837  01ABDE  6FD4               	movwf	(_R+37)& (0+255),b	;volatile
  6838                           
  6839                           ; BSR set to: 0
  6840  01ABE0  90BF               	bcf	191,0,c	;volatile
  6841                           
  6842                           ; BSR set to: 0
  6843                           ;daq.c: 246:  SPI1_Exchange8bit(R.max5322_cmd.bd[1]);
  6844  01ABE2  51D4               	movf	(_R+37)& (0+255),w,b	;volatile
  6845  01ABE4  6EE6               	movwf	postinc1,c
  6846  01ABE6  EC82  F0E1         	call	_SPI1_Exchange8bit	;wreg free
  6847                           
  6848                           ; BSR set to: 57
  6849                           ;daq.c: 247:  SPI1_Exchange8bit(R.max5322_cmd.bd[0]);
  6850  01ABEA  0100               	movlb	0	; () banked
  6851  01ABEC  51D3               	movf	(_R+36)& (0+255),w,b	;volatile
  6852  01ABEE  6EE6               	movwf	postinc1,c
  6853  01ABF0  EC82  F0E1         	call	_SPI1_Exchange8bit	;wreg free
  6854                           
  6855                           ; BSR set to: 57
  6856  01ABF4  80BF               	bsf	191,0,c	;volatile
  6857                           
  6858                           ; BSR set to: 57
  6859                           ;daq.c: 249:  R.max5322_cmd.map.dac0 = R.raw_dac[1]&0xff;
  6860  01ABF6  C0D1  F0D3         	movff	_R+34,_R+36	;volatile
  6861                           
  6862                           ; BSR set to: 57
  6863                           ;daq.c: 250:  R.max5322_cmd.map.dac1 = (R.raw_dac[1] > 8) &0xf;
  6864  01ABFA  0100               	movlb	0	; () banked
  6865  01ABFC  51D2               	movf	(_R+35)& (0+255),w,b	;volatile
  6866  01ABFE  E104               	bnz	u10401
  6867  01AC00  0E09               	movlw	9
  6868  01AC02  5DD1               	subwf	(_R+34)& (0+255),w,b	;volatile
  6869  01AC04  A0D8               	btfss	status,0,c
  6870  01AC06  D003               	goto	u10400
  6871  01AC08                     u10401:
  6872  01AC08  6A0C               	clrf	(btemp+11)^0,c
  6873  01AC0A  2A0C               	incf	(btemp+11)^0,f,c
  6874  01AC0C  D001               	goto	u10418
  6875  01AC0E                     u10400:
  6876  01AC0E  6A0C               	clrf	(btemp+11)^0,c
  6877  01AC10                     u10418:
  6878  01AC10  0E0F               	movlw	15
  6879  01AC12  160C               	andwf	(btemp+11)^0,f,c
  6880  01AC14  0100               	movlb	0	; () banked
  6881  01AC16  51D4               	movf	(_R+37)& (0+255),w,b	;volatile
  6882  01AC18  180C               	xorwf	(btemp+11)^0,w,c
  6883  01AC1A  0BF0               	andlw	-16
  6884  01AC1C  180C               	xorwf	(btemp+11)^0,w,c
  6885  01AC1E  6FD4               	movwf	(_R+37)& (0+255),b	;volatile
  6886                           
  6887                           ; BSR set to: 0
  6888                           ;daq.c: 251:  R.max5322_cmd.map.cont = 0b0101;
  6889  01AC20  51D4               	movf	(_R+37)& (0+255),w,b	;volatile
  6890  01AC22  0B0F               	andlw	-241
  6891  01AC24  0950               	iorlw	80
  6892  01AC26  6FD4               	movwf	(_R+37)& (0+255),b	;volatile
  6893                           
  6894                           ; BSR set to: 0
  6895  01AC28  90BF               	bcf	191,0,c	;volatile
  6896                           
  6897                           ; BSR set to: 0
  6898                           ;daq.c: 253:  SPI1_Exchange8bit(R.max5322_cmd.bd[1]);
  6899  01AC2A  51D4               	movf	(_R+37)& (0+255),w,b	;volatile
  6900  01AC2C  6EE6               	movwf	postinc1,c
  6901  01AC2E  EC82  F0E1         	call	_SPI1_Exchange8bit	;wreg free
  6902                           
  6903                           ; BSR set to: 57
  6904                           ;daq.c: 254:  SPI1_Exchange8bit(R.max5322_cmd.bd[0]);
  6905  01AC32  0100               	movlb	0	; () banked
  6906  01AC34  51D3               	movf	(_R+36)& (0+255),w,b	;volatile
  6907  01AC36  6EE6               	movwf	postinc1,c
  6908  01AC38  EC82  F0E1         	call	_SPI1_Exchange8bit	;wreg free
  6909                           
  6910                           ; BSR set to: 57
  6911  01AC3C  80BF               	bsf	191,0,c	;volatile
  6912                           
  6913                           ; BSR set to: 57
  6914                           ;daq.c: 256:  dac_spi_control(0);
  6915  01AC3E  0E00               	movlw	0
  6916  01AC40  6EE6               	movwf	postinc1,c
  6917  01AC42  EC96  F0D8         	call	_dac_spi_control	;wreg free
  6918                           
  6919                           ; _set_dac: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsi
      +                          ze = 0, vargsize = 0
  6920  01AC46  0012               	return		;funcret
  6921  01AC48                     __end_of_set_dac:
  6922                           	opt callstack 0
  6923                           
  6924 ;; *************** function _dac_spi_control *****************
  6925 ;; Defined at:
  6926 ;;		line 194 in file "daq.c"
  6927 ;; Parameters:    Size  Location     Type
  6928 ;;  set             1  [STACK] _Bool 
  6929 ;; Auto vars:     Size  Location     Type
  6930 ;;		None
  6931 ;; Return value:  Size  Location     Type
  6932 ;;                  1  [STACK] void 
  6933 ;; Registers used:
  6934 ;;		wreg, fsr1l, fsr1h, status,2
  6935 ;; Tracked objects:
  6936 ;;		On entry : 0/0
  6937 ;;		On exit  : 0/0
  6938 ;;		Unchanged: 0/0
  6939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6944 ;;Total ram usage:        0 bytes
  6945 ;; Hardware stack levels used:    1
  6946 ;; Hardware stack levels required when called:   15
  6947 ;; This function calls:
  6948 ;;		Nothing
  6949 ;; This function is called by:
  6950 ;;		_set_dac
  6951 ;; This function uses a reentrant model
  6952 ;;
  6953                           
  6954                           	psect	text9
  6955  01B12C                     __ptext9:
  6956                           	opt callstack 0
  6957  01B12C                     _dac_spi_control:
  6958                           	opt callstack 14
  6959                           
  6960                           ;daq.c: 194: void dac_spi_control(_Bool set);daq.c: 195: {;daq.c: 196:  static _Bool ini
      +                          t = 0;;daq.c: 197:  static uint8_t S0, S1, S2, SC, SB;;daq.c: 199:  if (set) {
  6961                           ;stkvar	_set @ sp[(0)+-1]
  6962                           
  6963                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6964                           ;incstack = 0
  6965  01B12C  0EFF               	movlw	-1
  6966  01B12E  50E3               	movf	plusw1,w,c
  6967  01B130  B4D8               	btfsc	status,2,c
  6968  01B132  D01F               	goto	l10705
  6969                           
  6970                           ;daq.c: 200:   SPI1CON0bits.EN = 0;
  6971  01B134  013D               	movlb	61	; () banked
  6972  01B136  9F14               	bcf	20,7,b	;volatile
  6973                           
  6974                           ; BSR set to: 61
  6975                           ;daq.c: 201:   if (!init) {
  6976  01B138  5043               	movf	dac_spi_control@init^0,w,c
  6977  01B13A  A4D8               	btfss	status,2,c
  6978  01B13C  D011               	goto	l10699
  6979                           
  6980                           ; BSR set to: 61
  6981                           ;daq.c: 202:    init = 1;
  6982  01B13E  0E01               	movlw	1
  6983  01B140  6E43               	movwf	dac_spi_control@init^0,c
  6984                           
  6985                           ; BSR set to: 61
  6986                           ;daq.c: 203:    S0 = SPI1CON0;
  6987  01B142  006F F450  F042    	movff	15636,dac_spi_control@S0	;volatile
  6988                           
  6989                           ; BSR set to: 61
  6990                           ;daq.c: 204:    S1 = SPI1CON1;
  6991  01B148  006F F454  F0A8    	movff	15637,dac_spi_control@S1	;volatile
  6992                           
  6993                           ; BSR set to: 61
  6994                           ;daq.c: 205:    S2 = SPI1CON2;
  6995  01B14E  006F F458  F0A7    	movff	15638,dac_spi_control@S2	;volatile
  6996                           
  6997                           ; BSR set to: 61
  6998                           ;daq.c: 206:    SC = SPI1CLK;
  6999  01B154  006F F470  F0A6    	movff	15644,dac_spi_control@SC	;volatile
  7000                           
  7001                           ; BSR set to: 61
  7002                           ;daq.c: 207:    SB = SPI1BAUD;
  7003  01B15A  006F F464  F0A5    	movff	15641,dac_spi_control@SB	;volatile
  7004  01B160                     l10699:
  7005                           
  7006                           ; BSR set to: 61
  7007                           ;daq.c: 213:   SPI1CON1 = 0x00;
  7008  01B160  6B15               	clrf	21,b	;volatile
  7009                           
  7010                           ;daq.c: 215:   SPI1CON2 = 0x03;
  7011  01B162  0E03               	movlw	3
  7012  01B164  6F16               	movwf	22,b	;volatile
  7013                           
  7014                           ;daq.c: 217:   SPI1BAUD = 0x0f;
  7015  01B166  0E0F               	movlw	15
  7016  01B168  6F19               	movwf	25,b	;volatile
  7017                           
  7018                           ; BSR set to: 61
  7019                           ;daq.c: 219:   SPI1CLK = 0x00;
  7020  01B16A  6B1C               	clrf	28,b	;volatile
  7021                           
  7022                           ;daq.c: 221:   SPI1CON0 = 0x83;
  7023  01B16C  0E83               	movlw	131
  7024  01B16E  6F14               	movwf	20,b	;volatile
  7025  01B170  D014               	goto	L3
  7026  01B172                     l10705:
  7027                           
  7028                           ;daq.c: 224:   if (init) {
  7029  01B172  5043               	movf	dac_spi_control@init^0,w,c
  7030  01B174  B4D8               	btfsc	status,2,c
  7031  01B176  D012               	goto	l1855
  7032                           
  7033                           ;daq.c: 228:    SPI1CON0bits.EN = 0;
  7034  01B178  013D               	movlb	61	; () banked
  7035  01B17A  9F14               	bcf	20,7,b	;volatile
  7036                           
  7037                           ;daq.c: 229:    SPI1CON1 = S1;
  7038  01B17C  0060  F2A3  FD15   	movff	dac_spi_control@S1,15637	;volatile
  7039                           
  7040                           ;daq.c: 230:    SPI1CON2 = S2;
  7041  01B182  0060  F29F  FD16   	movff	dac_spi_control@S2,15638	;volatile
  7042                           
  7043                           ;daq.c: 231:    SPI1CLK = SC;
  7044  01B188  0060  F29B  FD1C   	movff	dac_spi_control@SC,15644	;volatile
  7045                           
  7046                           ;daq.c: 232:    SPI1BAUD = SB;
  7047  01B18E  0060  F297  FD19   	movff	dac_spi_control@SB,15641	;volatile
  7048                           
  7049                           ;daq.c: 233:    SPI1CON0 = S0;
  7050  01B194  0060  F10B  FD14   	movff	dac_spi_control@S0,15636	;volatile
  7051  01B19A                     L3:
  7052                           
  7053                           ;daq.c: 234:    SPI1CON0bits.EN = 1;
  7054  01B19A  8F14               	bsf	20,7,b	;volatile
  7055  01B19C                     l1855:
  7056                           
  7057                           ; _dac_spi_control: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          1, argsize = 1, vargsize = 0
  7058  01B19C  52E5               	movf	postdec1,f,c
  7059  01B19E  0012               	return		;funcret
  7060  01B1A0                     __end_of_dac_spi_control:
  7061                           	opt callstack 0
  7062                           
  7063 ;; *************** function _init_port_dma *****************
  7064 ;; Defined at:
  7065 ;;		line 104 in file "eadog.c"
  7066 ;; Parameters:    Size  Location     Type
  7067 ;;		None
  7068 ;; Auto vars:     Size  Location     Type
  7069 ;;		None
  7070 ;; Return value:  Size  Location     Type
  7071 ;;                  1  [STACK] void 
  7072 ;; Registers used:
  7073 ;;		wreg, status,2
  7074 ;; Tracked objects:
  7075 ;;		On entry : 0/1
  7076 ;;		On exit  : 3F/3B
  7077 ;;		Unchanged: 0/0
  7078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7082 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7083 ;;Total ram usage:        0 bytes
  7084 ;; Hardware stack levels used:    1
  7085 ;; Hardware stack levels required when called:   15
  7086 ;; This function calls:
  7087 ;;		Nothing
  7088 ;; This function is called by:
  7089 ;;		_main
  7090 ;; This function uses a reentrant model
  7091 ;;
  7092                           
  7093                           	psect	text10
  7094  01BDB0                     __ptext10:
  7095                           	opt callstack 0
  7096  01BDB0                     _init_port_dma:
  7097                           	opt callstack 15
  7098                           
  7099                           ;eadog.c: 106:  DMA2CON1bits.DMODE = 0;
  7100                           
  7101                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7102                           ;incstack = 0
  7103  01BDB0  0E3F               	movlw	-193
  7104  01BDB2  013B               	movlb	59	; () banked
  7105  01BDB4  17DD               	andwf	221,f,b	;volatile
  7106                           
  7107                           ; BSR set to: 59
  7108                           ;eadog.c: 107:  DMA2CON1bits.DSTP = 0;
  7109  01BDB6  9BDD               	bcf	221,5,b	;volatile
  7110                           
  7111                           ;eadog.c: 108:  DMA2CON1bits.SMODE = 1;
  7112  01BDB8  51DD               	movf	221,w,b	;volatile
  7113  01BDBA  0BF9               	andlw	-7
  7114  01BDBC  0902               	iorlw	2
  7115  01BDBE  6FDD               	movwf	221,b	;volatile
  7116                           
  7117                           ;eadog.c: 109:  DMA2CON1bits.SMR = 0;
  7118  01BDC0  0EE7               	movlw	-25
  7119  01BDC2  17DD               	andwf	221,f,b	;volatile
  7120                           
  7121                           ; BSR set to: 59
  7122                           ;eadog.c: 110:  DMA2CON1bits.SSTP = 1;
  7123  01BDC4  81DD               	bsf	221,0,b	;volatile
  7124                           
  7125                           ; BSR set to: 59
  7126                           ;eadog.c: 111:  DMA2CON0bits.SIRQEN = 0;
  7127  01BDC6  9DDC               	bcf	220,6,b	;volatile
  7128                           
  7129                           ;eadog.c: 112:  DMA2DSA = 0x3DEA;
  7130  01BDC8  0E3D               	movlw	61
  7131  01BDCA  6FD1               	movwf	209,b	;volatile
  7132  01BDCC  0EEA               	movlw	234
  7133  01BDCE  6FD0               	movwf	208,b	;volatile
  7134                           
  7135                           ;eadog.c: 113:  DMA2SSA = (uint32_t) port_data;
  7136  01BDD0  0EFF               	movlw	low _port_data
  7137  01BDD2  6FD9               	movwf	217,b	;volatile
  7138  01BDD4  0E04               	movlw	high _port_data
  7139  01BDD6  6FDA               	movwf	218,b	;volatile
  7140  01BDD8  0E00               	movlw	low (_port_data shr (0+16))
  7141  01BDDA  6FDB               	movwf	219,b	;volatile
  7142                           
  7143                           ; BSR set to: 59
  7144                           ;eadog.c: 114:  DMA2CON0bits.DGO = 0;
  7145  01BDDC  9BDC               	bcf	220,5,b	;volatile
  7146                           
  7147                           ; BSR set to: 59
  7148                           ; _init_port_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  7149  01BDDE  0012               	return		;funcret
  7150  01BDE0                     __end_of_init_port_dma:
  7151                           	opt callstack 0
  7152                           
  7153 ;; *************** function _init_display *****************
  7154 ;; Defined at:
  7155 ;;		line 38 in file "eadog.c"
  7156 ;; Parameters:    Size  Location     Type
  7157 ;;		None
  7158 ;; Auto vars:     Size  Location     Type
  7159 ;;		None
  7160 ;; Return value:  Size  Location     Type
  7161 ;;                  1  [STACK] void 
  7162 ;; Registers used:
  7163 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7164 ;; Tracked objects:
  7165 ;;		On entry : 3F/3B
  7166 ;;		On exit  : 3F/3D
  7167 ;;		Unchanged: 0/0
  7168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7173 ;;Total ram usage:        0 bytes
  7174 ;; Hardware stack levels used:    1
  7175 ;; Hardware stack levels required when called:   17
  7176 ;; This function calls:
  7177 ;;		_ringBufS_init
  7178 ;;		_send_lcd_cmd
  7179 ;;		_send_lcd_cmd_long
  7180 ;;		_send_lcd_data
  7181 ;;		_wdtdelay
  7182 ;; This function is called by:
  7183 ;;		_main
  7184 ;; This function uses a reentrant model
  7185 ;;
  7186                           
  7187                           	psect	text11
  7188  01A0FC                     __ptext11:
  7189                           	opt callstack 0
  7190  01A0FC                     _init_display:
  7191                           	opt callstack 13
  7192                           
  7193                           ;eadog.c: 40:  spi_link.tx1a = &ring_buf1;
  7194                           
  7195                           ; BSR set to: 59
  7196                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7197                           ;incstack = 0
  7198  01A0FC  0E83               	movlw	low _ring_buf1
  7199  01A0FE  0101               	movlb	1	; () banked
  7200  01A100  6FD3               	movwf	(_spi_link+6)& (0+255),b	;volatile
  7201  01A102  0E03               	movlw	high _ring_buf1
  7202  01A104  6FD4               	movwf	(_spi_link+7)& (0+255),b	;volatile
  7203                           
  7204                           ;eadog.c: 41:  spi_link.tx1b = &ring_buf2;
  7205  01A106  0E40               	movlw	low _ring_buf2
  7206  01A108  6FD1               	movwf	(_spi_link+4)& (0+255),b	;volatile
  7207  01A10A  0E03               	movlw	high _ring_buf2
  7208  01A10C  6FD2               	movwf	(_spi_link+5)& (0+255),b	;volatile
  7209                           
  7210                           ; BSR set to: 1
  7211                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1a);
  7212  01A10E  0060  F74F  FFE6   	movff	_spi_link+6,postinc1
  7213  01A114  0060  F753  FFE6   	movff	_spi_link+7,postinc1
  7214  01A11A  ECA7  F0DF         	call	_ringBufS_init	;wreg free
  7215                           
  7216                           ;eadog.c: 43:  ringBufS_init(spi_link.tx1b);
  7217  01A11E  0060  F747  FFE6   	movff	_spi_link+4,postinc1
  7218  01A124  0060  F74B  FFE6   	movff	_spi_link+5,postinc1
  7219  01A12A  ECA7  F0DF         	call	_ringBufS_init	;wreg free
  7220                           
  7221                           ;eadog.c: 45:  LATEbits.LATE2 = 1;
  7222  01A12E  84BE               	bsf	190,2,c	;volatile
  7223                           
  7224                           ;eadog.c: 47:  SPI1CON0bits.EN = 0;
  7225  01A130  013D               	movlb	61	; () banked
  7226  01A132  9F14               	bcf	20,7,b	;volatile
  7227                           
  7228                           ; BSR set to: 61
  7229                           ;eadog.c: 49:  SPI1CON1 = 0x20;
  7230  01A134  0E20               	movlw	32
  7231  01A136  6F15               	movwf	21,b	;volatile
  7232                           
  7233                           ; BSR set to: 61
  7234                           ;eadog.c: 51:  SPI1CON2 = 0x03;
  7235  01A138  0E03               	movlw	3
  7236  01A13A  6F16               	movwf	22,b	;volatile
  7237                           
  7238                           ; BSR set to: 61
  7239                           ;eadog.c: 53:  SPI1BAUD = 0x04;
  7240  01A13C  0E04               	movlw	4
  7241  01A13E  6F19               	movwf	25,b	;volatile
  7242                           
  7243                           ; BSR set to: 61
  7244                           ;eadog.c: 55:  SPI1CLK = 0x02;
  7245  01A140  0E02               	movlw	2
  7246  01A142  6F1C               	movwf	28,b	;volatile
  7247                           
  7248                           ; BSR set to: 61
  7249                           ;eadog.c: 57:  SPI1CON0 = 0x83;
  7250  01A144  0E83               	movlw	131
  7251  01A146  6F14               	movwf	20,b	;volatile
  7252                           
  7253                           ; BSR set to: 61
  7254                           ;eadog.c: 58:  SPI1CON0bits.EN = 1;
  7255  01A148  8F14               	bsf	20,7,b	;volatile
  7256                           
  7257                           ; BSR set to: 61
  7258                           ;eadog.c: 60:  wdtdelay(350000);
  7259  01A14A  0E30               	movlw	48
  7260  01A14C  6EE6               	movwf	postinc1,c
  7261  01A14E  0E57               	movlw	87
  7262  01A150  6EE6               	movwf	postinc1,c
  7263  01A152  0E05               	movlw	5
  7264  01A154  6EE6               	movwf	postinc1,c
  7265  01A156  0E00               	movlw	0
  7266  01A158  6EE6               	movwf	postinc1,c
  7267  01A15A  ECCD  F0DA         	call	_wdtdelay	;wreg free
  7268                           
  7269                           ; BSR set to: 0
  7270                           ;eadog.c: 61:  send_lcd_cmd_long(0x46);
  7271  01A15E  0E46               	movlw	70
  7272  01A160  6EE6               	movwf	postinc1,c
  7273  01A162  EC26  F0DD         	call	_send_lcd_cmd_long	;wreg free
  7274                           
  7275                           ; BSR set to: 0
  7276                           ;eadog.c: 62:  send_lcd_cmd(0x41);
  7277  01A166  0E41               	movlw	65
  7278  01A168  6EE6               	movwf	postinc1,c
  7279  01A16A  EC46  F0DD         	call	_send_lcd_cmd	;wreg free
  7280                           
  7281                           ; BSR set to: 0
  7282                           ;eadog.c: 63:  wdtdelay(80);
  7283  01A16E  0E50               	movlw	80
  7284  01A170  6EE6               	movwf	postinc1,c
  7285  01A172  0E00               	movlw	0
  7286  01A174  6EE6               	movwf	postinc1,c
  7287  01A176  0E00               	movlw	0
  7288  01A178  6EE6               	movwf	postinc1,c
  7289  01A17A  0E00               	movlw	0
  7290  01A17C  6EE6               	movwf	postinc1,c
  7291  01A17E  ECCD  F0DA         	call	_wdtdelay	;wreg free
  7292                           
  7293                           ; BSR set to: 0
  7294                           ;eadog.c: 64:  send_lcd_cmd(0x53);
  7295  01A182  0E53               	movlw	83
  7296  01A184  6EE6               	movwf	postinc1,c
  7297  01A186  EC46  F0DD         	call	_send_lcd_cmd	;wreg free
  7298                           
  7299                           ; BSR set to: 0
  7300                           ;eadog.c: 65:  send_lcd_data(2);
  7301  01A18A  0E02               	movlw	2
  7302  01A18C  6EE6               	movwf	postinc1,c
  7303  01A18E  ECD4  F0E0         	call	_send_lcd_data	;wreg free
  7304                           
  7305                           ; BSR set to: 0
  7306                           ;eadog.c: 66:  wdtdelay(80);
  7307  01A192  0E50               	movlw	80
  7308  01A194  6EE6               	movwf	postinc1,c
  7309  01A196  0E00               	movlw	0
  7310  01A198  6EE6               	movwf	postinc1,c
  7311  01A19A  0E00               	movlw	0
  7312  01A19C  6EE6               	movwf	postinc1,c
  7313  01A19E  0E00               	movlw	0
  7314  01A1A0  6EE6               	movwf	postinc1,c
  7315  01A1A2  ECCD  F0DA         	call	_wdtdelay	;wreg free
  7316                           
  7317                           ; BSR set to: 0
  7318                           ;eadog.c: 67:  send_lcd_cmd_long(0x51);
  7319  01A1A6  0E51               	movlw	81
  7320  01A1A8  6EE6               	movwf	postinc1,c
  7321  01A1AA  EC26  F0DD         	call	_send_lcd_cmd_long	;wreg free
  7322                           
  7323                           ; BSR set to: 0
  7324                           ;eadog.c: 68:  SPI1CON0bits.EN = 0;
  7325  01A1AE  013D               	movlb	61	; () banked
  7326  01A1B0  9F14               	bcf	20,7,b	;volatile
  7327                           
  7328                           ; BSR set to: 61
  7329                           ;eadog.c: 69:  SPI1CON2 = 0x02;
  7330  01A1B2  0E02               	movlw	2
  7331  01A1B4  6F16               	movwf	22,b	;volatile
  7332                           
  7333                           ; BSR set to: 61
  7334                           ;eadog.c: 70:  SPI1CON0bits.EN = 1;
  7335  01A1B6  8F14               	bsf	20,7,b	;volatile
  7336                           
  7337                           ; BSR set to: 61
  7338                           ;eadog.c: 89:  SPI1INTFbits.SPI1TXUIF = 0;
  7339  01A1B8  931A               	bcf	26,1,b	;volatile
  7340                           
  7341                           ; BSR set to: 61
  7342                           ;eadog.c: 90:  DMA1CON1bits.DMODE = 0;
  7343  01A1BA  0E3F               	movlw	-193
  7344  01A1BC  013B               	movlb	59	; () banked
  7345  01A1BE  17FD               	andwf	253,f,b	;volatile
  7346                           
  7347                           ; BSR set to: 59
  7348                           ;eadog.c: 91:  DMA1CON1bits.DSTP = 0;
  7349  01A1C0  9BFD               	bcf	253,5,b	;volatile
  7350                           
  7351                           ; BSR set to: 59
  7352                           ;eadog.c: 92:  DMA1CON1bits.SMODE = 1;
  7353  01A1C2  51FD               	movf	253,w,b	;volatile
  7354  01A1C4  0BF9               	andlw	-7
  7355  01A1C6  0902               	iorlw	2
  7356  01A1C8  6FFD               	movwf	253,b	;volatile
  7357                           
  7358                           ; BSR set to: 59
  7359                           ;eadog.c: 93:  DMA1CON1bits.SMR = 0;
  7360  01A1CA  0EE7               	movlw	-25
  7361  01A1CC  17FD               	andwf	253,f,b	;volatile
  7362                           
  7363                           ; BSR set to: 59
  7364                           ;eadog.c: 94:  DMA1CON1bits.SSTP = 1;
  7365  01A1CE  81FD               	bsf	253,0,b	;volatile
  7366                           
  7367                           ; BSR set to: 59
  7368                           ;eadog.c: 95:  DMA1SSA = (uint32_t) & ring_buf1;
  7369  01A1D0  0E83               	movlw	low _ring_buf1
  7370  01A1D2  6FF9               	movwf	249,b	;volatile
  7371  01A1D4  0E03               	movlw	high _ring_buf1
  7372  01A1D6  6FFA               	movwf	250,b	;volatile
  7373  01A1D8  0E00               	movlw	low (_ring_buf1 shr (0+16))
  7374  01A1DA  6FFB               	movwf	251,b	;volatile
  7375                           
  7376                           ; BSR set to: 59
  7377                           ;eadog.c: 96:  DMA1CON0bits.DGO = 0;
  7378  01A1DC  9BFC               	bcf	252,5,b	;volatile
  7379                           
  7380                           ; BSR set to: 59
  7381                           ;eadog.c: 97:  SPI1INTFbits.SPI1TXUIF = 1;
  7382  01A1DE  013D               	movlb	61	; () banked
  7383  01A1E0  831A               	bsf	26,1,b	;volatile
  7384                           
  7385                           ; BSR set to: 61
  7386                           ;eadog.c: 98:  LATEbits.LATE2 = 0;
  7387  01A1E2  94BE               	bcf	190,2,c	;volatile
  7388                           
  7389                           ; BSR set to: 61
  7390                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  7391  01A1E4  0012               	return		;funcret
  7392  01A1E6                     __end_of_init_display:
  7393                           	opt callstack 0
  7394                           
  7395 ;; *************** function _send_lcd_data *****************
  7396 ;; Defined at:
  7397 ;;		line 123 in file "eadog.c"
  7398 ;; Parameters:    Size  Location     Type
  7399 ;;  data            1  [STACK] const unsigned char 
  7400 ;; Auto vars:     Size  Location     Type
  7401 ;;		None
  7402 ;; Return value:  Size  Location     Type
  7403 ;;                  1  [STACK] void 
  7404 ;; Registers used:
  7405 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7406 ;; Tracked objects:
  7407 ;;		On entry : 3F/0
  7408 ;;		On exit  : 3F/0
  7409 ;;		Unchanged: 0/0
  7410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7415 ;;Total ram usage:        0 bytes
  7416 ;; Hardware stack levels used:    1
  7417 ;; Hardware stack levels required when called:   16
  7418 ;; This function calls:
  7419 ;;		_SPI1_Exchange8bit
  7420 ;;		_wdtdelay
  7421 ;; This function is called by:
  7422 ;;		_init_display
  7423 ;; This function uses a reentrant model
  7424 ;;
  7425                           
  7426                           	psect	text12
  7427  01C1A8                     __ptext12:
  7428                           	opt callstack 0
  7429  01C1A8                     _send_lcd_data:
  7430                           	opt callstack 13
  7431                           
  7432                           ; BSR set to: 61
  7433                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7434                           ;incstack = 0
  7435                           ;eadog.c: 123: static void send_lcd_data(const uint8_t data);eadog.c: 124: {;eadog.c: 12
      +                          5:  do { LATCbits.LATC2 = 0; } while(0);
  7436  01C1A8  94BC               	bcf	188,2,c	;volatile
  7437                           
  7438                           ;eadog.c: 126:  SPI1_Exchange8bit(data);
  7439                           ;stkvar	_data @ sp[(0)+-1]
  7440  01C1AA  0EFF               	movlw	-1
  7441  01C1AC  50E3               	movf	plusw1,w,c
  7442  01C1AE  6EE6               	movwf	postinc1,c
  7443  01C1B0  EC82  F0E1         	call	_SPI1_Exchange8bit	;wreg free
  7444                           
  7445                           ; BSR set to: 57
  7446                           ;eadog.c: 127:  wdtdelay(8);
  7447  01C1B4  0E08               	movlw	8
  7448  01C1B6  6EE6               	movwf	postinc1,c
  7449  01C1B8  0E00               	movlw	0
  7450  01C1BA  6EE6               	movwf	postinc1,c
  7451  01C1BC  0E00               	movlw	0
  7452  01C1BE  6EE6               	movwf	postinc1,c
  7453  01C1C0  0E00               	movlw	0
  7454  01C1C2  6EE6               	movwf	postinc1,c
  7455  01C1C4  ECCD  F0DA         	call	_wdtdelay	;wreg free
  7456                           
  7457                           ; BSR set to: 0
  7458                           ; _send_lcd_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1,
      +                           argsize = 1, vargsize = 0
  7459  01C1C8  52E5               	movf	postdec1,f,c
  7460  01C1CA  0012               	return		;funcret
  7461  01C1CC                     __end_of_send_lcd_data:
  7462                           	opt callstack 0
  7463                           
  7464 ;; *************** function _send_lcd_cmd_long *****************
  7465 ;; Defined at:
  7466 ;;		line 139 in file "eadog.c"
  7467 ;; Parameters:    Size  Location     Type
  7468 ;;  cmd             1  [STACK] const unsigned char 
  7469 ;; Auto vars:     Size  Location     Type
  7470 ;;		None
  7471 ;; Return value:  Size  Location     Type
  7472 ;;                  1  [STACK] void 
  7473 ;; Registers used:
  7474 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7475 ;; Tracked objects:
  7476 ;;		On entry : 3F/0
  7477 ;;		On exit  : 3F/0
  7478 ;;		Unchanged: 0/0
  7479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7483 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7484 ;;Total ram usage:        0 bytes
  7485 ;; Hardware stack levels used:    1
  7486 ;; Hardware stack levels required when called:   16
  7487 ;; This function calls:
  7488 ;;		_SPI1_Exchange8bit
  7489 ;;		_wdtdelay
  7490 ;; This function is called by:
  7491 ;;		_init_display
  7492 ;; This function uses a reentrant model
  7493 ;;
  7494                           
  7495                           	psect	text13
  7496  01BA4C                     __ptext13:
  7497                           	opt callstack 0
  7498  01BA4C                     _send_lcd_cmd_long:
  7499                           	opt callstack 13
  7500                           
  7501                           ; BSR set to: 0
  7502                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7503                           ;incstack = 0
  7504                           ;eadog.c: 139: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 140: {;eadog.c:
      +                           141:  do { LATCbits.LATC2 = 0; } while(0);
  7505  01BA4C  94BC               	bcf	188,2,c	;volatile
  7506                           
  7507                           ;eadog.c: 142:  SPI1_Exchange8bit(0xFE);
  7508  01BA4E  0EFE               	movlw	254
  7509  01BA50  6EE6               	movwf	postinc1,c
  7510  01BA52  EC82  F0E1         	call	_SPI1_Exchange8bit	;wreg free
  7511                           
  7512                           ; BSR set to: 57
  7513                           ;eadog.c: 143:  wdtdelay(8);
  7514  01BA56  0E08               	movlw	8
  7515  01BA58  6EE6               	movwf	postinc1,c
  7516  01BA5A  0E00               	movlw	0
  7517  01BA5C  6EE6               	movwf	postinc1,c
  7518  01BA5E  0E00               	movlw	0
  7519  01BA60  6EE6               	movwf	postinc1,c
  7520  01BA62  0E00               	movlw	0
  7521  01BA64  6EE6               	movwf	postinc1,c
  7522  01BA66  ECCD  F0DA         	call	_wdtdelay	;wreg free
  7523                           
  7524                           ; BSR set to: 0
  7525                           ;eadog.c: 144:  SPI1_Exchange8bit(cmd);
  7526                           ;stkvar	_cmd @ sp[(0)+-1]
  7527  01BA6A  0EFF               	movlw	-1
  7528  01BA6C  50E3               	movf	plusw1,w,c
  7529  01BA6E  6EE6               	movwf	postinc1,c
  7530  01BA70  EC82  F0E1         	call	_SPI1_Exchange8bit	;wreg free
  7531                           
  7532                           ;eadog.c: 145:  wdtdelay(800);
  7533  01BA74  0E20               	movlw	32
  7534  01BA76  6EE6               	movwf	postinc1,c
  7535  01BA78  0E03               	movlw	3
  7536  01BA7A  6EE6               	movwf	postinc1,c
  7537  01BA7C  0E00               	movlw	0
  7538  01BA7E  6EE6               	movwf	postinc1,c
  7539  01BA80  0E00               	movlw	0
  7540  01BA82  6EE6               	movwf	postinc1,c
  7541  01BA84  ECCD  F0DA         	call	_wdtdelay	;wreg free
  7542                           
  7543                           ; BSR set to: 0
  7544                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  7545  01BA88  52E5               	movf	postdec1,f,c
  7546  01BA8A  0012               	return		;funcret
  7547  01BA8C                     __end_of_send_lcd_cmd_long:
  7548                           	opt callstack 0
  7549                           
  7550 ;; *************** function _send_lcd_cmd *****************
  7551 ;; Defined at:
  7552 ;;		line 130 in file "eadog.c"
  7553 ;; Parameters:    Size  Location     Type
  7554 ;;  cmd             1  [STACK] const unsigned char 
  7555 ;; Auto vars:     Size  Location     Type
  7556 ;;		None
  7557 ;; Return value:  Size  Location     Type
  7558 ;;                  1  [STACK] void 
  7559 ;; Registers used:
  7560 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7561 ;; Tracked objects:
  7562 ;;		On entry : 3F/0
  7563 ;;		On exit  : 3F/0
  7564 ;;		Unchanged: 0/0
  7565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7569 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7570 ;;Total ram usage:        0 bytes
  7571 ;; Hardware stack levels used:    1
  7572 ;; Hardware stack levels required when called:   16
  7573 ;; This function calls:
  7574 ;;		_SPI1_Exchange8bit
  7575 ;;		_wdtdelay
  7576 ;; This function is called by:
  7577 ;;		_init_display
  7578 ;; This function uses a reentrant model
  7579 ;;
  7580                           
  7581                           	psect	text14
  7582  01BA8C                     __ptext14:
  7583                           	opt callstack 0
  7584  01BA8C                     _send_lcd_cmd:
  7585                           	opt callstack 13
  7586                           
  7587                           ; BSR set to: 0
  7588                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7589                           ;incstack = 0
  7590                           ;eadog.c: 130: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 131: {;eadog.c: 132:
      +                            do { LATCbits.LATC2 = 0; } while(0);
  7591  01BA8C  94BC               	bcf	188,2,c	;volatile
  7592                           
  7593                           ;eadog.c: 133:  SPI1_Exchange8bit(0xFE);
  7594  01BA8E  0EFE               	movlw	254
  7595  01BA90  6EE6               	movwf	postinc1,c
  7596  01BA92  EC82  F0E1         	call	_SPI1_Exchange8bit	;wreg free
  7597                           
  7598                           ; BSR set to: 57
  7599                           ;eadog.c: 134:  wdtdelay(8);
  7600  01BA96  0E08               	movlw	8
  7601  01BA98  6EE6               	movwf	postinc1,c
  7602  01BA9A  0E00               	movlw	0
  7603  01BA9C  6EE6               	movwf	postinc1,c
  7604  01BA9E  0E00               	movlw	0
  7605  01BAA0  6EE6               	movwf	postinc1,c
  7606  01BAA2  0E00               	movlw	0
  7607  01BAA4  6EE6               	movwf	postinc1,c
  7608  01BAA6  ECCD  F0DA         	call	_wdtdelay	;wreg free
  7609                           
  7610                           ; BSR set to: 0
  7611                           ;eadog.c: 135:  SPI1_Exchange8bit(cmd);
  7612                           ;stkvar	_cmd @ sp[(0)+-1]
  7613  01BAAA  0EFF               	movlw	-1
  7614  01BAAC  50E3               	movf	plusw1,w,c
  7615  01BAAE  6EE6               	movwf	postinc1,c
  7616  01BAB0  EC82  F0E1         	call	_SPI1_Exchange8bit	;wreg free
  7617                           
  7618                           ;eadog.c: 136:  wdtdelay(8);
  7619  01BAB4  0E08               	movlw	8
  7620  01BAB6  6EE6               	movwf	postinc1,c
  7621  01BAB8  0E00               	movlw	0
  7622  01BABA  6EE6               	movwf	postinc1,c
  7623  01BABC  0E00               	movlw	0
  7624  01BABE  6EE6               	movwf	postinc1,c
  7625  01BAC0  0E00               	movlw	0
  7626  01BAC2  6EE6               	movwf	postinc1,c
  7627  01BAC4  ECCD  F0DA         	call	_wdtdelay	;wreg free
  7628                           
  7629                           ; BSR set to: 0
  7630                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  7631  01BAC8  52E5               	movf	postdec1,f,c
  7632  01BACA  0012               	return		;funcret
  7633  01BACC                     __end_of_send_lcd_cmd:
  7634                           	opt callstack 0
  7635                           
  7636 ;; *************** function _SPI1_Exchange8bit *****************
  7637 ;; Defined at:
  7638 ;;		line 79 in file "mcc_generated_files/spi1.c"
  7639 ;; Parameters:    Size  Location     Type
  7640 ;;  data            1  [STACK] unsigned char 
  7641 ;; Auto vars:     Size  Location     Type
  7642 ;;		None
  7643 ;; Return value:  Size  Location     Type
  7644 ;;                  1  [STACK] unsigned char 
  7645 ;; Registers used:
  7646 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  7647 ;; Tracked objects:
  7648 ;;		On entry : 0/0
  7649 ;;		On exit  : 3F/39
  7650 ;;		Unchanged: 0/0
  7651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7656 ;;Total ram usage:        0 bytes
  7657 ;; Hardware stack levels used:    1
  7658 ;; Hardware stack levels required when called:   15
  7659 ;; This function calls:
  7660 ;;		Nothing
  7661 ;; This function is called by:
  7662 ;;		_send_lcd_data
  7663 ;;		_send_lcd_cmd
  7664 ;;		_send_lcd_cmd_long
  7665 ;;		_set_dac
  7666 ;; This function uses a reentrant model
  7667 ;;
  7668                           
  7669                           	psect	text15
  7670  01C304                     __ptext15:
  7671                           	opt callstack 0
  7672  01C304                     _SPI1_Exchange8bit:
  7673                           	opt callstack 14
  7674                           
  7675                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  7676                           
  7677                           ; BSR set to: 0
  7678                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7679                           ;incstack = 0
  7680  01C304  0E01               	movlw	1
  7681  01C306  013D               	movlb	61	; () banked
  7682  01C308  6F12               	movwf	18,b	;volatile
  7683                           
  7684                           ; BSR set to: 61
  7685                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  7686                           ;stkvar	_data @ sp[(0)+-1]
  7687  01C30A  0EFF               	movlw	-1
  7688  01C30C  006F FF8F FD11     	movff	plusw1,15633	;volatile
  7689  01C312                     l807:
  7690                           
  7691                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  7692  01C312  0139               	movlb	57	; () banked
  7693  01C314  A9A2               	btfss	162,4,b	;volatile
  7694  01C316  D7FD               	goto	l807
  7695                           
  7696                           ; BSR set to: 57
  7697                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  7698  01C318  006F F440  F001    	movff	15632,btemp	;volatile
  7699                           
  7700                           ; BSR set to: 57
  7701                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  7702  01C31E  52E5               	movf	postdec1,f,c
  7703  01C320  0012               	return		;funcret
  7704  01C322                     __end_of_SPI1_Exchange8bit:
  7705                           	opt callstack 0
  7706                           
  7707 ;; *************** function _ringBufS_init *****************
  7708 ;; Defined at:
  7709 ;;		line 22 in file "ringbufs.c"
  7710 ;; Parameters:    Size  Location     Type
  7711 ;;  _this           2  [STACK] PTR volatile struct ring
  7712 ;;		 -> ring_buf2(67), ring_buf1(67), 
  7713 ;; Auto vars:     Size  Location     Type
  7714 ;;		None
  7715 ;; Return value:  Size  Location     Type
  7716 ;;                  1  [STACK] void 
  7717 ;; Registers used:
  7718 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7719 ;; Tracked objects:
  7720 ;;		On entry : 0/1
  7721 ;;		On exit  : 0/0
  7722 ;;		Unchanged: 0/0
  7723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7728 ;;Total ram usage:        0 bytes
  7729 ;; Hardware stack levels used:    1
  7730 ;; Hardware stack levels required when called:   16
  7731 ;; This function calls:
  7732 ;;		_memset
  7733 ;; This function is called by:
  7734 ;;		_init_display
  7735 ;; This function uses a reentrant model
  7736 ;;
  7737                           
  7738                           	psect	text16
  7739  01BF4E                     __ptext16:
  7740                           	opt callstack 0
  7741  01BF4E                     _ringBufS_init:
  7742                           	opt callstack 13
  7743                           
  7744                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  7745                           
  7746                           ; BSR set to: 57
  7747                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7748                           ;incstack = 0
  7749  01BF4E  0E43               	movlw	67
  7750  01BF50  6EE6               	movwf	postinc1,c
  7751  01BF52  0E00               	movlw	0
  7752  01BF54  6EE6               	movwf	postinc1,c
  7753  01BF56  0E00               	movlw	0
  7754  01BF58  6EE6               	movwf	postinc1,c
  7755  01BF5A  0E00               	movlw	0
  7756  01BF5C  6EE6               	movwf	postinc1,c
  7757                           
  7758                           ;stkvar	__this @ sp[(-4)+-2]
  7759  01BF5E  0EFA               	movlw	-6
  7760  01BF60  006F FF8F FFE6     	movff	plusw1,postinc1
  7761  01BF66  006F FF8F FFE6     	movff	plusw1,postinc1
  7762  01BF6C  EC40  F0B7         	call	_memset	;wreg free
  7763                           
  7764                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  7765  01BF70  52E5               	movf	postdec1,f,c
  7766  01BF72  52E5               	movf	postdec1,f,c
  7767  01BF74  0012               	return		;funcret
  7768  01BF76                     __end_of_ringBufS_init:
  7769                           	opt callstack 0
  7770                           
  7771 ;; *************** function _init_bsoc *****************
  7772 ;; Defined at:
  7773 ;;		line 109 in file "bsoc.c"
  7774 ;; Parameters:    Size  Location     Type
  7775 ;;		None
  7776 ;; Auto vars:     Size  Location     Type
  7777 ;;		None
  7778 ;; Return value:  Size  Location     Type
  7779 ;;                  1  [STACK] void 
  7780 ;; Registers used:
  7781 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  7782 ;; Tracked objects:
  7783 ;;		On entry : 0/0
  7784 ;;		On exit  : 0/0
  7785 ;;		Unchanged: 0/0
  7786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7791 ;;Total ram usage:        0 bytes
  7792 ;; Hardware stack levels used:    1
  7793 ;; Hardware stack levels required when called:   18
  7794 ;; This function calls:
  7795 ;;		_TMR3_SetInterruptHandler
  7796 ;;		_Volts_to_SOC
  7797 ;;		___fldiv
  7798 ;;		___flmul
  7799 ;;		___fltol
  7800 ;;		___xxtofl
  7801 ;;		_conv_raw_result
  7802 ;; This function is called by:
  7803 ;;		_main
  7804 ;; This function uses a reentrant model
  7805 ;;
  7806                           
  7807                           	psect	text17
  7808  017BF6                     __ptext17:
  7809                           	opt callstack 0
  7810  017BF6                     _init_bsoc:
  7811                           	opt callstack 12
  7812                           
  7813                           ;bsoc.c: 114:  C.soc = Volts_to_SOC((uint32_t) conv_raw_result(V_BAT, CONV) * 1000.0);
  7814                           
  7815                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7816                           ;incstack = 0
  7817  017BF6  0E00               	movlw	0
  7818  017BF8  6EE6               	movwf	postinc1,c
  7819  017BFA  0E00               	movlw	0
  7820  017BFC  6EE6               	movwf	postinc1,c
  7821  017BFE  0E7A               	movlw	122
  7822  017C00  6EE6               	movwf	postinc1,c
  7823  017C02  0E44               	movlw	68
  7824  017C04  6EE6               	movwf	postinc1,c
  7825  017C06  0E00               	movlw	0
  7826  017C08  6EE6               	movwf	postinc1,c
  7827  017C0A  0E04               	movlw	4
  7828  017C0C  6EE6               	movwf	postinc1,c
  7829  017C0E  EC87  F0A9         	call	_conv_raw_result	;wreg free
  7830  017C12  0060  F007  FFE6   	movff	btemp,postinc1
  7831  017C18  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7832  017C1E  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7833  017C24  0060  F013  FFE6   	movff	btemp+3,postinc1
  7834  017C2A  EC43  F0C8         	call	___fltol	;wreg free
  7835  017C2E  0060  F007  FFE6   	movff	btemp,postinc1
  7836  017C34  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7837  017C3A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7838  017C40  0060  F013  FFE6   	movff	btemp+3,postinc1
  7839  017C46  0E00               	movlw	0
  7840  017C48  6EE6               	movwf	postinc1,c
  7841  017C4A  EC57  F0C2         	call	___xxtofl	;wreg free
  7842  017C4E  0060  F007  FFE6   	movff	btemp,postinc1
  7843  017C54  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7844  017C5A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7845  017C60  0060  F013  FFE6   	movff	btemp+3,postinc1
  7846  017C66  ECD7  F09E         	call	___flmul	;wreg free
  7847  017C6A  0060  F007  FFE6   	movff	btemp,postinc1
  7848  017C70  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7849  017C76  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7850  017C7C  0060  F013  FFE6   	movff	btemp+3,postinc1
  7851  017C82  EC43  F0C8         	call	___fltol	;wreg free
  7852  017C86  0060  F007  FFE6   	movff	btemp,postinc1
  7853  017C8C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7854  017C92  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7855  017C98  0060  F013  FFE6   	movff	btemp+3,postinc1
  7856  017C9E  EC71  F0D3         	call	_Volts_to_SOC	;wreg free
  7857  017CA2  0060  F004  F7B5   	movff	btemp,_C+182	;volatile
  7858  017CA8  0060  F008  F7B6   	movff	btemp+1,_C+183	;volatile
  7859                           
  7860                           ;bsoc.c: 115:  C.dynamic_ah = C.bank_ah * (Volts_to_SOC((uint32_t) conv_raw_result(V_BAT
      +                          , CONV) * 1000.0) / 100.0);
  7861  017CAE  EE21  F38B         	lfsr	2,_C+140	;volatile
  7862  017CB2  006F FF7B FFE6     	movff	postinc2,postinc1
  7863  017CB8  006F FF7B FFE6     	movff	postinc2,postinc1
  7864  017CBE  006F FF7B FFE6     	movff	postinc2,postinc1
  7865  017CC4  006F FF7B FFE6     	movff	postinc2,postinc1
  7866  017CCA  0E00               	movlw	0
  7867  017CCC  6EE6               	movwf	postinc1,c
  7868  017CCE  0E00               	movlw	0
  7869  017CD0  6EE6               	movwf	postinc1,c
  7870  017CD2  0EC8               	movlw	200
  7871  017CD4  6EE6               	movwf	postinc1,c
  7872  017CD6  0E42               	movlw	66
  7873  017CD8  6EE6               	movwf	postinc1,c
  7874  017CDA  0E00               	movlw	0
  7875  017CDC  6EE6               	movwf	postinc1,c
  7876  017CDE  0E00               	movlw	0
  7877  017CE0  6EE6               	movwf	postinc1,c
  7878  017CE2  0E7A               	movlw	122
  7879  017CE4  6EE6               	movwf	postinc1,c
  7880  017CE6  0E44               	movlw	68
  7881  017CE8  6EE6               	movwf	postinc1,c
  7882  017CEA  0E00               	movlw	0
  7883  017CEC  6EE6               	movwf	postinc1,c
  7884  017CEE  0E04               	movlw	4
  7885  017CF0  6EE6               	movwf	postinc1,c
  7886  017CF2  EC87  F0A9         	call	_conv_raw_result	;wreg free
  7887  017CF6  0060  F007  FFE6   	movff	btemp,postinc1
  7888  017CFC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7889  017D02  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7890  017D08  0060  F013  FFE6   	movff	btemp+3,postinc1
  7891  017D0E  EC43  F0C8         	call	___fltol	;wreg free
  7892  017D12  0060  F007  FFE6   	movff	btemp,postinc1
  7893  017D18  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7894  017D1E  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7895  017D24  0060  F013  FFE6   	movff	btemp+3,postinc1
  7896  017D2A  0E00               	movlw	0
  7897  017D2C  6EE6               	movwf	postinc1,c
  7898  017D2E  EC57  F0C2         	call	___xxtofl	;wreg free
  7899  017D32  0060  F007  FFE6   	movff	btemp,postinc1
  7900  017D38  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7901  017D3E  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7902  017D44  0060  F013  FFE6   	movff	btemp+3,postinc1
  7903  017D4A  ECD7  F09E         	call	___flmul	;wreg free
  7904  017D4E  0060  F007  FFE6   	movff	btemp,postinc1
  7905  017D54  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7906  017D5A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7907  017D60  0060  F013  FFE6   	movff	btemp+3,postinc1
  7908  017D66  EC43  F0C8         	call	___fltol	;wreg free
  7909  017D6A  0060  F007  FFE6   	movff	btemp,postinc1
  7910  017D70  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7911  017D76  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7912  017D7C  0060  F013  FFE6   	movff	btemp+3,postinc1
  7913  017D82  EC71  F0D3         	call	_Volts_to_SOC	;wreg free
  7914  017D86  0060  F004  F00B   	movff	btemp,btemp+10
  7915  017D8C  0060  F008  F00C   	movff	btemp+1,btemp+11
  7916  017D92  500B               	movf	(btemp+10)^0,w,c
  7917  017D94  6E05               	movwf	(btemp+4)^0,c
  7918  017D96  500C               	movf	(btemp+11)^0,w,c
  7919  017D98  6E06               	movwf	(btemp+5)^0,c
  7920  017D9A  6A07               	clrf	(btemp+6)^0,c
  7921  017D9C  6A08               	clrf	(btemp+7)^0,c
  7922  017D9E  0060  F017  FFE6   	movff	btemp+4,postinc1
  7923  017DA4  0060  F01B  FFE6   	movff	btemp+5,postinc1
  7924  017DAA  0060  F01F  FFE6   	movff	btemp+6,postinc1
  7925  017DB0  0060  F023  FFE6   	movff	btemp+7,postinc1
  7926  017DB6  0E00               	movlw	0
  7927  017DB8  6EE6               	movwf	postinc1,c
  7928  017DBA  EC57  F0C2         	call	___xxtofl	;wreg free
  7929  017DBE  0060  F007  FFE6   	movff	btemp,postinc1
  7930  017DC4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7931  017DCA  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7932  017DD0  0060  F013  FFE6   	movff	btemp+3,postinc1
  7933  017DD6  ECCA  F0A6         	call	___fldiv	;wreg free
  7934  017DDA  0060  F007  FFE6   	movff	btemp,postinc1
  7935  017DE0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7936  017DE6  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7937  017DEC  0060  F013  FFE6   	movff	btemp+3,postinc1
  7938  017DF2  ECD7  F09E         	call	___flmul	;wreg free
  7939  017DF6  0060  F004  F78F   	movff	btemp,_C+144	;volatile
  7940  017DFC  0060  F008  F790   	movff	btemp+1,_C+145	;volatile
  7941  017E02  0060  F00C  F791   	movff	btemp+2,_C+146	;volatile
  7942  017E08  0060  F010  F792   	movff	btemp+3,_C+147	;volatile
  7943                           
  7944                           ;bsoc.c: 116:  C.dynamic_ah_adj = C.dynamic_ah;
  7945  017E0E  EE21  F38F         	lfsr	2,_C+144	;volatile
  7946  017E12  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
  7947  017E18  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
  7948  017E1E  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
  7949  017E24  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
  7950                           
  7951                           ;bsoc.c: 117:  TMR3_SetInterruptHandler(calc_bsoc);
  7952  017E2A  0E78               	movlw	low _calc_bsoc
  7953  017E2C  6EE6               	movwf	postinc1,c
  7954  017E2E  0E33               	movlw	high _calc_bsoc
  7955  017E30  6EE6               	movwf	postinc1,c
  7956  017E32  0E01               	movlw	low (_calc_bsoc shr (0+16))
  7957  017E34  6EE6               	movwf	postinc1,c
  7958  017E36  EC33  F0E0         	call	_TMR3_SetInterruptHandler	;wreg free
  7959                           
  7960                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  7961  017E3A  0012               	return		;funcret
  7962  017E3C                     __end_of_init_bsoc:
  7963                           	opt callstack 0
  7964                           
  7965 ;; *************** function _Volts_to_SOC *****************
  7966 ;; Defined at:
  7967 ;;		line 174 in file "bsoc.c"
  7968 ;; Parameters:    Size  Location     Type
  7969 ;;  cvoltage        4  [STACK] const unsigned long 
  7970 ;; Auto vars:     Size  Location     Type
  7971 ;;  soc             2  [STACK] unsigned short 
  7972 ;;  slot            1  [STACK] unsigned char 
  7973 ;; Return value:  Size  Location     Type
  7974 ;;                  2  [STACK] unsigned short 
  7975 ;; Registers used:
  7976 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  7977 ;; Tracked objects:
  7978 ;;		On entry : 0/0
  7979 ;;		On exit  : 0/0
  7980 ;;		Unchanged: 0/0
  7981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7986 ;;Total ram usage:        0 bytes
  7987 ;; Hardware stack levels used:    1
  7988 ;; Hardware stack levels required when called:   15
  7989 ;; This function calls:
  7990 ;;		Nothing
  7991 ;; This function is called by:
  7992 ;;		_init_bsoc
  7993 ;; This function uses a reentrant model
  7994 ;;
  7995                           
  7996                           	psect	text18
  7997  01A6E2                     __ptext18:
  7998                           	opt callstack 0
  7999  01A6E2                     _Volts_to_SOC:
  8000                           	opt callstack 0
  8001                           
  8002                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8003  01A6E2  52E6               	movf	postinc1,f,c
  8004  01A6E4  52E6               	movf	postinc1,f,c
  8005  01A6E6  52E6               	movf	postinc1,f,c
  8006                           
  8007                           ;bsoc.c: 174: uint16_t Volts_to_SOC(const uint32_t cvoltage);bsoc.c: 175: {;bsoc.c: 176:
      +                            uint8_t slot;;bsoc.c: 177:  uint16_t soc = 0;
  8008                           ;stkvar	_soc @ sp[(-3)+0]
  8009                           
  8010                           ;incstack = 0
  8011  01A6E8  0EFD               	movlw	-3
  8012  01A6EA  6AE3               	clrf	plusw1,c
  8013  01A6EC  0EFE               	movlw	-2
  8014  01A6EE  6AE3               	clrf	plusw1,c
  8015                           
  8016                           ;bsoc.c: 182:  for (slot = 0; slot < 26; slot++) {
  8017                           ;stkvar	_slot @ sp[(-3)+2]
  8018  01A6F0  0EFF               	movlw	-1
  8019  01A6F2  6AE3               	clrf	plusw1,c
  8020  01A6F4                     l10873:
  8021                           
  8022                           ;bsoc.c: 183:   if (cvoltage > BVSOC_TABLE[slot][0]) {
  8023                           ;stkvar	_cvoltage @ sp[(-3)+-4]
  8024                           ;stkvar	_slot @ sp[(-3)+2]
  8025  01A6F4  0EFF               	movlw	-1
  8026  01A6F6  50E3               	movf	plusw1,w,c
  8027  01A6F8  0D08               	mullw	8
  8028  01A6FA  0EEB               	movlw	low _BVSOC_TABLE
  8029  01A6FC  24F3               	addwf	243,w,c
  8030  01A6FE  6EF6               	movwf	tblptrl,c
  8031  01A700  0EF9               	movlw	high _BVSOC_TABLE
  8032  01A702  20F4               	addwfc	244,w,c
  8033  01A704  6EF7               	movwf	tblptrh,c
  8034  01A706                     	if	1	;There are 3 active tblptr bytes
  8035  01A706  6AF8               	clrf	tblptru,c
  8036  01A708  0E00               	movlw	low (__mediumconst shr (0+16))
  8037  01A70A  22F8               	addwfc	tblptru,f,c
  8038  01A70C                     	endif
  8039  01A70C  0EF9               	movlw	-7
  8040  01A70E  50E3               	movf	plusw1,w,c
  8041  01A710  0009               	tblrd		*+
  8042  01A712  5CF5               	subwf	tablat,w,c
  8043  01A714  0EFA               	movlw	-6
  8044  01A716  50E3               	movf	plusw1,w,c
  8045  01A718  0009               	tblrd		*+
  8046  01A71A  58F5               	subwfb	tablat,w,c
  8047  01A71C  0EFB               	movlw	-5
  8048  01A71E  50E3               	movf	plusw1,w,c
  8049  01A720  0009               	tblrd		*+
  8050  01A722  58F5               	subwfb	tablat,w,c
  8051  01A724  0EFC               	movlw	-4
  8052  01A726  50E3               	movf	plusw1,w,c
  8053  01A728  0009               	tblrd		*+
  8054  01A72A  58F5               	subwfb	tablat,w,c
  8055  01A72C  B0D8               	btfsc	status,0,c
  8056  01A72E  D020               	goto	l10877
  8057                           
  8058                           ;bsoc.c: 184:    soc = BVSOC_TABLE[slot][1];
  8059                           ;stkvar	_slot @ sp[(-3)+2]
  8060  01A730  0EFF               	movlw	-1
  8061  01A732  50E3               	movf	plusw1,w,c
  8062  01A734  0D08               	mullw	8
  8063  01A736  0E04               	movlw	4
  8064  01A738  26F3               	addwf	243,f,c
  8065  01A73A  0E00               	movlw	0
  8066  01A73C  22F4               	addwfc	244,f,c
  8067  01A73E  0EEB               	movlw	low _BVSOC_TABLE
  8068  01A740  24F3               	addwf	243,w,c
  8069  01A742  6EF6               	movwf	tblptrl,c
  8070  01A744  0EF9               	movlw	high _BVSOC_TABLE
  8071  01A746  20F4               	addwfc	244,w,c
  8072  01A748  6EF7               	movwf	tblptrh,c
  8073  01A74A                     	if	1	;There are 3 active tblptr bytes
  8074  01A74A  6AF8               	clrf	tblptru,c
  8075  01A74C  0E00               	movlw	low (__mediumconst shr (0+16))
  8076  01A74E  22F8               	addwfc	tblptru,f,c
  8077  01A750                     	endif
  8078  01A750  0009               	tblrd		*+
  8079  01A752  006F FFD4  F00B    	movff	tablat,btemp+10
  8080  01A758  0009               	tblrd		*+
  8081  01A75A  006F FFD4  F00C    	movff	tablat,btemp+11
  8082                           
  8083                           ;stkvar	_soc @ sp[(-3)+0]
  8084  01A760  0EFD               	movlw	-3
  8085  01A762  0060  F02F  FFE3   	movff	btemp+10,plusw1
  8086  01A768  0EFE               	movlw	-2
  8087  01A76A  0060  F033  FFE3   	movff	btemp+11,plusw1
  8088  01A770                     l10877:
  8089                           
  8090                           ;bsoc.c: 186:  }
  8091                           ;stkvar	_slot @ sp[(-3)+2]
  8092  01A770  0EFF               	movlw	-1
  8093  01A772  2AE3               	incf	plusw1,f,c
  8094                           
  8095                           ;stkvar	_slot @ sp[(-3)+2]
  8096  01A774  0EFF               	movlw	-1
  8097  01A776  006F FF8C  F001    	movff	plusw1,btemp
  8098  01A77C  0E19               	movlw	25
  8099  01A77E  6401               	cpfsgt	btemp^0,c
  8100  01A780  D7B9               	goto	l10873
  8101                           
  8102                           ;bsoc.c: 187:  return soc;
  8103                           ;stkvar	_soc @ sp[(-3)+0]
  8104  01A782  0EFD               	movlw	-3
  8105  01A784  006F FF8C  F001    	movff	plusw1,btemp
  8106  01A78A  0EFE               	movlw	-2
  8107  01A78C  006F FF8C  F002    	movff	plusw1,btemp+1
  8108                           
  8109                           ; _Volts_to_SOC: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, 
      +                          argsize = 4, vargsize = 0
  8110  01A792  0EF9               	movlw	249
  8111  01A794  26E1               	addwf	fsr1l,f,c
  8112  01A796  0EFF               	movlw	255
  8113  01A798  22E2               	addwfc	fsr1h,f,c
  8114  01A79A  0012               	return		;funcret
  8115  01A79C                     __end_of_Volts_to_SOC:
  8116                           	opt callstack 0
  8117                           
  8118 ;; *************** function _hid_display *****************
  8119 ;; Defined at:
  8120 ;;		line 17 in file "hid.c"
  8121 ;; Parameters:    Size  Location     Type
  8122 ;;  h               2  [STACK] PTR struct H_data
  8123 ;;		 -> H(7), 
  8124 ;; Auto vars:     Size  Location     Type
  8125 ;;		None
  8126 ;; Return value:  Size  Location     Type
  8127 ;;                  2  [STACK] PTR struct H_data
  8128 ;; Registers used:
  8129 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl, prodh
  8130 ;; Tracked objects:
  8131 ;;		On entry : 3F/39
  8132 ;;		On exit  : 0/0
  8133 ;;		Unchanged: 0/0
  8134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8138 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8139 ;;Total ram usage:        0 bytes
  8140 ;; Hardware stack levels used:    1
  8141 ;; Hardware stack levels required when called:   17
  8142 ;; This function calls:
  8143 ;;		_hid_input
  8144 ;; This function is called by:
  8145 ;;		_main
  8146 ;; This function uses a reentrant model
  8147 ;;
  8148                           
  8149                           	psect	text19
  8150  0186B2                     __ptext19:
  8151                           	opt callstack 0
  8152  0186B2                     _hid_display:
  8153                           	opt callstack 13
  8154                           
  8155                           ;hid.c: 17: H_data* hid_display(H_data* h);hid.c: 18: {;hid.c: 19:  hid_input(h);
  8156                           ;stkvar	_h @ sp[(0)+-2]
  8157                           
  8158                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8159                           ;incstack = 0
  8160  0186B2  0EFE               	movlw	-2
  8161  0186B4  006F FF8F FFE6     	movff	plusw1,postinc1
  8162  0186BA  006F FF8F FFE6     	movff	plusw1,postinc1
  8163  0186C0  EC3F  F0D2         	call	_hid_input	;wreg free
  8164                           
  8165                           ;hid.c: 21:  switch (h->h_state) {
  8166  0186C4  D0C6               	goto	l13259
  8167  0186C6                     l13237:
  8168                           
  8169                           ;hid.c: 23:   h->h_state = H_STATE_DISPLAY;
  8170                           ;stkvar	_h @ sp[(0)+-2]
  8171  0186C6  0EFE               	movlw	-2
  8172  0186C8  006F FF8C  F00B    	movff	plusw1,btemp+10
  8173  0186CE  0EFF               	movlw	-1
  8174  0186D0  006F FF8C  F00C    	movff	plusw1,btemp+11
  8175  0186D6  0E01               	movlw	1
  8176  0186D8  240B               	addwf	(btemp+10)^0,w,c
  8177  0186DA  6ED9               	movwf	fsr2l,c
  8178  0186DC  0E00               	movlw	0
  8179  0186DE  200C               	addwfc	(btemp+11)^0,w,c
  8180  0186E0  6EDA               	movwf	fsr2h,c
  8181  0186E2  0E01               	movlw	1
  8182  0186E4  6EDF               	movwf	indf2,c
  8183                           
  8184                           ;hid.c: 24:   h->hid_display = HID_MAIN;
  8185                           ;stkvar	_h @ sp[(0)+-2]
  8186  0186E6  0EFE               	movlw	-2
  8187  0186E8  006F FF8F FFD9     	movff	plusw1,fsr2l
  8188  0186EE  0EFF               	movlw	-1
  8189  0186F0  006F FF8F FFDA     	movff	plusw1,fsr2h
  8190  0186F6  0E00               	movlw	0
  8191  0186F8  6EDF               	movwf	indf2,c
  8192                           
  8193                           ;hid.c: 25:   h->wait_enter = 1;
  8194                           ;stkvar	_h @ sp[(0)+-2]
  8195  0186FA  0EFE               	movlw	-2
  8196  0186FC  006F FF8C  F00B    	movff	plusw1,btemp+10
  8197  018702  0EFF               	movlw	-1
  8198  018704  006F FF8C  F00C    	movff	plusw1,btemp+11
  8199  01870A  0E04               	movlw	4
  8200  01870C  240B               	addwf	(btemp+10)^0,w,c
  8201  01870E  6ED9               	movwf	fsr2l,c
  8202  018710  0E00               	movlw	0
  8203  018712  200C               	addwfc	(btemp+11)^0,w,c
  8204  018714  6EDA               	movwf	fsr2h,c
  8205  018716  0E01               	movlw	1
  8206  018718  6EDF               	movwf	indf2,c
  8207                           
  8208                           ;hid.c: 26:   h->wait_select = 1;
  8209                           ;stkvar	_h @ sp[(0)+-2]
  8210  01871A  0EFE               	movlw	-2
  8211  01871C  006F FF8C  F00B    	movff	plusw1,btemp+10
  8212  018722  0EFF               	movlw	-1
  8213  018724  006F FF8C  F00C    	movff	plusw1,btemp+11
  8214  01872A  0E02               	movlw	2
  8215  01872C  240B               	addwf	(btemp+10)^0,w,c
  8216  01872E  6ED9               	movwf	fsr2l,c
  8217  018730  0E00               	movlw	0
  8218  018732  200C               	addwfc	(btemp+11)^0,w,c
  8219  018734  6EDA               	movwf	fsr2h,c
  8220  018736  0E01               	movlw	1
  8221  018738  6EDF               	movwf	indf2,c
  8222                           
  8223                           ;hid.c: 27:   h->select_p = SW_OFF;
  8224                           ;stkvar	_h @ sp[(0)+-2]
  8225  01873A  0EFE               	movlw	-2
  8226  01873C  006F FF8C  F00B    	movff	plusw1,btemp+10
  8227  018742  0EFF               	movlw	-1
  8228  018744  006F FF8C  F00C    	movff	plusw1,btemp+11
  8229  01874A  0E03               	movlw	3
  8230  01874C  240B               	addwf	(btemp+10)^0,w,c
  8231  01874E  6ED9               	movwf	fsr2l,c
  8232  018750  0E00               	movlw	0
  8233  018752  200C               	addwfc	(btemp+11)^0,w,c
  8234  018754  6EDA               	movwf	fsr2h,c
  8235  018756  0E00               	movlw	0
  8236  018758  6EDF               	movwf	indf2,c
  8237                           
  8238                           ;hid.c: 28:   h->enter_p = SW_OFF;
  8239                           ;stkvar	_h @ sp[(0)+-2]
  8240  01875A  0EFE               	movlw	-2
  8241  01875C  006F FF8C  F00B    	movff	plusw1,btemp+10
  8242  018762  0EFF               	movlw	-1
  8243  018764  006F FF8C  F00C    	movff	plusw1,btemp+11
  8244  01876A  0E05               	movlw	5
  8245  01876C  240B               	addwf	(btemp+10)^0,w,c
  8246  01876E  6ED9               	movwf	fsr2l,c
  8247  018770  0E00               	movlw	0
  8248  018772  200C               	addwfc	(btemp+11)^0,w,c
  8249  018774  6EDA               	movwf	fsr2h,c
  8250  018776  0E00               	movlw	0
  8251  018778  D06A               	goto	L4
  8252  01877A                     l13249:
  8253                           
  8254                           ;hid.c: 32:   if (!h->wait_select && (h->select_p == SW_OFF)) {
  8255                           ;stkvar	_h @ sp[(0)+-2]
  8256  01877A  0EFE               	movlw	-2
  8257  01877C  006F FF8C  F00B    	movff	plusw1,btemp+10
  8258  018782  0EFF               	movlw	-1
  8259  018784  006F FF8C  F00C    	movff	plusw1,btemp+11
  8260  01878A  0E02               	movlw	2
  8261  01878C  240B               	addwf	(btemp+10)^0,w,c
  8262  01878E  6ED9               	movwf	fsr2l,c
  8263  018790  0E00               	movlw	0
  8264  018792  200C               	addwfc	(btemp+11)^0,w,c
  8265  018794  6EDA               	movwf	fsr2h,c
  8266  018796  50DF               	movf	indf2,w,c
  8267  018798  A4D8               	btfss	status,2,c
  8268  01879A  D076               	goto	l2042
  8269                           
  8270                           ;stkvar	_h @ sp[(0)+-2]
  8271  01879C  0EFE               	movlw	-2
  8272  01879E  006F FF8C  F00B    	movff	plusw1,btemp+10
  8273  0187A4  0EFF               	movlw	-1
  8274  0187A6  006F FF8C  F00C    	movff	plusw1,btemp+11
  8275  0187AC  0E03               	movlw	3
  8276  0187AE  240B               	addwf	(btemp+10)^0,w,c
  8277  0187B0  6ED9               	movwf	fsr2l,c
  8278  0187B2  0E00               	movlw	0
  8279  0187B4  200C               	addwfc	(btemp+11)^0,w,c
  8280  0187B6  6EDA               	movwf	fsr2h,c
  8281  0187B8  50DF               	movf	indf2,w,c
  8282  0187BA  A4D8               	btfss	status,2,c
  8283  0187BC  D065               	goto	l2042
  8284                           
  8285                           ;hid.c: 33:    h->sequence = ++h->sequence & 0x3;
  8286                           ;stkvar	_h @ sp[(0)+-2]
  8287  0187BE  0EFE               	movlw	-2
  8288  0187C0  006F FF8C  F00B    	movff	plusw1,btemp+10
  8289  0187C6  0EFF               	movlw	-1
  8290  0187C8  006F FF8C  F00C    	movff	plusw1,btemp+11
  8291  0187CE  0E06               	movlw	6
  8292  0187D0  240B               	addwf	(btemp+10)^0,w,c
  8293  0187D2  6ED9               	movwf	fsr2l,c
  8294  0187D4  0E00               	movlw	0
  8295  0187D6  200C               	addwfc	(btemp+11)^0,w,c
  8296  0187D8  6EDA               	movwf	fsr2h,c
  8297                           
  8298                           ;stkvar	_h @ sp[(0)+-2]
  8299  0187DA  0EFE               	movlw	-2
  8300  0187DC  006F FF8C  F00B    	movff	plusw1,btemp+10
  8301  0187E2  0EFF               	movlw	-1
  8302  0187E4  006F FF8C  F00C    	movff	plusw1,btemp+11
  8303  0187EA  0E06               	movlw	6
  8304  0187EC  240B               	addwf	(btemp+10)^0,w,c
  8305  0187EE  6EE9               	movwf	fsr0l,c
  8306  0187F0  0E00               	movlw	0
  8307  0187F2  200C               	addwfc	(btemp+11)^0,w,c
  8308  0187F4  6EEA               	movwf	fsr0h,c
  8309  0187F6  2AEF               	incf	indf0,f,c
  8310  0187F8  50EF               	movf	indf0,w,c
  8311  0187FA  0B03               	andlw	3
  8312  0187FC  6EDF               	movwf	indf2,c
  8313                           
  8314                           ;hid.c: 34:    h->hid_display = h->sequence;
  8315                           ;stkvar	_h @ sp[(0)+-2]
  8316  0187FE  0EFE               	movlw	-2
  8317  018800  006F FF8C  F00B    	movff	plusw1,btemp+10
  8318  018806  0EFF               	movlw	-1
  8319  018808  006F FF8C  F00C    	movff	plusw1,btemp+11
  8320  01880E  0E06               	movlw	6
  8321  018810  240B               	addwf	(btemp+10)^0,w,c
  8322  018812  6ED9               	movwf	fsr2l,c
  8323  018814  0E00               	movlw	0
  8324  018816  200C               	addwfc	(btemp+11)^0,w,c
  8325  018818  6EDA               	movwf	fsr2h,c
  8326                           
  8327                           ;stkvar	_h @ sp[(0)+-2]
  8328  01881A  0EFE               	movlw	-2
  8329  01881C  006F FF8F FFE9     	movff	plusw1,fsr0l
  8330  018822  0EFF               	movlw	-1
  8331  018824  006F FF8F FFEA     	movff	plusw1,fsr0h
  8332  01882A  006F FF7F FFEF     	movff	indf2,indf0
  8333                           
  8334                           ;hid.c: 35:    h->wait_select = 1;
  8335                           ;stkvar	_h @ sp[(0)+-2]
  8336  018830  0EFE               	movlw	-2
  8337  018832  006F FF8C  F00B    	movff	plusw1,btemp+10
  8338  018838  0EFF               	movlw	-1
  8339  01883A  006F FF8C  F00C    	movff	plusw1,btemp+11
  8340  018840  0E02               	movlw	2
  8341  018842  240B               	addwf	(btemp+10)^0,w,c
  8342  018844  6ED9               	movwf	fsr2l,c
  8343  018846  0E00               	movlw	0
  8344  018848  200C               	addwfc	(btemp+11)^0,w,c
  8345  01884A  6EDA               	movwf	fsr2h,c
  8346  01884C  0E01               	movlw	1
  8347  01884E                     L4:
  8348  01884E  6EDF               	movwf	indf2,c
  8349  018850  D01B               	goto	l2042
  8350  018852                     l13259:
  8351                           
  8352                           ;stkvar	_h @ sp[(0)+-2]
  8353  018852  0EFE               	movlw	-2
  8354  018854  006F FF8C  F00B    	movff	plusw1,btemp+10
  8355  01885A  0EFF               	movlw	-1
  8356  01885C  006F FF8C  F00C    	movff	plusw1,btemp+11
  8357  018862  0E01               	movlw	1
  8358  018864  240B               	addwf	(btemp+10)^0,w,c
  8359  018866  6ED9               	movwf	fsr2l,c
  8360  018868  0E00               	movlw	0
  8361  01886A  200C               	addwfc	(btemp+11)^0,w,c
  8362  01886C  6EDA               	movwf	fsr2h,c
  8363  01886E  50DF               	movf	indf2,w,c
  8364  018870  6E0B               	movwf	(btemp+10)^0,c
  8365  018872  6A0C               	clrf	(btemp+11)^0,c
  8366                           
  8367                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8368                           ; Switch size 1, requested type "simple"
  8369                           ; Number of cases is 1, Range of values is 0 to 0
  8370                           ; switch strategies available:
  8371                           ; Name         Instructions Cycles
  8372                           ; simple_byte            4     3 (average)
  8373                           ;	Chosen strategy is simple_byte
  8374  018874  500C               	movf	(btemp+11)^0,w,c
  8375  018876  0A00               	xorlw	0	; case 0
  8376  018878  A4D8               	btfss	status,2,c
  8377  01887A  D77F               	goto	l13249
  8378                           
  8379                           ; Switch size 1, requested type "simple"
  8380                           ; Number of cases is 2, Range of values is 0 to 1
  8381                           ; switch strategies available:
  8382                           ; Name         Instructions Cycles
  8383                           ; simple_byte            7     4 (average)
  8384                           ;	Chosen strategy is simple_byte
  8385  01887C  500B               	movf	(btemp+10)^0,w,c
  8386  01887E  0A00               	xorlw	0	; case 0
  8387  018880  B4D8               	btfsc	status,2,c
  8388  018882  D721               	goto	l13237
  8389  018884  0A01               	xorlw	1	; case 1
  8390  018886  D779               	goto	l13249
  8391  018888                     l2042:
  8392                           
  8393                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, a
      +                          rgsize = 2, vargsize = 0
  8394  018888  52E5               	movf	postdec1,f,c
  8395  01888A  52E5               	movf	postdec1,f,c
  8396  01888C  0012               	return		;funcret
  8397  01888E                     __end_of_hid_display:
  8398                           	opt callstack 0
  8399                           
  8400 ;; *************** function _hid_input *****************
  8401 ;; Defined at:
  8402 ;;		line 3 in file "hid.c"
  8403 ;; Parameters:    Size  Location     Type
  8404 ;;  h               2  [STACK] PTR struct H_data
  8405 ;;		 -> H(7), 
  8406 ;; Auto vars:     Size  Location     Type
  8407 ;;		None
  8408 ;; Return value:  Size  Location     Type
  8409 ;;                  2  [STACK] PTR struct H_data
  8410 ;; Registers used:
  8411 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  8412 ;; Tracked objects:
  8413 ;;		On entry : 0/39
  8414 ;;		On exit  : 0/0
  8415 ;;		Unchanged: 0/0
  8416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8421 ;;Total ram usage:        0 bytes
  8422 ;; Hardware stack levels used:    1
  8423 ;; Hardware stack levels required when called:   16
  8424 ;; This function calls:
  8425 ;;		_get_switch
  8426 ;; This function is called by:
  8427 ;;		_hid_display
  8428 ;; This function uses a reentrant model
  8429 ;;
  8430                           
  8431                           	psect	text20
  8432  01A47E                     __ptext20:
  8433                           	opt callstack 0
  8434  01A47E                     _hid_input:
  8435                           	opt callstack 13
  8436                           
  8437                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
  8438                           
  8439                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8440                           ;incstack = 0
  8441  01A47E  0E02               	movlw	2
  8442  01A480  6EE6               	movwf	postinc1,c
  8443  01A482  EC4F  F0DF         	call	_get_switch	;wreg free
  8444  01A486  5001               	movf	btemp^0,w,c
  8445  01A488  B4D8               	btfsc	status,2,c
  8446  01A48A  D02C               	goto	l13077
  8447                           
  8448                           ;hid.c: 6:   h->wait_select = 0;
  8449                           ;stkvar	_h @ sp[(0)+-2]
  8450  01A48C  0EFE               	movlw	-2
  8451  01A48E  006F FF8C  F00B    	movff	plusw1,btemp+10
  8452  01A494  0EFF               	movlw	-1
  8453  01A496  006F FF8C  F00C    	movff	plusw1,btemp+11
  8454  01A49C  0E02               	movlw	2
  8455  01A49E  240B               	addwf	(btemp+10)^0,w,c
  8456  01A4A0  6ED9               	movwf	fsr2l,c
  8457  01A4A2  0E00               	movlw	0
  8458  01A4A4  200C               	addwfc	(btemp+11)^0,w,c
  8459  01A4A6  6EDA               	movwf	fsr2h,c
  8460  01A4A8  0E00               	movlw	0
  8461  01A4AA  6EDF               	movwf	indf2,c
  8462                           
  8463                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
  8464  01A4AC  0E02               	movlw	2
  8465  01A4AE  6EE6               	movwf	postinc1,c
  8466  01A4B0  EC4F  F0DF         	call	_get_switch	;wreg free
  8467  01A4B4  5001               	movf	btemp^0,w,c
  8468  01A4B6  B4D8               	btfsc	status,2,c
  8469  01A4B8  D003               	goto	u12470
  8470  01A4BA  6A0C               	clrf	(btemp+11)^0,c
  8471  01A4BC  2A0C               	incf	(btemp+11)^0,f,c
  8472  01A4BE  D001               	goto	u12488
  8473  01A4C0                     u12470:
  8474  01A4C0  6A0C               	clrf	(btemp+11)^0,c
  8475  01A4C2                     u12488:
  8476                           
  8477                           ;stkvar	_h @ sp[(0)+-2]
  8478  01A4C2  0EFE               	movlw	-2
  8479  01A4C4  006F FF8C  F009    	movff	plusw1,btemp+8
  8480  01A4CA  0EFF               	movlw	-1
  8481  01A4CC  006F FF8C  F00A    	movff	plusw1,btemp+9
  8482  01A4D2  0E03               	movlw	3
  8483  01A4D4  2409               	addwf	(btemp+8)^0,w,c
  8484  01A4D6  6ED9               	movwf	fsr2l,c
  8485  01A4D8  0E00               	movlw	0
  8486  01A4DA  200A               	addwfc	(btemp+9)^0,w,c
  8487  01A4DC  6EDA               	movwf	fsr2h,c
  8488  01A4DE  0060  F033  FFDF   	movff	btemp+11,indf2
  8489  01A4E4                     l13077:
  8490                           
  8491                           ;hid.c: 10:  if (get_switch(SENTER)) {
  8492  01A4E4  0E03               	movlw	3
  8493  01A4E6  6EE6               	movwf	postinc1,c
  8494  01A4E8  EC4F  F0DF         	call	_get_switch	;wreg free
  8495  01A4EC  5001               	movf	btemp^0,w,c
  8496  01A4EE  B4D8               	btfsc	status,2,c
  8497  01A4F0  D02C               	goto	l2033
  8498                           
  8499                           ;hid.c: 11:   h->wait_enter = 0;
  8500                           ;stkvar	_h @ sp[(0)+-2]
  8501  01A4F2  0EFE               	movlw	-2
  8502  01A4F4  006F FF8C  F00B    	movff	plusw1,btemp+10
  8503  01A4FA  0EFF               	movlw	-1
  8504  01A4FC  006F FF8C  F00C    	movff	plusw1,btemp+11
  8505  01A502  0E04               	movlw	4
  8506  01A504  240B               	addwf	(btemp+10)^0,w,c
  8507  01A506  6ED9               	movwf	fsr2l,c
  8508  01A508  0E00               	movlw	0
  8509  01A50A  200C               	addwfc	(btemp+11)^0,w,c
  8510  01A50C  6EDA               	movwf	fsr2h,c
  8511  01A50E  0E00               	movlw	0
  8512  01A510  6EDF               	movwf	indf2,c
  8513                           
  8514                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
  8515  01A512  0E03               	movlw	3
  8516  01A514  6EE6               	movwf	postinc1,c
  8517  01A516  EC4F  F0DF         	call	_get_switch	;wreg free
  8518  01A51A  5001               	movf	btemp^0,w,c
  8519  01A51C  B4D8               	btfsc	status,2,c
  8520  01A51E  D003               	goto	u12500
  8521  01A520  6A0C               	clrf	(btemp+11)^0,c
  8522  01A522  2A0C               	incf	(btemp+11)^0,f,c
  8523  01A524  D001               	goto	u12518
  8524  01A526                     u12500:
  8525  01A526  6A0C               	clrf	(btemp+11)^0,c
  8526  01A528                     u12518:
  8527                           
  8528                           ;stkvar	_h @ sp[(0)+-2]
  8529  01A528  0EFE               	movlw	-2
  8530  01A52A  006F FF8C  F009    	movff	plusw1,btemp+8
  8531  01A530  0EFF               	movlw	-1
  8532  01A532  006F FF8C  F00A    	movff	plusw1,btemp+9
  8533  01A538  0E05               	movlw	5
  8534  01A53A  2409               	addwf	(btemp+8)^0,w,c
  8535  01A53C  6ED9               	movwf	fsr2l,c
  8536  01A53E  0E00               	movlw	0
  8537  01A540  200A               	addwfc	(btemp+9)^0,w,c
  8538  01A542  6EDA               	movwf	fsr2h,c
  8539  01A544  0060  F033  FFDF   	movff	btemp+11,indf2
  8540  01A54A                     l2033:
  8541                           
  8542                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, arg
      +                          size = 2, vargsize = 0
  8543  01A54A  52E5               	movf	postdec1,f,c
  8544  01A54C  52E5               	movf	postdec1,f,c
  8545  01A54E  0012               	return		;funcret
  8546  01A550                     __end_of_hid_input:
  8547                           	opt callstack 0
  8548                           
  8549 ;; *************** function _get_switch *****************
  8550 ;; Defined at:
  8551 ;;		line 18 in file "dio.c"
  8552 ;; Parameters:    Size  Location     Type
  8553 ;;  i               1  [STACK] const unsigned char 
  8554 ;; Auto vars:     Size  Location     Type
  8555 ;;		None
  8556 ;; Return value:  Size  Location     Type
  8557 ;;                  1  [STACK] enum E17021
  8558 ;; Registers used:
  8559 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  8560 ;; Tracked objects:
  8561 ;;		On entry : 0/39
  8562 ;;		On exit  : 0/0
  8563 ;;		Unchanged: 0/0
  8564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8569 ;;Total ram usage:        0 bytes
  8570 ;; Hardware stack levels used:    1
  8571 ;; Hardware stack levels required when called:   15
  8572 ;; This function calls:
  8573 ;;		Nothing
  8574 ;; This function is called by:
  8575 ;;		_main
  8576 ;;		_hid_input
  8577 ;; This function uses a reentrant model
  8578 ;;
  8579                           
  8580                           	psect	text21
  8581  01BE9E                     __ptext21:
  8582                           	opt callstack 0
  8583  01BE9E                     _get_switch:
  8584                           	opt callstack 13
  8585                           
  8586                           ;dio.c: 18: SW_STATES get_switch(const uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 4)
  8587                           ;stkvar	_i @ sp[(0)+-1]
  8588                           
  8589                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8590                           ;incstack = 0
  8591  01BE9E  0EFF               	movlw	-1
  8592  01BEA0  006F FF8C  F001    	movff	plusw1,btemp
  8593  01BEA6  0E03               	movlw	3
  8594  01BEA8  6401               	cpfsgt	btemp^0,c
  8595  01BEAA  D002               	goto	l10095
  8596                           
  8597                           ;dio.c: 21:   return SW_OFF;
  8598  01BEAC  0E00               	movlw	0
  8599  01BEAE  D00A               	goto	L5
  8600  01BEB0                     l10095:
  8601                           
  8602                           ;dio.c: 23:  return S.button[i].sw;
  8603                           ;stkvar	_i @ sp[(0)+-1]
  8604  01BEB0  0EFF               	movlw	-1
  8605  01BEB2  50E3               	movf	plusw1,w,c
  8606  01BEB4  0D05               	mullw	5
  8607  01BEB6  0E54               	movlw	low _S
  8608  01BEB8  24F3               	addwf	243,w,c
  8609  01BEBA  6ED9               	movwf	fsr2l,c
  8610  01BEBC  0E02               	movlw	high _S
  8611  01BEBE  20F4               	addwfc	prodh,w,c
  8612  01BEC0  6EDA               	movwf	fsr2h,c
  8613  01BEC2  50DF               	movf	indf2,w,c
  8614  01BEC4                     L5:
  8615  01BEC4  6E01               	movwf	btemp^0,c
  8616                           
  8617                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  8618  01BEC6  52E5               	movf	postdec1,f,c
  8619  01BEC8  0012               	return		;funcret
  8620  01BECA                     __end_of_get_switch:
  8621                           	opt callstack 0
  8622                           
  8623 ;; *************** function _esr_check *****************
  8624 ;; Defined at:
  8625 ;;		line 196 in file "bsoc.c"
  8626 ;; Parameters:    Size  Location     Type
  8627 ;;  fsm             1  [STACK] const unsigned char 
  8628 ;; Auto vars:     Size  Location     Type
  8629 ;;		None
  8630 ;; Return value:  Size  Location     Type
  8631 ;;                  4  [STACK] float 
  8632 ;; Registers used:
  8633 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  8634 ;; Tracked objects:
  8635 ;;		On entry : 0/0
  8636 ;;		On exit  : 0/0
  8637 ;;		Unchanged: 0/0
  8638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8642 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8643 ;;Total ram usage:        0 bytes
  8644 ;; Hardware stack levels used:    1
  8645 ;; Hardware stack levels required when called:   18
  8646 ;; This function calls:
  8647 ;;		_StartTimer
  8648 ;;		_TimerDone
  8649 ;;		___fldiv
  8650 ;;		___flsub
  8651 ;;		_conv_raw_result
  8652 ;;		_fabsf
  8653 ;;		_set_load_relay_one
  8654 ;;		_set_load_relay_two
  8655 ;;		_update_adc_result
  8656 ;; This function is called by:
  8657 ;;		_main
  8658 ;; This function uses a reentrant model
  8659 ;;
  8660                           
  8661                           	psect	text22
  8662  01716C                     __ptext22:
  8663                           	opt callstack 0
  8664  01716C                     _esr_check:
  8665                           	opt callstack 12
  8666                           
  8667                           ;bsoc.c: 196: float esr_check(const uint8_t fsm);bsoc.c: 197: {;bsoc.c: 198:  static uin
      +                          t8_t esr_state = 0;;bsoc.c: 200:  if (fsm) {
  8668                           ;stkvar	_fsm @ sp[(0)+-1]
  8669                           
  8670                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8671                           ;incstack = 0
  8672  01716C  0EFF               	movlw	-1
  8673  01716E  50E3               	movf	plusw1,w,c
  8674  017170  B4D8               	btfsc	status,2,c
  8675  017172  D149               	goto	l11197
  8676                           
  8677                           ;bsoc.c: 201:   esr_state = 0;
  8678  017174  0100               	movlb	0	; () banked
  8679  017176  6BA4               	clrf	esr_check@esr_state& (0+255),b
  8680                           
  8681                           ; BSR set to: 0
  8682                           ;bsoc.c: 202:   return -10.0;
  8683  017178  0E00               	movlw	0
  8684  01717A  6E01               	movwf	btemp^0,c
  8685  01717C  0E00               	movlw	0
  8686  01717E  6E02               	movwf	(btemp+1)^0,c
  8687  017180  0E20               	movlw	32
  8688  017182  6E03               	movwf	(btemp+2)^0,c
  8689  017184  0EC1               	movlw	193
  8690  017186  D15B               	goto	L6
  8691  017188                     l11129:
  8692                           
  8693                           ; BSR set to: 0
  8694                           ;bsoc.c: 207:   StartTimer(TMR_ESR, 10000);
  8695  017188  0E10               	movlw	16
  8696  01718A  6EE6               	movwf	postinc1,c
  8697  01718C  0E27               	movlw	39
  8698  01718E  6EE6               	movwf	postinc1,c
  8699  017190  0E0C               	movlw	12
  8700  017192  6EE6               	movwf	postinc1,c
  8701  017194  EC66  F0DD         	call	_StartTimer	;wreg free
  8702  017198                     l11131:
  8703                           
  8704                           ;bsoc.c: 208:   esr_state++;
  8705  017198  0100               	movlb	0	; () banked
  8706  01719A  2BA4               	incf	esr_check@esr_state& (0+255),f,b
  8707                           
  8708                           ;bsoc.c: 209:   break;
  8709  01719C  D149               	goto	l11199
  8710  01719E                     l11133:
  8711                           
  8712                           ; BSR set to: 0
  8713                           ;bsoc.c: 214:   set_load_relay_one(0);
  8714  01719E  0E00               	movlw	0
  8715  0171A0  6EE6               	movwf	postinc1,c
  8716  0171A2  EC53  F0E2         	call	_set_load_relay_one	;wreg free
  8717                           
  8718                           ;bsoc.c: 215:   set_load_relay_two(0);
  8719  0171A6  0E00               	movlw	0
  8720  0171A8  6EE6               	movwf	postinc1,c
  8721  0171AA  EC4B  F0E2         	call	_set_load_relay_two	;wreg free
  8722                           
  8723                           ;bsoc.c: 216:   if (TimerDone(TMR_ESR)) {
  8724  0171AE  0E0C               	movlw	12
  8725  0171B0  6EE6               	movwf	postinc1,c
  8726  0171B2  ECBB  F0DF         	call	_TimerDone	;wreg free
  8727  0171B6  5001               	movf	btemp^0,w,c
  8728  0171B8  B4D8               	btfsc	status,2,c
  8729  0171BA  D009               	goto	l11139
  8730                           
  8731                           ;bsoc.c: 217:    StartTimer(TMR_ESR, 10000);
  8732  0171BC  0E10               	movlw	16
  8733  0171BE  6EE6               	movwf	postinc1,c
  8734  0171C0  0E27               	movlw	39
  8735  0171C2  6EE6               	movwf	postinc1,c
  8736  0171C4  0E0C               	movlw	12
  8737  0171C6  6EE6               	movwf	postinc1,c
  8738  0171C8  EC66  F0DD         	call	_StartTimer	;wreg free
  8739                           
  8740                           ;bsoc.c: 218:   } else {
  8741  0171CC  D006               	goto	l11143
  8742  0171CE                     l11139:
  8743                           
  8744                           ;bsoc.c: 219:    return -2.0;
  8745  0171CE  0E00               	movlw	0
  8746  0171D0  6E01               	movwf	btemp^0,c
  8747  0171D2  0E00               	movlw	0
  8748  0171D4  6E02               	movwf	(btemp+1)^0,c
  8749  0171D6  0E00               	movlw	0
  8750  0171D8  D066               	goto	L8
  8751  0171DA                     l11143:
  8752                           
  8753                           ;bsoc.c: 224:   update_adc_result();
  8754  0171DA  ECE5  F0DD         	call	_update_adc_result	;wreg free
  8755                           
  8756                           ;bsoc.c: 225:   C.bv_noload = conv_raw_result(V_BAT, CONV);
  8757  0171DE  0E00               	movlw	0
  8758  0171E0  6EE6               	movwf	postinc1,c
  8759  0171E2  0E04               	movlw	4
  8760  0171E4  6EE6               	movwf	postinc1,c
  8761  0171E6  EC87  F0A9         	call	_conv_raw_result	;wreg free
  8762  0171EA  0060  F004  F815   	movff	btemp,_C+278	;volatile
  8763  0171F0  0060  F008  F816   	movff	btemp+1,_C+279	;volatile
  8764  0171F6  0060  F00C  F817   	movff	btemp+2,_C+280	;volatile
  8765  0171FC  0060  F010  F818   	movff	btemp+3,_C+281	;volatile
  8766  017202  D7CA               	goto	l11131
  8767  017204                     l11149:
  8768                           
  8769                           ; BSR set to: 0
  8770                           ;bsoc.c: 229:   set_load_relay_one(1);
  8771  017204  0E01               	movlw	1
  8772  017206  6EE6               	movwf	postinc1,c
  8773  017208  EC53  F0E2         	call	_set_load_relay_one	;wreg free
  8774                           
  8775                           ;bsoc.c: 230:   if (TimerDone(TMR_ESR)) {
  8776  01720C  0E0C               	movlw	12
  8777  01720E  6EE6               	movwf	postinc1,c
  8778  017210  ECBB  F0DF         	call	_TimerDone	;wreg free
  8779  017214  5001               	movf	btemp^0,w,c
  8780  017216  B4D8               	btfsc	status,2,c
  8781  017218  D009               	goto	l11155
  8782                           
  8783                           ;bsoc.c: 231:    StartTimer(TMR_ESR, 10000);
  8784  01721A  0E10               	movlw	16
  8785  01721C  6EE6               	movwf	postinc1,c
  8786  01721E  0E27               	movlw	39
  8787  017220  6EE6               	movwf	postinc1,c
  8788  017222  0E0C               	movlw	12
  8789  017224  6EE6               	movwf	postinc1,c
  8790  017226  EC66  F0DD         	call	_StartTimer	;wreg free
  8791                           
  8792                           ;bsoc.c: 232:   } else {
  8793  01722A  D006               	goto	l11159
  8794  01722C                     l11155:
  8795                           
  8796                           ;bsoc.c: 233:    return -3.0;
  8797  01722C  0E00               	movlw	0
  8798  01722E  6E01               	movwf	btemp^0,c
  8799  017230  0E00               	movlw	0
  8800  017232  6E02               	movwf	(btemp+1)^0,c
  8801  017234  0E40               	movlw	64
  8802  017236  D037               	goto	L8
  8803  017238                     l11159:
  8804                           
  8805                           ;bsoc.c: 236:   update_adc_result();
  8806  017238  ECE5  F0DD         	call	_update_adc_result	;wreg free
  8807                           
  8808                           ;bsoc.c: 237:   C.bv_one_load = conv_raw_result(V_BAT, CONV);
  8809  01723C  0E00               	movlw	0
  8810  01723E  6EE6               	movwf	postinc1,c
  8811  017240  0E04               	movlw	4
  8812  017242  6EE6               	movwf	postinc1,c
  8813  017244  EC87  F0A9         	call	_conv_raw_result	;wreg free
  8814  017248  0060  F004  F819   	movff	btemp,_C+282	;volatile
  8815  01724E  0060  F008  F81A   	movff	btemp+1,_C+283	;volatile
  8816  017254  0060  F00C  F81B   	movff	btemp+2,_C+284	;volatile
  8817  01725A  0060  F010  F81C   	movff	btemp+3,_C+285	;volatile
  8818                           
  8819                           ;bsoc.c: 238:   C.load_i1 = conv_raw_result(C_BATT, CONV);
  8820  017260  0E00               	movlw	0
  8821  017262  6EE6               	movwf	postinc1,c
  8822  017264  0E00               	movlw	0
  8823  017266  6EE6               	movwf	postinc1,c
  8824  017268  EC87  F0A9         	call	_conv_raw_result	;wreg free
  8825  01726C  0060  F004  F80D   	movff	btemp,_C+270	;volatile
  8826  017272  0060  F008  F80E   	movff	btemp+1,_C+271	;volatile
  8827  017278  0060  F00C  F80F   	movff	btemp+2,_C+272	;volatile
  8828  01727E  0060  F010  F810   	movff	btemp+3,_C+273	;volatile
  8829  017284  D789               	goto	l11131
  8830  017286                     l11167:
  8831                           
  8832                           ; BSR set to: 0
  8833                           ;bsoc.c: 242:   set_load_relay_two(1);
  8834  017286  0E01               	movlw	1
  8835  017288  6EE6               	movwf	postinc1,c
  8836  01728A  EC4B  F0E2         	call	_set_load_relay_two	;wreg free
  8837                           
  8838                           ;bsoc.c: 243:   if (!TimerDone(TMR_ESR))
  8839  01728E  0E0C               	movlw	12
  8840  017290  6EE6               	movwf	postinc1,c
  8841  017292  ECBB  F0DF         	call	_TimerDone	;wreg free
  8842  017296  5001               	movf	btemp^0,w,c
  8843  017298  A4D8               	btfss	status,2,c
  8844  01729A  D008               	goto	l11175
  8845                           
  8846                           ;bsoc.c: 244:    return -4.0;
  8847  01729C  0E00               	movlw	0
  8848  01729E  6E01               	movwf	btemp^0,c
  8849  0172A0  0E00               	movlw	0
  8850  0172A2  6E02               	movwf	(btemp+1)^0,c
  8851  0172A4  0E80               	movlw	128
  8852  0172A6                     L8:
  8853  0172A6  6E03               	movwf	(btemp+2)^0,c
  8854  0172A8  0EC0               	movlw	192
  8855  0172AA  D0C9               	goto	L6
  8856  0172AC                     l11175:
  8857                           
  8858                           ;bsoc.c: 246:   update_adc_result();
  8859  0172AC  ECE5  F0DD         	call	_update_adc_result	;wreg free
  8860                           
  8861                           ;bsoc.c: 247:   C.bv_full_load = conv_raw_result(V_BAT, CONV);
  8862  0172B0  0E00               	movlw	0
  8863  0172B2  6EE6               	movwf	postinc1,c
  8864  0172B4  0E04               	movlw	4
  8865  0172B6  6EE6               	movwf	postinc1,c
  8866  0172B8  EC87  F0A9         	call	_conv_raw_result	;wreg free
  8867  0172BC  0060  F004  F81D   	movff	btemp,_C+286	;volatile
  8868  0172C2  0060  F008  F81E   	movff	btemp+1,_C+287	;volatile
  8869  0172C8  0060  F00C  F81F   	movff	btemp+2,_C+288	;volatile
  8870  0172CE  0060  F010  F820   	movff	btemp+3,_C+289	;volatile
  8871                           
  8872                           ;bsoc.c: 248:   C.load_i2 = conv_raw_result(C_BATT, CONV);
  8873  0172D4  0E00               	movlw	0
  8874  0172D6  6EE6               	movwf	postinc1,c
  8875  0172D8  0E00               	movlw	0
  8876  0172DA  6EE6               	movwf	postinc1,c
  8877  0172DC  EC87  F0A9         	call	_conv_raw_result	;wreg free
  8878  0172E0  0060  F004  F811   	movff	btemp,_C+274	;volatile
  8879  0172E6  0060  F008  F812   	movff	btemp+1,_C+275	;volatile
  8880  0172EC  0060  F00C  F813   	movff	btemp+2,_C+276	;volatile
  8881  0172F2  0060  F010  F814   	movff	btemp+3,_C+277	;volatile
  8882                           
  8883                           ;bsoc.c: 250:   C.esr = fabsf((C.bv_one_load - C.bv_full_load) / (C.load_i1 - C.load_i2)
      +                          );
  8884  0172F8  EE22  F011         	lfsr	2,_C+274	;volatile
  8885  0172FC  006F FF7B FFE6     	movff	postinc2,postinc1
  8886  017302  006F FF7B FFE6     	movff	postinc2,postinc1
  8887  017308  006F FF7B FFE6     	movff	postinc2,postinc1
  8888  01730E  006F FF7B FFE6     	movff	postinc2,postinc1
  8889  017314  EE22  F00D         	lfsr	2,_C+270	;volatile
  8890  017318  006F FF7B FFE6     	movff	postinc2,postinc1
  8891  01731E  006F FF7B FFE6     	movff	postinc2,postinc1
  8892  017324  006F FF7B FFE6     	movff	postinc2,postinc1
  8893  01732A  006F FF7B FFE6     	movff	postinc2,postinc1
  8894  017330  ECC0  F0DC         	call	___flsub	;wreg free
  8895  017334  0060  F007  FFE6   	movff	btemp,postinc1
  8896  01733A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8897  017340  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8898  017346  0060  F013  FFE6   	movff	btemp+3,postinc1
  8899  01734C  EE22  F01D         	lfsr	2,_C+286	;volatile
  8900  017350  006F FF7B FFE6     	movff	postinc2,postinc1
  8901  017356  006F FF7B FFE6     	movff	postinc2,postinc1
  8902  01735C  006F FF7B FFE6     	movff	postinc2,postinc1
  8903  017362  006F FF7B FFE6     	movff	postinc2,postinc1
  8904  017368  EE22  F019         	lfsr	2,_C+282	;volatile
  8905  01736C  006F FF7B FFE6     	movff	postinc2,postinc1
  8906  017372  006F FF7B FFE6     	movff	postinc2,postinc1
  8907  017378  006F FF7B FFE6     	movff	postinc2,postinc1
  8908  01737E  006F FF7B FFE6     	movff	postinc2,postinc1
  8909  017384  ECC0  F0DC         	call	___flsub	;wreg free
  8910  017388  0060  F007  FFE6   	movff	btemp,postinc1
  8911  01738E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8912  017394  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8913  01739A  0060  F013  FFE6   	movff	btemp+3,postinc1
  8914  0173A0  ECCA  F0A6         	call	___fldiv	;wreg free
  8915  0173A4  0060  F007  FFE6   	movff	btemp,postinc1
  8916  0173AA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8917  0173B0  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8918  0173B6  0060  F013  FFE6   	movff	btemp+3,postinc1
  8919  0173BC  EC2A  F0D4         	call	_fabsf	;wreg free
  8920  0173C0  0060  F004  F787   	movff	btemp,_C+136	;volatile
  8921  0173C6  0060  F008  F788   	movff	btemp+1,_C+137	;volatile
  8922  0173CC  0060  F00C  F789   	movff	btemp+2,_C+138	;volatile
  8923  0173D2  0060  F010  F78A   	movff	btemp+3,_C+139	;volatile
  8924                           
  8925                           ;bsoc.c: 251:   set_load_relay_one(0);
  8926  0173D8  0E00               	movlw	0
  8927  0173DA  6EE6               	movwf	postinc1,c
  8928  0173DC  EC53  F0E2         	call	_set_load_relay_one	;wreg free
  8929                           
  8930                           ;bsoc.c: 252:   set_load_relay_two(0);
  8931  0173E0  0E00               	movlw	0
  8932  0173E2  6EE6               	movwf	postinc1,c
  8933  0173E4  EC4B  F0E2         	call	_set_load_relay_two	;wreg free
  8934                           
  8935                           ;bsoc.c: 253:   esr_state = 0;
  8936  0173E8  0100               	movlb	0	; () banked
  8937  0173EA  6BA4               	clrf	esr_check@esr_state& (0+255),b
  8938                           
  8939                           ; BSR set to: 0
  8940                           ;bsoc.c: 254:   return C.esr;
  8941  0173EC  0061  FE1C  F001   	movff	_C+136,btemp	;volatile
  8942  0173F2  0061  FE20  F002   	movff	_C+137,btemp+1	;volatile
  8943  0173F8  0061  FE24  F003   	movff	_C+138,btemp+2	;volatile
  8944  0173FE  0061  FE28  F004   	movff	_C+139,btemp+3	;volatile
  8945  017404  D01D               	goto	l2154
  8946  017406                     l11197:
  8947  017406  0100               	movlb	0	; () banked
  8948  017408  51A4               	movf	esr_check@esr_state& (0+255),w,b
  8949  01740A  6E0B               	movwf	(btemp+10)^0,c
  8950  01740C  6A0C               	clrf	(btemp+11)^0,c
  8951                           
  8952                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8953                           ; Switch size 1, requested type "simple"
  8954                           ; Number of cases is 1, Range of values is 0 to 0
  8955                           ; switch strategies available:
  8956                           ; Name         Instructions Cycles
  8957                           ; simple_byte            4     3 (average)
  8958                           ;	Chosen strategy is simple_byte
  8959  01740E  500C               	movf	(btemp+11)^0,w,c
  8960  017410  0A00               	xorlw	0	; case 0
  8961  017412  A4D8               	btfss	status,2,c
  8962  017414  D00D               	goto	l11199
  8963                           
  8964                           ; BSR set to: 0
  8965                           ; Switch size 1, requested type "simple"
  8966                           ; Number of cases is 4, Range of values is 0 to 3
  8967                           ; switch strategies available:
  8968                           ; Name         Instructions Cycles
  8969                           ; simple_byte           13     7 (average)
  8970                           ;	Chosen strategy is simple_byte
  8971  017416  500B               	movf	(btemp+10)^0,w,c
  8972  017418  0A00               	xorlw	0	; case 0
  8973  01741A  B4D8               	btfsc	status,2,c
  8974  01741C  D6B5               	goto	l11129
  8975  01741E  0A01               	xorlw	1	; case 1
  8976  017420  B4D8               	btfsc	status,2,c
  8977  017422  D6BD               	goto	l11133
  8978  017424  0A03               	xorlw	3	; case 2
  8979  017426  B4D8               	btfsc	status,2,c
  8980  017428  D6ED               	goto	l11149
  8981  01742A  0A01               	xorlw	1	; case 3
  8982  01742C  B4D8               	btfsc	status,2,c
  8983  01742E  D72B               	goto	l11167
  8984  017430                     l11199:
  8985                           
  8986                           ; BSR set to: 0
  8987                           ;bsoc.c: 259:  return -1.0;
  8988  017430  0E00               	movlw	0
  8989  017432  6E01               	movwf	btemp^0,c
  8990  017434  0E00               	movlw	0
  8991  017436  6E02               	movwf	(btemp+1)^0,c
  8992  017438  0E80               	movlw	128
  8993  01743A  6E03               	movwf	(btemp+2)^0,c
  8994  01743C  0EBF               	movlw	191
  8995  01743E                     L6:
  8996  01743E  6E04               	movwf	(btemp+3)^0,c
  8997  017440                     l2154:
  8998                           
  8999                           ; _esr_check: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  9000  017440  52E5               	movf	postdec1,f,c
  9001  017442  0012               	return		;funcret
  9002  017444                     __end_of_esr_check:
  9003                           	opt callstack 0
  9004                           
  9005 ;; *************** function _update_adc_result *****************
  9006 ;; Defined at:
  9007 ;;		line 96 in file "daq.c"
  9008 ;; Parameters:    Size  Location     Type
  9009 ;;		None
  9010 ;; Auto vars:     Size  Location     Type
  9011 ;;		None
  9012 ;; Return value:  Size  Location     Type
  9013 ;;                  1  [STACK] _Bool 
  9014 ;; Registers used:
  9015 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  9016 ;; Tracked objects:
  9017 ;;		On entry : 0/0
  9018 ;;		On exit  : 0/0
  9019 ;;		Unchanged: 0/0
  9020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9025 ;;Total ram usage:        0 bytes
  9026 ;; Hardware stack levels used:    1
  9027 ;; Hardware stack levels required when called:   17
  9028 ;; This function calls:
  9029 ;;		_StartTimer
  9030 ;;		_TimerDone
  9031 ;;		_check_adc_scan
  9032 ;;		_clear_adc_scan
  9033 ;;		_start_adc_scan
  9034 ;; This function is called by:
  9035 ;;		_esr_check
  9036 ;; This function uses a reentrant model
  9037 ;;
  9038                           
  9039                           	psect	text23
  9040  01BBCA                     __ptext23:
  9041                           	opt callstack 0
  9042  01BBCA                     _update_adc_result:
  9043                           	opt callstack 12
  9044                           
  9045                           ;daq.c: 98:  if (R.done) {
  9046                           
  9047                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9048                           ;incstack = 0
  9049  01BBCA  0100               	movlb	0	; () banked
  9050  01BBCC  51E4               	movf	(_R+53)& (0+255),w,b	;volatile
  9051  01BBCE  B4D8               	btfsc	status,2,c
  9052  01BBD0  0012               	return	
  9053                           
  9054                           ; BSR set to: 0
  9055                           ;daq.c: 99:   clear_adc_scan();
  9056  01BBD2  ECB7  F0E2         	call	_clear_adc_scan	;wreg free
  9057                           
  9058                           ; BSR set to: 0
  9059                           ;daq.c: 100:   start_adc_scan();
  9060  01BBD6  ECDC  F0D9         	call	_start_adc_scan	;wreg free
  9061                           
  9062                           ;daq.c: 101:   StartTimer(TMR_ADC, 200);
  9063  01BBDA  0EC8               	movlw	200
  9064  01BBDC  6EE6               	movwf	postinc1,c
  9065  01BBDE  0E00               	movlw	0
  9066  01BBE0  6EE6               	movwf	postinc1,c
  9067  01BBE2  0E01               	movlw	1
  9068  01BBE4  6EE6               	movwf	postinc1,c
  9069  01BBE6  EC66  F0DD         	call	_StartTimer	;wreg free
  9070  01BBEA                     l10675:
  9071  01BBEA  0E01               	movlw	1
  9072  01BBEC  6EE6               	movwf	postinc1,c
  9073  01BBEE  ECBB  F0DF         	call	_TimerDone	;wreg free
  9074  01BBF2  5001               	movf	btemp^0,w,c
  9075  01BBF4  A4D8               	btfss	status,2,c
  9076  01BBF6  0012               	return	
  9077  01BBF8  ECA7  F0E2         	call	_check_adc_scan	;wreg free
  9078  01BBFC  5001               	movf	btemp^0,w,c
  9079  01BBFE  A4D8               	btfss	status,2,c
  9080  01BC00  0012               	return	
  9081  01BC02  D7F3               	goto	l10675
  9082  01BC04                     __end_of_update_adc_result:
  9083                           	opt callstack 0
  9084                           
  9085 ;; *************** function _start_adc_scan *****************
  9086 ;; Defined at:
  9087 ;;		line 57 in file "daq.c"
  9088 ;; Parameters:    Size  Location     Type
  9089 ;;		None
  9090 ;; Auto vars:     Size  Location     Type
  9091 ;;		None
  9092 ;; Return value:  Size  Location     Type
  9093 ;;                  1  [STACK] _Bool 
  9094 ;; Registers used:
  9095 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  9096 ;; Tracked objects:
  9097 ;;		On entry : 0/0
  9098 ;;		On exit  : 1/0
  9099 ;;		Unchanged: 0/0
  9100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9105 ;;Total ram usage:        0 bytes
  9106 ;; Hardware stack levels used:    1
  9107 ;; Hardware stack levels required when called:   16
  9108 ;; This function calls:
  9109 ;;		_ADCC_DischargeSampleCapacitor
  9110 ;;		_ADCC_SetADIInterruptHandler
  9111 ;;		_ADCC_SetADTIInterruptHandler
  9112 ;;		_ADCC_StartConversion
  9113 ;; This function is called by:
  9114 ;;		_main
  9115 ;;		_update_adc_result
  9116 ;; This function uses a reentrant model
  9117 ;;
  9118                           
  9119                           	psect	text24
  9120  01B3B8                     __ptext24:
  9121                           	opt callstack 0
  9122  01B3B8                     _start_adc_scan:
  9123                           	opt callstack 14
  9124                           
  9125                           ;daq.c: 59:  if (R.done)
  9126                           
  9127                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9128                           ;incstack = 0
  9129  01B3B8  0100               	movlb	0	; () banked
  9130  01B3BA  51E4               	movf	(_R+53)& (0+255),w,b	;volatile
  9131  01B3BC  A4D8               	btfss	status,2,c
  9132  01B3BE  0012               	return	
  9133                           
  9134                           ; BSR set to: 0
  9135                           ;daq.c: 62:  R.scan_index = 0;
  9136  01B3C0  6BE1               	clrf	(_R+50)& (0+255),b	;volatile
  9137                           
  9138                           ; BSR set to: 0
  9139                           ;daq.c: 63:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  9140  01B3C2  013A               	movlb	58	; () banked
  9141  01B3C4  5140               	movf	64,w,b	;volatile
  9142  01B3C6  006E F940  F001    	movff	14928,btemp	;volatile
  9143  01B3CC  6A02               	clrf	(btemp+1)^0,c
  9144  01B3CE  0060  F004  F002   	movff	btemp,btemp+1
  9145  01B3D4  6A01               	clrf	btemp^0,c
  9146  01B3D6  2601               	addwf	btemp^0,f,c
  9147  01B3D8  0E00               	movlw	0
  9148  01B3DA  2202               	addwfc	(btemp+1)^0,f,c
  9149  01B3DC  0E77               	movlw	119
  9150  01B3DE  1401               	andwf	btemp^0,w,c
  9151  01B3E0  0100               	movlb	0	; () banked
  9152  01B3E2  6FE2               	movwf	(_R+51)& (0+255),b	;volatile
  9153  01B3E4  0E3C               	movlw	60
  9154  01B3E6  1402               	andwf	(btemp+1)^0,w,c
  9155  01B3E8  6FE3               	movwf	(_R+52)& (0+255),b	;volatile
  9156                           
  9157                           ; BSR set to: 0
  9158                           ;daq.c: 64:  ADCC_SetADIInterruptHandler(adc_int_handler);
  9159  01B3EA  0E96               	movlw	low _adc_int_handler
  9160  01B3EC  6EE6               	movwf	postinc1,c
  9161  01B3EE  0EC5               	movlw	high _adc_int_handler
  9162  01B3F0  6EE6               	movwf	postinc1,c
  9163  01B3F2  0E01               	movlw	low (_adc_int_handler shr (0+16))
  9164  01B3F4  6EE6               	movwf	postinc1,c
  9165  01B3F6  EC83  F0E0         	call	_ADCC_SetADIInterruptHandler	;wreg free
  9166                           
  9167                           ;daq.c: 65:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  9168  01B3FA  0E36               	movlw	low _adc_int_t_handler
  9169  01B3FC  6EE6               	movwf	postinc1,c
  9170  01B3FE  0EB0               	movlw	high _adc_int_t_handler
  9171  01B400  6EE6               	movwf	postinc1,c
  9172  01B402  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  9173  01B404  6EE6               	movwf	postinc1,c
  9174  01B406  EC6F  F0E0         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  9175                           
  9176                           ;daq.c: 66:  ADCC_DischargeSampleCapacitor();
  9177  01B40A  ECA3  F0E2         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  9178                           
  9179                           ; BSR set to: 62
  9180                           ;daq.c: 67:  ADCC_StartConversion(R.scan_index & 0xf);
  9181  01B40E  0100               	movlb	0	; () banked
  9182  01B410  51E1               	movf	(_R+50)& (0+255),w,b	;volatile
  9183  01B412  0B0F               	andlw	15
  9184  01B414  6EE6               	movwf	postinc1,c
  9185  01B416  EC42  F0E2         	call	_ADCC_StartConversion	;wreg free
  9186                           
  9187                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  9188  01B41A  0012               	return		;funcret
  9189  01B41C                     __end_of_start_adc_scan:
  9190                           	opt callstack 0
  9191                           
  9192 ;; *************** function _ADCC_StartConversion *****************
  9193 ;; Defined at:
  9194 ;;		line 128 in file "mcc_generated_files/adcc.c"
  9195 ;; Parameters:    Size  Location     Type
  9196 ;;  channel         1  [STACK] enum E16136
  9197 ;; Auto vars:     Size  Location     Type
  9198 ;;		None
  9199 ;; Return value:  Size  Location     Type
  9200 ;;                  1  [STACK] void 
  9201 ;; Registers used:
  9202 ;;		fsr1l, fsr1h
  9203 ;; Tracked objects:
  9204 ;;		On entry : 3F/0
  9205 ;;		On exit  : 3F/3E
  9206 ;;		Unchanged: 0/0
  9207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9211 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9212 ;;Total ram usage:        0 bytes
  9213 ;; Hardware stack levels used:    1
  9214 ;; Hardware stack levels required when called:   15
  9215 ;; This function calls:
  9216 ;;		Nothing
  9217 ;; This function is called by:
  9218 ;;		_start_adc_scan
  9219 ;;		_adc_int_t_handler
  9220 ;; This function uses a reentrant model
  9221 ;;
  9222                           
  9223                           	psect	text25
  9224  01C484                     __ptext25:
  9225                           	opt callstack 0
  9226  01C484                     _ADCC_StartConversion:
  9227                           	opt callstack 0
  9228                           
  9229                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  9230                           ;stkvar	_channel @ sp[(0)+-1]
  9231                           
  9232                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9233                           ;incstack = 0
  9234 ;; hardware stack exceeded
  9235  01C484  0EFF               	movlw	-1
  9236  01C486  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  9237                           
  9238                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  9239  01C48C  013E               	movlb	62	; () banked
  9240  01C48E  8FF8               	bsf	248,7,b	;volatile
  9241                           
  9242                           ; BSR set to: 62
  9243                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  9244  01C490  81F8               	bsf	248,0,b	;volatile
  9245                           
  9246                           ; BSR set to: 62
  9247                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  9248  01C492  52E5               	movf	postdec1,f,c
  9249  01C494  0012               	return		;funcret
  9250  01C496                     __end_of_ADCC_StartConversion:
  9251                           	opt callstack 0
  9252                           
  9253 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  9254 ;; Defined at:
  9255 ;;		line 189 in file "mcc_generated_files/adcc.c"
  9256 ;; Parameters:    Size  Location     Type
  9257 ;;		None
  9258 ;; Auto vars:     Size  Location     Type
  9259 ;;		None
  9260 ;; Return value:  Size  Location     Type
  9261 ;;                  1  [STACK] void 
  9262 ;; Registers used:
  9263 ;;		wreg, status,2
  9264 ;; Tracked objects:
  9265 ;;		On entry : 0/0
  9266 ;;		On exit  : 3F/3E
  9267 ;;		Unchanged: 0/0
  9268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9272 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9273 ;;Total ram usage:        0 bytes
  9274 ;; Hardware stack levels used:    1
  9275 ;; Hardware stack levels required when called:   15
  9276 ;; This function calls:
  9277 ;;		Nothing
  9278 ;; This function is called by:
  9279 ;;		_start_adc_scan
  9280 ;;		_adc_int_t_handler
  9281 ;; This function uses a reentrant model
  9282 ;;
  9283                           
  9284                           	psect	text26
  9285  01C546                     __ptext26:
  9286                           	opt callstack 0
  9287  01C546                     _ADCC_DischargeSampleCapacitor:
  9288                           	opt callstack 0
  9289                           
  9290                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
  9291                           
  9292                           ; BSR set to: 62
  9293                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9294                           ;incstack = 0
  9295 ;; hardware stack exceeded
  9296  01C546  0E3B               	movlw	59
  9297  01C548  013E               	movlb	62	; () banked
  9298  01C54A  6FF1               	movwf	241,b	;volatile
  9299                           
  9300                           ; BSR set to: 62
  9301                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
  9302  01C54C  0012               	return		;funcret
  9303  01C54E                     __end_of_ADCC_DischargeSampleCapacitor:
  9304                           	opt callstack 0
  9305                           
  9306 ;; *************** function _clear_adc_scan *****************
  9307 ;; Defined at:
  9308 ;;		line 88 in file "daq.c"
  9309 ;; Parameters:    Size  Location     Type
  9310 ;;		None
  9311 ;; Auto vars:     Size  Location     Type
  9312 ;;		None
  9313 ;; Return value:  Size  Location     Type
  9314 ;;                  1  [STACK] void 
  9315 ;; Registers used:
  9316 ;;		None
  9317 ;; Tracked objects:
  9318 ;;		On entry : 0/0
  9319 ;;		On exit  : 3F/0
  9320 ;;		Unchanged: 0/0
  9321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9325 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9326 ;;Total ram usage:        0 bytes
  9327 ;; Hardware stack levels used:    1
  9328 ;; Hardware stack levels required when called:   15
  9329 ;; This function calls:
  9330 ;;		Nothing
  9331 ;; This function is called by:
  9332 ;;		_main
  9333 ;;		_update_adc_result
  9334 ;; This function uses a reentrant model
  9335 ;;
  9336                           
  9337                           	psect	text27
  9338  01C56E                     __ptext27:
  9339                           	opt callstack 0
  9340  01C56E                     _clear_adc_scan:
  9341                           	opt callstack 13
  9342                           
  9343                           ;daq.c: 90:  R.done = 0;
  9344                           
  9345                           ; BSR set to: 62
  9346                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9347                           ;incstack = 0
  9348  01C56E  0100               	movlb	0	; () banked
  9349  01C570  6BE4               	clrf	(_R+53)& (0+255),b	;volatile
  9350                           
  9351                           ; BSR set to: 0
  9352                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  9353  01C572  0012               	return		;funcret
  9354  01C574                     __end_of_clear_adc_scan:
  9355                           	opt callstack 0
  9356                           
  9357 ;; *************** function _check_adc_scan *****************
  9358 ;; Defined at:
  9359 ;;		line 80 in file "daq.c"
  9360 ;; Parameters:    Size  Location     Type
  9361 ;;		None
  9362 ;; Auto vars:     Size  Location     Type
  9363 ;;		None
  9364 ;; Return value:  Size  Location     Type
  9365 ;;                  1  [STACK] _Bool 
  9366 ;; Registers used:
  9367 ;;		btemp
  9368 ;; Tracked objects:
  9369 ;;		On entry : 0/1
  9370 ;;		On exit  : 0/0
  9371 ;;		Unchanged: 0/0
  9372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9377 ;;Total ram usage:        0 bytes
  9378 ;; Hardware stack levels used:    1
  9379 ;; Hardware stack levels required when called:   15
  9380 ;; This function calls:
  9381 ;;		Nothing
  9382 ;; This function is called by:
  9383 ;;		_main
  9384 ;;		_update_adc_result
  9385 ;; This function uses a reentrant model
  9386 ;;
  9387                           
  9388                           	psect	text28
  9389  01C54E                     __ptext28:
  9390                           	opt callstack 0
  9391  01C54E                     _check_adc_scan:
  9392                           	opt callstack 13
  9393                           
  9394                           ;daq.c: 82:  return R.done;
  9395                           
  9396                           ; BSR set to: 0
  9397                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9398                           ;incstack = 0
  9399  01C54E  0060  F390  F001   	movff	_R+53,btemp	;volatile
  9400                           
  9401                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  9402  01C554  0012               	return		;funcret
  9403  01C556                     __end_of_check_adc_scan:
  9404                           	opt callstack 0
  9405                           
  9406 ;; *************** function _set_load_relay_two *****************
  9407 ;; Defined at:
  9408 ;;		line 130 in file "mbmc.c"
  9409 ;; Parameters:    Size  Location     Type
  9410 ;;  mode            1  [STACK] const _Bool 
  9411 ;; Auto vars:     Size  Location     Type
  9412 ;;		None
  9413 ;; Return value:  Size  Location     Type
  9414 ;;                  1  [STACK] void 
  9415 ;; Registers used:
  9416 ;;		wreg, fsr1l, fsr1h
  9417 ;; Tracked objects:
  9418 ;;		On entry : 0/0
  9419 ;;		On exit  : 0/0
  9420 ;;		Unchanged: 0/0
  9421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9426 ;;Total ram usage:        0 bytes
  9427 ;; Hardware stack levels used:    1
  9428 ;; Hardware stack levels required when called:   15
  9429 ;; This function calls:
  9430 ;;		Nothing
  9431 ;; This function is called by:
  9432 ;;		_main
  9433 ;;		_esr_check
  9434 ;; This function uses a reentrant model
  9435 ;;
  9436                           
  9437                           	psect	text29
  9438  01C496                     __ptext29:
  9439                           	opt callstack 0
  9440  01C496                     _set_load_relay_two:
  9441                           	opt callstack 15
  9442                           
  9443                           ;mbmc.c: 130: void set_load_relay_two(const _Bool mode);mbmc.c: 131: {;mbmc.c: 132:  LAT
      +                          Dbits.LATD5 = mode;
  9444                           ;stkvar	_mode @ sp[(0)+-1]
  9445                           
  9446                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9447                           ;incstack = 0
  9448  01C496  0EFF               	movlw	-1
  9449  01C498  B0E3               	btfsc	plusw1,0,c
  9450  01C49A  D002               	bra	u9585
  9451  01C49C  9ABD               	bcf	189,5,c	;volatile
  9452  01C49E  D001               	bra	u9586
  9453  01C4A0                     u9585:
  9454  01C4A0  8ABD               	bsf	189,5,c	;volatile
  9455  01C4A2                     u9586:
  9456                           
  9457                           ; _set_load_relay_two: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  9458  01C4A2  52E5               	movf	postdec1,f,c
  9459  01C4A4  0012               	return		;funcret
  9460  01C4A6                     __end_of_set_load_relay_two:
  9461                           	opt callstack 0
  9462                           
  9463 ;; *************** function _set_load_relay_one *****************
  9464 ;; Defined at:
  9465 ;;		line 125 in file "mbmc.c"
  9466 ;; Parameters:    Size  Location     Type
  9467 ;;  mode            1  [STACK] const _Bool 
  9468 ;; Auto vars:     Size  Location     Type
  9469 ;;		None
  9470 ;; Return value:  Size  Location     Type
  9471 ;;                  1  [STACK] void 
  9472 ;; Registers used:
  9473 ;;		wreg, fsr1l, fsr1h
  9474 ;; Tracked objects:
  9475 ;;		On entry : 0/0
  9476 ;;		On exit  : 0/0
  9477 ;;		Unchanged: 0/0
  9478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9482 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9483 ;;Total ram usage:        0 bytes
  9484 ;; Hardware stack levels used:    1
  9485 ;; Hardware stack levels required when called:   15
  9486 ;; This function calls:
  9487 ;;		Nothing
  9488 ;; This function is called by:
  9489 ;;		_main
  9490 ;;		_esr_check
  9491 ;; This function uses a reentrant model
  9492 ;;
  9493                           
  9494                           	psect	text30
  9495  01C4A6                     __ptext30:
  9496                           	opt callstack 0
  9497  01C4A6                     _set_load_relay_one:
  9498                           	opt callstack 15
  9499                           
  9500                           ;mbmc.c: 125: void set_load_relay_one(const _Bool mode);mbmc.c: 126: {;mbmc.c: 127:  LAT
      +                          Dbits.LATD4 = mode;
  9501                           ;stkvar	_mode @ sp[(0)+-1]
  9502                           
  9503                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9504                           ;incstack = 0
  9505  01C4A6  0EFF               	movlw	-1
  9506  01C4A8  B0E3               	btfsc	plusw1,0,c
  9507  01C4AA  D002               	bra	u9575
  9508  01C4AC  98BD               	bcf	189,4,c	;volatile
  9509  01C4AE  D001               	bra	u9576
  9510  01C4B0                     u9575:
  9511  01C4B0  88BD               	bsf	189,4,c	;volatile
  9512  01C4B2                     u9576:
  9513                           
  9514                           ; _set_load_relay_one: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  9515  01C4B2  52E5               	movf	postdec1,f,c
  9516  01C4B4  0012               	return		;funcret
  9517  01C4B6                     __end_of_set_load_relay_one:
  9518                           	opt callstack 0
  9519                           
  9520 ;; *************** function _eaDogM_WriteCommand *****************
  9521 ;; Defined at:
  9522 ;;		line 385 in file "eadog.c"
  9523 ;; Parameters:    Size  Location     Type
  9524 ;;  cmd             1  [STACK] const unsigned char 
  9525 ;; Auto vars:     Size  Location     Type
  9526 ;;		None
  9527 ;; Return value:  Size  Location     Type
  9528 ;;                  1  [STACK] void 
  9529 ;; Registers used:
  9530 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9531 ;; Tracked objects:
  9532 ;;		On entry : 3F/3D
  9533 ;;		On exit  : 3F/0
  9534 ;;		Unchanged: 0/0
  9535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9539 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9540 ;;Total ram usage:        0 bytes
  9541 ;; Hardware stack levels used:    1
  9542 ;; Hardware stack levels required when called:   26
  9543 ;; This function calls:
  9544 ;;		_send_lcd_cmd_dma
  9545 ;; This function is called by:
  9546 ;;		_main
  9547 ;; This function uses a reentrant model
  9548 ;;
  9549                           
  9550                           	psect	text31
  9551  01C4D6                     __ptext31:
  9552                           	opt callstack 0
  9553  01C4D6                     _eaDogM_WriteCommand:
  9554                           	opt callstack 4
  9555                           
  9556                           ;eadog.c: 385: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 386: {;eadog.c: 387:
      +                            send_lcd_cmd_dma(cmd);
  9557                           ;stkvar	_cmd @ sp[(0)+-1]
  9558                           
  9559                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9560                           ;incstack = 0
  9561  01C4D6  0EFF               	movlw	-1
  9562  01C4D8  50E3               	movf	plusw1,w,c
  9563  01C4DA  6EE6               	movwf	postinc1,c
  9564  01C4DC  EC91  F0E1         	call	_send_lcd_cmd_dma	;wreg free
  9565                           
  9566                           ; BSR set to: 0
  9567                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  9568  01C4E0  52E5               	movf	postdec1,f,c
  9569  01C4E2  0012               	return		;funcret
  9570  01C4E4                     __end_of_eaDogM_WriteCommand:
  9571                           	opt callstack 0
  9572                           
  9573 ;; *************** function _convert_adc_data *****************
  9574 ;; Defined at:
  9575 ;;		line 51 in file "mbmc.c"
  9576 ;; Parameters:    Size  Location     Type
  9577 ;;		None
  9578 ;; Auto vars:     Size  Location     Type
  9579 ;;  i               1  [STACK] unsigned char 
  9580 ;; Return value:  Size  Location     Type
  9581 ;;                  1  [STACK] void 
  9582 ;; Registers used:
  9583 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  9584 ;; Tracked objects:
  9585 ;;		On entry : 0/1
  9586 ;;		On exit  : 0/0
  9587 ;;		Unchanged: 0/0
  9588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9592 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9593 ;;Total ram usage:        0 bytes
  9594 ;; Hardware stack levels used:    1
  9595 ;; Hardware stack levels required when called:   18
  9596 ;; This function calls:
  9597 ;;		_conv_raw_result
  9598 ;;		_lp_filter
  9599 ;; This function is called by:
  9600 ;;		_main
  9601 ;; This function uses a reentrant model
  9602 ;;
  9603                           
  9604                           	psect	text32
  9605  01A79C                     __ptext32:
  9606                           	opt callstack 0
  9607  01A79C                     _convert_adc_data:
  9608                           	opt callstack 0
  9609                           
  9610                           ; BSR set to: 0
  9611                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9612  01A79C  52E6               	movf	postinc1,f,c
  9613                           
  9614                           ;mbmc.c: 53:  uint8_t i = 0;
  9615                           ;stkvar	_i @ sp[(-1)+0]
  9616                           
  9617                           ;incstack = 0
  9618  01A79E  0EFF               	movlw	-1
  9619  01A7A0  6AE3               	clrf	plusw1,c
  9620  01A7A2                     l11211:
  9621                           
  9622                           ;mbmc.c: 56:   if (V.calib) {
  9623  01A7A2  0101               	movlb	1	; () banked
  9624  01A7A4  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
  9625  01A7A6  B4D8               	btfsc	status,2,c
  9626  01A7A8  D01B               	goto	l11215
  9627                           
  9628                           ; BSR set to: 1
  9629                           ;mbmc.c: 57:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
  9630  01A7AA  0E01               	movlw	1
  9631  01A7AC  6EE6               	movwf	postinc1,c
  9632                           
  9633                           ;stkvar	_i @ sp[(-2)+0]
  9634  01A7AE  0EFE               	movlw	-2
  9635  01A7B0  50E3               	movf	plusw1,w,c
  9636  01A7B2  6EE6               	movwf	postinc1,c
  9637  01A7B4  0E01               	movlw	1
  9638  01A7B6  6EE6               	movwf	postinc1,c
  9639                           
  9640                           ;stkvar	_i @ sp[(-4)+0]
  9641  01A7B8  0EFC               	movlw	-4
  9642  01A7BA  50E3               	movf	plusw1,w,c
  9643  01A7BC  6EE6               	movwf	postinc1,c
  9644  01A7BE  EC87  F0A9         	call	_conv_raw_result	;wreg free
  9645  01A7C2  0060  F007  FFE6   	movff	btemp,postinc1
  9646  01A7C8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9647  01A7CE  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9648  01A7D4  0060  F013  FFE6   	movff	btemp+3,postinc1
  9649  01A7DA  EC47  F0C4         	call	_lp_filter	;wreg free
  9650  01A7DE  D01A               	goto	L9
  9651  01A7E0                     l11215:
  9652                           
  9653                           ; BSR set to: 1
  9654                           ;mbmc.c: 59:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
  9655  01A7E0  0E00               	movlw	0
  9656  01A7E2  6EE6               	movwf	postinc1,c
  9657                           
  9658                           ;stkvar	_i @ sp[(-2)+0]
  9659  01A7E4  0EFE               	movlw	-2
  9660  01A7E6  50E3               	movf	plusw1,w,c
  9661  01A7E8  6EE6               	movwf	postinc1,c
  9662  01A7EA  0E00               	movlw	0
  9663  01A7EC  6EE6               	movwf	postinc1,c
  9664                           
  9665                           ;stkvar	_i @ sp[(-4)+0]
  9666  01A7EE  0EFC               	movlw	-4
  9667  01A7F0  50E3               	movf	plusw1,w,c
  9668  01A7F2  6EE6               	movwf	postinc1,c
  9669  01A7F4  EC87  F0A9         	call	_conv_raw_result	;wreg free
  9670  01A7F8  0060  F007  FFE6   	movff	btemp,postinc1
  9671  01A7FE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9672  01A804  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9673  01A80A  0060  F013  FFE6   	movff	btemp+3,postinc1
  9674  01A810  EC47  F0C4         	call	_lp_filter	;wreg free
  9675  01A814                     L9:
  9676                           
  9677                           ;stkvar	_i @ sp[(-1)+0]
  9678  01A814  0EFF               	movlw	-1
  9679  01A816  50E3               	movf	plusw1,w,c
  9680  01A818  0D04               	mullw	4
  9681  01A81A  0EFF               	movlw	low _C
  9682  01A81C  24F3               	addwf	243,w,c
  9683  01A81E  6ED9               	movwf	fsr2l,c
  9684  01A820  0E06               	movlw	high _C
  9685  01A822  20F4               	addwfc	prodh,w,c
  9686  01A824  6EDA               	movwf	fsr2h,c
  9687  01A826  0060  F007  FFDE   	movff	btemp,postinc2
  9688  01A82C  0060  F00B  FFDE   	movff	btemp+1,postinc2
  9689  01A832  0060  F00F  FFDE   	movff	btemp+2,postinc2
  9690  01A838  0060  F013  FFDE   	movff	btemp+3,postinc2
  9691                           
  9692                           ;mbmc.c: 61:  } while (++i < 16);
  9693                           ;stkvar	_i @ sp[(-1)+0]
  9694  01A83E  0EFF               	movlw	-1
  9695  01A840  2AE3               	incf	plusw1,f,c
  9696  01A842  0EFF               	movlw	-1
  9697  01A844  006F FF8C  F001    	movff	plusw1,btemp
  9698  01A84A  0E0F               	movlw	15
  9699  01A84C  6401               	cpfsgt	btemp^0,c
  9700  01A84E  D7A9               	goto	l11211
  9701                           
  9702                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  9703  01A850  52E5               	movf	postdec1,f,c
  9704  01A852  0012               	return		;funcret
  9705  01A854                     __end_of_convert_adc_data:
  9706                           	opt callstack 0
  9707                           
  9708 ;; *************** function _clear_hid_pflags *****************
  9709 ;; Defined at:
  9710 ;;		line 51 in file "hid.c"
  9711 ;; Parameters:    Size  Location     Type
  9712 ;;  h               2  [STACK] PTR struct H_data
  9713 ;;		 -> H(7), 
  9714 ;; Auto vars:     Size  Location     Type
  9715 ;;		None
  9716 ;; Return value:  Size  Location     Type
  9717 ;;                  1  [STACK] void 
  9718 ;; Registers used:
  9719 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
  9720 ;; Tracked objects:
  9721 ;;		On entry : 3E/0
  9722 ;;		On exit  : 0/0
  9723 ;;		Unchanged: 0/0
  9724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9729 ;;Total ram usage:        0 bytes
  9730 ;; Hardware stack levels used:    1
  9731 ;; Hardware stack levels required when called:   15
  9732 ;; This function calls:
  9733 ;;		Nothing
  9734 ;; This function is called by:
  9735 ;;		_main
  9736 ;; This function uses a reentrant model
  9737 ;;
  9738                           
  9739                           	psect	text33
  9740  01B8F4                     __ptext33:
  9741                           	opt callstack 0
  9742  01B8F4                     _clear_hid_pflags:
  9743                           	opt callstack 15
  9744                           
  9745                           ;hid.c: 51: void clear_hid_pflags(H_data* h);hid.c: 52: {;hid.c: 53:  h->select_p = SW_O
      +                          FF;
  9746                           ;stkvar	_h @ sp[(0)+-2]
  9747                           
  9748                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9749                           ;incstack = 0
  9750  01B8F4  0EFE               	movlw	-2
  9751  01B8F6  006F FF8C  F00B    	movff	plusw1,btemp+10
  9752  01B8FC  0EFF               	movlw	-1
  9753  01B8FE  006F FF8C  F00C    	movff	plusw1,btemp+11
  9754  01B904  0E03               	movlw	3
  9755  01B906  240B               	addwf	(btemp+10)^0,w,c
  9756  01B908  6ED9               	movwf	fsr2l,c
  9757  01B90A  0E00               	movlw	0
  9758  01B90C  200C               	addwfc	(btemp+11)^0,w,c
  9759  01B90E  6EDA               	movwf	fsr2h,c
  9760  01B910  0E00               	movlw	0
  9761  01B912  6EDF               	movwf	indf2,c
  9762                           
  9763                           ;hid.c: 54:  h->enter_p = SW_OFF;
  9764                           ;stkvar	_h @ sp[(0)+-2]
  9765  01B914  0EFE               	movlw	-2
  9766  01B916  006F FF8C  F00B    	movff	plusw1,btemp+10
  9767  01B91C  0EFF               	movlw	-1
  9768  01B91E  006F FF8C  F00C    	movff	plusw1,btemp+11
  9769  01B924  0E05               	movlw	5
  9770  01B926  240B               	addwf	(btemp+10)^0,w,c
  9771  01B928  6ED9               	movwf	fsr2l,c
  9772  01B92A  0E00               	movlw	0
  9773  01B92C  200C               	addwfc	(btemp+11)^0,w,c
  9774  01B92E  6EDA               	movwf	fsr2h,c
  9775  01B930  0E00               	movlw	0
  9776  01B932  6EDF               	movwf	indf2,c
  9777                           
  9778                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           2, argsize = 2, vargsize = 0
  9779  01B934  52E5               	movf	postdec1,f,c
  9780  01B936  52E5               	movf	postdec1,f,c
  9781  01B938  0012               	return		;funcret
  9782  01B93A                     __end_of_clear_hid_pflags:
  9783                           	opt callstack 0
  9784                           
  9785 ;; *************** function _check_help *****************
  9786 ;; Defined at:
  9787 ;;		line 40 in file "mconfig.c"
  9788 ;; Parameters:    Size  Location     Type
  9789 ;;  flipper         1  [STACK] const _Bool 
  9790 ;; Auto vars:     Size  Location     Type
  9791 ;;  estatus         1    0        _Bool 
  9792 ;; Return value:  Size  Location     Type
  9793 ;;                  1  [STACK] _Bool 
  9794 ;; Registers used:
  9795 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9796 ;; Tracked objects:
  9797 ;;		On entry : 3F/1
  9798 ;;		On exit  : 0/0
  9799 ;;		Unchanged: 0/0
  9800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9805 ;;Total ram usage:        0 bytes
  9806 ;; Hardware stack levels used:    1
  9807 ;; Hardware stack levels required when called:   28
  9808 ;; This function calls:
  9809 ;;		_StartTimer
  9810 ;;		_TimerDone
  9811 ;;		_display_help
  9812 ;;		_display_info
  9813 ;;		_get_vterm_ptr
  9814 ;;		_help_button
  9815 ;;		_mode_lamp_bright
  9816 ;;		_mode_lamp_dim
  9817 ;;		_set_display_info
  9818 ;;		_set_temp_display_help
  9819 ;;		_set_vterm
  9820 ;;		_sprintf
  9821 ;;		_update_lcd
  9822 ;;		_vterm_dump
  9823 ;; This function is called by:
  9824 ;;		_main
  9825 ;; This function uses a reentrant model
  9826 ;;
  9827                           
  9828                           	psect	text34
  9829  01829C                     __ptext34:
  9830                           	opt callstack 0
  9831  01829C                     _check_help:
  9832                           	opt callstack 2
  9833                           
  9834                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
  9835                           
  9836                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9837                           ;incstack = 0
  9838  01829C  EC02  F0DE         	call	_help_button	;wreg free
  9839  0182A0  5001               	movf	btemp^0,w,c
  9840  0182A2  B4D8               	btfsc	status,2,c
  9841  0182A4  D0D0               	goto	l13317
  9842  0182A6  ECAB  F0E2         	call	_display_info	;wreg free
  9843  0182AA  0401               	decf	btemp^0,w,c
  9844  0182AC  B4D8               	btfsc	status,2,c
  9845  0182AE  D0CB               	goto	l13317
  9846                           
  9847                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
  9848  0182B0  0EDC               	movlw	220
  9849  0182B2  6EE6               	movwf	postinc1,c
  9850  0182B4  0E05               	movlw	5
  9851  0182B6  6EE6               	movwf	postinc1,c
  9852  0182B8  0E0B               	movlw	11
  9853  0182BA  6EE6               	movwf	postinc1,c
  9854  0182BC  EC66  F0DD         	call	_StartTimer	;wreg free
  9855                           
  9856                           ;mconfig.c: 48:   if (V.debug)
  9857  0182C0  0101               	movlb	1	; () banked
  9858  0182C2  B3A2               	btfsc	(_V+155)& (0+255),1,b	;volatile
  9859                           
  9860                           ; BSR set to: 1
  9861                           ;mconfig.c: 49:    vterm_dump();
  9862  0182C4  EC41  F0CC         	call	_vterm_dump	;wreg free
  9863                           
  9864                           ;mconfig.c: 51:   set_vterm(1);
  9865  0182C8  0E01               	movlw	1
  9866  0182CA  6EE6               	movwf	postinc1,c
  9867  0182CC  ECA0  F0E1         	call	_set_vterm	;wreg free
  9868                           
  9869                           ;mconfig.c: 52:   set_temp_display_help(display_info());
  9870  0182D0  ECAB  F0E2         	call	_display_info	;wreg free
  9871  0182D4  5001               	movf	btemp^0,w,c
  9872  0182D6  6EE6               	movwf	postinc1,c
  9873  0182D8  EC5B  F0E2         	call	_set_temp_display_help	;wreg free
  9874                           
  9875                           ; BSR set to: 1
  9876                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
  9877  0182DC  0E01               	movlw	1
  9878  0182DE  6EE6               	movwf	postinc1,c
  9879  0182E0  ECAF  F0E1         	call	_set_display_info	;wreg free
  9880                           
  9881                           ;mconfig.c: 54:   if (flipper) {
  9882                           ;stkvar	_flipper @ sp[(0)+-1]
  9883  0182E4  0EFF               	movlw	-1
  9884  0182E6  50E3               	movf	plusw1,w,c
  9885  0182E8  B4D8               	btfsc	status,2,c
  9886  0182EA  D019               	goto	l13303
  9887                           
  9888                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  9889  0182EC  0EB3               	movlw	low STR_45
  9890  0182EE  6EE6               	movwf	postinc1,c
  9891  0182F0  0EFF               	movlw	high STR_45
  9892  0182F2  6EE6               	movwf	postinc1,c
  9893  0182F4  0E5D               	movlw	low STR_47
  9894  0182F6  6EE6               	movwf	postinc1,c
  9895  0182F8  0EFF               	movlw	high STR_47
  9896  0182FA  6EE6               	movwf	postinc1,c
  9897  0182FC  0E01               	movlw	1
  9898  0182FE  6EE6               	movwf	postinc1,c
  9899  018300  0E00               	movlw	0
  9900  018302  6EE6               	movwf	postinc1,c
  9901  018304  EC38  F0DF         	call	_get_vterm_ptr	;wreg free
  9902  018308  0060  F007  FFE6   	movff	btemp,postinc1
  9903  01830E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9904  018314  0E06               	movlw	6
  9905  018316  6EE6               	movwf	postinc1,c
  9906  018318  EC08  F0CF         	call	_sprintf	;wreg free
  9907                           
  9908                           ;mconfig.c: 56:   } else {
  9909  01831C  D018               	goto	l1689
  9910  01831E                     l13303:
  9911                           
  9912                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  9913  01831E  0EC9               	movlw	low STR_46
  9914  018320  6EE6               	movwf	postinc1,c
  9915  018322  0EFF               	movlw	high STR_46
  9916  018324  6EE6               	movwf	postinc1,c
  9917  018326  0E5D               	movlw	low STR_47
  9918  018328  6EE6               	movwf	postinc1,c
  9919  01832A  0EFF               	movlw	high STR_47
  9920  01832C  6EE6               	movwf	postinc1,c
  9921  01832E  0E01               	movlw	1
  9922  018330  6EE6               	movwf	postinc1,c
  9923  018332  0E00               	movlw	0
  9924  018334  6EE6               	movwf	postinc1,c
  9925  018336  EC38  F0DF         	call	_get_vterm_ptr	;wreg free
  9926  01833A  0060  F007  FFE6   	movff	btemp,postinc1
  9927  018340  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9928  018346  0E06               	movlw	6
  9929  018348  6EE6               	movwf	postinc1,c
  9930  01834A  EC08  F0CF         	call	_sprintf	;wreg free
  9931  01834E                     l1689:
  9932                           
  9933                           ; BSR set to: 0
  9934                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  9935  01834E  0101               	movlb	1	; () banked
  9936  018350  39A2               	swapf	(_V+155)& (0+255),w,b	;volatile
  9937  018352  32E8               	rrcf	wreg,f,c
  9938  018354  32E8               	rrcf	wreg,f,c
  9939  018356  0B03               	andlw	3
  9940  018358  0D24               	mullw	36
  9941  01835A  0E12               	movlw	18
  9942  01835C  26F3               	addwf	243,f,c
  9943  01835E  0E00               	movlw	0
  9944  018360  22F4               	addwfc	244,f,c
  9945  018362  0EBB               	movlw	low _T
  9946  018364  6E0B               	movwf	(btemp+10)^0,c
  9947  018366  0EFA               	movlw	high _T
  9948  018368  6E0C               	movwf	(btemp+11)^0,c
  9949  01836A  50F3               	movf	243,w,c
  9950  01836C  260B               	addwf	(btemp+10)^0,f,c
  9951  01836E  50F4               	movf	244,w,c
  9952  018370  220C               	addwfc	(btemp+11)^0,f,c
  9953  018372  0060  F02F  FFE6   	movff	btemp+10,postinc1
  9954  018378  0060  F033  FFE6   	movff	btemp+11,postinc1
  9955  01837E  0EBF               	movlw	low STR_49
  9956  018380  6EE6               	movwf	postinc1,c
  9957  018382  0EFF               	movlw	high STR_49
  9958  018384  6EE6               	movwf	postinc1,c
  9959  018386  0E01               	movlw	1
  9960  018388  6EE6               	movwf	postinc1,c
  9961  01838A  0E01               	movlw	1
  9962  01838C  6EE6               	movwf	postinc1,c
  9963  01838E  EC38  F0DF         	call	_get_vterm_ptr	;wreg free
  9964  018392  0060  F007  FFE6   	movff	btemp,postinc1
  9965  018398  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9966  01839E  0E06               	movlw	6
  9967  0183A0  6EE6               	movwf	postinc1,c
  9968  0183A2  EC08  F0CF         	call	_sprintf	;wreg free
  9969                           
  9970                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  9971  0183A6  0101               	movlb	1	; () banked
  9972  0183A8  39A2               	swapf	(_V+155)& (0+255),w,b	;volatile
  9973  0183AA  32E8               	rrcf	wreg,f,c
  9974  0183AC  32E8               	rrcf	wreg,f,c
  9975  0183AE  0B03               	andlw	3
  9976  0183B0  0D24               	mullw	36
  9977  0183B2  0EBB               	movlw	low _T
  9978  0183B4  6E0B               	movwf	(btemp+10)^0,c
  9979  0183B6  0EFA               	movlw	high _T
  9980  0183B8  6E0C               	movwf	(btemp+11)^0,c
  9981  0183BA  50F3               	movf	243,w,c
  9982  0183BC  260B               	addwf	(btemp+10)^0,f,c
  9983  0183BE  50F4               	movf	244,w,c
  9984  0183C0  220C               	addwfc	(btemp+11)^0,f,c
  9985  0183C2  0060  F02F  FFE6   	movff	btemp+10,postinc1
  9986  0183C8  0060  F033  FFE6   	movff	btemp+11,postinc1
  9987  0183CE  0EBF               	movlw	low STR_49
  9988  0183D0  6EE6               	movwf	postinc1,c
  9989  0183D2  0EFF               	movlw	high STR_49
  9990  0183D4  6EE6               	movwf	postinc1,c
  9991  0183D6  0E01               	movlw	1
  9992  0183D8  6EE6               	movwf	postinc1,c
  9993  0183DA  0E02               	movlw	2
  9994  0183DC  6EE6               	movwf	postinc1,c
  9995  0183DE  EC38  F0DF         	call	_get_vterm_ptr	;wreg free
  9996  0183E2  0060  F007  FFE6   	movff	btemp,postinc1
  9997  0183E8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9998  0183EE  0E06               	movlw	6
  9999  0183F0  6EE6               	movwf	postinc1,c
 10000  0183F2  EC08  F0CF         	call	_sprintf	;wreg free
 10001                           
 10002                           ; BSR set to: 0
 10003                           ;mconfig.c: 61:   V.help_id++;
 10004  0183F6  EE20  F1A2         	lfsr	2,_V+155	;volatile
 10005  0183FA  38DF               	swapf	223,w,c
 10006  0183FC  6E0C               	movwf	(btemp+11)^0,c
 10007  0183FE  320C               	rrcf	(btemp+11)^0,f,c
 10008  018400  300C               	rrcf	(btemp+11)^0,w,c
 10009  018402  0B03               	andlw	3
 10010  018404  6E0C               	movwf	(btemp+11)^0,c
 10011  018406  2A0C               	incf	(btemp+11)^0,f,c
 10012  018408  3A0C               	swapf	(btemp+11)^0,f,c
 10013  01840A  360C               	rlcf	(btemp+11)^0,f,c
 10014  01840C  360C               	rlcf	(btemp+11)^0,f,c
 10015  01840E  50DF               	movf	223,w,c
 10016  018410  180C               	xorwf	(btemp+11)^0,w,c
 10017  018412  0B3F               	andlw	-193
 10018  018414  180C               	xorwf	(btemp+11)^0,w,c
 10019  018416  6EDF               	movwf	223,c
 10020                           
 10021                           ; BSR set to: 0
 10022                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
 10023  018418  0EB8               	movlw	184
 10024  01841A  6EE6               	movwf	postinc1,c
 10025  01841C  0E0B               	movlw	11
 10026  01841E  6EE6               	movwf	postinc1,c
 10027  018420  0E09               	movlw	9
 10028  018422  6EE6               	movwf	postinc1,c
 10029  018424  EC66  F0DD         	call	_StartTimer	;wreg free
 10030                           
 10031                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
 10032  018428  0EB8               	movlw	184
 10033  01842A  6EE6               	movwf	postinc1,c
 10034  01842C  0E0B               	movlw	11
 10035  01842E  6EE6               	movwf	postinc1,c
 10036  018430  0E07               	movlw	7
 10037  018432  6EE6               	movwf	postinc1,c
 10038  018434  EC66  F0DD         	call	_StartTimer	;wreg free
 10039                           
 10040                           ;mconfig.c: 64:   mode_lamp_bright();
 10041  018438  EC72  F0E2         	call	_mode_lamp_bright	;wreg free
 10042                           
 10043                           ;mconfig.c: 65:   update_lcd(1);
 10044  01843C  0E01               	movlw	1
 10045  01843E  6EE6               	movwf	postinc1,c
 10046  018440  EC80  F0CE         	call	_update_lcd	;wreg free
 10047                           
 10048                           ;mconfig.c: 67:  } else {
 10049  018444  D032               	goto	l1690
 10050  018446                     l13317:
 10051                           
 10052                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
 10053  018446  0E09               	movlw	9
 10054  018448  6EE6               	movwf	postinc1,c
 10055  01844A  ECBB  F0DF         	call	_TimerDone	;wreg free
 10056  01844E  5001               	movf	btemp^0,w,c
 10057  018450  B4D8               	btfsc	status,2,c
 10058  018452  D02B               	goto	l1690
 10059                           
 10060                           ;mconfig.c: 69:    set_vterm(0);
 10061  018454  0E00               	movlw	0
 10062  018456  6EE6               	movwf	postinc1,c
 10063  018458  ECA0  F0E1         	call	_set_vterm	;wreg free
 10064                           
 10065                           ;mconfig.c: 70:    V.help = 0;
 10066  01845C  0101               	movlb	1	; () banked
 10067  01845E  95A2               	bcf	(_V+155)& (0+255),2,b	;volatile
 10068                           
 10069                           ; BSR set to: 1
 10070                           ;mconfig.c: 71:    set_display_info(display_help());
 10071  018460  ECAF  F0E2         	call	_display_help	;wreg free
 10072  018464  5001               	movf	btemp^0,w,c
 10073  018466  6EE6               	movwf	postinc1,c
 10074  018468  ECAF  F0E1         	call	_set_display_info	;wreg free
 10075                           
 10076                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
 10077  01846C  0060  F673  FFE6   	movff	_V+149,postinc1
 10078  018472  0060  F677  FFE6   	movff	_V+150,postinc1
 10079  018478  ECF5  F0E1         	call	_mode_lamp_dim	;wreg free
 10080                           
 10081                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
 10082  01847C  0E0B               	movlw	11
 10083  01847E  6EE6               	movwf	postinc1,c
 10084  018480  ECBB  F0DF         	call	_TimerDone	;wreg free
 10085  018484  5001               	movf	btemp^0,w,c
 10086  018486  B4D8               	btfsc	status,2,c
 10087  018488  D010               	goto	l1690
 10088                           
 10089                           ;mconfig.c: 74:     V.flipper = !V.flipper;
 10090  01848A  0101               	movlb	1	; () banked
 10091  01848C  51B2               	movf	(_V+171)& (0+255),w,b	;volatile
 10092  01848E  A4D8               	btfss	status,2,c
 10093  018490  D002               	goto	u12780
 10094  018492  0E01               	movlw	1
 10095  018494  D001               	goto	u12790
 10096  018496                     u12780:
 10097  018496  0E00               	movlw	0
 10098  018498                     u12790:
 10099  018498  6FB2               	movwf	(_V+171)& (0+255),b	;volatile
 10100                           
 10101                           ; BSR set to: 1
 10102                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
 10103  01849A  0EDC               	movlw	220
 10104  01849C  6EE6               	movwf	postinc1,c
 10105  01849E  0E05               	movlw	5
 10106  0184A0  6EE6               	movwf	postinc1,c
 10107  0184A2  0E0B               	movlw	11
 10108  0184A4  6EE6               	movwf	postinc1,c
 10109  0184A6  EC66  F0DD         	call	_StartTimer	;wreg free
 10110  0184AA                     l1690:
 10111                           
 10112                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 10113  0184AA  52E5               	movf	postdec1,f,c
 10114  0184AC  0012               	return		;funcret
 10115  0184AE                     __end_of_check_help:
 10116                           	opt callstack 0
 10117                           
 10118 ;; *************** function _vterm_dump *****************
 10119 ;; Defined at:
 10120 ;;		line 121 in file "mconfig.c"
 10121 ;; Parameters:    Size  Location     Type
 10122 ;;		None
 10123 ;; Auto vars:     Size  Location     Type
 10124 ;;		None
 10125 ;; Return value:  Size  Location     Type
 10126 ;;                  1  [STACK] void 
 10127 ;; Registers used:
 10128 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10129 ;; Tracked objects:
 10130 ;;		On entry : 3F/1
 10131 ;;		On exit  : 0/0
 10132 ;;		Unchanged: 0/0
 10133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10138 ;;Total ram usage:        0 bytes
 10139 ;; Hardware stack levels used:    1
 10140 ;; Hardware stack levels required when called:   27
 10141 ;; This function calls:
 10142 ;;		_WaitMs
 10143 ;;		_eaDogM_WriteStringAtPos
 10144 ;;		_get_vterm_ptr
 10145 ;;		_sprintf
 10146 ;;		_wait_lcd_done
 10147 ;; This function is called by:
 10148 ;;		_check_help
 10149 ;; This function uses a reentrant model
 10150 ;;
 10151                           
 10152                           	psect	text35
 10153  019882                     __ptext35:
 10154                           	opt callstack 0
 10155  019882                     _vterm_dump:
 10156                           	opt callstack 2
 10157                           
 10158                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
 10159                           
 10160                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10161                           ;incstack = 0
 10162  019882  0E01               	movlw	1
 10163  019884  6EE6               	movwf	postinc1,c
 10164  019886  0E00               	movlw	0
 10165  019888  6EE6               	movwf	postinc1,c
 10166  01988A  EC38  F0DF         	call	_get_vterm_ptr	;wreg free
 10167  01988E  0060  F007  FFE6   	movff	btemp,postinc1
 10168  019894  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10169  01989A  0E00               	movlw	0
 10170  01989C  6EE6               	movwf	postinc1,c
 10171  01989E  0E00               	movlw	0
 10172  0198A0  6EE6               	movwf	postinc1,c
 10173  0198A2  EC38  F0DF         	call	_get_vterm_ptr	;wreg free
 10174  0198A6  0060  F007  FFE6   	movff	btemp,postinc1
 10175  0198AC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10176  0198B2  0EA4               	movlw	low STR_51
 10177  0198B4  6EE6               	movwf	postinc1,c
 10178  0198B6  0EFF               	movlw	high STR_51
 10179  0198B8  6EE6               	movwf	postinc1,c
 10180  0198BA  0E08               	movlw	low (_V+1)
 10181  0198BC  6EE6               	movwf	postinc1,c
 10182  0198BE  0E01               	movlw	high (_V+1)
 10183  0198C0  6EE6               	movwf	postinc1,c
 10184  0198C2  0E08               	movlw	8
 10185  0198C4  6EE6               	movwf	postinc1,c
 10186  0198C6  EC08  F0CF         	call	_sprintf	;wreg free
 10187                           
 10188                           ; BSR set to: 0
 10189                           ;mconfig.c: 124:  wait_lcd_done();
 10190  0198CA  ECCD  F0E1         	call	_wait_lcd_done	;wreg free
 10191                           
 10192                           ; BSR set to: 0
 10193                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
 10194  0198CE  0E08               	movlw	low (_V+1)
 10195  0198D0  6EE6               	movwf	postinc1,c
 10196  0198D2  0E01               	movlw	high (_V+1)
 10197  0198D4  6EE6               	movwf	postinc1,c
 10198  0198D6  0E00               	movlw	0
 10199  0198D8  6EE6               	movwf	postinc1,c
 10200  0198DA  0E00               	movlw	0
 10201  0198DC  6EE6               	movwf	postinc1,c
 10202  0198DE  EC2C  F0D5         	call	_eaDogM_WriteStringAtPos	;wreg free
 10203                           
 10204                           ; BSR set to: 59
 10205                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
 10206  0198E2  0E01               	movlw	1
 10207  0198E4  6EE6               	movwf	postinc1,c
 10208  0198E6  0E01               	movlw	1
 10209  0198E8  6EE6               	movwf	postinc1,c
 10210  0198EA  EC38  F0DF         	call	_get_vterm_ptr	;wreg free
 10211  0198EE  0060  F007  FFE6   	movff	btemp,postinc1
 10212  0198F4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10213  0198FA  0E00               	movlw	0
 10214  0198FC  6EE6               	movwf	postinc1,c
 10215  0198FE  0E01               	movlw	1
 10216  019900  6EE6               	movwf	postinc1,c
 10217  019902  EC38  F0DF         	call	_get_vterm_ptr	;wreg free
 10218  019906  0060  F007  FFE6   	movff	btemp,postinc1
 10219  01990C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10220  019912  0EA4               	movlw	low STR_51
 10221  019914  6EE6               	movwf	postinc1,c
 10222  019916  0EFF               	movlw	high STR_51
 10223  019918  6EE6               	movwf	postinc1,c
 10224  01991A  0E08               	movlw	low (_V+1)
 10225  01991C  6EE6               	movwf	postinc1,c
 10226  01991E  0E01               	movlw	high (_V+1)
 10227  019920  6EE6               	movwf	postinc1,c
 10228  019922  0E08               	movlw	8
 10229  019924  6EE6               	movwf	postinc1,c
 10230  019926  EC08  F0CF         	call	_sprintf	;wreg free
 10231                           
 10232                           ; BSR set to: 0
 10233                           ;mconfig.c: 127:  wait_lcd_done();
 10234  01992A  ECCD  F0E1         	call	_wait_lcd_done	;wreg free
 10235                           
 10236                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
 10237  01992E  0E08               	movlw	low (_V+1)
 10238  019930  6EE6               	movwf	postinc1,c
 10239  019932  0E01               	movlw	high (_V+1)
 10240  019934  6EE6               	movwf	postinc1,c
 10241  019936  0E00               	movlw	0
 10242  019938  6EE6               	movwf	postinc1,c
 10243  01993A  0E01               	movlw	1
 10244  01993C  6EE6               	movwf	postinc1,c
 10245  01993E  EC2C  F0D5         	call	_eaDogM_WriteStringAtPos	;wreg free
 10246                           
 10247                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
 10248  019942  0E01               	movlw	1
 10249  019944  6EE6               	movwf	postinc1,c
 10250  019946  0E02               	movlw	2
 10251  019948  6EE6               	movwf	postinc1,c
 10252  01994A  EC38  F0DF         	call	_get_vterm_ptr	;wreg free
 10253  01994E  0060  F007  FFE6   	movff	btemp,postinc1
 10254  019954  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10255  01995A  0E00               	movlw	0
 10256  01995C  6EE6               	movwf	postinc1,c
 10257  01995E  0E02               	movlw	2
 10258  019960  6EE6               	movwf	postinc1,c
 10259  019962  EC38  F0DF         	call	_get_vterm_ptr	;wreg free
 10260  019966  0060  F007  FFE6   	movff	btemp,postinc1
 10261  01996C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10262  019972  0EA4               	movlw	low STR_51
 10263  019974  6EE6               	movwf	postinc1,c
 10264  019976  0EFF               	movlw	high STR_51
 10265  019978  6EE6               	movwf	postinc1,c
 10266  01997A  0E08               	movlw	low (_V+1)
 10267  01997C  6EE6               	movwf	postinc1,c
 10268  01997E  0E01               	movlw	high (_V+1)
 10269  019980  6EE6               	movwf	postinc1,c
 10270  019982  0E08               	movlw	8
 10271  019984  6EE6               	movwf	postinc1,c
 10272  019986  EC08  F0CF         	call	_sprintf	;wreg free
 10273                           
 10274                           ; BSR set to: 0
 10275                           ;mconfig.c: 130:  wait_lcd_done();
 10276  01998A  ECCD  F0E1         	call	_wait_lcd_done	;wreg free
 10277                           
 10278                           ; BSR set to: 0
 10279                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
 10280  01998E  0E08               	movlw	low (_V+1)
 10281  019990  6EE6               	movwf	postinc1,c
 10282  019992  0E01               	movlw	high (_V+1)
 10283  019994  6EE6               	movwf	postinc1,c
 10284  019996  0E00               	movlw	0
 10285  019998  6EE6               	movwf	postinc1,c
 10286  01999A  0E02               	movlw	2
 10287  01999C  6EE6               	movwf	postinc1,c
 10288  01999E  EC2C  F0D5         	call	_eaDogM_WriteStringAtPos	;wreg free
 10289                           
 10290                           ; BSR set to: 59
 10291                           ;mconfig.c: 132:  WaitMs(3000);
 10292  0199A2  0EB8               	movlw	184
 10293  0199A4  6EE6               	movwf	postinc1,c
 10294  0199A6  0E0B               	movlw	11
 10295  0199A8  6EE6               	movwf	postinc1,c
 10296  0199AA  EC55  F0DE         	call	_WaitMs	;wreg free
 10297                           
 10298                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 10299  0199AE  0012               	return		;funcret
 10300  0199B0                     __end_of_vterm_dump:
 10301                           	opt callstack 0
 10302                           
 10303 ;; *************** function _sprintf *****************
 10304 ;; Defined at:
 10305 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
 10306 ;; Parameters:    Size  Location     Type
 10307 ;;  s               2  [STACK] PTR unsigned char 
 10308 ;;		 -> D.lcd(480), D(482), port_data(512), V(191), 
 10309 ;;  fmt             2  [STACK] PTR const unsigned char 
 10310 ;;		 -> STR_64(121), STR_62(3), STR_61(3), STR_60(19), 
 10311 ;;		 -> STR_59(19), STR_58(19), STR_57(19), STR_56(19), 
 10312 ;;		 -> STR_55(19), STR_54(24), STR_53(15), STR_52(15), 
 10313 ;;		 -> STR_51(15), STR_50(10), STR_49(10), STR_48(19), 
 10314 ;;		 -> STR_47(19), STR_42(22), STR_41(22), STR_40(22), 
 10315 ;;		 -> STR_39(23), STR_38(23), STR_37(23), STR_36(23), 
 10316 ;;		 -> STR_35(23), STR_34(23), STR_33(22), STR_32(22), 
 10317 ;;		 -> STR_31(22), STR_30(22), STR_29(22), STR_28(22), 
 10318 ;;		 -> STR_27(22), STR_26(22), STR_25(22), STR_24(22), 
 10319 ;;		 -> STR_23(22), STR_22(22), STR_21(17), STR_20(16), 
 10320 ;;		 -> STR_19(16), STR_18(26), STR_17(26), STR_16(22), 
 10321 ;;		 -> STR_15(21), STR_14(21), STR_13(21), STR_12(21), 
 10322 ;;		 -> STR_11(22), STR_10(22), STR_9(26), STR_8(21), 
 10323 ;;		 -> STR_7(21), STR_6(21), STR_5(21), STR_4(21), 
 10324 ;;		 -> STR_2(21), STR_1(21), 
 10325 ;; Auto vars:     Size  Location     Type
 10326 ;;  f               6  [STACK] struct _IO_FILE
 10327 ;;  ap              2  [STACK] PTR void [1]
 10328 ;;		 -> ?_printf(2), ?_sprintf(2), 
 10329 ;;  ret             2    0        int 
 10330 ;; Return value:  Size  Location     Type
 10331 ;;                  2  [STACK] int 
 10332 ;; Registers used:
 10333 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10334 ;; Tracked objects:
 10335 ;;		On entry : 0/1
 10336 ;;		On exit  : 3F/0
 10337 ;;		Unchanged: 0/0
 10338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10343 ;;Total ram usage:        0 bytes
 10344 ;; Hardware stack levels used:    1
 10345 ;; Hardware stack levels required when called:   23
 10346 ;; This function calls:
 10347 ;;		_vfprintf
 10348 ;; This function is called by:
 10349 ;;		_main
 10350 ;;		_check_help
 10351 ;;		_vterm_dump
 10352 ;;		_calc_bsoc
 10353 ;; This function uses a reentrant model
 10354 ;;
 10355                           
 10356                           	psect	text36
 10357  019E10                     __ptext36:
 10358                           	opt callstack 0
 10359  019E10                     _sprintf:
 10360                           	opt callstack 0
 10361                           
 10362                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 86, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 10363  019E10  0E08               	movlw	8
 10364  019E12  26E1               	addwf	fsr1l,f,c
 10365  019E14  0E00               	movlw	0
 10366  019E16  22E2               	addwfc	fsr1h,f,c
 10367                           
 10368                           ;incstack = 0
 10369 ;; hardware stack exceeded
 10370  019E18  0EFE               	movlw	254
 10371  019E1A  6E0B               	movwf	(btemp+10)^0,c
 10372  019E1C  0EFF               	movlw	255
 10373  019E1E  6E0C               	movwf	(btemp+11)^0,c
 10374                           
 10375                           ;stkvar	?_sprintf @ sp[(-8)+-3]
 10376  019E20  0EF5               	movlw	245
 10377  019E22  24E1               	addwf	fsr1l,w,c
 10378  019E24  6E09               	movwf	(btemp+8)^0,c
 10379  019E26  0EFF               	movlw	255
 10380  019E28  20E2               	addwfc	fsr1h,w,c
 10381  019E2A  6E0A               	movwf	(btemp+9)^0,c
 10382  019E2C  500B               	movf	(btemp+10)^0,w,c
 10383  019E2E  2609               	addwf	(btemp+8)^0,f,c
 10384  019E30  500C               	movf	(btemp+11)^0,w,c
 10385  019E32  220A               	addwfc	(btemp+9)^0,f,c
 10386                           
 10387                           ;stkvar	_ap @ sp[(-8)+6]
 10388  019E34  0EFF               	movlw	-1
 10389  019E36  0060  F02B  FFE3   	movff	btemp+9,plusw1
 10390  019E3C  0EFE               	movlw	-2
 10391  019E3E  0060  F027  FFE3   	movff	btemp+8,plusw1
 10392                           
 10393                           ;stkvar	_s @ sp[(-8)+-3]
 10394  019E44  0EF5               	movlw	-11
 10395  019E46  006F FF8C  F00B    	movff	plusw1,btemp+10
 10396  019E4C  0EF6               	movlw	-10
 10397  019E4E  006F FF8C  F00C    	movff	plusw1,btemp+11
 10398                           
 10399                           ;stkvar	_f @ sp[(-8)+0]
 10400  019E54  0EF9               	movlw	-7
 10401  019E56  0060  F033  FFE3   	movff	btemp+11,plusw1
 10402  019E5C  0EF8               	movlw	-8
 10403  019E5E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10404                           
 10405                           ;stkvar	_f @ sp[(-8)+0]
 10406  019E64  0EFA               	movlw	250
 10407  019E66  24E1               	addwf	fsr1l,w,c
 10408  019E68  6ED9               	movwf	fsr2l,c
 10409  019E6A  0EFF               	movlw	255
 10410  019E6C  20E2               	addwfc	fsr1h,w,c
 10411  019E6E  6EDA               	movwf	fsr2h,c
 10412  019E70  0E00               	movlw	0
 10413  019E72  6EDE               	movwf	postinc2,c
 10414  019E74  0E00               	movlw	0
 10415  019E76  6EDD               	movwf	postdec2,c
 10416                           
 10417                           ;stkvar	_f @ sp[(-8)+0]
 10418  019E78  0EFC               	movlw	252
 10419  019E7A  24E1               	addwf	fsr1l,w,c
 10420  019E7C  6ED9               	movwf	fsr2l,c
 10421  019E7E  0EFF               	movlw	255
 10422  019E80  20E2               	addwfc	fsr1h,w,c
 10423  019E82  6EDA               	movwf	fsr2h,c
 10424  019E84  0E00               	movlw	0
 10425  019E86  6EDE               	movwf	postinc2,c
 10426  019E88  0E00               	movlw	0
 10427  019E8A  6EDD               	movwf	postdec2,c
 10428                           
 10429                           ;stkvar	_ap @ sp[(-8)+6]
 10430  019E8C  0EFE               	movlw	254
 10431  019E8E  24E1               	addwf	fsr1l,w,c
 10432  019E90  6E01               	movwf	btemp^0,c
 10433  019E92  0EFF               	movlw	255
 10434  019E94  20E2               	addwfc	fsr1h,w,c
 10435  019E96  6E02               	movwf	(btemp+1)^0,c
 10436  019E98  0060  F007  FFE6   	movff	btemp,postinc1
 10437  019E9E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10438                           
 10439                           ;stkvar	_fmt @ sp[(-10)+-5]
 10440  019EA4  0EF1               	movlw	-15
 10441  019EA6  006F FF8F FFE6     	movff	plusw1,postinc1
 10442  019EAC  006F FF8F FFE6     	movff	plusw1,postinc1
 10443                           
 10444                           ;stkvar	_f @ sp[(-12)+0]
 10445  019EB2  0EF4               	movlw	244
 10446  019EB4  24E1               	addwf	fsr1l,w,c
 10447  019EB6  6E01               	movwf	btemp^0,c
 10448  019EB8  0EFF               	movlw	255
 10449  019EBA  20E2               	addwfc	fsr1h,w,c
 10450  019EBC  6E02               	movwf	(btemp+1)^0,c
 10451  019EBE  0060  F007  FFE6   	movff	btemp,postinc1
 10452  019EC4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10453  019ECA  EC81  F0D4         	call	_vfprintf	;wreg free
 10454                           
 10455                           ; BSR set to: 0
 10456                           ;stkvar	_f @ sp[(-8)+0]
 10457  019ECE  0EFA               	movlw	250
 10458  019ED0  24E1               	addwf	fsr1l,w,c
 10459  019ED2  6ED9               	movwf	fsr2l,c
 10460  019ED4  0EFF               	movlw	255
 10461  019ED6  20E2               	addwfc	fsr1h,w,c
 10462  019ED8  6EDA               	movwf	fsr2h,c
 10463  019EDA  006F FF78  F00B    	movff	postinc2,btemp+10
 10464  019EE0  006F FF74  F00C    	movff	postdec2,btemp+11
 10465                           
 10466                           ;stkvar	_s @ sp[(-8)+-3]
 10467  019EE6  0EF5               	movlw	-11
 10468  019EE8  006F FF8C  F009    	movff	plusw1,btemp+8
 10469  019EEE  0EF6               	movlw	-10
 10470  019EF0  006F FF8C  F00A    	movff	plusw1,btemp+9
 10471  019EF6  500B               	movf	(btemp+10)^0,w,c
 10472  019EF8  2409               	addwf	(btemp+8)^0,w,c
 10473  019EFA  6ED9               	movwf	fsr2l,c
 10474  019EFC  500C               	movf	(btemp+11)^0,w,c
 10475  019EFE  200A               	addwfc	(btemp+9)^0,w,c
 10476  019F00  6EDA               	movwf	fsr2h,c
 10477  019F02  0E00               	movlw	0
 10478  019F04  6EDF               	movwf	indf2,c
 10479                           
 10480                           ; BSR set to: 0
 10481                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 86, args
      +                          ize = 4, vargsize = 0
 10482  019F06  0EF8               	movlw	248
 10483  019F08  26E1               	addwf	fsr1l,f,c
 10484  019F0A  0EFF               	movlw	255
 10485  019F0C  22E2               	addwfc	fsr1h,f,c
 10486  019F0E  52E5               	movf	postdec1,f,c
 10487  019F10  50E7               	movf	indf1,w,c
 10488  019F12  5EE1               	subwf	fsr1l,f,c
 10489  019F14  0E00               	movlw	0
 10490  019F16  5AE2               	subwfb	fsr1h,f,c
 10491  019F18  0012               	return		;funcret
 10492  019F1A                     __end_of_sprintf:
 10493                           	opt callstack 0
 10494                           
 10495 ;; *************** function _get_vterm_ptr *****************
 10496 ;; Defined at:
 10497 ;;		line 116 in file "mconfig.c"
 10498 ;; Parameters:    Size  Location     Type
 10499 ;;  line            1  [STACK] const unsigned char 
 10500 ;;  vterm           1  [STACK] const unsigned char 
 10501 ;; Auto vars:     Size  Location     Type
 10502 ;;		None
 10503 ;; Return value:  Size  Location     Type
 10504 ;;                  2  [STACK] PTR unsigned char 
 10505 ;; Registers used:
 10506 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
 10507 ;; Tracked objects:
 10508 ;;		On entry : 0/1
 10509 ;;		On exit  : 0/0
 10510 ;;		Unchanged: 0/0
 10511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10515 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10516 ;;Total ram usage:        0 bytes
 10517 ;; Hardware stack levels used:    1
 10518 ;; Hardware stack levels required when called:   15
 10519 ;; This function calls:
 10520 ;;		Nothing
 10521 ;; This function is called by:
 10522 ;;		_main
 10523 ;;		_check_help
 10524 ;;		_vterm_dump
 10525 ;; This function uses a reentrant model
 10526 ;;
 10527                           
 10528                           	psect	text37
 10529  01BE70                     __ptext37:
 10530                           	opt callstack 0
 10531  01BE70                     _get_vterm_ptr:
 10532                           	opt callstack 15
 10533                           
 10534                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
 10535                           ;stkvar	_vterm @ sp[(0)+-2]
 10536                           
 10537                           ; BSR set to: 0
 10538                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10539                           ;incstack = 0
 10540  01BE70  0EFE               	movlw	-2
 10541  01BE72  50E3               	movf	plusw1,w,c
 10542  01BE74  0B03               	andlw	3
 10543  01BE76  0D78               	mullw	120
 10544  01BE78  0E2A               	movlw	low _D
 10545  01BE7A  6E01               	movwf	btemp^0,c
 10546  01BE7C  0E08               	movlw	high _D
 10547  01BE7E  6E02               	movwf	(btemp+1)^0,c
 10548  01BE80  50F3               	movf	243,w,c
 10549  01BE82  2601               	addwf	btemp^0,f,c
 10550  01BE84  50F4               	movf	244,w,c
 10551  01BE86  2202               	addwfc	(btemp+1)^0,f,c
 10552                           
 10553                           ;stkvar	_line @ sp[(0)+-1]
 10554  01BE88  0EFF               	movlw	-1
 10555  01BE8A  50E3               	movf	plusw1,w,c
 10556  01BE8C  0B03               	andlw	3
 10557  01BE8E  0D28               	mullw	40
 10558  01BE90  50F3               	movf	243,w,c
 10559  01BE92  2601               	addwf	btemp^0,f,c
 10560  01BE94  50F4               	movf	244,w,c
 10561  01BE96  2202               	addwfc	(btemp+1)^0,f,c
 10562                           
 10563                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 10564  01BE98  52E5               	movf	postdec1,f,c
 10565  01BE9A  52E5               	movf	postdec1,f,c
 10566  01BE9C  0012               	return		;funcret
 10567  01BE9E                     __end_of_get_vterm_ptr:
 10568                           	opt callstack 0
 10569                           
 10570 ;; *************** function _WaitMs *****************
 10571 ;; Defined at:
 10572 ;;		line 32 in file "timers.c"
 10573 ;; Parameters:    Size  Location     Type
 10574 ;;  numMilliseco    2  [STACK] const unsigned short 
 10575 ;; Auto vars:     Size  Location     Type
 10576 ;;		None
 10577 ;; Return value:  Size  Location     Type
 10578 ;;                  1  [STACK] void 
 10579 ;; Registers used:
 10580 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 10581 ;; Tracked objects:
 10582 ;;		On entry : 0/1
 10583 ;;		On exit  : 0/0
 10584 ;;		Unchanged: 0/0
 10585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10589 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10590 ;;Total ram usage:        0 bytes
 10591 ;; Hardware stack levels used:    1
 10592 ;; Hardware stack levels required when called:   16
 10593 ;; This function calls:
 10594 ;;		_StartTimer
 10595 ;;		_TimerDone
 10596 ;; This function is called by:
 10597 ;;		_main
 10598 ;;		_vterm_dump
 10599 ;; This function uses a reentrant model
 10600 ;;
 10601                           
 10602                           	psect	text38
 10603  01BCAA                     __ptext38:
 10604                           	opt callstack 0
 10605  01BCAA                     _WaitMs:
 10606                           	opt callstack 12
 10607                           
 10608                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
 10609                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
 10610                           
 10611                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10612                           ;incstack = 0
 10613  01BCAA  0EFE               	movlw	-2
 10614  01BCAC  006F FF8F FFE6     	movff	plusw1,postinc1
 10615  01BCB2  006F FF8F FFE6     	movff	plusw1,postinc1
 10616  01BCB8  0E00               	movlw	0
 10617  01BCBA  6EE6               	movwf	postinc1,c
 10618  01BCBC  EC66  F0DD         	call	_StartTimer	;wreg free
 10619                           
 10620                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 10621  01BCC0  D005               	goto	l10037
 10622  01BCC2                     l1621:
 10623                           
 10624                           ;timers.c: 36:   __nop();
 10625  01BCC2  F000               	nop	
 10626                           
 10627                           ;timers.c: 37:   __nop();
 10628  01BCC4  F000               	nop	
 10629                           
 10630                           ;timers.c: 38:   __nop();
 10631  01BCC6  F000               	nop	
 10632                           
 10633                           ;timers.c: 39:   __nop();
 10634  01BCC8  F000               	nop	
 10635  01BCCA  0004               	clrwdt		;# 
 10636  01BCCC                     l10037:
 10637                           
 10638                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 10639  01BCCC  0E00               	movlw	0
 10640  01BCCE  6EE6               	movwf	postinc1,c
 10641  01BCD0  ECBB  F0DF         	call	_TimerDone	;wreg free
 10642  01BCD4  5001               	movf	btemp^0,w,c
 10643  01BCD6  B4D8               	btfsc	status,2,c
 10644  01BCD8  D7F4               	goto	l1621
 10645                           
 10646                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 10647  01BCDA  52E5               	movf	postdec1,f,c
 10648  01BCDC  52E5               	movf	postdec1,f,c
 10649  01BCDE  0012               	return		;funcret
 10650  01BCE0                     __end_of_WaitMs:
 10651                           	opt callstack 0
 10652                           
 10653 ;; *************** function _update_lcd *****************
 10654 ;; Defined at:
 10655 ;;		line 85 in file "mconfig.c"
 10656 ;; Parameters:    Size  Location     Type
 10657 ;;  vterm           1  [STACK] unsigned char 
 10658 ;; Auto vars:     Size  Location     Type
 10659 ;;		None
 10660 ;; Return value:  Size  Location     Type
 10661 ;;                  1  [STACK] unsigned char 
 10662 ;; Registers used:
 10663 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10664 ;; Tracked objects:
 10665 ;;		On entry : 0/0
 10666 ;;		On exit  : 0/0
 10667 ;;		Unchanged: 0/0
 10668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10673 ;;Total ram usage:        0 bytes
 10674 ;; Hardware stack levels used:    1
 10675 ;; Hardware stack levels required when called:   27
 10676 ;; This function calls:
 10677 ;;		_eaDogM_WriteStringAtPos
 10678 ;;		_wait_lcd_done
 10679 ;; This function is called by:
 10680 ;;		_main
 10681 ;;		_check_help
 10682 ;; This function uses a reentrant model
 10683 ;;
 10684                           
 10685                           	psect	text39
 10686  019D00                     __ptext39:
 10687                           	opt callstack 0
 10688  019D00                     _update_lcd:
 10689                           	opt callstack 3
 10690                           
 10691                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
 10692                           ;stkvar	_vterm @ sp[(0)+-1]
 10693                           
 10694                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10695                           ;incstack = 0
 10696  019D00  0EFF               	movlw	-1
 10697  019D02  006F FF8C  F001    	movff	plusw1,btemp
 10698  019D08  0E03               	movlw	3
 10699  019D0A  1601               	andwf	btemp^0,f,c
 10700  019D0C  0EFF               	movlw	-1
 10701  019D0E  0060  F007  FFE3   	movff	btemp,plusw1
 10702                           
 10703                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
 10704  019D14  EE22  F20A         	lfsr	2,_D+480
 10705  019D18  A0DF               	btfss	indf2,0,c
 10706  019D1A  D004               	goto	l13037
 10707                           
 10708                           ;stkvar	_vterm @ sp[(0)+-1]
 10709  019D1C  0EFF               	movlw	-1
 10710  019D1E  50E3               	movf	plusw1,w,c
 10711  019D20  B4D8               	btfsc	status,2,c
 10712  019D22  D074               	goto	l1697
 10713  019D24                     l13037:
 10714                           
 10715                           ;mconfig.c: 92:  D.lcd[vterm][0][20] = 0;
 10716                           ;stkvar	_vterm @ sp[(0)+-1]
 10717  019D24  0EFF               	movlw	-1
 10718  019D26  50E3               	movf	plusw1,w,c
 10719  019D28  0D78               	mullw	120
 10720  019D2A  0E3E               	movlw	low (_D+20)
 10721  019D2C  24F3               	addwf	243,w,c
 10722  019D2E  6ED9               	movwf	fsr2l,c
 10723  019D30  0E08               	movlw	high (_D+20)
 10724  019D32  20F4               	addwfc	prodh,w,c
 10725  019D34  6EDA               	movwf	fsr2h,c
 10726  019D36  0E00               	movlw	0
 10727  019D38  6EDF               	movwf	indf2,c
 10728                           
 10729                           ;mconfig.c: 93:  D.lcd[vterm][1][20] = 0;
 10730                           ;stkvar	_vterm @ sp[(0)+-1]
 10731  019D3A  0EFF               	movlw	-1
 10732  019D3C  50E3               	movf	plusw1,w,c
 10733  019D3E  0D78               	mullw	120
 10734  019D40  0E66               	movlw	low (_D+60)
 10735  019D42  24F3               	addwf	243,w,c
 10736  019D44  6ED9               	movwf	fsr2l,c
 10737  019D46  0E08               	movlw	high (_D+60)
 10738  019D48  20F4               	addwfc	prodh,w,c
 10739  019D4A  6EDA               	movwf	fsr2h,c
 10740  019D4C  0E00               	movlw	0
 10741  019D4E  6EDF               	movwf	indf2,c
 10742                           
 10743                           ;mconfig.c: 94:  D.lcd[vterm][2][20] = 0;
 10744                           ;stkvar	_vterm @ sp[(0)+-1]
 10745  019D50  0EFF               	movlw	-1
 10746  019D52  50E3               	movf	plusw1,w,c
 10747  019D54  0D78               	mullw	120
 10748  019D56  0E8E               	movlw	low (_D+100)
 10749  019D58  24F3               	addwf	243,w,c
 10750  019D5A  6ED9               	movwf	fsr2l,c
 10751  019D5C  0E08               	movlw	high (_D+100)
 10752  019D5E  20F4               	addwfc	prodh,w,c
 10753  019D60  6EDA               	movwf	fsr2h,c
 10754  019D62  0E00               	movlw	0
 10755  019D64  6EDF               	movwf	indf2,c
 10756                           
 10757                           ;mconfig.c: 95:  wait_lcd_done();
 10758  019D66  ECCD  F0E1         	call	_wait_lcd_done	;wreg free
 10759                           
 10760                           ; BSR set to: 0
 10761                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
 10762                           ;stkvar	_vterm @ sp[(0)+-1]
 10763  019D6A  0EFF               	movlw	-1
 10764  019D6C  50E3               	movf	plusw1,w,c
 10765  019D6E  0D78               	mullw	120
 10766  019D70  0E2A               	movlw	low _D
 10767  019D72  6E0B               	movwf	(btemp+10)^0,c
 10768  019D74  0E08               	movlw	high _D
 10769  019D76  6E0C               	movwf	(btemp+11)^0,c
 10770  019D78  50F3               	movf	243,w,c
 10771  019D7A  260B               	addwf	(btemp+10)^0,f,c
 10772  019D7C  50F4               	movf	244,w,c
 10773  019D7E  220C               	addwfc	(btemp+11)^0,f,c
 10774  019D80  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10775  019D86  0060  F033  FFE6   	movff	btemp+11,postinc1
 10776  019D8C  0E00               	movlw	0
 10777  019D8E  6EE6               	movwf	postinc1,c
 10778  019D90  0E00               	movlw	0
 10779  019D92  6EE6               	movwf	postinc1,c
 10780  019D94  EC2C  F0D5         	call	_eaDogM_WriteStringAtPos	;wreg free
 10781                           
 10782                           ; BSR set to: 59
 10783                           ;mconfig.c: 97:  wait_lcd_done();
 10784  019D98  ECCD  F0E1         	call	_wait_lcd_done	;wreg free
 10785                           
 10786                           ; BSR set to: 0
 10787                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
 10788                           ;stkvar	_vterm @ sp[(0)+-1]
 10789  019D9C  0EFF               	movlw	-1
 10790  019D9E  50E3               	movf	plusw1,w,c
 10791  019DA0  0D78               	mullw	120
 10792  019DA2  0E2A               	movlw	low _D
 10793  019DA4  6E0B               	movwf	(btemp+10)^0,c
 10794  019DA6  0E08               	movlw	high _D
 10795  019DA8  6E0C               	movwf	(btemp+11)^0,c
 10796  019DAA  0E28               	movlw	40
 10797  019DAC  260B               	addwf	(btemp+10)^0,f,c
 10798  019DAE  0E00               	movlw	0
 10799  019DB0  220C               	addwfc	(btemp+11)^0,f,c
 10800  019DB2  50F3               	movf	243,w,c
 10801  019DB4  260B               	addwf	(btemp+10)^0,f,c
 10802  019DB6  50F4               	movf	244,w,c
 10803  019DB8  220C               	addwfc	(btemp+11)^0,f,c
 10804  019DBA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10805  019DC0  0060  F033  FFE6   	movff	btemp+11,postinc1
 10806  019DC6  0E00               	movlw	0
 10807  019DC8  6EE6               	movwf	postinc1,c
 10808  019DCA  0E01               	movlw	1
 10809  019DCC  6EE6               	movwf	postinc1,c
 10810  019DCE  EC2C  F0D5         	call	_eaDogM_WriteStringAtPos	;wreg free
 10811                           
 10812                           ; BSR set to: 59
 10813                           ;mconfig.c: 99:  wait_lcd_done();
 10814  019DD2  ECCD  F0E1         	call	_wait_lcd_done	;wreg free
 10815                           
 10816                           ; BSR set to: 0
 10817                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
 10818                           ;stkvar	_vterm @ sp[(0)+-1]
 10819  019DD6  0EFF               	movlw	-1
 10820  019DD8  50E3               	movf	plusw1,w,c
 10821  019DDA  0D78               	mullw	120
 10822  019DDC  0E2A               	movlw	low _D
 10823  019DDE  6E0B               	movwf	(btemp+10)^0,c
 10824  019DE0  0E08               	movlw	high _D
 10825  019DE2  6E0C               	movwf	(btemp+11)^0,c
 10826  019DE4  0E50               	movlw	80
 10827  019DE6  260B               	addwf	(btemp+10)^0,f,c
 10828  019DE8  0E00               	movlw	0
 10829  019DEA  220C               	addwfc	(btemp+11)^0,f,c
 10830  019DEC  50F3               	movf	243,w,c
 10831  019DEE  260B               	addwf	(btemp+10)^0,f,c
 10832  019DF0  50F4               	movf	244,w,c
 10833  019DF2  220C               	addwfc	(btemp+11)^0,f,c
 10834  019DF4  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10835  019DFA  0060  F033  FFE6   	movff	btemp+11,postinc1
 10836  019E00  0E00               	movlw	0
 10837  019E02  6EE6               	movwf	postinc1,c
 10838  019E04  0E02               	movlw	2
 10839  019E06  6EE6               	movwf	postinc1,c
 10840  019E08  EC2C  F0D5         	call	_eaDogM_WriteStringAtPos	;wreg free
 10841  019E0C                     l1697:
 10842                           
 10843                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 10844  019E0C  52E5               	movf	postdec1,f,c
 10845  019E0E  0012               	return		;funcret
 10846  019E10                     __end_of_update_lcd:
 10847                           	opt callstack 0
 10848                           
 10849 ;; *************** function _eaDogM_WriteStringAtPos *****************
 10850 ;; Defined at:
 10851 ;;		line 195 in file "eadog.c"
 10852 ;; Parameters:    Size  Location     Type
 10853 ;;  r               1  [STACK] const unsigned char 
 10854 ;;  c               1  [STACK] const unsigned char 
 10855 ;;  strPtr          2  [STACK] PTR unsigned char 
 10856 ;;		 -> D.lcd(480), D(482), V(191), 
 10857 ;; Auto vars:     Size  Location     Type
 10858 ;;  row             1  [STACK] unsigned char 
 10859 ;; Return value:  Size  Location     Type
 10860 ;;                  1  [STACK] void 
 10861 ;; Registers used:
 10862 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10863 ;; Tracked objects:
 10864 ;;		On entry : 3F/0
 10865 ;;		On exit  : 3F/3B
 10866 ;;		Unchanged: 0/0
 10867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10872 ;;Total ram usage:        0 bytes
 10873 ;; Hardware stack levels used:    1
 10874 ;; Hardware stack levels required when called:   26
 10875 ;; This function calls:
 10876 ;;		_eaDogM_WriteString
 10877 ;;		_send_lcd_cmd_dma
 10878 ;;		_send_lcd_data_dma
 10879 ;;		_wait_lcd_done
 10880 ;;		_wdtdelay
 10881 ;; This function is called by:
 10882 ;;		_update_lcd
 10883 ;;		_vterm_dump
 10884 ;; This function uses a reentrant model
 10885 ;;
 10886                           
 10887                           	psect	text40
 10888  01AA58                     __ptext40:
 10889                           	opt callstack 0
 10890  01AA58                     _eaDogM_WriteStringAtPos:
 10891                           	opt callstack 0
 10892                           
 10893                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10894  01AA58  52E6               	movf	postinc1,f,c
 10895                           
 10896                           ;eadog.c: 195: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 196: {;eadog.c: 197:  uint8_t row;;eadog.c: 199:  switch (r) {
 10897                           
 10898                           ;incstack = 0
 10899  01AA5A  D014               	goto	l13013
 10900  01AA5C                     l13001:
 10901                           
 10902                           ;eadog.c: 201:   row = 0x40;
 10903                           ;stkvar	_row @ sp[(-1)+0]
 10904  01AA5C  0EFF               	movlw	-1
 10905  01AA5E  6AE3               	clrf	plusw1,c
 10906  01AA60  8CE3               	bsf	plusw1,6,c
 10907                           
 10908                           ;eadog.c: 202:   break;
 10909  01AA62  D026               	goto	l13015
 10910  01AA64                     l13003:
 10911                           
 10912                           ;eadog.c: 204:   row = 0x14;
 10913                           ;stkvar	_row @ sp[(-1)+0]
 10914  01AA64  0EFF               	movlw	-1
 10915  01AA66  6AE3               	clrf	plusw1,c
 10916  01AA68  84E3               	bsf	plusw1,2,c
 10917  01AA6A  88E3               	bsf	plusw1,4,c	;indir
 10918                           
 10919                           ;eadog.c: 205:   break;
 10920  01AA6C  D021               	goto	l13015
 10921  01AA6E                     l13005:
 10922                           
 10923                           ;eadog.c: 207:   row = 0x54;
 10924  01AA6E  0E54               	movlw	84
 10925  01AA70  6E0C               	movwf	(btemp+11)^0,c
 10926                           
 10927                           ;stkvar	_row @ sp[(-1)+0]
 10928  01AA72  0EFF               	movlw	-1
 10929  01AA74  0060  F033  FFE3   	movff	btemp+11,plusw1
 10930                           
 10931                           ;eadog.c: 208:   break;
 10932  01AA7A  D01A               	goto	l13015
 10933  01AA7C                     l13007:
 10934                           
 10935                           ;eadog.c: 210:   row = 0x1;
 10936                           ;stkvar	_row @ sp[(-1)+0]
 10937  01AA7C  0EFF               	movlw	-1
 10938  01AA7E  6AE3               	clrf	plusw1,c
 10939  01AA80  2AE3               	incf	plusw1,f,c
 10940                           
 10941                           ;eadog.c: 211:   break;
 10942  01AA82  D016               	goto	l13015
 10943  01AA84                     l13013:
 10944                           
 10945                           ;stkvar	_r @ sp[(-1)+-1]
 10946  01AA84  0EFE               	movlw	-2
 10947  01AA86  50E3               	movf	plusw1,w,c
 10948  01AA88  6E0B               	movwf	(btemp+10)^0,c
 10949  01AA8A  6A0C               	clrf	(btemp+11)^0,c
 10950                           
 10951                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10952                           ; Switch size 1, requested type "simple"
 10953                           ; Number of cases is 1, Range of values is 0 to 0
 10954                           ; switch strategies available:
 10955                           ; Name         Instructions Cycles
 10956                           ; simple_byte            4     3 (average)
 10957                           ;	Chosen strategy is simple_byte
 10958  01AA8C  500C               	movf	(btemp+11)^0,w,c
 10959  01AA8E  0A00               	xorlw	0	; case 0
 10960  01AA90  A4D8               	btfss	status,2,c
 10961  01AA92  D7E4               	goto	l13001
 10962                           
 10963                           ; Switch size 1, requested type "simple"
 10964                           ; Number of cases is 4, Range of values is 0 to 3
 10965                           ; switch strategies available:
 10966                           ; Name         Instructions Cycles
 10967                           ; simple_byte           13     7 (average)
 10968                           ;	Chosen strategy is simple_byte
 10969  01AA94  500B               	movf	(btemp+10)^0,w,c
 10970  01AA96  0A00               	xorlw	0	; case 0
 10971  01AA98  B4D8               	btfsc	status,2,c
 10972  01AA9A  D7E0               	goto	l13001
 10973  01AA9C  0A01               	xorlw	1	; case 1
 10974  01AA9E  B4D8               	btfsc	status,2,c
 10975  01AAA0  D7E1               	goto	l13003
 10976  01AAA2  0A03               	xorlw	3	; case 2
 10977  01AAA4  B4D8               	btfsc	status,2,c
 10978  01AAA6  D7E3               	goto	l13005
 10979  01AAA8  0A01               	xorlw	1	; case 3
 10980  01AAAA  B4D8               	btfsc	status,2,c
 10981  01AAAC  D7E7               	goto	l13007
 10982  01AAAE  D7D6               	goto	l13001
 10983  01AAB0                     l13015:
 10984                           
 10985                           ;eadog.c: 216:  send_lcd_cmd_dma(0x45);
 10986  01AAB0  0E45               	movlw	69
 10987  01AAB2  6EE6               	movwf	postinc1,c
 10988  01AAB4  EC91  F0E1         	call	_send_lcd_cmd_dma	;wreg free
 10989                           
 10990                           ;eadog.c: 217:  send_lcd_data_dma(row + c);
 10991                           ;stkvar	_c @ sp[(-1)+-2]
 10992  01AAB8  0EFD               	movlw	-3
 10993  01AABA  006F FF8C  F00C    	movff	plusw1,btemp+11
 10994                           
 10995                           ;stkvar	_row @ sp[(-1)+0]
 10996  01AAC0  0EFF               	movlw	-1
 10997  01AAC2  50E3               	movf	plusw1,w,c
 10998  01AAC4  240C               	addwf	(btemp+11)^0,w,c
 10999  01AAC6  6EE6               	movwf	postinc1,c
 11000  01AAC8  ECA0  F0DB         	call	_send_lcd_data_dma	;wreg free
 11001                           
 11002                           ; BSR set to: 59
 11003                           ;eadog.c: 218:  wait_lcd_done();
 11004  01AACC  ECCD  F0E1         	call	_wait_lcd_done	;wreg free
 11005                           
 11006                           ; BSR set to: 0
 11007                           ;eadog.c: 219:  wdtdelay(8);
 11008  01AAD0  0E08               	movlw	8
 11009  01AAD2  6EE6               	movwf	postinc1,c
 11010  01AAD4  0E00               	movlw	0
 11011  01AAD6  6EE6               	movwf	postinc1,c
 11012  01AAD8  0E00               	movlw	0
 11013  01AADA  6EE6               	movwf	postinc1,c
 11014  01AADC  0E00               	movlw	0
 11015  01AADE  6EE6               	movwf	postinc1,c
 11016  01AAE0  ECCD  F0DA         	call	_wdtdelay	;wreg free
 11017                           
 11018                           ;eadog.c: 220:  eaDogM_WriteString(strPtr);
 11019                           ;stkvar	_strPtr @ sp[(-1)+-4]
 11020  01AAE4  0EFB               	movlw	-5
 11021  01AAE6  006F FF8F FFE6     	movff	plusw1,postinc1
 11022  01AAEC  006F FF8F FFE6     	movff	plusw1,postinc1
 11023  01AAF2  EC80  F0D5         	call	_eaDogM_WriteString	;wreg free
 11024                           
 11025                           ; BSR set to: 59
 11026                           ; _eaDogM_WriteStringAtPos: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
 11027  01AAF6  0EFB               	movlw	251
 11028  01AAF8  26E1               	addwf	fsr1l,f,c
 11029  01AAFA  0EFF               	movlw	255
 11030  01AAFC  22E2               	addwfc	fsr1h,f,c
 11031  01AAFE  0012               	return		;funcret
 11032  01AB00                     __end_of_eaDogM_WriteStringAtPos:
 11033                           	opt callstack 0
 11034                           
 11035 ;; *************** function _send_lcd_cmd_dma *****************
 11036 ;; Defined at:
 11037 ;;		line 171 in file "eadog.c"
 11038 ;; Parameters:    Size  Location     Type
 11039 ;;  strPtr          1  [STACK] const unsigned char 
 11040 ;; Auto vars:     Size  Location     Type
 11041 ;;		None
 11042 ;; Return value:  Size  Location     Type
 11043 ;;                  1  [STACK] void 
 11044 ;; Registers used:
 11045 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11046 ;; Tracked objects:
 11047 ;;		On entry : 0/3D
 11048 ;;		On exit  : 3F/0
 11049 ;;		Unchanged: 0/0
 11050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11054 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11055 ;;Total ram usage:        0 bytes
 11056 ;; Hardware stack levels used:    1
 11057 ;; Hardware stack levels required when called:   25
 11058 ;; This function calls:
 11059 ;;		_send_lcd_data_dma
 11060 ;;		_wait_lcd_done
 11061 ;; This function is called by:
 11062 ;;		_eaDogM_WriteStringAtPos
 11063 ;;		_eaDogM_WriteCommand
 11064 ;; This function uses a reentrant model
 11065 ;;
 11066                           
 11067                           	psect	text41
 11068  01C322                     __ptext41:
 11069                           	opt callstack 0
 11070  01C322                     _send_lcd_cmd_dma:
 11071                           	opt callstack 3
 11072                           
 11073                           ;eadog.c: 171: void send_lcd_cmd_dma(const uint8_t strPtr);eadog.c: 172: {;eadog.c: 173:
      +                            send_lcd_data_dma(0xFE);
 11074                           
 11075                           ; BSR set to: 59
 11076                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11077                           ;incstack = 0
 11078  01C322  0EFE               	movlw	254
 11079  01C324  6EE6               	movwf	postinc1,c
 11080  01C326  ECA0  F0DB         	call	_send_lcd_data_dma	;wreg free
 11081                           
 11082                           ; BSR set to: 59
 11083                           ;eadog.c: 174:  wait_lcd_done();
 11084  01C32A  ECCD  F0E1         	call	_wait_lcd_done	;wreg free
 11085                           
 11086                           ; BSR set to: 0
 11087                           ;eadog.c: 175:  send_lcd_data_dma(strPtr);
 11088                           ;stkvar	_strPtr @ sp[(0)+-1]
 11089  01C32E  0EFF               	movlw	-1
 11090  01C330  50E3               	movf	plusw1,w,c
 11091  01C332  6EE6               	movwf	postinc1,c
 11092  01C334  ECA0  F0DB         	call	_send_lcd_data_dma	;wreg free
 11093                           
 11094                           ;eadog.c: 176:  wait_lcd_done();
 11095  01C338  ECCD  F0E1         	call	_wait_lcd_done	;wreg free
 11096                           
 11097                           ; BSR set to: 0
 11098                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 11099  01C33C  52E5               	movf	postdec1,f,c
 11100  01C33E  0012               	return		;funcret
 11101  01C340                     __end_of_send_lcd_cmd_dma:
 11102                           	opt callstack 0
 11103                           
 11104 ;; *************** function _wait_lcd_done *****************
 11105 ;; Defined at:
 11106 ;;		line 444 in file "eadog.c"
 11107 ;; Parameters:    Size  Location     Type
 11108 ;;		None
 11109 ;; Auto vars:     Size  Location     Type
 11110 ;;		None
 11111 ;; Return value:  Size  Location     Type
 11112 ;;                  1  [STACK] void 
 11113 ;; Registers used:
 11114 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 11115 ;; Tracked objects:
 11116 ;;		On entry : 0/1
 11117 ;;		On exit  : 3F/0
 11118 ;;		Unchanged: 0/0
 11119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11123 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11124 ;;Total ram usage:        0 bytes
 11125 ;; Hardware stack levels used:    1
 11126 ;; Hardware stack levels required when called:   16
 11127 ;; This function calls:
 11128 ;;		_wdtdelay
 11129 ;; This function is called by:
 11130 ;;		_main
 11131 ;;		_send_lcd_cmd_dma
 11132 ;;		_eaDogM_WriteStringAtPos
 11133 ;;		_update_lcd
 11134 ;;		_vterm_dump
 11135 ;; This function uses a reentrant model
 11136 ;;
 11137                           
 11138                           	psect	text42
 11139  01C39A                     __ptext42:
 11140                           	opt callstack 0
 11141  01C39A                     _wait_lcd_done:
 11142                           	opt callstack 14
 11143                           
 11144                           ;eadog.c: 446:  while (spi_link.LCD_DATA);
 11145                           
 11146                           ; BSR set to: 0
 11147                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11148                           ;incstack = 0
 11149  01C39A  0101               	movlb	1	; () banked
 11150  01C39C  B7CD               	btfsc	_spi_link& (0+255),3,b	;volatile
 11151  01C39E  D7FD               	goto	_wait_lcd_done
 11152                           
 11153                           ; BSR set to: 1
 11154                           ;eadog.c: 447:  wdtdelay(50);
 11155  01C3A0  0E32               	movlw	50
 11156  01C3A2  6EE6               	movwf	postinc1,c
 11157  01C3A4  0E00               	movlw	0
 11158  01C3A6  6EE6               	movwf	postinc1,c
 11159  01C3A8  0E00               	movlw	0
 11160  01C3AA  6EE6               	movwf	postinc1,c
 11161  01C3AC  0E00               	movlw	0
 11162  01C3AE  6EE6               	movwf	postinc1,c
 11163  01C3B0  ECCD  F0DA         	call	_wdtdelay	;wreg free
 11164                           
 11165                           ; BSR set to: 0
 11166                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 11167  01C3B4  0012               	return		;funcret
 11168  01C3B6                     __end_of_wait_lcd_done:
 11169                           	opt callstack 0
 11170                           
 11171 ;; *************** function _wdtdelay *****************
 11172 ;; Defined at:
 11173 ;;		line 23 in file "eadog.c"
 11174 ;; Parameters:    Size  Location     Type
 11175 ;;  delay           4  [STACK] const unsigned long 
 11176 ;; Auto vars:     Size  Location     Type
 11177 ;;		None
 11178 ;; Return value:  Size  Location     Type
 11179 ;;                  1  [STACK] void 
 11180 ;; Registers used:
 11181 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 11182 ;; Tracked objects:
 11183 ;;		On entry : 2/3D
 11184 ;;		On exit  : 3F/0
 11185 ;;		Unchanged: 0/0
 11186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11191 ;;Total ram usage:        0 bytes
 11192 ;; Hardware stack levels used:    1
 11193 ;; Hardware stack levels required when called:   15
 11194 ;; This function calls:
 11195 ;;		Nothing
 11196 ;; This function is called by:
 11197 ;;		_init_display
 11198 ;;		_send_lcd_data
 11199 ;;		_send_lcd_cmd
 11200 ;;		_send_lcd_cmd_long
 11201 ;;		_eaDogM_WriteStringAtPos
 11202 ;;		_wait_lcd_done
 11203 ;; This function uses a reentrant model
 11204 ;;
 11205                           
 11206                           	psect	text43
 11207  01B59A                     __ptext43:
 11208                           	opt callstack 0
 11209  01B59A                     _wdtdelay:
 11210                           	opt callstack 14
 11211                           
 11212                           ;eadog.c: 23: void wdtdelay(const uint32_t delay);eadog.c: 24: {;eadog.c: 25:  static ui
      +                          nt32_t dcount;;eadog.c: 27:  for (dcount = 0; dcount <= delay; dcount++) {
 11213                           
 11214                           ; BSR set to: 0
 11215                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11216                           ;incstack = 0
 11217  01B59A  0100               	movlb	0	; () banked
 11218  01B59C  6B78               	clrf	wdtdelay@dcount& (0+255),b
 11219  01B59E  6B79               	clrf	(wdtdelay@dcount+1)& (0+255),b
 11220  01B5A0  6B7A               	clrf	(wdtdelay@dcount+2)& (0+255),b
 11221  01B5A2  6B7B               	clrf	(wdtdelay@dcount+3)& (0+255),b
 11222  01B5A4                     l1477:
 11223                           
 11224                           ; BSR set to: 0
 11225                           ;eadog.c: 28:   __nop();
 11226  01B5A4  F000               	nop	
 11227  01B5A6  0004               	clrwdt		;# 
 11228                           
 11229                           ;eadog.c: 30:  };
 11230  01B5A8  0E01               	movlw	1
 11231  01B5AA  0100               	movlb	0	; () banked
 11232  01B5AC  2778               	addwf	wdtdelay@dcount& (0+255),f,b
 11233  01B5AE  0E00               	movlw	0
 11234  01B5B0  2379               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
 11235  01B5B2  237A               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
 11236  01B5B4  237B               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
 11237                           
 11238                           ; BSR set to: 0
 11239                           ;stkvar	_delay @ sp[(0)+-4]
 11240  01B5B6  0EFC               	movlw	-4
 11241  01B5B8  006F FF8C  F001    	movff	plusw1,btemp
 11242  01B5BE  5178               	movf	wdtdelay@dcount& (0+255),w,b
 11243  01B5C0  5C01               	subwf	btemp^0,w,c
 11244  01B5C2  0EFD               	movlw	-3
 11245  01B5C4  006F FF8C  F001    	movff	plusw1,btemp
 11246  01B5CA  5179               	movf	(wdtdelay@dcount+1)& (0+255),w,b
 11247  01B5CC  5801               	subwfb	btemp^0,w,c
 11248  01B5CE  0EFE               	movlw	-2
 11249  01B5D0  006F FF8C  F001    	movff	plusw1,btemp
 11250  01B5D6  517A               	movf	(wdtdelay@dcount+2)& (0+255),w,b
 11251  01B5D8  5801               	subwfb	btemp^0,w,c
 11252  01B5DA  0EFF               	movlw	-1
 11253  01B5DC  006F FF8C  F001    	movff	plusw1,btemp
 11254  01B5E2  517B               	movf	(wdtdelay@dcount+3)& (0+255),w,b
 11255  01B5E4  5801               	subwfb	btemp^0,w,c
 11256  01B5E6  B0D8               	btfsc	status,0,c
 11257  01B5E8  D7DD               	goto	l1477
 11258                           
 11259                           ; BSR set to: 0
 11260                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
 11261  01B5EA  52E5               	movf	postdec1,f,c
 11262  01B5EC  52E5               	movf	postdec1,f,c
 11263  01B5EE  52E5               	movf	postdec1,f,c
 11264  01B5F0  52E5               	movf	postdec1,f,c
 11265  01B5F2  0012               	return		;funcret
 11266  01B5F4                     __end_of_wdtdelay:
 11267                           	opt callstack 0
 11268                           
 11269 ;; *************** function _send_lcd_data_dma *****************
 11270 ;; Defined at:
 11271 ;;		line 182 in file "eadog.c"
 11272 ;; Parameters:    Size  Location     Type
 11273 ;;  strPtr          1  [STACK] const unsigned char 
 11274 ;; Auto vars:     Size  Location     Type
 11275 ;;		None
 11276 ;; Return value:  Size  Location     Type
 11277 ;;                  1  [STACK] void 
 11278 ;; Registers used:
 11279 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11280 ;; Tracked objects:
 11281 ;;		On entry : 0/0
 11282 ;;		On exit  : 3F/3B
 11283 ;;		Unchanged: 0/0
 11284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11289 ;;Total ram usage:        0 bytes
 11290 ;; Hardware stack levels used:    1
 11291 ;; Hardware stack levels required when called:   24
 11292 ;; This function calls:
 11293 ;;		_printf
 11294 ;;		_ringBufS_flush
 11295 ;;		_start_lcd
 11296 ;;		_wait_lcd_set
 11297 ;; This function is called by:
 11298 ;;		_send_lcd_cmd_dma
 11299 ;;		_eaDogM_WriteStringAtPos
 11300 ;; This function uses a reentrant model
 11301 ;;
 11302                           
 11303                           	psect	text44
 11304  01B740                     __ptext44:
 11305                           	opt callstack 0
 11306  01B740                     _send_lcd_data_dma:
 11307                           	opt callstack 4
 11308                           
 11309                           ;eadog.c: 182: void send_lcd_data_dma(const uint8_t strPtr);eadog.c: 183: {;eadog.c: 184
      +                          :  wait_lcd_set();
 11310                           
 11311                           ; BSR set to: 0
 11312                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11313                           ;incstack = 0
 11314  01B740  ECBA  F0E2         	call	_wait_lcd_set	;wreg free
 11315                           
 11316                           ; BSR set to: 1
 11317                           ;eadog.c: 186:  ringBufS_flush(spi_link.tx1a, 0);
 11318  01B744  0E00               	movlw	0
 11319  01B746  6EE6               	movwf	postinc1,c
 11320  01B748  0060  F74F  FFE6   	movff	_spi_link+6,postinc1
 11321  01B74E  0060  F753  FFE6   	movff	_spi_link+7,postinc1
 11322  01B754  ECC1  F0D6         	call	_ringBufS_flush	;wreg free
 11323  01B758  94BC               	bcf	188,2,c	;volatile
 11324                           
 11325                           ;eadog.c: 188:  DMA1CON0bits.EN = 0;
 11326  01B75A  013B               	movlb	59	; () banked
 11327  01B75C  9FFC               	bcf	252,7,b	;volatile
 11328                           
 11329                           ; BSR set to: 59
 11330                           ;eadog.c: 189:  DMA1SSZ = 1;
 11331  01B75E  0E00               	movlw	0
 11332  01B760  6FF8               	movwf	248,b	;volatile
 11333  01B762  0E01               	movlw	1
 11334  01B764  6FF7               	movwf	247,b	;volatile
 11335                           
 11336                           ; BSR set to: 59
 11337                           ;eadog.c: 190:  DMA1CON0bits.EN = 1;
 11338  01B766  8FFC               	bsf	252,7,b	;volatile
 11339                           
 11340                           ; BSR set to: 59
 11341                           ;eadog.c: 191:  printf("%c", strPtr);
 11342                           ;stkvar	_strPtr @ sp[(0)+-1]
 11343  01B768  0EFF               	movlw	-1
 11344  01B76A  50E3               	movf	plusw1,w,c
 11345  01B76C  6EE6               	movwf	postinc1,c
 11346  01B76E  0E00               	movlw	0
 11347  01B770  6EE6               	movwf	postinc1,c
 11348  01B772  0EF9               	movlw	low STR_44
 11349  01B774  6EE6               	movwf	postinc1,c
 11350  01B776  0EFF               	movlw	high STR_44
 11351  01B778  6EE6               	movwf	postinc1,c
 11352  01B77A  0E04               	movlw	4
 11353  01B77C  6EE6               	movwf	postinc1,c
 11354  01B77E  EC0E  F0DA         	call	_printf	;wreg free
 11355                           
 11356                           ; BSR set to: 0
 11357                           ;eadog.c: 192:  start_lcd();
 11358  01B782  ECBD  F0E2         	call	_start_lcd	;wreg free
 11359                           
 11360                           ; BSR set to: 59
 11361                           ; _send_lcd_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 11362  01B786  52E5               	movf	postdec1,f,c
 11363  01B788  0012               	return		;funcret
 11364  01B78A                     __end_of_send_lcd_data_dma:
 11365                           	opt callstack 0
 11366                           
 11367 ;; *************** function _eaDogM_WriteString *****************
 11368 ;; Defined at:
 11369 ;;		line 151 in file "eadog.c"
 11370 ;; Parameters:    Size  Location     Type
 11371 ;;  strPtr          2  [STACK] PTR unsigned char 
 11372 ;;		 -> D.lcd(480), D(482), V(191), 
 11373 ;; Auto vars:     Size  Location     Type
 11374 ;;		None
 11375 ;; Return value:  Size  Location     Type
 11376 ;;                  1  [STACK] void 
 11377 ;; Registers used:
 11378 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11379 ;; Tracked objects:
 11380 ;;		On entry : 3F/0
 11381 ;;		On exit  : 3F/3B
 11382 ;;		Unchanged: 0/0
 11383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11388 ;;Total ram usage:        0 bytes
 11389 ;; Hardware stack levels used:    1
 11390 ;; Hardware stack levels required when called:   24
 11391 ;; This function calls:
 11392 ;;		_printf
 11393 ;;		_ringBufS_flush
 11394 ;;		_start_lcd
 11395 ;;		_strlen
 11396 ;;		_wait_lcd_set
 11397 ;; This function is called by:
 11398 ;;		_eaDogM_WriteStringAtPos
 11399 ;; This function uses a reentrant model
 11400 ;;
 11401                           
 11402                           	psect	text45
 11403  01AB00                     __ptext45:
 11404                           	opt callstack 0
 11405  01AB00                     _eaDogM_WriteString:
 11406                           	opt callstack 4
 11407                           
 11408                           ;eadog.c: 151: void eaDogM_WriteString(char *strPtr);eadog.c: 152: {;eadog.c: 153:  wait
      +                          _lcd_set();
 11409                           
 11410                           ; BSR set to: 59
 11411                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11412                           ;incstack = 0
 11413  01AB00  ECBA  F0E2         	call	_wait_lcd_set	;wreg free
 11414                           
 11415                           ; BSR set to: 1
 11416                           ;eadog.c: 155:  ringBufS_flush(spi_link.tx1a, 0);
 11417  01AB04  0E00               	movlw	0
 11418  01AB06  6EE6               	movwf	postinc1,c
 11419  01AB08  0060  F74F  FFE6   	movff	_spi_link+6,postinc1
 11420  01AB0E  0060  F753  FFE6   	movff	_spi_link+7,postinc1
 11421  01AB14  ECC1  F0D6         	call	_ringBufS_flush	;wreg free
 11422  01AB18  94BC               	bcf	188,2,c	;volatile
 11423                           
 11424                           ;eadog.c: 157:  if (strlen(strPtr) > 64) strPtr[64] = 0;
 11425                           ;stkvar	_strPtr @ sp[(0)+-2]
 11426  01AB1A  0EFE               	movlw	-2
 11427  01AB1C  006F FF8F FFE6     	movff	plusw1,postinc1
 11428  01AB22  006F FF8F FFE6     	movff	plusw1,postinc1
 11429  01AB28  EC24  F0D6         	call	_strlen	;wreg free
 11430  01AB2C  5002               	movf	(btemp+1)^0,w,c
 11431  01AB2E  E104               	bnz	u12420
 11432  01AB30  0E41               	movlw	65
 11433  01AB32  5C01               	subwf	btemp^0,w,c
 11434  01AB34  A0D8               	btfss	status,0,c
 11435  01AB36  D010               	goto	l12957
 11436  01AB38                     u12420:
 11437                           
 11438                           ;stkvar	_strPtr @ sp[(0)+-2]
 11439  01AB38  0EFE               	movlw	-2
 11440  01AB3A  006F FF8C  F00B    	movff	plusw1,btemp+10
 11441  01AB40  0EFF               	movlw	-1
 11442  01AB42  006F FF8C  F00C    	movff	plusw1,btemp+11
 11443  01AB48  0E40               	movlw	64
 11444  01AB4A  240B               	addwf	(btemp+10)^0,w,c
 11445  01AB4C  6ED9               	movwf	fsr2l,c
 11446  01AB4E  0E00               	movlw	0
 11447  01AB50  200C               	addwfc	(btemp+11)^0,w,c
 11448  01AB52  6EDA               	movwf	fsr2h,c
 11449  01AB54  0E00               	movlw	0
 11450  01AB56  6EDF               	movwf	indf2,c
 11451  01AB58                     l12957:
 11452                           
 11453                           ;eadog.c: 158:  DMA1CON0bits.EN = 0;
 11454  01AB58  013B               	movlb	59	; () banked
 11455  01AB5A  9FFC               	bcf	252,7,b	;volatile
 11456                           
 11457                           ; BSR set to: 59
 11458                           ;eadog.c: 159:  DMA1SSZ = strlen(strPtr);
 11459                           ;stkvar	_strPtr @ sp[(0)+-2]
 11460  01AB5C  0EFE               	movlw	-2
 11461  01AB5E  006F FF8F FFE6     	movff	plusw1,postinc1
 11462  01AB64  006F FF8F FFE6     	movff	plusw1,postinc1
 11463  01AB6A  EC24  F0D6         	call	_strlen	;wreg free
 11464  01AB6E  0060  F007  FBF7   	movff	btemp,15351	;volatile
 11465  01AB74  0060  F00B  FBF8   	movff	btemp+1,15352	;volatile
 11466                           
 11467                           ;eadog.c: 160:  DMA1CON0bits.EN = 1;
 11468  01AB7A  013B               	movlb	59	; () banked
 11469  01AB7C  8FFC               	bsf	252,7,b	;volatile
 11470                           
 11471                           ; BSR set to: 59
 11472                           ;eadog.c: 161:  printf("%s", strPtr);
 11473                           ;stkvar	_strPtr @ sp[(0)+-2]
 11474  01AB7E  0EFE               	movlw	-2
 11475  01AB80  006F FF8F FFE6     	movff	plusw1,postinc1
 11476  01AB86  006F FF8F FFE6     	movff	plusw1,postinc1
 11477  01AB8C  0EFC               	movlw	low STR_43
 11478  01AB8E  6EE6               	movwf	postinc1,c
 11479  01AB90  0EFF               	movlw	high STR_43
 11480  01AB92  6EE6               	movwf	postinc1,c
 11481  01AB94  0E04               	movlw	4
 11482  01AB96  6EE6               	movwf	postinc1,c
 11483  01AB98  EC0E  F0DA         	call	_printf	;wreg free
 11484                           
 11485                           ; BSR set to: 0
 11486                           ;eadog.c: 162:  start_lcd();
 11487  01AB9C  ECBD  F0E2         	call	_start_lcd	;wreg free
 11488                           
 11489                           ; BSR set to: 59
 11490                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 11491  01ABA0  52E5               	movf	postdec1,f,c
 11492  01ABA2  52E5               	movf	postdec1,f,c
 11493  01ABA4  0012               	return		;funcret
 11494  01ABA6                     __end_of_eaDogM_WriteString:
 11495                           	opt callstack 0
 11496                           
 11497 ;; *************** function _wait_lcd_set *****************
 11498 ;; Defined at:
 11499 ;;		line 434 in file "eadog.c"
 11500 ;; Parameters:    Size  Location     Type
 11501 ;;		None
 11502 ;; Auto vars:     Size  Location     Type
 11503 ;;		None
 11504 ;; Return value:  Size  Location     Type
 11505 ;;                  1  [STACK] void 
 11506 ;; Registers used:
 11507 ;;		None
 11508 ;; Tracked objects:
 11509 ;;		On entry : 0/0
 11510 ;;		On exit  : 3F/1
 11511 ;;		Unchanged: 0/0
 11512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11517 ;;Total ram usage:        0 bytes
 11518 ;; Hardware stack levels used:    1
 11519 ;; Hardware stack levels required when called:   15
 11520 ;; This function calls:
 11521 ;;		Nothing
 11522 ;; This function is called by:
 11523 ;;		_eaDogM_WriteString
 11524 ;;		_send_lcd_data_dma
 11525 ;; This function uses a reentrant model
 11526 ;;
 11527                           
 11528                           	psect	text46
 11529  01C574                     __ptext46:
 11530                           	opt callstack 0
 11531  01C574                     _wait_lcd_set:
 11532                           	opt callstack 12
 11533                           
 11534                           ;eadog.c: 436:  spi_link.LCD_DATA = 1;
 11535                           
 11536                           ; BSR set to: 59
 11537                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11538                           ;incstack = 0
 11539  01C574  0101               	movlb	1	; () banked
 11540  01C576  87CD               	bsf	_spi_link& (0+255),3,b	;volatile
 11541                           
 11542                           ; BSR set to: 1
 11543                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 11544  01C578  0012               	return		;funcret
 11545  01C57A                     __end_of_wait_lcd_set:
 11546                           	opt callstack 0
 11547                           
 11548 ;; *************** function _start_lcd *****************
 11549 ;; Defined at:
 11550 ;;		line 429 in file "eadog.c"
 11551 ;; Parameters:    Size  Location     Type
 11552 ;;		None
 11553 ;; Auto vars:     Size  Location     Type
 11554 ;;		None
 11555 ;; Return value:  Size  Location     Type
 11556 ;;                  1  [STACK] void 
 11557 ;; Registers used:
 11558 ;;		None
 11559 ;; Tracked objects:
 11560 ;;		On entry : 3F/0
 11561 ;;		On exit  : 3F/3B
 11562 ;;		Unchanged: 0/0
 11563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11567 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11568 ;;Total ram usage:        0 bytes
 11569 ;; Hardware stack levels used:    1
 11570 ;; Hardware stack levels required when called:   15
 11571 ;; This function calls:
 11572 ;;		Nothing
 11573 ;; This function is called by:
 11574 ;;		_eaDogM_WriteString
 11575 ;;		_send_lcd_data_dma
 11576 ;; This function uses a reentrant model
 11577 ;;
 11578                           
 11579                           	psect	text47
 11580  01C57A                     __ptext47:
 11581                           	opt callstack 0
 11582  01C57A                     _start_lcd:
 11583                           	opt callstack 12
 11584                           
 11585                           ;eadog.c: 431:  DMA1CON0bits.DMA1SIRQEN = 1;
 11586                           
 11587                           ; BSR set to: 1
 11588                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11589                           ;incstack = 0
 11590  01C57A  013B               	movlb	59	; () banked
 11591  01C57C  8DFC               	bsf	252,6,b	;volatile
 11592                           
 11593                           ; BSR set to: 59
 11594                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 11595  01C57E  0012               	return		;funcret
 11596  01C580                     __end_of_start_lcd:
 11597                           	opt callstack 0
 11598                           
 11599 ;; *************** function _ringBufS_flush *****************
 11600 ;; Defined at:
 11601 ;;		line 76 in file "ringbufs.c"
 11602 ;; Parameters:    Size  Location     Type
 11603 ;;  _this           2  [STACK] PTR struct ringBufS_t
 11604 ;;		 -> ring_buf1(67), 
 11605 ;;  clearBuffer     1  [STACK] const char 
 11606 ;; Auto vars:     Size  Location     Type
 11607 ;;		None
 11608 ;; Return value:  Size  Location     Type
 11609 ;;                  1  [STACK] void 
 11610 ;; Registers used:
 11611 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 11612 ;; Tracked objects:
 11613 ;;		On entry : 3F/1
 11614 ;;		On exit  : 0/0
 11615 ;;		Unchanged: 0/0
 11616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11620 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11621 ;;Total ram usage:        0 bytes
 11622 ;; Hardware stack levels used:    1
 11623 ;; Hardware stack levels required when called:   16
 11624 ;; This function calls:
 11625 ;;		_memset
 11626 ;; This function is called by:
 11627 ;;		_eaDogM_WriteString
 11628 ;;		_send_lcd_data_dma
 11629 ;; This function uses a reentrant model
 11630 ;;
 11631                           
 11632                           	psect	text48
 11633  01AD82                     __ptext48:
 11634                           	opt callstack 0
 11635  01AD82                     _ringBufS_flush:
 11636                           	opt callstack 11
 11637                           
 11638                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
 11639                           ;stkvar	__this @ sp[(0)+-2]
 11640                           
 11641                           ; BSR set to: 59
 11642                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11643                           ;incstack = 0
 11644  01AD82  0EFE               	movlw	-2
 11645  01AD84  006F FF8C  F00B    	movff	plusw1,btemp+10
 11646  01AD8A  0EFF               	movlw	-1
 11647  01AD8C  006F FF8C  F00C    	movff	plusw1,btemp+11
 11648  01AD92  0E42               	movlw	66
 11649  01AD94  240B               	addwf	(btemp+10)^0,w,c
 11650  01AD96  6ED9               	movwf	fsr2l,c
 11651  01AD98  0E00               	movlw	0
 11652  01AD9A  200C               	addwfc	(btemp+11)^0,w,c
 11653  01AD9C  6EDA               	movwf	fsr2h,c
 11654  01AD9E  0E00               	movlw	0
 11655  01ADA0  6EDF               	movwf	indf2,c
 11656                           
 11657                           ;ringbufs.c: 79:  _this->head = 0;
 11658                           ;stkvar	__this @ sp[(0)+-2]
 11659  01ADA2  0EFE               	movlw	-2
 11660  01ADA4  006F FF8C  F00B    	movff	plusw1,btemp+10
 11661  01ADAA  0EFF               	movlw	-1
 11662  01ADAC  006F FF8C  F00C    	movff	plusw1,btemp+11
 11663  01ADB2  0E40               	movlw	64
 11664  01ADB4  240B               	addwf	(btemp+10)^0,w,c
 11665  01ADB6  6ED9               	movwf	fsr2l,c
 11666  01ADB8  0E00               	movlw	0
 11667  01ADBA  200C               	addwfc	(btemp+11)^0,w,c
 11668  01ADBC  6EDA               	movwf	fsr2h,c
 11669  01ADBE  0E00               	movlw	0
 11670  01ADC0  6EDF               	movwf	indf2,c
 11671                           
 11672                           ;ringbufs.c: 80:  _this->tail = 0;
 11673                           ;stkvar	__this @ sp[(0)+-2]
 11674  01ADC2  0EFE               	movlw	-2
 11675  01ADC4  006F FF8C  F00B    	movff	plusw1,btemp+10
 11676  01ADCA  0EFF               	movlw	-1
 11677  01ADCC  006F FF8C  F00C    	movff	plusw1,btemp+11
 11678  01ADD2  0E41               	movlw	65
 11679  01ADD4  240B               	addwf	(btemp+10)^0,w,c
 11680  01ADD6  6ED9               	movwf	fsr2l,c
 11681  01ADD8  0E00               	movlw	0
 11682  01ADDA  200C               	addwfc	(btemp+11)^0,w,c
 11683  01ADDC  6EDA               	movwf	fsr2h,c
 11684  01ADDE  0E00               	movlw	0
 11685  01ADE0  6EDF               	movwf	indf2,c
 11686                           
 11687                           ;ringbufs.c: 81:  if (clearBuffer) {
 11688                           ;stkvar	_clearBuffer @ sp[(0)+-3]
 11689  01ADE2  0EFD               	movlw	-3
 11690  01ADE4  50E3               	movf	plusw1,w,c
 11691  01ADE6  B4D8               	btfsc	status,2,c
 11692  01ADE8  D011               	goto	l1606
 11693                           
 11694                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
 11695  01ADEA  0E40               	movlw	64
 11696  01ADEC  6EE6               	movwf	postinc1,c
 11697  01ADEE  0E00               	movlw	0
 11698  01ADF0  6EE6               	movwf	postinc1,c
 11699  01ADF2  0E00               	movlw	0
 11700  01ADF4  6EE6               	movwf	postinc1,c
 11701  01ADF6  0E00               	movlw	0
 11702  01ADF8  6EE6               	movwf	postinc1,c
 11703                           
 11704                           ;stkvar	__this @ sp[(-4)+-2]
 11705  01ADFA  0EFA               	movlw	-6
 11706  01ADFC  006F FF8F FFE6     	movff	plusw1,postinc1
 11707  01AE02  006F FF8F FFE6     	movff	plusw1,postinc1
 11708  01AE08  EC40  F0B7         	call	_memset	;wreg free
 11709  01AE0C                     l1606:
 11710                           
 11711                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
 11712  01AE0C  52E5               	movf	postdec1,f,c
 11713  01AE0E  52E5               	movf	postdec1,f,c
 11714  01AE10  52E5               	movf	postdec1,f,c
 11715  01AE12  0012               	return		;funcret
 11716  01AE14                     __end_of_ringBufS_flush:
 11717                           	opt callstack 0
 11718                           
 11719 ;; *************** function _memset *****************
 11720 ;; Defined at:
 11721 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
 11722 ;; Parameters:    Size  Location     Type
 11723 ;;  dest            2  [STACK] PTR void 
 11724 ;;		 -> ring_buf2(67), ring_buf1(67), 
 11725 ;;  c               2  [STACK] int 
 11726 ;;  n               2  [STACK] unsigned int 
 11727 ;; Auto vars:     Size  Location     Type
 11728 ;;  s               2  [STACK] PTR unsigned char 
 11729 ;;		 -> ring_buf2(67), ring_buf1(67), 
 11730 ;;  k               2  [STACK] unsigned int 
 11731 ;; Return value:  Size  Location     Type
 11732 ;;                  2  [STACK] PTR void 
 11733 ;; Registers used:
 11734 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 11735 ;; Tracked objects:
 11736 ;;		On entry : 0/1
 11737 ;;		On exit  : 0/0
 11738 ;;		Unchanged: 0/0
 11739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11743 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11744 ;;Total ram usage:        0 bytes
 11745 ;; Hardware stack levels used:    1
 11746 ;; Hardware stack levels required when called:   15
 11747 ;; This function calls:
 11748 ;;		Nothing
 11749 ;; This function is called by:
 11750 ;;		_ringBufS_init
 11751 ;;		_ringBufS_flush
 11752 ;; This function uses a reentrant model
 11753 ;;
 11754                           
 11755                           	psect	text49
 11756  016E80                     __ptext49:
 11757                           	opt callstack 0
 11758  016E80                     _memset:
 11759                           	opt callstack 0
 11760                           
 11761                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11762  016E80  52E6               	movf	postinc1,f,c
 11763  016E82  52E6               	movf	postinc1,f,c
 11764  016E84  52E6               	movf	postinc1,f,c
 11765  016E86  52E6               	movf	postinc1,f,c
 11766                           
 11767                           ;stkvar	_dest @ sp[(-4)+-2]
 11768                           
 11769                           ;incstack = 0
 11770  016E88  0EFA               	movlw	-6
 11771  016E8A  006F FF8C  F00B    	movff	plusw1,btemp+10
 11772  016E90  0EFB               	movlw	-5
 11773  016E92  006F FF8C  F00C    	movff	plusw1,btemp+11
 11774                           
 11775                           ;stkvar	_s @ sp[(-4)+0]
 11776  016E98  0EFD               	movlw	-3
 11777  016E9A  0060  F033  FFE3   	movff	btemp+11,plusw1
 11778  016EA0  0EFC               	movlw	-4
 11779  016EA2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11780                           
 11781                           ;stkvar	_n @ sp[(-4)+-6]
 11782  016EA8  0EF6               	movlw	-10
 11783  016EAA  006F FF8C  F001    	movff	plusw1,btemp
 11784  016EB0  0EF7               	movlw	-9
 11785  016EB2  50E3               	movf	plusw1,w,c
 11786  016EB4  1001               	iorwf	btemp^0,w,c
 11787  016EB6  B4D8               	btfsc	status,2,c
 11788  016EB8  D154               	goto	u10970
 11789                           
 11790                           ;stkvar	_c @ sp[(-4)+-4]
 11791                           ;stkvar	_s @ sp[(-4)+0]
 11792  016EBA  0EFC               	movlw	-4
 11793  016EBC  006F FF8F FFD9     	movff	plusw1,fsr2l
 11794  016EC2  0EFD               	movlw	-3
 11795  016EC4  006F FF8F FFDA     	movff	plusw1,fsr2h
 11796  016ECA  0EF8               	movlw	-8
 11797  016ECC  006F FF8F FFDF     	movff	plusw1,indf2
 11798                           
 11799                           ;stkvar	_c @ sp[(-4)+-4]
 11800                           ;stkvar	_n @ sp[(-4)+-6]
 11801                           ;stkvar	_s @ sp[(-4)+0]
 11802  016ED2  0EFC               	movlw	-4
 11803  016ED4  006F FF8C  F00B    	movff	plusw1,btemp+10
 11804  016EDA  0EFD               	movlw	-3
 11805  016EDC  006F FF8C  F00C    	movff	plusw1,btemp+11
 11806  016EE2  0EF6               	movlw	-10
 11807  016EE4  50E3               	movf	plusw1,w,c
 11808  016EE6  260B               	addwf	(btemp+10)^0,f,c
 11809  016EE8  0EF7               	movlw	-9
 11810  016EEA  50E3               	movf	plusw1,w,c
 11811  016EEC  220C               	addwfc	(btemp+11)^0,f,c
 11812  016EEE  0EFF               	movlw	255
 11813  016EF0  240B               	addwf	(btemp+10)^0,w,c
 11814  016EF2  6ED9               	movwf	fsr2l,c
 11815  016EF4  0EFF               	movlw	255
 11816  016EF6  200C               	addwfc	(btemp+11)^0,w,c
 11817  016EF8  6EDA               	movwf	fsr2h,c
 11818  016EFA  0EF8               	movlw	-8
 11819  016EFC  006F FF8F FFDF     	movff	plusw1,indf2
 11820                           
 11821                           ;stkvar	_n @ sp[(-4)+-6]
 11822  016F02  0EF7               	movlw	-9
 11823  016F04  50E3               	movf	plusw1,w,c
 11824  016F06  E108               	bnz	l12109
 11825  016F08  0EF6               	movlw	-10
 11826  016F0A  006F FF8C  F001    	movff	plusw1,btemp
 11827  016F10  0E03               	movlw	3
 11828  016F12  5E01               	subwf	btemp^0,f,c
 11829  016F14  A0D8               	btfss	status,0,c
 11830  016F16  D125               	goto	u10970
 11831  016F18                     l12109:
 11832                           
 11833                           ;stkvar	_c @ sp[(-4)+-4]
 11834                           ;stkvar	_s @ sp[(-4)+0]
 11835  016F18  0EFC               	movlw	-4
 11836  016F1A  006F FF8C  F00B    	movff	plusw1,btemp+10
 11837  016F20  0EFD               	movlw	-3
 11838  016F22  006F FF8C  F00C    	movff	plusw1,btemp+11
 11839  016F28  0E01               	movlw	1
 11840  016F2A  240B               	addwf	(btemp+10)^0,w,c
 11841  016F2C  6ED9               	movwf	fsr2l,c
 11842  016F2E  0E00               	movlw	0
 11843  016F30  200C               	addwfc	(btemp+11)^0,w,c
 11844  016F32  6EDA               	movwf	fsr2h,c
 11845  016F34  0EF8               	movlw	-8
 11846  016F36  006F FF8F FFDF     	movff	plusw1,indf2
 11847                           
 11848                           ;stkvar	_c @ sp[(-4)+-4]
 11849                           ;stkvar	_s @ sp[(-4)+0]
 11850  016F3C  0EFC               	movlw	-4
 11851  016F3E  006F FF8C  F00B    	movff	plusw1,btemp+10
 11852  016F44  0EFD               	movlw	-3
 11853  016F46  006F FF8C  F00C    	movff	plusw1,btemp+11
 11854  016F4C  0E02               	movlw	2
 11855  016F4E  240B               	addwf	(btemp+10)^0,w,c
 11856  016F50  6ED9               	movwf	fsr2l,c
 11857  016F52  0E00               	movlw	0
 11858  016F54  200C               	addwfc	(btemp+11)^0,w,c
 11859  016F56  6EDA               	movwf	fsr2h,c
 11860  016F58  0EF8               	movlw	-8
 11861  016F5A  006F FF8F FFDF     	movff	plusw1,indf2
 11862                           
 11863                           ;stkvar	_c @ sp[(-4)+-4]
 11864                           ;stkvar	_n @ sp[(-4)+-6]
 11865                           ;stkvar	_s @ sp[(-4)+0]
 11866  016F60  0EFC               	movlw	-4
 11867  016F62  006F FF8C  F00B    	movff	plusw1,btemp+10
 11868  016F68  0EFD               	movlw	-3
 11869  016F6A  006F FF8C  F00C    	movff	plusw1,btemp+11
 11870  016F70  0EF6               	movlw	-10
 11871  016F72  50E3               	movf	plusw1,w,c
 11872  016F74  260B               	addwf	(btemp+10)^0,f,c
 11873  016F76  0EF7               	movlw	-9
 11874  016F78  50E3               	movf	plusw1,w,c
 11875  016F7A  220C               	addwfc	(btemp+11)^0,f,c
 11876  016F7C  0EFE               	movlw	254
 11877  016F7E  240B               	addwf	(btemp+10)^0,w,c
 11878  016F80  6ED9               	movwf	fsr2l,c
 11879  016F82  0EFF               	movlw	255
 11880  016F84  200C               	addwfc	(btemp+11)^0,w,c
 11881  016F86  6EDA               	movwf	fsr2h,c
 11882  016F88  0EF8               	movlw	-8
 11883  016F8A  006F FF8F FFDF     	movff	plusw1,indf2
 11884                           
 11885                           ;stkvar	_c @ sp[(-4)+-4]
 11886                           ;stkvar	_n @ sp[(-4)+-6]
 11887                           ;stkvar	_s @ sp[(-4)+0]
 11888  016F90  0EFC               	movlw	-4
 11889  016F92  006F FF8C  F00B    	movff	plusw1,btemp+10
 11890  016F98  0EFD               	movlw	-3
 11891  016F9A  006F FF8C  F00C    	movff	plusw1,btemp+11
 11892  016FA0  0EF6               	movlw	-10
 11893  016FA2  50E3               	movf	plusw1,w,c
 11894  016FA4  260B               	addwf	(btemp+10)^0,f,c
 11895  016FA6  0EF7               	movlw	-9
 11896  016FA8  50E3               	movf	plusw1,w,c
 11897  016FAA  220C               	addwfc	(btemp+11)^0,f,c
 11898  016FAC  0EFD               	movlw	253
 11899  016FAE  240B               	addwf	(btemp+10)^0,w,c
 11900  016FB0  6ED9               	movwf	fsr2l,c
 11901  016FB2  0EFF               	movlw	255
 11902  016FB4  200C               	addwfc	(btemp+11)^0,w,c
 11903  016FB6  6EDA               	movwf	fsr2h,c
 11904  016FB8  0EF8               	movlw	-8
 11905  016FBA  006F FF8F FFDF     	movff	plusw1,indf2
 11906                           
 11907                           ;stkvar	_n @ sp[(-4)+-6]
 11908  016FC0  0EF7               	movlw	-9
 11909  016FC2  50E3               	movf	plusw1,w,c
 11910  016FC4  E108               	bnz	l12115
 11911  016FC6  0EF6               	movlw	-10
 11912  016FC8  006F FF8C  F001    	movff	plusw1,btemp
 11913  016FCE  0E07               	movlw	7
 11914  016FD0  5E01               	subwf	btemp^0,f,c
 11915  016FD2  A0D8               	btfss	status,0,c
 11916  016FD4  D0C6               	goto	u10970
 11917  016FD6                     l12115:
 11918                           
 11919                           ;stkvar	_c @ sp[(-4)+-4]
 11920                           ;stkvar	_s @ sp[(-4)+0]
 11921  016FD6  0EFC               	movlw	-4
 11922  016FD8  006F FF8C  F00B    	movff	plusw1,btemp+10
 11923  016FDE  0EFD               	movlw	-3
 11924  016FE0  006F FF8C  F00C    	movff	plusw1,btemp+11
 11925  016FE6  0E03               	movlw	3
 11926  016FE8  240B               	addwf	(btemp+10)^0,w,c
 11927  016FEA  6ED9               	movwf	fsr2l,c
 11928  016FEC  0E00               	movlw	0
 11929  016FEE  200C               	addwfc	(btemp+11)^0,w,c
 11930  016FF0  6EDA               	movwf	fsr2h,c
 11931  016FF2  0EF8               	movlw	-8
 11932  016FF4  006F FF8F FFDF     	movff	plusw1,indf2
 11933                           
 11934                           ;stkvar	_c @ sp[(-4)+-4]
 11935                           ;stkvar	_n @ sp[(-4)+-6]
 11936                           ;stkvar	_s @ sp[(-4)+0]
 11937  016FFA  0EFC               	movlw	-4
 11938  016FFC  006F FF8C  F00B    	movff	plusw1,btemp+10
 11939  017002  0EFD               	movlw	-3
 11940  017004  006F FF8C  F00C    	movff	plusw1,btemp+11
 11941  01700A  0EF6               	movlw	-10
 11942  01700C  50E3               	movf	plusw1,w,c
 11943  01700E  260B               	addwf	(btemp+10)^0,f,c
 11944  017010  0EF7               	movlw	-9
 11945  017012  50E3               	movf	plusw1,w,c
 11946  017014  220C               	addwfc	(btemp+11)^0,f,c
 11947  017016  0EFC               	movlw	252
 11948  017018  240B               	addwf	(btemp+10)^0,w,c
 11949  01701A  6ED9               	movwf	fsr2l,c
 11950  01701C  0EFF               	movlw	255
 11951  01701E  200C               	addwfc	(btemp+11)^0,w,c
 11952  017020  6EDA               	movwf	fsr2h,c
 11953  017022  0EF8               	movlw	-8
 11954  017024  006F FF8F FFDF     	movff	plusw1,indf2
 11955                           
 11956                           ;stkvar	_n @ sp[(-4)+-6]
 11957  01702A  0EF7               	movlw	-9
 11958  01702C  50E3               	movf	plusw1,w,c
 11959  01702E  E108               	bnz	l12121
 11960  017030  0EF6               	movlw	-10
 11961  017032  006F FF8C  F001    	movff	plusw1,btemp
 11962  017038  0E09               	movlw	9
 11963  01703A  5E01               	subwf	btemp^0,f,c
 11964  01703C  A0D8               	btfss	status,0,c
 11965  01703E  D091               	goto	u10970
 11966  017040                     l12121:
 11967                           
 11968                           ;stkvar	_s @ sp[(-4)+0]
 11969  017040  0EFC               	movlw	-4
 11970  017042  006F FF8C  F00B    	movff	plusw1,btemp+10
 11971  017048  1E0B               	comf	(btemp+10)^0,f,c
 11972  01704A  0EFD               	movlw	-3
 11973  01704C  006F FF8C  F00C    	movff	plusw1,btemp+11
 11974  017052  1E0C               	comf	(btemp+11)^0,f,c
 11975  017054  2A0B               	incf	(btemp+10)^0,f,c
 11976  017056  B4D8               	btfsc	status,2,c
 11977  017058  2A0C               	incf	(btemp+11)^0,f,c
 11978  01705A  0E03               	movlw	3
 11979  01705C  160B               	andwf	(btemp+10)^0,f,c
 11980  01705E  0E00               	movlw	0
 11981  017060  160C               	andwf	(btemp+11)^0,f,c
 11982                           
 11983                           ;stkvar	_k @ sp[(-4)+2]
 11984  017062  0EFE               	movlw	-2
 11985  017064  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11986  01706A  0EFF               	movlw	-1
 11987  01706C  0060  F033  FFE3   	movff	btemp+11,plusw1
 11988                           
 11989                           ;stkvar	_k @ sp[(-4)+2]
 11990                           ;stkvar	_s @ sp[(-4)+0]
 11991  017072  0EFC               	movlw	-4
 11992  017074  50E3               	movf	plusw1,w,c
 11993  017076  6E01               	movwf	btemp^0,c
 11994  017078  0EFE               	movlw	-2
 11995  01707A  50E3               	movf	plusw1,w,c
 11996  01707C  2601               	addwf	btemp^0,f,c
 11997  01707E  0EFC               	movlw	-4
 11998  017080  0060  F007  FFE3   	movff	btemp,plusw1
 11999  017086  0EFD               	movlw	-3
 12000  017088  50E3               	movf	plusw1,w,c
 12001  01708A  6E01               	movwf	btemp^0,c
 12002  01708C  0EFF               	movlw	-1
 12003  01708E  50E3               	movf	plusw1,w,c
 12004  017090  2201               	addwfc	btemp^0,f,c
 12005  017092  0EFD               	movlw	-3
 12006  017094  0060  F007  FFE3   	movff	btemp,plusw1
 12007                           
 12008                           ;stkvar	_k @ sp[(-4)+2]
 12009                           ;stkvar	_n @ sp[(-4)+-6]
 12010  01709A  0EF6               	movlw	-10
 12011  01709C  50E3               	movf	plusw1,w,c
 12012  01709E  6E01               	movwf	btemp^0,c
 12013  0170A0  0EFE               	movlw	-2
 12014  0170A2  50E3               	movf	plusw1,w,c
 12015  0170A4  5E01               	subwf	btemp^0,f,c
 12016  0170A6  0EF6               	movlw	-10
 12017  0170A8  0060  F007  FFE3   	movff	btemp,plusw1
 12018  0170AE  0EF7               	movlw	-9
 12019  0170B0  50E3               	movf	plusw1,w,c
 12020  0170B2  6E01               	movwf	btemp^0,c
 12021  0170B4  0EFF               	movlw	-1
 12022  0170B6  50E3               	movf	plusw1,w,c
 12023  0170B8  5A01               	subwfb	btemp^0,f,c
 12024  0170BA  0EF7               	movlw	-9
 12025  0170BC  0060  F007  FFE3   	movff	btemp,plusw1
 12026  0170C2  0EFC               	movlw	252
 12027  0170C4  6E0B               	movwf	(btemp+10)^0,c
 12028  0170C6  0EFF               	movlw	255
 12029  0170C8  6E0C               	movwf	(btemp+11)^0,c
 12030                           
 12031                           ;stkvar	_n @ sp[(-4)+-6]
 12032  0170CA  0EF6               	movlw	-10
 12033  0170CC  006F FF8C  F001    	movff	plusw1,btemp
 12034  0170D2  500B               	movf	(btemp+10)^0,w,c
 12035  0170D4  1601               	andwf	btemp^0,f,c
 12036  0170D6  0EF6               	movlw	-10
 12037  0170D8  0060  F007  FFE3   	movff	btemp,plusw1
 12038  0170DE  0EF7               	movlw	-9
 12039  0170E0  006F FF8C  F001    	movff	plusw1,btemp
 12040  0170E6  500C               	movf	(btemp+11)^0,w,c
 12041  0170E8  1601               	andwf	btemp^0,f,c
 12042  0170EA  0EF7               	movlw	-9
 12043  0170EC  D02E               	goto	L10
 12044  0170EE                     l12129:
 12045                           
 12046                           ;stkvar	_c @ sp[(-4)+-4]
 12047                           ;stkvar	_s @ sp[(-4)+0]
 12048  0170EE  0EFC               	movlw	-4
 12049  0170F0  006F FF8F FFD9     	movff	plusw1,fsr2l
 12050  0170F6  0EFD               	movlw	-3
 12051  0170F8  006F FF8F FFDA     	movff	plusw1,fsr2h
 12052  0170FE  0EF8               	movlw	-8
 12053  017100  006F FF8F FFDF     	movff	plusw1,indf2
 12054                           
 12055                           ;stkvar	_n @ sp[(-4)+-6]
 12056  017106  0EF6               	movlw	-10
 12057  017108  006F FF8C  F001    	movff	plusw1,btemp
 12058  01710E  0E01               	movlw	1
 12059  017110  5E01               	subwf	btemp^0,f,c
 12060  017112  0EF6               	movlw	-10
 12061  017114  0060  F007  FFE3   	movff	btemp,plusw1
 12062  01711A  0EF7               	movlw	-9
 12063  01711C  006F FF8C  F001    	movff	plusw1,btemp
 12064  017122  0E00               	movlw	0
 12065  017124  5A01               	subwfb	btemp^0,f,c
 12066  017126  0EF7               	movlw	-9
 12067  017128  0060  F007  FFE3   	movff	btemp,plusw1
 12068                           
 12069                           ;stkvar	_s @ sp[(-4)+0]
 12070  01712E  0EFC               	movlw	-4
 12071  017130  50E3               	movf	plusw1,w,c
 12072  017132  0F01               	addlw	1
 12073  017134  6E01               	movwf	btemp^0,c
 12074  017136  0EFC               	movlw	-4
 12075  017138  0060  F007  FFE3   	movff	btemp,plusw1
 12076  01713E  6A01               	clrf	btemp^0,c
 12077  017140  0EFD               	movlw	-3
 12078  017142  50E3               	movf	plusw1,w,c
 12079  017144  2001               	addwfc	btemp^0,w,c
 12080  017146  6E01               	movwf	btemp^0,c
 12081  017148  0EFD               	movlw	-3
 12082  01714A                     L10:
 12083  01714A  0060  F007  FFE3   	movff	btemp,plusw1
 12084                           
 12085                           ;stkvar	_n @ sp[(-4)+-6]
 12086  017150  0EF6               	movlw	-10
 12087  017152  006F FF8C  F001    	movff	plusw1,btemp
 12088  017158  0EF7               	movlw	-9
 12089  01715A  50E3               	movf	plusw1,w,c
 12090  01715C  1001               	iorwf	btemp^0,w,c
 12091  01715E  A4D8               	btfss	status,2,c
 12092  017160  D7C6               	goto	l12129
 12093  017162                     u10970:
 12094                           
 12095                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
 12096  017162  0EF6               	movlw	246
 12097  017164  26E1               	addwf	fsr1l,f,c
 12098  017166  0EFF               	movlw	255
 12099  017168  22E2               	addwfc	fsr1h,f,c
 12100  01716A  0012               	return		;funcret
 12101  01716C                     __end_of_memset:
 12102                           	opt callstack 0
 12103                           
 12104 ;; *************** function _printf *****************
 12105 ;; Defined at:
 12106 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
 12107 ;; Parameters:    Size  Location     Type
 12108 ;;  fmt             2  [STACK] PTR const unsigned char 
 12109 ;;		 -> STR_44(3), STR_43(3), 
 12110 ;; Auto vars:     Size  Location     Type
 12111 ;;  ap              2  [STACK] PTR void [1]
 12112 ;;		 -> ?_printf(2), ?_sprintf(2), 
 12113 ;;  ret             2    0        int 
 12114 ;; Return value:  Size  Location     Type
 12115 ;;                  2  [STACK] int 
 12116 ;; Registers used:
 12117 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 12118 ;; Tracked objects:
 12119 ;;		On entry : 3F/3B
 12120 ;;		On exit  : 3F/0
 12121 ;;		Unchanged: 0/0
 12122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12127 ;;Total ram usage:        0 bytes
 12128 ;; Hardware stack levels used:    1
 12129 ;; Hardware stack levels required when called:   23
 12130 ;; This function calls:
 12131 ;;		_vfprintf
 12132 ;; This function is called by:
 12133 ;;		_eaDogM_WriteString
 12134 ;;		_send_lcd_data_dma
 12135 ;; This function uses a reentrant model
 12136 ;;
 12137                           
 12138                           	psect	text50
 12139  01B41C                     __ptext50:
 12140                           	opt callstack 0
 12141  01B41C                     _printf:
 12142                           	opt callstack 0
 12143                           
 12144                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12145  01B41C  52E6               	movf	postinc1,f,c
 12146  01B41E  52E6               	movf	postinc1,f,c
 12147                           
 12148                           ;stkvar	?_printf @ sp[(-2)+-3]
 12149                           
 12150                           ;incstack = 0
 12151  01B420  0EFB               	movlw	251
 12152  01B422  24E1               	addwf	fsr1l,w,c
 12153  01B424  6E0B               	movwf	(btemp+10)^0,c
 12154  01B426  0EFF               	movlw	255
 12155  01B428  20E2               	addwfc	fsr1h,w,c
 12156  01B42A  6E0C               	movwf	(btemp+11)^0,c
 12157                           
 12158                           ;stkvar	_ap @ sp[(-2)+0]
 12159  01B42C  0EFF               	movlw	-1
 12160  01B42E  0060  F033  FFE3   	movff	btemp+11,plusw1
 12161  01B434  0EFE               	movlw	-2
 12162  01B436  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12163                           
 12164                           ;stkvar	_ap @ sp[(-2)+0]
 12165  01B43C  0EFE               	movlw	254
 12166  01B43E  24E1               	addwf	fsr1l,w,c
 12167  01B440  6E01               	movwf	btemp^0,c
 12168  01B442  0EFF               	movlw	255
 12169  01B444  20E2               	addwfc	fsr1h,w,c
 12170  01B446  6E02               	movwf	(btemp+1)^0,c
 12171  01B448  0060  F007  FFE6   	movff	btemp,postinc1
 12172  01B44E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 12173                           
 12174                           ;stkvar	_fmt @ sp[(-4)+-3]
 12175  01B454  0EF9               	movlw	-7
 12176  01B456  006F FF8F FFE6     	movff	plusw1,postinc1
 12177  01B45C  006F FF8F FFE6     	movff	plusw1,postinc1
 12178  01B462  0E00               	movlw	0
 12179  01B464  6EE6               	movwf	postinc1,c
 12180  01B466  0E00               	movlw	0
 12181  01B468  6EE6               	movwf	postinc1,c
 12182  01B46A  EC81  F0D4         	call	_vfprintf	;wreg free
 12183                           
 12184                           ; BSR set to: 0
 12185                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
 12186  01B46E  52E5               	movf	postdec1,f,c
 12187  01B470  52E5               	movf	postdec1,f,c
 12188  01B472  52E5               	movf	postdec1,f,c
 12189  01B474  50E7               	movf	indf1,w,c
 12190  01B476  5EE1               	subwf	fsr1l,f,c
 12191  01B478  0E00               	movlw	0
 12192  01B47A  5AE2               	subwfb	fsr1h,f,c
 12193  01B47C  0012               	return		;funcret
 12194  01B47E                     __end_of_printf:
 12195                           	opt callstack 0
 12196                           
 12197 ;; *************** function _vfprintf *****************
 12198 ;; Defined at:
 12199 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 12200 ;; Parameters:    Size  Location     Type
 12201 ;;  fp              2  [STACK] PTR struct _IO_FILE
 12202 ;;		 -> f(6), NULL(0), 
 12203 ;;  fmt             2  [STACK] PTR const unsigned char 
 12204 ;;		 -> STR_64(121), STR_62(3), STR_61(3), STR_60(19), 
 12205 ;;		 -> STR_59(19), STR_58(19), STR_57(19), STR_56(19), 
 12206 ;;		 -> STR_55(19), STR_54(24), STR_53(15), STR_52(15), 
 12207 ;;		 -> STR_51(15), STR_50(10), STR_49(10), STR_48(19), 
 12208 ;;		 -> STR_47(19), STR_44(3), STR_43(3), STR_42(22), 
 12209 ;;		 -> STR_41(22), STR_40(22), STR_39(23), STR_38(23), 
 12210 ;;		 -> STR_37(23), STR_36(23), STR_35(23), STR_34(23), 
 12211 ;;		 -> STR_33(22), STR_32(22), STR_31(22), STR_30(22), 
 12212 ;;		 -> STR_29(22), STR_28(22), STR_27(22), STR_26(22), 
 12213 ;;		 -> STR_25(22), STR_24(22), STR_23(22), STR_22(22), 
 12214 ;;		 -> STR_21(17), STR_20(16), STR_19(16), STR_18(26), 
 12215 ;;		 -> STR_17(26), STR_16(22), STR_15(21), STR_14(21), 
 12216 ;;		 -> STR_13(21), STR_12(21), STR_11(22), STR_10(22), 
 12217 ;;		 -> STR_9(26), STR_8(21), STR_7(21), STR_6(21), 
 12218 ;;		 -> STR_5(21), STR_4(21), STR_2(21), STR_1(21), 
 12219 ;;  ap              2  [STACK] PTR PTR void 
 12220 ;;		 -> ap(2), ap(2), 
 12221 ;; Auto vars:     Size  Location     Type
 12222 ;;  cfmt            2  [STACK] PTR unsigned char 
 12223 ;;		 -> STR_64(121), STR_62(3), STR_61(3), STR_60(19), 
 12224 ;;		 -> STR_59(19), STR_58(19), STR_57(19), STR_56(19), 
 12225 ;;		 -> STR_55(19), STR_54(24), STR_53(15), STR_52(15), 
 12226 ;;		 -> STR_51(15), STR_50(10), STR_49(10), STR_48(19), 
 12227 ;;		 -> STR_47(19), STR_44(3), STR_43(3), STR_42(22), 
 12228 ;;		 -> STR_41(22), STR_40(22), STR_39(23), STR_38(23), 
 12229 ;;		 -> STR_37(23), STR_36(23), STR_35(23), STR_34(23), 
 12230 ;;		 -> STR_33(22), STR_32(22), STR_31(22), STR_30(22), 
 12231 ;;		 -> STR_29(22), STR_28(22), STR_27(22), STR_26(22), 
 12232 ;;		 -> STR_25(22), STR_24(22), STR_23(22), STR_22(22), 
 12233 ;;		 -> STR_21(17), STR_20(16), STR_19(16), STR_18(26), 
 12234 ;;		 -> STR_17(26), STR_16(22), STR_15(21), STR_14(21), 
 12235 ;;		 -> STR_13(21), STR_12(21), STR_11(22), STR_10(22), 
 12236 ;;		 -> STR_9(26), STR_8(21), STR_7(21), STR_6(21), 
 12237 ;;		 -> STR_5(21), STR_4(21), STR_2(21), STR_1(21), 
 12238 ;; Return value:  Size  Location     Type
 12239 ;;                  2  [STACK] int 
 12240 ;; Registers used:
 12241 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 12242 ;; Tracked objects:
 12243 ;;		On entry : 0/1
 12244 ;;		On exit  : 3F/0
 12245 ;;		Unchanged: 0/0
 12246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12251 ;;Total ram usage:        0 bytes
 12252 ;; Hardware stack levels used:    1
 12253 ;; Hardware stack levels required when called:   22
 12254 ;; This function calls:
 12255 ;;		_vfpfcnvrt
 12256 ;; This function is called by:
 12257 ;;		_sprintf
 12258 ;;		_printf
 12259 ;; This function uses a reentrant model
 12260 ;;
 12261                           
 12262                           	psect	text51
 12263  01A902                     __ptext51:
 12264                           	opt callstack 0
 12265  01A902                     _vfprintf:
 12266                           	opt callstack 0
 12267                           
 12268                           ; BSR set to: 0
 12269                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12270  01A902  52E6               	movf	postinc1,f,c
 12271  01A904  52E6               	movf	postinc1,f,c
 12272                           
 12273                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 12274                           ;stkvar	_fmt @ sp[(-2)+-4]
 12275                           
 12276                           ;incstack = 0
 12277 ;; hardware stack exceeded
 12278  01A906  0EFA               	movlw	-6
 12279  01A908  006F FF8C  F00B    	movff	plusw1,btemp+10
 12280  01A90E  0EFB               	movlw	-5
 12281  01A910  006F FF8C  F00C    	movff	plusw1,btemp+11
 12282                           
 12283                           ;stkvar	_cfmt @ sp[(-2)+0]
 12284  01A916  0EFF               	movlw	-1
 12285  01A918  0060  F033  FFE3   	movff	btemp+11,plusw1
 12286  01A91E  0EFE               	movlw	-2
 12287  01A920  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12288                           
 12289                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 12290  01A926  0100               	movlb	0	; () banked
 12291  01A928  6B9A               	clrf	_nout& (0+255),b
 12292  01A92A  6B9B               	clrf	(_nout+1)& (0+255),b
 12293                           
 12294                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 12295  01A92C  D021               	goto	l12979
 12296  01A92E                     l12977:
 12297                           
 12298                           ; BSR set to: 0
 12299                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 12300                           ;stkvar	_ap @ sp[(-2)+-6]
 12301  01A92E  0EF8               	movlw	-8
 12302  01A930  006F FF8F FFE6     	movff	plusw1,postinc1
 12303  01A936  006F FF8F FFE6     	movff	plusw1,postinc1
 12304                           
 12305                           ;stkvar	_cfmt @ sp[(-4)+0]
 12306  01A93C  0EFC               	movlw	252
 12307  01A93E  24E1               	addwf	fsr1l,w,c
 12308  01A940  6E01               	movwf	btemp^0,c
 12309  01A942  0EFF               	movlw	255
 12310  01A944  20E2               	addwfc	fsr1h,w,c
 12311  01A946  6E02               	movwf	(btemp+1)^0,c
 12312  01A948  0060  F007  FFE6   	movff	btemp,postinc1
 12313  01A94E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 12314                           
 12315                           ;stkvar	_fp @ sp[(-6)+-2]
 12316  01A954  0EF8               	movlw	-8
 12317  01A956  006F FF8F FFE6     	movff	plusw1,postinc1
 12318  01A95C  006F FF8F FFE6     	movff	plusw1,postinc1
 12319  01A962  ECE6  F091         	call	_vfpfcnvrt	;wreg free
 12320  01A966  5001               	movf	btemp^0,w,c
 12321  01A968  0100               	movlb	0	; () banked
 12322  01A96A  279A               	addwf	_nout& (0+255),f,b
 12323  01A96C  5002               	movf	(btemp+1)^0,w,c
 12324  01A96E  239B               	addwfc	(_nout+1)& (0+255),f,b
 12325  01A970                     l12979:
 12326                           
 12327                           ; BSR set to: 0
 12328                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 12329                           ;stkvar	_cfmt @ sp[(-2)+0]
 12330  01A970  50E1               	movf	fsr1l,w,c
 12331  01A972  0FFE               	addlw	-2
 12332  01A974  6ED9               	movwf	fsr2l,c
 12333  01A976  50E2               	movf	fsr1h,w,c
 12334  01A978  6EDA               	movwf	fsr2h,c
 12335  01A97A  0EFF               	movlw	255
 12336  01A97C  22DA               	addwfc	fsr2h,f,c
 12337  01A97E  006F FF7B FFF6     	movff	postinc2,tblptrl
 12338  01A984  006F FF77 FFF7     	movff	postdec2,tblptrh
 12339  01A98A                     	if	0	;tblptru may be non-zero
 12340  01A98A                     	endif
 12341  01A98A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12342  01A98A  0E00               	movlw	low (__mediumconst shr (0+16))
 12343  01A98C  6EF8               	movwf	tblptru,c
 12344  01A98E                     	endif
 12345  01A98E  0008               	tblrd		*
 12346  01A990  50F5               	movf	tablat,w,c
 12347  01A992  0900               	iorlw	0
 12348  01A994  A4D8               	btfss	status,2,c
 12349  01A996  D7CB               	goto	l12977
 12350                           
 12351                           ; BSR set to: 0
 12352                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 12353  01A998  0060  F268  F001   	movff	_nout,btemp
 12354  01A99E  0060  F26C  F002   	movff	_nout+1,btemp+1
 12355                           
 12356                           ; BSR set to: 0
 12357                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
 12358  01A9A4  0EF8               	movlw	248
 12359  01A9A6  26E1               	addwf	fsr1l,f,c
 12360  01A9A8  0EFF               	movlw	255
 12361  01A9AA  22E2               	addwfc	fsr1h,f,c
 12362  01A9AC  0012               	return		;funcret
 12363  01A9AE                     __end_of_vfprintf:
 12364                           	opt callstack 0
 12365                           
 12366 ;; *************** function _vfpfcnvrt *****************
 12367 ;; Defined at:
 12368 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 12369 ;; Parameters:    Size  Location     Type
 12370 ;;  fp              2  [STACK] PTR struct _IO_FILE
 12371 ;;		 -> f(6), NULL(0), 
 12372 ;;  fmt             2  [STACK] PTR PTR unsigned char 
 12373 ;;		 -> cfmt(2), 
 12374 ;;  ap              2  [STACK] PTR PTR void 
 12375 ;;		 -> ap(2), ap(2), 
 12376 ;; Auto vars:     Size  Location     Type
 12377 ;;  llu             8  [STACK] unsigned long long 
 12378 ;;  ll              8  [STACK] long long 
 12379 ;;  f               4  [STACK] long long 
 12380 ;;  ct              3  [STACK] unsigned char [3]
 12381 ;;  vp              3    0        PTR void 
 12382 ;;  cp              2  [STACK] PTR unsigned char 
 12383 ;;		 -> ?_printf(2), ?_sprintf(2), STR_46(9), STR_45(12), 
 12384 ;;		 -> D.lcd(480), D(482), T(144), STR_3(5), 
 12385 ;;		 -> V(191), 
 12386 ;;  i               2    0        int 
 12387 ;;  done            2    0        int 
 12388 ;;  c               1  [STACK] unsigned char 
 12389 ;; Return value:  Size  Location     Type
 12390 ;;                  2  [STACK] int 
 12391 ;; Registers used:
 12392 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 12393 ;; Tracked objects:
 12394 ;;		On entry : 0/0
 12395 ;;		On exit  : 0/0
 12396 ;;		Unchanged: 0/0
 12397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12401 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12402 ;;Total ram usage:        0 bytes
 12403 ;; Hardware stack levels used:    1
 12404 ;; Hardware stack levels required when called:   21
 12405 ;; This function calls:
 12406 ;;		_atoi
 12407 ;;		_ctoa
 12408 ;;		_dtoa
 12409 ;;		_efgtoa
 12410 ;;		_fputc
 12411 ;;		_isdigit
 12412 ;;		_isupper
 12413 ;;		_stoa
 12414 ;;		_strncmp
 12415 ;;		_tolower
 12416 ;;		_utoa
 12417 ;;		_xtoa
 12418 ;; This function is called by:
 12419 ;;		_vfprintf
 12420 ;; This function uses a reentrant model
 12421 ;;
 12422                           
 12423                           	psect	text52
 12424  0123CC                     __ptext52:
 12425                           	opt callstack 0
 12426  0123CC                     _vfpfcnvrt:
 12427                           	opt callstack 0
 12428                           
 12429                           ; BSR set to: 0
 12430                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 12431  0123CC  0E20               	movlw	32
 12432  0123CE  26E1               	addwf	fsr1l,f,c
 12433  0123D0  0E00               	movlw	0
 12434  0123D2  22E2               	addwfc	fsr1h,f,c
 12435                           
 12436                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 12437                           ;stkvar	_fmt @ sp[(-32)+-4]
 12438                           
 12439                           ;incstack = 0
 12440 ;; hardware stack exceeded
 12441  0123D4  0EDC               	movlw	-36
 12442  0123D6  006F FF8F FFD9     	movff	plusw1,fsr2l
 12443  0123DC  0EDD               	movlw	-35
 12444  0123DE  006F FF8F FFDA     	movff	plusw1,fsr2h
 12445  0123E4  006F FF7B FFF6     	movff	postinc2,tblptrl
 12446  0123EA  006F FF77 FFF7     	movff	postdec2,tblptrh
 12447  0123F0                     	if	0	;tblptru may be non-zero
 12448  0123F0                     	endif
 12449  0123F0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12450  0123F0  0E00               	movlw	low (__mediumconst shr (0+16))
 12451  0123F2  6EF8               	movwf	tblptru,c
 12452  0123F4                     	endif
 12453  0123F4  0008               	tblrd		*
 12454  0123F6  50F5               	movf	tablat,w,c
 12455  0123F8  0A25               	xorlw	37
 12456  0123FA  A4D8               	btfss	status,2,c
 12457  0123FC  EF8D  F099         	goto	l12939
 12458                           
 12459                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 12460                           ;stkvar	_fmt @ sp[(-32)+-4]
 12461  012400  0EDC               	movlw	-36
 12462  012402  006F FF8F FFD9     	movff	plusw1,fsr2l
 12463  012408  0EDD               	movlw	-35
 12464  01240A  006F FF8F FFDA     	movff	plusw1,fsr2h
 12465  012410  2ADE               	incf	postinc2,f,c
 12466  012412  0E00               	movlw	0
 12467  012414  22DD               	addwfc	postdec2,f,c
 12468                           
 12469                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 12470  012416  6A3A               	clrf	_width^0,c
 12471  012418  6A3B               	clrf	(_width+1)^0,c
 12472  01241A  6A3E               	clrf	_flags^0,c
 12473  01241C  6A3F               	clrf	(_flags+1)^0,c
 12474                           
 12475                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 12476  01241E  683C               	setf	_prec^0,c
 12477  012420  683D               	setf	(_prec+1)^0,c
 12478                           
 12479                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
 12480                           ;stkvar	_fmt @ sp[(-32)+-4]
 12481  012422  0EDC               	movlw	-36
 12482  012424  006F FF8F FFD9     	movff	plusw1,fsr2l
 12483  01242A  0EDD               	movlw	-35
 12484  01242C  006F FF8F FFDA     	movff	plusw1,fsr2h
 12485  012432  006F FF7B FFF6     	movff	postinc2,tblptrl
 12486  012438  006F FF77 FFF7     	movff	postdec2,tblptrh
 12487  01243E                     	if	0	;tblptru may be non-zero
 12488  01243E                     	endif
 12489  01243E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12490  01243E  0E00               	movlw	low (__mediumconst shr (0+16))
 12491  012440  6EF8               	movwf	tblptru,c
 12492  012442                     	endif
 12493  012442  0008               	tblrd		*
 12494  012444  50F5               	movf	tablat,w,c
 12495  012446  0A2A               	xorlw	42
 12496  012448  A4D8               	btfss	status,2,c
 12497  01244A  D031               	goto	l12757
 12498                           
 12499                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
 12500                           ;stkvar	_fmt @ sp[(-32)+-4]
 12501  01244C  0EDC               	movlw	-36
 12502  01244E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12503  012454  0EDD               	movlw	-35
 12504  012456  006F FF8F FFDA     	movff	plusw1,fsr2h
 12505  01245C  2ADE               	incf	postinc2,f,c
 12506  01245E  0E00               	movlw	0
 12507  012460  22DD               	addwfc	postdec2,f,c
 12508                           
 12509                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
 12510                           ;stkvar	_ap @ sp[(-32)+-6]
 12511  012462  0EDA               	movlw	-38
 12512  012464  006F FF8F FFD9     	movff	plusw1,fsr2l
 12513  01246A  0EDB               	movlw	-37
 12514  01246C  006F FF8F FFDA     	movff	plusw1,fsr2h
 12515  012472  0E02               	movlw	2
 12516  012474  5EDE               	subwf	postinc2,f,c
 12517  012476  0E00               	movlw	0
 12518  012478  5ADD               	subwfb	postdec2,f,c
 12519  01247A  006F FF78  F00B    	movff	postinc2,btemp+10
 12520  012480  006F FF74  F00C    	movff	postdec2,btemp+11
 12521  012486  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12522  01248C  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12523  012492  006F FF78  F03A    	movff	postinc2,_width
 12524  012498  006F FF74  F03B    	movff	postdec2,_width+1
 12525                           
 12526                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
 12527  01249E  AE3B               	btfss	(_width+1)^0,7,c
 12528  0124A0  D066               	goto	u12160
 12529                           
 12530                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
 12531  0124A2  803E               	bsf	_flags^0,0,c
 12532                           
 12533                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
 12534  0124A4  6C3A               	negf	_width^0,c
 12535  0124A6  1E3B               	comf	(_width+1)^0,f,c
 12536  0124A8  B0D8               	btfsc	status,0,c
 12537  0124AA  2A3B               	incf	(_width+1)^0,f,c
 12538  0124AC  D060               	goto	u12160
 12539  0124AE                     l12757:
 12540                           
 12541                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
 12542                           ;stkvar	_fmt @ sp[(-32)+-4]
 12543  0124AE  0EDC               	movlw	-36
 12544  0124B0  006F FF8F FFD9     	movff	plusw1,fsr2l
 12545  0124B6  0EDD               	movlw	-35
 12546  0124B8  006F FF8F FFDA     	movff	plusw1,fsr2h
 12547  0124BE  006F FF78  F00B    	movff	postinc2,btemp+10
 12548  0124C4  006F FF74  F00C    	movff	postdec2,btemp+11
 12549  0124CA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12550  0124D0  0060  F033  FFE6   	movff	btemp+11,postinc1
 12551  0124D6  ECC1  F0BC         	call	_atoi	;wreg free
 12552  0124DA  0060  F004  F03A   	movff	btemp,_width
 12553  0124E0  0060  F008  F03B   	movff	btemp+1,_width+1
 12554                           
 12555                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 12556  0124E6  D00B               	goto	l12761
 12557  0124E8                     l12759:
 12558                           
 12559                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
 12560                           ;stkvar	_fmt @ sp[(-32)+-4]
 12561  0124E8  0EDC               	movlw	-36
 12562  0124EA  006F FF8F FFD9     	movff	plusw1,fsr2l
 12563  0124F0  0EDD               	movlw	-35
 12564  0124F2  006F FF8F FFDA     	movff	plusw1,fsr2h
 12565  0124F8  2ADE               	incf	postinc2,f,c
 12566  0124FA  0E00               	movlw	0
 12567  0124FC  22DD               	addwfc	postdec2,f,c
 12568  0124FE                     l12761:
 12569  0124FE  0ED0               	movlw	208
 12570  012500  6E0B               	movwf	(btemp+10)^0,c
 12571  012502  0EFF               	movlw	255
 12572  012504  6E0C               	movwf	(btemp+11)^0,c
 12573                           
 12574                           ;stkvar	_fmt @ sp[(-32)+-4]
 12575  012506  0EDC               	movlw	-36
 12576  012508  006F FF8F FFD9     	movff	plusw1,fsr2l
 12577  01250E  0EDD               	movlw	-35
 12578  012510  006F FF8F FFDA     	movff	plusw1,fsr2h
 12579  012516  006F FF7B FFF6     	movff	postinc2,tblptrl
 12580  01251C  006F FF77 FFF7     	movff	postdec2,tblptrh
 12581  012522                     	if	0	;tblptru may be non-zero
 12582  012522                     	endif
 12583  012522                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12584  012522  0E00               	movlw	low (__mediumconst shr (0+16))
 12585  012524  6EF8               	movwf	tblptru,c
 12586  012526                     	endif
 12587  012526  0008               	tblrd		*
 12588  012528  50F5               	movf	tablat,w,c
 12589  01252A  6E09               	movwf	(btemp+8)^0,c
 12590  01252C  6A0A               	clrf	(btemp+9)^0,c
 12591  01252E  500B               	movf	(btemp+10)^0,w,c
 12592  012530  2609               	addwf	(btemp+8)^0,f,c
 12593  012532  500C               	movf	(btemp+11)^0,w,c
 12594  012534  220A               	addwfc	(btemp+9)^0,f,c
 12595  012536  500A               	movf	(btemp+9)^0,w,c
 12596  012538  E106               	bnz	u12140
 12597  01253A  0E0A               	movlw	10
 12598  01253C  5C09               	subwf	(btemp+8)^0,w,c
 12599  01253E  B0D8               	btfsc	status,0,c
 12600  012540  D002               	goto	u12140
 12601  012542  0E01               	movlw	1
 12602  012544  D001               	goto	u12150
 12603  012546                     u12140:
 12604  012546  0E00               	movlw	0
 12605  012548                     u12150:
 12606  012548  6E0B               	movwf	(btemp+10)^0,c
 12607  01254A  6A0C               	clrf	(btemp+11)^0,c
 12608                           
 12609                           ;stkvar	_vfpfcnvrt$5711 @ sp[(-32)+4]
 12610  01254C  0EE4               	movlw	-28
 12611  01254E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12612  012554  0EE5               	movlw	-27
 12613  012556  0060  F033  FFE3   	movff	btemp+11,plusw1
 12614                           
 12615                           ;stkvar	_vfpfcnvrt$5711 @ sp[(-32)+4]
 12616  01255C  0EE4               	movlw	-28
 12617  01255E  006F FF8C  F001    	movff	plusw1,btemp
 12618  012564  0EE5               	movlw	-27
 12619  012566  50E3               	movf	plusw1,w,c
 12620  012568  1001               	iorwf	btemp^0,w,c
 12621  01256A  A4D8               	btfss	status,2,c
 12622  01256C  D7BD               	goto	l12759
 12623  01256E                     u12160:
 12624                           
 12625                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
 12626                           ;stkvar	_fmt @ sp[(-32)+-4]
 12627  01256E  0EDC               	movlw	-36
 12628  012570  006F FF8F FFD9     	movff	plusw1,fsr2l
 12629  012576  0EDD               	movlw	-35
 12630  012578  006F FF8F FFDA     	movff	plusw1,fsr2h
 12631  01257E  006F FF7B FFF6     	movff	postinc2,tblptrl
 12632  012584  006F FF77 FFF7     	movff	postdec2,tblptrh
 12633  01258A                     	if	0	;tblptru may be non-zero
 12634  01258A                     	endif
 12635  01258A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12636  01258A  0E00               	movlw	low (__mediumconst shr (0+16))
 12637  01258C  6EF8               	movwf	tblptru,c
 12638  01258E                     	endif
 12639  01258E  0008               	tblrd		*
 12640  012590  50F5               	movf	tablat,w,c
 12641  012592  0A2E               	xorlw	46
 12642  012594  A4D8               	btfss	status,2,c
 12643  012596  D0AC               	goto	u12210
 12644                           
 12645                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
 12646  012598  6A3C               	clrf	_prec^0,c
 12647  01259A  6A3D               	clrf	(_prec+1)^0,c
 12648                           
 12649                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
 12650                           ;stkvar	_fmt @ sp[(-32)+-4]
 12651  01259C  0EDC               	movlw	-36
 12652  01259E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12653  0125A4  0EDD               	movlw	-35
 12654  0125A6  006F FF8F FFDA     	movff	plusw1,fsr2h
 12655  0125AC  2ADE               	incf	postinc2,f,c
 12656  0125AE  0E00               	movlw	0
 12657  0125B0  22DD               	addwfc	postdec2,f,c
 12658                           
 12659                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
 12660                           ;stkvar	_fmt @ sp[(-32)+-4]
 12661  0125B2  0EDC               	movlw	-36
 12662  0125B4  006F FF8F FFD9     	movff	plusw1,fsr2l
 12663  0125BA  0EDD               	movlw	-35
 12664  0125BC  006F FF8F FFDA     	movff	plusw1,fsr2h
 12665  0125C2  006F FF7B FFF6     	movff	postinc2,tblptrl
 12666  0125C8  006F FF77 FFF7     	movff	postdec2,tblptrh
 12667  0125CE                     	if	0	;tblptru may be non-zero
 12668  0125CE                     	endif
 12669  0125CE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12670  0125CE  0E00               	movlw	low (__mediumconst shr (0+16))
 12671  0125D0  6EF8               	movwf	tblptru,c
 12672  0125D2                     	endif
 12673  0125D2  0008               	tblrd		*
 12674  0125D4  50F5               	movf	tablat,w,c
 12675  0125D6  0A2A               	xorlw	42
 12676  0125D8  A4D8               	btfss	status,2,c
 12677  0125DA  D02A               	goto	l12779
 12678                           
 12679                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
 12680                           ;stkvar	_fmt @ sp[(-32)+-4]
 12681  0125DC  0EDC               	movlw	-36
 12682  0125DE  006F FF8F FFD9     	movff	plusw1,fsr2l
 12683  0125E4  0EDD               	movlw	-35
 12684  0125E6  006F FF8F FFDA     	movff	plusw1,fsr2h
 12685  0125EC  2ADE               	incf	postinc2,f,c
 12686  0125EE  0E00               	movlw	0
 12687  0125F0  22DD               	addwfc	postdec2,f,c
 12688                           
 12689                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
 12690                           ;stkvar	_ap @ sp[(-32)+-6]
 12691  0125F2  0EDA               	movlw	-38
 12692  0125F4  006F FF8F FFD9     	movff	plusw1,fsr2l
 12693  0125FA  0EDB               	movlw	-37
 12694  0125FC  006F FF8F FFDA     	movff	plusw1,fsr2h
 12695  012602  0E02               	movlw	2
 12696  012604  5EDE               	subwf	postinc2,f,c
 12697  012606  0E00               	movlw	0
 12698  012608  5ADD               	subwfb	postdec2,f,c
 12699  01260A  006F FF78  F00B    	movff	postinc2,btemp+10
 12700  012610  006F FF74  F00C    	movff	postdec2,btemp+11
 12701  012616  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12702  01261C  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12703  012622  006F FF78  F03C    	movff	postinc2,_prec
 12704  012628  006F FF74  F03D    	movff	postdec2,_prec+1
 12705                           
 12706                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
 12707  01262E  D060               	goto	u12210
 12708  012630                     l12779:
 12709                           
 12710                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
 12711                           ;stkvar	_fmt @ sp[(-32)+-4]
 12712  012630  0EDC               	movlw	-36
 12713  012632  006F FF8F FFD9     	movff	plusw1,fsr2l
 12714  012638  0EDD               	movlw	-35
 12715  01263A  006F FF8F FFDA     	movff	plusw1,fsr2h
 12716  012640  006F FF78  F00B    	movff	postinc2,btemp+10
 12717  012646  006F FF74  F00C    	movff	postdec2,btemp+11
 12718  01264C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12719  012652  0060  F033  FFE6   	movff	btemp+11,postinc1
 12720  012658  ECC1  F0BC         	call	_atoi	;wreg free
 12721  01265C  0060  F004  F03C   	movff	btemp,_prec
 12722  012662  0060  F008  F03D   	movff	btemp+1,_prec+1
 12723                           
 12724                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 12725  012668  D00B               	goto	l12783
 12726  01266A                     l12781:
 12727                           
 12728                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
 12729                           ;stkvar	_fmt @ sp[(-32)+-4]
 12730  01266A  0EDC               	movlw	-36
 12731  01266C  006F FF8F FFD9     	movff	plusw1,fsr2l
 12732  012672  0EDD               	movlw	-35
 12733  012674  006F FF8F FFDA     	movff	plusw1,fsr2h
 12734  01267A  2ADE               	incf	postinc2,f,c
 12735  01267C  0E00               	movlw	0
 12736  01267E  22DD               	addwfc	postdec2,f,c
 12737  012680                     l12783:
 12738  012680  0ED0               	movlw	208
 12739  012682  6E0B               	movwf	(btemp+10)^0,c
 12740  012684  0EFF               	movlw	255
 12741  012686  6E0C               	movwf	(btemp+11)^0,c
 12742                           
 12743                           ;stkvar	_fmt @ sp[(-32)+-4]
 12744  012688  0EDC               	movlw	-36
 12745  01268A  006F FF8F FFD9     	movff	plusw1,fsr2l
 12746  012690  0EDD               	movlw	-35
 12747  012692  006F FF8F FFDA     	movff	plusw1,fsr2h
 12748  012698  006F FF7B FFF6     	movff	postinc2,tblptrl
 12749  01269E  006F FF77 FFF7     	movff	postdec2,tblptrh
 12750  0126A4                     	if	0	;tblptru may be non-zero
 12751  0126A4                     	endif
 12752  0126A4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12753  0126A4  0E00               	movlw	low (__mediumconst shr (0+16))
 12754  0126A6  6EF8               	movwf	tblptru,c
 12755  0126A8                     	endif
 12756  0126A8  0008               	tblrd		*
 12757  0126AA  50F5               	movf	tablat,w,c
 12758  0126AC  6E09               	movwf	(btemp+8)^0,c
 12759  0126AE  6A0A               	clrf	(btemp+9)^0,c
 12760  0126B0  500B               	movf	(btemp+10)^0,w,c
 12761  0126B2  2609               	addwf	(btemp+8)^0,f,c
 12762  0126B4  500C               	movf	(btemp+11)^0,w,c
 12763  0126B6  220A               	addwfc	(btemp+9)^0,f,c
 12764  0126B8  500A               	movf	(btemp+9)^0,w,c
 12765  0126BA  E106               	bnz	u12190
 12766  0126BC  0E0A               	movlw	10
 12767  0126BE  5C09               	subwf	(btemp+8)^0,w,c
 12768  0126C0  B0D8               	btfsc	status,0,c
 12769  0126C2  D002               	goto	u12190
 12770  0126C4  0E01               	movlw	1
 12771  0126C6  D001               	goto	u12200
 12772  0126C8                     u12190:
 12773  0126C8  0E00               	movlw	0
 12774  0126CA                     u12200:
 12775  0126CA  6E0B               	movwf	(btemp+10)^0,c
 12776  0126CC  6A0C               	clrf	(btemp+11)^0,c
 12777                           
 12778                           ;stkvar	_vfpfcnvrt$5712 @ sp[(-32)+0]
 12779  0126CE  0EE0               	movlw	-32
 12780  0126D0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12781  0126D6  0EE1               	movlw	-31
 12782  0126D8  0060  F033  FFE3   	movff	btemp+11,plusw1
 12783                           
 12784                           ;stkvar	_vfpfcnvrt$5712 @ sp[(-32)+0]
 12785  0126DE  0EE0               	movlw	-32
 12786  0126E0  006F FF8C  F001    	movff	plusw1,btemp
 12787  0126E6  0EE1               	movlw	-31
 12788  0126E8  50E3               	movf	plusw1,w,c
 12789  0126EA  1001               	iorwf	btemp^0,w,c
 12790  0126EC  A4D8               	btfss	status,2,c
 12791  0126EE  D7BD               	goto	l12781
 12792  0126F0                     u12210:
 12793                           
 12794                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
 12795                           ;stkvar	_fmt @ sp[(-32)+-4]
 12796  0126F0  0EDC               	movlw	-36
 12797  0126F2  006F FF8F FFD9     	movff	plusw1,fsr2l
 12798  0126F8  0EDD               	movlw	-35
 12799  0126FA  006F FF8F FFDA     	movff	plusw1,fsr2h
 12800  012700  006F FF7B FFF6     	movff	postinc2,tblptrl
 12801  012706  006F FF77 FFF7     	movff	postdec2,tblptrh
 12802  01270C                     	if	0	;tblptru may be non-zero
 12803  01270C                     	endif
 12804  01270C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12805  01270C  0E00               	movlw	low (__mediumconst shr (0+16))
 12806  01270E  6EF8               	movwf	tblptru,c
 12807  012710                     	endif
 12808  012710  0008               	tblrd		*
 12809  012712  50F5               	movf	tablat,w,c
 12810  012714  6EE6               	movwf	postinc1,c
 12811  012716  0E00               	movlw	0
 12812  012718  6EE6               	movwf	postinc1,c
 12813  01271A  ECD9  F0D7         	call	_tolower	;wreg free
 12814                           
 12815                           ;stkvar	_ct @ sp[(-32)+26]
 12816  01271E  0EFA               	movlw	-6
 12817  012720  0060  F007  FFE3   	movff	btemp,plusw1
 12818                           
 12819                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
 12820                           ;stkvar	_ct @ sp[(-32)+26]
 12821  012726  0EFA               	movlw	-6
 12822  012728  50E3               	movf	plusw1,w,c
 12823  01272A  B4D8               	btfsc	status,2,c
 12824  01272C  D05B               	goto	l12799
 12825                           
 12826                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
 12827                           ;stkvar	_ct @ sp[(-32)+26]
 12828  01272E  0EFB               	movlw	251
 12829  012730  24E1               	addwf	fsr1l,w,c
 12830  012732  6ED9               	movwf	fsr2l,c
 12831  012734  0EFF               	movlw	255
 12832  012736  20E2               	addwfc	fsr1h,w,c
 12833  012738  6EDA               	movwf	fsr2h,c
 12834                           
 12835                           ;stkvar	_fmt @ sp[(-32)+-4]
 12836  01273A  0EDC               	movlw	-36
 12837  01273C  006F FF8F FFE9     	movff	plusw1,fsr0l
 12838  012742  0EDD               	movlw	-35
 12839  012744  006F FF8F FFEA     	movff	plusw1,fsr0h
 12840  01274A  006F FFB8  F00B    	movff	postinc0,btemp+10
 12841  012750  006F FFB4  F00C    	movff	postdec0,btemp+11
 12842  012756  0E01               	movlw	1
 12843  012758  260B               	addwf	(btemp+10)^0,f,c
 12844  01275A  0E00               	movlw	0
 12845  01275C  220C               	addwfc	(btemp+11)^0,f,c
 12846  01275E  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 12847  012764  0060  F033  FFF7   	movff	btemp+11,tblptrh
 12848  01276A                     	if	0	;tblptru may be non-zero
 12849  01276A                     	endif
 12850  01276A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12851  01276A  0E00               	movlw	low (__mediumconst shr (0+16))
 12852  01276C  6EF8               	movwf	tblptru,c
 12853  01276E                     	endif
 12854  01276E  0008               	tblrd		*
 12855  012770  50F5               	movf	tablat,w,c
 12856  012772  6EE6               	movwf	postinc1,c
 12857  012774  0E00               	movlw	0
 12858  012776  6EE6               	movwf	postinc1,c
 12859  012778  ECD9  F0D7         	call	_tolower	;wreg free
 12860  01277C  5001               	movf	btemp^0,w,c
 12861  01277E  6EDF               	movwf	indf2,c
 12862                           
 12863                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
 12864                           ;stkvar	_ct @ sp[(-32)+26]
 12865  012780  0EFB               	movlw	251
 12866  012782  24E1               	addwf	fsr1l,w,c
 12867  012784  6ED9               	movwf	fsr2l,c
 12868  012786  0EFF               	movlw	255
 12869  012788  20E2               	addwfc	fsr1h,w,c
 12870  01278A  6EDA               	movwf	fsr2h,c
 12871  01278C  50DF               	movf	indf2,w,c
 12872  01278E  B4D8               	btfsc	status,2,c
 12873  012790  D029               	goto	l12799
 12874                           
 12875                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
 12876                           ;stkvar	_ct @ sp[(-32)+26]
 12877  012792  0EFC               	movlw	252
 12878  012794  24E1               	addwf	fsr1l,w,c
 12879  012796  6ED9               	movwf	fsr2l,c
 12880  012798  0EFF               	movlw	255
 12881  01279A  20E2               	addwfc	fsr1h,w,c
 12882  01279C  6EDA               	movwf	fsr2h,c
 12883                           
 12884                           ;stkvar	_fmt @ sp[(-32)+-4]
 12885  01279E  0EDC               	movlw	-36
 12886  0127A0  006F FF8F FFE9     	movff	plusw1,fsr0l
 12887  0127A6  0EDD               	movlw	-35
 12888  0127A8  006F FF8F FFEA     	movff	plusw1,fsr0h
 12889  0127AE  006F FFB8  F00B    	movff	postinc0,btemp+10
 12890  0127B4  006F FFB4  F00C    	movff	postdec0,btemp+11
 12891  0127BA  0E02               	movlw	2
 12892  0127BC  260B               	addwf	(btemp+10)^0,f,c
 12893  0127BE  0E00               	movlw	0
 12894  0127C0  220C               	addwfc	(btemp+11)^0,f,c
 12895  0127C2  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 12896  0127C8  0060  F033  FFF7   	movff	btemp+11,tblptrh
 12897  0127CE                     	if	0	;tblptru may be non-zero
 12898  0127CE                     	endif
 12899  0127CE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12900  0127CE  0E00               	movlw	low (__mediumconst shr (0+16))
 12901  0127D0  6EF8               	movwf	tblptru,c
 12902  0127D2                     	endif
 12903  0127D2  0008               	tblrd		*
 12904  0127D4  50F5               	movf	tablat,w,c
 12905  0127D6  6EE6               	movwf	postinc1,c
 12906  0127D8  0E00               	movlw	0
 12907  0127DA  6EE6               	movwf	postinc1,c
 12908  0127DC  ECD9  F0D7         	call	_tolower	;wreg free
 12909  0127E0  5001               	movf	btemp^0,w,c
 12910  0127E2  6EDF               	movwf	indf2,c
 12911  0127E4                     l12799:
 12912                           
 12913                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 12914                           ;stkvar	_fmt @ sp[(-32)+-4]
 12915  0127E4  0EDC               	movlw	-36
 12916  0127E6  006F FF8F FFD9     	movff	plusw1,fsr2l
 12917  0127EC  0EDD               	movlw	-35
 12918  0127EE  006F FF8F FFDA     	movff	plusw1,fsr2h
 12919  0127F4  006F FF7B FFF6     	movff	postinc2,tblptrl
 12920  0127FA  006F FF77 FFF7     	movff	postdec2,tblptrh
 12921  012800                     	if	0	;tblptru may be non-zero
 12922  012800                     	endif
 12923  012800                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12924  012800  0E00               	movlw	low (__mediumconst shr (0+16))
 12925  012802  6EF8               	movwf	tblptru,c
 12926  012804                     	endif
 12927  012804  0008               	tblrd		*
 12928  012806  50F5               	movf	tablat,w,c
 12929  012808  0A63               	xorlw	99
 12930  01280A  A4D8               	btfss	status,2,c
 12931  01280C  D037               	goto	l12809
 12932                           
 12933                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 12934                           ;stkvar	_fmt @ sp[(-32)+-4]
 12935  01280E  0EDC               	movlw	-36
 12936  012810  006F FF8F FFD9     	movff	plusw1,fsr2l
 12937  012816  0EDD               	movlw	-35
 12938  012818  006F FF8F FFDA     	movff	plusw1,fsr2h
 12939  01281E  2ADE               	incf	postinc2,f,c
 12940  012820  0E00               	movlw	0
 12941  012822  22DD               	addwfc	postdec2,f,c
 12942                           
 12943                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 12944                           ;stkvar	_ap @ sp[(-32)+-6]
 12945  012824  0EDA               	movlw	-38
 12946  012826  006F FF8F FFD9     	movff	plusw1,fsr2l
 12947  01282C  0EDB               	movlw	-37
 12948  01282E  006F FF8F FFDA     	movff	plusw1,fsr2h
 12949  012834  0E02               	movlw	2
 12950  012836  5EDE               	subwf	postinc2,f,c
 12951  012838  0E00               	movlw	0
 12952  01283A  5ADD               	subwfb	postdec2,f,c
 12953  01283C  006F FF78  F00B    	movff	postinc2,btemp+10
 12954  012842  006F FF74  F00C    	movff	postdec2,btemp+11
 12955  012848  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12956  01284E  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12957  012854  50DF               	movf	indf2,w,c
 12958  012856  6E0C               	movwf	(btemp+11)^0,c
 12959                           
 12960                           ;stkvar	_c @ sp[(-32)+31]
 12961  012858  0EFF               	movlw	-1
 12962  01285A  0060  F033  FFE3   	movff	btemp+11,plusw1
 12963                           
 12964                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 12965                           ;stkvar	_c @ sp[(-32)+31]
 12966  012860  0EFF               	movlw	-1
 12967  012862  50E3               	movf	plusw1,w,c
 12968  012864  6EE6               	movwf	postinc1,c
 12969                           
 12970                           ;stkvar	_fp @ sp[(-33)+-2]
 12971  012866  0EDD               	movlw	-35
 12972  012868  006F FF8F FFE6     	movff	plusw1,postinc1
 12973  01286E  006F FF8F FFE6     	movff	plusw1,postinc1
 12974  012874  EC53  F0D7         	call	_ctoa	;wreg free
 12975  012878  EFB7  F099         	goto	l2437
 12976  01287C                     l12809:
 12977                           
 12978                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 12979                           ;stkvar	_fmt @ sp[(-32)+-4]
 12980  01287C  0EDC               	movlw	-36
 12981  01287E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12982  012884  0EDD               	movlw	-35
 12983  012886  006F FF8F FFDA     	movff	plusw1,fsr2h
 12984  01288C  006F FF7B FFF6     	movff	postinc2,tblptrl
 12985  012892  006F FF77 FFF7     	movff	postdec2,tblptrh
 12986  012898                     	if	0	;tblptru may be non-zero
 12987  012898                     	endif
 12988  012898                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12989  012898  0E00               	movlw	low (__mediumconst shr (0+16))
 12990  01289A  6EF8               	movwf	tblptru,c
 12991  01289C                     	endif
 12992  01289C  0008               	tblrd		*
 12993  01289E  50F5               	movf	tablat,w,c
 12994  0128A0  0A64               	xorlw	100
 12995  0128A2  B4D8               	btfsc	status,2,c
 12996  0128A4  D015               	goto	u12260
 12997                           
 12998                           ;stkvar	_fmt @ sp[(-32)+-4]
 12999  0128A6  0EDC               	movlw	-36
 13000  0128A8  006F FF8F FFD9     	movff	plusw1,fsr2l
 13001  0128AE  0EDD               	movlw	-35
 13002  0128B0  006F FF8F FFDA     	movff	plusw1,fsr2h
 13003  0128B6  006F FF7B FFF6     	movff	postinc2,tblptrl
 13004  0128BC  006F FF77 FFF7     	movff	postdec2,tblptrh
 13005  0128C2                     	if	0	;tblptru may be non-zero
 13006  0128C2                     	endif
 13007  0128C2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13008  0128C2  0E00               	movlw	low (__mediumconst shr (0+16))
 13009  0128C4  6EF8               	movwf	tblptru,c
 13010  0128C6                     	endif
 13011  0128C6  0008               	tblrd		*
 13012  0128C8  50F5               	movf	tablat,w,c
 13013  0128CA  0A69               	xorlw	105
 13014  0128CC  A4D8               	btfss	status,2,c
 13015  0128CE  D076               	goto	l12821
 13016  0128D0                     u12260:
 13017                           
 13018                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 13019                           ;stkvar	_fmt @ sp[(-32)+-4]
 13020  0128D0  0EDC               	movlw	-36
 13021  0128D2  006F FF8F FFD9     	movff	plusw1,fsr2l
 13022  0128D8  0EDD               	movlw	-35
 13023  0128DA  006F FF8F FFDA     	movff	plusw1,fsr2h
 13024  0128E0  2ADE               	incf	postinc2,f,c
 13025  0128E2  0E00               	movlw	0
 13026  0128E4  22DD               	addwfc	postdec2,f,c
 13027                           
 13028                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 13029                           ;stkvar	_ap @ sp[(-32)+-6]
 13030  0128E6  0EDA               	movlw	-38
 13031  0128E8  006F FF8F FFD9     	movff	plusw1,fsr2l
 13032  0128EE  0EDB               	movlw	-37
 13033  0128F0  006F FF8F FFDA     	movff	plusw1,fsr2h
 13034  0128F6  0E02               	movlw	2
 13035  0128F8  5EDE               	subwf	postinc2,f,c
 13036  0128FA  0E00               	movlw	0
 13037  0128FC  5ADD               	subwfb	postdec2,f,c
 13038  0128FE  006F FF78  F00B    	movff	postinc2,btemp+10
 13039  012904  006F FF74  F00C    	movff	postdec2,btemp+11
 13040  01290A  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13041  012910  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13042  012916  006F FF78  F00B    	movff	postinc2,btemp+10
 13043  01291C  006F FF74  F00C    	movff	postdec2,btemp+11
 13044                           
 13045                           ;stkvar	_ll @ sp[(-32)+14]
 13046  012922  0EEE               	movlw	-18
 13047  012924  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13048  01292A  0EEF               	movlw	-17
 13049  01292C  0060  F033  FFE3   	movff	btemp+11,plusw1
 13050  012932  6A01               	clrf	btemp^0,c
 13051  012934  BEE3               	btfsc	plusw1,7,c
 13052  012936  6801               	setf	btemp^0,c
 13053  012938  0EF0               	movlw	-16
 13054  01293A  0060  F007  FFE3   	movff	btemp,plusw1
 13055  012940  0EF1               	movlw	-15
 13056  012942  0060  F007  FFE3   	movff	btemp,plusw1
 13057  012948  0EF2               	movlw	-14
 13058  01294A  0060  F007  FFE3   	movff	btemp,plusw1
 13059  012950  0EF3               	movlw	-13
 13060  012952  0060  F007  FFE3   	movff	btemp,plusw1
 13061  012958  0EF4               	movlw	-12
 13062  01295A  0060  F007  FFE3   	movff	btemp,plusw1
 13063  012960  0EF5               	movlw	-11
 13064  012962  0060  F007  FFE3   	movff	btemp,plusw1
 13065  012968                     l12817:
 13066                           
 13067                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
 13068                           ;stkvar	_ll @ sp[(-32)+14]
 13069  012968  50E1               	movf	fsr1l,w,c
 13070  01296A  0FEE               	addlw	-18
 13071  01296C  6ED9               	movwf	fsr2l,c
 13072  01296E  50E2               	movf	fsr1h,w,c
 13073  012970  6EDA               	movwf	fsr2h,c
 13074  012972  0EFF               	movlw	255
 13075  012974  22DA               	addwfc	fsr2h,f,c
 13076  012976  006F FF7B FFE6     	movff	postinc2,postinc1
 13077  01297C  006F FF7B FFE6     	movff	postinc2,postinc1
 13078  012982  006F FF7B FFE6     	movff	postinc2,postinc1
 13079  012988  006F FF7B FFE6     	movff	postinc2,postinc1
 13080  01298E  006F FF7B FFE6     	movff	postinc2,postinc1
 13081  012994  006F FF7B FFE6     	movff	postinc2,postinc1
 13082  01299A  006F FF7B FFE6     	movff	postinc2,postinc1
 13083  0129A0  006F FF7B FFE6     	movff	postinc2,postinc1
 13084                           
 13085                           ;stkvar	_fp @ sp[(-40)+-2]
 13086  0129A6  0ED6               	movlw	-42
 13087  0129A8  006F FF8F FFE6     	movff	plusw1,postinc1
 13088  0129AE  006F FF8F FFE6     	movff	plusw1,postinc1
 13089  0129B4  EC11  F0AC         	call	_dtoa	;wreg free
 13090  0129B8  EFB7  F099         	goto	l2437
 13091  0129BC                     l12821:
 13092                           
 13093                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
 13094  0129BC  0E02               	movlw	2
 13095  0129BE  6EE6               	movwf	postinc1,c
 13096  0129C0  0E00               	movlw	0
 13097  0129C2  6EE6               	movwf	postinc1,c
 13098  0129C4  0EEA               	movlw	low STR_73
 13099  0129C6  6EE6               	movwf	postinc1,c
 13100  0129C8  0EFF               	movlw	high STR_73
 13101  0129CA  6EE6               	movwf	postinc1,c
 13102                           
 13103                           ;stkvar	_fmt @ sp[(-36)+-4]
 13104  0129CC  0ED8               	movlw	-40
 13105  0129CE  006F FF8F FFD9     	movff	plusw1,fsr2l
 13106  0129D4  0ED9               	movlw	-39
 13107  0129D6  006F FF8F FFDA     	movff	plusw1,fsr2h
 13108  0129DC  006F FF78  F00B    	movff	postinc2,btemp+10
 13109  0129E2  006F FF74  F00C    	movff	postdec2,btemp+11
 13110  0129E8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13111  0129EE  0060  F033  FFE6   	movff	btemp+11,postinc1
 13112  0129F4  EC3E  F0C0         	call	_strncmp	;wreg free
 13113  0129F8  5001               	movf	btemp^0,w,c
 13114  0129FA  1002               	iorwf	(btemp+1)^0,w,c
 13115  0129FC  B4D8               	btfsc	status,2,c
 13116  0129FE  D022               	goto	u12280
 13117  012A00  0E02               	movlw	2
 13118  012A02  6EE6               	movwf	postinc1,c
 13119  012A04  0E00               	movlw	0
 13120  012A06  6EE6               	movwf	postinc1,c
 13121  012A08  0EF0               	movlw	low STR_77
 13122  012A0A  6EE6               	movwf	postinc1,c
 13123  012A0C  0EFF               	movlw	high STR_77
 13124  012A0E  6EE6               	movwf	postinc1,c
 13125                           
 13126                           ;stkvar	_fmt @ sp[(-36)+-4]
 13127  012A10  0ED8               	movlw	-40
 13128  012A12  006F FF8F FFD9     	movff	plusw1,fsr2l
 13129  012A18  0ED9               	movlw	-39
 13130  012A1A  006F FF8F FFDA     	movff	plusw1,fsr2h
 13131  012A20  006F FF78  F00B    	movff	postinc2,btemp+10
 13132  012A26  006F FF74  F00C    	movff	postdec2,btemp+11
 13133  012A2C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13134  012A32  0060  F033  FFE6   	movff	btemp+11,postinc1
 13135  012A38  EC3E  F0C0         	call	_strncmp	;wreg free
 13136  012A3C  5001               	movf	btemp^0,w,c
 13137  012A3E  1002               	iorwf	(btemp+1)^0,w,c
 13138  012A40  A4D8               	btfss	status,2,c
 13139  012A42  D069               	goto	l12833
 13140  012A44                     u12280:
 13141                           
 13142                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
 13143                           ;stkvar	_fmt @ sp[(-32)+-4]
 13144  012A44  0EDC               	movlw	-36
 13145  012A46  006F FF8F FFD9     	movff	plusw1,fsr2l
 13146  012A4C  0EDD               	movlw	-35
 13147  012A4E  006F FF8F FFDA     	movff	plusw1,fsr2h
 13148  012A54  0E02               	movlw	2
 13149  012A56  26DE               	addwf	postinc2,f,c
 13150  012A58  0E00               	movlw	0
 13151  012A5A  22DD               	addwfc	postdec2,f,c
 13152                           
 13153                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
 13154                           ;stkvar	_ap @ sp[(-32)+-6]
 13155  012A5C  0EDA               	movlw	-38
 13156  012A5E  006F FF8F FFD9     	movff	plusw1,fsr2l
 13157  012A64  0EDB               	movlw	-37
 13158  012A66  006F FF8F FFDA     	movff	plusw1,fsr2h
 13159  012A6C  0E04               	movlw	4
 13160  012A6E  5EDE               	subwf	postinc2,f,c
 13161  012A70  0E00               	movlw	0
 13162  012A72  5ADD               	subwfb	postdec2,f,c
 13163  012A74  006F FF78  F00B    	movff	postinc2,btemp+10
 13164  012A7A  006F FF74  F00C    	movff	postdec2,btemp+11
 13165  012A80  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13166  012A86  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13167  012A8C  006F FF78  F009    	movff	postinc2,btemp+8
 13168  012A92  006F FF78  F00A    	movff	postinc2,btemp+9
 13169  012A98  006F FF78  F00B    	movff	postinc2,btemp+10
 13170  012A9E  006F FF78  F00C    	movff	postinc2,btemp+11
 13171  012AA4  0060  F024  F011   	movff	btemp+8,btemp+16
 13172  012AAA  0060  F028  F012   	movff	btemp+9,btemp+17
 13173  012AB0  0060  F02C  F013   	movff	btemp+10,btemp+18
 13174  012AB6  0060  F030  F014   	movff	btemp+11,btemp+19
 13175  012ABC  6A15               	clrf	(btemp+20)^0,c
 13176  012ABE  BE14               	btfsc	(btemp+19)^0,7,c
 13177  012AC0  6815               	setf	(btemp+20)^0,c
 13178  012AC2  0060  F054  F016   	movff	btemp+20,btemp+21
 13179  012AC8  0060  F054  F017   	movff	btemp+20,btemp+22
 13180  012ACE  0060  F054  F018   	movff	btemp+20,btemp+23
 13181                           
 13182                           ;stkvar	_ll @ sp[(-32)+14]
 13183  012AD4  0EEE               	movlw	-18
 13184  012AD6  0060  F047  FFE3   	movff	btemp+16,plusw1
 13185  012ADC  0EEF               	movlw	-17
 13186  012ADE  0060  F04B  FFE3   	movff	btemp+17,plusw1
 13187  012AE4  0EF0               	movlw	-16
 13188  012AE6  0060  F04F  FFE3   	movff	btemp+18,plusw1
 13189  012AEC  0EF1               	movlw	-15
 13190  012AEE  0060  F053  FFE3   	movff	btemp+19,plusw1
 13191  012AF4  0EF2               	movlw	-14
 13192  012AF6  0060  F057  FFE3   	movff	btemp+20,plusw1
 13193  012AFC  0EF3               	movlw	-13
 13194  012AFE  0060  F05B  FFE3   	movff	btemp+21,plusw1
 13195  012B04  0EF4               	movlw	-12
 13196  012B06  0060  F05F  FFE3   	movff	btemp+22,plusw1
 13197  012B0C  0EF5               	movlw	-11
 13198  012B0E  0060  F063  FFE3   	movff	btemp+23,plusw1
 13199  012B14  D729               	goto	l12817
 13200  012B16                     l12833:
 13201                           
 13202                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
 13203                           ;stkvar	_ct @ sp[(-32)+26]
 13204  012B16  0EFA               	movlw	-6
 13205  012B18  006F FF8C  F001    	movff	plusw1,btemp
 13206  012B1E  0E66               	movlw	102
 13207  012B20  1801               	xorwf	btemp^0,w,c
 13208  012B22  A4D8               	btfss	status,2,c
 13209  012B24  D06E               	goto	l12845
 13210                           
 13211                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
 13212                           ;stkvar	_fmt @ sp[(-32)+-4]
 13213  012B26  0EDC               	movlw	-36
 13214  012B28  006F FF8F FFD9     	movff	plusw1,fsr2l
 13215  012B2E  0EDD               	movlw	-35
 13216  012B30  006F FF8F FFDA     	movff	plusw1,fsr2h
 13217  012B36  006F FF7B FFF6     	movff	postinc2,tblptrl
 13218  012B3C  006F FF77 FFF7     	movff	postdec2,tblptrh
 13219  012B42                     	if	0	;tblptru may be non-zero
 13220  012B42                     	endif
 13221  012B42                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13222  012B42  0E00               	movlw	low (__mediumconst shr (0+16))
 13223  012B44  6EF8               	movwf	tblptru,c
 13224  012B46                     	endif
 13225                           
 13226                           ;stkvar	_c @ sp[(-32)+31]
 13227  012B46  0008               	tblrd		*
 13228  012B48  0EFF               	movlw	-1
 13229  012B4A  006F FFD7 FFE3     	movff	tablat,plusw1
 13230                           
 13231                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
 13232                           ;stkvar	_fmt @ sp[(-32)+-4]
 13233  012B50  0EDC               	movlw	-36
 13234  012B52  006F FF8F FFD9     	movff	plusw1,fsr2l
 13235  012B58  0EDD               	movlw	-35
 13236  012B5A  006F FF8F FFDA     	movff	plusw1,fsr2h
 13237  012B60  2ADE               	incf	postinc2,f,c
 13238  012B62  0E00               	movlw	0
 13239  012B64  22DD               	addwfc	postdec2,f,c
 13240                           
 13241                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
 13242                           ;stkvar	_ap @ sp[(-32)+-6]
 13243  012B66  0EDA               	movlw	-38
 13244  012B68  006F FF8F FFD9     	movff	plusw1,fsr2l
 13245  012B6E  0EDB               	movlw	-37
 13246  012B70  006F FF8F FFDA     	movff	plusw1,fsr2h
 13247  012B76  0E04               	movlw	4
 13248  012B78  5EDE               	subwf	postinc2,f,c
 13249  012B7A  0E00               	movlw	0
 13250  012B7C  5ADD               	subwfb	postdec2,f,c
 13251  012B7E  006F FF78  F00B    	movff	postinc2,btemp+10
 13252  012B84  006F FF74  F00C    	movff	postdec2,btemp+11
 13253  012B8A  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13254  012B90  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13255  012B96  006F FF78  F009    	movff	postinc2,btemp+8
 13256  012B9C  006F FF78  F00A    	movff	postinc2,btemp+9
 13257  012BA2  006F FF78  F00B    	movff	postinc2,btemp+10
 13258  012BA8  006F FF78  F00C    	movff	postinc2,btemp+11
 13259                           
 13260                           ;stkvar	_f @ sp[(-32)+22]
 13261  012BAE  0EF6               	movlw	-10
 13262  012BB0  0060  F027  FFE3   	movff	btemp+8,plusw1
 13263  012BB6  0EF7               	movlw	-9
 13264  012BB8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 13265  012BBE  0EF8               	movlw	-8
 13266  012BC0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13267  012BC6  0EF9               	movlw	-7
 13268  012BC8  0060  F033  FFE3   	movff	btemp+11,plusw1
 13269  012BCE                     l12841:
 13270                           
 13271                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
 13272                           ;stkvar	_c @ sp[(-32)+31]
 13273  012BCE  0EFF               	movlw	-1
 13274  012BD0  50E3               	movf	plusw1,w,c
 13275  012BD2  6EE6               	movwf	postinc1,c
 13276                           
 13277                           ;stkvar	_f @ sp[(-33)+22]
 13278  012BD4  0EF5               	movlw	-11
 13279  012BD6  006F FF8F FFE6     	movff	plusw1,postinc1
 13280  012BDC  006F FF8F FFE6     	movff	plusw1,postinc1
 13281  012BE2  006F FF8F FFE6     	movff	plusw1,postinc1
 13282  012BE8  006F FF8F FFE6     	movff	plusw1,postinc1
 13283                           
 13284                           ;stkvar	_fp @ sp[(-37)+-2]
 13285  012BEE  0ED9               	movlw	-39
 13286  012BF0  006F FF8F FFE6     	movff	plusw1,postinc1
 13287  012BF6  006F FF8F FFE6     	movff	plusw1,postinc1
 13288  012BFC  EC00  F080         	call	_efgtoa	;wreg free
 13289  012C00  D3B6               	goto	l2437
 13290  012C02                     l12845:
 13291                           
 13292                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 13293  012C02  0E02               	movlw	2
 13294  012C04  6EE6               	movwf	postinc1,c
 13295  012C06  0E00               	movlw	0
 13296  012C08  6EE6               	movwf	postinc1,c
 13297  012C0A  0EED               	movlw	low STR_82
 13298  012C0C  6EE6               	movwf	postinc1,c
 13299  012C0E  0EFF               	movlw	high STR_82
 13300  012C10  6EE6               	movwf	postinc1,c
 13301                           
 13302                           ;stkvar	_ct @ sp[(-36)+26]
 13303  012C12  0EF6               	movlw	246
 13304  012C14  24E1               	addwf	fsr1l,w,c
 13305  012C16  6E01               	movwf	btemp^0,c
 13306  012C18  0EFF               	movlw	255
 13307  012C1A  20E2               	addwfc	fsr1h,w,c
 13308  012C1C  6E02               	movwf	(btemp+1)^0,c
 13309  012C1E  0060  F007  FFE6   	movff	btemp,postinc1
 13310  012C24  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13311  012C2A  EC3E  F0C0         	call	_strncmp	;wreg free
 13312  012C2E  5001               	movf	btemp^0,w,c
 13313  012C30  1002               	iorwf	(btemp+1)^0,w,c
 13314  012C32  A4D8               	btfss	status,2,c
 13315  012C34  D096               	goto	l12865
 13316                           
 13317                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 13318                           ;stkvar	_fmt @ sp[(-32)+-4]
 13319  012C36  0EDC               	movlw	-36
 13320  012C38  006F FF8F FFD9     	movff	plusw1,fsr2l
 13321  012C3E  0EDD               	movlw	-35
 13322  012C40  006F FF8F FFDA     	movff	plusw1,fsr2h
 13323  012C46  006F FF78  F00B    	movff	postinc2,btemp+10
 13324  012C4C  006F FF74  F00C    	movff	postdec2,btemp+11
 13325  012C52  0E01               	movlw	1
 13326  012C54  260B               	addwf	(btemp+10)^0,f,c
 13327  012C56  0E00               	movlw	0
 13328  012C58  220C               	addwfc	(btemp+11)^0,f,c
 13329  012C5A  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 13330  012C60  0060  F033  FFF7   	movff	btemp+11,tblptrh
 13331  012C66                     	if	0	;tblptru may be non-zero
 13332  012C66                     	endif
 13333  012C66                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13334  012C66  0E00               	movlw	low (__mediumconst shr (0+16))
 13335  012C68  6EF8               	movwf	tblptru,c
 13336  012C6A                     	endif
 13337                           
 13338                           ;stkvar	_c @ sp[(-32)+31]
 13339  012C6A  0008               	tblrd		*
 13340  012C6C  0EFF               	movlw	-1
 13341  012C6E  006F FFD7 FFE3     	movff	tablat,plusw1
 13342  012C74  0EBF               	movlw	191
 13343  012C76  6E0B               	movwf	(btemp+10)^0,c
 13344  012C78  0EFF               	movlw	255
 13345  012C7A  6E0C               	movwf	(btemp+11)^0,c
 13346                           
 13347                           ;stkvar	_fmt @ sp[(-32)+-4]
 13348  012C7C  0EDC               	movlw	-36
 13349  012C7E  006F FF8F FFD9     	movff	plusw1,fsr2l
 13350  012C84  0EDD               	movlw	-35
 13351  012C86  006F FF8F FFDA     	movff	plusw1,fsr2h
 13352  012C8C  006F FF7B FFF6     	movff	postinc2,tblptrl
 13353  012C92  006F FF77 FFF7     	movff	postdec2,tblptrh
 13354  012C98                     	if	0	;tblptru may be non-zero
 13355  012C98                     	endif
 13356  012C98                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13357  012C98  0E00               	movlw	low (__mediumconst shr (0+16))
 13358  012C9A  6EF8               	movwf	tblptru,c
 13359  012C9C                     	endif
 13360  012C9C  0008               	tblrd		*
 13361  012C9E  50F5               	movf	tablat,w,c
 13362  012CA0  6E09               	movwf	(btemp+8)^0,c
 13363  012CA2  6A0A               	clrf	(btemp+9)^0,c
 13364  012CA4  500B               	movf	(btemp+10)^0,w,c
 13365  012CA6  2609               	addwf	(btemp+8)^0,f,c
 13366  012CA8  500C               	movf	(btemp+11)^0,w,c
 13367  012CAA  220A               	addwfc	(btemp+9)^0,f,c
 13368  012CAC  500A               	movf	(btemp+9)^0,w,c
 13369  012CAE  E106               	bnz	u12310
 13370  012CB0  0E1A               	movlw	26
 13371  012CB2  5C09               	subwf	(btemp+8)^0,w,c
 13372  012CB4  B0D8               	btfsc	status,0,c
 13373  012CB6  D002               	goto	u12310
 13374  012CB8  0E01               	movlw	1
 13375  012CBA  D001               	goto	u12320
 13376  012CBC                     u12310:
 13377  012CBC  0E00               	movlw	0
 13378  012CBE                     u12320:
 13379  012CBE  6E0B               	movwf	(btemp+10)^0,c
 13380  012CC0  6A0C               	clrf	(btemp+11)^0,c
 13381                           
 13382                           ;stkvar	_vfpfcnvrt$5723 @ sp[(-32)+2]
 13383  012CC2  0EE2               	movlw	-30
 13384  012CC4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13385  012CCA  0EE3               	movlw	-29
 13386  012CCC  0060  F033  FFE3   	movff	btemp+11,plusw1
 13387                           
 13388                           ;stkvar	_vfpfcnvrt$5723 @ sp[(-32)+2]
 13389  012CD2  0EE2               	movlw	-30
 13390  012CD4  006F FF8C  F001    	movff	plusw1,btemp
 13391  012CDA  0EE3               	movlw	-29
 13392  012CDC  50E3               	movf	plusw1,w,c
 13393  012CDE  1001               	iorwf	btemp^0,w,c
 13394                           
 13395                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
 13396                           ;stkvar	_ap @ sp[(-32)+-6]
 13397                           
 13398                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
 13399                           
 13400                           ;stkvar	_f @ sp[(-32)+22]
 13401                           
 13402                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
 13403                           ;stkvar	_ap @ sp[(-32)+-6]
 13404  012CE0  0EDA               	movlw	-38
 13405  012CE2  006F FF8F FFD9     	movff	plusw1,fsr2l
 13406  012CE8  0EDB               	movlw	-37
 13407  012CEA  006F FF8F FFDA     	movff	plusw1,fsr2h
 13408  012CF0  0E04               	movlw	4
 13409  012CF2  5EDE               	subwf	postinc2,f,c
 13410  012CF4  0E00               	movlw	0
 13411  012CF6  5ADD               	subwfb	postdec2,f,c
 13412  012CF8  006F FF78  F00B    	movff	postinc2,btemp+10
 13413  012CFE  006F FF74  F00C    	movff	postdec2,btemp+11
 13414  012D04  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13415  012D0A  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13416  012D10  006F FF78  F009    	movff	postinc2,btemp+8
 13417  012D16  006F FF78  F00A    	movff	postinc2,btemp+9
 13418  012D1C  006F FF78  F00B    	movff	postinc2,btemp+10
 13419  012D22  006F FF78  F00C    	movff	postinc2,btemp+11
 13420                           
 13421                           ;stkvar	_f @ sp[(-32)+22]
 13422  012D28  0EF6               	movlw	-10
 13423  012D2A  0060  F027  FFE3   	movff	btemp+8,plusw1
 13424  012D30  0EF7               	movlw	-9
 13425  012D32  0060  F02B  FFE3   	movff	btemp+9,plusw1
 13426  012D38  0EF8               	movlw	-8
 13427  012D3A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13428  012D40  0EF9               	movlw	-7
 13429  012D42  0060  F033  FFE3   	movff	btemp+11,plusw1
 13430                           
 13431                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
 13432                           ;stkvar	_fmt @ sp[(-32)+-4]
 13433  012D48  0EDC               	movlw	-36
 13434  012D4A  006F FF8F FFD9     	movff	plusw1,fsr2l
 13435  012D50  0EDD               	movlw	-35
 13436  012D52  006F FF8F FFDA     	movff	plusw1,fsr2h
 13437  012D58  0E02               	movlw	2
 13438  012D5A  26DE               	addwf	postinc2,f,c
 13439  012D5C  0E00               	movlw	0
 13440  012D5E  22DD               	addwfc	postdec2,f,c
 13441  012D60  D736               	goto	l12841
 13442  012D62                     l12865:
 13443                           
 13444                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 13445                           ;stkvar	_fmt @ sp[(-32)+-4]
 13446  012D62  0EDC               	movlw	-36
 13447  012D64  006F FF8F FFD9     	movff	plusw1,fsr2l
 13448  012D6A  0EDD               	movlw	-35
 13449  012D6C  006F FF8F FFDA     	movff	plusw1,fsr2h
 13450  012D72  006F FF7B FFF6     	movff	postinc2,tblptrl
 13451  012D78  006F FF77 FFF7     	movff	postdec2,tblptrh
 13452  012D7E                     	if	0	;tblptru may be non-zero
 13453  012D7E                     	endif
 13454  012D7E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13455  012D7E  0E00               	movlw	low (__mediumconst shr (0+16))
 13456  012D80  6EF8               	movwf	tblptru,c
 13457  012D82                     	endif
 13458  012D82  0008               	tblrd		*
 13459  012D84  50F5               	movf	tablat,w,c
 13460  012D86  0A73               	xorlw	115
 13461  012D88  A4D8               	btfss	status,2,c
 13462  012D8A  D042               	goto	l12875
 13463                           
 13464                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 13465                           ;stkvar	_fmt @ sp[(-32)+-4]
 13466  012D8C  0EDC               	movlw	-36
 13467  012D8E  006F FF8F FFD9     	movff	plusw1,fsr2l
 13468  012D94  0EDD               	movlw	-35
 13469  012D96  006F FF8F FFDA     	movff	plusw1,fsr2h
 13470  012D9C  2ADE               	incf	postinc2,f,c
 13471  012D9E  0E00               	movlw	0
 13472  012DA0  22DD               	addwfc	postdec2,f,c
 13473                           
 13474                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 13475                           ;stkvar	_ap @ sp[(-32)+-6]
 13476  012DA2  0EDA               	movlw	-38
 13477  012DA4  006F FF8F FFD9     	movff	plusw1,fsr2l
 13478  012DAA  0EDB               	movlw	-37
 13479  012DAC  006F FF8F FFDA     	movff	plusw1,fsr2h
 13480  012DB2  0E02               	movlw	2
 13481  012DB4  5EDE               	subwf	postinc2,f,c
 13482  012DB6  0E00               	movlw	0
 13483  012DB8  5ADD               	subwfb	postdec2,f,c
 13484  012DBA  006F FF78  F00B    	movff	postinc2,btemp+10
 13485  012DC0  006F FF74  F00C    	movff	postdec2,btemp+11
 13486  012DC6  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13487  012DCC  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13488  012DD2  006F FF78  F00B    	movff	postinc2,btemp+10
 13489  012DD8  006F FF74  F00C    	movff	postdec2,btemp+11
 13490                           
 13491                           ;stkvar	_cp @ sp[(-32)+29]
 13492  012DDE  0EFE               	movlw	-2
 13493  012DE0  0060  F033  FFE3   	movff	btemp+11,plusw1
 13494  012DE6  0EFD               	movlw	-3
 13495  012DE8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13496                           
 13497                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 13498                           ;stkvar	_cp @ sp[(-32)+29]
 13499  012DEE  0EFD               	movlw	-3
 13500  012DF0  006F FF8F FFE6     	movff	plusw1,postinc1
 13501  012DF6  006F FF8F FFE6     	movff	plusw1,postinc1
 13502                           
 13503                           ;stkvar	_fp @ sp[(-34)+-2]
 13504  012DFC  0EDC               	movlw	-36
 13505  012DFE  006F FF8F FFE6     	movff	plusw1,postinc1
 13506  012E04  006F FF8F FFE6     	movff	plusw1,postinc1
 13507  012E0A  EC22  F0BA         	call	_stoa	;wreg free
 13508  012E0E  D2AF               	goto	l2437
 13509  012E10                     l12875:
 13510                           
 13511                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
 13512                           ;stkvar	_fmt @ sp[(-32)+-4]
 13513  012E10  0EDC               	movlw	-36
 13514  012E12  006F FF8F FFD9     	movff	plusw1,fsr2l
 13515  012E18  0EDD               	movlw	-35
 13516  012E1A  006F FF8F FFDA     	movff	plusw1,fsr2h
 13517  012E20  006F FF7B FFF6     	movff	postinc2,tblptrl
 13518  012E26  006F FF77 FFF7     	movff	postdec2,tblptrh
 13519  012E2C                     	if	0	;tblptru may be non-zero
 13520  012E2C                     	endif
 13521  012E2C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13522  012E2C  0E00               	movlw	low (__mediumconst shr (0+16))
 13523  012E2E  6EF8               	movwf	tblptru,c
 13524  012E30                     	endif
 13525  012E30  0008               	tblrd		*
 13526  012E32  50F5               	movf	tablat,w,c
 13527  012E34  0A75               	xorlw	117
 13528  012E36  A4D8               	btfss	status,2,c
 13529  012E38  D07C               	goto	l12885
 13530                           
 13531                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
 13532                           ;stkvar	_fmt @ sp[(-32)+-4]
 13533  012E3A  0EDC               	movlw	-36
 13534  012E3C  006F FF8F FFD9     	movff	plusw1,fsr2l
 13535  012E42  0EDD               	movlw	-35
 13536  012E44  006F FF8F FFDA     	movff	plusw1,fsr2h
 13537  012E4A  2ADE               	incf	postinc2,f,c
 13538  012E4C  0E00               	movlw	0
 13539  012E4E  22DD               	addwfc	postdec2,f,c
 13540                           
 13541                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1185:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 13542                           ;stkvar	_ap @ sp[(-32)+-6]
 13543  012E50  0EDA               	movlw	-38
 13544  012E52  006F FF8F FFD9     	movff	plusw1,fsr2l
 13545  012E58  0EDB               	movlw	-37
 13546  012E5A  006F FF8F FFDA     	movff	plusw1,fsr2h
 13547  012E60  0E02               	movlw	2
 13548  012E62  5EDE               	subwf	postinc2,f,c
 13549  012E64  0E00               	movlw	0
 13550  012E66  5ADD               	subwfb	postdec2,f,c
 13551  012E68  006F FF78  F00B    	movff	postinc2,btemp+10
 13552  012E6E  006F FF74  F00C    	movff	postdec2,btemp+11
 13553  012E74  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13554  012E7A  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13555  012E80  006F FF78  F00B    	movff	postinc2,btemp+10
 13556  012E86  006F FF74  F00C    	movff	postdec2,btemp+11
 13557  012E8C  500B               	movf	(btemp+10)^0,w,c
 13558  012E8E  6E11               	movwf	(btemp+16)^0,c
 13559  012E90  500C               	movf	(btemp+11)^0,w,c
 13560  012E92  6E12               	movwf	(btemp+17)^0,c
 13561  012E94  6A13               	clrf	(btemp+18)^0,c
 13562  012E96  6A14               	clrf	(btemp+19)^0,c
 13563  012E98  6A15               	clrf	(btemp+20)^0,c
 13564  012E9A  6A16               	clrf	(btemp+21)^0,c
 13565  012E9C  6A17               	clrf	(btemp+22)^0,c
 13566  012E9E  6A18               	clrf	(btemp+23)^0,c
 13567                           
 13568                           ;stkvar	_llu @ sp[(-32)+6]
 13569  012EA0  0EE6               	movlw	-26
 13570  012EA2  0060  F047  FFE3   	movff	btemp+16,plusw1
 13571  012EA8  0EE7               	movlw	-25
 13572  012EAA  0060  F04B  FFE3   	movff	btemp+17,plusw1
 13573  012EB0  0EE8               	movlw	-24
 13574  012EB2  0060  F04F  FFE3   	movff	btemp+18,plusw1
 13575  012EB8  0EE9               	movlw	-23
 13576  012EBA  0060  F053  FFE3   	movff	btemp+19,plusw1
 13577  012EC0  0EEA               	movlw	-22
 13578  012EC2  0060  F057  FFE3   	movff	btemp+20,plusw1
 13579  012EC8  0EEB               	movlw	-21
 13580  012ECA  0060  F05B  FFE3   	movff	btemp+21,plusw1
 13581  012ED0  0EEC               	movlw	-20
 13582  012ED2  0060  F05F  FFE3   	movff	btemp+22,plusw1
 13583  012ED8  0EED               	movlw	-19
 13584  012EDA  0060  F063  FFE3   	movff	btemp+23,plusw1
 13585                           
 13586                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1187:             return utoa
      +                          (fp, llu);
 13587                           ;stkvar	_llu @ sp[(-32)+6]
 13588  012EE0  50E1               	movf	fsr1l,w,c
 13589  012EE2  0FE6               	addlw	-26
 13590  012EE4  6ED9               	movwf	fsr2l,c
 13591  012EE6  50E2               	movf	fsr1h,w,c
 13592  012EE8  6EDA               	movwf	fsr2h,c
 13593  012EEA  0EFF               	movlw	255
 13594  012EEC  22DA               	addwfc	fsr2h,f,c
 13595  012EEE  006F FF7B FFE6     	movff	postinc2,postinc1
 13596  012EF4  006F FF7B FFE6     	movff	postinc2,postinc1
 13597  012EFA  006F FF7B FFE6     	movff	postinc2,postinc1
 13598  012F00  006F FF7B FFE6     	movff	postinc2,postinc1
 13599  012F06  006F FF7B FFE6     	movff	postinc2,postinc1
 13600  012F0C  006F FF7B FFE6     	movff	postinc2,postinc1
 13601  012F12  006F FF7B FFE6     	movff	postinc2,postinc1
 13602  012F18  006F FF7B FFE6     	movff	postinc2,postinc1
 13603                           
 13604                           ;stkvar	_fp @ sp[(-40)+-2]
 13605  012F1E  0ED6               	movlw	-42
 13606  012F20  006F FF8F FFE6     	movff	plusw1,postinc1
 13607  012F26  006F FF8F FFE6     	movff	plusw1,postinc1
 13608  012F2C  EC0A  F0B4         	call	_utoa	;wreg free
 13609  012F30  D21E               	goto	l2437
 13610  012F32                     l12885:
 13611                           
 13612                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 13613  012F32  0E02               	movlw	2
 13614  012F34  6EE6               	movwf	postinc1,c
 13615  012F36  0E00               	movlw	0
 13616  012F38  6EE6               	movwf	postinc1,c
 13617  012F3A  0EF3               	movlw	low STR_87
 13618  012F3C  6EE6               	movwf	postinc1,c
 13619  012F3E  0EFF               	movlw	high STR_87
 13620  012F40  6EE6               	movwf	postinc1,c
 13621                           
 13622                           ;stkvar	_fmt @ sp[(-36)+-4]
 13623  012F42  0ED8               	movlw	-40
 13624  012F44  006F FF8F FFD9     	movff	plusw1,fsr2l
 13625  012F4A  0ED9               	movlw	-39
 13626  012F4C  006F FF8F FFDA     	movff	plusw1,fsr2h
 13627  012F52  006F FF78  F00B    	movff	postinc2,btemp+10
 13628  012F58  006F FF74  F00C    	movff	postdec2,btemp+11
 13629  012F5E  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13630  012F64  0060  F033  FFE6   	movff	btemp+11,postinc1
 13631  012F6A  EC3E  F0C0         	call	_strncmp	;wreg free
 13632  012F6E  5001               	movf	btemp^0,w,c
 13633  012F70  1002               	iorwf	(btemp+1)^0,w,c
 13634  012F72  A4D8               	btfss	status,2,c
 13635  012F74  D039               	goto	l12895
 13636                           
 13637                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
 13638                           ;stkvar	_fmt @ sp[(-32)+-4]
 13639  012F76  0EDC               	movlw	-36
 13640  012F78  006F FF8F FFD9     	movff	plusw1,fsr2l
 13641  012F7E  0EDD               	movlw	-35
 13642  012F80  006F FF8F FFDA     	movff	plusw1,fsr2h
 13643  012F86  0E02               	movlw	2
 13644  012F88  26DE               	addwf	postinc2,f,c
 13645  012F8A  0E00               	movlw	0
 13646  012F8C  22DD               	addwfc	postdec2,f,c
 13647                           
 13648                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 13649                           ;stkvar	_ap @ sp[(-32)+-6]
 13650  012F8E  0EDA               	movlw	-38
 13651  012F90  006F FF8F FFD9     	movff	plusw1,fsr2l
 13652  012F96  0EDB               	movlw	-37
 13653  012F98  006F FF8F FFDA     	movff	plusw1,fsr2h
 13654  012F9E  0E04               	movlw	4
 13655  012FA0  5EDE               	subwf	postinc2,f,c
 13656  012FA2  0E00               	movlw	0
 13657  012FA4  5ADD               	subwfb	postdec2,f,c
 13658  012FA6  006F FF78  F00B    	movff	postinc2,btemp+10
 13659  012FAC  006F FF74  F00C    	movff	postdec2,btemp+11
 13660  012FB2  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13661  012FB8  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13662  012FBE  006F FF78  F009    	movff	postinc2,btemp+8
 13663  012FC4  006F FF78  F00A    	movff	postinc2,btemp+9
 13664  012FCA  006F FF78  F00B    	movff	postinc2,btemp+10
 13665  012FD0  006F FF78  F00C    	movff	postinc2,btemp+11
 13666  012FD6  5009               	movf	(btemp+8)^0,w,c
 13667  012FD8  6E11               	movwf	(btemp+16)^0,c
 13668  012FDA  500A               	movf	(btemp+9)^0,w,c
 13669  012FDC  6E12               	movwf	(btemp+17)^0,c
 13670  012FDE  500B               	movf	(btemp+10)^0,w,c
 13671  012FE0  6E13               	movwf	(btemp+18)^0,c
 13672  012FE2  500C               	movf	(btemp+11)^0,w,c
 13673  012FE4  6E14               	movwf	(btemp+19)^0,c
 13674  012FE6  D758               	goto	L11
 13675  012FE8                     l12895:
 13676                           
 13677                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
 13678                           ;stkvar	_fmt @ sp[(-32)+-4]
 13679  012FE8  0EDC               	movlw	-36
 13680  012FEA  006F FF8F FFD9     	movff	plusw1,fsr2l
 13681  012FF0  0EDD               	movlw	-35
 13682  012FF2  006F FF8F FFDA     	movff	plusw1,fsr2h
 13683  012FF8  006F FF7B FFF6     	movff	postinc2,tblptrl
 13684  012FFE  006F FF77 FFF7     	movff	postdec2,tblptrh
 13685  013004                     	if	0	;tblptru may be non-zero
 13686  013004                     	endif
 13687  013004                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13688  013004  0E00               	movlw	low (__mediumconst shr (0+16))
 13689  013006  6EF8               	movwf	tblptru,c
 13690  013008                     	endif
 13691  013008  0008               	tblrd		*
 13692  01300A  50F5               	movf	tablat,w,c
 13693  01300C  0A78               	xorlw	120
 13694  01300E  B4D8               	btfsc	status,2,c
 13695  013010  D015               	goto	u12380
 13696                           
 13697                           ;stkvar	_fmt @ sp[(-32)+-4]
 13698  013012  0EDC               	movlw	-36
 13699  013014  006F FF8F FFD9     	movff	plusw1,fsr2l
 13700  01301A  0EDD               	movlw	-35
 13701  01301C  006F FF8F FFDA     	movff	plusw1,fsr2h
 13702  013022  006F FF7B FFF6     	movff	postinc2,tblptrl
 13703  013028  006F FF77 FFF7     	movff	postdec2,tblptrh
 13704  01302E                     	if	0	;tblptru may be non-zero
 13705  01302E                     	endif
 13706  01302E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13707  01302E  0E00               	movlw	low (__mediumconst shr (0+16))
 13708  013030  6EF8               	movwf	tblptru,c
 13709  013032                     	endif
 13710  013032  0008               	tblrd		*
 13711  013034  50F5               	movf	tablat,w,c
 13712  013036  0A58               	xorlw	88
 13713  013038  A4D8               	btfss	status,2,c
 13714  01303A  D094               	goto	l12909
 13715  01303C                     u12380:
 13716                           
 13717                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
 13718                           ;stkvar	_fmt @ sp[(-32)+-4]
 13719  01303C  0EDC               	movlw	-36
 13720  01303E  006F FF8F FFD9     	movff	plusw1,fsr2l
 13721  013044  0EDD               	movlw	-35
 13722  013046  006F FF8F FFDA     	movff	plusw1,fsr2h
 13723  01304C  006F FF7B FFF6     	movff	postinc2,tblptrl
 13724  013052  006F FF77 FFF7     	movff	postdec2,tblptrh
 13725  013058                     	if	0	;tblptru may be non-zero
 13726  013058                     	endif
 13727  013058                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13728  013058  0E00               	movlw	low (__mediumconst shr (0+16))
 13729  01305A  6EF8               	movwf	tblptru,c
 13730  01305C                     	endif
 13731                           
 13732                           ;stkvar	_c @ sp[(-32)+31]
 13733  01305C  0008               	tblrd		*
 13734  01305E  0EFF               	movlw	-1
 13735  013060  006F FFD7 FFE3     	movff	tablat,plusw1
 13736                           
 13737                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
 13738                           ;stkvar	_fmt @ sp[(-32)+-4]
 13739  013066  0EDC               	movlw	-36
 13740  013068  006F FF8F FFD9     	movff	plusw1,fsr2l
 13741  01306E  0EDD               	movlw	-35
 13742  013070  006F FF8F FFDA     	movff	plusw1,fsr2h
 13743  013076  2ADE               	incf	postinc2,f,c
 13744  013078  0E00               	movlw	0
 13745  01307A  22DD               	addwfc	postdec2,f,c
 13746                           
 13747                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 13748                           ;stkvar	_ap @ sp[(-32)+-6]
 13749  01307C  0EDA               	movlw	-38
 13750  01307E  006F FF8F FFD9     	movff	plusw1,fsr2l
 13751  013084  0EDB               	movlw	-37
 13752  013086  006F FF8F FFDA     	movff	plusw1,fsr2h
 13753  01308C  0E02               	movlw	2
 13754  01308E  5EDE               	subwf	postinc2,f,c
 13755  013090  0E00               	movlw	0
 13756  013092  5ADD               	subwfb	postdec2,f,c
 13757  013094  006F FF78  F00B    	movff	postinc2,btemp+10
 13758  01309A  006F FF74  F00C    	movff	postdec2,btemp+11
 13759  0130A0  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13760  0130A6  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13761  0130AC  006F FF78  F00B    	movff	postinc2,btemp+10
 13762  0130B2  006F FF74  F00C    	movff	postdec2,btemp+11
 13763  0130B8  500B               	movf	(btemp+10)^0,w,c
 13764  0130BA  6E11               	movwf	(btemp+16)^0,c
 13765  0130BC  500C               	movf	(btemp+11)^0,w,c
 13766  0130BE  6E12               	movwf	(btemp+17)^0,c
 13767  0130C0  6A13               	clrf	(btemp+18)^0,c
 13768  0130C2  6A14               	clrf	(btemp+19)^0,c
 13769  0130C4  6A15               	clrf	(btemp+20)^0,c
 13770  0130C6  6A16               	clrf	(btemp+21)^0,c
 13771  0130C8  6A17               	clrf	(btemp+22)^0,c
 13772  0130CA  6A18               	clrf	(btemp+23)^0,c
 13773                           
 13774                           ;stkvar	_llu @ sp[(-32)+6]
 13775  0130CC  0EE6               	movlw	-26
 13776  0130CE  0060  F047  FFE3   	movff	btemp+16,plusw1
 13777  0130D4  0EE7               	movlw	-25
 13778  0130D6  0060  F04B  FFE3   	movff	btemp+17,plusw1
 13779  0130DC  0EE8               	movlw	-24
 13780  0130DE  0060  F04F  FFE3   	movff	btemp+18,plusw1
 13781  0130E4  0EE9               	movlw	-23
 13782  0130E6  0060  F053  FFE3   	movff	btemp+19,plusw1
 13783  0130EC  0EEA               	movlw	-22
 13784  0130EE  0060  F057  FFE3   	movff	btemp+20,plusw1
 13785  0130F4  0EEB               	movlw	-21
 13786  0130F6  0060  F05B  FFE3   	movff	btemp+21,plusw1
 13787  0130FC  0EEC               	movlw	-20
 13788  0130FE  0060  F05F  FFE3   	movff	btemp+22,plusw1
 13789  013104  0EED               	movlw	-19
 13790  013106  0060  F063  FFE3   	movff	btemp+23,plusw1
 13791                           
 13792                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
 13793                           ;stkvar	_c @ sp[(-32)+31]
 13794  01310C  0EFF               	movlw	-1
 13795  01310E  50E3               	movf	plusw1,w,c
 13796  013110  6EE6               	movwf	postinc1,c
 13797                           
 13798                           ;stkvar	_llu @ sp[(-33)+6]
 13799  013112  50E1               	movf	fsr1l,w,c
 13800  013114  0FE5               	addlw	-27
 13801  013116  6ED9               	movwf	fsr2l,c
 13802  013118  50E2               	movf	fsr1h,w,c
 13803  01311A  6EDA               	movwf	fsr2h,c
 13804  01311C  0EFF               	movlw	255
 13805  01311E  22DA               	addwfc	fsr2h,f,c
 13806  013120  006F FF7B FFE6     	movff	postinc2,postinc1
 13807  013126  006F FF7B FFE6     	movff	postinc2,postinc1
 13808  01312C  006F FF7B FFE6     	movff	postinc2,postinc1
 13809  013132  006F FF7B FFE6     	movff	postinc2,postinc1
 13810  013138  006F FF7B FFE6     	movff	postinc2,postinc1
 13811  01313E  006F FF7B FFE6     	movff	postinc2,postinc1
 13812  013144  006F FF7B FFE6     	movff	postinc2,postinc1
 13813  01314A  006F FF7B FFE6     	movff	postinc2,postinc1
 13814                           
 13815                           ;stkvar	_fp @ sp[(-41)+-2]
 13816  013150  0ED5               	movlw	-43
 13817  013152  006F FF8F FFE6     	movff	plusw1,postinc1
 13818  013158  006F FF8F FFE6     	movff	plusw1,postinc1
 13819  01315E  EC77  F0B0         	call	_xtoa	;wreg free
 13820  013162  D105               	goto	l2437
 13821  013164                     l12909:
 13822                           
 13823                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
 13824  013164  0E02               	movlw	2
 13825  013166  6EE6               	movwf	postinc1,c
 13826  013168  0E00               	movlw	0
 13827  01316A  6EE6               	movwf	postinc1,c
 13828  01316C  0EF6               	movlw	low STR_92
 13829  01316E  6EE6               	movwf	postinc1,c
 13830  013170  0EFF               	movlw	high STR_92
 13831  013172  6EE6               	movwf	postinc1,c
 13832                           
 13833                           ;stkvar	_fmt @ sp[(-36)+-4]
 13834  013174  0ED8               	movlw	-40
 13835  013176  006F FF8F FFD9     	movff	plusw1,fsr2l
 13836  01317C  0ED9               	movlw	-39
 13837  01317E  006F FF8F FFDA     	movff	plusw1,fsr2h
 13838  013184  006F FF78  F00B    	movff	postinc2,btemp+10
 13839  01318A  006F FF74  F00C    	movff	postdec2,btemp+11
 13840  013190  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13841  013196  0060  F033  FFE6   	movff	btemp+11,postinc1
 13842  01319C  EC3E  F0C0         	call	_strncmp	;wreg free
 13843  0131A0  5001               	movf	btemp^0,w,c
 13844  0131A2  1002               	iorwf	(btemp+1)^0,w,c
 13845  0131A4  B4D8               	btfsc	status,2,c
 13846  0131A6  D022               	goto	u12400
 13847  0131A8  0E02               	movlw	2
 13848  0131AA  6EE6               	movwf	postinc1,c
 13849  0131AC  0E00               	movlw	0
 13850  0131AE  6EE6               	movwf	postinc1,c
 13851  0131B0  0EE7               	movlw	low STR_96
 13852  0131B2  6EE6               	movwf	postinc1,c
 13853  0131B4  0EFF               	movlw	high STR_96
 13854  0131B6  6EE6               	movwf	postinc1,c
 13855                           
 13856                           ;stkvar	_fmt @ sp[(-36)+-4]
 13857  0131B8  0ED8               	movlw	-40
 13858  0131BA  006F FF8F FFD9     	movff	plusw1,fsr2l
 13859  0131C0  0ED9               	movlw	-39
 13860  0131C2  006F FF8F FFDA     	movff	plusw1,fsr2h
 13861  0131C8  006F FF78  F00B    	movff	postinc2,btemp+10
 13862  0131CE  006F FF74  F00C    	movff	postdec2,btemp+11
 13863  0131D4  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13864  0131DA  0060  F033  FFE6   	movff	btemp+11,postinc1
 13865  0131E0  EC3E  F0C0         	call	_strncmp	;wreg free
 13866  0131E4  5001               	movf	btemp^0,w,c
 13867  0131E6  1002               	iorwf	(btemp+1)^0,w,c
 13868  0131E8  A4D8               	btfss	status,2,c
 13869  0131EA  D058               	goto	l12923
 13870  0131EC                     u12400:
 13871                           
 13872                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
 13873                           ;stkvar	_fmt @ sp[(-32)+-4]
 13874  0131EC  0EDC               	movlw	-36
 13875  0131EE  006F FF8F FFD9     	movff	plusw1,fsr2l
 13876  0131F4  0EDD               	movlw	-35
 13877  0131F6  006F FF8F FFDA     	movff	plusw1,fsr2h
 13878  0131FC  006F FF78  F00B    	movff	postinc2,btemp+10
 13879  013202  006F FF74  F00C    	movff	postdec2,btemp+11
 13880  013208  0E01               	movlw	1
 13881  01320A  260B               	addwf	(btemp+10)^0,f,c
 13882  01320C  0E00               	movlw	0
 13883  01320E  220C               	addwfc	(btemp+11)^0,f,c
 13884  013210  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 13885  013216  0060  F033  FFF7   	movff	btemp+11,tblptrh
 13886  01321C                     	if	0	;tblptru may be non-zero
 13887  01321C                     	endif
 13888  01321C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13889  01321C  0E00               	movlw	low (__mediumconst shr (0+16))
 13890  01321E  6EF8               	movwf	tblptru,c
 13891  013220                     	endif
 13892                           
 13893                           ;stkvar	_c @ sp[(-32)+31]
 13894  013220  0008               	tblrd		*
 13895  013222  0EFF               	movlw	-1
 13896  013224  006F FFD7 FFE3     	movff	tablat,plusw1
 13897                           
 13898                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
 13899                           ;stkvar	_fmt @ sp[(-32)+-4]
 13900  01322A  0EDC               	movlw	-36
 13901  01322C  006F FF8F FFD9     	movff	plusw1,fsr2l
 13902  013232  0EDD               	movlw	-35
 13903  013234  006F FF8F FFDA     	movff	plusw1,fsr2h
 13904  01323A  0E02               	movlw	2
 13905  01323C  26DE               	addwf	postinc2,f,c
 13906  01323E  0E00               	movlw	0
 13907  013240  22DD               	addwfc	postdec2,f,c
 13908                           
 13909                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 13910                           ;stkvar	_ap @ sp[(-32)+-6]
 13911  013242  0EDA               	movlw	-38
 13912  013244  006F FF8F FFD9     	movff	plusw1,fsr2l
 13913  01324A  0EDB               	movlw	-37
 13914  01324C  006F FF8F FFDA     	movff	plusw1,fsr2h
 13915  013252  0E04               	movlw	4
 13916  013254  5EDE               	subwf	postinc2,f,c
 13917  013256  0E00               	movlw	0
 13918  013258  5ADD               	subwfb	postdec2,f,c
 13919  01325A  006F FF78  F00B    	movff	postinc2,btemp+10
 13920  013260  006F FF74  F00C    	movff	postdec2,btemp+11
 13921  013266  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13922  01326C  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13923  013272  006F FF78  F009    	movff	postinc2,btemp+8
 13924  013278  006F FF78  F00A    	movff	postinc2,btemp+9
 13925  01327E  006F FF78  F00B    	movff	postinc2,btemp+10
 13926  013284  006F FF78  F00C    	movff	postinc2,btemp+11
 13927  01328A  5009               	movf	(btemp+8)^0,w,c
 13928  01328C  6E11               	movwf	(btemp+16)^0,c
 13929  01328E  500A               	movf	(btemp+9)^0,w,c
 13930  013290  6E12               	movwf	(btemp+17)^0,c
 13931  013292  500B               	movf	(btemp+10)^0,w,c
 13932  013294  6E13               	movwf	(btemp+18)^0,c
 13933  013296  500C               	movf	(btemp+11)^0,w,c
 13934  013298  6E14               	movwf	(btemp+19)^0,c
 13935  01329A  D714               	goto	L12
 13936  01329C                     l12923:
 13937                           
 13938                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 13939                           ;stkvar	_fmt @ sp[(-32)+-4]
 13940  01329C  0EDC               	movlw	-36
 13941  01329E  006F FF8F FFD9     	movff	plusw1,fsr2l
 13942  0132A4  0EDD               	movlw	-35
 13943  0132A6  006F FF8F FFDA     	movff	plusw1,fsr2h
 13944  0132AC  006F FF7B FFF6     	movff	postinc2,tblptrl
 13945  0132B2  006F FF77 FFF7     	movff	postdec2,tblptrh
 13946  0132B8                     	if	0	;tblptru may be non-zero
 13947  0132B8                     	endif
 13948  0132B8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13949  0132B8  0E00               	movlw	low (__mediumconst shr (0+16))
 13950  0132BA  6EF8               	movwf	tblptru,c
 13951  0132BC                     	endif
 13952  0132BC  0008               	tblrd		*
 13953  0132BE  50F5               	movf	tablat,w,c
 13954  0132C0  0A25               	xorlw	37
 13955  0132C2  A4D8               	btfss	status,2,c
 13956  0132C4  D01A               	goto	l12933
 13957                           
 13958                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 13959                           ;stkvar	_fmt @ sp[(-32)+-4]
 13960  0132C6  0EDC               	movlw	-36
 13961  0132C8  006F FF8F FFD9     	movff	plusw1,fsr2l
 13962  0132CE  0EDD               	movlw	-35
 13963  0132D0  006F FF8F FFDA     	movff	plusw1,fsr2h
 13964  0132D6  2ADE               	incf	postinc2,f,c
 13965  0132D8  0E00               	movlw	0
 13966  0132DA  22DD               	addwfc	postdec2,f,c
 13967                           
 13968                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 13969                           ;stkvar	_fp @ sp[(-32)+-2]
 13970  0132DC  0EDE               	movlw	-34
 13971  0132DE  006F FF8F FFE6     	movff	plusw1,postinc1
 13972  0132E4  006F FF8F FFE6     	movff	plusw1,postinc1
 13973  0132EA  0E25               	movlw	37
 13974  0132EC  6EE6               	movwf	postinc1,c
 13975  0132EE  0E00               	movlw	0
 13976  0132F0  6EE6               	movwf	postinc1,c
 13977  0132F2  ECD8  F0CC         	call	_fputc	;wreg free
 13978  0132F6                     l12929:
 13979                           
 13980                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 13981  0132F6  0E01               	movlw	1
 13982  0132F8  D00C               	goto	L13
 13983  0132FA                     l12933:
 13984                           
 13985                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 13986                           ;stkvar	_fmt @ sp[(-32)+-4]
 13987  0132FA  0EDC               	movlw	-36
 13988  0132FC  006F FF8F FFD9     	movff	plusw1,fsr2l
 13989  013302  0EDD               	movlw	-35
 13990  013304  006F FF8F FFDA     	movff	plusw1,fsr2h
 13991  01330A  2ADE               	incf	postinc2,f,c
 13992  01330C  0E00               	movlw	0
 13993  01330E  22DD               	addwfc	postdec2,f,c
 13994                           
 13995                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 13996  013310  0E00               	movlw	0
 13997  013312                     L13:
 13998  013312  6E01               	movwf	btemp^0,c
 13999  013314  0E00               	movlw	0
 14000  013316  6E02               	movwf	(btemp+1)^0,c
 14001  013318  D02A               	goto	l2437
 14002  01331A                     l12939:
 14003                           
 14004                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 14005                           ;stkvar	_fp @ sp[(-32)+-2]
 14006  01331A  0EDE               	movlw	-34
 14007  01331C  006F FF8F FFE6     	movff	plusw1,postinc1
 14008  013322  006F FF8F FFE6     	movff	plusw1,postinc1
 14009                           
 14010                           ;stkvar	_fmt @ sp[(-34)+-4]
 14011  013328  0EDA               	movlw	-38
 14012  01332A  006F FF8F FFD9     	movff	plusw1,fsr2l
 14013  013330  0EDB               	movlw	-37
 14014  013332  006F FF8F FFDA     	movff	plusw1,fsr2h
 14015  013338  006F FF7B FFF6     	movff	postinc2,tblptrl
 14016  01333E  006F FF77 FFF7     	movff	postdec2,tblptrh
 14017  013344                     	if	0	;tblptru may be non-zero
 14018  013344                     	endif
 14019  013344                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14020  013344  0E00               	movlw	low (__mediumconst shr (0+16))
 14021  013346  6EF8               	movwf	tblptru,c
 14022  013348                     	endif
 14023  013348  0008               	tblrd		*
 14024  01334A  50F5               	movf	tablat,w,c
 14025  01334C  6EE6               	movwf	postinc1,c
 14026  01334E  0E00               	movlw	0
 14027  013350  6EE6               	movwf	postinc1,c
 14028  013352  ECD8  F0CC         	call	_fputc	;wreg free
 14029                           
 14030                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 14031                           ;stkvar	_fmt @ sp[(-32)+-4]
 14032  013356  0EDC               	movlw	-36
 14033  013358  006F FF8F FFD9     	movff	plusw1,fsr2l
 14034  01335E  0EDD               	movlw	-35
 14035  013360  006F FF8F FFDA     	movff	plusw1,fsr2h
 14036  013366  2ADE               	incf	postinc2,f,c
 14037  013368  0E00               	movlw	0
 14038  01336A  22DD               	addwfc	postdec2,f,c
 14039  01336C  D7C4               	goto	l12929
 14040  01336E                     l2437:
 14041                           
 14042                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 14043  01336E  0EDA               	movlw	218
 14044  013370  26E1               	addwf	fsr1l,f,c
 14045  013372  0EFF               	movlw	255
 14046  013374  22E2               	addwfc	fsr1h,f,c
 14047  013376  0012               	return		;funcret
 14048  013378                     __end_of_vfpfcnvrt:
 14049                           	opt callstack 0
 14050                           
 14051 ;; *************** function _xtoa *****************
 14052 ;; Defined at:
 14053 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 14054 ;; Parameters:    Size  Location     Type
 14055 ;;  fp              2  [STACK] PTR struct _IO_FILE
 14056 ;;		 -> f(6), NULL(0), 
 14057 ;;  d               8  [STACK] unsigned long long 
 14058 ;;  x               1  [STACK] unsigned char 
 14059 ;; Auto vars:     Size  Location     Type
 14060 ;;  n               8  [STACK] unsigned long long 
 14061 ;;  c               2  [STACK] int 
 14062 ;;  i               2  [STACK] int 
 14063 ;;  w               2  [STACK] int 
 14064 ;;  p               2  [STACK] int 
 14065 ;; Return value:  Size  Location     Type
 14066 ;;                  2  [STACK] int 
 14067 ;; Registers used:
 14068 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 14069 ;; Tracked objects:
 14070 ;;		On entry : 0/0
 14071 ;;		On exit  : 0/0
 14072 ;;		Unchanged: 0/0
 14073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14077 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14078 ;;Total ram usage:        0 bytes
 14079 ;; Hardware stack levels used:    1
 14080 ;; Hardware stack levels required when called:   20
 14081 ;; This function calls:
 14082 ;;		_isalpha
 14083 ;;		_isupper
 14084 ;;		_pad
 14085 ;;		_toupper
 14086 ;; This function is called by:
 14087 ;;		_vfpfcnvrt
 14088 ;; This function uses a reentrant model
 14089 ;;
 14090                           
 14091                           	psect	text53
 14092  0160EE                     __ptext53:
 14093                           	opt callstack 0
 14094  0160EE                     _xtoa:
 14095                           	opt callstack 0
 14096                           
 14097                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 14098  0160EE  0E14               	movlw	20
 14099  0160F0  26E1               	addwf	fsr1l,f,c
 14100  0160F2  0E00               	movlw	0
 14101  0160F4  22E2               	addwfc	fsr1h,f,c
 14102                           
 14103                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
 14104                           
 14105                           ;incstack = 0
 14106 ;; hardware stack exceeded
 14107  0160F6  AE3D               	btfss	(_prec+1)^0,7,c
 14108                           
 14109                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
 14110  0160F8  923E               	bcf	_flags^0,1,c
 14111                           
 14112                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
 14113  0160FA  BE3D               	btfsc	(_prec+1)^0,7,c
 14114  0160FC  D005               	goto	u11940
 14115  0160FE  503D               	movf	(_prec+1)^0,w,c
 14116  016100  E110               	bnz	l12659
 14117  016102  043C               	decf	_prec^0,w,c
 14118  016104  B0D8               	btfsc	status,0,c
 14119  016106  D00D               	goto	l12659
 14120  016108                     u11940:
 14121  016108  0E01               	movlw	1
 14122  01610A  6E0B               	movwf	(btemp+10)^0,c
 14123  01610C  0E00               	movlw	0
 14124  01610E  6E0C               	movwf	(btemp+11)^0,c
 14125                           
 14126                           ;stkvar	_p @ sp[(-20)+18]
 14127  016110  0EFE               	movlw	-2
 14128  016112  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14129  016118  0EFF               	movlw	-1
 14130  01611A  0060  F033  FFE3   	movff	btemp+11,plusw1
 14131  016120  D008               	goto	l2387
 14132  016122                     l12659:
 14133                           
 14134                           ;stkvar	_p @ sp[(-20)+18]
 14135  016122  0EFE               	movlw	-2
 14136  016124  0060  F0F3  FFE3   	movff	_prec,plusw1
 14137  01612A  0EFF               	movlw	-1
 14138  01612C  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 14139  016132                     l2387:
 14140                           
 14141                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 14142                           ;stkvar	_w @ sp[(-20)+16]
 14143  016132  0EFC               	movlw	-4
 14144  016134  0060  F0EB  FFE3   	movff	_width,plusw1
 14145  01613A  0EFD               	movlw	-3
 14146  01613C  0060  F0EF  FFE3   	movff	_width+1,plusw1
 14147                           
 14148                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
 14149  016142  A83E               	btfss	_flags^0,4,c
 14150  016144  D00B               	goto	l12665
 14151                           
 14152                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 14153                           ;stkvar	_w @ sp[(-20)+16]
 14154  016146  50E1               	movf	fsr1l,w,c
 14155  016148  0FFC               	addlw	-4
 14156  01614A  6ED9               	movwf	fsr2l,c
 14157  01614C  50E2               	movf	fsr1h,w,c
 14158  01614E  6EDA               	movwf	fsr2h,c
 14159  016150  0EFF               	movlw	255
 14160  016152  22DA               	addwfc	fsr2h,f,c
 14161  016154  0EFE               	movlw	254
 14162  016156  26DE               	addwf	postinc2,f,c
 14163  016158  0EFF               	movlw	255
 14164  01615A  22DD               	addwfc	postdec2,f,c
 14165  01615C                     l12665:
 14166                           
 14167                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 14168                           ;stkvar	_d @ sp[(-20)+-10]
 14169  01615C  0EE2               	movlw	226
 14170  01615E  24E1               	addwf	fsr1l,w,c
 14171  016160  6ED9               	movwf	fsr2l,c
 14172  016162  0EFF               	movlw	255
 14173  016164  20E2               	addwfc	fsr1h,w,c
 14174  016166  6EDA               	movwf	fsr2h,c
 14175                           
 14176                           ;stkvar	_n @ sp[(-20)+4]
 14177  016168  0E08               	movlw	8
 14178  01616A  6E01               	movwf	btemp^0,c
 14179  01616C  0EF0               	movlw	-16
 14180  01616E                     us1196999:
 14181  01616E  006F FF7B FFE3     	movff	postinc2,plusw1
 14182  016174  28E8               	incf	wreg,w,c
 14183  016176  2E01               	decfsz	btemp^0,f,c
 14184  016178  D7FA               	bra	us1196999
 14185                           
 14186                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
 14187  01617A  0E4F               	movlw	79
 14188  01617C  6E0B               	movwf	(btemp+10)^0,c
 14189  01617E  0E00               	movlw	0
 14190  016180  6E0C               	movwf	(btemp+11)^0,c
 14191                           
 14192                           ;stkvar	_i @ sp[(-20)+14]
 14193  016182  0EFA               	movlw	-6
 14194  016184  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14195  01618A  0EFB               	movlw	-5
 14196  01618C  0060  F033  FFE3   	movff	btemp+11,plusw1
 14197                           
 14198                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
 14199  016192  0102               	movlb	2	; () banked
 14200  016194  6BE6               	clrf	(_dbuf+79)& (0+255),b
 14201                           
 14202                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 14203  016196  D0EE               	goto	l12703
 14204  016198                     l12671:
 14205                           
 14206                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 14207                           ;stkvar	_i @ sp[(-20)+14]
 14208  016198  50E1               	movf	fsr1l,w,c
 14209  01619A  0FFA               	addlw	-6
 14210  01619C  6ED9               	movwf	fsr2l,c
 14211  01619E  50E2               	movf	fsr1h,w,c
 14212  0161A0  6EDA               	movwf	fsr2h,c
 14213  0161A2  0EFF               	movlw	255
 14214  0161A4  22DA               	addwfc	fsr2h,f,c
 14215  0161A6  06DE               	decf	postinc2,f,c
 14216  0161A8  0E00               	movlw	0
 14217  0161AA  5ADD               	subwfb	postdec2,f,c
 14218                           
 14219                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
 14220                           ;stkvar	_n @ sp[(-20)+4]
 14221  0161AC  0EF0               	movlw	-16
 14222  0161AE  006F FF8C  F00B    	movff	plusw1,btemp+10
 14223  0161B4  0EF1               	movlw	-15
 14224  0161B6  006F FF8C  F00C    	movff	plusw1,btemp+11
 14225  0161BC  0E0F               	movlw	15
 14226  0161BE  160B               	andwf	(btemp+10)^0,f,c
 14227  0161C0  0E00               	movlw	0
 14228  0161C2  160C               	andwf	(btemp+11)^0,f,c
 14229                           
 14230                           ;stkvar	_c @ sp[(-20)+12]
 14231  0161C4  0EF8               	movlw	-8
 14232  0161C6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14233  0161CC  0EF9               	movlw	-7
 14234  0161CE  0060  F033  FFE3   	movff	btemp+11,plusw1
 14235                           
 14236                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 14237                           ;stkvar	_c @ sp[(-20)+12]
 14238  0161D4  0EF9               	movlw	-7
 14239  0161D6  BEE3               	btfsc	plusw1,7,c
 14240  0161D8  D00F               	goto	l12679
 14241  0161DA  0EF9               	movlw	-7
 14242  0161DC  50E3               	movf	plusw1,w,c
 14243  0161DE  E108               	bnz	u11970
 14244  0161E0  0EF8               	movlw	-8
 14245  0161E2  006F FF8C  F001    	movff	plusw1,btemp
 14246  0161E8  0E0A               	movlw	10
 14247  0161EA  5E01               	subwf	btemp^0,f,c
 14248  0161EC  A0D8               	btfss	status,0,c
 14249  0161EE  D004               	goto	l12679
 14250  0161F0                     u11970:
 14251                           
 14252                           ;stkvar	_c @ sp[(-20)+12]
 14253  0161F0  0EF8               	movlw	-8
 14254  0161F2  50E3               	movf	plusw1,w,c
 14255  0161F4  0F57               	addlw	87
 14256  0161F6  D003               	goto	L14
 14257  0161F8                     l12679:
 14258                           
 14259                           ;stkvar	_c @ sp[(-20)+12]
 14260  0161F8  0EF8               	movlw	-8
 14261  0161FA  50E3               	movf	plusw1,w,c
 14262  0161FC  0F30               	addlw	48
 14263  0161FE                     L14:
 14264  0161FE  6E0B               	movwf	(btemp+10)^0,c
 14265  016200  0EF9               	movlw	-7
 14266  016202  006F FF8C  F00C    	movff	plusw1,btemp+11
 14267  016208  0E00               	movlw	0
 14268  01620A  220C               	addwfc	(btemp+11)^0,f,c
 14269                           
 14270                           ;stkvar	_c @ sp[(-20)+12]
 14271  01620C  0EF8               	movlw	-8
 14272  01620E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14273  016214  0EF9               	movlw	-7
 14274  016216  0060  F033  FFE3   	movff	btemp+11,plusw1
 14275  01621C  0EBF               	movlw	191
 14276  01621E  6E0B               	movwf	(btemp+10)^0,c
 14277  016220  0EFF               	movlw	255
 14278  016222  6E0C               	movwf	(btemp+11)^0,c
 14279                           
 14280                           ;stkvar	_x @ sp[(-20)+-11]
 14281  016224  0EE1               	movlw	-31
 14282  016226  50E3               	movf	plusw1,w,c
 14283  016228  6E09               	movwf	(btemp+8)^0,c
 14284  01622A  6A0A               	clrf	(btemp+9)^0,c
 14285  01622C  500B               	movf	(btemp+10)^0,w,c
 14286  01622E  2609               	addwf	(btemp+8)^0,f,c
 14287  016230  500C               	movf	(btemp+11)^0,w,c
 14288  016232  220A               	addwfc	(btemp+9)^0,f,c
 14289  016234  500A               	movf	(btemp+9)^0,w,c
 14290  016236  E106               	bnz	u11980
 14291  016238  0E1A               	movlw	26
 14292  01623A  5C09               	subwf	(btemp+8)^0,w,c
 14293  01623C  B0D8               	btfsc	status,0,c
 14294  01623E  D002               	goto	u11980
 14295  016240  0E01               	movlw	1
 14296  016242  D001               	goto	u11990
 14297  016244                     u11980:
 14298  016244  0E00               	movlw	0
 14299  016246                     u11990:
 14300  016246  6E0B               	movwf	(btemp+10)^0,c
 14301  016248  6A0C               	clrf	(btemp+11)^0,c
 14302                           
 14303                           ;stkvar	_xtoa$5696 @ sp[(-20)+2]
 14304  01624A  0EEE               	movlw	-18
 14305  01624C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14306  016252  0EEF               	movlw	-17
 14307  016254  0060  F033  FFE3   	movff	btemp+11,plusw1
 14308                           
 14309                           ;stkvar	_xtoa$5696 @ sp[(-20)+2]
 14310  01625A  0EEE               	movlw	-18
 14311  01625C  006F FF8C  F001    	movff	plusw1,btemp
 14312  016262  0EEF               	movlw	-17
 14313  016264  50E3               	movf	plusw1,w,c
 14314  016266  1001               	iorwf	btemp^0,w,c
 14315  016268  B4D8               	btfsc	status,2,c
 14316  01626A  D041               	goto	l12695
 14317  01626C  0E9F               	movlw	159
 14318  01626E  6E0B               	movwf	(btemp+10)^0,c
 14319  016270  0EFF               	movlw	255
 14320  016272  6E0C               	movwf	(btemp+11)^0,c
 14321                           
 14322                           ;stkvar	_c @ sp[(-20)+12]
 14323  016274  0EF8               	movlw	-8
 14324  016276  006F FF8C  F009    	movff	plusw1,btemp+8
 14325  01627C  0EF9               	movlw	-7
 14326  01627E  006F FF8C  F00A    	movff	plusw1,btemp+9
 14327  016284  0E20               	movlw	32
 14328  016286  1209               	iorwf	(btemp+8)^0,f,c
 14329  016288  0E00               	movlw	0
 14330  01628A  120A               	iorwf	(btemp+9)^0,f,c
 14331  01628C  500B               	movf	(btemp+10)^0,w,c
 14332  01628E  2609               	addwf	(btemp+8)^0,f,c
 14333  016290  500C               	movf	(btemp+11)^0,w,c
 14334  016292  220A               	addwfc	(btemp+9)^0,f,c
 14335  016294  500A               	movf	(btemp+9)^0,w,c
 14336  016296  E106               	bnz	u12010
 14337  016298  0E1A               	movlw	26
 14338  01629A  5C09               	subwf	(btemp+8)^0,w,c
 14339  01629C  B0D8               	btfsc	status,0,c
 14340  01629E  D002               	goto	u12010
 14341  0162A0  0E01               	movlw	1
 14342  0162A2  D001               	goto	u12020
 14343  0162A4                     u12010:
 14344  0162A4  0E00               	movlw	0
 14345  0162A6                     u12020:
 14346  0162A6  6E0B               	movwf	(btemp+10)^0,c
 14347  0162A8  6A0C               	clrf	(btemp+11)^0,c
 14348                           
 14349                           ;stkvar	_xtoa$5697 @ sp[(-20)+0]
 14350  0162AA  0EEC               	movlw	-20
 14351  0162AC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14352  0162B2  0EED               	movlw	-19
 14353  0162B4  0060  F033  FFE3   	movff	btemp+11,plusw1
 14354                           
 14355                           ;stkvar	_xtoa$5697 @ sp[(-20)+0]
 14356  0162BA  0EEC               	movlw	-20
 14357  0162BC  006F FF8C  F001    	movff	plusw1,btemp
 14358  0162C2  0EED               	movlw	-19
 14359  0162C4  50E3               	movf	plusw1,w,c
 14360  0162C6  1001               	iorwf	btemp^0,w,c
 14361  0162C8  B4D8               	btfsc	status,2,c
 14362  0162CA  D011               	goto	l12695
 14363                           
 14364                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 14365                           ;stkvar	_c @ sp[(-20)+12]
 14366  0162CC  0EF8               	movlw	-8
 14367  0162CE  006F FF8F FFE6     	movff	plusw1,postinc1
 14368  0162D4  006F FF8F FFE6     	movff	plusw1,postinc1
 14369  0162DA  EC97  F0D7         	call	_toupper	;wreg free
 14370                           
 14371                           ;stkvar	_c @ sp[(-20)+12]
 14372  0162DE  0EF8               	movlw	-8
 14373  0162E0  0060  F007  FFE3   	movff	btemp,plusw1
 14374  0162E6  0EF9               	movlw	-7
 14375  0162E8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 14376  0162EE                     l12695:
 14377                           
 14378                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 14379                           ;stkvar	_c @ sp[(-20)+12]
 14380                           ;stkvar	_i @ sp[(-20)+14]
 14381  0162EE  0EFA               	movlw	-6
 14382  0162F0  006F FF8C  F00B    	movff	plusw1,btemp+10
 14383  0162F6  0EFB               	movlw	-5
 14384  0162F8  006F FF8C  F00C    	movff	plusw1,btemp+11
 14385  0162FE  0E97               	movlw	low _dbuf
 14386  016300  240B               	addwf	(btemp+10)^0,w,c
 14387  016302  6ED9               	movwf	fsr2l,c
 14388  016304  0E02               	movlw	high _dbuf
 14389  016306  200C               	addwfc	(btemp+11)^0,w,c
 14390  016308  6EDA               	movwf	fsr2h,c
 14391  01630A  0EF8               	movlw	-8
 14392  01630C  006F FF8F FFDF     	movff	plusw1,indf2
 14393                           
 14394                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 14395                           ;stkvar	_p @ sp[(-20)+18]
 14396  016312  50E1               	movf	fsr1l,w,c
 14397  016314  0FFE               	addlw	-2
 14398  016316  6ED9               	movwf	fsr2l,c
 14399  016318  50E2               	movf	fsr1h,w,c
 14400  01631A  6EDA               	movwf	fsr2h,c
 14401  01631C  0EFF               	movlw	255
 14402  01631E  22DA               	addwfc	fsr2h,f,c
 14403  016320  06DE               	decf	postinc2,f,c
 14404  016322  0E00               	movlw	0
 14405  016324  5ADD               	subwfb	postdec2,f,c
 14406                           
 14407                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 14408                           ;stkvar	_w @ sp[(-20)+16]
 14409  016326  50E1               	movf	fsr1l,w,c
 14410  016328  0FFC               	addlw	-4
 14411  01632A  6ED9               	movwf	fsr2l,c
 14412  01632C  50E2               	movf	fsr1h,w,c
 14413  01632E  6EDA               	movwf	fsr2h,c
 14414  016330  0EFF               	movlw	255
 14415  016332  22DA               	addwfc	fsr2h,f,c
 14416  016334  06DE               	decf	postinc2,f,c
 14417  016336  0E00               	movlw	0
 14418  016338  5ADD               	subwfb	postdec2,f,c
 14419                           
 14420                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 14421  01633A  0E04               	movlw	4
 14422  01633C  6E0C               	movwf	(btemp+11)^0,c
 14423                           
 14424                           ;stkvar	_n @ sp[(-20)+4]
 14425  01633E  50E1               	movf	fsr1l,w,c
 14426  016340  0FF0               	addlw	-16
 14427  016342  6ED9               	movwf	fsr2l,c
 14428  016344  50E2               	movf	fsr1h,w,c
 14429  016346  6EDA               	movwf	fsr2h,c
 14430  016348  0EFF               	movlw	255
 14431  01634A  22DA               	addwfc	fsr2h,f,c
 14432  01634C  280C               	incf	(btemp+11)^0,w,c
 14433  01634E  52DE               	movf	postinc2,f,c
 14434  016350  D00F               	goto	u12040
 14435  016352                     u12045:
 14436  016352  52DE               	movf	postinc2,f,c
 14437  016354  52DE               	movf	postinc2,f,c
 14438  016356  52DE               	movf	postinc2,f,c
 14439  016358  52DE               	movf	postinc2,f,c
 14440  01635A  52DE               	movf	postinc2,f,c
 14441  01635C  52DE               	movf	postinc2,f,c
 14442  01635E  90D8               	bcf	status,0,c
 14443  016360  32DD               	rrcf	postdec2,f,c
 14444  016362  32DD               	rrcf	postdec2,f,c
 14445  016364  32DD               	rrcf	postdec2,f,c
 14446  016366  32DD               	rrcf	postdec2,f,c
 14447  016368  32DD               	rrcf	postdec2,f,c
 14448  01636A  32DD               	rrcf	postdec2,f,c
 14449  01636C  32DD               	rrcf	postdec2,f,c
 14450  01636E  32DE               	rrcf	postinc2,f,c
 14451  016370                     u12040:
 14452  016370  2EE8               	decfsz	wreg,f,c
 14453  016372  D7EF               	goto	u12045
 14454  016374                     l12703:
 14455                           
 14456                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 14457                           ;stkvar	_i @ sp[(-20)+14]
 14458  016374  0EFB               	movlw	-5
 14459  016376  BEE3               	btfsc	plusw1,7,c
 14460  016378  D03A               	goto	u12090
 14461  01637A  0EFB               	movlw	-5
 14462  01637C  50E3               	movf	plusw1,w,c
 14463  01637E  E108               	bnz	u12050
 14464  016380  0EFA               	movlw	-6
 14465  016382  006F FF8C  F001    	movff	plusw1,btemp
 14466  016388  0E02               	movlw	2
 14467  01638A  5E01               	subwf	btemp^0,f,c
 14468  01638C  A0D8               	btfss	status,0,c
 14469  01638E  D02F               	goto	u12090
 14470  016390                     u12050:
 14471                           
 14472                           ;stkvar	_n @ sp[(-20)+4]
 14473  016390  0EF0               	movlw	-16
 14474  016392  50E3               	movf	plusw1,w,c
 14475  016394  E115               	bnz	u12061
 14476  016396  0EF1               	movlw	-15
 14477  016398  50E3               	movf	plusw1,w,c
 14478  01639A  E112               	bnz	u12061
 14479  01639C  0EF2               	movlw	-14
 14480  01639E  50E3               	movf	plusw1,w,c
 14481  0163A0  E10F               	bnz	u12061
 14482  0163A2  0EF3               	movlw	-13
 14483  0163A4  50E3               	movf	plusw1,w,c
 14484  0163A6  E10C               	bnz	u12061
 14485  0163A8  0EF4               	movlw	-12
 14486  0163AA  50E3               	movf	plusw1,w,c
 14487  0163AC  E109               	bnz	u12061
 14488  0163AE  0EF5               	movlw	-11
 14489  0163B0  50E3               	movf	plusw1,w,c
 14490  0163B2  E106               	bnz	u12061
 14491  0163B4  0EF6               	movlw	-10
 14492  0163B6  50E3               	movf	plusw1,w,c
 14493  0163B8  E103               	bnz	u12061
 14494  0163BA  0EF7               	movlw	-9
 14495  0163BC  50E3               	movf	plusw1,w,c
 14496  0163BE  A4D8               	btfss	status,2,c
 14497  0163C0                     u12061:
 14498  0163C0  D6EB               	goto	l12671
 14499                           
 14500                           ;stkvar	_p @ sp[(-20)+18]
 14501  0163C2  0EFF               	movlw	-1
 14502  0163C4  BEE3               	btfsc	plusw1,7,c
 14503  0163C6  D007               	goto	u12070
 14504  0163C8  0EFF               	movlw	-1
 14505  0163CA  50E3               	movf	plusw1,w,c
 14506  0163CC  E103               	bnz	u12071
 14507  0163CE  0EFE               	movlw	-2
 14508  0163D0  04E3               	decf	plusw1,w,c
 14509  0163D2  B0D8               	btfsc	status,0,c
 14510  0163D4                     u12071:
 14511  0163D4  D6E1               	goto	l12671
 14512  0163D6                     u12070:
 14513                           
 14514                           ;stkvar	_w @ sp[(-20)+16]
 14515  0163D6  0EFD               	movlw	-3
 14516  0163D8  BEE3               	btfsc	plusw1,7,c
 14517  0163DA  D009               	goto	u12090
 14518  0163DC  0EFD               	movlw	-3
 14519  0163DE  50E3               	movf	plusw1,w,c
 14520  0163E0  E104               	bnz	u12080
 14521  0163E2  0EFC               	movlw	-4
 14522  0163E4  04E3               	decf	plusw1,w,c
 14523  0163E6  A0D8               	btfss	status,0,c
 14524  0163E8  D002               	goto	u12090
 14525  0163EA                     u12080:
 14526  0163EA  B23E               	btfsc	_flags^0,1,c
 14527  0163EC  D6D5               	goto	l12671
 14528  0163EE                     u12090:
 14529                           
 14530                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 14531  0163EE  A83E               	btfss	_flags^0,4,c
 14532  0163F0  D036               	goto	l12719
 14533                           
 14534                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 14535                           ;stkvar	_i @ sp[(-20)+14]
 14536  0163F2  50E1               	movf	fsr1l,w,c
 14537  0163F4  0FFA               	addlw	-6
 14538  0163F6  6ED9               	movwf	fsr2l,c
 14539  0163F8  50E2               	movf	fsr1h,w,c
 14540  0163FA  6EDA               	movwf	fsr2h,c
 14541  0163FC  0EFF               	movlw	255
 14542  0163FE  22DA               	addwfc	fsr2h,f,c
 14543  016400  06DE               	decf	postinc2,f,c
 14544  016402  0E00               	movlw	0
 14545  016404  5ADD               	subwfb	postdec2,f,c
 14546                           
 14547                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 14548                           ;stkvar	_x @ sp[(-20)+-11]
 14549                           ;stkvar	_i @ sp[(-20)+14]
 14550  016406  0EFA               	movlw	-6
 14551  016408  006F FF8C  F00B    	movff	plusw1,btemp+10
 14552  01640E  0EFB               	movlw	-5
 14553  016410  006F FF8C  F00C    	movff	plusw1,btemp+11
 14554  016416  0E97               	movlw	low _dbuf
 14555  016418  240B               	addwf	(btemp+10)^0,w,c
 14556  01641A  6ED9               	movwf	fsr2l,c
 14557  01641C  0E02               	movlw	high _dbuf
 14558  01641E  200C               	addwfc	(btemp+11)^0,w,c
 14559  016420  6EDA               	movwf	fsr2h,c
 14560  016422  0EE1               	movlw	-31
 14561  016424  006F FF8F FFDF     	movff	plusw1,indf2
 14562                           
 14563                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 14564                           ;stkvar	_i @ sp[(-20)+14]
 14565  01642A  50E1               	movf	fsr1l,w,c
 14566  01642C  0FFA               	addlw	-6
 14567  01642E  6ED9               	movwf	fsr2l,c
 14568  016430  50E2               	movf	fsr1h,w,c
 14569  016432  6EDA               	movwf	fsr2h,c
 14570  016434  0EFF               	movlw	255
 14571  016436  22DA               	addwfc	fsr2h,f,c
 14572  016438  06DE               	decf	postinc2,f,c
 14573  01643A  0E00               	movlw	0
 14574  01643C  5ADD               	subwfb	postdec2,f,c
 14575                           
 14576                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 14577                           ;stkvar	_i @ sp[(-20)+14]
 14578  01643E  0EFA               	movlw	-6
 14579  016440  006F FF8C  F00B    	movff	plusw1,btemp+10
 14580  016446  0EFB               	movlw	-5
 14581  016448  006F FF8C  F00C    	movff	plusw1,btemp+11
 14582  01644E  0E97               	movlw	low _dbuf
 14583  016450  240B               	addwf	(btemp+10)^0,w,c
 14584  016452  6ED9               	movwf	fsr2l,c
 14585  016454  0E02               	movlw	high _dbuf
 14586  016456  200C               	addwfc	(btemp+11)^0,w,c
 14587  016458  6EDA               	movwf	fsr2h,c
 14588  01645A  0E30               	movlw	48
 14589  01645C  6EDF               	movwf	indf2,c
 14590  01645E                     l12719:
 14591                           
 14592                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 14593                           ;stkvar	_w @ sp[(-20)+16]
 14594  01645E  0EFC               	movlw	-4
 14595  016460  006F FF8F FFE6     	movff	plusw1,postinc1
 14596  016466  006F FF8F FFE6     	movff	plusw1,postinc1
 14597                           
 14598                           ;stkvar	_i @ sp[(-22)+14]
 14599  01646C  0E97               	movlw	low _dbuf
 14600  01646E  6E0B               	movwf	(btemp+10)^0,c
 14601  016470  0E02               	movlw	high _dbuf
 14602  016472  6E0C               	movwf	(btemp+11)^0,c
 14603  016474  0EF8               	movlw	-8
 14604  016476  50E3               	movf	plusw1,w,c
 14605  016478  260B               	addwf	(btemp+10)^0,f,c
 14606  01647A  0EF9               	movlw	-7
 14607  01647C  50E3               	movf	plusw1,w,c
 14608  01647E  220C               	addwfc	(btemp+11)^0,f,c
 14609  016480  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14610  016486  0060  F033  FFE6   	movff	btemp+11,postinc1
 14611                           
 14612                           ;stkvar	_fp @ sp[(-24)+-2]
 14613  01648C  0EE6               	movlw	-26
 14614  01648E  006F FF8F FFE6     	movff	plusw1,postinc1
 14615  016494  006F FF8F FFE6     	movff	plusw1,postinc1
 14616  01649A  ECF6  F0CD         	call	_pad	;wreg free
 14617                           
 14618                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 14619  01649E  0EE1               	movlw	225
 14620  0164A0  26E1               	addwf	fsr1l,f,c
 14621  0164A2  0EFF               	movlw	255
 14622  0164A4  22E2               	addwfc	fsr1h,f,c
 14623  0164A6  0012               	return		;funcret
 14624  0164A8                     __end_of_xtoa:
 14625                           	opt callstack 0
 14626                           
 14627 ;; *************** function _toupper *****************
 14628 ;; Defined at:
 14629 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 14630 ;; Parameters:    Size  Location     Type
 14631 ;;  c               2  [STACK] int 
 14632 ;; Auto vars:     Size  Location     Type
 14633 ;;		None
 14634 ;; Return value:  Size  Location     Type
 14635 ;;                  2  [STACK] int 
 14636 ;; Registers used:
 14637 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 14638 ;; Tracked objects:
 14639 ;;		On entry : 0/2
 14640 ;;		On exit  : 0/0
 14641 ;;		Unchanged: 0/0
 14642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14647 ;;Total ram usage:        0 bytes
 14648 ;; Hardware stack levels used:    1
 14649 ;; Hardware stack levels required when called:   16
 14650 ;; This function calls:
 14651 ;;		_islower
 14652 ;; This function is called by:
 14653 ;;		_xtoa
 14654 ;; This function uses a reentrant model
 14655 ;;
 14656                           
 14657                           	psect	text54
 14658  01AF2E                     __ptext54:
 14659                           	opt callstack 0
 14660  01AF2E                     _toupper:
 14661                           	opt callstack 0
 14662                           
 14663                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14664  01AF2E  52E6               	movf	postinc1,f,c
 14665  01AF30  52E6               	movf	postinc1,f,c
 14666                           
 14667                           ;stkvar	_c @ sp[(-2)+-2]
 14668                           
 14669                           ;incstack = 0
 14670 ;; hardware stack exceeded
 14671  01AF32  0EFC               	movlw	-4
 14672  01AF34  50E3               	movf	plusw1,w,c
 14673  01AF36  0F9F               	addlw	159
 14674  01AF38  6E0B               	movwf	(btemp+10)^0,c
 14675  01AF3A  0EFD               	movlw	-3
 14676  01AF3C  006F FF8C  F00C    	movff	plusw1,btemp+11
 14677  01AF42  0EFF               	movlw	255
 14678  01AF44  220C               	addwfc	(btemp+11)^0,f,c
 14679  01AF46  500C               	movf	(btemp+11)^0,w,c
 14680  01AF48  E106               	bnz	u6320
 14681  01AF4A  0E1A               	movlw	26
 14682  01AF4C  5C0B               	subwf	(btemp+10)^0,w,c
 14683  01AF4E  B0D8               	btfsc	status,0,c
 14684  01AF50  D002               	goto	u6320
 14685  01AF52  0E01               	movlw	1
 14686  01AF54  D001               	goto	u6330
 14687  01AF56                     u6320:
 14688  01AF56  0E00               	movlw	0
 14689  01AF58                     u6330:
 14690  01AF58  6E0B               	movwf	(btemp+10)^0,c
 14691  01AF5A  6A0C               	clrf	(btemp+11)^0,c
 14692                           
 14693                           ;stkvar	_toupper$6503 @ sp[(-2)+0]
 14694  01AF5C  0EFE               	movlw	-2
 14695  01AF5E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14696  01AF64  0EFF               	movlw	-1
 14697  01AF66  0060  F033  FFE3   	movff	btemp+11,plusw1
 14698                           
 14699                           ;stkvar	_toupper$6503 @ sp[(-2)+0]
 14700  01AF6C  0EFE               	movlw	-2
 14701  01AF6E  006F FF8C  F001    	movff	plusw1,btemp
 14702  01AF74  0EFF               	movlw	-1
 14703  01AF76  50E3               	movf	plusw1,w,c
 14704  01AF78  1001               	iorwf	btemp^0,w,c
 14705  01AF7A  B4D8               	btfsc	status,2,c
 14706  01AF7C  D00D               	goto	l8271
 14707                           
 14708                           ;stkvar	_c @ sp[(-2)+-2]
 14709  01AF7E  0EFC               	movlw	-4
 14710  01AF80  006F FF8C  F001    	movff	plusw1,btemp
 14711  01AF86  0EFD               	movlw	-3
 14712  01AF88  006F FF8C  F002    	movff	plusw1,btemp+1
 14713  01AF8E  0E5F               	movlw	95
 14714  01AF90  1601               	andwf	btemp^0,f,c
 14715  01AF92  0E00               	movlw	0
 14716  01AF94  1602               	andwf	(btemp+1)^0,f,c
 14717  01AF96  D008               	goto	l3554
 14718  01AF98                     l8271:
 14719                           
 14720                           ;stkvar	_c @ sp[(-2)+-2]
 14721  01AF98  0EFC               	movlw	-4
 14722  01AF9A  006F FF8C  F001    	movff	plusw1,btemp
 14723  01AFA0  0EFD               	movlw	-3
 14724  01AFA2  006F FF8C  F002    	movff	plusw1,btemp+1
 14725  01AFA8                     l3554:
 14726                           
 14727                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 14728  01AFA8  52E5               	movf	postdec1,f,c
 14729  01AFAA  52E5               	movf	postdec1,f,c
 14730  01AFAC  52E5               	movf	postdec1,f,c
 14731  01AFAE  52E5               	movf	postdec1,f,c
 14732  01AFB0  0012               	return		;funcret
 14733  01AFB2                     __end_of_toupper:
 14734                           	opt callstack 0
 14735                           
 14736 ;; *************** function _islower *****************
 14737 ;; Defined at:
 14738 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 14739 ;; Parameters:    Size  Location     Type
 14740 ;;  c               2  [STACK] int 
 14741 ;; Auto vars:     Size  Location     Type
 14742 ;;		None
 14743 ;; Return value:  Size  Location     Type
 14744 ;;                  2  [STACK] int 
 14745 ;; Registers used:
 14746 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 14747 ;; Tracked objects:
 14748 ;;		On entry : 0/0
 14749 ;;		On exit  : 0/0
 14750 ;;		Unchanged: 0/0
 14751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14755 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14756 ;;Total ram usage:        0 bytes
 14757 ;; Hardware stack levels used:    1
 14758 ;; Hardware stack levels required when called:   15
 14759 ;; This function calls:
 14760 ;;		Nothing
 14761 ;; This function is called by:
 14762 ;;		_toupper
 14763 ;; This function uses a reentrant model
 14764 ;;
 14765                           
 14766                           	psect	text55
 14767  01BDE0                     __ptext55:
 14768                           	opt callstack 0
 14769  01BDE0                     _islower:
 14770                           	opt callstack 0
 14771                           
 14772                           ;stkvar	_c @ sp[(0)+-2]
 14773                           
 14774                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14775                           ;incstack = 0
 14776 ;; hardware stack exceeded
 14777  01BDE0  0EFE               	movlw	-2
 14778  01BDE2  50E3               	movf	plusw1,w,c
 14779  01BDE4  0F9F               	addlw	159
 14780  01BDE6  6E0B               	movwf	(btemp+10)^0,c
 14781  01BDE8  0EFF               	movlw	-1
 14782  01BDEA  006F FF8C  F00C    	movff	plusw1,btemp+11
 14783  01BDF0  0EFF               	movlw	255
 14784  01BDF2  220C               	addwfc	(btemp+11)^0,f,c
 14785  01BDF4  500C               	movf	(btemp+11)^0,w,c
 14786  01BDF6  E106               	bnz	u5960
 14787  01BDF8  0E1A               	movlw	26
 14788  01BDFA  5C0B               	subwf	(btemp+10)^0,w,c
 14789  01BDFC  B0D8               	btfsc	status,0,c
 14790  01BDFE  D002               	goto	u5960
 14791  01BE00  0E01               	movlw	1
 14792  01BE02  D001               	goto	u5970
 14793  01BE04                     u5960:
 14794  01BE04  0E00               	movlw	0
 14795  01BE06                     u5970:
 14796  01BE06  6E01               	movwf	btemp^0,c
 14797  01BE08  6A02               	clrf	(btemp+1)^0,c
 14798                           
 14799                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 14800  01BE0A  52E5               	movf	postdec1,f,c
 14801  01BE0C  52E5               	movf	postdec1,f,c
 14802  01BE0E  0012               	return		;funcret
 14803  01BE10                     __end_of_islower:
 14804                           	opt callstack 0
 14805                           
 14806 ;; *************** function _isalpha *****************
 14807 ;; Defined at:
 14808 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 14809 ;; Parameters:    Size  Location     Type
 14810 ;;  c               2  [STACK] int 
 14811 ;; Auto vars:     Size  Location     Type
 14812 ;;		None
 14813 ;; Return value:  Size  Location     Type
 14814 ;;                  2  [STACK] int 
 14815 ;; Registers used:
 14816 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 14817 ;; Tracked objects:
 14818 ;;		On entry : 0/0
 14819 ;;		On exit  : 0/0
 14820 ;;		Unchanged: 0/0
 14821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14825 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14826 ;;Total ram usage:        0 bytes
 14827 ;; Hardware stack levels used:    1
 14828 ;; Hardware stack levels required when called:   15
 14829 ;; This function calls:
 14830 ;;		Nothing
 14831 ;; This function is called by:
 14832 ;;		_xtoa
 14833 ;; This function uses a reentrant model
 14834 ;;
 14835                           
 14836                           	psect	text56
 14837  01B9C6                     __ptext56:
 14838                           	opt callstack 0
 14839  01B9C6                     _isalpha:
 14840                           	opt callstack 0
 14841                           
 14842                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14843                           ;incstack = 0
 14844 ;; hardware stack exceeded
 14845  01B9C6  0E9F               	movlw	159
 14846  01B9C8  6E0B               	movwf	(btemp+10)^0,c
 14847  01B9CA  0EFF               	movlw	255
 14848  01B9CC  6E0C               	movwf	(btemp+11)^0,c
 14849                           
 14850                           ;stkvar	_c @ sp[(0)+-2]
 14851  01B9CE  0EFE               	movlw	-2
 14852  01B9D0  006F FF8C  F009    	movff	plusw1,btemp+8
 14853  01B9D6  0EFF               	movlw	-1
 14854  01B9D8  006F FF8C  F00A    	movff	plusw1,btemp+9
 14855  01B9DE  0E20               	movlw	32
 14856  01B9E0  1209               	iorwf	(btemp+8)^0,f,c
 14857  01B9E2  0E00               	movlw	0
 14858  01B9E4  120A               	iorwf	(btemp+9)^0,f,c
 14859  01B9E6  500B               	movf	(btemp+10)^0,w,c
 14860  01B9E8  2609               	addwf	(btemp+8)^0,f,c
 14861  01B9EA  500C               	movf	(btemp+11)^0,w,c
 14862  01B9EC  220A               	addwfc	(btemp+9)^0,f,c
 14863  01B9EE  500A               	movf	(btemp+9)^0,w,c
 14864  01B9F0  E106               	bnz	u6300
 14865  01B9F2  0E1A               	movlw	26
 14866  01B9F4  5C09               	subwf	(btemp+8)^0,w,c
 14867  01B9F6  B0D8               	btfsc	status,0,c
 14868  01B9F8  D002               	goto	u6300
 14869  01B9FA  0E01               	movlw	1
 14870  01B9FC  D001               	goto	u6310
 14871  01B9FE                     u6300:
 14872  01B9FE  0E00               	movlw	0
 14873  01BA00                     u6310:
 14874  01BA00  6E01               	movwf	btemp^0,c
 14875  01BA02  6A02               	clrf	(btemp+1)^0,c
 14876                           
 14877                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 14878  01BA04  52E5               	movf	postdec1,f,c
 14879  01BA06  52E5               	movf	postdec1,f,c
 14880  01BA08  0012               	return		;funcret
 14881  01BA0A                     __end_of_isalpha:
 14882                           	opt callstack 0
 14883                           
 14884 ;; *************** function _utoa *****************
 14885 ;; Defined at:
 14886 ;;		line 593 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 14887 ;; Parameters:    Size  Location     Type
 14888 ;;  fp              2  [STACK] PTR struct _IO_FILE
 14889 ;;		 -> f(6), NULL(0), 
 14890 ;;  d               8  [STACK] unsigned long long 
 14891 ;; Auto vars:     Size  Location     Type
 14892 ;;  n               8  [STACK] unsigned long long 
 14893 ;;  i               2  [STACK] int 
 14894 ;;  w               2  [STACK] int 
 14895 ;;  p               2  [STACK] int 
 14896 ;; Return value:  Size  Location     Type
 14897 ;;                  2  [STACK] int 
 14898 ;; Registers used:
 14899 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 14900 ;; Tracked objects:
 14901 ;;		On entry : 0/0
 14902 ;;		On exit  : 0/0
 14903 ;;		Unchanged: 0/0
 14904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14909 ;;Total ram usage:        0 bytes
 14910 ;; Hardware stack levels used:    1
 14911 ;; Hardware stack levels required when called:   20
 14912 ;; This function calls:
 14913 ;;		___lodiv
 14914 ;;		___lomod
 14915 ;;		_pad
 14916 ;; This function is called by:
 14917 ;;		_vfpfcnvrt
 14918 ;; This function uses a reentrant model
 14919 ;;
 14920                           
 14921                           	psect	text57
 14922  016814                     __ptext57:
 14923                           	opt callstack 0
 14924  016814                     _utoa:
 14925                           	opt callstack 0
 14926                           
 14927                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 14928  016814  0E0E               	movlw	14
 14929  016816  26E1               	addwf	fsr1l,f,c
 14930  016818  0E00               	movlw	0
 14931  01681A  22E2               	addwfc	fsr1h,f,c
 14932                           
 14933                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
 14934                           
 14935                           ;incstack = 0
 14936 ;; hardware stack exceeded
 14937  01681C  AE3D               	btfss	(_prec+1)^0,7,c
 14938                           
 14939                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
 14940  01681E  923E               	bcf	_flags^0,1,c
 14941                           
 14942                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
 14943  016820  BE3D               	btfsc	(_prec+1)^0,7,c
 14944  016822  D005               	goto	u11860
 14945  016824  503D               	movf	(_prec+1)^0,w,c
 14946  016826  E110               	bnz	l12619
 14947  016828  043C               	decf	_prec^0,w,c
 14948  01682A  B0D8               	btfsc	status,0,c
 14949  01682C  D00D               	goto	l12619
 14950  01682E                     u11860:
 14951  01682E  0E01               	movlw	1
 14952  016830  6E0B               	movwf	(btemp+10)^0,c
 14953  016832  0E00               	movlw	0
 14954  016834  6E0C               	movwf	(btemp+11)^0,c
 14955                           
 14956                           ;stkvar	_p @ sp[(-14)+12]
 14957  016836  0EFE               	movlw	-2
 14958  016838  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14959  01683E  0EFF               	movlw	-1
 14960  016840  0060  F033  FFE3   	movff	btemp+11,plusw1
 14961  016846  D008               	goto	l2372
 14962  016848                     l12619:
 14963                           
 14964                           ;stkvar	_p @ sp[(-14)+12]
 14965  016848  0EFE               	movlw	-2
 14966  01684A  0060  F0F3  FFE3   	movff	_prec,plusw1
 14967  016850  0EFF               	movlw	-1
 14968  016852  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 14969  016858                     l2372:
 14970                           
 14971                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 603:     w = width;
 14972                           ;stkvar	_w @ sp[(-14)+10]
 14973  016858  0EFC               	movlw	-4
 14974  01685A  0060  F0EB  FFE3   	movff	_width,plusw1
 14975  016860  0EFD               	movlw	-3
 14976  016862  0060  F0EF  FFE3   	movff	_width+1,plusw1
 14977                           
 14978                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 606:     n = d;
 14979                           ;stkvar	_d @ sp[(-14)+-10]
 14980  016868  0EE8               	movlw	232
 14981  01686A  24E1               	addwf	fsr1l,w,c
 14982  01686C  6ED9               	movwf	fsr2l,c
 14983  01686E  0EFF               	movlw	255
 14984  016870  20E2               	addwfc	fsr1h,w,c
 14985  016872  6EDA               	movwf	fsr2h,c
 14986                           
 14987                           ;stkvar	_n @ sp[(-14)+0]
 14988  016874  0E08               	movlw	8
 14989  016876  6E01               	movwf	btemp^0,c
 14990  016878  0EF2               	movlw	-14
 14991  01687A                     us1187999:
 14992  01687A  006F FF7B FFE3     	movff	postinc2,plusw1
 14993  016880  28E8               	incf	wreg,w,c
 14994  016882  2E01               	decfsz	btemp^0,f,c
 14995  016884  D7FA               	bra	us1187999
 14996                           
 14997                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
 14998  016886  0E4F               	movlw	79
 14999  016888  6E0B               	movwf	(btemp+10)^0,c
 15000  01688A  0E00               	movlw	0
 15001  01688C  6E0C               	movwf	(btemp+11)^0,c
 15002                           
 15003                           ;stkvar	_i @ sp[(-14)+8]
 15004  01688E  0EFA               	movlw	-6
 15005  016890  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15006  016896  0EFB               	movlw	-5
 15007  016898  0060  F033  FFE3   	movff	btemp+11,plusw1
 15008                           
 15009                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
 15010  01689E  0102               	movlb	2	; () banked
 15011  0168A0  6BE6               	clrf	(_dbuf+79)& (0+255),b
 15012                           
 15013                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 15014  0168A2  D0FB               	goto	l12637
 15015  0168A4                     l12627:
 15016                           
 15017                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 610:         --i;
 15018                           ;stkvar	_i @ sp[(-14)+8]
 15019  0168A4  50E1               	movf	fsr1l,w,c
 15020  0168A6  0FFA               	addlw	-6
 15021  0168A8  6ED9               	movwf	fsr2l,c
 15022  0168AA  50E2               	movf	fsr1h,w,c
 15023  0168AC  6EDA               	movwf	fsr2h,c
 15024  0168AE  0EFF               	movlw	255
 15025  0168B0  22DA               	addwfc	fsr2h,f,c
 15026  0168B2  06DE               	decf	postinc2,f,c
 15027  0168B4  0E00               	movlw	0
 15028  0168B6  5ADD               	subwfb	postdec2,f,c
 15029                           
 15030                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
 15031  0168B8  0E0A               	movlw	10
 15032  0168BA  6EE6               	movwf	postinc1,c
 15033  0168BC  0E00               	movlw	0
 15034  0168BE  6EE6               	movwf	postinc1,c
 15035  0168C0  0E00               	movlw	0
 15036  0168C2  6EE6               	movwf	postinc1,c
 15037  0168C4  0E00               	movlw	0
 15038  0168C6  6EE6               	movwf	postinc1,c
 15039  0168C8  0E00               	movlw	0
 15040  0168CA  6EE6               	movwf	postinc1,c
 15041  0168CC  0E00               	movlw	0
 15042  0168CE  6EE6               	movwf	postinc1,c
 15043  0168D0  0E00               	movlw	0
 15044  0168D2  6EE6               	movwf	postinc1,c
 15045  0168D4  0E00               	movlw	0
 15046  0168D6  6EE6               	movwf	postinc1,c
 15047                           
 15048                           ;stkvar	_n @ sp[(-22)+0]
 15049  0168D8  50E1               	movf	fsr1l,w,c
 15050  0168DA  0FEA               	addlw	-22
 15051  0168DC  6ED9               	movwf	fsr2l,c
 15052  0168DE  50E2               	movf	fsr1h,w,c
 15053  0168E0  6EDA               	movwf	fsr2h,c
 15054  0168E2  0EFF               	movlw	255
 15055  0168E4  22DA               	addwfc	fsr2h,f,c
 15056  0168E6  006F FF7B FFE6     	movff	postinc2,postinc1
 15057  0168EC  006F FF7B FFE6     	movff	postinc2,postinc1
 15058  0168F2  006F FF7B FFE6     	movff	postinc2,postinc1
 15059  0168F8  006F FF7B FFE6     	movff	postinc2,postinc1
 15060  0168FE  006F FF7B FFE6     	movff	postinc2,postinc1
 15061  016904  006F FF7B FFE6     	movff	postinc2,postinc1
 15062  01690A  006F FF7B FFE6     	movff	postinc2,postinc1
 15063  016910  006F FF7B FFE6     	movff	postinc2,postinc1
 15064  016916  EC06  F0CB         	call	___lomod	;wreg free
 15065  01691A  52E5               	movf	postdec1,f,c
 15066  01691C  006F FF9C  F018    	movff	indf1,btemp+23
 15067  016922  52E5               	movf	postdec1,f,c
 15068  016924  006F FF9C  F017    	movff	indf1,btemp+22
 15069  01692A  52E5               	movf	postdec1,f,c
 15070  01692C  006F FF9C  F016    	movff	indf1,btemp+21
 15071  016932  52E5               	movf	postdec1,f,c
 15072  016934  006F FF9C  F015    	movff	indf1,btemp+20
 15073  01693A  52E5               	movf	postdec1,f,c
 15074  01693C  006F FF9C  F014    	movff	indf1,btemp+19
 15075  016942  52E5               	movf	postdec1,f,c
 15076  016944  006F FF9C  F013    	movff	indf1,btemp+18
 15077  01694A  52E5               	movf	postdec1,f,c
 15078  01694C  006F FF9C  F012    	movff	indf1,btemp+17
 15079  016952  52E5               	movf	postdec1,f,c
 15080  016954  006F FF9C  F011    	movff	indf1,btemp+16
 15081  01695A  0EF8               	movlw	248
 15082  01695C  26E1               	addwf	fsr1l,f,c
 15083  01695E  0EFF               	movlw	255
 15084  016960  22E2               	addwfc	fsr1h,f,c
 15085  016962  0E30               	movlw	48
 15086  016964  2611               	addwf	(btemp+16)^0,f,c
 15087                           
 15088                           ;stkvar	_i @ sp[(-14)+8]
 15089  016966  0EFA               	movlw	-6
 15090  016968  006F FF8C  F00B    	movff	plusw1,btemp+10
 15091  01696E  0EFB               	movlw	-5
 15092  016970  006F FF8C  F00C    	movff	plusw1,btemp+11
 15093  016976  0E97               	movlw	low _dbuf
 15094  016978  240B               	addwf	(btemp+10)^0,w,c
 15095  01697A  6ED9               	movwf	fsr2l,c
 15096  01697C  0E02               	movlw	high _dbuf
 15097  01697E  200C               	addwfc	(btemp+11)^0,w,c
 15098  016980  6EDA               	movwf	fsr2h,c
 15099  016982  0060  F047  FFDF   	movff	btemp+16,indf2
 15100                           
 15101                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 612:         --p;
 15102                           ;stkvar	_p @ sp[(-14)+12]
 15103  016988  50E1               	movf	fsr1l,w,c
 15104  01698A  0FFE               	addlw	-2
 15105  01698C  6ED9               	movwf	fsr2l,c
 15106  01698E  50E2               	movf	fsr1h,w,c
 15107  016990  6EDA               	movwf	fsr2h,c
 15108  016992  0EFF               	movlw	255
 15109  016994  22DA               	addwfc	fsr2h,f,c
 15110  016996  06DE               	decf	postinc2,f,c
 15111  016998  0E00               	movlw	0
 15112  01699A  5ADD               	subwfb	postdec2,f,c
 15113                           
 15114                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 613:         --w;
 15115                           ;stkvar	_w @ sp[(-14)+10]
 15116  01699C  50E1               	movf	fsr1l,w,c
 15117  01699E  0FFC               	addlw	-4
 15118  0169A0  6ED9               	movwf	fsr2l,c
 15119  0169A2  50E2               	movf	fsr1h,w,c
 15120  0169A4  6EDA               	movwf	fsr2h,c
 15121  0169A6  0EFF               	movlw	255
 15122  0169A8  22DA               	addwfc	fsr2h,f,c
 15123  0169AA  06DE               	decf	postinc2,f,c
 15124  0169AC  0E00               	movlw	0
 15125  0169AE  5ADD               	subwfb	postdec2,f,c
 15126                           
 15127                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
 15128  0169B0  0E0A               	movlw	10
 15129  0169B2  6EE6               	movwf	postinc1,c
 15130  0169B4  0E00               	movlw	0
 15131  0169B6  6EE6               	movwf	postinc1,c
 15132  0169B8  0E00               	movlw	0
 15133  0169BA  6EE6               	movwf	postinc1,c
 15134  0169BC  0E00               	movlw	0
 15135  0169BE  6EE6               	movwf	postinc1,c
 15136  0169C0  0E00               	movlw	0
 15137  0169C2  6EE6               	movwf	postinc1,c
 15138  0169C4  0E00               	movlw	0
 15139  0169C6  6EE6               	movwf	postinc1,c
 15140  0169C8  0E00               	movlw	0
 15141  0169CA  6EE6               	movwf	postinc1,c
 15142  0169CC  0E00               	movlw	0
 15143  0169CE  6EE6               	movwf	postinc1,c
 15144                           
 15145                           ;stkvar	_n @ sp[(-22)+0]
 15146  0169D0  50E1               	movf	fsr1l,w,c
 15147  0169D2  0FEA               	addlw	-22
 15148  0169D4  6ED9               	movwf	fsr2l,c
 15149  0169D6  50E2               	movf	fsr1h,w,c
 15150  0169D8  6EDA               	movwf	fsr2h,c
 15151  0169DA  0EFF               	movlw	255
 15152  0169DC  22DA               	addwfc	fsr2h,f,c
 15153  0169DE  006F FF7B FFE6     	movff	postinc2,postinc1
 15154  0169E4  006F FF7B FFE6     	movff	postinc2,postinc1
 15155  0169EA  006F FF7B FFE6     	movff	postinc2,postinc1
 15156  0169F0  006F FF7B FFE6     	movff	postinc2,postinc1
 15157  0169F6  006F FF7B FFE6     	movff	postinc2,postinc1
 15158  0169FC  006F FF7B FFE6     	movff	postinc2,postinc1
 15159  016A02  006F FF7B FFE6     	movff	postinc2,postinc1
 15160  016A08  006F FF7B FFE6     	movff	postinc2,postinc1
 15161  016A0E  EC83  F0C7         	call	___lodiv	;wreg free
 15162  016A12  52E5               	movf	postdec1,f,c
 15163  016A14  006F FF9C  F018    	movff	indf1,btemp+23
 15164  016A1A  52E5               	movf	postdec1,f,c
 15165  016A1C  006F FF9C  F017    	movff	indf1,btemp+22
 15166  016A22  52E5               	movf	postdec1,f,c
 15167  016A24  006F FF9C  F016    	movff	indf1,btemp+21
 15168  016A2A  52E5               	movf	postdec1,f,c
 15169  016A2C  006F FF9C  F015    	movff	indf1,btemp+20
 15170  016A32  52E5               	movf	postdec1,f,c
 15171  016A34  006F FF9C  F014    	movff	indf1,btemp+19
 15172  016A3A  52E5               	movf	postdec1,f,c
 15173  016A3C  006F FF9C  F013    	movff	indf1,btemp+18
 15174  016A42  52E5               	movf	postdec1,f,c
 15175  016A44  006F FF9C  F012    	movff	indf1,btemp+17
 15176  016A4A  52E5               	movf	postdec1,f,c
 15177  016A4C  006F FF9C  F011    	movff	indf1,btemp+16
 15178  016A52  0EF8               	movlw	248
 15179  016A54  26E1               	addwf	fsr1l,f,c
 15180  016A56  0EFF               	movlw	255
 15181  016A58  22E2               	addwfc	fsr1h,f,c
 15182                           
 15183                           ;stkvar	_n @ sp[(-14)+0]
 15184  016A5A  0EF2               	movlw	-14
 15185  016A5C  0060  F047  FFE3   	movff	btemp+16,plusw1
 15186  016A62  0EF3               	movlw	-13
 15187  016A64  0060  F04B  FFE3   	movff	btemp+17,plusw1
 15188  016A6A  0EF4               	movlw	-12
 15189  016A6C  0060  F04F  FFE3   	movff	btemp+18,plusw1
 15190  016A72  0EF5               	movlw	-11
 15191  016A74  0060  F053  FFE3   	movff	btemp+19,plusw1
 15192  016A7A  0EF6               	movlw	-10
 15193  016A7C  0060  F057  FFE3   	movff	btemp+20,plusw1
 15194  016A82  0EF7               	movlw	-9
 15195  016A84  0060  F05B  FFE3   	movff	btemp+21,plusw1
 15196  016A8A  0EF8               	movlw	-8
 15197  016A8C  0060  F05F  FFE3   	movff	btemp+22,plusw1
 15198  016A92  0EF9               	movlw	-7
 15199  016A94  0060  F063  FFE3   	movff	btemp+23,plusw1
 15200  016A9A                     l12637:
 15201                           
 15202                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 15203                           ;stkvar	_i @ sp[(-14)+8]
 15204  016A9A  0EFA               	movlw	-6
 15205  016A9C  006F FF8C  F001    	movff	plusw1,btemp
 15206  016AA2  0EFB               	movlw	-5
 15207  016AA4  50E3               	movf	plusw1,w,c
 15208  016AA6  1001               	iorwf	btemp^0,w,c
 15209  016AA8  B4D8               	btfsc	status,2,c
 15210  016AAA  D02F               	goto	u11920
 15211                           
 15212                           ;stkvar	_n @ sp[(-14)+0]
 15213  016AAC  0EF2               	movlw	-14
 15214  016AAE  50E3               	movf	plusw1,w,c
 15215  016AB0  E115               	bnz	u11891
 15216  016AB2  0EF3               	movlw	-13
 15217  016AB4  50E3               	movf	plusw1,w,c
 15218  016AB6  E112               	bnz	u11891
 15219  016AB8  0EF4               	movlw	-12
 15220  016ABA  50E3               	movf	plusw1,w,c
 15221  016ABC  E10F               	bnz	u11891
 15222  016ABE  0EF5               	movlw	-11
 15223  016AC0  50E3               	movf	plusw1,w,c
 15224  016AC2  E10C               	bnz	u11891
 15225  016AC4  0EF6               	movlw	-10
 15226  016AC6  50E3               	movf	plusw1,w,c
 15227  016AC8  E109               	bnz	u11891
 15228  016ACA  0EF7               	movlw	-9
 15229  016ACC  50E3               	movf	plusw1,w,c
 15230  016ACE  E106               	bnz	u11891
 15231  016AD0  0EF8               	movlw	-8
 15232  016AD2  50E3               	movf	plusw1,w,c
 15233  016AD4  E103               	bnz	u11891
 15234  016AD6  0EF9               	movlw	-7
 15235  016AD8  50E3               	movf	plusw1,w,c
 15236  016ADA  A4D8               	btfss	status,2,c
 15237  016ADC                     u11891:
 15238  016ADC  D6E3               	goto	l12627
 15239                           
 15240                           ;stkvar	_p @ sp[(-14)+12]
 15241  016ADE  0EFF               	movlw	-1
 15242  016AE0  BEE3               	btfsc	plusw1,7,c
 15243  016AE2  D007               	goto	u11900
 15244  016AE4  0EFF               	movlw	-1
 15245  016AE6  50E3               	movf	plusw1,w,c
 15246  016AE8  E103               	bnz	u11901
 15247  016AEA  0EFE               	movlw	-2
 15248  016AEC  04E3               	decf	plusw1,w,c
 15249  016AEE  B0D8               	btfsc	status,0,c
 15250  016AF0                     u11901:
 15251  016AF0  D6D9               	goto	l12627
 15252  016AF2                     u11900:
 15253                           
 15254                           ;stkvar	_w @ sp[(-14)+10]
 15255  016AF2  0EFD               	movlw	-3
 15256  016AF4  BEE3               	btfsc	plusw1,7,c
 15257  016AF6  D009               	goto	u11920
 15258  016AF8  0EFD               	movlw	-3
 15259  016AFA  50E3               	movf	plusw1,w,c
 15260  016AFC  E104               	bnz	u11910
 15261  016AFE  0EFC               	movlw	-4
 15262  016B00  04E3               	decf	plusw1,w,c
 15263  016B02  A0D8               	btfss	status,0,c
 15264  016B04  D002               	goto	u11920
 15265  016B06                     u11910:
 15266  016B06  B23E               	btfsc	_flags^0,1,c
 15267  016B08  D6CD               	goto	l12627
 15268  016B0A                     u11920:
 15269                           
 15270                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
 15271                           ;stkvar	_w @ sp[(-14)+10]
 15272  016B0A  0EFC               	movlw	-4
 15273  016B0C  006F FF8F FFE6     	movff	plusw1,postinc1
 15274  016B12  006F FF8F FFE6     	movff	plusw1,postinc1
 15275                           
 15276                           ;stkvar	_i @ sp[(-16)+8]
 15277  016B18  0E97               	movlw	low _dbuf
 15278  016B1A  6E0B               	movwf	(btemp+10)^0,c
 15279  016B1C  0E02               	movlw	high _dbuf
 15280  016B1E  6E0C               	movwf	(btemp+11)^0,c
 15281  016B20  0EF8               	movlw	-8
 15282  016B22  50E3               	movf	plusw1,w,c
 15283  016B24  260B               	addwf	(btemp+10)^0,f,c
 15284  016B26  0EF9               	movlw	-7
 15285  016B28  50E3               	movf	plusw1,w,c
 15286  016B2A  220C               	addwfc	(btemp+11)^0,f,c
 15287  016B2C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 15288  016B32  0060  F033  FFE6   	movff	btemp+11,postinc1
 15289                           
 15290                           ;stkvar	_fp @ sp[(-18)+-2]
 15291  016B38  0EEC               	movlw	-20
 15292  016B3A  006F FF8F FFE6     	movff	plusw1,postinc1
 15293  016B40  006F FF8F FFE6     	movff	plusw1,postinc1
 15294  016B46  ECF6  F0CD         	call	_pad	;wreg free
 15295                           
 15296                           ; _utoa: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 15297  016B4A  0EE8               	movlw	232
 15298  016B4C  26E1               	addwf	fsr1l,f,c
 15299  016B4E  0EFF               	movlw	255
 15300  016B50  22E2               	addwfc	fsr1h,f,c
 15301  016B52  0012               	return		;funcret
 15302  016B54                     __end_of_utoa:
 15303                           	opt callstack 0
 15304                           
 15305 ;; *************** function ___lomod *****************
 15306 ;; Defined at:
 15307 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lomod.c"
 15308 ;; Parameters:    Size  Location     Type
 15309 ;;  dividend        8  [STACK] unsigned long long 
 15310 ;;  divisor         8  [STACK] unsigned long long 
 15311 ;; Auto vars:     Size  Location     Type
 15312 ;;  counter         1  [STACK] unsigned char 
 15313 ;; Return value:  Size  Location     Type
 15314 ;;                  8  [STACK] unsigned long long 
 15315 ;; Registers used:
 15316 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 15317 ;; Tracked objects:
 15318 ;;		On entry : 0/2
 15319 ;;		On exit  : 0/0
 15320 ;;		Unchanged: 0/0
 15321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15325 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15326 ;;Total ram usage:        0 bytes
 15327 ;; Hardware stack levels used:    1
 15328 ;; Hardware stack levels required when called:   15
 15329 ;; This function calls:
 15330 ;;		Nothing
 15331 ;; This function is called by:
 15332 ;;		_utoa
 15333 ;; This function uses a reentrant model
 15334 ;;
 15335                           
 15336                           	psect	text58
 15337  01960C                     __ptext58:
 15338                           	opt callstack 0
 15339  01960C                     ___lomod:
 15340                           	opt callstack 0
 15341                           
 15342                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 15343  01960C  52E6               	movf	postinc1,f,c
 15344                           
 15345                           ;stkvar	_divisor @ sp[(-1)+-16]
 15346                           
 15347                           ;incstack = 0
 15348 ;; hardware stack exceeded
 15349  01960E  0EEF               	movlw	-17
 15350  019610  50E3               	movf	plusw1,w,c
 15351  019612  E116               	bnz	u7450
 15352  019614  0EF0               	movlw	-16
 15353  019616  50E3               	movf	plusw1,w,c
 15354  019618  E113               	bnz	u7450
 15355  01961A  0EF1               	movlw	-15
 15356  01961C  50E3               	movf	plusw1,w,c
 15357  01961E  E110               	bnz	u7450
 15358  019620  0EF2               	movlw	-14
 15359  019622  50E3               	movf	plusw1,w,c
 15360  019624  E10D               	bnz	u7450
 15361  019626  0EF3               	movlw	-13
 15362  019628  50E3               	movf	plusw1,w,c
 15363  01962A  E10A               	bnz	u7450
 15364  01962C  0EF4               	movlw	-12
 15365  01962E  50E3               	movf	plusw1,w,c
 15366  019630  E107               	bnz	u7450
 15367  019632  0EF5               	movlw	-11
 15368  019634  50E3               	movf	plusw1,w,c
 15369  019636  E104               	bnz	u7450
 15370  019638  0EF6               	movlw	-10
 15371  01963A  50E3               	movf	plusw1,w,c
 15372  01963C  B4D8               	btfsc	status,2,c
 15373  01963E  D075               	goto	u7480
 15374  019640                     u7450:
 15375                           
 15376                           ;stkvar	_counter @ sp[(-1)+0]
 15377  019640  0EFF               	movlw	-1
 15378  019642  6AE3               	clrf	plusw1,c
 15379  019644  D012               	goto	L15
 15380  019646                     l8881:
 15381                           
 15382                           ;stkvar	_divisor @ sp[(-1)+-16]
 15383  019646  90D8               	bcf	status,0,c
 15384  019648  0EEF               	movlw	-17
 15385  01964A  36E3               	rlcf	plusw1,f,c
 15386  01964C  0EF0               	movlw	-16
 15387  01964E  36E3               	rlcf	plusw1,f,c
 15388  019650  0EF1               	movlw	-15
 15389  019652  36E3               	rlcf	plusw1,f,c
 15390  019654  0EF2               	movlw	-14
 15391  019656  36E3               	rlcf	plusw1,f,c
 15392  019658  0EF3               	movlw	-13
 15393  01965A  36E3               	rlcf	plusw1,f,c
 15394  01965C  0EF4               	movlw	-12
 15395  01965E  36E3               	rlcf	plusw1,f,c
 15396  019660  0EF5               	movlw	-11
 15397  019662  36E3               	rlcf	plusw1,f,c
 15398  019664  0EF6               	movlw	-10
 15399  019666  36E3               	rlcf	plusw1,f,c
 15400                           
 15401                           ;stkvar	_counter @ sp[(-1)+0]
 15402  019668  0EFF               	movlw	-1
 15403  01966A                     L15:
 15404  01966A  2AE3               	incf	plusw1,f,c
 15405                           
 15406                           ;stkvar	_divisor @ sp[(-1)+-16]
 15407  01966C  0EF6               	movlw	-10
 15408  01966E  AEE3               	btfss	plusw1,7,c
 15409  019670  D7EA               	goto	l8881
 15410  019672                     u7460:
 15411                           
 15412                           ;stkvar	_divisor @ sp[(-1)+-16]
 15413                           ;stkvar	_dividend @ sp[(-1)+-8]
 15414  019672  50E1               	movf	fsr1l,w,c
 15415  019674  0FF7               	addlw	-9
 15416  019676  6ED9               	movwf	fsr2l,c
 15417  019678  50E2               	movf	fsr1h,w,c
 15418  01967A  6EDA               	movwf	fsr2h,c
 15419  01967C  0EFF               	movlw	255
 15420  01967E  22DA               	addwfc	fsr2h,f,c
 15421  019680  0EEF               	movlw	-17
 15422  019682  50E3               	movf	plusw1,w,c
 15423  019684  5CDE               	subwf	postinc2,w,c
 15424  019686  0EF0               	movlw	-16
 15425  019688  50E3               	movf	plusw1,w,c
 15426  01968A  58DE               	subwfb	postinc2,w,c
 15427  01968C  0EF1               	movlw	-15
 15428  01968E  50E3               	movf	plusw1,w,c
 15429  019690  58DE               	subwfb	postinc2,w,c
 15430  019692  0EF2               	movlw	-14
 15431  019694  50E3               	movf	plusw1,w,c
 15432  019696  58DE               	subwfb	postinc2,w,c
 15433  019698  0EF3               	movlw	-13
 15434  01969A  50E3               	movf	plusw1,w,c
 15435  01969C  58DE               	subwfb	postinc2,w,c
 15436  01969E  0EF4               	movlw	-12
 15437  0196A0  50E3               	movf	plusw1,w,c
 15438  0196A2  58DE               	subwfb	postinc2,w,c
 15439  0196A4  0EF5               	movlw	-11
 15440  0196A6  50E3               	movf	plusw1,w,c
 15441  0196A8  58DE               	subwfb	postinc2,w,c
 15442  0196AA  0EF6               	movlw	-10
 15443  0196AC  50E3               	movf	plusw1,w,c
 15444  0196AE  58DE               	subwfb	postinc2,w,c
 15445  0196B0  A0D8               	btfss	status,0,c
 15446  0196B2  D01F               	goto	l8889
 15447                           
 15448                           ;stkvar	_divisor @ sp[(-1)+-16]
 15449                           ;stkvar	_dividend @ sp[(-1)+-8]
 15450  0196B4  50E1               	movf	fsr1l,w,c
 15451  0196B6  0FF7               	addlw	-9
 15452  0196B8  6ED9               	movwf	fsr2l,c
 15453  0196BA  50E2               	movf	fsr1h,w,c
 15454  0196BC  6EDA               	movwf	fsr2h,c
 15455  0196BE  0EFF               	movlw	255
 15456  0196C0  22DA               	addwfc	fsr2h,f,c
 15457  0196C2  0EEF               	movlw	-17
 15458  0196C4  50E3               	movf	plusw1,w,c
 15459  0196C6  5EDE               	subwf	postinc2,f,c
 15460  0196C8  0EF0               	movlw	-16
 15461  0196CA  50E3               	movf	plusw1,w,c
 15462  0196CC  5ADE               	subwfb	postinc2,f,c
 15463  0196CE  0EF1               	movlw	-15
 15464  0196D0  50E3               	movf	plusw1,w,c
 15465  0196D2  5ADE               	subwfb	postinc2,f,c
 15466  0196D4  0EF2               	movlw	-14
 15467  0196D6  50E3               	movf	plusw1,w,c
 15468  0196D8  5ADE               	subwfb	postinc2,f,c
 15469  0196DA  0EF3               	movlw	-13
 15470  0196DC  50E3               	movf	plusw1,w,c
 15471  0196DE  5ADE               	subwfb	postinc2,f,c
 15472  0196E0  0EF4               	movlw	-12
 15473  0196E2  50E3               	movf	plusw1,w,c
 15474  0196E4  5ADE               	subwfb	postinc2,f,c
 15475  0196E6  0EF5               	movlw	-11
 15476  0196E8  50E3               	movf	plusw1,w,c
 15477  0196EA  5ADE               	subwfb	postinc2,f,c
 15478  0196EC  0EF6               	movlw	-10
 15479  0196EE  50E3               	movf	plusw1,w,c
 15480  0196F0  5ADE               	subwfb	postinc2,f,c
 15481  0196F2                     l8889:
 15482                           
 15483                           ;stkvar	_divisor @ sp[(-1)+-16]
 15484  0196F2  90D8               	bcf	status,0,c
 15485  0196F4  0EF6               	movlw	-10
 15486  0196F6  32E3               	rrcf	plusw1,f,c
 15487  0196F8  0EF5               	movlw	-11
 15488  0196FA  32E3               	rrcf	plusw1,f,c
 15489  0196FC  0EF4               	movlw	-12
 15490  0196FE  32E3               	rrcf	plusw1,f,c
 15491  019700  0EF3               	movlw	-13
 15492  019702  32E3               	rrcf	plusw1,f,c
 15493  019704  0EF2               	movlw	-14
 15494  019706  32E3               	rrcf	plusw1,f,c
 15495  019708  0EF1               	movlw	-15
 15496  01970A  32E3               	rrcf	plusw1,f,c
 15497  01970C  0EF0               	movlw	-16
 15498  01970E  32E3               	rrcf	plusw1,f,c
 15499  019710  0EEF               	movlw	-17
 15500  019712  32E3               	rrcf	plusw1,f,c
 15501                           
 15502                           ;stkvar	_counter @ sp[(-1)+0]
 15503  019714  0EFF               	movlw	-1
 15504  019716  50E3               	movf	plusw1,w,c
 15505  019718  6E01               	movwf	btemp^0,c
 15506  01971A  0E01               	movlw	1
 15507  01971C  5E01               	subwf	btemp^0,f,c
 15508  01971E  0EFF               	movlw	-1
 15509  019720  0060  F007  FFE3   	movff	btemp,plusw1
 15510  019726  A4D8               	btfss	status,2,c
 15511  019728  D7A4               	goto	u7460
 15512  01972A                     u7480:
 15513                           
 15514                           ;stkvar	_dividend @ sp[(-1)+-8]
 15515  01972A  0EF7               	movlw	247
 15516  01972C  24E1               	addwf	fsr1l,w,c
 15517  01972E  6ED9               	movwf	fsr2l,c
 15518  019730  0EFF               	movlw	255
 15519  019732  20E2               	addwfc	fsr1h,w,c
 15520  019734  6EDA               	movwf	fsr2h,c
 15521                           
 15522                           ;stkvar	?___lomod @ sp[(-1)+-8]
 15523  019736  0E08               	movlw	8
 15524  019738  6E01               	movwf	btemp^0,c
 15525  01973A  0EF7               	movlw	-9
 15526  01973C                     us749999:
 15527  01973C  006F FF7B FFE3     	movff	postinc2,plusw1
 15528  019742  28E8               	incf	wreg,w,c
 15529  019744  2E01               	decfsz	btemp^0,f,c
 15530  019746  D7FA               	bra	us749999
 15531                           
 15532                           ; ___lomod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 15533  019748  52E5               	movf	postdec1,f,c
 15534  01974A  0012               	return		;funcret
 15535  01974C                     __end_of___lomod:
 15536                           	opt callstack 0
 15537                           
 15538 ;; *************** function ___lodiv *****************
 15539 ;; Defined at:
 15540 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lodiv.c"
 15541 ;; Parameters:    Size  Location     Type
 15542 ;;  dividend        8  [STACK] unsigned long long 
 15543 ;;  divisor         8  [STACK] unsigned long long 
 15544 ;; Auto vars:     Size  Location     Type
 15545 ;;  quotient        8  [STACK] unsigned long long 
 15546 ;;  counter         1  [STACK] unsigned char 
 15547 ;; Return value:  Size  Location     Type
 15548 ;;                  8  [STACK] unsigned long long 
 15549 ;; Registers used:
 15550 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 15551 ;; Tracked objects:
 15552 ;;		On entry : 0/2
 15553 ;;		On exit  : 0/0
 15554 ;;		Unchanged: 0/0
 15555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15559 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15560 ;;Total ram usage:        0 bytes
 15561 ;; Hardware stack levels used:    1
 15562 ;; Hardware stack levels required when called:   15
 15563 ;; This function calls:
 15564 ;;		Nothing
 15565 ;; This function is called by:
 15566 ;;		_utoa
 15567 ;; This function uses a reentrant model
 15568 ;;
 15569                           
 15570                           	psect	text59
 15571  018F06                     __ptext59:
 15572                           	opt callstack 0
 15573  018F06                     ___lodiv:
 15574                           	opt callstack 0
 15575                           
 15576                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 15577  018F06  0E09               	movlw	9
 15578  018F08  26E1               	addwf	fsr1l,f,c
 15579  018F0A  0E00               	movlw	0
 15580  018F0C  22E2               	addwfc	fsr1h,f,c
 15581                           
 15582                           ;stkvar	_quotient @ sp[(-9)+0]
 15583                           
 15584                           ;incstack = 0
 15585 ;; hardware stack exceeded
 15586  018F0E  0E07               	movlw	7
 15587  018F10  6E01               	movwf	btemp^0,c
 15588  018F12  0EF7               	movlw	-9
 15589  018F14                     u7391:
 15590  018F14  6AE3               	clrf	plusw1,c
 15591  018F16  2AE8               	incf	wreg,f,c
 15592  018F18  0601               	decf	btemp^0,f,c
 15593  018F1A  E2FC               	bc	u7391
 15594                           
 15595                           ;stkvar	_divisor @ sp[(-9)+-16]
 15596  018F1C  0EE7               	movlw	-25
 15597  018F1E  50E3               	movf	plusw1,w,c
 15598  018F20  E116               	bnz	u7400
 15599  018F22  0EE8               	movlw	-24
 15600  018F24  50E3               	movf	plusw1,w,c
 15601  018F26  E113               	bnz	u7400
 15602  018F28  0EE9               	movlw	-23
 15603  018F2A  50E3               	movf	plusw1,w,c
 15604  018F2C  E110               	bnz	u7400
 15605  018F2E  0EEA               	movlw	-22
 15606  018F30  50E3               	movf	plusw1,w,c
 15607  018F32  E10D               	bnz	u7400
 15608  018F34  0EEB               	movlw	-21
 15609  018F36  50E3               	movf	plusw1,w,c
 15610  018F38  E10A               	bnz	u7400
 15611  018F3A  0EEC               	movlw	-20
 15612  018F3C  50E3               	movf	plusw1,w,c
 15613  018F3E  E107               	bnz	u7400
 15614  018F40  0EED               	movlw	-19
 15615  018F42  50E3               	movf	plusw1,w,c
 15616  018F44  E104               	bnz	u7400
 15617  018F46  0EEE               	movlw	-18
 15618  018F48  50E3               	movf	plusw1,w,c
 15619  018F4A  B4D8               	btfsc	status,2,c
 15620  018F4C  D088               	goto	u7430
 15621  018F4E                     u7400:
 15622                           
 15623                           ;stkvar	_counter @ sp[(-9)+8]
 15624  018F4E  0EFF               	movlw	-1
 15625  018F50  6AE3               	clrf	plusw1,c
 15626  018F52  D012               	goto	L16
 15627  018F54                     l8857:
 15628                           
 15629                           ;stkvar	_divisor @ sp[(-9)+-16]
 15630  018F54  90D8               	bcf	status,0,c
 15631  018F56  0EE7               	movlw	-25
 15632  018F58  36E3               	rlcf	plusw1,f,c
 15633  018F5A  0EE8               	movlw	-24
 15634  018F5C  36E3               	rlcf	plusw1,f,c
 15635  018F5E  0EE9               	movlw	-23
 15636  018F60  36E3               	rlcf	plusw1,f,c
 15637  018F62  0EEA               	movlw	-22
 15638  018F64  36E3               	rlcf	plusw1,f,c
 15639  018F66  0EEB               	movlw	-21
 15640  018F68  36E3               	rlcf	plusw1,f,c
 15641  018F6A  0EEC               	movlw	-20
 15642  018F6C  36E3               	rlcf	plusw1,f,c
 15643  018F6E  0EED               	movlw	-19
 15644  018F70  36E3               	rlcf	plusw1,f,c
 15645  018F72  0EEE               	movlw	-18
 15646  018F74  36E3               	rlcf	plusw1,f,c
 15647                           
 15648                           ;stkvar	_counter @ sp[(-9)+8]
 15649  018F76  0EFF               	movlw	-1
 15650  018F78                     L16:
 15651  018F78  2AE3               	incf	plusw1,f,c
 15652                           
 15653                           ;stkvar	_divisor @ sp[(-9)+-16]
 15654  018F7A  0EEE               	movlw	-18
 15655  018F7C  AEE3               	btfss	plusw1,7,c
 15656  018F7E  D7EA               	goto	l8857
 15657  018F80                     u7410:
 15658                           
 15659                           ;stkvar	_quotient @ sp[(-9)+0]
 15660  018F80  90D8               	bcf	status,0,c
 15661  018F82  0EF7               	movlw	-9
 15662  018F84  36E3               	rlcf	plusw1,f,c
 15663  018F86  0EF8               	movlw	-8
 15664  018F88  36E3               	rlcf	plusw1,f,c
 15665  018F8A  0EF9               	movlw	-7
 15666  018F8C  36E3               	rlcf	plusw1,f,c
 15667  018F8E  0EFA               	movlw	-6
 15668  018F90  36E3               	rlcf	plusw1,f,c
 15669  018F92  0EFB               	movlw	-5
 15670  018F94  36E3               	rlcf	plusw1,f,c
 15671  018F96  0EFC               	movlw	-4
 15672  018F98  36E3               	rlcf	plusw1,f,c
 15673  018F9A  0EFD               	movlw	-3
 15674  018F9C  36E3               	rlcf	plusw1,f,c
 15675  018F9E  0EFE               	movlw	-2
 15676  018FA0  36E3               	rlcf	plusw1,f,c
 15677                           
 15678                           ;stkvar	_divisor @ sp[(-9)+-16]
 15679                           ;stkvar	_dividend @ sp[(-9)+-8]
 15680  018FA2  50E1               	movf	fsr1l,w,c
 15681  018FA4  0FEF               	addlw	-17
 15682  018FA6  6ED9               	movwf	fsr2l,c
 15683  018FA8  50E2               	movf	fsr1h,w,c
 15684  018FAA  6EDA               	movwf	fsr2h,c
 15685  018FAC  0EFF               	movlw	255
 15686  018FAE  22DA               	addwfc	fsr2h,f,c
 15687  018FB0  0EE7               	movlw	-25
 15688  018FB2  50E3               	movf	plusw1,w,c
 15689  018FB4  5CDE               	subwf	postinc2,w,c
 15690  018FB6  0EE8               	movlw	-24
 15691  018FB8  50E3               	movf	plusw1,w,c
 15692  018FBA  58DE               	subwfb	postinc2,w,c
 15693  018FBC  0EE9               	movlw	-23
 15694  018FBE  50E3               	movf	plusw1,w,c
 15695  018FC0  58DE               	subwfb	postinc2,w,c
 15696  018FC2  0EEA               	movlw	-22
 15697  018FC4  50E3               	movf	plusw1,w,c
 15698  018FC6  58DE               	subwfb	postinc2,w,c
 15699  018FC8  0EEB               	movlw	-21
 15700  018FCA  50E3               	movf	plusw1,w,c
 15701  018FCC  58DE               	subwfb	postinc2,w,c
 15702  018FCE  0EEC               	movlw	-20
 15703  018FD0  50E3               	movf	plusw1,w,c
 15704  018FD2  58DE               	subwfb	postinc2,w,c
 15705  018FD4  0EED               	movlw	-19
 15706  018FD6  50E3               	movf	plusw1,w,c
 15707  018FD8  58DE               	subwfb	postinc2,w,c
 15708  018FDA  0EEE               	movlw	-18
 15709  018FDC  50E3               	movf	plusw1,w,c
 15710  018FDE  58DE               	subwfb	postinc2,w,c
 15711  018FE0  A0D8               	btfss	status,0,c
 15712  018FE2  D021               	goto	l8869
 15713                           
 15714                           ;stkvar	_divisor @ sp[(-9)+-16]
 15715                           ;stkvar	_dividend @ sp[(-9)+-8]
 15716  018FE4  50E1               	movf	fsr1l,w,c
 15717  018FE6  0FEF               	addlw	-17
 15718  018FE8  6ED9               	movwf	fsr2l,c
 15719  018FEA  50E2               	movf	fsr1h,w,c
 15720  018FEC  6EDA               	movwf	fsr2h,c
 15721  018FEE  0EFF               	movlw	255
 15722  018FF0  22DA               	addwfc	fsr2h,f,c
 15723  018FF2  0EE7               	movlw	-25
 15724  018FF4  50E3               	movf	plusw1,w,c
 15725  018FF6  5EDE               	subwf	postinc2,f,c
 15726  018FF8  0EE8               	movlw	-24
 15727  018FFA  50E3               	movf	plusw1,w,c
 15728  018FFC  5ADE               	subwfb	postinc2,f,c
 15729  018FFE  0EE9               	movlw	-23
 15730  019000  50E3               	movf	plusw1,w,c
 15731  019002  5ADE               	subwfb	postinc2,f,c
 15732  019004  0EEA               	movlw	-22
 15733  019006  50E3               	movf	plusw1,w,c
 15734  019008  5ADE               	subwfb	postinc2,f,c
 15735  01900A  0EEB               	movlw	-21
 15736  01900C  50E3               	movf	plusw1,w,c
 15737  01900E  5ADE               	subwfb	postinc2,f,c
 15738  019010  0EEC               	movlw	-20
 15739  019012  50E3               	movf	plusw1,w,c
 15740  019014  5ADE               	subwfb	postinc2,f,c
 15741  019016  0EED               	movlw	-19
 15742  019018  50E3               	movf	plusw1,w,c
 15743  01901A  5ADE               	subwfb	postinc2,f,c
 15744  01901C  0EEE               	movlw	-18
 15745  01901E  50E3               	movf	plusw1,w,c
 15746  019020  5ADE               	subwfb	postinc2,f,c
 15747                           
 15748                           ;stkvar	_quotient @ sp[(-9)+0]
 15749  019022  0EF7               	movlw	-9
 15750  019024  80E3               	bsf	plusw1,0,c
 15751  019026                     l8869:
 15752                           
 15753                           ;stkvar	_divisor @ sp[(-9)+-16]
 15754  019026  90D8               	bcf	status,0,c
 15755  019028  0EEE               	movlw	-18
 15756  01902A  32E3               	rrcf	plusw1,f,c
 15757  01902C  0EED               	movlw	-19
 15758  01902E  32E3               	rrcf	plusw1,f,c
 15759  019030  0EEC               	movlw	-20
 15760  019032  32E3               	rrcf	plusw1,f,c
 15761  019034  0EEB               	movlw	-21
 15762  019036  32E3               	rrcf	plusw1,f,c
 15763  019038  0EEA               	movlw	-22
 15764  01903A  32E3               	rrcf	plusw1,f,c
 15765  01903C  0EE9               	movlw	-23
 15766  01903E  32E3               	rrcf	plusw1,f,c
 15767  019040  0EE8               	movlw	-24
 15768  019042  32E3               	rrcf	plusw1,f,c
 15769  019044  0EE7               	movlw	-25
 15770  019046  32E3               	rrcf	plusw1,f,c
 15771                           
 15772                           ;stkvar	_counter @ sp[(-9)+8]
 15773  019048  0EFF               	movlw	-1
 15774  01904A  50E3               	movf	plusw1,w,c
 15775  01904C  6E01               	movwf	btemp^0,c
 15776  01904E  0E01               	movlw	1
 15777  019050  5E01               	subwf	btemp^0,f,c
 15778  019052  0EFF               	movlw	-1
 15779  019054  0060  F007  FFE3   	movff	btemp,plusw1
 15780  01905A  A4D8               	btfss	status,2,c
 15781  01905C  D791               	goto	u7410
 15782  01905E                     u7430:
 15783                           
 15784                           ;stkvar	_quotient @ sp[(-9)+0]
 15785  01905E  0EF7               	movlw	247
 15786  019060  24E1               	addwf	fsr1l,w,c
 15787  019062  6ED9               	movwf	fsr2l,c
 15788  019064  0EFF               	movlw	255
 15789  019066  20E2               	addwfc	fsr1h,w,c
 15790  019068  6EDA               	movwf	fsr2h,c
 15791                           
 15792                           ;stkvar	?___lodiv @ sp[(-9)+-8]
 15793  01906A  0E08               	movlw	8
 15794  01906C  6E01               	movwf	btemp^0,c
 15795  01906E  0EEF               	movlw	-17
 15796  019070                     us744999:
 15797  019070  006F FF7B FFE3     	movff	postinc2,plusw1
 15798  019076  28E8               	incf	wreg,w,c
 15799  019078  2E01               	decfsz	btemp^0,f,c
 15800  01907A  D7FA               	bra	us744999
 15801                           
 15802                           ; ___lodiv: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 15803  01907C  0EF7               	movlw	247
 15804  01907E  26E1               	addwf	fsr1l,f,c
 15805  019080  0EFF               	movlw	255
 15806  019082  22E2               	addwfc	fsr1h,f,c
 15807  019084  0012               	return		;funcret
 15808  019086                     __end_of___lodiv:
 15809                           	opt callstack 0
 15810                           
 15811 ;; *************** function _strncmp *****************
 15812 ;; Defined at:
 15813 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 15814 ;; Parameters:    Size  Location     Type
 15815 ;;  _l              2  [STACK] PTR const unsigned char 
 15816 ;;		 -> ct(3), STR_64(121), STR_62(3), STR_61(3), 
 15817 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
 15818 ;;		 -> STR_56(19), STR_55(19), STR_54(24), STR_53(15), 
 15819 ;;		 -> STR_52(15), STR_51(15), STR_50(10), STR_49(10), 
 15820 ;;		 -> STR_48(19), STR_47(19), STR_44(3), STR_43(3), 
 15821 ;;		 -> STR_42(22), STR_41(22), STR_40(22), STR_39(23), 
 15822 ;;		 -> STR_38(23), STR_37(23), STR_36(23), STR_35(23), 
 15823 ;;		 -> STR_34(23), STR_33(22), STR_32(22), STR_31(22), 
 15824 ;;		 -> STR_30(22), STR_29(22), STR_28(22), STR_27(22), 
 15825 ;;		 -> STR_26(22), STR_25(22), STR_24(22), STR_23(22), 
 15826 ;;		 -> STR_22(22), STR_21(17), STR_20(16), STR_19(16), 
 15827 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(21), 
 15828 ;;		 -> STR_14(21), STR_13(21), STR_12(21), STR_11(22), 
 15829 ;;		 -> STR_10(22), STR_9(26), STR_8(21), STR_7(21), 
 15830 ;;		 -> STR_6(21), STR_5(21), STR_4(21), STR_2(21), 
 15831 ;;		 -> STR_1(21), 
 15832 ;;  _r              2  [STACK] PTR const unsigned char 
 15833 ;;		 -> STR_98(3), STR_94(3), STR_89(3), STR_84(3), 
 15834 ;;		 -> STR_79(3), STR_75(3), 
 15835 ;;  n               2  [STACK] unsigned int 
 15836 ;; Auto vars:     Size  Location     Type
 15837 ;;  r               2  [STACK] PTR const unsigned char 
 15838 ;;		 -> STR_98(3), STR_94(3), STR_89(3), STR_84(3), 
 15839 ;;		 -> STR_79(3), STR_75(3), 
 15840 ;;  l               2  [STACK] PTR const unsigned char 
 15841 ;;		 -> ct(3), STR_64(121), STR_62(3), STR_61(3), 
 15842 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
 15843 ;;		 -> STR_56(19), STR_55(19), STR_54(24), STR_53(15), 
 15844 ;;		 -> STR_52(15), STR_51(15), STR_50(10), STR_49(10), 
 15845 ;;		 -> STR_48(19), STR_47(19), STR_44(3), STR_43(3), 
 15846 ;;		 -> STR_42(22), STR_41(22), STR_40(22), STR_39(23), 
 15847 ;;		 -> STR_38(23), STR_37(23), STR_36(23), STR_35(23), 
 15848 ;;		 -> STR_34(23), STR_33(22), STR_32(22), STR_31(22), 
 15849 ;;		 -> STR_30(22), STR_29(22), STR_28(22), STR_27(22), 
 15850 ;;		 -> STR_26(22), STR_25(22), STR_24(22), STR_23(22), 
 15851 ;;		 -> STR_22(22), STR_21(17), STR_20(16), STR_19(16), 
 15852 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(21), 
 15853 ;;		 -> STR_14(21), STR_13(21), STR_12(21), STR_11(22), 
 15854 ;;		 -> STR_10(22), STR_9(26), STR_8(21), STR_7(21), 
 15855 ;;		 -> STR_6(21), STR_5(21), STR_4(21), STR_2(21), 
 15856 ;;		 -> STR_1(21), 
 15857 ;; Return value:  Size  Location     Type
 15858 ;;                  2  [STACK] int 
 15859 ;; Registers used:
 15860 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tbl
      +ptrh, tblptru, prodl
 15861 ;; Tracked objects:
 15862 ;;		On entry : 0/0
 15863 ;;		On exit  : 0/0
 15864 ;;		Unchanged: 0/0
 15865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15870 ;;Total ram usage:        0 bytes
 15871 ;; Hardware stack levels used:    1
 15872 ;; Hardware stack levels required when called:   15
 15873 ;; This function calls:
 15874 ;;		Nothing
 15875 ;; This function is called by:
 15876 ;;		_vfpfcnvrt
 15877 ;; This function uses a reentrant model
 15878 ;;
 15879                           
 15880                           	psect	text60
 15881  01807C                     __ptext60:
 15882                           	opt callstack 0
 15883  01807C                     _strncmp:
 15884                           	opt callstack 0
 15885                           
 15886                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15887  01807C  52E6               	movf	postinc1,f,c
 15888  01807E  52E6               	movf	postinc1,f,c
 15889  018080  52E6               	movf	postinc1,f,c
 15890  018082  52E6               	movf	postinc1,f,c
 15891                           
 15892                           ;stkvar	__l @ sp[(-4)+-2]
 15893                           
 15894                           ;incstack = 0
 15895 ;; hardware stack exceeded
 15896  018084  0EFA               	movlw	-6
 15897  018086  006F FF8C  F00B    	movff	plusw1,btemp+10
 15898  01808C  0EFB               	movlw	-5
 15899  01808E  006F FF8C  F00C    	movff	plusw1,btemp+11
 15900                           
 15901                           ;stkvar	_l @ sp[(-4)+2]
 15902  018094  0EFF               	movlw	-1
 15903  018096  0060  F033  FFE3   	movff	btemp+11,plusw1
 15904  01809C  0EFE               	movlw	-2
 15905  01809E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15906                           
 15907                           ;stkvar	__r @ sp[(-4)+-4]
 15908  0180A4  0EF8               	movlw	-8
 15909  0180A6  006F FF8C  F00B    	movff	plusw1,btemp+10
 15910  0180AC  0EF9               	movlw	-7
 15911  0180AE  006F FF8C  F00C    	movff	plusw1,btemp+11
 15912                           
 15913                           ;stkvar	_r @ sp[(-4)+0]
 15914  0180B4  0EFD               	movlw	-3
 15915  0180B6  0060  F033  FFE3   	movff	btemp+11,plusw1
 15916  0180BC  0EFC               	movlw	-4
 15917  0180BE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15918                           
 15919                           ;stkvar	_n @ sp[(-4)+-6]
 15920  0180C4  0EF6               	movlw	-10
 15921  0180C6  006F FF8C  F001    	movff	plusw1,btemp
 15922  0180CC  0E01               	movlw	1
 15923  0180CE  5E01               	subwf	btemp^0,f,c
 15924  0180D0  0EF6               	movlw	-10
 15925  0180D2  0060  F007  FFE3   	movff	btemp,plusw1
 15926  0180D8  0EF7               	movlw	-9
 15927  0180DA  006F FF8C  F001    	movff	plusw1,btemp
 15928  0180E0  0E00               	movlw	0
 15929  0180E2  5A01               	subwfb	btemp^0,f,c
 15930  0180E4  0EF7               	movlw	-9
 15931  0180E6  0060  F007  FFE3   	movff	btemp,plusw1
 15932  0180EC  0EF6               	movlw	-10
 15933  0180EE  28E3               	incf	plusw1,w,c
 15934  0180F0  E13F               	bnz	l9539
 15935  0180F2  0EF7               	movlw	-9
 15936  0180F4  28E3               	incf	plusw1,w,c
 15937  0180F6  A4D8               	btfss	status,2,c
 15938  0180F8  D03B               	goto	l9539
 15939  0180FA  0E00               	movlw	0
 15940  0180FC  6E01               	movwf	btemp^0,c
 15941  0180FE  0E00               	movlw	0
 15942  018100  6E02               	movwf	(btemp+1)^0,c
 15943  018102  D0C7               	goto	l3526
 15944  018104                     l9537:
 15945                           
 15946                           ;stkvar	_l @ sp[(-4)+2]
 15947  018104  0EFE               	movlw	-2
 15948  018106  50E3               	movf	plusw1,w,c
 15949  018108  0F01               	addlw	1
 15950  01810A  6E01               	movwf	btemp^0,c
 15951  01810C  0EFE               	movlw	-2
 15952  01810E  0060  F007  FFE3   	movff	btemp,plusw1
 15953  018114  6A01               	clrf	btemp^0,c
 15954  018116  0EFF               	movlw	-1
 15955  018118  50E3               	movf	plusw1,w,c
 15956  01811A  2001               	addwfc	btemp^0,w,c
 15957  01811C  6E01               	movwf	btemp^0,c
 15958  01811E  0EFF               	movlw	-1
 15959  018120  0060  F007  FFE3   	movff	btemp,plusw1
 15960                           
 15961                           ;stkvar	_r @ sp[(-4)+0]
 15962  018126  0EFC               	movlw	-4
 15963  018128  50E3               	movf	plusw1,w,c
 15964  01812A  0F01               	addlw	1
 15965  01812C  6E01               	movwf	btemp^0,c
 15966  01812E  0EFC               	movlw	-4
 15967  018130  0060  F007  FFE3   	movff	btemp,plusw1
 15968  018136  6A01               	clrf	btemp^0,c
 15969  018138  0EFD               	movlw	-3
 15970  01813A  50E3               	movf	plusw1,w,c
 15971  01813C  2001               	addwfc	btemp^0,w,c
 15972  01813E  6E01               	movwf	btemp^0,c
 15973  018140  0EFD               	movlw	-3
 15974  018142  0060  F007  FFE3   	movff	btemp,plusw1
 15975                           
 15976                           ;stkvar	_n @ sp[(-4)+-6]
 15977  018148  0EF6               	movlw	-10
 15978  01814A  006F FF8C  F001    	movff	plusw1,btemp
 15979  018150  0E01               	movlw	1
 15980  018152  5E01               	subwf	btemp^0,f,c
 15981  018154  0EF6               	movlw	-10
 15982  018156  0060  F007  FFE3   	movff	btemp,plusw1
 15983  01815C  0EF7               	movlw	-9
 15984  01815E  006F FF8C  F001    	movff	plusw1,btemp
 15985  018164  0E00               	movlw	0
 15986  018166  5A01               	subwfb	btemp^0,f,c
 15987  018168  0EF7               	movlw	-9
 15988  01816A  0060  F007  FFE3   	movff	btemp,plusw1
 15989  018170                     l9539:
 15990                           
 15991                           ;stkvar	_l @ sp[(-4)+2]
 15992  018170  0EFE               	movlw	-2
 15993  018172  006F FF8F FFF6     	movff	plusw1,tblptrl
 15994  018178  0EFF               	movlw	-1
 15995  01817A  006F FF8F FFF7     	movff	plusw1,tblptrh
 15996  018180  0E00               	movlw	low (__mediumconst shr (0+16))
 15997  018182  6EF8               	movwf	tblptru,c
 15998  018184  0E1F               	movlw	(high __ramtop+-1)
 15999  018186  64F7               	cpfsgt	tblptrh,c
 16000  018188  D003               	bra	u8687
 16001  01818A  0008               	tblrd		*
 16002  01818C  50F5               	movf	tablat,w,c
 16003  01818E  D007               	bra	u8680
 16004  018190                     u8687:
 16005  018190  006F FFDB FFE9     	movff	tblptrl,fsr0l
 16006  018196  006F FFDF FFEA     	movff	tblptrh,fsr0h
 16007  01819C  50EF               	movf	indf0,w,c
 16008  01819E                     u8680:
 16009  01819E  0900               	iorlw	0
 16010  0181A0  B4D8               	btfsc	status,2,c
 16011  0181A2  D04A               	goto	u8720
 16012                           
 16013                           ;stkvar	_r @ sp[(-4)+0]
 16014  0181A4  50E1               	movf	fsr1l,w,c
 16015  0181A6  0FFC               	addlw	-4
 16016  0181A8  6ED9               	movwf	fsr2l,c
 16017  0181AA  50E2               	movf	fsr1h,w,c
 16018  0181AC  6EDA               	movwf	fsr2h,c
 16019  0181AE  0EFF               	movlw	255
 16020  0181B0  22DA               	addwfc	fsr2h,f,c
 16021  0181B2  006F FF7B FFF6     	movff	postinc2,tblptrl
 16022  0181B8  006F FF77 FFF7     	movff	postdec2,tblptrh
 16023  0181BE                     	if	0	;tblptru may be non-zero
 16024  0181BE                     	endif
 16025  0181BE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16026  0181BE  0E00               	movlw	low (__mediumconst shr (0+16))
 16027  0181C0  6EF8               	movwf	tblptru,c
 16028  0181C2                     	endif
 16029  0181C2  0008               	tblrd		*
 16030  0181C4  50F5               	movf	tablat,w,c
 16031  0181C6  0900               	iorlw	0
 16032  0181C8  B4D8               	btfsc	status,2,c
 16033  0181CA  D036               	goto	u8720
 16034                           
 16035                           ;stkvar	_n @ sp[(-4)+-6]
 16036  0181CC  0EF6               	movlw	-10
 16037  0181CE  006F FF8C  F001    	movff	plusw1,btemp
 16038  0181D4  0EF7               	movlw	-9
 16039  0181D6  50E3               	movf	plusw1,w,c
 16040  0181D8  1001               	iorwf	btemp^0,w,c
 16041  0181DA  B4D8               	btfsc	status,2,c
 16042  0181DC  D02D               	goto	u8720
 16043                           
 16044                           ;stkvar	_r @ sp[(-4)+0]
 16045  0181DE  50E1               	movf	fsr1l,w,c
 16046  0181E0  0FFC               	addlw	-4
 16047  0181E2  6ED9               	movwf	fsr2l,c
 16048  0181E4  50E2               	movf	fsr1h,w,c
 16049  0181E6  6EDA               	movwf	fsr2h,c
 16050  0181E8  0EFF               	movlw	255
 16051  0181EA  22DA               	addwfc	fsr2h,f,c
 16052  0181EC  006F FF7B FFF6     	movff	postinc2,tblptrl
 16053  0181F2  006F FF77 FFF7     	movff	postdec2,tblptrh
 16054  0181F8                     	if	0	;tblptru may be non-zero
 16055  0181F8                     	endif
 16056  0181F8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16057  0181F8  0E00               	movlw	low (__mediumconst shr (0+16))
 16058  0181FA  6EF8               	movwf	tblptru,c
 16059  0181FC                     	endif
 16060  0181FC  0008               	tblrd		*
 16061  0181FE  006F FFD4  F00C    	movff	tablat,btemp+11
 16062                           
 16063                           ;stkvar	_l @ sp[(-4)+2]
 16064  018204  0EFE               	movlw	-2
 16065  018206  006F FF8F FFF6     	movff	plusw1,tblptrl
 16066  01820C  0EFF               	movlw	-1
 16067  01820E  006F FF8F FFF7     	movff	plusw1,tblptrh
 16068  018214  0E00               	movlw	low (__mediumconst shr (0+16))
 16069  018216  6EF8               	movwf	tblptru,c
 16070  018218  0E1F               	movlw	(high __ramtop+-1)
 16071  01821A  64F7               	cpfsgt	tblptrh,c
 16072  01821C  D003               	bra	u8727
 16073  01821E  0008               	tblrd		*
 16074  018220  50F5               	movf	tablat,w,c
 16075  018222  D007               	bra	u8725
 16076  018224                     u8727:
 16077  018224  006F FFDB FFE9     	movff	tblptrl,fsr0l
 16078  01822A  006F FFDF FFEA     	movff	tblptrh,fsr0h
 16079  018230  50EF               	movf	indf0,w,c
 16080  018232                     u8725:
 16081  018232  180C               	xorwf	(btemp+11)^0,w,c
 16082  018234  B4D8               	btfsc	status,2,c
 16083  018236  D766               	goto	l9537
 16084  018238                     u8720:
 16085                           
 16086                           ;stkvar	_l @ sp[(-4)+2]
 16087  018238  0EFE               	movlw	-2
 16088  01823A  006F FF8F FFF6     	movff	plusw1,tblptrl
 16089  018240  0EFF               	movlw	-1
 16090  018242  006F FF8F FFF7     	movff	plusw1,tblptrh
 16091  018248  0E00               	movlw	low (__mediumconst shr (0+16))
 16092  01824A  6EF8               	movwf	tblptru,c
 16093  01824C  0E1F               	movlw	(high __ramtop+-1)
 16094  01824E  64F7               	cpfsgt	tblptrh,c
 16095  018250  D003               	bra	u8737
 16096  018252  0008               	tblrd		*
 16097  018254  50F5               	movf	tablat,w,c
 16098  018256  D007               	bra	u8730
 16099  018258                     u8737:
 16100  018258  006F FFDB FFE9     	movff	tblptrl,fsr0l
 16101  01825E  006F FFDF FFEA     	movff	tblptrh,fsr0h
 16102  018264  50EF               	movf	indf0,w,c
 16103  018266                     u8730:
 16104  018266  6E01               	movwf	btemp^0,c
 16105  018268  6A02               	clrf	(btemp+1)^0,c
 16106                           
 16107                           ;stkvar	_r @ sp[(-4)+0]
 16108  01826A  50E1               	movf	fsr1l,w,c
 16109  01826C  0FFC               	addlw	-4
 16110  01826E  6ED9               	movwf	fsr2l,c
 16111  018270  50E2               	movf	fsr1h,w,c
 16112  018272  6EDA               	movwf	fsr2h,c
 16113  018274  0EFF               	movlw	255
 16114  018276  22DA               	addwfc	fsr2h,f,c
 16115  018278  006F FF7B FFF6     	movff	postinc2,tblptrl
 16116  01827E  006F FF77 FFF7     	movff	postdec2,tblptrh
 16117  018284                     	if	0	;tblptru may be non-zero
 16118  018284                     	endif
 16119  018284                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16120  018284  0E00               	movlw	low (__mediumconst shr (0+16))
 16121  018286  6EF8               	movwf	tblptru,c
 16122  018288                     	endif
 16123  018288  0008               	tblrd		*
 16124  01828A  50F5               	movf	tablat,w,c
 16125  01828C  5E01               	subwf	btemp^0,f,c
 16126  01828E  0E00               	movlw	0
 16127  018290  5A02               	subwfb	(btemp+1)^0,f,c
 16128  018292                     l3526:
 16129                           
 16130                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 16131  018292  0EF6               	movlw	246
 16132  018294  26E1               	addwf	fsr1l,f,c
 16133  018296  0EFF               	movlw	255
 16134  018298  22E2               	addwfc	fsr1h,f,c
 16135  01829A  0012               	return		;funcret
 16136  01829C                     __end_of_strncmp:
 16137                           	opt callstack 0
 16138                           
 16139 ;; *************** function _stoa *****************
 16140 ;; Defined at:
 16141 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 16142 ;; Parameters:    Size  Location     Type
 16143 ;;  fp              2  [STACK] PTR struct _IO_FILE
 16144 ;;		 -> f(6), NULL(0), 
 16145 ;;  s               2  [STACK] PTR unsigned char 
 16146 ;;		 -> ?_printf(2), ?_sprintf(2), STR_46(9), STR_45(12), 
 16147 ;;		 -> D.lcd(480), D(482), T(144), STR_3(5), 
 16148 ;;		 -> V(191), 
 16149 ;; Auto vars:     Size  Location     Type
 16150 ;;  nuls            7  [STACK] unsigned char [7]
 16151 ;;  l               2  [STACK] int 
 16152 ;;  p               2  [STACK] int 
 16153 ;;  cp              2  [STACK] PTR unsigned char 
 16154 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_46(9), 
 16155 ;;		 -> STR_45(12), D.lcd(480), D(482), T(144), 
 16156 ;;		 -> STR_3(5), V(191), 
 16157 ;;  w               2  [STACK] int 
 16158 ;;  i               2  [STACK] int 
 16159 ;; Return value:  Size  Location     Type
 16160 ;;                  2  [STACK] int 
 16161 ;; Registers used:
 16162 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 16163 ;; Tracked objects:
 16164 ;;		On entry : 0/0
 16165 ;;		On exit  : 0/0
 16166 ;;		Unchanged: 0/0
 16167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16172 ;;Total ram usage:        0 bytes
 16173 ;; Hardware stack levels used:    1
 16174 ;; Hardware stack levels required when called:   18
 16175 ;; This function calls:
 16176 ;;		_fputc
 16177 ;;		_strlen
 16178 ;; This function is called by:
 16179 ;;		_vfpfcnvrt
 16180 ;; This function uses a reentrant model
 16181 ;;
 16182                           
 16183                           	psect	text61
 16184  017444                     __ptext61:
 16185                           	opt callstack 0
 16186  017444                     _stoa:
 16187                           	opt callstack 0
 16188                           
 16189                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 16190  017444  0E11               	movlw	17
 16191  017446  26E1               	addwf	fsr1l,f,c
 16192  017448  0E00               	movlw	0
 16193  01744A  22E2               	addwfc	fsr1h,f,c
 16194                           
 16195                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 16196                           
 16197                           ;incstack = 0
 16198 ;; hardware stack exceeded
 16199  01744C  EE20  F100         	lfsr	2,stoa@F1166
 16200                           
 16201                           ;stkvar	_nuls @ sp[(-17)+0]
 16202  017450  0E07               	movlw	7
 16203  017452  6E01               	movwf	btemp^0,c
 16204  017454  0EEF               	movlw	-17
 16205  017456                     us1175999:
 16206  017456  006F FF7B FFE3     	movff	postinc2,plusw1
 16207  01745C  28E8               	incf	wreg,w,c
 16208  01745E  2E01               	decfsz	btemp^0,f,c
 16209  017460  D7FA               	bra	us1175999
 16210                           
 16211                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 16212                           ;stkvar	_s @ sp[(-17)+-4]
 16213  017462  0EEB               	movlw	-21
 16214  017464  006F FF8C  F00B    	movff	plusw1,btemp+10
 16215  01746A  0EEC               	movlw	-20
 16216  01746C  006F FF8C  F00C    	movff	plusw1,btemp+11
 16217                           
 16218                           ;stkvar	_cp @ sp[(-17)+11]
 16219  017472  0EFB               	movlw	-5
 16220  017474  0060  F033  FFE3   	movff	btemp+11,plusw1
 16221  01747A  0EFA               	movlw	-6
 16222  01747C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16223                           
 16224                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 16225                           ;stkvar	_cp @ sp[(-17)+11]
 16226  017482  0EFA               	movlw	-6
 16227  017484  006F FF8C  F001    	movff	plusw1,btemp
 16228  01748A  0EFB               	movlw	-5
 16229  01748C  50E3               	movf	plusw1,w,c
 16230  01748E  1001               	iorwf	btemp^0,w,c
 16231  017490  A4D8               	btfss	status,2,c
 16232  017492  D00E               	goto	l12567
 16233                           
 16234                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 16235                           ;stkvar	_nuls @ sp[(-17)+0]
 16236  017494  0EEF               	movlw	239
 16237  017496  24E1               	addwf	fsr1l,w,c
 16238  017498  6E0B               	movwf	(btemp+10)^0,c
 16239  01749A  0EFF               	movlw	255
 16240  01749C  20E2               	addwfc	fsr1h,w,c
 16241  01749E  6E0C               	movwf	(btemp+11)^0,c
 16242                           
 16243                           ;stkvar	_cp @ sp[(-17)+11]
 16244  0174A0  0EFB               	movlw	-5
 16245  0174A2  0060  F033  FFE3   	movff	btemp+11,plusw1
 16246  0174A8  0EFA               	movlw	-6
 16247  0174AA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16248  0174B0                     l12567:
 16249                           
 16250                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 16251                           ;stkvar	_cp @ sp[(-17)+11]
 16252  0174B0  0EFA               	movlw	-6
 16253  0174B2  006F FF8F FFE6     	movff	plusw1,postinc1
 16254  0174B8  006F FF8F FFE6     	movff	plusw1,postinc1
 16255  0174BE  EC24  F0D6         	call	_strlen	;wreg free
 16256                           
 16257                           ;stkvar	_l @ sp[(-17)+7]
 16258  0174C2  0EF6               	movlw	-10
 16259  0174C4  0060  F007  FFE3   	movff	btemp,plusw1
 16260  0174CA  0EF7               	movlw	-9
 16261  0174CC  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16262                           
 16263                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 16264                           ;stkvar	_p @ sp[(-17)+9]
 16265  0174D2  0EF8               	movlw	-8
 16266  0174D4  0060  F0F3  FFE3   	movff	_prec,plusw1
 16267  0174DA  0EF9               	movlw	-7
 16268  0174DC  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 16269                           
 16270                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 16271                           ;stkvar	_p @ sp[(-17)+9]
 16272  0174E2  0EF9               	movlw	-7
 16273  0174E4  BEE3               	btfsc	plusw1,7,c
 16274  0174E6  D023               	goto	l2351
 16275                           
 16276                           ;stkvar	_l @ sp[(-17)+7]
 16277                           ;stkvar	_p @ sp[(-17)+9]
 16278  0174E8  50E1               	movf	fsr1l,w,c
 16279  0174EA  0FF8               	addlw	-8
 16280  0174EC  6ED9               	movwf	fsr2l,c
 16281  0174EE  50E2               	movf	fsr1h,w,c
 16282  0174F0  6EDA               	movwf	fsr2h,c
 16283  0174F2  0EFF               	movlw	255
 16284  0174F4  22DA               	addwfc	fsr2h,f,c
 16285  0174F6  0EF6               	movlw	-10
 16286  0174F8  50E3               	movf	plusw1,w,c
 16287  0174FA  5CDE               	subwf	postinc2,w,c
 16288  0174FC  50DE               	movf	postinc2,w,c
 16289  0174FE  0A80               	xorlw	128
 16290  017500  6E01               	movwf	btemp^0,c
 16291  017502  0EF7               	movlw	-9
 16292  017504  50E3               	movf	plusw1,w,c
 16293  017506  0A80               	xorlw	128
 16294  017508  5801               	subwfb	btemp^0,w,c
 16295  01750A  B0D8               	btfsc	status,0,c
 16296  01750C  D010               	goto	l2351
 16297                           
 16298                           ;stkvar	_p @ sp[(-17)+9]
 16299                           ;stkvar	_l @ sp[(-17)+7]
 16300  01750E  0EF8               	movlw	-8
 16301  017510  006F FF8C  F001    	movff	plusw1,btemp
 16302  017516  0EF6               	movlw	-10
 16303  017518  0060  F007  FFE3   	movff	btemp,plusw1
 16304  01751E  0EF9               	movlw	-7
 16305  017520  006F FF8C  F001    	movff	plusw1,btemp
 16306  017526  0EF7               	movlw	-9
 16307  017528  0060  F007  FFE3   	movff	btemp,plusw1
 16308  01752E                     l2351:
 16309                           
 16310                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 16311                           ;stkvar	_l @ sp[(-17)+7]
 16312                           ;stkvar	_p @ sp[(-17)+9]
 16313  01752E  0EF6               	movlw	-10
 16314  017530  006F FF8C  F001    	movff	plusw1,btemp
 16315  017536  0EF8               	movlw	-8
 16316  017538  0060  F007  FFE3   	movff	btemp,plusw1
 16317  01753E  0EF7               	movlw	-9
 16318  017540  006F FF8C  F001    	movff	plusw1,btemp
 16319  017546  0EF9               	movlw	-7
 16320  017548  0060  F007  FFE3   	movff	btemp,plusw1
 16321                           
 16322                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 16323                           ;stkvar	_w @ sp[(-17)+13]
 16324  01754E  0EFC               	movlw	-4
 16325  017550  0060  F0EB  FFE3   	movff	_width,plusw1
 16326  017556  0EFD               	movlw	-3
 16327  017558  0060  F0EF  FFE3   	movff	_width+1,plusw1
 16328                           
 16329                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 16330  01755E  A03E               	btfss	_flags^0,0,c
 16331  017560  D01F               	goto	l12587
 16332  017562  D031               	goto	u11800
 16333  017564                     l12583:
 16334                           
 16335                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 16336                           ;stkvar	_fp @ sp[(-17)+-2]
 16337  017564  0EED               	movlw	-19
 16338  017566  006F FF8F FFE6     	movff	plusw1,postinc1
 16339  01756C  006F FF8F FFE6     	movff	plusw1,postinc1
 16340  017572  0E20               	movlw	32
 16341  017574  6EE6               	movwf	postinc1,c
 16342  017576  0E00               	movlw	0
 16343  017578  6EE6               	movwf	postinc1,c
 16344  01757A  ECD8  F0CC         	call	_fputc	;wreg free
 16345                           
 16346                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 16347                           ;stkvar	_l @ sp[(-17)+7]
 16348  01757E  0EF6               	movlw	-10
 16349  017580  50E3               	movf	plusw1,w,c
 16350  017582  0F01               	addlw	1
 16351  017584  6E01               	movwf	btemp^0,c
 16352  017586  0EF6               	movlw	-10
 16353  017588  0060  F007  FFE3   	movff	btemp,plusw1
 16354  01758E  6A01               	clrf	btemp^0,c
 16355  017590  0EF7               	movlw	-9
 16356  017592  50E3               	movf	plusw1,w,c
 16357  017594  2001               	addwfc	btemp^0,w,c
 16358  017596  6E01               	movwf	btemp^0,c
 16359  017598  0EF7               	movlw	-9
 16360  01759A  0060  F007  FFE3   	movff	btemp,plusw1
 16361  0175A0                     l12587:
 16362                           
 16363                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 16364                           ;stkvar	_w @ sp[(-17)+13]
 16365                           ;stkvar	_l @ sp[(-17)+7]
 16366  0175A0  50E1               	movf	fsr1l,w,c
 16367  0175A2  0FF6               	addlw	-10
 16368  0175A4  6ED9               	movwf	fsr2l,c
 16369  0175A6  50E2               	movf	fsr1h,w,c
 16370  0175A8  6EDA               	movwf	fsr2h,c
 16371  0175AA  0EFF               	movlw	255
 16372  0175AC  22DA               	addwfc	fsr2h,f,c
 16373  0175AE  0EFC               	movlw	-4
 16374  0175B0  50E3               	movf	plusw1,w,c
 16375  0175B2  5CDE               	subwf	postinc2,w,c
 16376  0175B4  50DE               	movf	postinc2,w,c
 16377  0175B6  0A80               	xorlw	128
 16378  0175B8  6E01               	movwf	btemp^0,c
 16379  0175BA  0EFD               	movlw	-3
 16380  0175BC  50E3               	movf	plusw1,w,c
 16381  0175BE  0A80               	xorlw	128
 16382  0175C0  5801               	subwfb	btemp^0,w,c
 16383  0175C2  A0D8               	btfss	status,0,c
 16384  0175C4  D7CF               	goto	l12583
 16385  0175C6                     u11800:
 16386                           
 16387                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 16388                           ;stkvar	_i @ sp[(-17)+15]
 16389  0175C6  0EFE               	movlw	-2
 16390  0175C8  6AE3               	clrf	plusw1,c
 16391  0175CA  0EFF               	movlw	-1
 16392  0175CC  6AE3               	clrf	plusw1,c
 16393                           
 16394                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 16395  0175CE  D045               	goto	l12597
 16396  0175D0                     l12591:
 16397                           
 16398                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 16399                           ;stkvar	_fp @ sp[(-17)+-2]
 16400  0175D0  0EED               	movlw	-19
 16401  0175D2  006F FF8F FFE6     	movff	plusw1,postinc1
 16402  0175D8  006F FF8F FFE6     	movff	plusw1,postinc1
 16403                           
 16404                           ;stkvar	_cp @ sp[(-19)+11]
 16405  0175DE  0EF8               	movlw	-8
 16406  0175E0  006F FF8F FFF6     	movff	plusw1,tblptrl
 16407  0175E6  0EF9               	movlw	-7
 16408  0175E8  006F FF8F FFF7     	movff	plusw1,tblptrh
 16409  0175EE  0E00               	movlw	low (__mediumconst shr (0+16))
 16410  0175F0  6EF8               	movwf	tblptru,c
 16411  0175F2  0E1F               	movlw	(high __ramtop+-1)
 16412  0175F4  64F7               	cpfsgt	tblptrh,c
 16413  0175F6  D003               	bra	u11817
 16414  0175F8  0008               	tblrd		*
 16415  0175FA  50F5               	movf	tablat,w,c
 16416  0175FC  D007               	bra	u11810
 16417  0175FE                     u11817:
 16418  0175FE  006F FFDB FFE9     	movff	tblptrl,fsr0l
 16419  017604  006F FFDF FFEA     	movff	tblptrh,fsr0h
 16420  01760A  50EF               	movf	indf0,w,c
 16421  01760C                     u11810:
 16422  01760C  6EE6               	movwf	postinc1,c
 16423  01760E  0E00               	movlw	0
 16424  017610  6EE6               	movwf	postinc1,c
 16425  017612  ECD8  F0CC         	call	_fputc	;wreg free
 16426                           
 16427                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 16428                           ;stkvar	_cp @ sp[(-17)+11]
 16429  017616  0EFA               	movlw	-6
 16430  017618  50E3               	movf	plusw1,w,c
 16431  01761A  0F01               	addlw	1
 16432  01761C  6E01               	movwf	btemp^0,c
 16433  01761E  0EFA               	movlw	-6
 16434  017620  0060  F007  FFE3   	movff	btemp,plusw1
 16435  017626  6A01               	clrf	btemp^0,c
 16436  017628  0EFB               	movlw	-5
 16437  01762A  50E3               	movf	plusw1,w,c
 16438  01762C  2001               	addwfc	btemp^0,w,c
 16439  01762E  6E01               	movwf	btemp^0,c
 16440  017630  0EFB               	movlw	-5
 16441  017632  0060  F007  FFE3   	movff	btemp,plusw1
 16442                           
 16443                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 16444                           ;stkvar	_i @ sp[(-17)+15]
 16445  017638  0EFE               	movlw	-2
 16446  01763A  50E3               	movf	plusw1,w,c
 16447  01763C  0F01               	addlw	1
 16448  01763E  6E01               	movwf	btemp^0,c
 16449  017640  0EFE               	movlw	-2
 16450  017642  0060  F007  FFE3   	movff	btemp,plusw1
 16451  017648  6A01               	clrf	btemp^0,c
 16452  01764A  0EFF               	movlw	-1
 16453  01764C  50E3               	movf	plusw1,w,c
 16454  01764E  2001               	addwfc	btemp^0,w,c
 16455  017650  6E01               	movwf	btemp^0,c
 16456  017652  0EFF               	movlw	-1
 16457  017654  0060  F007  FFE3   	movff	btemp,plusw1
 16458  01765A                     l12597:
 16459                           
 16460                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 16461                           ;stkvar	_p @ sp[(-17)+9]
 16462                           ;stkvar	_i @ sp[(-17)+15]
 16463  01765A  50E1               	movf	fsr1l,w,c
 16464  01765C  0FFE               	addlw	-2
 16465  01765E  6ED9               	movwf	fsr2l,c
 16466  017660  50E2               	movf	fsr1h,w,c
 16467  017662  6EDA               	movwf	fsr2h,c
 16468  017664  0EFF               	movlw	255
 16469  017666  22DA               	addwfc	fsr2h,f,c
 16470  017668  0EF8               	movlw	-8
 16471  01766A  50E3               	movf	plusw1,w,c
 16472  01766C  5CDE               	subwf	postinc2,w,c
 16473  01766E  50DE               	movf	postinc2,w,c
 16474  017670  0A80               	xorlw	128
 16475  017672  6E01               	movwf	btemp^0,c
 16476  017674  0EF9               	movlw	-7
 16477  017676  50E3               	movf	plusw1,w,c
 16478  017678  0A80               	xorlw	128
 16479  01767A  5801               	subwfb	btemp^0,w,c
 16480  01767C  A0D8               	btfss	status,0,c
 16481  01767E  D7A8               	goto	l12591
 16482                           
 16483                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 16484  017680  B03E               	btfsc	_flags^0,0,c
 16485  017682  D01F               	goto	l12605
 16486  017684  D031               	goto	u11840
 16487  017686                     l12601:
 16488                           
 16489                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 16490                           ;stkvar	_fp @ sp[(-17)+-2]
 16491  017686  0EED               	movlw	-19
 16492  017688  006F FF8F FFE6     	movff	plusw1,postinc1
 16493  01768E  006F FF8F FFE6     	movff	plusw1,postinc1
 16494  017694  0E20               	movlw	32
 16495  017696  6EE6               	movwf	postinc1,c
 16496  017698  0E00               	movlw	0
 16497  01769A  6EE6               	movwf	postinc1,c
 16498  01769C  ECD8  F0CC         	call	_fputc	;wreg free
 16499                           
 16500                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 16501                           ;stkvar	_l @ sp[(-17)+7]
 16502  0176A0  0EF6               	movlw	-10
 16503  0176A2  50E3               	movf	plusw1,w,c
 16504  0176A4  0F01               	addlw	1
 16505  0176A6  6E01               	movwf	btemp^0,c
 16506  0176A8  0EF6               	movlw	-10
 16507  0176AA  0060  F007  FFE3   	movff	btemp,plusw1
 16508  0176B0  6A01               	clrf	btemp^0,c
 16509  0176B2  0EF7               	movlw	-9
 16510  0176B4  50E3               	movf	plusw1,w,c
 16511  0176B6  2001               	addwfc	btemp^0,w,c
 16512  0176B8  6E01               	movwf	btemp^0,c
 16513  0176BA  0EF7               	movlw	-9
 16514  0176BC  0060  F007  FFE3   	movff	btemp,plusw1
 16515  0176C2                     l12605:
 16516                           
 16517                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 16518                           ;stkvar	_w @ sp[(-17)+13]
 16519                           ;stkvar	_l @ sp[(-17)+7]
 16520  0176C2  50E1               	movf	fsr1l,w,c
 16521  0176C4  0FF6               	addlw	-10
 16522  0176C6  6ED9               	movwf	fsr2l,c
 16523  0176C8  50E2               	movf	fsr1h,w,c
 16524  0176CA  6EDA               	movwf	fsr2h,c
 16525  0176CC  0EFF               	movlw	255
 16526  0176CE  22DA               	addwfc	fsr2h,f,c
 16527  0176D0  0EFC               	movlw	-4
 16528  0176D2  50E3               	movf	plusw1,w,c
 16529  0176D4  5CDE               	subwf	postinc2,w,c
 16530  0176D6  50DE               	movf	postinc2,w,c
 16531  0176D8  0A80               	xorlw	128
 16532  0176DA  6E01               	movwf	btemp^0,c
 16533  0176DC  0EFD               	movlw	-3
 16534  0176DE  50E3               	movf	plusw1,w,c
 16535  0176E0  0A80               	xorlw	128
 16536  0176E2  5801               	subwfb	btemp^0,w,c
 16537  0176E4  A0D8               	btfss	status,0,c
 16538  0176E6  D7CF               	goto	l12601
 16539  0176E8                     u11840:
 16540                           
 16541                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 16542                           ;stkvar	_l @ sp[(-17)+7]
 16543  0176E8  0EF6               	movlw	-10
 16544  0176EA  006F FF8C  F001    	movff	plusw1,btemp
 16545  0176F0  0EF7               	movlw	-9
 16546  0176F2  006F FF8C  F002    	movff	plusw1,btemp+1
 16547                           
 16548                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 16549  0176F8  0EEB               	movlw	235
 16550  0176FA  26E1               	addwf	fsr1l,f,c
 16551  0176FC  0EFF               	movlw	255
 16552  0176FE  22E2               	addwfc	fsr1h,f,c
 16553  017700  0012               	return		;funcret
 16554  017702                     __end_of_stoa:
 16555                           	opt callstack 0
 16556                           
 16557 ;; *************** function _efgtoa *****************
 16558 ;; Defined at:
 16559 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 16560 ;; Parameters:    Size  Location     Type
 16561 ;;  fp              2  [STACK] PTR struct _IO_FILE
 16562 ;;		 -> f(6), NULL(0), 
 16563 ;;  f               4  [STACK] PTR struct _IO_FILE
 16564 ;;  c               1  [STACK] unsigned char 
 16565 ;; Auto vars:     Size  Location     Type
 16566 ;;  u               4  [STACK] unsigned char 
 16567 ;;  g               4  [STACK] unsigned char 
 16568 ;;  l               4  [STACK] unsigned char 
 16569 ;;  h               4  [STACK] unsigned char 
 16570 ;;  ou              4  [STACK] unsigned char 
 16571 ;;  n               2  [STACK] int 
 16572 ;;  e               2  [STACK] int 
 16573 ;;  i               2  [STACK] int 
 16574 ;;  w               2  [STACK] int 
 16575 ;;  p               2  [STACK] int 
 16576 ;;  sign            2  [STACK] int 
 16577 ;;  d               2  [STACK] int 
 16578 ;;  ne              2  [STACK] int 
 16579 ;;  m               2  [STACK] int 
 16580 ;;  pp              2  [STACK] int 
 16581 ;;  t               2  [STACK] int 
 16582 ;;  mode            1  [STACK] unsigned char 
 16583 ;;  nmode           1  [STACK] unsigned char 
 16584 ;; Return value:  Size  Location     Type
 16585 ;;                  2  [STACK] int 
 16586 ;; Registers used:
 16587 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 16588 ;; Tracked objects:
 16589 ;;		On entry : 0/0
 16590 ;;		On exit  : 0/0
 16591 ;;		Unchanged: 0/0
 16592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16597 ;;Total ram usage:        0 bytes
 16598 ;; Hardware stack levels used:    1
 16599 ;; Hardware stack levels required when called:   20
 16600 ;; This function calls:
 16601 ;;		___awdiv
 16602 ;;		___awmod
 16603 ;;		___fladd
 16604 ;;		___fldiv
 16605 ;;		___fleq
 16606 ;;		___flge
 16607 ;;		___flmul
 16608 ;;		___flneg
 16609 ;;		___flsub
 16610 ;;		___fltol
 16611 ;;		___fpclassifyf
 16612 ;;		_floorf
 16613 ;;		_isupper
 16614 ;;		_pad
 16615 ;;		_strcpy
 16616 ;;		_tolower
 16617 ;; This function is called by:
 16618 ;;		_vfpfcnvrt
 16619 ;; This function uses a reentrant model
 16620 ;;
 16621                           
 16622                           	psect	text62
 16623  010000                     __ptext62:
 16624                           	opt callstack 0
 16625  010000                     _efgtoa:
 16626                           	opt callstack 0
 16627                           
 16628                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 16629  010000  0E38               	movlw	56
 16630  010002  26E1               	addwf	fsr1l,f,c
 16631  010004  0E00               	movlw	0
 16632  010006  22E2               	addwfc	fsr1h,f,c
 16633                           
 16634                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 16635                           ;stkvar	_sign @ sp[(-56)+42]
 16636                           
 16637                           ;incstack = 0
 16638 ;; hardware stack exceeded
 16639  010008  0EF2               	movlw	-14
 16640  01000A  6AE3               	clrf	plusw1,c
 16641  01000C  0EF3               	movlw	-13
 16642  01000E  6AE3               	clrf	plusw1,c
 16643                           
 16644                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 16645                           ;stkvar	_f @ sp[(-56)+-6]
 16646  010010  0EC2               	movlw	-62
 16647  010012  006F FF8C  F009    	movff	plusw1,btemp+8
 16648  010018  0EC3               	movlw	-61
 16649  01001A  006F FF8C  F00A    	movff	plusw1,btemp+9
 16650  010020  0EC4               	movlw	-60
 16651  010022  006F FF8C  F00B    	movff	plusw1,btemp+10
 16652  010028  0EC5               	movlw	-59
 16653  01002A  006F FF8C  F00C    	movff	plusw1,btemp+11
 16654                           
 16655                           ;stkvar	_g @ sp[(-56)+16]
 16656  010030  0ED8               	movlw	-40
 16657  010032  0060  F027  FFE3   	movff	btemp+8,plusw1
 16658  010038  0ED9               	movlw	-39
 16659  01003A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16660  010040  0EDA               	movlw	-38
 16661  010042  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16662  010048  0EDB               	movlw	-37
 16663  01004A  0060  F033  FFE3   	movff	btemp+11,plusw1
 16664                           
 16665                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 16666                           ;stkvar	_g @ sp[(-56)+16]
 16667  010050  0EDB               	movlw	-37
 16668  010052  AEE3               	btfss	plusw1,7,c
 16669  010054  D02B               	goto	l12265
 16670                           
 16671                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 16672  010056  0E01               	movlw	1
 16673  010058  6E0B               	movwf	(btemp+10)^0,c
 16674  01005A  0E00               	movlw	0
 16675  01005C  6E0C               	movwf	(btemp+11)^0,c
 16676                           
 16677                           ;stkvar	_sign @ sp[(-56)+42]
 16678  01005E  0EF2               	movlw	-14
 16679  010060  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16680  010066  0EF3               	movlw	-13
 16681  010068  0060  F033  FFE3   	movff	btemp+11,plusw1
 16682                           
 16683                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 16684                           ;stkvar	_g @ sp[(-56)+16]
 16685  01006E  0ED8               	movlw	-40
 16686  010070  006F FF8F FFE6     	movff	plusw1,postinc1
 16687  010076  006F FF8F FFE6     	movff	plusw1,postinc1
 16688  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
 16689  010082  006F FF8F FFE6     	movff	plusw1,postinc1
 16690  010088  ECEA  F0DB         	call	___flneg	;wreg free
 16691                           
 16692                           ;stkvar	_g @ sp[(-56)+16]
 16693  01008C  0ED8               	movlw	-40
 16694  01008E  0060  F007  FFE3   	movff	btemp,plusw1
 16695  010094  0ED9               	movlw	-39
 16696  010096  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16697  01009C  0EDA               	movlw	-38
 16698  01009E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16699  0100A4  0EDB               	movlw	-37
 16700  0100A6  0060  F013  FFE3   	movff	btemp+3,plusw1
 16701  0100AC                     l12265:
 16702                           
 16703                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 16704                           ;stkvar	_n @ sp[(-56)+32]
 16705  0100AC  0EE8               	movlw	-24
 16706  0100AE  6AE3               	clrf	plusw1,c
 16707  0100B0  0EE9               	movlw	-23
 16708  0100B2  6AE3               	clrf	plusw1,c
 16709                           
 16710                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 16711                           ;stkvar	_w @ sp[(-56)+38]
 16712  0100B4  0EEE               	movlw	-18
 16713  0100B6  0060  F0EB  FFE3   	movff	_width,plusw1
 16714  0100BC  0EEF               	movlw	-17
 16715  0100BE  0060  F0EF  FFE3   	movff	_width+1,plusw1
 16716                           
 16717                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 16718                           ;stkvar	_sign @ sp[(-56)+42]
 16719  0100C4  0EF2               	movlw	-14
 16720  0100C6  006F FF8C  F001    	movff	plusw1,btemp
 16721  0100CC  0EF3               	movlw	-13
 16722  0100CE  50E3               	movf	plusw1,w,c
 16723  0100D0  1001               	iorwf	btemp^0,w,c
 16724  0100D2  A4D8               	btfss	status,2,c
 16725  0100D4  D002               	goto	u11250
 16726  0100D6  A43E               	btfss	_flags^0,2,c
 16727  0100D8  D036               	goto	l12285
 16728  0100DA                     u11250:
 16729                           
 16730                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 16731                           ;stkvar	_sign @ sp[(-56)+42]
 16732  0100DA  0EF2               	movlw	-14
 16733  0100DC  006F FF8C  F001    	movff	plusw1,btemp
 16734  0100E2  0EF3               	movlw	-13
 16735  0100E4  50E3               	movf	plusw1,w,c
 16736  0100E6  1001               	iorwf	btemp^0,w,c
 16737  0100E8  A4D8               	btfss	status,2,c
 16738  0100EA  D002               	goto	l12277
 16739  0100EC  0E2B               	movlw	43
 16740  0100EE  D001               	goto	L17
 16741  0100F0                     l12277:
 16742  0100F0  0E2D               	movlw	45
 16743  0100F2                     L17:
 16744  0100F2  6E0B               	movwf	(btemp+10)^0,c
 16745  0100F4  0E00               	movlw	0
 16746  0100F6  6E0C               	movwf	(btemp+11)^0,c
 16747                           
 16748                           ;stkvar	_efgtoa$5658 @ sp[(-56)+10]
 16749  0100F8  0ED2               	movlw	-46
 16750  0100FA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16751  010100  0ED3               	movlw	-45
 16752  010102  0060  F033  FFE3   	movff	btemp+11,plusw1
 16753                           
 16754                           ;stkvar	_efgtoa$5658 @ sp[(-56)+10]
 16755  010108  0ED2               	movlw	-46
 16756  01010A  006F FF8C  F297    	movff	plusw1,_dbuf
 16757                           
 16758                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 16759                           ;stkvar	_n @ sp[(-56)+32]
 16760  010110  0EE8               	movlw	-24
 16761  010112  50E3               	movf	plusw1,w,c
 16762  010114  0F01               	addlw	1
 16763  010116  6E01               	movwf	btemp^0,c
 16764  010118  0EE8               	movlw	-24
 16765  01011A  0060  F007  FFE3   	movff	btemp,plusw1
 16766  010120  6A01               	clrf	btemp^0,c
 16767  010122  0EE9               	movlw	-23
 16768  010124  50E3               	movf	plusw1,w,c
 16769  010126  2001               	addwfc	btemp^0,w,c
 16770  010128  6E01               	movwf	btemp^0,c
 16771  01012A  0EE9               	movlw	-23
 16772  01012C  0060  F007  FFE3   	movff	btemp,plusw1
 16773                           
 16774                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 16775                           ;stkvar	_w @ sp[(-56)+38]
 16776  010132  50E1               	movf	fsr1l,w,c
 16777  010134  0FEE               	addlw	-18
 16778  010136  6ED9               	movwf	fsr2l,c
 16779  010138  50E2               	movf	fsr1h,w,c
 16780  01013A  6EDA               	movwf	fsr2h,c
 16781  01013C  0EFF               	movlw	255
 16782  01013E  22DA               	addwfc	fsr2h,f,c
 16783  010140  06DE               	decf	postinc2,f,c
 16784  010142  0E00               	movlw	0
 16785  010144  5ADD               	subwfb	postdec2,f,c
 16786  010146                     l12285:
 16787                           
 16788                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 16789                           ;stkvar	_g @ sp[(-56)+16]
 16790  010146  0ED8               	movlw	-40
 16791  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 16792  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 16793  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 16794  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 16795  010160  ECF5  F0C5         	call	___fpclassifyf	;wreg free
 16796  010164  0401               	decf	btemp^0,w,c
 16797  010166  1002               	iorwf	(btemp+1)^0,w,c
 16798  010168  A4D8               	btfss	status,2,c
 16799  01016A  D076               	goto	l12303
 16800  01016C  0EBF               	movlw	191
 16801  01016E  6E0B               	movwf	(btemp+10)^0,c
 16802  010170  0EFF               	movlw	255
 16803  010172  6E0C               	movwf	(btemp+11)^0,c
 16804                           
 16805                           ;stkvar	_c @ sp[(-56)+-7]
 16806  010174  0EC1               	movlw	-63
 16807  010176  50E3               	movf	plusw1,w,c
 16808  010178  6E09               	movwf	(btemp+8)^0,c
 16809  01017A  6A0A               	clrf	(btemp+9)^0,c
 16810  01017C  500B               	movf	(btemp+10)^0,w,c
 16811  01017E  2609               	addwf	(btemp+8)^0,f,c
 16812  010180  500C               	movf	(btemp+11)^0,w,c
 16813  010182  220A               	addwfc	(btemp+9)^0,f,c
 16814  010184  500A               	movf	(btemp+9)^0,w,c
 16815  010186  E106               	bnz	u11280
 16816  010188  0E1A               	movlw	26
 16817  01018A  5C09               	subwf	(btemp+8)^0,w,c
 16818  01018C  B0D8               	btfsc	status,0,c
 16819  01018E  D002               	goto	u11280
 16820  010190  0E01               	movlw	1
 16821  010192  D001               	goto	u11290
 16822  010194                     u11280:
 16823  010194  0E00               	movlw	0
 16824  010196                     u11290:
 16825  010196  6E0B               	movwf	(btemp+10)^0,c
 16826  010198  6A0C               	clrf	(btemp+11)^0,c
 16827                           
 16828                           ;stkvar	_efgtoa$5659 @ sp[(-56)+8]
 16829  01019A  0ED0               	movlw	-48
 16830  01019C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16831  0101A2  0ED1               	movlw	-47
 16832  0101A4  0060  F033  FFE3   	movff	btemp+11,plusw1
 16833                           
 16834                           ;stkvar	_efgtoa$5659 @ sp[(-56)+8]
 16835  0101AA  0ED0               	movlw	-48
 16836  0101AC  006F FF8C  F001    	movff	plusw1,btemp
 16837  0101B2  0ED1               	movlw	-47
 16838  0101B4  50E3               	movf	plusw1,w,c
 16839  0101B6  1001               	iorwf	btemp^0,w,c
 16840  0101B8  B4D8               	btfsc	status,2,c
 16841  0101BA  D017               	goto	l12295
 16842                           
 16843                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 16844  0101BC  0ED7               	movlw	low STR_65
 16845  0101BE  6EE6               	movwf	postinc1,c
 16846  0101C0  0EFF               	movlw	high STR_65
 16847  0101C2  6EE6               	movwf	postinc1,c
 16848                           
 16849                           ;stkvar	_n @ sp[(-58)+32]
 16850  0101C4  0E97               	movlw	low _dbuf
 16851  0101C6  6E0B               	movwf	(btemp+10)^0,c
 16852  0101C8  0E02               	movlw	high _dbuf
 16853  0101CA  6E0C               	movwf	(btemp+11)^0,c
 16854  0101CC  0EE6               	movlw	-26
 16855  0101CE  50E3               	movf	plusw1,w,c
 16856  0101D0  260B               	addwf	(btemp+10)^0,f,c
 16857  0101D2  0EE7               	movlw	-25
 16858  0101D4  50E3               	movf	plusw1,w,c
 16859  0101D6  220C               	addwfc	(btemp+11)^0,f,c
 16860  0101D8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16861  0101DE  0060  F033  FFE6   	movff	btemp+11,postinc1
 16862  0101E4  ECD5  F0D1         	call	_strcpy	;wreg free
 16863                           
 16864                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 16865  0101E8  D016               	goto	l12297
 16866  0101EA                     l12295:
 16867                           
 16868                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 16869  0101EA  0EDF               	movlw	low STR_66
 16870  0101EC  6EE6               	movwf	postinc1,c
 16871  0101EE  0EFF               	movlw	high STR_66
 16872  0101F0  6EE6               	movwf	postinc1,c
 16873                           
 16874                           ;stkvar	_n @ sp[(-58)+32]
 16875  0101F2  0E97               	movlw	low _dbuf
 16876  0101F4  6E0B               	movwf	(btemp+10)^0,c
 16877  0101F6  0E02               	movlw	high _dbuf
 16878  0101F8  6E0C               	movwf	(btemp+11)^0,c
 16879  0101FA  0EE6               	movlw	-26
 16880  0101FC  50E3               	movf	plusw1,w,c
 16881  0101FE  260B               	addwf	(btemp+10)^0,f,c
 16882  010200  0EE7               	movlw	-25
 16883  010202  50E3               	movf	plusw1,w,c
 16884  010204  220C               	addwfc	(btemp+11)^0,f,c
 16885  010206  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16886  01020C  0060  F033  FFE6   	movff	btemp+11,postinc1
 16887  010212  ECD5  F0D1         	call	_strcpy	;wreg free
 16888  010216                     l12297:
 16889                           
 16890                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 16891                           ;stkvar	_w @ sp[(-56)+38]
 16892  010216  50E1               	movf	fsr1l,w,c
 16893  010218  0FEE               	addlw	-18
 16894  01021A  6ED9               	movwf	fsr2l,c
 16895  01021C  50E2               	movf	fsr1h,w,c
 16896  01021E  6EDA               	movwf	fsr2h,c
 16897  010220  0EFF               	movlw	255
 16898  010222  22DA               	addwfc	fsr2h,f,c
 16899  010224  0EFD               	movlw	253
 16900  010226  26DE               	addwf	postinc2,f,c
 16901  010228  0EFF               	movlw	255
 16902  01022A  22DD               	addwfc	postdec2,f,c
 16903  01022C                     l12299:
 16904                           
 16905                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 16906                           ;stkvar	_w @ sp[(-56)+38]
 16907  01022C  0EEE               	movlw	-18
 16908  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 16909  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 16910  01023A  0E97               	movlw	low _dbuf
 16911  01023C  6EE6               	movwf	postinc1,c
 16912  01023E  0E02               	movlw	high _dbuf
 16913  010240  6EE6               	movwf	postinc1,c
 16914                           
 16915                           ;stkvar	_fp @ sp[(-60)+-2]
 16916  010242  0EC2               	movlw	-62
 16917  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 16918  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 16919  010250  ECF6  F0CD         	call	_pad	;wreg free
 16920  010254  EF1D  F089         	goto	l2269
 16921  010258                     l12303:
 16922                           
 16923                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 16924                           ;stkvar	_g @ sp[(-56)+16]
 16925  010258  0ED8               	movlw	-40
 16926  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 16927  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 16928  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 16929  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 16930  010272  ECF5  F0C5         	call	___fpclassifyf	;wreg free
 16931  010276  5001               	movf	btemp^0,w,c
 16932  010278  1002               	iorwf	(btemp+1)^0,w,c
 16933  01027A  A4D8               	btfss	status,2,c
 16934  01027C  D056               	goto	l12321
 16935  01027E  0EBF               	movlw	191
 16936  010280  6E0B               	movwf	(btemp+10)^0,c
 16937  010282  0EFF               	movlw	255
 16938  010284  6E0C               	movwf	(btemp+11)^0,c
 16939                           
 16940                           ;stkvar	_c @ sp[(-56)+-7]
 16941  010286  0EC1               	movlw	-63
 16942  010288  50E3               	movf	plusw1,w,c
 16943  01028A  6E09               	movwf	(btemp+8)^0,c
 16944  01028C  6A0A               	clrf	(btemp+9)^0,c
 16945  01028E  500B               	movf	(btemp+10)^0,w,c
 16946  010290  2609               	addwf	(btemp+8)^0,f,c
 16947  010292  500C               	movf	(btemp+11)^0,w,c
 16948  010294  220A               	addwfc	(btemp+9)^0,f,c
 16949  010296  500A               	movf	(btemp+9)^0,w,c
 16950  010298  E106               	bnz	u11320
 16951  01029A  0E1A               	movlw	26
 16952  01029C  5C09               	subwf	(btemp+8)^0,w,c
 16953  01029E  B0D8               	btfsc	status,0,c
 16954  0102A0  D002               	goto	u11320
 16955  0102A2  0E01               	movlw	1
 16956  0102A4  D001               	goto	u11330
 16957  0102A6                     u11320:
 16958  0102A6  0E00               	movlw	0
 16959  0102A8                     u11330:
 16960  0102A8  6E0B               	movwf	(btemp+10)^0,c
 16961  0102AA  6A0C               	clrf	(btemp+11)^0,c
 16962                           
 16963                           ;stkvar	_efgtoa$5663 @ sp[(-56)+6]
 16964  0102AC  0ECE               	movlw	-50
 16965  0102AE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16966  0102B4  0ECF               	movlw	-49
 16967  0102B6  0060  F033  FFE3   	movff	btemp+11,plusw1
 16968                           
 16969                           ;stkvar	_efgtoa$5663 @ sp[(-56)+6]
 16970  0102BC  0ECE               	movlw	-50
 16971  0102BE  006F FF8C  F001    	movff	plusw1,btemp
 16972  0102C4  0ECF               	movlw	-49
 16973  0102C6  50E3               	movf	plusw1,w,c
 16974  0102C8  1001               	iorwf	btemp^0,w,c
 16975  0102CA  B4D8               	btfsc	status,2,c
 16976  0102CC  D017               	goto	l12313
 16977                           
 16978                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 16979  0102CE  0EDB               	movlw	low STR_69
 16980  0102D0  6EE6               	movwf	postinc1,c
 16981  0102D2  0EFF               	movlw	high STR_69
 16982  0102D4  6EE6               	movwf	postinc1,c
 16983                           
 16984                           ;stkvar	_n @ sp[(-58)+32]
 16985  0102D6  0E97               	movlw	low _dbuf
 16986  0102D8  6E0B               	movwf	(btemp+10)^0,c
 16987  0102DA  0E02               	movlw	high _dbuf
 16988  0102DC  6E0C               	movwf	(btemp+11)^0,c
 16989  0102DE  0EE6               	movlw	-26
 16990  0102E0  50E3               	movf	plusw1,w,c
 16991  0102E2  260B               	addwf	(btemp+10)^0,f,c
 16992  0102E4  0EE7               	movlw	-25
 16993  0102E6  50E3               	movf	plusw1,w,c
 16994  0102E8  220C               	addwfc	(btemp+11)^0,f,c
 16995  0102EA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16996  0102F0  0060  F033  FFE6   	movff	btemp+11,postinc1
 16997  0102F6  ECD5  F0D1         	call	_strcpy	;wreg free
 16998                           
 16999                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 17000  0102FA  D78D               	goto	l12297
 17001  0102FC                     l12313:
 17002                           
 17003                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 17004  0102FC  0EE3               	movlw	low STR_70
 17005  0102FE  6EE6               	movwf	postinc1,c
 17006  010300  0EFF               	movlw	high STR_70
 17007  010302  6EE6               	movwf	postinc1,c
 17008                           
 17009                           ;stkvar	_n @ sp[(-58)+32]
 17010  010304  0E97               	movlw	low _dbuf
 17011  010306  6E0B               	movwf	(btemp+10)^0,c
 17012  010308  0E02               	movlw	high _dbuf
 17013  01030A  6E0C               	movwf	(btemp+11)^0,c
 17014  01030C  0EE6               	movlw	-26
 17015  01030E  50E3               	movf	plusw1,w,c
 17016  010310  260B               	addwf	(btemp+10)^0,f,c
 17017  010312  0EE7               	movlw	-25
 17018  010314  50E3               	movf	plusw1,w,c
 17019  010316  220C               	addwfc	(btemp+11)^0,f,c
 17020  010318  0060  F02F  FFE6   	movff	btemp+10,postinc1
 17021  01031E  0060  F033  FFE6   	movff	btemp+11,postinc1
 17022  010324  ECD5  F0D1         	call	_strcpy	;wreg free
 17023  010328  D776               	goto	l12297
 17024  01032A                     l12321:
 17025                           
 17026                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 17027  01032A  0E00               	movlw	0
 17028  01032C  6E09               	movwf	(btemp+8)^0,c
 17029  01032E  0E00               	movlw	0
 17030  010330  6E0A               	movwf	(btemp+9)^0,c
 17031  010332  0E80               	movlw	128
 17032  010334  6E0B               	movwf	(btemp+10)^0,c
 17033  010336  0E3F               	movlw	63
 17034  010338  6E0C               	movwf	(btemp+11)^0,c
 17035                           
 17036                           ;stkvar	_u @ sp[(-56)+12]
 17037  01033A  0ED4               	movlw	-44
 17038  01033C  0060  F027  FFE3   	movff	btemp+8,plusw1
 17039  010342  0ED5               	movlw	-43
 17040  010344  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17041  01034A  0ED6               	movlw	-42
 17042  01034C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17043  010352  0ED7               	movlw	-41
 17044  010354  0060  F033  FFE3   	movff	btemp+11,plusw1
 17045                           
 17046                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 17047                           ;stkvar	_e @ sp[(-56)+34]
 17048  01035A  0EEA               	movlw	-22
 17049  01035C  6AE3               	clrf	plusw1,c
 17050  01035E  0EEB               	movlw	-21
 17051  010360  6AE3               	clrf	plusw1,c
 17052                           
 17053                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 17054  010362  0E00               	movlw	0
 17055  010364  6EE6               	movwf	postinc1,c
 17056  010366  0E00               	movlw	0
 17057  010368  6EE6               	movwf	postinc1,c
 17058  01036A  0E00               	movlw	0
 17059  01036C  6EE6               	movwf	postinc1,c
 17060  01036E  0E00               	movlw	0
 17061  010370  6EE6               	movwf	postinc1,c
 17062                           
 17063                           ;stkvar	_g @ sp[(-60)+16]
 17064  010372  0ED4               	movlw	-44
 17065  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 17066  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 17067  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 17068  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 17069  01038C  EC0F  F0D3         	call	___fleq	;wreg free
 17070  010390  A001               	btfss	btemp& (0+255),0,c
 17071  010392  D039               	goto	l12333
 17072  010394  D0BC               	goto	u11370
 17073  010396                     l12329:
 17074                           
 17075                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 17076  010396  0E00               	movlw	0
 17077  010398  6EE6               	movwf	postinc1,c
 17078  01039A  0E00               	movlw	0
 17079  01039C  6EE6               	movwf	postinc1,c
 17080  01039E  0E20               	movlw	32
 17081  0103A0  6EE6               	movwf	postinc1,c
 17082  0103A2  0E41               	movlw	65
 17083  0103A4  6EE6               	movwf	postinc1,c
 17084                           
 17085                           ;stkvar	_u @ sp[(-60)+12]
 17086  0103A6  0ED0               	movlw	-48
 17087  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 17088  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 17089  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 17090  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 17091  0103C0  ECD7  F09E         	call	___flmul	;wreg free
 17092                           
 17093                           ;stkvar	_u @ sp[(-56)+12]
 17094  0103C4  0ED4               	movlw	-44
 17095  0103C6  0060  F007  FFE3   	movff	btemp,plusw1
 17096  0103CC  0ED5               	movlw	-43
 17097  0103CE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17098  0103D4  0ED6               	movlw	-42
 17099  0103D6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17100  0103DC  0ED7               	movlw	-41
 17101  0103DE  0060  F013  FFE3   	movff	btemp+3,plusw1
 17102                           
 17103                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 17104                           ;stkvar	_e @ sp[(-56)+34]
 17105  0103E4  0EEA               	movlw	-22
 17106  0103E6  50E3               	movf	plusw1,w,c
 17107  0103E8  0F01               	addlw	1
 17108  0103EA  6E01               	movwf	btemp^0,c
 17109  0103EC  0EEA               	movlw	-22
 17110  0103EE  0060  F007  FFE3   	movff	btemp,plusw1
 17111  0103F4  6A01               	clrf	btemp^0,c
 17112  0103F6  0EEB               	movlw	-21
 17113  0103F8  50E3               	movf	plusw1,w,c
 17114  0103FA  2001               	addwfc	btemp^0,w,c
 17115  0103FC  6E01               	movwf	btemp^0,c
 17116  0103FE  0EEB               	movlw	-21
 17117  010400  0060  F007  FFE3   	movff	btemp,plusw1
 17118  010406                     l12333:
 17119                           
 17120                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 17121  010406  0E00               	movlw	0
 17122  010408  6EE6               	movwf	postinc1,c
 17123  01040A  0E00               	movlw	0
 17124  01040C  6EE6               	movwf	postinc1,c
 17125  01040E  0E20               	movlw	32
 17126  010410  6EE6               	movwf	postinc1,c
 17127  010412  0E41               	movlw	65
 17128  010414  6EE6               	movwf	postinc1,c
 17129                           
 17130                           ;stkvar	_u @ sp[(-60)+12]
 17131  010416  0ED0               	movlw	-48
 17132  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 17133  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 17134  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 17135  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 17136  010430  ECD7  F09E         	call	___flmul	;wreg free
 17137  010434  0060  F007  FFE6   	movff	btemp,postinc1
 17138  01043A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 17139  010440  0060  F00F  FFE6   	movff	btemp+2,postinc1
 17140  010446  0060  F013  FFE6   	movff	btemp+3,postinc1
 17141                           
 17142                           ;stkvar	_g @ sp[(-60)+16]
 17143  01044C  0ED4               	movlw	-44
 17144  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 17145  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 17146  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 17147  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 17148  010466  ECFC  F0C8         	call	___flge	;wreg free
 17149  01046A  A001               	btfss	btemp& (0+255),0,c
 17150  01046C  D032               	goto	l12339
 17151  01046E  D793               	goto	l12329
 17152  010470                     l12335:
 17153                           
 17154                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 17155  010470  0E00               	movlw	0
 17156  010472  6EE6               	movwf	postinc1,c
 17157  010474  0E00               	movlw	0
 17158  010476  6EE6               	movwf	postinc1,c
 17159  010478  0E20               	movlw	32
 17160  01047A  6EE6               	movwf	postinc1,c
 17161  01047C  0E41               	movlw	65
 17162  01047E  6EE6               	movwf	postinc1,c
 17163                           
 17164                           ;stkvar	_u @ sp[(-60)+12]
 17165  010480  0ED0               	movlw	-48
 17166  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 17167  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 17168  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 17169  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 17170  01049A  ECCA  F0A6         	call	___fldiv	;wreg free
 17171                           
 17172                           ;stkvar	_u @ sp[(-56)+12]
 17173  01049E  0ED4               	movlw	-44
 17174  0104A0  0060  F007  FFE3   	movff	btemp,plusw1
 17175  0104A6  0ED5               	movlw	-43
 17176  0104A8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17177  0104AE  0ED6               	movlw	-42
 17178  0104B0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17179  0104B6  0ED7               	movlw	-41
 17180  0104B8  0060  F013  FFE3   	movff	btemp+3,plusw1
 17181                           
 17182                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 17183                           ;stkvar	_e @ sp[(-56)+34]
 17184  0104BE  50E1               	movf	fsr1l,w,c
 17185  0104C0  0FEA               	addlw	-22
 17186  0104C2  6ED9               	movwf	fsr2l,c
 17187  0104C4  50E2               	movf	fsr1h,w,c
 17188  0104C6  6EDA               	movwf	fsr2h,c
 17189  0104C8  0EFF               	movlw	255
 17190  0104CA  22DA               	addwfc	fsr2h,f,c
 17191  0104CC  06DE               	decf	postinc2,f,c
 17192  0104CE  0E00               	movlw	0
 17193  0104D0  5ADD               	subwfb	postdec2,f,c
 17194  0104D2                     l12339:
 17195                           
 17196                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 17197                           ;stkvar	_u @ sp[(-56)+12]
 17198  0104D2  0ED4               	movlw	-44
 17199  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 17200  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 17201  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 17202  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 17203                           
 17204                           ;stkvar	_g @ sp[(-60)+16]
 17205  0104EC  0ED4               	movlw	-44
 17206  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 17207  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 17208  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 17209  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 17210  010506  ECFC  F0C8         	call	___flge	;wreg free
 17211  01050A  A001               	btfss	btemp& (0+255),0,c
 17212  01050C  D7B1               	goto	l12335
 17213  01050E                     u11370:
 17214                           
 17215                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 17216                           ;stkvar	_c @ sp[(-56)+-7]
 17217  01050E  0EC1               	movlw	-63
 17218  010510  50E3               	movf	plusw1,w,c
 17219  010512  6EE6               	movwf	postinc1,c
 17220  010514  0E00               	movlw	0
 17221  010516  6EE6               	movwf	postinc1,c
 17222  010518  ECD9  F0D7         	call	_tolower	;wreg free
 17223                           
 17224                           ;stkvar	_mode @ sp[(-56)+54]
 17225  01051C  0EFE               	movlw	-2
 17226  01051E  0060  F007  FFE3   	movff	btemp,plusw1
 17227                           
 17228                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 17229                           ;stkvar	_mode @ sp[(-56)+54]
 17230                           ;stkvar	_nmode @ sp[(-56)+55]
 17231  010524  0EFE               	movlw	-2
 17232  010526  006F FF8C  F001    	movff	plusw1,btemp
 17233  01052C  0EFF               	movlw	-1
 17234  01052E  0060  F007  FFE3   	movff	btemp,plusw1
 17235                           
 17236                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 17237                           ;stkvar	_mode @ sp[(-56)+54]
 17238  010534  0EFE               	movlw	-2
 17239  010536  006F FF8C  F001    	movff	plusw1,btemp
 17240  01053C  0E67               	movlw	103
 17241  01053E  1801               	xorwf	btemp^0,w,c
 17242  010540  A4D8               	btfss	status,2,c
 17243  010542  D025               	goto	l12357
 17244                           
 17245                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 17246  010544  503C               	movf	_prec^0,w,c
 17247  010546  103D               	iorwf	(_prec+1)^0,w,c
 17248  010548  A4D8               	btfss	status,2,c
 17249  01054A  D004               	goto	l12351
 17250                           
 17251                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 17252  01054C  0E00               	movlw	0
 17253  01054E  6E3D               	movwf	(_prec+1)^0,c
 17254  010550  0E01               	movlw	1
 17255  010552  6E3C               	movwf	_prec^0,c
 17256  010554                     l12351:
 17257                           
 17258                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 17259  010554  BE3D               	btfsc	(_prec+1)^0,7,c
 17260  010556  D005               	goto	u11400
 17261  010558  503D               	movf	(_prec+1)^0,w,c
 17262  01055A  E110               	bnz	l12355
 17263  01055C  043C               	decf	_prec^0,w,c
 17264  01055E  B0D8               	btfsc	status,0,c
 17265  010560  D00D               	goto	l12355
 17266  010562                     u11400:
 17267  010562  0E06               	movlw	6
 17268  010564  6E0B               	movwf	(btemp+10)^0,c
 17269  010566  0E00               	movlw	0
 17270  010568  6E0C               	movwf	(btemp+11)^0,c
 17271                           
 17272                           ;stkvar	_p @ sp[(-56)+40]
 17273  01056A  0EF0               	movlw	-16
 17274  01056C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17275  010572  0EF1               	movlw	-15
 17276  010574  0060  F033  FFE3   	movff	btemp+11,plusw1
 17277  01057A  D00C               	goto	l12363
 17278  01057C                     l12355:
 17279                           
 17280                           ;stkvar	_p @ sp[(-56)+40]
 17281  01057C  0EF0               	movlw	-16
 17282  01057E  0060  F0F3  FFE3   	movff	_prec,plusw1
 17283  010584  0EF1               	movlw	-15
 17284  010586  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 17285  01058C  D003               	goto	l12363
 17286  01058E                     l12357:
 17287                           
 17288                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 17289  01058E  AE3D               	btfss	(_prec+1)^0,7,c
 17290  010590  D7F5               	goto	l12355
 17291  010592  D7E7               	goto	u11400
 17292  010594                     l12363:
 17293                           
 17294                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 17295                           ;stkvar	_mode @ sp[(-56)+54]
 17296  010594  0EFE               	movlw	-2
 17297  010596  006F FF8C  F001    	movff	plusw1,btemp
 17298  01059C  0E67               	movlw	103
 17299  01059E  1801               	xorwf	btemp^0,w,c
 17300  0105A0  A4D8               	btfss	status,2,c
 17301  0105A2  D02F               	goto	l12373
 17302                           
 17303                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 17304                           ;stkvar	_e @ sp[(-56)+34]
 17305  0105A4  0EEB               	movlw	-21
 17306  0105A6  AEE3               	btfss	plusw1,7,c
 17307  0105A8  D00E               	goto	u11430
 17308  0105AA  0EEA               	movlw	-22
 17309  0105AC  006F FF8C  F001    	movff	plusw1,btemp
 17310  0105B2  0EFC               	movlw	252
 17311  0105B4  5E01               	subwf	btemp^0,f,c
 17312  0105B6  0EEB               	movlw	-21
 17313  0105B8  006F FF8C  F001    	movff	plusw1,btemp
 17314  0105BE  0EFF               	movlw	255
 17315  0105C0  5A01               	subwfb	btemp^0,f,c
 17316  0105C2  A0D8               	btfss	status,0,c
 17317  0105C4  D018               	goto	l12371
 17318  0105C6                     u11430:
 17319                           
 17320                           ;stkvar	_e @ sp[(-56)+34]
 17321                           ;stkvar	_p @ sp[(-56)+40]
 17322  0105C6  0EF0               	movlw	-16
 17323  0105C8  50E3               	movf	plusw1,w,c
 17324  0105CA  0FFF               	addlw	255
 17325  0105CC  6E0B               	movwf	(btemp+10)^0,c
 17326  0105CE  0EF1               	movlw	-15
 17327  0105D0  006F FF8C  F00C    	movff	plusw1,btemp+11
 17328  0105D6  0EFF               	movlw	255
 17329  0105D8  220C               	addwfc	(btemp+11)^0,f,c
 17330  0105DA  0EEA               	movlw	-22
 17331  0105DC  50E3               	movf	plusw1,w,c
 17332  0105DE  5C0B               	subwf	(btemp+10)^0,w,c
 17333  0105E0  500C               	movf	(btemp+11)^0,w,c
 17334  0105E2  0A80               	xorlw	128
 17335  0105E4  6E01               	movwf	btemp^0,c
 17336  0105E6  0EEB               	movlw	-21
 17337  0105E8  50E3               	movf	plusw1,w,c
 17338  0105EA  0A80               	xorlw	128
 17339  0105EC  5801               	subwfb	btemp^0,w,c
 17340  0105EE  A0D8               	btfss	status,0,c
 17341  0105F0  D002               	goto	l12371
 17342                           
 17343                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 17344  0105F2  0E66               	movlw	102
 17345  0105F4  D001               	goto	L18
 17346  0105F6                     l12371:
 17347                           
 17348                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 17349  0105F6  0E65               	movlw	101
 17350  0105F8                     L18:
 17351  0105F8  6E0C               	movwf	(btemp+11)^0,c
 17352                           
 17353                           ;stkvar	_nmode @ sp[(-56)+55]
 17354  0105FA  0EFF               	movlw	-1
 17355  0105FC  0060  F033  FFE3   	movff	btemp+11,plusw1
 17356  010602                     l12373:
 17357                           
 17358                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 17359                           ;stkvar	_p @ sp[(-56)+40]
 17360                           ;stkvar	_m @ sp[(-56)+48]
 17361  010602  0EF0               	movlw	-16
 17362  010604  006F FF8C  F001    	movff	plusw1,btemp
 17363  01060A  0EF8               	movlw	-8
 17364  01060C  0060  F007  FFE3   	movff	btemp,plusw1
 17365  010612  0EF1               	movlw	-15
 17366  010614  006F FF8C  F001    	movff	plusw1,btemp
 17367  01061A  0EF9               	movlw	-7
 17368  01061C  0060  F007  FFE3   	movff	btemp,plusw1
 17369                           
 17370                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 17371                           ;stkvar	_mode @ sp[(-56)+54]
 17372  010622  0EFE               	movlw	-2
 17373  010624  006F FF8C  F001    	movff	plusw1,btemp
 17374  01062A  0E67               	movlw	103
 17375  01062C  1801               	xorwf	btemp^0,w,c
 17376  01062E  A4D8               	btfss	status,2,c
 17377  010630  D00B               	goto	u11470
 17378                           
 17379                           ;stkvar	_nmode @ sp[(-56)+55]
 17380  010632  0EFF               	movlw	-1
 17381  010634  006F FF8C  F001    	movff	plusw1,btemp
 17382  01063A  0E66               	movlw	102
 17383  01063C  1801               	xorwf	btemp^0,w,c
 17384  01063E  A4D8               	btfss	status,2,c
 17385  010640  D014               	goto	l2298
 17386                           
 17387                           ;stkvar	_e @ sp[(-56)+34]
 17388  010642  0EEB               	movlw	-21
 17389  010644  AEE3               	btfss	plusw1,7,c
 17390  010646  D011               	goto	l2298
 17391  010648                     u11470:
 17392                           
 17393                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 17394                           ;stkvar	_m @ sp[(-56)+48]
 17395  010648  0EF8               	movlw	-8
 17396  01064A  50E3               	movf	plusw1,w,c
 17397  01064C  0F01               	addlw	1
 17398  01064E  6E01               	movwf	btemp^0,c
 17399  010650  0EF8               	movlw	-8
 17400  010652  0060  F007  FFE3   	movff	btemp,plusw1
 17401  010658  6A01               	clrf	btemp^0,c
 17402  01065A  0EF9               	movlw	-7
 17403  01065C  50E3               	movf	plusw1,w,c
 17404  01065E  2001               	addwfc	btemp^0,w,c
 17405  010660  6E01               	movwf	btemp^0,c
 17406  010662  0EF9               	movlw	-7
 17407  010664  0060  F007  FFE3   	movff	btemp,plusw1
 17408  01066A                     l2298:
 17409                           
 17410                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 17411                           ;stkvar	_nmode @ sp[(-56)+55]
 17412  01066A  0EFF               	movlw	-1
 17413  01066C  006F FF8C  F001    	movff	plusw1,btemp
 17414  010672  0E66               	movlw	102
 17415  010674  1801               	xorwf	btemp^0,w,c
 17416  010676  A4D8               	btfss	status,2,c
 17417  010678  D03B               	goto	l12393
 17418                           
 17419                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 17420                           ;stkvar	_e @ sp[(-56)+34]
 17421  01067A  0EEB               	movlw	-21
 17422  01067C  AEE3               	btfss	plusw1,7,c
 17423  01067E  D01C               	goto	l12389
 17424                           
 17425                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 17426  010680  0E00               	movlw	0
 17427  010682  6E09               	movwf	(btemp+8)^0,c
 17428  010684  0E00               	movlw	0
 17429  010686  6E0A               	movwf	(btemp+9)^0,c
 17430  010688  0E80               	movlw	128
 17431  01068A  6E0B               	movwf	(btemp+10)^0,c
 17432  01068C  0E3F               	movlw	63
 17433  01068E  6E0C               	movwf	(btemp+11)^0,c
 17434                           
 17435                           ;stkvar	_u @ sp[(-56)+12]
 17436  010690  0ED4               	movlw	-44
 17437  010692  0060  F027  FFE3   	movff	btemp+8,plusw1
 17438  010698  0ED5               	movlw	-43
 17439  01069A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17440  0106A0  0ED6               	movlw	-42
 17441  0106A2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17442  0106A8  0ED7               	movlw	-41
 17443  0106AA  0060  F033  FFE3   	movff	btemp+11,plusw1
 17444                           
 17445                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 17446                           ;stkvar	_e @ sp[(-56)+34]
 17447  0106B0  0EEA               	movlw	-22
 17448  0106B2  6AE3               	clrf	plusw1,c
 17449  0106B4  0EEB               	movlw	-21
 17450  0106B6  6AE3               	clrf	plusw1,c
 17451  0106B8                     l12389:
 17452                           
 17453                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 17454                           ;stkvar	_mode @ sp[(-56)+54]
 17455  0106B8  0EFE               	movlw	-2
 17456  0106BA  006F FF8C  F001    	movff	plusw1,btemp
 17457  0106C0  0E67               	movlw	103
 17458  0106C2  1801               	xorwf	btemp^0,w,c
 17459  0106C4  B4D8               	btfsc	status,2,c
 17460  0106C6  D014               	goto	l12393
 17461                           
 17462                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 17463                           ;stkvar	_e @ sp[(-56)+34]
 17464                           ;stkvar	_m @ sp[(-56)+48]
 17465  0106C8  0EF8               	movlw	-8
 17466  0106CA  50E3               	movf	plusw1,w,c
 17467  0106CC  6E01               	movwf	btemp^0,c
 17468  0106CE  0EEA               	movlw	-22
 17469  0106D0  50E3               	movf	plusw1,w,c
 17470  0106D2  2601               	addwf	btemp^0,f,c
 17471  0106D4  0EF8               	movlw	-8
 17472  0106D6  0060  F007  FFE3   	movff	btemp,plusw1
 17473  0106DC  0EF9               	movlw	-7
 17474  0106DE  50E3               	movf	plusw1,w,c
 17475  0106E0  6E01               	movwf	btemp^0,c
 17476  0106E2  0EEB               	movlw	-21
 17477  0106E4  50E3               	movf	plusw1,w,c
 17478  0106E6  2201               	addwfc	btemp^0,f,c
 17479  0106E8  0EF9               	movlw	-7
 17480  0106EA  0060  F007  FFE3   	movff	btemp,plusw1
 17481  0106F0                     l12393:
 17482                           
 17483                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 17484                           ;stkvar	_i @ sp[(-56)+36]
 17485  0106F0  0EEC               	movlw	-20
 17486  0106F2  6AE3               	clrf	plusw1,c
 17487  0106F4  0EED               	movlw	-19
 17488  0106F6  6AE3               	clrf	plusw1,c
 17489                           
 17490                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 17491                           ;stkvar	_g @ sp[(-56)+16]
 17492  0106F8  0ED8               	movlw	-40
 17493  0106FA  006F FF8C  F009    	movff	plusw1,btemp+8
 17494  010700  0ED9               	movlw	-39
 17495  010702  006F FF8C  F00A    	movff	plusw1,btemp+9
 17496  010708  0EDA               	movlw	-38
 17497  01070A  006F FF8C  F00B    	movff	plusw1,btemp+10
 17498  010710  0EDB               	movlw	-37
 17499  010712  006F FF8C  F00C    	movff	plusw1,btemp+11
 17500                           
 17501                           ;stkvar	_h @ sp[(-56)+24]
 17502  010718  0EE0               	movlw	-32
 17503  01071A  0060  F027  FFE3   	movff	btemp+8,plusw1
 17504  010720  0EE1               	movlw	-31
 17505  010722  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17506  010728  0EE2               	movlw	-30
 17507  01072A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17508  010730  0EE3               	movlw	-29
 17509  010732  0060  F033  FFE3   	movff	btemp+11,plusw1
 17510                           
 17511                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 17512                           ;stkvar	_u @ sp[(-56)+12]
 17513  010738  0ED4               	movlw	-44
 17514  01073A  006F FF8C  F009    	movff	plusw1,btemp+8
 17515  010740  0ED5               	movlw	-43
 17516  010742  006F FF8C  F00A    	movff	plusw1,btemp+9
 17517  010748  0ED6               	movlw	-42
 17518  01074A  006F FF8C  F00B    	movff	plusw1,btemp+10
 17519  010750  0ED7               	movlw	-41
 17520  010752  006F FF8C  F00C    	movff	plusw1,btemp+11
 17521                           
 17522                           ;stkvar	_ou @ sp[(-56)+28]
 17523  010758  0EE4               	movlw	-28
 17524  01075A  0060  F027  FFE3   	movff	btemp+8,plusw1
 17525  010760  0EE5               	movlw	-27
 17526  010762  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17527  010768  0EE6               	movlw	-26
 17528  01076A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17529  010770  0EE7               	movlw	-25
 17530  010772  0060  F033  FFE3   	movff	btemp+11,plusw1
 17531                           
 17532                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 17533  010778  D0D6               	goto	l12409
 17534  01077A                     l12399:
 17535                           
 17536                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 17537                           ;stkvar	_u @ sp[(-56)+12]
 17538  01077A  0ED4               	movlw	-44
 17539  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 17540  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 17541  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 17542  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 17543                           
 17544                           ;stkvar	_h @ sp[(-60)+24]
 17545  010794  0EDC               	movlw	-36
 17546  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 17547  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 17548  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 17549  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 17550  0107AE  ECCA  F0A6         	call	___fldiv	;wreg free
 17551  0107B2  0060  F007  FFE6   	movff	btemp,postinc1
 17552  0107B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 17553  0107BE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 17554  0107C4  0060  F013  FFE6   	movff	btemp+3,postinc1
 17555  0107CA  EC54  F0B2         	call	_floorf	;wreg free
 17556                           
 17557                           ;stkvar	_l @ sp[(-56)+20]
 17558  0107CE  0EDC               	movlw	-36
 17559  0107D0  0060  F007  FFE3   	movff	btemp,plusw1
 17560  0107D6  0EDD               	movlw	-35
 17561  0107D8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17562  0107DE  0EDE               	movlw	-34
 17563  0107E0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17564  0107E6  0EDF               	movlw	-33
 17565  0107E8  0060  F013  FFE3   	movff	btemp+3,plusw1
 17566                           
 17567                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 17568                           ;stkvar	_l @ sp[(-56)+20]
 17569  0107EE  0EDC               	movlw	-36
 17570  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 17571  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 17572  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 17573  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 17574  010808  EC43  F0C8         	call	___fltol	;wreg free
 17575  01080C  0060  F004  F00B   	movff	btemp,btemp+10
 17576  010812  0060  F008  F00C   	movff	btemp+1,btemp+11
 17577                           
 17578                           ;stkvar	_d @ sp[(-56)+44]
 17579  010818  0EF4               	movlw	-12
 17580  01081A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17581  010820  0EF5               	movlw	-11
 17582  010822  0060  F033  FFE3   	movff	btemp+11,plusw1
 17583                           
 17584                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 17585                           ;stkvar	_u @ sp[(-56)+12]
 17586  010828  0ED4               	movlw	-44
 17587  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 17588  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 17589  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 17590  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 17591                           
 17592                           ;stkvar	_l @ sp[(-60)+20]
 17593  010842  0ED8               	movlw	-40
 17594  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 17595  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 17596  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 17597  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 17598  01085C  ECD7  F09E         	call	___flmul	;wreg free
 17599  010860  0060  F007  FFE6   	movff	btemp,postinc1
 17600  010866  0060  F00B  FFE6   	movff	btemp+1,postinc1
 17601  01086C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 17602  010872  0060  F013  FFE6   	movff	btemp+3,postinc1
 17603                           
 17604                           ;stkvar	_h @ sp[(-60)+24]
 17605  010878  0EDC               	movlw	-36
 17606  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 17607  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 17608  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 17609  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 17610  010892  ECC0  F0DC         	call	___flsub	;wreg free
 17611                           
 17612                           ;stkvar	_h @ sp[(-56)+24]
 17613  010896  0EE0               	movlw	-32
 17614  010898  0060  F007  FFE3   	movff	btemp,plusw1
 17615  01089E  0EE1               	movlw	-31
 17616  0108A0  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17617  0108A6  0EE2               	movlw	-30
 17618  0108A8  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17619  0108AE  0EE3               	movlw	-29
 17620  0108B0  0060  F013  FFE3   	movff	btemp+3,plusw1
 17621                           
 17622                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 17623  0108B6  0E00               	movlw	0
 17624  0108B8  6EE6               	movwf	postinc1,c
 17625  0108BA  0E00               	movlw	0
 17626  0108BC  6EE6               	movwf	postinc1,c
 17627  0108BE  0E20               	movlw	32
 17628  0108C0  6EE6               	movwf	postinc1,c
 17629  0108C2  0E41               	movlw	65
 17630  0108C4  6EE6               	movwf	postinc1,c
 17631                           
 17632                           ;stkvar	_u @ sp[(-60)+12]
 17633  0108C6  0ED0               	movlw	-48
 17634  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 17635  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 17636  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 17637  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 17638  0108E0  ECCA  F0A6         	call	___fldiv	;wreg free
 17639                           
 17640                           ;stkvar	_u @ sp[(-56)+12]
 17641  0108E4  0ED4               	movlw	-44
 17642  0108E6  0060  F007  FFE3   	movff	btemp,plusw1
 17643  0108EC  0ED5               	movlw	-43
 17644  0108EE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17645  0108F4  0ED6               	movlw	-42
 17646  0108F6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17647  0108FC  0ED7               	movlw	-41
 17648  0108FE  0060  F013  FFE3   	movff	btemp+3,plusw1
 17649                           
 17650                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 17651                           ;stkvar	_i @ sp[(-56)+36]
 17652  010904  0EEC               	movlw	-20
 17653  010906  50E3               	movf	plusw1,w,c
 17654  010908  0F01               	addlw	1
 17655  01090A  6E01               	movwf	btemp^0,c
 17656  01090C  0EEC               	movlw	-20
 17657  01090E  0060  F007  FFE3   	movff	btemp,plusw1
 17658  010914  6A01               	clrf	btemp^0,c
 17659  010916  0EED               	movlw	-19
 17660  010918  50E3               	movf	plusw1,w,c
 17661  01091A  2001               	addwfc	btemp^0,w,c
 17662  01091C  6E01               	movwf	btemp^0,c
 17663  01091E  0EED               	movlw	-19
 17664  010920  0060  F007  FFE3   	movff	btemp,plusw1
 17665  010926                     l12409:
 17666                           
 17667                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 17668                           ;stkvar	_m @ sp[(-56)+48]
 17669                           ;stkvar	_i @ sp[(-56)+36]
 17670  010926  50E1               	movf	fsr1l,w,c
 17671  010928  0FEC               	addlw	-20
 17672  01092A  6ED9               	movwf	fsr2l,c
 17673  01092C  50E2               	movf	fsr1h,w,c
 17674  01092E  6EDA               	movwf	fsr2h,c
 17675  010930  0EFF               	movlw	255
 17676  010932  22DA               	addwfc	fsr2h,f,c
 17677  010934  0EF8               	movlw	-8
 17678  010936  50E3               	movf	plusw1,w,c
 17679  010938  5CDE               	subwf	postinc2,w,c
 17680  01093A  50DE               	movf	postinc2,w,c
 17681  01093C  0A80               	xorlw	128
 17682  01093E  6E01               	movwf	btemp^0,c
 17683  010940  0EF9               	movlw	-7
 17684  010942  50E3               	movf	plusw1,w,c
 17685  010944  0A80               	xorlw	128
 17686  010946  5801               	subwfb	btemp^0,w,c
 17687  010948  A0D8               	btfss	status,0,c
 17688  01094A  D717               	goto	l12399
 17689                           
 17690                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 17691  01094C  0E00               	movlw	0
 17692  01094E  6EE6               	movwf	postinc1,c
 17693  010950  0E00               	movlw	0
 17694  010952  6EE6               	movwf	postinc1,c
 17695  010954  0EA0               	movlw	160
 17696  010956  6EE6               	movwf	postinc1,c
 17697  010958  0E40               	movlw	64
 17698  01095A  6EE6               	movwf	postinc1,c
 17699                           
 17700                           ;stkvar	_u @ sp[(-60)+12]
 17701  01095C  0ED0               	movlw	-48
 17702  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 17703  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 17704  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 17705  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 17706  010976  ECD7  F09E         	call	___flmul	;wreg free
 17707                           
 17708                           ;stkvar	_l @ sp[(-56)+20]
 17709  01097A  0EDC               	movlw	-36
 17710  01097C  0060  F007  FFE3   	movff	btemp,plusw1
 17711  010982  0EDD               	movlw	-35
 17712  010984  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17713  01098A  0EDE               	movlw	-34
 17714  01098C  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17715  010992  0EDF               	movlw	-33
 17716  010994  0060  F013  FFE3   	movff	btemp+3,plusw1
 17717                           
 17718                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 17719                           ;stkvar	_l @ sp[(-56)+20]
 17720  01099A  0EDC               	movlw	-36
 17721  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 17722  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 17723  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 17724  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 17725                           
 17726                           ;stkvar	_h @ sp[(-60)+24]
 17727  0109B4  0EDC               	movlw	-36
 17728  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 17729  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 17730  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 17731  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 17732  0109CE  ECFC  F0C8         	call	___flge	;wreg free
 17733  0109D2  A001               	btfss	btemp& (0+255),0,c
 17734  0109D4  D021               	goto	u11540
 17735                           
 17736                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 17737                           ;stkvar	_l @ sp[(-56)+20]
 17738                           
 17739                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 17740                           
 17741                           ;stkvar	_l @ sp[(-56)+20]
 17742                           
 17743                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 17744  0109D6  0EDC               	movlw	-36
 17745  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 17746  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 17747  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 17748  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 17749                           
 17750                           ;stkvar	_h @ sp[(-60)+24]
 17751  0109F0  0EDC               	movlw	-36
 17752  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 17753  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 17754  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 17755  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 17756  010A0A  EC0F  F0D3         	call	___fleq	;wreg free
 17757  010A0E  A001               	btfss	btemp& (0+255),0,c
 17758  010A10  D01B               	goto	l12423
 17759                           
 17760                           ;stkvar	_d @ sp[(-56)+44]
 17761  010A12  0EF4               	movlw	-12
 17762  010A14  B0E3               	btfsc	plusw1,0,c
 17763  010A16  D018               	goto	l12423
 17764  010A18                     u11540:
 17765                           
 17766                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 17767  010A18  0E00               	movlw	0
 17768  010A1A  6E09               	movwf	(btemp+8)^0,c
 17769  010A1C  0E00               	movlw	0
 17770  010A1E  6E0A               	movwf	(btemp+9)^0,c
 17771  010A20  0E00               	movlw	0
 17772  010A22  6E0B               	movwf	(btemp+10)^0,c
 17773  010A24  0E00               	movlw	0
 17774  010A26  6E0C               	movwf	(btemp+11)^0,c
 17775                           
 17776                           ;stkvar	_l @ sp[(-56)+20]
 17777  010A28  0EDC               	movlw	-36
 17778  010A2A  0060  F027  FFE3   	movff	btemp+8,plusw1
 17779  010A30  0EDD               	movlw	-35
 17780  010A32  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17781  010A38  0EDE               	movlw	-34
 17782  010A3A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17783  010A40  0EDF               	movlw	-33
 17784  010A42  0060  F033  FFE3   	movff	btemp+11,plusw1
 17785  010A48                     l12423:
 17786                           
 17787                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 17788                           ;stkvar	_l @ sp[(-56)+20]
 17789  010A48  0EDC               	movlw	-36
 17790  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 17791  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 17792  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 17793  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 17794                           
 17795                           ;stkvar	_g @ sp[(-60)+16]
 17796  010A62  0ED4               	movlw	-44
 17797  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 17798  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 17799  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 17800  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 17801  010A7C  ECEC  F0A2         	call	___fladd	;wreg free
 17802                           
 17803                           ;stkvar	_h @ sp[(-56)+24]
 17804  010A80  0EE0               	movlw	-32
 17805  010A82  0060  F007  FFE3   	movff	btemp,plusw1
 17806  010A88  0EE1               	movlw	-31
 17807  010A8A  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17808  010A90  0EE2               	movlw	-30
 17809  010A92  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17810  010A98  0EE3               	movlw	-29
 17811  010A9A  0060  F013  FFE3   	movff	btemp+3,plusw1
 17812                           
 17813                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 17814                           ;stkvar	_ou @ sp[(-56)+28]
 17815  010AA0  0EE4               	movlw	-28
 17816  010AA2  006F FF8C  F009    	movff	plusw1,btemp+8
 17817  010AA8  0EE5               	movlw	-27
 17818  010AAA  006F FF8C  F00A    	movff	plusw1,btemp+9
 17819  010AB0  0EE6               	movlw	-26
 17820  010AB2  006F FF8C  F00B    	movff	plusw1,btemp+10
 17821  010AB8  0EE7               	movlw	-25
 17822  010ABA  006F FF8C  F00C    	movff	plusw1,btemp+11
 17823                           
 17824                           ;stkvar	_u @ sp[(-56)+12]
 17825  010AC0  0ED4               	movlw	-44
 17826  010AC2  0060  F027  FFE3   	movff	btemp+8,plusw1
 17827  010AC8  0ED5               	movlw	-43
 17828  010ACA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17829  010AD0  0ED6               	movlw	-42
 17830  010AD2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17831  010AD8  0ED7               	movlw	-41
 17832  010ADA  0060  F033  FFE3   	movff	btemp+11,plusw1
 17833                           
 17834                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 17835                           ;stkvar	_nmode @ sp[(-56)+55]
 17836  010AE0  0EFF               	movlw	-1
 17837  010AE2  006F FF8C  F001    	movff	plusw1,btemp
 17838  010AE8  0E65               	movlw	101
 17839  010AEA  1801               	xorwf	btemp^0,w,c
 17840  010AEC  B4D8               	btfsc	status,2,c
 17841  010AEE  D011               	goto	l12431
 17842                           
 17843                           ;stkvar	_e @ sp[(-56)+34]
 17844                           ;stkvar	_ne @ sp[(-56)+46]
 17845  010AF0  0EEA               	movlw	-22
 17846  010AF2  006F FF8C  F001    	movff	plusw1,btemp
 17847  010AF8  0EF6               	movlw	-10
 17848  010AFA  0060  F007  FFE3   	movff	btemp,plusw1
 17849  010B00  0EEB               	movlw	-21
 17850  010B02  006F FF8C  F001    	movff	plusw1,btemp
 17851  010B08  0EF7               	movlw	-9
 17852  010B0A  0060  F007  FFE3   	movff	btemp,plusw1
 17853  010B10  D004               	goto	l2313
 17854  010B12                     l12431:
 17855                           
 17856                           ;stkvar	_ne @ sp[(-56)+46]
 17857  010B12  0EF6               	movlw	-10
 17858  010B14  6AE3               	clrf	plusw1,c
 17859  010B16  0EF7               	movlw	-9
 17860  010B18  6AE3               	clrf	plusw1,c
 17861  010B1A                     l2313:
 17862                           
 17863                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 17864                           ;stkvar	_pp @ sp[(-56)+50]
 17865  010B1A  0EFA               	movlw	-6
 17866  010B1C  6AE3               	clrf	plusw1,c
 17867  010B1E  0EFB               	movlw	-5
 17868  010B20  6AE3               	clrf	plusw1,c
 17869                           
 17870                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 17871                           ;stkvar	_t @ sp[(-56)+52]
 17872  010B22  0EFC               	movlw	-4
 17873  010B24  6AE3               	clrf	plusw1,c
 17874  010B26  0EFD               	movlw	-3
 17875  010B28  6AE3               	clrf	plusw1,c
 17876                           
 17877                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 17878                           ;stkvar	_i @ sp[(-56)+36]
 17879  010B2A  0EEC               	movlw	-20
 17880  010B2C  6AE3               	clrf	plusw1,c
 17881  010B2E  0EED               	movlw	-19
 17882  010B30  6AE3               	clrf	plusw1,c
 17883                           
 17884                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 17885  010B32  D1B7               	goto	l12483
 17886  010B34                     l12433:
 17887                           
 17888                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 17889                           ;stkvar	_u @ sp[(-56)+12]
 17890  010B34  0ED4               	movlw	-44
 17891  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 17892  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 17893  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 17894  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 17895                           
 17896                           ;stkvar	_h @ sp[(-60)+24]
 17897  010B4E  0EDC               	movlw	-36
 17898  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 17899  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 17900  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 17901  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 17902  010B68  ECCA  F0A6         	call	___fldiv	;wreg free
 17903  010B6C  0060  F007  FFE6   	movff	btemp,postinc1
 17904  010B72  0060  F00B  FFE6   	movff	btemp+1,postinc1
 17905  010B78  0060  F00F  FFE6   	movff	btemp+2,postinc1
 17906  010B7E  0060  F013  FFE6   	movff	btemp+3,postinc1
 17907  010B84  EC54  F0B2         	call	_floorf	;wreg free
 17908                           
 17909                           ;stkvar	_l @ sp[(-56)+20]
 17910  010B88  0EDC               	movlw	-36
 17911  010B8A  0060  F007  FFE3   	movff	btemp,plusw1
 17912  010B90  0EDD               	movlw	-35
 17913  010B92  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17914  010B98  0EDE               	movlw	-34
 17915  010B9A  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17916  010BA0  0EDF               	movlw	-33
 17917  010BA2  0060  F013  FFE3   	movff	btemp+3,plusw1
 17918                           
 17919                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 17920                           ;stkvar	_l @ sp[(-56)+20]
 17921  010BA8  0EDC               	movlw	-36
 17922  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 17923  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 17924  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 17925  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 17926  010BC2  EC43  F0C8         	call	___fltol	;wreg free
 17927  010BC6  0060  F004  F00B   	movff	btemp,btemp+10
 17928  010BCC  0060  F008  F00C   	movff	btemp+1,btemp+11
 17929                           
 17930                           ;stkvar	_d @ sp[(-56)+44]
 17931  010BD2  0EF4               	movlw	-12
 17932  010BD4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17933  010BDA  0EF5               	movlw	-11
 17934  010BDC  0060  F033  FFE3   	movff	btemp+11,plusw1
 17935                           
 17936                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 17937  010BE2  B83E               	btfsc	_flags^0,4,c
 17938  010BE4  D026               	goto	l12447
 17939                           
 17940                           ;stkvar	_d @ sp[(-56)+44]
 17941  010BE6  0EF4               	movlw	-12
 17942  010BE8  006F FF8C  F001    	movff	plusw1,btemp
 17943  010BEE  0EF5               	movlw	-11
 17944  010BF0  50E3               	movf	plusw1,w,c
 17945  010BF2  1001               	iorwf	btemp^0,w,c
 17946  010BF4  A4D8               	btfss	status,2,c
 17947  010BF6  D01D               	goto	l12447
 17948                           
 17949                           ;stkvar	_mode @ sp[(-56)+54]
 17950  010BF8  0EFE               	movlw	-2
 17951  010BFA  006F FF8C  F001    	movff	plusw1,btemp
 17952  010C00  0E67               	movlw	103
 17953  010C02  1801               	xorwf	btemp^0,w,c
 17954  010C04  A4D8               	btfss	status,2,c
 17955  010C06  D015               	goto	l12447
 17956                           
 17957                           ;stkvar	_ne @ sp[(-56)+46]
 17958  010C08  0EF7               	movlw	-9
 17959  010C0A  AEE3               	btfss	plusw1,7,c
 17960  010C0C  D012               	goto	l12447
 17961                           
 17962                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 17963                           ;stkvar	_t @ sp[(-56)+52]
 17964  010C0E  0EFC               	movlw	-4
 17965  010C10  50E3               	movf	plusw1,w,c
 17966  010C12  0F01               	addlw	1
 17967  010C14  6E01               	movwf	btemp^0,c
 17968  010C16  0EFC               	movlw	-4
 17969  010C18  0060  F007  FFE3   	movff	btemp,plusw1
 17970  010C1E  6A01               	clrf	btemp^0,c
 17971  010C20  0EFD               	movlw	-3
 17972  010C22  50E3               	movf	plusw1,w,c
 17973  010C24  2001               	addwfc	btemp^0,w,c
 17974  010C26  6E01               	movwf	btemp^0,c
 17975  010C28  0EFD               	movlw	-3
 17976  010C2A  0060  F007  FFE3   	movff	btemp,plusw1
 17977                           
 17978                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 17979  010C30  D0AF               	goto	l12475
 17980  010C32                     l12447:
 17981                           
 17982                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 17983                           ;stkvar	_pp @ sp[(-56)+50]
 17984  010C32  0EFA               	movlw	-6
 17985  010C34  006F FF8C  F001    	movff	plusw1,btemp
 17986  010C3A  0EFB               	movlw	-5
 17987  010C3C  50E3               	movf	plusw1,w,c
 17988  010C3E  1001               	iorwf	btemp^0,w,c
 17989  010C40  A4D8               	btfss	status,2,c
 17990  010C42  D070               	goto	l12467
 17991                           
 17992                           ;stkvar	_ne @ sp[(-56)+46]
 17993  010C44  0EF7               	movlw	-9
 17994  010C46  AEE3               	btfss	plusw1,7,c
 17995  010C48  D06D               	goto	l12467
 17996                           
 17997                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 17998                           ;stkvar	_n @ sp[(-56)+32]
 17999  010C4A  0EE8               	movlw	-24
 18000  010C4C  006F FF8C  F00B    	movff	plusw1,btemp+10
 18001  010C52  0EE9               	movlw	-23
 18002  010C54  006F FF8C  F00C    	movff	plusw1,btemp+11
 18003  010C5A  0E97               	movlw	low _dbuf
 18004  010C5C  240B               	addwf	(btemp+10)^0,w,c
 18005  010C5E  6ED9               	movwf	fsr2l,c
 18006  010C60  0E02               	movlw	high _dbuf
 18007  010C62  200C               	addwfc	(btemp+11)^0,w,c
 18008  010C64  6EDA               	movwf	fsr2h,c
 18009  010C66  0E2E               	movlw	46
 18010  010C68  6EDF               	movwf	indf2,c
 18011                           
 18012                           ;stkvar	_n @ sp[(-56)+32]
 18013  010C6A  0EE8               	movlw	-24
 18014  010C6C  50E3               	movf	plusw1,w,c
 18015  010C6E  0F01               	addlw	1
 18016  010C70  6E01               	movwf	btemp^0,c
 18017  010C72  0EE8               	movlw	-24
 18018  010C74  0060  F007  FFE3   	movff	btemp,plusw1
 18019  010C7A  6A01               	clrf	btemp^0,c
 18020  010C7C  0EE9               	movlw	-23
 18021  010C7E  50E3               	movf	plusw1,w,c
 18022  010C80  2001               	addwfc	btemp^0,w,c
 18023  010C82  6E01               	movwf	btemp^0,c
 18024  010C84  0EE9               	movlw	-23
 18025  010C86  0060  F007  FFE3   	movff	btemp,plusw1
 18026                           
 18027                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 18028                           ;stkvar	_w @ sp[(-56)+38]
 18029  010C8C  50E1               	movf	fsr1l,w,c
 18030  010C8E  0FEE               	addlw	-18
 18031  010C90  6ED9               	movwf	fsr2l,c
 18032  010C92  50E2               	movf	fsr1h,w,c
 18033  010C94  6EDA               	movwf	fsr2h,c
 18034  010C96  0EFF               	movlw	255
 18035  010C98  22DA               	addwfc	fsr2h,f,c
 18036  010C9A  06DE               	decf	postinc2,f,c
 18037  010C9C  0E00               	movlw	0
 18038  010C9E  5ADD               	subwfb	postdec2,f,c
 18039                           
 18040                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 18041  010CA0  0E01               	movlw	1
 18042  010CA2  6E0B               	movwf	(btemp+10)^0,c
 18043  010CA4  0E00               	movlw	0
 18044  010CA6  6E0C               	movwf	(btemp+11)^0,c
 18045                           
 18046                           ;stkvar	_pp @ sp[(-56)+50]
 18047  010CA8  0EFA               	movlw	-6
 18048  010CAA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18049  010CB0  0EFB               	movlw	-5
 18050  010CB2  0060  F033  FFE3   	movff	btemp+11,plusw1
 18051  010CB8  D035               	goto	l12467
 18052  010CBA                     l12459:
 18053                           
 18054                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 18055                           ;stkvar	_n @ sp[(-56)+32]
 18056  010CBA  0EE8               	movlw	-24
 18057  010CBC  006F FF8C  F00B    	movff	plusw1,btemp+10
 18058  010CC2  0EE9               	movlw	-23
 18059  010CC4  006F FF8C  F00C    	movff	plusw1,btemp+11
 18060  010CCA  0E97               	movlw	low _dbuf
 18061  010CCC  240B               	addwf	(btemp+10)^0,w,c
 18062  010CCE  6ED9               	movwf	fsr2l,c
 18063  010CD0  0E02               	movlw	high _dbuf
 18064  010CD2  200C               	addwfc	(btemp+11)^0,w,c
 18065  010CD4  6EDA               	movwf	fsr2h,c
 18066  010CD6  0E30               	movlw	48
 18067  010CD8  6EDF               	movwf	indf2,c
 18068                           
 18069                           ;stkvar	_n @ sp[(-56)+32]
 18070  010CDA  0EE8               	movlw	-24
 18071  010CDC  50E3               	movf	plusw1,w,c
 18072  010CDE  0F01               	addlw	1
 18073  010CE0  6E01               	movwf	btemp^0,c
 18074  010CE2  0EE8               	movlw	-24
 18075  010CE4  0060  F007  FFE3   	movff	btemp,plusw1
 18076  010CEA  6A01               	clrf	btemp^0,c
 18077  010CEC  0EE9               	movlw	-23
 18078  010CEE  50E3               	movf	plusw1,w,c
 18079  010CF0  2001               	addwfc	btemp^0,w,c
 18080  010CF2  6E01               	movwf	btemp^0,c
 18081  010CF4  0EE9               	movlw	-23
 18082  010CF6  0060  F007  FFE3   	movff	btemp,plusw1
 18083                           
 18084                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 18085                           ;stkvar	_w @ sp[(-56)+38]
 18086  010CFC  50E1               	movf	fsr1l,w,c
 18087  010CFE  0FEE               	addlw	-18
 18088  010D00  6ED9               	movwf	fsr2l,c
 18089  010D02  50E2               	movf	fsr1h,w,c
 18090  010D04  6EDA               	movwf	fsr2h,c
 18091  010D06  0EFF               	movlw	255
 18092  010D08  22DA               	addwfc	fsr2h,f,c
 18093  010D0A  06DE               	decf	postinc2,f,c
 18094  010D0C  0E00               	movlw	0
 18095  010D0E  5ADD               	subwfb	postdec2,f,c
 18096                           
 18097                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 18098                           ;stkvar	_t @ sp[(-56)+52]
 18099  010D10  50E1               	movf	fsr1l,w,c
 18100  010D12  0FFC               	addlw	-4
 18101  010D14  6ED9               	movwf	fsr2l,c
 18102  010D16  50E2               	movf	fsr1h,w,c
 18103  010D18  6EDA               	movwf	fsr2h,c
 18104  010D1A  0EFF               	movlw	255
 18105  010D1C  22DA               	addwfc	fsr2h,f,c
 18106  010D1E  06DE               	decf	postinc2,f,c
 18107  010D20  0E00               	movlw	0
 18108  010D22  5ADD               	subwfb	postdec2,f,c
 18109  010D24                     l12467:
 18110                           
 18111                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 18112                           ;stkvar	_t @ sp[(-56)+52]
 18113  010D24  0EFC               	movlw	-4
 18114  010D26  006F FF8C  F001    	movff	plusw1,btemp
 18115  010D2C  0EFD               	movlw	-3
 18116  010D2E  50E3               	movf	plusw1,w,c
 18117  010D30  1001               	iorwf	btemp^0,w,c
 18118  010D32  A4D8               	btfss	status,2,c
 18119  010D34  D7C2               	goto	l12459
 18120                           
 18121                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 18122                           ;stkvar	_n @ sp[(-56)+32]
 18123  010D36  0EE8               	movlw	-24
 18124  010D38  006F FF8C  F00B    	movff	plusw1,btemp+10
 18125  010D3E  0EE9               	movlw	-23
 18126  010D40  006F FF8C  F00C    	movff	plusw1,btemp+11
 18127  010D46  0E97               	movlw	low _dbuf
 18128  010D48  240B               	addwf	(btemp+10)^0,w,c
 18129  010D4A  6ED9               	movwf	fsr2l,c
 18130  010D4C  0E02               	movlw	high _dbuf
 18131  010D4E  200C               	addwfc	(btemp+11)^0,w,c
 18132  010D50  6EDA               	movwf	fsr2h,c
 18133                           
 18134                           ;stkvar	_d @ sp[(-56)+44]
 18135  010D52  0EF4               	movlw	-12
 18136  010D54  50E3               	movf	plusw1,w,c
 18137  010D56  0F30               	addlw	48
 18138  010D58  6EDF               	movwf	indf2,c
 18139                           
 18140                           ;stkvar	_n @ sp[(-56)+32]
 18141  010D5A  0EE8               	movlw	-24
 18142  010D5C  50E3               	movf	plusw1,w,c
 18143  010D5E  0F01               	addlw	1
 18144  010D60  6E01               	movwf	btemp^0,c
 18145  010D62  0EE8               	movlw	-24
 18146  010D64  0060  F007  FFE3   	movff	btemp,plusw1
 18147  010D6A  6A01               	clrf	btemp^0,c
 18148  010D6C  0EE9               	movlw	-23
 18149  010D6E  50E3               	movf	plusw1,w,c
 18150  010D70  2001               	addwfc	btemp^0,w,c
 18151  010D72  6E01               	movwf	btemp^0,c
 18152  010D74  0EE9               	movlw	-23
 18153  010D76  0060  F007  FFE3   	movff	btemp,plusw1
 18154                           
 18155                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 18156                           ;stkvar	_w @ sp[(-56)+38]
 18157  010D7C  50E1               	movf	fsr1l,w,c
 18158  010D7E  0FEE               	addlw	-18
 18159  010D80  6ED9               	movwf	fsr2l,c
 18160  010D82  50E2               	movf	fsr1h,w,c
 18161  010D84  6EDA               	movwf	fsr2h,c
 18162  010D86  0EFF               	movlw	255
 18163  010D88  22DA               	addwfc	fsr2h,f,c
 18164  010D8A  06DE               	decf	postinc2,f,c
 18165  010D8C  0E00               	movlw	0
 18166  010D8E  5ADD               	subwfb	postdec2,f,c
 18167  010D90                     l12475:
 18168                           
 18169                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 18170                           ;stkvar	_u @ sp[(-56)+12]
 18171  010D90  0ED4               	movlw	-44
 18172  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 18173  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 18174  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 18175  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 18176                           
 18177                           ;stkvar	_l @ sp[(-60)+20]
 18178  010DAA  0ED8               	movlw	-40
 18179  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 18180  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 18181  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 18182  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 18183  010DC4  ECD7  F09E         	call	___flmul	;wreg free
 18184  010DC8  0060  F007  FFE6   	movff	btemp,postinc1
 18185  010DCE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 18186  010DD4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 18187  010DDA  0060  F013  FFE6   	movff	btemp+3,postinc1
 18188                           
 18189                           ;stkvar	_h @ sp[(-60)+24]
 18190  010DE0  0EDC               	movlw	-36
 18191  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 18192  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 18193  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 18194  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 18195  010DFA  ECC0  F0DC         	call	___flsub	;wreg free
 18196                           
 18197                           ;stkvar	_h @ sp[(-56)+24]
 18198  010DFE  0EE0               	movlw	-32
 18199  010E00  0060  F007  FFE3   	movff	btemp,plusw1
 18200  010E06  0EE1               	movlw	-31
 18201  010E08  0060  F00B  FFE3   	movff	btemp+1,plusw1
 18202  010E0E  0EE2               	movlw	-30
 18203  010E10  0060  F00F  FFE3   	movff	btemp+2,plusw1
 18204  010E16  0EE3               	movlw	-29
 18205  010E18  0060  F013  FFE3   	movff	btemp+3,plusw1
 18206                           
 18207                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 18208  010E1E  0E00               	movlw	0
 18209  010E20  6EE6               	movwf	postinc1,c
 18210  010E22  0E00               	movlw	0
 18211  010E24  6EE6               	movwf	postinc1,c
 18212  010E26  0E20               	movlw	32
 18213  010E28  6EE6               	movwf	postinc1,c
 18214  010E2A  0E41               	movlw	65
 18215  010E2C  6EE6               	movwf	postinc1,c
 18216                           
 18217                           ;stkvar	_u @ sp[(-60)+12]
 18218  010E2E  0ED0               	movlw	-48
 18219  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 18220  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 18221  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 18222  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 18223  010E48  ECCA  F0A6         	call	___fldiv	;wreg free
 18224                           
 18225                           ;stkvar	_u @ sp[(-56)+12]
 18226  010E4C  0ED4               	movlw	-44
 18227  010E4E  0060  F007  FFE3   	movff	btemp,plusw1
 18228  010E54  0ED5               	movlw	-43
 18229  010E56  0060  F00B  FFE3   	movff	btemp+1,plusw1
 18230  010E5C  0ED6               	movlw	-42
 18231  010E5E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 18232  010E64  0ED7               	movlw	-41
 18233  010E66  0060  F013  FFE3   	movff	btemp+3,plusw1
 18234                           
 18235                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 18236                           ;stkvar	_ne @ sp[(-56)+46]
 18237  010E6C  50E1               	movf	fsr1l,w,c
 18238  010E6E  0FF6               	addlw	-10
 18239  010E70  6ED9               	movwf	fsr2l,c
 18240  010E72  50E2               	movf	fsr1h,w,c
 18241  010E74  6EDA               	movwf	fsr2h,c
 18242  010E76  0EFF               	movlw	255
 18243  010E78  22DA               	addwfc	fsr2h,f,c
 18244  010E7A  06DE               	decf	postinc2,f,c
 18245  010E7C  0E00               	movlw	0
 18246  010E7E  5ADD               	subwfb	postdec2,f,c
 18247                           
 18248                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 18249                           ;stkvar	_i @ sp[(-56)+36]
 18250  010E80  0EEC               	movlw	-20
 18251  010E82  50E3               	movf	plusw1,w,c
 18252  010E84  0F01               	addlw	1
 18253  010E86  6E01               	movwf	btemp^0,c
 18254  010E88  0EEC               	movlw	-20
 18255  010E8A  0060  F007  FFE3   	movff	btemp,plusw1
 18256  010E90  6A01               	clrf	btemp^0,c
 18257  010E92  0EED               	movlw	-19
 18258  010E94  50E3               	movf	plusw1,w,c
 18259  010E96  2001               	addwfc	btemp^0,w,c
 18260  010E98  6E01               	movwf	btemp^0,c
 18261  010E9A  0EED               	movlw	-19
 18262  010E9C  0060  F007  FFE3   	movff	btemp,plusw1
 18263  010EA2                     l12483:
 18264                           
 18265                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 18266                           ;stkvar	_m @ sp[(-56)+48]
 18267                           ;stkvar	_i @ sp[(-56)+36]
 18268  010EA2  50E1               	movf	fsr1l,w,c
 18269  010EA4  0FEC               	addlw	-20
 18270  010EA6  6ED9               	movwf	fsr2l,c
 18271  010EA8  50E2               	movf	fsr1h,w,c
 18272  010EAA  6EDA               	movwf	fsr2h,c
 18273  010EAC  0EFF               	movlw	255
 18274  010EAE  22DA               	addwfc	fsr2h,f,c
 18275  010EB0  0EF8               	movlw	-8
 18276  010EB2  50E3               	movf	plusw1,w,c
 18277  010EB4  5CDE               	subwf	postinc2,w,c
 18278  010EB6  50DE               	movf	postinc2,w,c
 18279  010EB8  0A80               	xorlw	128
 18280  010EBA  6E01               	movwf	btemp^0,c
 18281  010EBC  0EF9               	movlw	-7
 18282  010EBE  50E3               	movf	plusw1,w,c
 18283  010EC0  0A80               	xorlw	128
 18284  010EC2  5801               	subwfb	btemp^0,w,c
 18285  010EC4  B0D8               	btfsc	status,0,c
 18286  010EC6  D00E               	goto	u11640
 18287                           
 18288                           ;stkvar	_n @ sp[(-56)+32]
 18289  010EC8  0EE9               	movlw	-23
 18290  010ECA  BEE3               	btfsc	plusw1,7,c
 18291  010ECC  D633               	goto	l12433
 18292  010ECE  0EE9               	movlw	-23
 18293  010ED0  50E3               	movf	plusw1,w,c
 18294  010ED2  E108               	bnz	u11640
 18295  010ED4  0EE8               	movlw	-24
 18296  010ED6  006F FF8C  F001    	movff	plusw1,btemp
 18297  010EDC  0E4B               	movlw	75
 18298  010EDE  5E01               	subwf	btemp^0,f,c
 18299  010EE0  A0D8               	btfss	status,0,c
 18300  010EE2  D628               	goto	l12433
 18301  010EE4                     u11640:
 18302                           
 18303                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 18304                           ;stkvar	_pp @ sp[(-56)+50]
 18305  010EE4  0EFA               	movlw	-6
 18306  010EE6  006F FF8C  F001    	movff	plusw1,btemp
 18307  010EEC  0EFB               	movlw	-5
 18308  010EEE  50E3               	movf	plusw1,w,c
 18309  010EF0  1001               	iorwf	btemp^0,w,c
 18310  010EF2  B4D8               	btfsc	status,2,c
 18311  010EF4  A83E               	btfss	_flags^0,4,c
 18312  010EF6  D021               	goto	l12495
 18313                           
 18314                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 18315                           ;stkvar	_n @ sp[(-56)+32]
 18316  010EF8  0EE8               	movlw	-24
 18317  010EFA  006F FF8C  F00B    	movff	plusw1,btemp+10
 18318  010F00  0EE9               	movlw	-23
 18319  010F02  006F FF8C  F00C    	movff	plusw1,btemp+11
 18320  010F08  0E97               	movlw	low _dbuf
 18321  010F0A  240B               	addwf	(btemp+10)^0,w,c
 18322  010F0C  6ED9               	movwf	fsr2l,c
 18323  010F0E  0E02               	movlw	high _dbuf
 18324  010F10  200C               	addwfc	(btemp+11)^0,w,c
 18325  010F12  6EDA               	movwf	fsr2h,c
 18326  010F14  0E2E               	movlw	46
 18327  010F16  6EDF               	movwf	indf2,c
 18328                           
 18329                           ;stkvar	_n @ sp[(-56)+32]
 18330  010F18  0EE8               	movlw	-24
 18331  010F1A  50E3               	movf	plusw1,w,c
 18332  010F1C  0F01               	addlw	1
 18333  010F1E  6E01               	movwf	btemp^0,c
 18334  010F20  0EE8               	movlw	-24
 18335  010F22  0060  F007  FFE3   	movff	btemp,plusw1
 18336  010F28  6A01               	clrf	btemp^0,c
 18337  010F2A  0EE9               	movlw	-23
 18338  010F2C  50E3               	movf	plusw1,w,c
 18339  010F2E  2001               	addwfc	btemp^0,w,c
 18340  010F30  6E01               	movwf	btemp^0,c
 18341  010F32  0EE9               	movlw	-23
 18342  010F34  0060  F007  FFE3   	movff	btemp,plusw1
 18343  010F3A                     l12495:
 18344                           
 18345                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 18346                           ;stkvar	_n @ sp[(-56)+32]
 18347  010F3A  0EE8               	movlw	-24
 18348  010F3C  006F FF8C  F00B    	movff	plusw1,btemp+10
 18349  010F42  0EE9               	movlw	-23
 18350  010F44  006F FF8C  F00C    	movff	plusw1,btemp+11
 18351  010F4A  0E97               	movlw	low _dbuf
 18352  010F4C  240B               	addwf	(btemp+10)^0,w,c
 18353  010F4E  6ED9               	movwf	fsr2l,c
 18354  010F50  0E02               	movlw	high _dbuf
 18355  010F52  200C               	addwfc	(btemp+11)^0,w,c
 18356  010F54  6EDA               	movwf	fsr2h,c
 18357  010F56  0E00               	movlw	0
 18358  010F58  6EDF               	movwf	indf2,c
 18359                           
 18360                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 18361                           ;stkvar	_nmode @ sp[(-56)+55]
 18362  010F5A  0EFF               	movlw	-1
 18363  010F5C  006F FF8C  F001    	movff	plusw1,btemp
 18364  010F62  0E65               	movlw	101
 18365  010F64  1801               	xorwf	btemp^0,w,c
 18366  010F66  A4D8               	btfss	status,2,c
 18367  010F68  EF16  F081         	goto	l12299
 18368                           
 18369                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 18370  010F6C  0E4F               	movlw	79
 18371  010F6E  6E0B               	movwf	(btemp+10)^0,c
 18372  010F70  0E00               	movlw	0
 18373  010F72  6E0C               	movwf	(btemp+11)^0,c
 18374                           
 18375                           ;stkvar	_i @ sp[(-56)+36]
 18376  010F74  0EEC               	movlw	-20
 18377  010F76  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18378  010F7C  0EED               	movlw	-19
 18379  010F7E  0060  F033  FFE3   	movff	btemp+11,plusw1
 18380                           
 18381                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 18382                           ;stkvar	_i @ sp[(-56)+36]
 18383  010F84  0EEC               	movlw	-20
 18384  010F86  006F FF8C  F00B    	movff	plusw1,btemp+10
 18385  010F8C  0EED               	movlw	-19
 18386  010F8E  006F FF8C  F00C    	movff	plusw1,btemp+11
 18387  010F94  0E97               	movlw	low _dbuf
 18388  010F96  240B               	addwf	(btemp+10)^0,w,c
 18389  010F98  6ED9               	movwf	fsr2l,c
 18390  010F9A  0E02               	movlw	high _dbuf
 18391  010F9C  200C               	addwfc	(btemp+11)^0,w,c
 18392  010F9E  6EDA               	movwf	fsr2h,c
 18393  010FA0  0E00               	movlw	0
 18394  010FA2  6EDF               	movwf	indf2,c
 18395                           
 18396                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 18397                           ;stkvar	_sign @ sp[(-56)+42]
 18398  010FA4  0EF2               	movlw	-14
 18399  010FA6  6AE3               	clrf	plusw1,c
 18400  010FA8  0EF3               	movlw	-13
 18401  010FAA  6AE3               	clrf	plusw1,c
 18402                           
 18403                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 18404                           ;stkvar	_e @ sp[(-56)+34]
 18405  010FAC  0EEB               	movlw	-21
 18406  010FAE  AEE3               	btfss	plusw1,7,c
 18407  010FB0  D012               	goto	l12509
 18408                           
 18409                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 18410  010FB2  0E01               	movlw	1
 18411  010FB4  6E0B               	movwf	(btemp+10)^0,c
 18412  010FB6  0E00               	movlw	0
 18413  010FB8  6E0C               	movwf	(btemp+11)^0,c
 18414                           
 18415                           ;stkvar	_sign @ sp[(-56)+42]
 18416  010FBA  0EF2               	movlw	-14
 18417  010FBC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18418  010FC2  0EF3               	movlw	-13
 18419  010FC4  0060  F033  FFE3   	movff	btemp+11,plusw1
 18420                           
 18421                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 18422                           ;stkvar	_e @ sp[(-56)+34]
 18423                           ;stkvar	_e @ sp[(-56)+34]
 18424  010FCA  0EEA               	movlw	-22
 18425  010FCC  6CE3               	negf	plusw1,c
 18426  010FCE  0EEB               	movlw	-21
 18427  010FD0  1EE3               	comf	plusw1,f,c
 18428  010FD2  B0D8               	btfsc	status,0,c
 18429  010FD4  2AE3               	incf	plusw1,f,c
 18430  010FD6                     l12509:
 18431                           
 18432                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 18433  010FD6  0E02               	movlw	2
 18434  010FD8  6E0B               	movwf	(btemp+10)^0,c
 18435  010FDA  0E00               	movlw	0
 18436  010FDC  6E0C               	movwf	(btemp+11)^0,c
 18437                           
 18438                           ;stkvar	_p @ sp[(-56)+40]
 18439  010FDE  0EF0               	movlw	-16
 18440  010FE0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18441  010FE6  0EF1               	movlw	-15
 18442  010FE8  0060  F033  FFE3   	movff	btemp+11,plusw1
 18443                           
 18444                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 18445  010FEE  D051               	goto	l12521
 18446  010FF0                     l12511:
 18447                           
 18448                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 18449                           ;stkvar	_i @ sp[(-56)+36]
 18450  010FF0  50E1               	movf	fsr1l,w,c
 18451  010FF2  0FEC               	addlw	-20
 18452  010FF4  6ED9               	movwf	fsr2l,c
 18453  010FF6  50E2               	movf	fsr1h,w,c
 18454  010FF8  6EDA               	movwf	fsr2h,c
 18455  010FFA  0EFF               	movlw	255
 18456  010FFC  22DA               	addwfc	fsr2h,f,c
 18457  010FFE  06DE               	decf	postinc2,f,c
 18458  011000  0E00               	movlw	0
 18459  011002  5ADD               	subwfb	postdec2,f,c
 18460                           
 18461                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 18462                           ;stkvar	_i @ sp[(-56)+36]
 18463  011004  0EEC               	movlw	-20
 18464  011006  006F FF8C  F00B    	movff	plusw1,btemp+10
 18465  01100C  0EED               	movlw	-19
 18466  01100E  006F FF8C  F00C    	movff	plusw1,btemp+11
 18467  011014  0E97               	movlw	low _dbuf
 18468  011016  240B               	addwf	(btemp+10)^0,w,c
 18469  011018  6ED9               	movwf	fsr2l,c
 18470  01101A  0E02               	movlw	high _dbuf
 18471  01101C  200C               	addwfc	(btemp+11)^0,w,c
 18472  01101E  6EDA               	movwf	fsr2h,c
 18473  011020  0E0A               	movlw	10
 18474  011022  6EE6               	movwf	postinc1,c
 18475  011024  0E00               	movlw	0
 18476  011026  6EE6               	movwf	postinc1,c
 18477                           
 18478                           ;stkvar	_e @ sp[(-58)+34]
 18479  011028  0EE8               	movlw	-24
 18480  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 18481  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 18482  011036  EC6A  F0CD         	call	___awmod	;wreg free
 18483  01103A  5001               	movf	btemp^0,w,c
 18484  01103C  0F30               	addlw	48
 18485  01103E  6EDF               	movwf	indf2,c
 18486                           
 18487                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 18488  011040  0E0A               	movlw	10
 18489  011042  6EE6               	movwf	postinc1,c
 18490  011044  0E00               	movlw	0
 18491  011046  6EE6               	movwf	postinc1,c
 18492                           
 18493                           ;stkvar	_e @ sp[(-58)+34]
 18494  011048  0EE8               	movlw	-24
 18495  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 18496  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 18497  011056  EC5F  F0CA         	call	___awdiv	;wreg free
 18498                           
 18499                           ;stkvar	_e @ sp[(-56)+34]
 18500  01105A  0EEA               	movlw	-22
 18501  01105C  0060  F007  FFE3   	movff	btemp,plusw1
 18502  011062  0EEB               	movlw	-21
 18503  011064  0060  F00B  FFE3   	movff	btemp+1,plusw1
 18504                           
 18505                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 18506                           ;stkvar	_p @ sp[(-56)+40]
 18507  01106A  50E1               	movf	fsr1l,w,c
 18508  01106C  0FF0               	addlw	-16
 18509  01106E  6ED9               	movwf	fsr2l,c
 18510  011070  50E2               	movf	fsr1h,w,c
 18511  011072  6EDA               	movwf	fsr2h,c
 18512  011074  0EFF               	movlw	255
 18513  011076  22DA               	addwfc	fsr2h,f,c
 18514  011078  06DE               	decf	postinc2,f,c
 18515  01107A  0E00               	movlw	0
 18516  01107C  5ADD               	subwfb	postdec2,f,c
 18517                           
 18518                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 18519                           ;stkvar	_w @ sp[(-56)+38]
 18520  01107E  50E1               	movf	fsr1l,w,c
 18521  011080  0FEE               	addlw	-18
 18522  011082  6ED9               	movwf	fsr2l,c
 18523  011084  50E2               	movf	fsr1h,w,c
 18524  011086  6EDA               	movwf	fsr2h,c
 18525  011088  0EFF               	movlw	255
 18526  01108A  22DA               	addwfc	fsr2h,f,c
 18527  01108C  06DE               	decf	postinc2,f,c
 18528  01108E  0E00               	movlw	0
 18529  011090  5ADD               	subwfb	postdec2,f,c
 18530  011092                     l12521:
 18531                           
 18532                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 18533                           ;stkvar	_e @ sp[(-56)+34]
 18534  011092  0EEA               	movlw	-22
 18535  011094  006F FF8C  F001    	movff	plusw1,btemp
 18536  01109A  0EEB               	movlw	-21
 18537  01109C  50E3               	movf	plusw1,w,c
 18538  01109E  1001               	iorwf	btemp^0,w,c
 18539  0110A0  A4D8               	btfss	status,2,c
 18540  0110A2  D7A6               	goto	l12511
 18541                           
 18542                           ;stkvar	_p @ sp[(-56)+40]
 18543  0110A4  0EF1               	movlw	-15
 18544  0110A6  BEE3               	btfsc	plusw1,7,c
 18545  0110A8  D007               	goto	u11700
 18546  0110AA  0EF1               	movlw	-15
 18547  0110AC  50E3               	movf	plusw1,w,c
 18548  0110AE  E1A0               	bnz	l12511
 18549  0110B0  0EF0               	movlw	-16
 18550  0110B2  04E3               	decf	plusw1,w,c
 18551  0110B4  B0D8               	btfsc	status,0,c
 18552  0110B6  D79C               	goto	l12511
 18553  0110B8                     u11700:
 18554                           
 18555                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 18556                           ;stkvar	_i @ sp[(-56)+36]
 18557  0110B8  50E1               	movf	fsr1l,w,c
 18558  0110BA  0FEC               	addlw	-20
 18559  0110BC  6ED9               	movwf	fsr2l,c
 18560  0110BE  50E2               	movf	fsr1h,w,c
 18561  0110C0  6EDA               	movwf	fsr2h,c
 18562  0110C2  0EFF               	movlw	255
 18563  0110C4  22DA               	addwfc	fsr2h,f,c
 18564  0110C6  06DE               	decf	postinc2,f,c
 18565  0110C8  0E00               	movlw	0
 18566  0110CA  5ADD               	subwfb	postdec2,f,c
 18567                           
 18568                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 18569                           ;stkvar	_sign @ sp[(-56)+42]
 18570  0110CC  0EF2               	movlw	-14
 18571  0110CE  006F FF8C  F001    	movff	plusw1,btemp
 18572  0110D4  0EF3               	movlw	-13
 18573  0110D6  50E3               	movf	plusw1,w,c
 18574  0110D8  1001               	iorwf	btemp^0,w,c
 18575  0110DA  A4D8               	btfss	status,2,c
 18576  0110DC  D002               	goto	l12531
 18577  0110DE  0E2B               	movlw	43
 18578  0110E0  D001               	goto	L19
 18579  0110E2                     l12531:
 18580  0110E2  0E2D               	movlw	45
 18581  0110E4                     L19:
 18582  0110E4  6E0B               	movwf	(btemp+10)^0,c
 18583  0110E6  0E00               	movlw	0
 18584  0110E8  6E0C               	movwf	(btemp+11)^0,c
 18585                           
 18586                           ;stkvar	_efgtoa$5667 @ sp[(-56)+4]
 18587  0110EA  0ECC               	movlw	-52
 18588  0110EC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18589  0110F2  0ECD               	movlw	-51
 18590  0110F4  0060  F033  FFE3   	movff	btemp+11,plusw1
 18591                           
 18592                           ;stkvar	_efgtoa$5667 @ sp[(-56)+4]
 18593                           ;stkvar	_i @ sp[(-56)+36]
 18594  0110FA  0EEC               	movlw	-20
 18595  0110FC  006F FF8C  F00B    	movff	plusw1,btemp+10
 18596  011102  0EED               	movlw	-19
 18597  011104  006F FF8C  F00C    	movff	plusw1,btemp+11
 18598  01110A  0E97               	movlw	low _dbuf
 18599  01110C  240B               	addwf	(btemp+10)^0,w,c
 18600  01110E  6ED9               	movwf	fsr2l,c
 18601  011110  0E02               	movlw	high _dbuf
 18602  011112  200C               	addwfc	(btemp+11)^0,w,c
 18603  011114  6EDA               	movwf	fsr2h,c
 18604  011116  0ECC               	movlw	-52
 18605  011118  006F FF8F FFDF     	movff	plusw1,indf2
 18606                           
 18607                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 18608                           ;stkvar	_w @ sp[(-56)+38]
 18609  01111E  50E1               	movf	fsr1l,w,c
 18610  011120  0FEE               	addlw	-18
 18611  011122  6ED9               	movwf	fsr2l,c
 18612  011124  50E2               	movf	fsr1h,w,c
 18613  011126  6EDA               	movwf	fsr2h,c
 18614  011128  0EFF               	movlw	255
 18615  01112A  22DA               	addwfc	fsr2h,f,c
 18616  01112C  06DE               	decf	postinc2,f,c
 18617  01112E  0E00               	movlw	0
 18618  011130  5ADD               	subwfb	postdec2,f,c
 18619                           
 18620                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 18621                           ;stkvar	_i @ sp[(-56)+36]
 18622  011132  50E1               	movf	fsr1l,w,c
 18623  011134  0FEC               	addlw	-20
 18624  011136  6ED9               	movwf	fsr2l,c
 18625  011138  50E2               	movf	fsr1h,w,c
 18626  01113A  6EDA               	movwf	fsr2h,c
 18627  01113C  0EFF               	movlw	255
 18628  01113E  22DA               	addwfc	fsr2h,f,c
 18629  011140  06DE               	decf	postinc2,f,c
 18630  011142  0E00               	movlw	0
 18631  011144  5ADD               	subwfb	postdec2,f,c
 18632  011146  0EBF               	movlw	191
 18633  011148  6E0B               	movwf	(btemp+10)^0,c
 18634  01114A  0EFF               	movlw	255
 18635  01114C  6E0C               	movwf	(btemp+11)^0,c
 18636                           
 18637                           ;stkvar	_c @ sp[(-56)+-7]
 18638  01114E  0EC1               	movlw	-63
 18639  011150  50E3               	movf	plusw1,w,c
 18640  011152  6E09               	movwf	(btemp+8)^0,c
 18641  011154  6A0A               	clrf	(btemp+9)^0,c
 18642  011156  500B               	movf	(btemp+10)^0,w,c
 18643  011158  2609               	addwf	(btemp+8)^0,f,c
 18644  01115A  500C               	movf	(btemp+11)^0,w,c
 18645  01115C  220A               	addwfc	(btemp+9)^0,f,c
 18646  01115E  500A               	movf	(btemp+9)^0,w,c
 18647  011160  E106               	bnz	u11720
 18648  011162  0E1A               	movlw	26
 18649  011164  5C09               	subwf	(btemp+8)^0,w,c
 18650  011166  B0D8               	btfsc	status,0,c
 18651  011168  D002               	goto	u11720
 18652  01116A  0E01               	movlw	1
 18653  01116C  D001               	goto	u11730
 18654  01116E                     u11720:
 18655  01116E  0E00               	movlw	0
 18656  011170                     u11730:
 18657  011170  6E0B               	movwf	(btemp+10)^0,c
 18658  011172  6A0C               	clrf	(btemp+11)^0,c
 18659                           
 18660                           ;stkvar	_efgtoa$5669 @ sp[(-56)+0]
 18661  011174  0EC8               	movlw	-56
 18662  011176  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18663  01117C  0EC9               	movlw	-55
 18664  01117E  0060  F033  FFE3   	movff	btemp+11,plusw1
 18665                           
 18666                           ;stkvar	_efgtoa$5669 @ sp[(-56)+0]
 18667  011184  0EC8               	movlw	-56
 18668  011186  006F FF8C  F001    	movff	plusw1,btemp
 18669  01118C  0EC9               	movlw	-55
 18670  01118E  50E3               	movf	plusw1,w,c
 18671  011190  1001               	iorwf	btemp^0,w,c
 18672  011192  A4D8               	btfss	status,2,c
 18673  011194  D002               	goto	l12547
 18674  011196  0E65               	movlw	101
 18675  011198  D001               	goto	L20
 18676  01119A                     l12547:
 18677  01119A  0E45               	movlw	69
 18678  01119C                     L20:
 18679  01119C  6E0B               	movwf	(btemp+10)^0,c
 18680  01119E  0E00               	movlw	0
 18681  0111A0  6E0C               	movwf	(btemp+11)^0,c
 18682                           
 18683                           ;stkvar	_efgtoa$5668 @ sp[(-56)+2]
 18684  0111A2  0ECA               	movlw	-54
 18685  0111A4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18686  0111AA  0ECB               	movlw	-53
 18687  0111AC  0060  F033  FFE3   	movff	btemp+11,plusw1
 18688                           
 18689                           ;stkvar	_efgtoa$5668 @ sp[(-56)+2]
 18690                           ;stkvar	_i @ sp[(-56)+36]
 18691  0111B2  0EEC               	movlw	-20
 18692  0111B4  006F FF8C  F00B    	movff	plusw1,btemp+10
 18693  0111BA  0EED               	movlw	-19
 18694  0111BC  006F FF8C  F00C    	movff	plusw1,btemp+11
 18695  0111C2  0E97               	movlw	low _dbuf
 18696  0111C4  240B               	addwf	(btemp+10)^0,w,c
 18697  0111C6  6ED9               	movwf	fsr2l,c
 18698  0111C8  0E02               	movlw	high _dbuf
 18699  0111CA  200C               	addwfc	(btemp+11)^0,w,c
 18700  0111CC  6EDA               	movwf	fsr2h,c
 18701  0111CE  0ECA               	movlw	-54
 18702  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 18703                           
 18704                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 18705                           ;stkvar	_w @ sp[(-56)+38]
 18706  0111D6  50E1               	movf	fsr1l,w,c
 18707  0111D8  0FEE               	addlw	-18
 18708  0111DA  6ED9               	movwf	fsr2l,c
 18709  0111DC  50E2               	movf	fsr1h,w,c
 18710  0111DE  6EDA               	movwf	fsr2h,c
 18711  0111E0  0EFF               	movlw	255
 18712  0111E2  22DA               	addwfc	fsr2h,f,c
 18713  0111E4  06DE               	decf	postinc2,f,c
 18714  0111E6  0E00               	movlw	0
 18715  0111E8  5ADD               	subwfb	postdec2,f,c
 18716                           
 18717                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 18718                           ;stkvar	_i @ sp[(-56)+36]
 18719  0111EA  0EEC               	movlw	-20
 18720  0111EC  006F FF8C  F00B    	movff	plusw1,btemp+10
 18721  0111F2  0EED               	movlw	-19
 18722  0111F4  006F FF8C  F00C    	movff	plusw1,btemp+11
 18723  0111FA  0E97               	movlw	low _dbuf
 18724  0111FC  240B               	addwf	(btemp+10)^0,w,c
 18725  0111FE  6E09               	movwf	(btemp+8)^0,c
 18726  011200  0E02               	movlw	high _dbuf
 18727  011202  200C               	addwfc	(btemp+11)^0,w,c
 18728  011204  6E0A               	movwf	(btemp+9)^0,c
 18729  011206  0060  F027  FFE6   	movff	btemp+8,postinc1
 18730  01120C  0060  F02B  FFE6   	movff	btemp+9,postinc1
 18731                           
 18732                           ;stkvar	_n @ sp[(-58)+32]
 18733  011212  0E97               	movlw	low _dbuf
 18734  011214  6E0B               	movwf	(btemp+10)^0,c
 18735  011216  0E02               	movlw	high _dbuf
 18736  011218  6E0C               	movwf	(btemp+11)^0,c
 18737  01121A  0EE6               	movlw	-26
 18738  01121C  50E3               	movf	plusw1,w,c
 18739  01121E  260B               	addwf	(btemp+10)^0,f,c
 18740  011220  0EE7               	movlw	-25
 18741  011222  50E3               	movf	plusw1,w,c
 18742  011224  220C               	addwfc	(btemp+11)^0,f,c
 18743  011226  0060  F02F  FFE6   	movff	btemp+10,postinc1
 18744  01122C  0060  F033  FFE6   	movff	btemp+11,postinc1
 18745  011232  ECD5  F0D1         	call	_strcpy	;wreg free
 18746  011236  EF16  F081         	goto	l12299
 18747  01123A                     l2269:
 18748                           
 18749                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 18750  01123A  0EC1               	movlw	193
 18751  01123C  26E1               	addwf	fsr1l,f,c
 18752  01123E  0EFF               	movlw	255
 18753  011240  22E2               	addwfc	fsr1h,f,c
 18754  011242  0012               	return		;funcret
 18755  011244                     __end_of_efgtoa:
 18756                           	opt callstack 0
 18757                           
 18758 ;; *************** function _tolower *****************
 18759 ;; Defined at:
 18760 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 18761 ;; Parameters:    Size  Location     Type
 18762 ;;  c               2  [STACK] int 
 18763 ;; Auto vars:     Size  Location     Type
 18764 ;;		None
 18765 ;; Return value:  Size  Location     Type
 18766 ;;                  2  [STACK] int 
 18767 ;; Registers used:
 18768 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 18769 ;; Tracked objects:
 18770 ;;		On entry : 0/0
 18771 ;;		On exit  : 0/0
 18772 ;;		Unchanged: 0/0
 18773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18778 ;;Total ram usage:        0 bytes
 18779 ;; Hardware stack levels used:    1
 18780 ;; Hardware stack levels required when called:   16
 18781 ;; This function calls:
 18782 ;;		_isupper
 18783 ;; This function is called by:
 18784 ;;		_efgtoa
 18785 ;;		_vfpfcnvrt
 18786 ;; This function uses a reentrant model
 18787 ;;
 18788                           
 18789                           	psect	text63
 18790  01AFB2                     __ptext63:
 18791                           	opt callstack 0
 18792  01AFB2                     _tolower:
 18793                           	opt callstack 0
 18794                           
 18795                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18796  01AFB2  52E6               	movf	postinc1,f,c
 18797  01AFB4  52E6               	movf	postinc1,f,c
 18798                           
 18799                           ;stkvar	_c @ sp[(-2)+-2]
 18800                           
 18801                           ;incstack = 0
 18802 ;; hardware stack exceeded
 18803  01AFB6  0EFC               	movlw	-4
 18804  01AFB8  50E3               	movf	plusw1,w,c
 18805  01AFBA  0FBF               	addlw	191
 18806  01AFBC  6E0B               	movwf	(btemp+10)^0,c
 18807  01AFBE  0EFD               	movlw	-3
 18808  01AFC0  006F FF8C  F00C    	movff	plusw1,btemp+11
 18809  01AFC6  0EFF               	movlw	255
 18810  01AFC8  220C               	addwfc	(btemp+11)^0,f,c
 18811  01AFCA  500C               	movf	(btemp+11)^0,w,c
 18812  01AFCC  E106               	bnz	u6170
 18813  01AFCE  0E1A               	movlw	26
 18814  01AFD0  5C0B               	subwf	(btemp+10)^0,w,c
 18815  01AFD2  B0D8               	btfsc	status,0,c
 18816  01AFD4  D002               	goto	u6170
 18817  01AFD6  0E01               	movlw	1
 18818  01AFD8  D001               	goto	u6180
 18819  01AFDA                     u6170:
 18820  01AFDA  0E00               	movlw	0
 18821  01AFDC                     u6180:
 18822  01AFDC  6E0B               	movwf	(btemp+10)^0,c
 18823  01AFDE  6A0C               	clrf	(btemp+11)^0,c
 18824                           
 18825                           ;stkvar	_tolower$6488 @ sp[(-2)+0]
 18826  01AFE0  0EFE               	movlw	-2
 18827  01AFE2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18828  01AFE8  0EFF               	movlw	-1
 18829  01AFEA  0060  F033  FFE3   	movff	btemp+11,plusw1
 18830                           
 18831                           ;stkvar	_tolower$6488 @ sp[(-2)+0]
 18832  01AFF0  0EFE               	movlw	-2
 18833  01AFF2  006F FF8C  F001    	movff	plusw1,btemp
 18834  01AFF8  0EFF               	movlw	-1
 18835  01AFFA  50E3               	movf	plusw1,w,c
 18836  01AFFC  1001               	iorwf	btemp^0,w,c
 18837  01AFFE  B4D8               	btfsc	status,2,c
 18838  01B000  D00D               	goto	l8215
 18839                           
 18840                           ;stkvar	_c @ sp[(-2)+-2]
 18841  01B002  0EFC               	movlw	-4
 18842  01B004  006F FF8C  F001    	movff	plusw1,btemp
 18843  01B00A  0EFD               	movlw	-3
 18844  01B00C  006F FF8C  F002    	movff	plusw1,btemp+1
 18845  01B012  0E20               	movlw	32
 18846  01B014  1201               	iorwf	btemp^0,f,c
 18847  01B016  0E00               	movlw	0
 18848  01B018  1202               	iorwf	(btemp+1)^0,f,c
 18849  01B01A  D008               	goto	l3541
 18850  01B01C                     l8215:
 18851                           
 18852                           ;stkvar	_c @ sp[(-2)+-2]
 18853  01B01C  0EFC               	movlw	-4
 18854  01B01E  006F FF8C  F001    	movff	plusw1,btemp
 18855  01B024  0EFD               	movlw	-3
 18856  01B026  006F FF8C  F002    	movff	plusw1,btemp+1
 18857  01B02C                     l3541:
 18858                           
 18859                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 18860  01B02C  52E5               	movf	postdec1,f,c
 18861  01B02E  52E5               	movf	postdec1,f,c
 18862  01B030  52E5               	movf	postdec1,f,c
 18863  01B032  52E5               	movf	postdec1,f,c
 18864  01B034  0012               	return		;funcret
 18865  01B036                     __end_of_tolower:
 18866                           	opt callstack 0
 18867                           
 18868 ;; *************** function _isupper *****************
 18869 ;; Defined at:
 18870 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 18871 ;; Parameters:    Size  Location     Type
 18872 ;;  c               2  [STACK] int 
 18873 ;; Auto vars:     Size  Location     Type
 18874 ;;		None
 18875 ;; Return value:  Size  Location     Type
 18876 ;;                  2  [STACK] int 
 18877 ;; Registers used:
 18878 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 18879 ;; Tracked objects:
 18880 ;;		On entry : 0/0
 18881 ;;		On exit  : 0/0
 18882 ;;		Unchanged: 0/0
 18883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18888 ;;Total ram usage:        0 bytes
 18889 ;; Hardware stack levels used:    1
 18890 ;; Hardware stack levels required when called:   15
 18891 ;; This function calls:
 18892 ;;		Nothing
 18893 ;; This function is called by:
 18894 ;;		_efgtoa
 18895 ;;		_xtoa
 18896 ;;		_vfpfcnvrt
 18897 ;;		_tolower
 18898 ;; This function uses a reentrant model
 18899 ;;
 18900                           
 18901                           	psect	text64
 18902  01BE10                     __ptext64:
 18903                           	opt callstack 0
 18904  01BE10                     _isupper:
 18905                           	opt callstack 0
 18906                           
 18907                           ;stkvar	_c @ sp[(0)+-2]
 18908                           
 18909                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18910                           ;incstack = 0
 18911 ;; hardware stack exceeded
 18912  01BE10  0EFE               	movlw	-2
 18913  01BE12  50E3               	movf	plusw1,w,c
 18914  01BE14  0FBF               	addlw	191
 18915  01BE16  6E0B               	movwf	(btemp+10)^0,c
 18916  01BE18  0EFF               	movlw	-1
 18917  01BE1A  006F FF8C  F00C    	movff	plusw1,btemp+11
 18918  01BE20  0EFF               	movlw	255
 18919  01BE22  220C               	addwfc	(btemp+11)^0,f,c
 18920  01BE24  500C               	movf	(btemp+11)^0,w,c
 18921  01BE26  E106               	bnz	u5520
 18922  01BE28  0E1A               	movlw	26
 18923  01BE2A  5C0B               	subwf	(btemp+10)^0,w,c
 18924  01BE2C  B0D8               	btfsc	status,0,c
 18925  01BE2E  D002               	goto	u5520
 18926  01BE30  0E01               	movlw	1
 18927  01BE32  D001               	goto	u5530
 18928  01BE34                     u5520:
 18929  01BE34  0E00               	movlw	0
 18930  01BE36                     u5530:
 18931  01BE36  6E01               	movwf	btemp^0,c
 18932  01BE38  6A02               	clrf	(btemp+1)^0,c
 18933                           
 18934                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 18935  01BE3A  52E5               	movf	postdec1,f,c
 18936  01BE3C  52E5               	movf	postdec1,f,c
 18937  01BE3E  0012               	return		;funcret
 18938  01BE40                     __end_of_isupper:
 18939                           	opt callstack 0
 18940                           
 18941 ;; *************** function _strcpy *****************
 18942 ;; Defined at:
 18943 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 18944 ;; Parameters:    Size  Location     Type
 18945 ;;  dest            2  [STACK] PTR unsigned char 
 18946 ;;		 -> dbuf(80), 
 18947 ;;  src             2  [STACK] PTR const unsigned char 
 18948 ;;		 -> STR_70(4), STR_69(4), STR_66(4), STR_65(4), 
 18949 ;;		 -> dbuf(80), 
 18950 ;; Auto vars:     Size  Location     Type
 18951 ;;  d               2  [STACK] PTR unsigned char 
 18952 ;;		 -> dbuf(80), 
 18953 ;;  s               2  [STACK] PTR const unsigned char 
 18954 ;;		 -> STR_70(4), STR_69(4), STR_66(4), STR_65(4), 
 18955 ;;		 -> dbuf(80), 
 18956 ;; Return value:  Size  Location     Type
 18957 ;;                  2  [STACK] PTR unsigned char 
 18958 ;; Registers used:
 18959 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 18960 ;; Tracked objects:
 18961 ;;		On entry : 0/0
 18962 ;;		On exit  : 0/0
 18963 ;;		Unchanged: 0/0
 18964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18968 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18969 ;;Total ram usage:        0 bytes
 18970 ;; Hardware stack levels used:    1
 18971 ;; Hardware stack levels required when called:   15
 18972 ;; This function calls:
 18973 ;;		Nothing
 18974 ;; This function is called by:
 18975 ;;		_efgtoa
 18976 ;; This function uses a reentrant model
 18977 ;;
 18978                           
 18979                           	psect	text65
 18980  01A3AA                     __ptext65:
 18981                           	opt callstack 0
 18982  01A3AA                     _strcpy:
 18983                           	opt callstack 0
 18984                           
 18985                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18986  01A3AA  52E6               	movf	postinc1,f,c
 18987  01A3AC  52E6               	movf	postinc1,f,c
 18988  01A3AE  52E6               	movf	postinc1,f,c
 18989  01A3B0  52E6               	movf	postinc1,f,c
 18990                           
 18991                           ;stkvar	_src @ sp[(-4)+-4]
 18992                           
 18993                           ;incstack = 0
 18994 ;; hardware stack exceeded
 18995  01A3B2  0EF8               	movlw	-8
 18996  01A3B4  006F FF8C  F00B    	movff	plusw1,btemp+10
 18997  01A3BA  0EF9               	movlw	-7
 18998  01A3BC  006F FF8C  F00C    	movff	plusw1,btemp+11
 18999                           
 19000                           ;stkvar	_s @ sp[(-4)+2]
 19001  01A3C2  0EFF               	movlw	-1
 19002  01A3C4  0060  F033  FFE3   	movff	btemp+11,plusw1
 19003  01A3CA  0EFE               	movlw	-2
 19004  01A3CC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19005                           
 19006                           ;stkvar	_dest @ sp[(-4)+-2]
 19007  01A3D2  0EFA               	movlw	-6
 19008  01A3D4  006F FF8C  F00B    	movff	plusw1,btemp+10
 19009  01A3DA  0EFB               	movlw	-5
 19010  01A3DC  006F FF8C  F00C    	movff	plusw1,btemp+11
 19011                           
 19012                           ;stkvar	_d @ sp[(-4)+0]
 19013  01A3E2  0EFD               	movlw	-3
 19014  01A3E4  0060  F033  FFE3   	movff	btemp+11,plusw1
 19015  01A3EA  0EFC               	movlw	-4
 19016  01A3EC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19017  01A3F2                     l12161:
 19018                           
 19019                           ;stkvar	_s @ sp[(-4)+2]
 19020  01A3F2  50E1               	movf	fsr1l,w,c
 19021  01A3F4  0FFE               	addlw	-2
 19022  01A3F6  6ED9               	movwf	fsr2l,c
 19023  01A3F8  50E2               	movf	fsr1h,w,c
 19024  01A3FA  6EDA               	movwf	fsr2h,c
 19025  01A3FC  0EFF               	movlw	255
 19026  01A3FE  22DA               	addwfc	fsr2h,f,c
 19027  01A400  006F FF7C  F00B    	movff	indf2,btemp+10
 19028  01A406  0E01               	movlw	1
 19029  01A408  26DE               	addwf	postinc2,f,c
 19030  01A40A  006F FF7C  F00C    	movff	indf2,btemp+11
 19031  01A410  0E00               	movlw	0
 19032  01A412  22DD               	addwfc	postdec2,f,c
 19033  01A414  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 19034  01A41A  0060  F033  FFF7   	movff	btemp+11,tblptrh
 19035  01A420  0E00               	movlw	low (__mediumconst shr (0+16))
 19036  01A422  6EF8               	movwf	tblptru,c
 19037                           
 19038                           ;stkvar	_d @ sp[(-4)+0]
 19039  01A424  50E1               	movf	fsr1l,w,c
 19040  01A426  0FFC               	addlw	-4
 19041  01A428  6ED9               	movwf	fsr2l,c
 19042  01A42A  50E2               	movf	fsr1h,w,c
 19043  01A42C  6EDA               	movwf	fsr2h,c
 19044  01A42E  0EFF               	movlw	255
 19045  01A430  22DA               	addwfc	fsr2h,f,c
 19046  01A432  006F FF7C  F00B    	movff	indf2,btemp+10
 19047  01A438  0E01               	movlw	1
 19048  01A43A  26DE               	addwf	postinc2,f,c
 19049  01A43C  006F FF7C  F00C    	movff	indf2,btemp+11
 19050  01A442  0E00               	movlw	0
 19051  01A444  22DD               	addwfc	postdec2,f,c
 19052  01A446  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 19053  01A44C  0060  F033  FFDA   	movff	btemp+11,fsr2h
 19054  01A452  0E1F               	movlw	(high __ramtop+-1)
 19055  01A454  64F7               	cpfsgt	tblptrh,c
 19056  01A456  D003               	bra	u11027
 19057  01A458  0008               	tblrd		*
 19058  01A45A  50F5               	movf	tablat,w,c
 19059  01A45C  D007               	bra	u11020
 19060  01A45E                     u11027:
 19061  01A45E  006F FFDB FFE9     	movff	tblptrl,fsr0l
 19062  01A464  006F FFDF FFEA     	movff	tblptrh,fsr0h
 19063  01A46A  50EF               	movf	indf0,w,c
 19064  01A46C                     u11020:
 19065  01A46C  6EDF               	movwf	indf2,c
 19066  01A46E  50DF               	movf	indf2,w,c
 19067  01A470  A4D8               	btfss	status,2,c
 19068  01A472  D7BF               	goto	l12161
 19069                           
 19070                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 19071  01A474  0EF8               	movlw	248
 19072  01A476  26E1               	addwf	fsr1l,f,c
 19073  01A478  0EFF               	movlw	255
 19074  01A47A  22E2               	addwfc	fsr1h,f,c
 19075  01A47C  0012               	return		;funcret
 19076  01A47E                     __end_of_strcpy:
 19077                           	opt callstack 0
 19078                           
 19079 ;; *************** function _floorf *****************
 19080 ;; Defined at:
 19081 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 19082 ;; Parameters:    Size  Location     Type
 19083 ;;  x               4  [STACK] float 
 19084 ;; Auto vars:     Size  Location     Type
 19085 ;;  u               4  [STACK] struct .
 19086 ;;  m               4  [STACK] unsigned long 
 19087 ;;  e               2  [STACK] int 
 19088 ;; Return value:  Size  Location     Type
 19089 ;;                  4  [STACK] float 
 19090 ;; Registers used:
 19091 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 19092 ;; Tracked objects:
 19093 ;;		On entry : 0/0
 19094 ;;		On exit  : 0/0
 19095 ;;		Unchanged: 0/0
 19096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19101 ;;Total ram usage:        0 bytes
 19102 ;; Hardware stack levels used:    1
 19103 ;; Hardware stack levels required when called:   15
 19104 ;; This function calls:
 19105 ;;		Nothing
 19106 ;; This function is called by:
 19107 ;;		_efgtoa
 19108 ;; This function uses a reentrant model
 19109 ;;
 19110                           
 19111                           	psect	text66
 19112  0164A8                     __ptext66:
 19113                           	opt callstack 0
 19114  0164A8                     _floorf:
 19115                           	opt callstack 0
 19116                           
 19117                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 19118  0164A8  0E0A               	movlw	10
 19119  0164AA  26E1               	addwf	fsr1l,f,c
 19120  0164AC  0E00               	movlw	0
 19121  0164AE  22E2               	addwfc	fsr1h,f,c
 19122                           
 19123                           ;incstack = 0
 19124 ;; hardware stack exceeded
 19125  0164B0  0060  F79C  F009   	movff	floorf@F524,btemp+8
 19126  0164B6  0060  F7A0  F00A   	movff	floorf@F524+1,btemp+9
 19127  0164BC  0060  F7A4  F00B   	movff	floorf@F524+2,btemp+10
 19128  0164C2  0060  F7A8  F00C   	movff	floorf@F524+3,btemp+11
 19129                           
 19130                           ;stkvar	_u @ sp[(-10)+0]
 19131  0164C8  0EF6               	movlw	-10
 19132  0164CA  0060  F027  FFE3   	movff	btemp+8,plusw1
 19133  0164D0  0EF7               	movlw	-9
 19134  0164D2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 19135  0164D8  0EF8               	movlw	-8
 19136  0164DA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19137  0164E0  0EF9               	movlw	-7
 19138  0164E2  0060  F033  FFE3   	movff	btemp+11,plusw1
 19139                           
 19140                           ;stkvar	_x @ sp[(-10)+-4]
 19141  0164E8  0EF2               	movlw	-14
 19142  0164EA  006F FF8C  F009    	movff	plusw1,btemp+8
 19143  0164F0  0EF3               	movlw	-13
 19144  0164F2  006F FF8C  F00A    	movff	plusw1,btemp+9
 19145  0164F8  0EF4               	movlw	-12
 19146  0164FA  006F FF8C  F00B    	movff	plusw1,btemp+10
 19147  016500  0EF5               	movlw	-11
 19148  016502  006F FF8C  F00C    	movff	plusw1,btemp+11
 19149                           
 19150                           ;stkvar	_u @ sp[(-10)+0]
 19151  016508  0EF6               	movlw	-10
 19152  01650A  0060  F027  FFE3   	movff	btemp+8,plusw1
 19153  016510  0EF7               	movlw	-9
 19154  016512  0060  F02B  FFE3   	movff	btemp+9,plusw1
 19155  016518  0EF8               	movlw	-8
 19156  01651A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19157  016520  0EF9               	movlw	-7
 19158  016522  0060  F033  FFE3   	movff	btemp+11,plusw1
 19159  016528  0E81               	movlw	129
 19160  01652A  6E0B               	movwf	(btemp+10)^0,c
 19161  01652C  0EFF               	movlw	255
 19162  01652E  6E0C               	movwf	(btemp+11)^0,c
 19163                           
 19164                           ;stkvar	_u @ sp[(-10)+0]
 19165  016530  0EF6               	movlw	-10
 19166  016532  006F FF8C  F005    	movff	plusw1,btemp+4
 19167  016538  0EF7               	movlw	-9
 19168  01653A  006F FF8C  F006    	movff	plusw1,btemp+5
 19169  016540  0EF8               	movlw	-8
 19170  016542  006F FF8C  F007    	movff	plusw1,btemp+6
 19171  016548  0EF9               	movlw	-7
 19172  01654A  006F FF8C  F008    	movff	plusw1,btemp+7
 19173  016550  0E18               	movlw	24
 19174  016552  D005               	goto	u6200
 19175  016554                     u6205:
 19176  016554  90D8               	bcf	status,0,c
 19177  016556  3208               	rrcf	(btemp+7)^0,f,c
 19178  016558  3207               	rrcf	(btemp+6)^0,f,c
 19179  01655A  3206               	rrcf	(btemp+5)^0,f,c
 19180  01655C  3205               	rrcf	(btemp+4)^0,f,c
 19181  01655E                     u6200:
 19182  01655E  2EE8               	decfsz	wreg,f,c
 19183  016560  D7F9               	goto	u6205
 19184  016562  0060  F014  F009   	movff	btemp+4,btemp+8
 19185  016568  0060  F018  F00A   	movff	btemp+5,btemp+9
 19186  01656E  0EFF               	movlw	255
 19187  016570  1609               	andwf	(btemp+8)^0,f,c
 19188  016572  0E00               	movlw	0
 19189  016574  160A               	andwf	(btemp+9)^0,f,c
 19190  016576  500B               	movf	(btemp+10)^0,w,c
 19191  016578  2609               	addwf	(btemp+8)^0,f,c
 19192  01657A  500C               	movf	(btemp+11)^0,w,c
 19193  01657C  220A               	addwfc	(btemp+9)^0,f,c
 19194                           
 19195                           ;stkvar	_e @ sp[(-10)+8]
 19196  01657E  0EFE               	movlw	-2
 19197  016580  0060  F027  FFE3   	movff	btemp+8,plusw1
 19198  016586  0EFF               	movlw	-1
 19199  016588  0060  F02B  FFE3   	movff	btemp+9,plusw1
 19200                           
 19201                           ;stkvar	_e @ sp[(-10)+8]
 19202  01658E  0EFF               	movlw	-1
 19203  016590  BEE3               	btfsc	plusw1,7,c
 19204  016592  D019               	goto	l8229
 19205  016594  0EFF               	movlw	-1
 19206  016596  50E3               	movf	plusw1,w,c
 19207  016598  E108               	bnz	u6210
 19208  01659A  0EFE               	movlw	-2
 19209  01659C  006F FF8C  F001    	movff	plusw1,btemp
 19210  0165A2  0E17               	movlw	23
 19211  0165A4  5E01               	subwf	btemp^0,f,c
 19212  0165A6  A0D8               	btfss	status,0,c
 19213  0165A8  D00E               	goto	l8229
 19214  0165AA                     u6210:
 19215                           
 19216                           ;stkvar	_x @ sp[(-10)+-4]
 19217  0165AA  0EF2               	movlw	-14
 19218  0165AC  006F FF8C  F001    	movff	plusw1,btemp
 19219  0165B2  0EF3               	movlw	-13
 19220  0165B4  006F FF8C  F002    	movff	plusw1,btemp+1
 19221  0165BA  0EF4               	movlw	-12
 19222  0165BC  006F FF8C  F003    	movff	plusw1,btemp+2
 19223  0165C2  0EF5               	movlw	-11
 19224  0165C4  D11F               	goto	L21
 19225  0165C6                     l8229:
 19226                           
 19227                           ;stkvar	_e @ sp[(-10)+8]
 19228  0165C6  0EFF               	movlw	-1
 19229  0165C8  BEE3               	btfsc	plusw1,7,c
 19230  0165CA  D0B4               	goto	l8245
 19231                           
 19232                           ;stkvar	_e @ sp[(-10)+8]
 19233  0165CC  0EFE               	movlw	-2
 19234  0165CE  006F FF8C  F00C    	movff	plusw1,btemp+11
 19235  0165D4  0EFF               	movlw	255
 19236  0165D6  6E05               	movwf	(btemp+4)^0,c
 19237  0165D8  0EFF               	movlw	255
 19238  0165DA  6E06               	movwf	(btemp+5)^0,c
 19239  0165DC  0E7F               	movlw	127
 19240  0165DE  6E07               	movwf	(btemp+6)^0,c
 19241  0165E0  0E00               	movlw	0
 19242  0165E2  6E08               	movwf	(btemp+7)^0,c
 19243  0165E4                     u6235:
 19244  0165E4  660C               	tstfsz	(btemp+11)^0,c
 19245  0165E6  D001               	goto	u6236
 19246  0165E8  D007               	goto	u6237
 19247  0165EA                     u6236:
 19248  0165EA  3408               	rlcf	(btemp+7)^0,w,c
 19249  0165EC  3208               	rrcf	(btemp+7)^0,f,c
 19250  0165EE  3207               	rrcf	(btemp+6)^0,f,c
 19251  0165F0  3206               	rrcf	(btemp+5)^0,f,c
 19252  0165F2  3205               	rrcf	(btemp+4)^0,f,c
 19253  0165F4  2E0C               	decfsz	(btemp+11)^0,f,c
 19254  0165F6  D7F6               	goto	u6235
 19255  0165F8                     u6237:
 19256                           
 19257                           ;stkvar	_m @ sp[(-10)+4]
 19258  0165F8  0EFA               	movlw	-6
 19259  0165FA  0060  F017  FFE3   	movff	btemp+4,plusw1
 19260  016600  0EFB               	movlw	-5
 19261  016602  0060  F01B  FFE3   	movff	btemp+5,plusw1
 19262  016608  0EFC               	movlw	-4
 19263  01660A  0060  F01F  FFE3   	movff	btemp+6,plusw1
 19264  016610  0EFD               	movlw	-3
 19265  016612  0060  F023  FFE3   	movff	btemp+7,plusw1
 19266                           
 19267                           ;stkvar	_m @ sp[(-10)+4]
 19268                           ;stkvar	_u @ sp[(-10)+0]
 19269  016618  0EF6               	movlw	-10
 19270  01661A  006F FF8C  F009    	movff	plusw1,btemp+8
 19271  016620  0EF7               	movlw	-9
 19272  016622  006F FF8C  F00A    	movff	plusw1,btemp+9
 19273  016628  0EF8               	movlw	-8
 19274  01662A  006F FF8C  F00B    	movff	plusw1,btemp+10
 19275  016630  0EF9               	movlw	-7
 19276  016632  006F FF8C  F00C    	movff	plusw1,btemp+11
 19277  016638  0EFA               	movlw	-6
 19278  01663A  50E3               	movf	plusw1,w,c
 19279  01663C  1609               	andwf	(btemp+8)^0,f,c
 19280  01663E  0EFB               	movlw	-5
 19281  016640  50E3               	movf	plusw1,w,c
 19282  016642  160A               	andwf	(btemp+9)^0,f,c
 19283  016644  0EFC               	movlw	-4
 19284  016646  50E3               	movf	plusw1,w,c
 19285  016648  160B               	andwf	(btemp+10)^0,f,c
 19286  01664A  0EFD               	movlw	-3
 19287  01664C  50E3               	movf	plusw1,w,c
 19288  01664E  160C               	andwf	(btemp+11)^0,f,c
 19289  016650  5009               	movf	(btemp+8)^0,w,c
 19290  016652  100A               	iorwf	(btemp+9)^0,w,c
 19291  016654  100B               	iorwf	(btemp+10)^0,w,c
 19292  016656  100C               	iorwf	(btemp+11)^0,w,c
 19293  016658  B4D8               	btfsc	status,2,c
 19294  01665A  D7A7               	goto	u6210
 19295                           
 19296                           ;stkvar	_u @ sp[(-10)+0]
 19297  01665C  0EF6               	movlw	-10
 19298  01665E  006F FF8C  F009    	movff	plusw1,btemp+8
 19299  016664  0EF7               	movlw	-9
 19300  016666  006F FF8C  F00A    	movff	plusw1,btemp+9
 19301  01666C  0EF8               	movlw	-8
 19302  01666E  006F FF8C  F00B    	movff	plusw1,btemp+10
 19303  016674  0EF9               	movlw	-7
 19304  016676  006F FF8C  F00C    	movff	plusw1,btemp+11
 19305  01667C  0E20               	movlw	32
 19306  01667E  D005               	goto	u6250
 19307  016680                     u6255:
 19308  016680  90D8               	bcf	status,0,c
 19309  016682  320C               	rrcf	(btemp+11)^0,f,c
 19310  016684  320B               	rrcf	(btemp+10)^0,f,c
 19311  016686  320A               	rrcf	(btemp+9)^0,f,c
 19312  016688  3209               	rrcf	(btemp+8)^0,f,c
 19313  01668A                     u6250:
 19314  01668A  2EE8               	decfsz	wreg,f,c
 19315  01668C  D7F9               	goto	u6255
 19316  01668E  5009               	movf	(btemp+8)^0,w,c
 19317  016690  B4D8               	btfsc	status,2,c
 19318  016692  D028               	goto	l8243
 19319                           
 19320                           ;stkvar	_m @ sp[(-10)+4]
 19321                           ;stkvar	_u @ sp[(-10)+0]
 19322  016694  0EF6               	movlw	-10
 19323  016696  50E3               	movf	plusw1,w,c
 19324  016698  6E01               	movwf	btemp^0,c
 19325  01669A  0EFA               	movlw	-6
 19326  01669C  50E3               	movf	plusw1,w,c
 19327  01669E  2601               	addwf	btemp^0,f,c
 19328  0166A0  0EF6               	movlw	-10
 19329  0166A2  0060  F007  FFE3   	movff	btemp,plusw1
 19330  0166A8  0EF7               	movlw	-9
 19331  0166AA  50E3               	movf	plusw1,w,c
 19332  0166AC  6E01               	movwf	btemp^0,c
 19333  0166AE  0EFB               	movlw	-5
 19334  0166B0  50E3               	movf	plusw1,w,c
 19335  0166B2  2201               	addwfc	btemp^0,f,c
 19336  0166B4  0EF7               	movlw	-9
 19337  0166B6  0060  F007  FFE3   	movff	btemp,plusw1
 19338  0166BC  0EF8               	movlw	-8
 19339  0166BE  50E3               	movf	plusw1,w,c
 19340  0166C0  6E01               	movwf	btemp^0,c
 19341  0166C2  0EFC               	movlw	-4
 19342  0166C4  50E3               	movf	plusw1,w,c
 19343  0166C6  2201               	addwfc	btemp^0,f,c
 19344  0166C8  0EF8               	movlw	-8
 19345  0166CA  0060  F007  FFE3   	movff	btemp,plusw1
 19346  0166D0  0EF9               	movlw	-7
 19347  0166D2  50E3               	movf	plusw1,w,c
 19348  0166D4  6E01               	movwf	btemp^0,c
 19349  0166D6  0EFD               	movlw	-3
 19350  0166D8  50E3               	movf	plusw1,w,c
 19351  0166DA  2201               	addwfc	btemp^0,f,c
 19352  0166DC  0EF9               	movlw	-7
 19353  0166DE  0060  F007  FFE3   	movff	btemp,plusw1
 19354  0166E4                     l8243:
 19355                           
 19356                           ;stkvar	_m @ sp[(-10)+4]
 19357  0166E4  0EFA               	movlw	-6
 19358  0166E6  006F FF8C  F009    	movff	plusw1,btemp+8
 19359  0166EC  0EFB               	movlw	-5
 19360  0166EE  006F FF8C  F00A    	movff	plusw1,btemp+9
 19361  0166F4  0EFC               	movlw	-4
 19362  0166F6  006F FF8C  F00B    	movff	plusw1,btemp+10
 19363  0166FC  0EFD               	movlw	-3
 19364  0166FE  006F FF8C  F00C    	movff	plusw1,btemp+11
 19365  016704  1C09               	comf	(btemp+8)^0,w,c
 19366  016706  6E05               	movwf	(btemp+4)^0,c
 19367  016708  1C0A               	comf	(btemp+9)^0,w,c
 19368  01670A  6E06               	movwf	(btemp+5)^0,c
 19369  01670C  1C0B               	comf	(btemp+10)^0,w,c
 19370  01670E  6E07               	movwf	(btemp+6)^0,c
 19371  016710  1C0C               	comf	(btemp+11)^0,w,c
 19372  016712  6E08               	movwf	(btemp+7)^0,c
 19373                           
 19374                           ;stkvar	_u @ sp[(-10)+0]
 19375  016714  50E1               	movf	fsr1l,w,c
 19376  016716  0FF6               	addlw	-10
 19377  016718  6ED9               	movwf	fsr2l,c
 19378  01671A  50E2               	movf	fsr1h,w,c
 19379  01671C  6EDA               	movwf	fsr2h,c
 19380  01671E  0EFF               	movlw	255
 19381  016720  22DA               	addwfc	fsr2h,f,c
 19382  016722  5005               	movf	(btemp+4)^0,w,c
 19383  016724  16DE               	andwf	postinc2,f,c
 19384  016726  5006               	movf	(btemp+5)^0,w,c
 19385  016728  16DE               	andwf	postinc2,f,c
 19386  01672A  5007               	movf	(btemp+6)^0,w,c
 19387  01672C  16DE               	andwf	postinc2,f,c
 19388  01672E  5008               	movf	(btemp+7)^0,w,c
 19389  016730  16DE               	andwf	postinc2,f,c
 19390  016732  D05B               	goto	l8253
 19391  016734                     l8245:
 19392                           
 19393                           ;stkvar	_u @ sp[(-10)+0]
 19394  016734  0EF6               	movlw	-10
 19395  016736  006F FF8C  F009    	movff	plusw1,btemp+8
 19396  01673C  0EF7               	movlw	-9
 19397  01673E  006F FF8C  F00A    	movff	plusw1,btemp+9
 19398  016744  0EF8               	movlw	-8
 19399  016746  006F FF8C  F00B    	movff	plusw1,btemp+10
 19400  01674C  0EF9               	movlw	-7
 19401  01674E  006F FF8C  F00C    	movff	plusw1,btemp+11
 19402  016754  0E20               	movlw	32
 19403  016756  D005               	goto	u6270
 19404  016758                     u6275:
 19405  016758  90D8               	bcf	status,0,c
 19406  01675A  320C               	rrcf	(btemp+11)^0,f,c
 19407  01675C  320B               	rrcf	(btemp+10)^0,f,c
 19408  01675E  320A               	rrcf	(btemp+9)^0,f,c
 19409  016760  3209               	rrcf	(btemp+8)^0,f,c
 19410  016762                     u6270:
 19411  016762  2EE8               	decfsz	wreg,f,c
 19412  016764  D7F9               	goto	u6275
 19413  016766  6609               	tstfsz	(btemp+8)^0,c
 19414  016768  D009               	goto	l8249
 19415                           
 19416                           ;stkvar	_u @ sp[(-10)+0]
 19417  01676A  0EF6               	movlw	-10
 19418  01676C  6AE3               	clrf	plusw1,c
 19419  01676E  0EF7               	movlw	-9
 19420  016770  6AE3               	clrf	plusw1,c
 19421  016772  0EF8               	movlw	-8
 19422  016774  6AE3               	clrf	plusw1,c
 19423  016776  0EF9               	movlw	-7
 19424  016778  6AE3               	clrf	plusw1,c
 19425  01677A  D037               	goto	l8253
 19426  01677C                     l8249:
 19427                           
 19428                           ;stkvar	_u @ sp[(-10)+0]
 19429  01677C  0EF6               	movlw	-10
 19430  01677E  006F FF8C  F009    	movff	plusw1,btemp+8
 19431  016784  0EF7               	movlw	-9
 19432  016786  006F FF8C  F00A    	movff	plusw1,btemp+9
 19433  01678C  0EF8               	movlw	-8
 19434  01678E  006F FF8C  F00B    	movff	plusw1,btemp+10
 19435  016794  0EF9               	movlw	-7
 19436  016796  006F FF8C  F00C    	movff	plusw1,btemp+11
 19437  01679C  90D8               	bcf	status,0,c
 19438  01679E  3409               	rlcf	(btemp+8)^0,w,c
 19439  0167A0  6E05               	movwf	(btemp+4)^0,c
 19440  0167A2  340A               	rlcf	(btemp+9)^0,w,c
 19441  0167A4  6E06               	movwf	(btemp+5)^0,c
 19442  0167A6  340B               	rlcf	(btemp+10)^0,w,c
 19443  0167A8  6E07               	movwf	(btemp+6)^0,c
 19444  0167AA  340C               	rlcf	(btemp+11)^0,w,c
 19445  0167AC  6E08               	movwf	(btemp+7)^0,c
 19446  0167AE  5005               	movf	(btemp+4)^0,w,c
 19447  0167B0  1006               	iorwf	(btemp+5)^0,w,c
 19448  0167B2  1007               	iorwf	(btemp+6)^0,w,c
 19449  0167B4  1008               	iorwf	(btemp+7)^0,w,c
 19450  0167B6  B4D8               	btfsc	status,2,c
 19451  0167B8  D018               	goto	l8253
 19452  0167BA  0E00               	movlw	0
 19453  0167BC  6E09               	movwf	(btemp+8)^0,c
 19454  0167BE  0E00               	movlw	0
 19455  0167C0  6E0A               	movwf	(btemp+9)^0,c
 19456  0167C2  0E80               	movlw	128
 19457  0167C4  6E0B               	movwf	(btemp+10)^0,c
 19458  0167C6  0EBF               	movlw	191
 19459  0167C8  6E0C               	movwf	(btemp+11)^0,c
 19460                           
 19461                           ;stkvar	_u @ sp[(-10)+0]
 19462  0167CA  0EF6               	movlw	-10
 19463  0167CC  0060  F027  FFE3   	movff	btemp+8,plusw1
 19464  0167D2  0EF7               	movlw	-9
 19465  0167D4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 19466  0167DA  0EF8               	movlw	-8
 19467  0167DC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19468  0167E2  0EF9               	movlw	-7
 19469  0167E4  0060  F033  FFE3   	movff	btemp+11,plusw1
 19470  0167EA                     l8253:
 19471                           
 19472                           ;stkvar	_u @ sp[(-10)+0]
 19473  0167EA  0EF6               	movlw	-10
 19474  0167EC  006F FF8C  F001    	movff	plusw1,btemp
 19475  0167F2  0EF7               	movlw	-9
 19476  0167F4  006F FF8C  F002    	movff	plusw1,btemp+1
 19477  0167FA  0EF8               	movlw	-8
 19478  0167FC  006F FF8C  F003    	movff	plusw1,btemp+2
 19479  016802  0EF9               	movlw	-7
 19480  016804                     L21:
 19481  016804  006F FF8C  F004    	movff	plusw1,btemp+3
 19482                           
 19483                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 19484  01680A  0EF2               	movlw	242
 19485  01680C  26E1               	addwf	fsr1l,f,c
 19486  01680E  0EFF               	movlw	255
 19487  016810  22E2               	addwfc	fsr1h,f,c
 19488  016812  0012               	return		;funcret
 19489  016814                     __end_of_floorf:
 19490                           	opt callstack 0
 19491                           
 19492 ;; *************** function ___fpclassifyf *****************
 19493 ;; Defined at:
 19494 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 19495 ;; Parameters:    Size  Location     Type
 19496 ;;  x               4  [STACK] float 
 19497 ;; Auto vars:     Size  Location     Type
 19498 ;;  u               4  [STACK] struct .
 19499 ;;  e               2  [STACK] int 
 19500 ;; Return value:  Size  Location     Type
 19501 ;;                  2  [STACK] int 
 19502 ;; Registers used:
 19503 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 19504 ;; Tracked objects:
 19505 ;;		On entry : 0/0
 19506 ;;		On exit  : 0/0
 19507 ;;		Unchanged: 0/0
 19508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19513 ;;Total ram usage:        0 bytes
 19514 ;; Hardware stack levels used:    1
 19515 ;; Hardware stack levels required when called:   15
 19516 ;; This function calls:
 19517 ;;		Nothing
 19518 ;; This function is called by:
 19519 ;;		_efgtoa
 19520 ;; This function uses a reentrant model
 19521 ;;
 19522                           
 19523                           	psect	text67
 19524  018BEA                     __ptext67:
 19525                           	opt callstack 0
 19526  018BEA                     ___fpclassifyf:
 19527                           	opt callstack 0
 19528                           
 19529                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19530  018BEA  0E06               	movlw	6
 19531  018BEC  26E1               	addwf	fsr1l,f,c
 19532  018BEE  0E00               	movlw	0
 19533  018BF0  22E2               	addwfc	fsr1h,f,c
 19534                           
 19535                           ;incstack = 0
 19536 ;; hardware stack exceeded
 19537  018BF2  0060  F190  F009   	movff	___fpclassifyf@F463,btemp+8
 19538  018BF8  0060  F194  F00A   	movff	___fpclassifyf@F463+1,btemp+9
 19539  018BFE  0060  F198  F00B   	movff	___fpclassifyf@F463+2,btemp+10
 19540  018C04  0060  F19C  F00C   	movff	___fpclassifyf@F463+3,btemp+11
 19541                           
 19542                           ;stkvar	_u @ sp[(-6)+0]
 19543  018C0A  0EFA               	movlw	-6
 19544  018C0C  0060  F027  FFE3   	movff	btemp+8,plusw1
 19545  018C12  0EFB               	movlw	-5
 19546  018C14  0060  F02B  FFE3   	movff	btemp+9,plusw1
 19547  018C1A  0EFC               	movlw	-4
 19548  018C1C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19549  018C22  0EFD               	movlw	-3
 19550  018C24  0060  F033  FFE3   	movff	btemp+11,plusw1
 19551                           
 19552                           ;stkvar	_x @ sp[(-6)+-4]
 19553  018C2A  0EF6               	movlw	-10
 19554  018C2C  006F FF8C  F009    	movff	plusw1,btemp+8
 19555  018C32  0EF7               	movlw	-9
 19556  018C34  006F FF8C  F00A    	movff	plusw1,btemp+9
 19557  018C3A  0EF8               	movlw	-8
 19558  018C3C  006F FF8C  F00B    	movff	plusw1,btemp+10
 19559  018C42  0EF9               	movlw	-7
 19560  018C44  006F FF8C  F00C    	movff	plusw1,btemp+11
 19561                           
 19562                           ;stkvar	_u @ sp[(-6)+0]
 19563  018C4A  0EFA               	movlw	-6
 19564  018C4C  0060  F027  FFE3   	movff	btemp+8,plusw1
 19565  018C52  0EFB               	movlw	-5
 19566  018C54  0060  F02B  FFE3   	movff	btemp+9,plusw1
 19567  018C5A  0EFC               	movlw	-4
 19568  018C5C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19569  018C62  0EFD               	movlw	-3
 19570  018C64  0060  F033  FFE3   	movff	btemp+11,plusw1
 19571                           
 19572                           ;stkvar	_u @ sp[(-6)+0]
 19573  018C6A  0EFA               	movlw	-6
 19574  018C6C  006F FF8C  F009    	movff	plusw1,btemp+8
 19575  018C72  0EFB               	movlw	-5
 19576  018C74  006F FF8C  F00A    	movff	plusw1,btemp+9
 19577  018C7A  0EFC               	movlw	-4
 19578  018C7C  006F FF8C  F00B    	movff	plusw1,btemp+10
 19579  018C82  0EFD               	movlw	-3
 19580  018C84  006F FF8C  F00C    	movff	plusw1,btemp+11
 19581  018C8A  0E18               	movlw	24
 19582  018C8C  D005               	goto	u6080
 19583  018C8E                     u6085:
 19584  018C8E  90D8               	bcf	status,0,c
 19585  018C90  320C               	rrcf	(btemp+11)^0,f,c
 19586  018C92  320B               	rrcf	(btemp+10)^0,f,c
 19587  018C94  320A               	rrcf	(btemp+9)^0,f,c
 19588  018C96  3209               	rrcf	(btemp+8)^0,f,c
 19589  018C98                     u6080:
 19590  018C98  2EE8               	decfsz	wreg,f,c
 19591  018C9A  D7F9               	goto	u6085
 19592  018C9C  0060  F024  F007   	movff	btemp+8,btemp+6
 19593  018CA2  0060  F028  F008   	movff	btemp+9,btemp+7
 19594  018CA8  0EFF               	movlw	255
 19595  018CAA  1607               	andwf	(btemp+6)^0,f,c
 19596  018CAC  0E00               	movlw	0
 19597  018CAE  1608               	andwf	(btemp+7)^0,f,c
 19598                           
 19599                           ;stkvar	_e @ sp[(-6)+4]
 19600  018CB0  0EFE               	movlw	-2
 19601  018CB2  0060  F01F  FFE3   	movff	btemp+6,plusw1
 19602  018CB8  0EFF               	movlw	-1
 19603  018CBA  0060  F023  FFE3   	movff	btemp+7,plusw1
 19604                           
 19605                           ;stkvar	_e @ sp[(-6)+4]
 19606  018CC0  0EFE               	movlw	-2
 19607  018CC2  006F FF8C  F001    	movff	plusw1,btemp
 19608  018CC8  0EFF               	movlw	-1
 19609  018CCA  50E3               	movf	plusw1,w,c
 19610  018CCC  1001               	iorwf	btemp^0,w,c
 19611  018CCE  A4D8               	btfss	status,2,c
 19612  018CD0  D023               	goto	l8191
 19613                           
 19614                           ;stkvar	_u @ sp[(-6)+0]
 19615  018CD2  0EFA               	movlw	-6
 19616  018CD4  006F FF8C  F009    	movff	plusw1,btemp+8
 19617  018CDA  0EFB               	movlw	-5
 19618  018CDC  006F FF8C  F00A    	movff	plusw1,btemp+9
 19619  018CE2  0EFC               	movlw	-4
 19620  018CE4  006F FF8C  F00B    	movff	plusw1,btemp+10
 19621  018CEA  0EFD               	movlw	-3
 19622  018CEC  006F FF8C  F00C    	movff	plusw1,btemp+11
 19623  018CF2  90D8               	bcf	status,0,c
 19624  018CF4  3409               	rlcf	(btemp+8)^0,w,c
 19625  018CF6  6E05               	movwf	(btemp+4)^0,c
 19626  018CF8  340A               	rlcf	(btemp+9)^0,w,c
 19627  018CFA  6E06               	movwf	(btemp+5)^0,c
 19628  018CFC  340B               	rlcf	(btemp+10)^0,w,c
 19629  018CFE  6E07               	movwf	(btemp+6)^0,c
 19630  018D00  340C               	rlcf	(btemp+11)^0,w,c
 19631  018D02  6E08               	movwf	(btemp+7)^0,c
 19632  018D04  5005               	movf	(btemp+4)^0,w,c
 19633  018D06  1006               	iorwf	(btemp+5)^0,w,c
 19634  018D08  1007               	iorwf	(btemp+6)^0,w,c
 19635  018D0A  1008               	iorwf	(btemp+7)^0,w,c
 19636  018D0C  A4D8               	btfss	status,2,c
 19637  018D0E  D002               	goto	l8187
 19638  018D10  0E02               	movlw	2
 19639  018D12  D02E               	goto	L22
 19640  018D14                     l8187:
 19641  018D14  0E03               	movlw	3
 19642  018D16  D02C               	goto	L22
 19643  018D18                     l8191:
 19644                           
 19645                           ;stkvar	_e @ sp[(-6)+4]
 19646  018D18  0EFE               	movlw	-2
 19647  018D1A  28E3               	incf	plusw1,w,c
 19648  018D1C  E128               	bnz	l8197
 19649  018D1E  0EFF               	movlw	-1
 19650  018D20  50E3               	movf	plusw1,w,c
 19651  018D22  A4D8               	btfss	status,2,c
 19652  018D24  D024               	goto	l8197
 19653                           
 19654                           ;stkvar	_u @ sp[(-6)+0]
 19655  018D26  0EFA               	movlw	-6
 19656  018D28  006F FF8C  F009    	movff	plusw1,btemp+8
 19657  018D2E  0EFB               	movlw	-5
 19658  018D30  006F FF8C  F00A    	movff	plusw1,btemp+9
 19659  018D36  0EFC               	movlw	-4
 19660  018D38  006F FF8C  F00B    	movff	plusw1,btemp+10
 19661  018D3E  0EFD               	movlw	-3
 19662  018D40  006F FF8C  F00C    	movff	plusw1,btemp+11
 19663  018D46  0E09               	movlw	9
 19664  018D48                     u6125:
 19665  018D48  90D8               	bcf	status,0,c
 19666  018D4A  3609               	rlcf	(btemp+8)^0,f,c
 19667  018D4C  360A               	rlcf	(btemp+9)^0,f,c
 19668  018D4E  360B               	rlcf	(btemp+10)^0,f,c
 19669  018D50  360C               	rlcf	(btemp+11)^0,f,c
 19670  018D52  2EE8               	decfsz	wreg,f,c
 19671  018D54  D7F9               	goto	u6125
 19672  018D56  5009               	movf	(btemp+8)^0,w,c
 19673  018D58  100A               	iorwf	(btemp+9)^0,w,c
 19674  018D5A  100B               	iorwf	(btemp+10)^0,w,c
 19675  018D5C  100C               	iorwf	(btemp+11)^0,w,c
 19676  018D5E  A4D8               	btfss	status,2,c
 19677  018D60  D002               	goto	u6130
 19678  018D62  0E01               	movlw	1
 19679  018D64  D001               	goto	u6140
 19680  018D66                     u6130:
 19681  018D66  0E00               	movlw	0
 19682  018D68                     u6140:
 19683  018D68  6E01               	movwf	btemp^0,c
 19684  018D6A  6A02               	clrf	(btemp+1)^0,c
 19685  018D6C  D004               	goto	l3151
 19686  018D6E                     l8197:
 19687  018D6E  0E04               	movlw	4
 19688  018D70                     L22:
 19689  018D70  6E01               	movwf	btemp^0,c
 19690  018D72  0E00               	movlw	0
 19691  018D74  6E02               	movwf	(btemp+1)^0,c
 19692  018D76                     l3151:
 19693                           
 19694                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 19695  018D76  0EF6               	movlw	246
 19696  018D78  26E1               	addwf	fsr1l,f,c
 19697  018D7A  0EFF               	movlw	255
 19698  018D7C  22E2               	addwfc	fsr1h,f,c
 19699  018D7E  0012               	return		;funcret
 19700  018D80                     __end_of___fpclassifyf:
 19701                           	opt callstack 0
 19702                           
 19703 ;; *************** function ___fltol *****************
 19704 ;; Defined at:
 19705 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 19706 ;; Parameters:    Size  Location     Type
 19707 ;;  f1              4  [STACK] int 
 19708 ;; Auto vars:     Size  Location     Type
 19709 ;;  exp1            1  [STACK] unsigned char 
 19710 ;;  sign1           1  [STACK] unsigned char 
 19711 ;; Return value:  Size  Location     Type
 19712 ;;                  4  [STACK] long 
 19713 ;; Registers used:
 19714 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 19715 ;; Tracked objects:
 19716 ;;		On entry : 0/0
 19717 ;;		On exit  : 0/0
 19718 ;;		Unchanged: 0/0
 19719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19724 ;;Total ram usage:        0 bytes
 19725 ;; Hardware stack levels used:    1
 19726 ;; Hardware stack levels required when called:   15
 19727 ;; This function calls:
 19728 ;;		Nothing
 19729 ;; This function is called by:
 19730 ;;		_main
 19731 ;;		_convert_dac_raw
 19732 ;;		_calc_bsoc
 19733 ;;		_init_bsoc
 19734 ;;		_efgtoa
 19735 ;; This function uses a reentrant model
 19736 ;;
 19737                           
 19738                           	psect	text68
 19739  019086                     __ptext68:
 19740                           	opt callstack 0
 19741  019086                     ___fltol:
 19742                           	opt callstack 0
 19743                           
 19744                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19745  019086  52E6               	movf	postinc1,f,c
 19746  019088  52E6               	movf	postinc1,f,c
 19747                           
 19748                           ;stkvar	_f1 @ sp[(-2)+-4]
 19749                           
 19750                           ;incstack = 0
 19751 ;; hardware stack exceeded
 19752  01908A  0EFA               	movlw	-6
 19753  01908C  006F FF8C  F009    	movff	plusw1,btemp+8
 19754  019092  0EFB               	movlw	-5
 19755  019094  006F FF8C  F00A    	movff	plusw1,btemp+9
 19756  01909A  0EFC               	movlw	-4
 19757  01909C  006F FF8C  F00B    	movff	plusw1,btemp+10
 19758  0190A2  0EFD               	movlw	-3
 19759  0190A4  006F FF8C  F00C    	movff	plusw1,btemp+11
 19760  0190AA  0E18               	movlw	24
 19761  0190AC  D005               	goto	u7290
 19762  0190AE                     u7295:
 19763  0190AE  90D8               	bcf	status,0,c
 19764  0190B0  320C               	rrcf	(btemp+11)^0,f,c
 19765  0190B2  320B               	rrcf	(btemp+10)^0,f,c
 19766  0190B4  320A               	rrcf	(btemp+9)^0,f,c
 19767  0190B6  3209               	rrcf	(btemp+8)^0,f,c
 19768  0190B8                     u7290:
 19769  0190B8  2EE8               	decfsz	wreg,f,c
 19770  0190BA  D7F9               	goto	u7295
 19771                           
 19772                           ;stkvar	_exp1 @ sp[(-2)+0]
 19773  0190BC  0EFE               	movlw	-2
 19774  0190BE  0060  F027  FFE3   	movff	btemp+8,plusw1
 19775  0190C4  0EFE               	movlw	-2
 19776  0190C6  50E3               	movf	plusw1,w,c
 19777  0190C8  A4D8               	btfss	status,2,c
 19778  0190CA  D006               	goto	l8817
 19779  0190CC                     u7300:
 19780  0190CC  0E00               	movlw	0
 19781  0190CE  6E01               	movwf	btemp^0,c
 19782  0190D0  6A02               	clrf	(btemp+1)^0,c
 19783  0190D2  6A03               	clrf	(btemp+2)^0,c
 19784  0190D4  6A04               	clrf	(btemp+3)^0,c
 19785  0190D6  D08B               	goto	l2767
 19786  0190D8                     l8817:
 19787                           
 19788                           ;stkvar	_f1 @ sp[(-2)+-4]
 19789  0190D8  0EFA               	movlw	-6
 19790  0190DA  006F FF8C  F009    	movff	plusw1,btemp+8
 19791  0190E0  0EFB               	movlw	-5
 19792  0190E2  006F FF8C  F00A    	movff	plusw1,btemp+9
 19793  0190E8  0EFC               	movlw	-4
 19794  0190EA  006F FF8C  F00B    	movff	plusw1,btemp+10
 19795  0190F0  0EFD               	movlw	-3
 19796  0190F2  006F FF8C  F00C    	movff	plusw1,btemp+11
 19797  0190F8  0E20               	movlw	32
 19798  0190FA  D005               	goto	u7310
 19799  0190FC                     u7315:
 19800  0190FC  90D8               	bcf	status,0,c
 19801  0190FE  320C               	rrcf	(btemp+11)^0,f,c
 19802  019100  320B               	rrcf	(btemp+10)^0,f,c
 19803  019102  320A               	rrcf	(btemp+9)^0,f,c
 19804  019104  3209               	rrcf	(btemp+8)^0,f,c
 19805  019106                     u7310:
 19806  019106  2EE8               	decfsz	wreg,f,c
 19807  019108  D7F9               	goto	u7315
 19808                           
 19809                           ;stkvar	_sign1 @ sp[(-2)+1]
 19810  01910A  0EFF               	movlw	-1
 19811  01910C  0060  F027  FFE3   	movff	btemp+8,plusw1
 19812                           
 19813                           ;stkvar	_f1 @ sp[(-2)+-4]
 19814  019112  0EFC               	movlw	-4
 19815  019114  8EE3               	bsf	plusw1,7,c
 19816                           
 19817                           ;stkvar	_f1 @ sp[(-2)+-4]
 19818  019116  50E1               	movf	fsr1l,w,c
 19819  019118  0FFA               	addlw	-6
 19820  01911A  6ED9               	movwf	fsr2l,c
 19821  01911C  50E2               	movf	fsr1h,w,c
 19822  01911E  6EDA               	movwf	fsr2h,c
 19823  019120  0EFF               	movlw	255
 19824  019122  22DA               	addwfc	fsr2h,f,c
 19825  019124  0EFF               	movlw	255
 19826  019126  16DE               	andwf	postinc2,f,c
 19827  019128  0EFF               	movlw	255
 19828  01912A  16DE               	andwf	postinc2,f,c
 19829  01912C  0EFF               	movlw	255
 19830  01912E  16DE               	andwf	postinc2,f,c
 19831  019130  0E00               	movlw	0
 19832  019132  16DE               	andwf	postinc2,f,c
 19833                           
 19834                           ;stkvar	_exp1 @ sp[(-2)+0]
 19835  019134  0EFE               	movlw	-2
 19836  019136  006F FF8C  F001    	movff	plusw1,btemp
 19837  01913C  0E96               	movlw	150
 19838  01913E  5E01               	subwf	btemp^0,f,c
 19839  019140  0EFE               	movlw	-2
 19840  019142  0060  F007  FFE3   	movff	btemp,plusw1
 19841                           
 19842                           ;stkvar	_exp1 @ sp[(-2)+0]
 19843  019148  0EFE               	movlw	-2
 19844  01914A  AEE3               	btfss	plusw1,7,c
 19845  01914C  D014               	goto	l8835
 19846                           
 19847                           ;stkvar	_exp1 @ sp[(-2)+0]
 19848  01914E  0EFE               	movlw	-2
 19849  019150  50E3               	movf	plusw1,w,c
 19850  019152  0A80               	xorlw	128
 19851  019154  0F97               	addlw	151
 19852  019156  A0D8               	btfss	status,0,c
 19853  019158  D7B9               	goto	u7300
 19854  01915A                     l8833:
 19855                           
 19856                           ;stkvar	_f1 @ sp[(-2)+-4]
 19857  01915A  90D8               	bcf	status,0,c
 19858  01915C  0EFD               	movlw	-3
 19859  01915E  32E3               	rrcf	plusw1,f,c
 19860  019160  0EFC               	movlw	-4
 19861  019162  32E3               	rrcf	plusw1,f,c
 19862  019164  0EFB               	movlw	-5
 19863  019166  32E3               	rrcf	plusw1,f,c
 19864  019168  0EFA               	movlw	-6
 19865  01916A  32E3               	rrcf	plusw1,f,c
 19866                           
 19867                           ;stkvar	_exp1 @ sp[(-2)+0]
 19868  01916C  0EFE               	movlw	-2
 19869  01916E  2AE3               	incf	plusw1,f,c
 19870  019170  B4D8               	btfsc	status,2,c
 19871  019172  D018               	goto	u7360
 19872  019174  D7F2               	goto	l8833
 19873  019176                     l8835:
 19874                           
 19875                           ;stkvar	_exp1 @ sp[(-2)+0]
 19876  019176  0EFE               	movlw	-2
 19877  019178  006F FF8C  F001    	movff	plusw1,btemp
 19878  01917E  0E1F               	movlw	31
 19879  019180  6401               	cpfsgt	btemp^0,c
 19880  019182  D00C               	goto	l8843
 19881  019184  D7A3               	goto	u7300
 19882  019186                     l8841:
 19883                           
 19884                           ;stkvar	_f1 @ sp[(-2)+-4]
 19885  019186  90D8               	bcf	status,0,c
 19886  019188  0EFA               	movlw	-6
 19887  01918A  36E3               	rlcf	plusw1,f,c
 19888  01918C  0EFB               	movlw	-5
 19889  01918E  36E3               	rlcf	plusw1,f,c
 19890  019190  0EFC               	movlw	-4
 19891  019192  36E3               	rlcf	plusw1,f,c
 19892  019194  0EFD               	movlw	-3
 19893  019196  36E3               	rlcf	plusw1,f,c
 19894                           
 19895                           ;stkvar	_exp1 @ sp[(-2)+0]
 19896  019198  0EFE               	movlw	-2
 19897  01919A  06E3               	decf	plusw1,f,c
 19898  01919C                     l8843:
 19899                           
 19900                           ;stkvar	_exp1 @ sp[(-2)+0]
 19901  01919C  0EFE               	movlw	-2
 19902  01919E  50E3               	movf	plusw1,w,c
 19903  0191A0  A4D8               	btfss	status,2,c
 19904  0191A2  D7F1               	goto	l8841
 19905  0191A4                     u7360:
 19906                           
 19907                           ;stkvar	_sign1 @ sp[(-2)+1]
 19908  0191A4  0EFF               	movlw	-1
 19909  0191A6  50E3               	movf	plusw1,w,c
 19910  0191A8  B4D8               	btfsc	status,2,c
 19911  0191AA  D011               	goto	u7380
 19912                           
 19913                           ;stkvar	_f1 @ sp[(-2)+-4]
 19914                           ;stkvar	_f1 @ sp[(-2)+-4]
 19915  0191AC  0EFA               	movlw	-6
 19916  0191AE  6CE3               	negf	plusw1,c
 19917  0191B0  0EFB               	movlw	-5
 19918  0191B2  1EE3               	comf	plusw1,f,c
 19919  0191B4  0EFC               	movlw	-4
 19920  0191B6  1EE3               	comf	plusw1,f,c
 19921  0191B8  0EFD               	movlw	-3
 19922  0191BA  1EE3               	comf	plusw1,f,c
 19923  0191BC  E308               	bnc	u7380
 19924  0191BE  0EFB               	movlw	-5
 19925  0191C0  2AE3               	incf	plusw1,f,c
 19926  0191C2  E305               	bnc	u7380
 19927  0191C4  0EFC               	movlw	-4
 19928  0191C6  2AE3               	incf	plusw1,f,c
 19929  0191C8  E302               	bnc	u7380
 19930  0191CA  0EFD               	movlw	-3
 19931  0191CC  2AE3               	incf	plusw1,f,c
 19932  0191CE                     u7380:
 19933                           
 19934                           ;stkvar	_f1 @ sp[(-2)+-4]
 19935  0191CE  0EFA               	movlw	-6
 19936  0191D0  006F FF8C  F001    	movff	plusw1,btemp
 19937  0191D6  0EFB               	movlw	-5
 19938  0191D8  006F FF8C  F002    	movff	plusw1,btemp+1
 19939  0191DE  0EFC               	movlw	-4
 19940  0191E0  006F FF8C  F003    	movff	plusw1,btemp+2
 19941  0191E6  0EFD               	movlw	-3
 19942  0191E8  006F FF8C  F004    	movff	plusw1,btemp+3
 19943  0191EE                     l2767:
 19944                           
 19945                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 19946  0191EE  0EFA               	movlw	250
 19947  0191F0  26E1               	addwf	fsr1l,f,c
 19948  0191F2  0EFF               	movlw	255
 19949  0191F4  22E2               	addwfc	fsr1h,f,c
 19950  0191F6  0012               	return		;funcret
 19951  0191F8                     __end_of___fltol:
 19952                           	opt callstack 0
 19953                           
 19954 ;; *************** function ___flneg *****************
 19955 ;; Defined at:
 19956 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 19957 ;; Parameters:    Size  Location     Type
 19958 ;;  f1              4  [STACK] long 
 19959 ;; Auto vars:     Size  Location     Type
 19960 ;;		None
 19961 ;; Return value:  Size  Location     Type
 19962 ;;                  4  [STACK] long 
 19963 ;; Registers used:
 19964 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 19965 ;; Tracked objects:
 19966 ;;		On entry : 0/0
 19967 ;;		On exit  : 0/0
 19968 ;;		Unchanged: 0/0
 19969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19973 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19974 ;;Total ram usage:        0 bytes
 19975 ;; Hardware stack levels used:    1
 19976 ;; Hardware stack levels required when called:   15
 19977 ;; This function calls:
 19978 ;;		Nothing
 19979 ;; This function is called by:
 19980 ;;		_calc_bsoc
 19981 ;;		_efgtoa
 19982 ;; This function uses a reentrant model
 19983 ;;
 19984                           
 19985                           	psect	text69
 19986  01B7D4                     __ptext69:
 19987                           	opt callstack 0
 19988  01B7D4                     ___flneg:
 19989                           	opt callstack 0
 19990                           
 19991                           ;stkvar	_f1 @ sp[(0)+-4]
 19992                           
 19993                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19994                           ;incstack = 0
 19995 ;; hardware stack exceeded
 19996  01B7D4  0EFC               	movlw	-4
 19997  01B7D6  50E3               	movf	plusw1,w,c
 19998  01B7D8  E10A               	bnz	u7280
 19999  01B7DA  0EFD               	movlw	-3
 20000  01B7DC  50E3               	movf	plusw1,w,c
 20001  01B7DE  E107               	bnz	u7280
 20002  01B7E0  0EFE               	movlw	-2
 20003  01B7E2  50E3               	movf	plusw1,w,c
 20004  01B7E4  E104               	bnz	u7280
 20005  01B7E6  0EFF               	movlw	-1
 20006  01B7E8  50E3               	movf	plusw1,w,c
 20007  01B7EA  B4D8               	btfsc	status,2,c
 20008  01B7EC  D002               	goto	l8807
 20009  01B7EE                     u7280:
 20010                           
 20011                           ;stkvar	_f1 @ sp[(0)+-4]
 20012  01B7EE  0EFF               	movlw	-1
 20013  01B7F0  7EE3               	btg	plusw1,7,c
 20014  01B7F2                     l8807:
 20015                           
 20016                           ;stkvar	_f1 @ sp[(0)+-4]
 20017  01B7F2  0EFC               	movlw	-4
 20018  01B7F4  006F FF8C  F001    	movff	plusw1,btemp
 20019  01B7FA  0EFD               	movlw	-3
 20020  01B7FC  006F FF8C  F002    	movff	plusw1,btemp+1
 20021  01B802  0EFE               	movlw	-2
 20022  01B804  006F FF8C  F003    	movff	plusw1,btemp+2
 20023  01B80A  0EFF               	movlw	-1
 20024  01B80C  006F FF8C  F004    	movff	plusw1,btemp+3
 20025                           
 20026                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 20027  01B812  52E5               	movf	postdec1,f,c
 20028  01B814  52E5               	movf	postdec1,f,c
 20029  01B816  52E5               	movf	postdec1,f,c
 20030  01B818  52E5               	movf	postdec1,f,c
 20031  01B81A  0012               	return		;funcret
 20032  01B81C                     __end_of___flneg:
 20033                           	opt callstack 0
 20034                           
 20035 ;; *************** function ___fleq *****************
 20036 ;; Defined at:
 20037 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 20038 ;; Parameters:    Size  Location     Type
 20039 ;;  ff1             4  [STACK] long 
 20040 ;;  ff2             4  [STACK] long 
 20041 ;; Auto vars:     Size  Location     Type
 20042 ;;		None
 20043 ;; Return value:  Size  Location     Type
 20044 ;;		None               void
 20045 ;; Registers used:
 20046 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 20047 ;; Tracked objects:
 20048 ;;		On entry : 0/0
 20049 ;;		On exit  : 0/0
 20050 ;;		Unchanged: 0/0
 20051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20055 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20056 ;;Total ram usage:        0 bytes
 20057 ;; Hardware stack levels used:    1
 20058 ;; Hardware stack levels required when called:   15
 20059 ;; This function calls:
 20060 ;;		Nothing
 20061 ;; This function is called by:
 20062 ;;		_efgtoa
 20063 ;; This function uses a reentrant model
 20064 ;;
 20065                           
 20066                           	psect	text70
 20067  01A61E                     __ptext70:
 20068                           	opt callstack 0
 20069  01A61E                     ___fleq:
 20070                           	opt callstack 0
 20071                           
 20072                           ;stkvar	_ff1 @ sp[(0)+-4]
 20073                           
 20074                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20075                           ;incstack = 0
 20076 ;; hardware stack exceeded
 20077  01A61E  50E1               	movf	fsr1l,w,c
 20078  01A620  0FFC               	addlw	-4
 20079  01A622  6ED9               	movwf	fsr2l,c
 20080  01A624  50E2               	movf	fsr1h,w,c
 20081  01A626  6EDA               	movwf	fsr2h,c
 20082  01A628  0EFF               	movlw	255
 20083  01A62A  22DA               	addwfc	fsr2h,f,c
 20084  01A62C  0E00               	movlw	0
 20085  01A62E  14DE               	andwf	postinc2,w,c
 20086  01A630  6E09               	movwf	(btemp+8)^0,c
 20087  01A632  0E00               	movlw	0
 20088  01A634  14DE               	andwf	postinc2,w,c
 20089  01A636  6E0A               	movwf	(btemp+9)^0,c
 20090  01A638  0E80               	movlw	128
 20091  01A63A  14DE               	andwf	postinc2,w,c
 20092  01A63C  6E0B               	movwf	(btemp+10)^0,c
 20093  01A63E  0E7F               	movlw	127
 20094  01A640  14DE               	andwf	postinc2,w,c
 20095  01A642  6E0C               	movwf	(btemp+11)^0,c
 20096  01A644  5009               	movf	(btemp+8)^0,w,c
 20097  01A646  100A               	iorwf	(btemp+9)^0,w,c
 20098  01A648  100B               	iorwf	(btemp+10)^0,w,c
 20099  01A64A  100C               	iorwf	(btemp+11)^0,w,c
 20100  01A64C  A4D8               	btfss	status,2,c
 20101  01A64E  D008               	goto	l8765
 20102                           
 20103                           ;stkvar	_ff1 @ sp[(0)+-4]
 20104  01A650  0EFC               	movlw	-4
 20105  01A652  6AE3               	clrf	plusw1,c
 20106  01A654  0EFD               	movlw	-3
 20107  01A656  6AE3               	clrf	plusw1,c
 20108  01A658  0EFE               	movlw	-2
 20109  01A65A  6AE3               	clrf	plusw1,c
 20110  01A65C  0EFF               	movlw	-1
 20111  01A65E  6AE3               	clrf	plusw1,c
 20112  01A660                     l8765:
 20113                           
 20114                           ;stkvar	_ff2 @ sp[(0)+-8]
 20115  01A660  50E1               	movf	fsr1l,w,c
 20116  01A662  0FF8               	addlw	-8
 20117  01A664  6ED9               	movwf	fsr2l,c
 20118  01A666  50E2               	movf	fsr1h,w,c
 20119  01A668  6EDA               	movwf	fsr2h,c
 20120  01A66A  0EFF               	movlw	255
 20121  01A66C  22DA               	addwfc	fsr2h,f,c
 20122  01A66E  0E00               	movlw	0
 20123  01A670  14DE               	andwf	postinc2,w,c
 20124  01A672  6E09               	movwf	(btemp+8)^0,c
 20125  01A674  0E00               	movlw	0
 20126  01A676  14DE               	andwf	postinc2,w,c
 20127  01A678  6E0A               	movwf	(btemp+9)^0,c
 20128  01A67A  0E80               	movlw	128
 20129  01A67C  14DE               	andwf	postinc2,w,c
 20130  01A67E  6E0B               	movwf	(btemp+10)^0,c
 20131  01A680  0E7F               	movlw	127
 20132  01A682  14DE               	andwf	postinc2,w,c
 20133  01A684  6E0C               	movwf	(btemp+11)^0,c
 20134  01A686  5009               	movf	(btemp+8)^0,w,c
 20135  01A688  100A               	iorwf	(btemp+9)^0,w,c
 20136  01A68A  100B               	iorwf	(btemp+10)^0,w,c
 20137  01A68C  100C               	iorwf	(btemp+11)^0,w,c
 20138  01A68E  A4D8               	btfss	status,2,c
 20139  01A690  D008               	goto	l8769
 20140                           
 20141                           ;stkvar	_ff2 @ sp[(0)+-8]
 20142  01A692  0EF8               	movlw	-8
 20143  01A694  6AE3               	clrf	plusw1,c
 20144  01A696  0EF9               	movlw	-7
 20145  01A698  6AE3               	clrf	plusw1,c
 20146  01A69A  0EFA               	movlw	-6
 20147  01A69C  6AE3               	clrf	plusw1,c
 20148  01A69E  0EFB               	movlw	-5
 20149  01A6A0  6AE3               	clrf	plusw1,c
 20150  01A6A2                     l8769:
 20151                           
 20152                           ;stkvar	_ff2 @ sp[(0)+-8]
 20153                           ;stkvar	_ff1 @ sp[(0)+-4]
 20154  01A6A2  50E1               	movf	fsr1l,w,c
 20155  01A6A4  0FFC               	addlw	-4
 20156  01A6A6  6ED9               	movwf	fsr2l,c
 20157  01A6A8  50E2               	movf	fsr1h,w,c
 20158  01A6AA  6EDA               	movwf	fsr2h,c
 20159  01A6AC  0EFF               	movlw	255
 20160  01A6AE  22DA               	addwfc	fsr2h,f,c
 20161  01A6B0  0EF8               	movlw	-8
 20162  01A6B2  50E3               	movf	plusw1,w,c
 20163  01A6B4  18DE               	xorwf	postinc2,w,c
 20164  01A6B6  E10D               	bnz	u7220
 20165  01A6B8  0EF9               	movlw	-7
 20166  01A6BA  50E3               	movf	plusw1,w,c
 20167  01A6BC  18DE               	xorwf	postinc2,w,c
 20168  01A6BE  E109               	bnz	u7220
 20169  01A6C0  0EFA               	movlw	-6
 20170  01A6C2  50E3               	movf	plusw1,w,c
 20171  01A6C4  18DE               	xorwf	postinc2,w,c
 20172  01A6C6  E105               	bnz	u7220
 20173  01A6C8  0EFB               	movlw	-5
 20174  01A6CA  50E3               	movf	plusw1,w,c
 20175  01A6CC  18DE               	xorwf	postinc2,w,c
 20176  01A6CE  B4D8               	btfsc	status,2,c
 20177  01A6D0  D002               	goto	l8773
 20178  01A6D2                     u7220:
 20179  01A6D2  9001               	bcf	btemp& (0+255),0,c
 20180  01A6D4  D001               	goto	l2729
 20181  01A6D6                     l8773:
 20182  01A6D6  8001               	bsf	btemp& (0+255),0,c
 20183  01A6D8                     l2729:
 20184                           
 20185                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 20186  01A6D8  0EF8               	movlw	248
 20187  01A6DA  26E1               	addwf	fsr1l,f,c
 20188  01A6DC  0EFF               	movlw	255
 20189  01A6DE  22E2               	addwfc	fsr1h,f,c
 20190  01A6E0  0012               	return		;funcret
 20191  01A6E2                     __end_of___fleq:
 20192                           	opt callstack 0
 20193                           
 20194 ;; *************** function ___awmod *****************
 20195 ;; Defined at:
 20196 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 20197 ;; Parameters:    Size  Location     Type
 20198 ;;  dividend        2  [STACK] int 
 20199 ;;  divisor         2  [STACK] int 
 20200 ;; Auto vars:     Size  Location     Type
 20201 ;;  sign            1  [STACK] unsigned char 
 20202 ;;  counter         1  [STACK] unsigned char 
 20203 ;; Return value:  Size  Location     Type
 20204 ;;                  2  [STACK] int 
 20205 ;; Registers used:
 20206 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 20207 ;; Tracked objects:
 20208 ;;		On entry : 0/0
 20209 ;;		On exit  : 0/0
 20210 ;;		Unchanged: 0/0
 20211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20215 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20216 ;;Total ram usage:        0 bytes
 20217 ;; Hardware stack levels used:    1
 20218 ;; Hardware stack levels required when called:   15
 20219 ;; This function calls:
 20220 ;;		Nothing
 20221 ;; This function is called by:
 20222 ;;		_efgtoa
 20223 ;; This function uses a reentrant model
 20224 ;;
 20225                           
 20226                           	psect	text71
 20227  019AD4                     __ptext71:
 20228                           	opt callstack 0
 20229  019AD4                     ___awmod:
 20230                           	opt callstack 0
 20231                           
 20232                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20233  019AD4  52E6               	movf	postinc1,f,c
 20234  019AD6  52E6               	movf	postinc1,f,c
 20235                           
 20236                           ;stkvar	_sign @ sp[(-2)+0]
 20237                           
 20238                           ;incstack = 0
 20239 ;; hardware stack exceeded
 20240  019AD8  0EFE               	movlw	-2
 20241  019ADA  6AE3               	clrf	plusw1,c
 20242                           
 20243                           ;stkvar	_dividend @ sp[(-2)+-2]
 20244  019ADC  0EFD               	movlw	-3
 20245  019ADE  AEE3               	btfss	plusw1,7,c
 20246  019AE0  D009               	goto	l8731
 20247                           
 20248                           ;stkvar	_dividend @ sp[(-2)+-2]
 20249                           ;stkvar	_dividend @ sp[(-2)+-2]
 20250  019AE2  0EFC               	movlw	-4
 20251  019AE4  6CE3               	negf	plusw1,c
 20252  019AE6  0EFD               	movlw	-3
 20253  019AE8  1EE3               	comf	plusw1,f,c
 20254  019AEA  B0D8               	btfsc	status,0,c
 20255  019AEC  2AE3               	incf	plusw1,f,c
 20256                           
 20257                           ;stkvar	_sign @ sp[(-2)+0]
 20258  019AEE  0EFE               	movlw	-2
 20259  019AF0  6AE3               	clrf	plusw1,c
 20260  019AF2  2AE3               	incf	plusw1,f,c
 20261  019AF4                     l8731:
 20262                           
 20263                           ;stkvar	_divisor @ sp[(-2)+-4]
 20264  019AF4  0EFB               	movlw	-5
 20265  019AF6  AEE3               	btfss	plusw1,7,c
 20266  019AF8  D006               	goto	l8735
 20267                           
 20268                           ;stkvar	_divisor @ sp[(-2)+-4]
 20269                           ;stkvar	_divisor @ sp[(-2)+-4]
 20270  019AFA  0EFA               	movlw	-6
 20271  019AFC  6CE3               	negf	plusw1,c
 20272  019AFE  0EFB               	movlw	-5
 20273  019B00  1EE3               	comf	plusw1,f,c
 20274  019B02  B0D8               	btfsc	status,0,c
 20275  019B04  2AE3               	incf	plusw1,f,c
 20276  019B06                     l8735:
 20277                           
 20278                           ;stkvar	_divisor @ sp[(-2)+-4]
 20279  019B06  0EFA               	movlw	-6
 20280  019B08  006F FF8C  F001    	movff	plusw1,btemp
 20281  019B0E  0EFB               	movlw	-5
 20282  019B10  50E3               	movf	plusw1,w,c
 20283  019B12  1001               	iorwf	btemp^0,w,c
 20284  019B14  B4D8               	btfsc	status,2,c
 20285  019B16  D053               	goto	u7180
 20286                           
 20287                           ;stkvar	_counter @ sp[(-2)+1]
 20288  019B18  0EFF               	movlw	-1
 20289  019B1A  6AE3               	clrf	plusw1,c
 20290  019B1C  D012               	goto	L23
 20291  019B1E                     l8739:
 20292                           
 20293                           ;stkvar	_divisor @ sp[(-2)+-4]
 20294  019B1E  0EFA               	movlw	-6
 20295  019B20  50E3               	movf	plusw1,w,c
 20296  019B22  90D8               	bcf	status,0,c
 20297  019B24  34E8               	rlcf	wreg,w,c
 20298  019B26  6E01               	movwf	btemp^0,c
 20299  019B28  0EFA               	movlw	-6
 20300  019B2A  0060  F007  FFE3   	movff	btemp,plusw1
 20301  019B30  0EFB               	movlw	-5
 20302  019B32  50E3               	movf	plusw1,w,c
 20303  019B34  34E8               	rlcf	wreg,w,c
 20304  019B36  6E01               	movwf	btemp^0,c
 20305  019B38  0EFB               	movlw	-5
 20306  019B3A  0060  F007  FFE3   	movff	btemp,plusw1
 20307                           
 20308                           ;stkvar	_counter @ sp[(-2)+1]
 20309  019B40  0EFF               	movlw	-1
 20310  019B42                     L23:
 20311  019B42  2AE3               	incf	plusw1,f,c
 20312                           
 20313                           ;stkvar	_divisor @ sp[(-2)+-4]
 20314  019B44  0EFB               	movlw	-5
 20315  019B46  AEE3               	btfss	plusw1,7,c
 20316  019B48  D7EA               	goto	l8739
 20317  019B4A                     u7160:
 20318                           
 20319                           ;stkvar	_divisor @ sp[(-2)+-4]
 20320  019B4A  0EFA               	movlw	-6
 20321  019B4C  006F FF8C  F00B    	movff	plusw1,btemp+10
 20322  019B52  0EFB               	movlw	-5
 20323  019B54  006F FF8C  F00C    	movff	plusw1,btemp+11
 20324                           
 20325                           ;stkvar	_dividend @ sp[(-2)+-2]
 20326  019B5A  0EFC               	movlw	-4
 20327  019B5C  006F FF8C  F009    	movff	plusw1,btemp+8
 20328  019B62  0EFD               	movlw	-3
 20329  019B64  006F FF8C  F00A    	movff	plusw1,btemp+9
 20330  019B6A  500B               	movf	(btemp+10)^0,w,c
 20331  019B6C  5C09               	subwf	(btemp+8)^0,w,c
 20332  019B6E  500C               	movf	(btemp+11)^0,w,c
 20333  019B70  580A               	subwfb	(btemp+9)^0,w,c
 20334  019B72  A0D8               	btfss	status,0,c
 20335  019B74  D014               	goto	l8749
 20336                           
 20337                           ;stkvar	_divisor @ sp[(-2)+-4]
 20338                           ;stkvar	_dividend @ sp[(-2)+-2]
 20339  019B76  0EFC               	movlw	-4
 20340  019B78  50E3               	movf	plusw1,w,c
 20341  019B7A  6E01               	movwf	btemp^0,c
 20342  019B7C  0EFA               	movlw	-6
 20343  019B7E  50E3               	movf	plusw1,w,c
 20344  019B80  5E01               	subwf	btemp^0,f,c
 20345  019B82  0EFC               	movlw	-4
 20346  019B84  0060  F007  FFE3   	movff	btemp,plusw1
 20347  019B8A  0EFD               	movlw	-3
 20348  019B8C  50E3               	movf	plusw1,w,c
 20349  019B8E  6E01               	movwf	btemp^0,c
 20350  019B90  0EFB               	movlw	-5
 20351  019B92  50E3               	movf	plusw1,w,c
 20352  019B94  5A01               	subwfb	btemp^0,f,c
 20353  019B96  0EFD               	movlw	-3
 20354  019B98  0060  F007  FFE3   	movff	btemp,plusw1
 20355  019B9E                     l8749:
 20356                           
 20357                           ;stkvar	_divisor @ sp[(-2)+-4]
 20358  019B9E  90D8               	bcf	status,0,c
 20359  019BA0  0EFB               	movlw	-5
 20360  019BA2  32E3               	rrcf	plusw1,f,c
 20361  019BA4  0EFA               	movlw	-6
 20362  019BA6  32E3               	rrcf	plusw1,f,c
 20363                           
 20364                           ;stkvar	_counter @ sp[(-2)+1]
 20365  019BA8  0EFF               	movlw	-1
 20366  019BAA  50E3               	movf	plusw1,w,c
 20367  019BAC  6E01               	movwf	btemp^0,c
 20368  019BAE  0E01               	movlw	1
 20369  019BB0  5E01               	subwf	btemp^0,f,c
 20370  019BB2  0EFF               	movlw	-1
 20371  019BB4  0060  F007  FFE3   	movff	btemp,plusw1
 20372  019BBA  A4D8               	btfss	status,2,c
 20373  019BBC  D7C6               	goto	u7160
 20374  019BBE                     u7180:
 20375                           
 20376                           ;stkvar	_sign @ sp[(-2)+0]
 20377  019BBE  0EFE               	movlw	-2
 20378  019BC0  50E3               	movf	plusw1,w,c
 20379  019BC2  B4D8               	btfsc	status,2,c
 20380  019BC4  D006               	goto	l8757
 20381                           
 20382                           ;stkvar	_dividend @ sp[(-2)+-2]
 20383                           ;stkvar	_dividend @ sp[(-2)+-2]
 20384  019BC6  0EFC               	movlw	-4
 20385  019BC8  6CE3               	negf	plusw1,c
 20386  019BCA  0EFD               	movlw	-3
 20387  019BCC  1EE3               	comf	plusw1,f,c
 20388  019BCE  B0D8               	btfsc	status,0,c
 20389  019BD0  2AE3               	incf	plusw1,f,c
 20390  019BD2                     l8757:
 20391                           
 20392                           ;stkvar	_dividend @ sp[(-2)+-2]
 20393  019BD2  0EFC               	movlw	-4
 20394  019BD4  006F FF8C  F001    	movff	plusw1,btemp
 20395  019BDA  0EFD               	movlw	-3
 20396  019BDC  006F FF8C  F002    	movff	plusw1,btemp+1
 20397                           
 20398                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 20399  019BE2  0EFA               	movlw	250
 20400  019BE4  26E1               	addwf	fsr1l,f,c
 20401  019BE6  0EFF               	movlw	255
 20402  019BE8  22E2               	addwfc	fsr1h,f,c
 20403  019BEA  0012               	return		;funcret
 20404  019BEC                     __end_of___awmod:
 20405                           	opt callstack 0
 20406                           
 20407 ;; *************** function ___awdiv *****************
 20408 ;; Defined at:
 20409 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 20410 ;; Parameters:    Size  Location     Type
 20411 ;;  dividend        2  [STACK] int 
 20412 ;;  divisor         2  [STACK] int 
 20413 ;; Auto vars:     Size  Location     Type
 20414 ;;  quotient        2  [STACK] int 
 20415 ;;  sign            1  [STACK] unsigned char 
 20416 ;;  counter         1  [STACK] unsigned char 
 20417 ;; Return value:  Size  Location     Type
 20418 ;;                  2  [STACK] int 
 20419 ;; Registers used:
 20420 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 20421 ;; Tracked objects:
 20422 ;;		On entry : 0/0
 20423 ;;		On exit  : 0/0
 20424 ;;		Unchanged: 0/0
 20425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20429 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20430 ;;Total ram usage:        0 bytes
 20431 ;; Hardware stack levels used:    1
 20432 ;; Hardware stack levels required when called:   15
 20433 ;; This function calls:
 20434 ;;		Nothing
 20435 ;; This function is called by:
 20436 ;;		_efgtoa
 20437 ;; This function uses a reentrant model
 20438 ;;
 20439                           
 20440                           	psect	text72
 20441  0194BE                     __ptext72:
 20442                           	opt callstack 0
 20443  0194BE                     ___awdiv:
 20444                           	opt callstack 0
 20445                           
 20446                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20447  0194BE  52E6               	movf	postinc1,f,c
 20448  0194C0  52E6               	movf	postinc1,f,c
 20449  0194C2  52E6               	movf	postinc1,f,c
 20450  0194C4  52E6               	movf	postinc1,f,c
 20451                           
 20452                           ;stkvar	_sign @ sp[(-4)+2]
 20453                           
 20454                           ;incstack = 0
 20455 ;; hardware stack exceeded
 20456  0194C6  0EFE               	movlw	-2
 20457  0194C8  6AE3               	clrf	plusw1,c
 20458                           
 20459                           ;stkvar	_divisor @ sp[(-4)+-4]
 20460  0194CA  0EF9               	movlw	-7
 20461  0194CC  AEE3               	btfss	plusw1,7,c
 20462  0194CE  D009               	goto	l8685
 20463                           
 20464                           ;stkvar	_divisor @ sp[(-4)+-4]
 20465                           ;stkvar	_divisor @ sp[(-4)+-4]
 20466  0194D0  0EF8               	movlw	-8
 20467  0194D2  6CE3               	negf	plusw1,c
 20468  0194D4  0EF9               	movlw	-7
 20469  0194D6  1EE3               	comf	plusw1,f,c
 20470  0194D8  B0D8               	btfsc	status,0,c
 20471  0194DA  2AE3               	incf	plusw1,f,c
 20472                           
 20473                           ;stkvar	_sign @ sp[(-4)+2]
 20474  0194DC  0EFE               	movlw	-2
 20475  0194DE  6AE3               	clrf	plusw1,c
 20476  0194E0  2AE3               	incf	plusw1,f,c
 20477  0194E2                     l8685:
 20478                           
 20479                           ;stkvar	_dividend @ sp[(-4)+-2]
 20480  0194E2  0EFB               	movlw	-5
 20481  0194E4  AEE3               	btfss	plusw1,7,c
 20482  0194E6  D008               	goto	l8691
 20483                           
 20484                           ;stkvar	_dividend @ sp[(-4)+-2]
 20485                           ;stkvar	_dividend @ sp[(-4)+-2]
 20486  0194E8  0EFA               	movlw	-6
 20487  0194EA  6CE3               	negf	plusw1,c
 20488  0194EC  0EFB               	movlw	-5
 20489  0194EE  1EE3               	comf	plusw1,f,c
 20490  0194F0  B0D8               	btfsc	status,0,c
 20491  0194F2  2AE3               	incf	plusw1,f,c
 20492                           
 20493                           ;stkvar	_sign @ sp[(-4)+2]
 20494  0194F4  0EFE               	movlw	-2
 20495  0194F6  70E3               	btg	plusw1,0,c
 20496  0194F8                     l8691:
 20497                           
 20498                           ;stkvar	_quotient @ sp[(-4)+0]
 20499  0194F8  0EFC               	movlw	-4
 20500  0194FA  6AE3               	clrf	plusw1,c
 20501  0194FC  0EFD               	movlw	-3
 20502  0194FE  6AE3               	clrf	plusw1,c
 20503                           
 20504                           ;stkvar	_divisor @ sp[(-4)+-4]
 20505  019500  0EF8               	movlw	-8
 20506  019502  006F FF8C  F001    	movff	plusw1,btemp
 20507  019508  0EF9               	movlw	-7
 20508  01950A  50E3               	movf	plusw1,w,c
 20509  01950C  1001               	iorwf	btemp^0,w,c
 20510  01950E  B4D8               	btfsc	status,2,c
 20511  019510  D066               	goto	u7110
 20512                           
 20513                           ;stkvar	_counter @ sp[(-4)+3]
 20514  019512  0EFF               	movlw	-1
 20515  019514  6AE3               	clrf	plusw1,c
 20516  019516  D012               	goto	L24
 20517  019518                     l8697:
 20518                           
 20519                           ;stkvar	_divisor @ sp[(-4)+-4]
 20520  019518  0EF8               	movlw	-8
 20521  01951A  50E3               	movf	plusw1,w,c
 20522  01951C  90D8               	bcf	status,0,c
 20523  01951E  34E8               	rlcf	wreg,w,c
 20524  019520  6E01               	movwf	btemp^0,c
 20525  019522  0EF8               	movlw	-8
 20526  019524  0060  F007  FFE3   	movff	btemp,plusw1
 20527  01952A  0EF9               	movlw	-7
 20528  01952C  50E3               	movf	plusw1,w,c
 20529  01952E  34E8               	rlcf	wreg,w,c
 20530  019530  6E01               	movwf	btemp^0,c
 20531  019532  0EF9               	movlw	-7
 20532  019534  0060  F007  FFE3   	movff	btemp,plusw1
 20533                           
 20534                           ;stkvar	_counter @ sp[(-4)+3]
 20535  01953A  0EFF               	movlw	-1
 20536  01953C                     L24:
 20537  01953C  2AE3               	incf	plusw1,f,c
 20538                           
 20539                           ;stkvar	_divisor @ sp[(-4)+-4]
 20540  01953E  0EF9               	movlw	-7
 20541  019540  AEE3               	btfss	plusw1,7,c
 20542  019542  D7EA               	goto	l8697
 20543  019544                     u7090:
 20544                           
 20545                           ;stkvar	_quotient @ sp[(-4)+0]
 20546  019544  0EFC               	movlw	-4
 20547  019546  50E3               	movf	plusw1,w,c
 20548  019548  90D8               	bcf	status,0,c
 20549  01954A  34E8               	rlcf	wreg,w,c
 20550  01954C  6E01               	movwf	btemp^0,c
 20551  01954E  0EFC               	movlw	-4
 20552  019550  0060  F007  FFE3   	movff	btemp,plusw1
 20553  019556  0EFD               	movlw	-3
 20554  019558  50E3               	movf	plusw1,w,c
 20555  01955A  34E8               	rlcf	wreg,w,c
 20556  01955C  6E01               	movwf	btemp^0,c
 20557  01955E  0EFD               	movlw	-3
 20558  019560  0060  F007  FFE3   	movff	btemp,plusw1
 20559                           
 20560                           ;stkvar	_divisor @ sp[(-4)+-4]
 20561  019566  0EF8               	movlw	-8
 20562  019568  006F FF8C  F00B    	movff	plusw1,btemp+10
 20563  01956E  0EF9               	movlw	-7
 20564  019570  006F FF8C  F00C    	movff	plusw1,btemp+11
 20565                           
 20566                           ;stkvar	_dividend @ sp[(-4)+-2]
 20567  019576  0EFA               	movlw	-6
 20568  019578  006F FF8C  F009    	movff	plusw1,btemp+8
 20569  01957E  0EFB               	movlw	-5
 20570  019580  006F FF8C  F00A    	movff	plusw1,btemp+9
 20571  019586  500B               	movf	(btemp+10)^0,w,c
 20572  019588  5C09               	subwf	(btemp+8)^0,w,c
 20573  01958A  500C               	movf	(btemp+11)^0,w,c
 20574  01958C  580A               	subwfb	(btemp+9)^0,w,c
 20575  01958E  A0D8               	btfss	status,0,c
 20576  019590  D016               	goto	l8711
 20577                           
 20578                           ;stkvar	_divisor @ sp[(-4)+-4]
 20579                           ;stkvar	_dividend @ sp[(-4)+-2]
 20580  019592  0EFA               	movlw	-6
 20581  019594  50E3               	movf	plusw1,w,c
 20582  019596  6E01               	movwf	btemp^0,c
 20583  019598  0EF8               	movlw	-8
 20584  01959A  50E3               	movf	plusw1,w,c
 20585  01959C  5E01               	subwf	btemp^0,f,c
 20586  01959E  0EFA               	movlw	-6
 20587  0195A0  0060  F007  FFE3   	movff	btemp,plusw1
 20588  0195A6  0EFB               	movlw	-5
 20589  0195A8  50E3               	movf	plusw1,w,c
 20590  0195AA  6E01               	movwf	btemp^0,c
 20591  0195AC  0EF9               	movlw	-7
 20592  0195AE  50E3               	movf	plusw1,w,c
 20593  0195B0  5A01               	subwfb	btemp^0,f,c
 20594  0195B2  0EFB               	movlw	-5
 20595  0195B4  0060  F007  FFE3   	movff	btemp,plusw1
 20596                           
 20597                           ;stkvar	_quotient @ sp[(-4)+0]
 20598  0195BA  0EFC               	movlw	-4
 20599  0195BC  80E3               	bsf	plusw1,0,c
 20600  0195BE                     l8711:
 20601                           
 20602                           ;stkvar	_divisor @ sp[(-4)+-4]
 20603  0195BE  90D8               	bcf	status,0,c
 20604  0195C0  0EF9               	movlw	-7
 20605  0195C2  32E3               	rrcf	plusw1,f,c
 20606  0195C4  0EF8               	movlw	-8
 20607  0195C6  32E3               	rrcf	plusw1,f,c
 20608                           
 20609                           ;stkvar	_counter @ sp[(-4)+3]
 20610  0195C8  0EFF               	movlw	-1
 20611  0195CA  50E3               	movf	plusw1,w,c
 20612  0195CC  6E01               	movwf	btemp^0,c
 20613  0195CE  0E01               	movlw	1
 20614  0195D0  5E01               	subwf	btemp^0,f,c
 20615  0195D2  0EFF               	movlw	-1
 20616  0195D4  0060  F007  FFE3   	movff	btemp,plusw1
 20617  0195DA  A4D8               	btfss	status,2,c
 20618  0195DC  D7B3               	goto	u7090
 20619  0195DE                     u7110:
 20620                           
 20621                           ;stkvar	_sign @ sp[(-4)+2]
 20622  0195DE  0EFE               	movlw	-2
 20623  0195E0  50E3               	movf	plusw1,w,c
 20624  0195E2  B4D8               	btfsc	status,2,c
 20625  0195E4  D006               	goto	l8719
 20626                           
 20627                           ;stkvar	_quotient @ sp[(-4)+0]
 20628                           ;stkvar	_quotient @ sp[(-4)+0]
 20629  0195E6  0EFC               	movlw	-4
 20630  0195E8  6CE3               	negf	plusw1,c
 20631  0195EA  0EFD               	movlw	-3
 20632  0195EC  1EE3               	comf	plusw1,f,c
 20633  0195EE  B0D8               	btfsc	status,0,c
 20634  0195F0  2AE3               	incf	plusw1,f,c
 20635  0195F2                     l8719:
 20636                           
 20637                           ;stkvar	_quotient @ sp[(-4)+0]
 20638  0195F2  0EFC               	movlw	-4
 20639  0195F4  006F FF8C  F001    	movff	plusw1,btemp
 20640  0195FA  0EFD               	movlw	-3
 20641  0195FC  006F FF8C  F002    	movff	plusw1,btemp+1
 20642                           
 20643                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 20644  019602  0EF8               	movlw	248
 20645  019604  26E1               	addwf	fsr1l,f,c
 20646  019606  0EFF               	movlw	255
 20647  019608  22E2               	addwfc	fsr1h,f,c
 20648  01960A  0012               	return		;funcret
 20649  01960C                     __end_of___awdiv:
 20650                           	opt callstack 0
 20651                           
 20652 ;; *************** function _dtoa *****************
 20653 ;; Defined at:
 20654 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 20655 ;; Parameters:    Size  Location     Type
 20656 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20657 ;;		 -> f(6), NULL(0), 
 20658 ;;  d               8  [STACK] long long 
 20659 ;; Auto vars:     Size  Location     Type
 20660 ;;  n               8  [STACK] long long 
 20661 ;;  i               2  [STACK] int 
 20662 ;;  s               2  [STACK] int 
 20663 ;;  w               2  [STACK] int 
 20664 ;;  p               2  [STACK] int 
 20665 ;; Return value:  Size  Location     Type
 20666 ;;                  2  [STACK] int 
 20667 ;; Registers used:
 20668 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 20669 ;; Tracked objects:
 20670 ;;		On entry : 0/0
 20671 ;;		On exit  : 0/0
 20672 ;;		Unchanged: 0/0
 20673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20677 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20678 ;;Total ram usage:        0 bytes
 20679 ;; Hardware stack levels used:    1
 20680 ;; Hardware stack levels required when called:   20
 20681 ;; This function calls:
 20682 ;;		___aodiv
 20683 ;;		___aomod
 20684 ;;		_abs
 20685 ;;		_pad
 20686 ;; This function is called by:
 20687 ;;		_vfpfcnvrt
 20688 ;; This function uses a reentrant model
 20689 ;;
 20690                           
 20691                           	psect	text73
 20692  015822                     __ptext73:
 20693                           	opt callstack 0
 20694  015822                     _dtoa:
 20695                           	opt callstack 0
 20696                           
 20697                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 20698  015822  0E12               	movlw	18
 20699  015824  26E1               	addwf	fsr1l,f,c
 20700  015826  0E00               	movlw	0
 20701  015828  22E2               	addwfc	fsr1h,f,c
 20702                           
 20703                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 20704                           ;stkvar	_d @ sp[(-18)+-10]
 20705                           
 20706                           ;incstack = 0
 20707 ;; hardware stack exceeded
 20708  01582A  0EE4               	movlw	228
 20709  01582C  24E1               	addwf	fsr1l,w,c
 20710  01582E  6ED9               	movwf	fsr2l,c
 20711  015830  0EFF               	movlw	255
 20712  015832  20E2               	addwfc	fsr1h,w,c
 20713  015834  6EDA               	movwf	fsr2h,c
 20714                           
 20715                           ;stkvar	_n @ sp[(-18)+2]
 20716  015836  0E08               	movlw	8
 20717  015838  6E01               	movwf	btemp^0,c
 20718  01583A  0EF0               	movlw	-16
 20719  01583C                     us1106999:
 20720  01583C  006F FF7B FFE3     	movff	postinc2,plusw1
 20721  015842  28E8               	incf	wreg,w,c
 20722  015844  2E01               	decfsz	btemp^0,f,c
 20723  015846  D7FA               	bra	us1106999
 20724                           
 20725                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 20726                           ;stkvar	_n @ sp[(-18)+2]
 20727  015848  0EF7               	movlw	-9
 20728  01584A  AEE3               	btfss	plusw1,7,c
 20729  01584C  D002               	goto	u11070
 20730  01584E  0E01               	movlw	1
 20731  015850  D001               	goto	u11080
 20732  015852                     u11070:
 20733  015852  0E00               	movlw	0
 20734  015854                     u11080:
 20735  015854  6E0B               	movwf	(btemp+10)^0,c
 20736  015856  6A0C               	clrf	(btemp+11)^0,c
 20737                           
 20738                           ;stkvar	_s @ sp[(-18)+12]
 20739  015858  0EFA               	movlw	-6
 20740  01585A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20741  015860  0EFB               	movlw	-5
 20742  015862  0060  F033  FFE3   	movff	btemp+11,plusw1
 20743                           
 20744                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 20745                           ;stkvar	_s @ sp[(-18)+12]
 20746  015868  0EFA               	movlw	-6
 20747  01586A  006F FF8C  F001    	movff	plusw1,btemp
 20748  015870  0EFB               	movlw	-5
 20749  015872  50E3               	movf	plusw1,w,c
 20750  015874  1001               	iorwf	btemp^0,w,c
 20751  015876  B4D8               	btfsc	status,2,c
 20752  015878  D025               	goto	u11100
 20753                           
 20754                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 20755                           ;stkvar	_n @ sp[(-18)+2]
 20756                           ;stkvar	_n @ sp[(-18)+2]
 20757  01587A  0EF0               	movlw	-16
 20758  01587C  6CE3               	negf	plusw1,c
 20759  01587E  0EF1               	movlw	-15
 20760  015880  1EE3               	comf	plusw1,f,c
 20761  015882  0EF2               	movlw	-14
 20762  015884  1EE3               	comf	plusw1,f,c
 20763  015886  0EF3               	movlw	-13
 20764  015888  1EE3               	comf	plusw1,f,c
 20765  01588A  0EF4               	movlw	-12
 20766  01588C  1EE3               	comf	plusw1,f,c
 20767  01588E  0EF5               	movlw	-11
 20768  015890  1EE3               	comf	plusw1,f,c
 20769  015892  0EF6               	movlw	-10
 20770  015894  1EE3               	comf	plusw1,f,c
 20771  015896  0EF7               	movlw	-9
 20772  015898  1EE3               	comf	plusw1,f,c
 20773  01589A  E314               	bnc	u11100
 20774  01589C  0EF1               	movlw	-15
 20775  01589E  2AE3               	incf	plusw1,f,c
 20776  0158A0  E311               	bnc	u11100
 20777  0158A2  0EF2               	movlw	-14
 20778  0158A4  2AE3               	incf	plusw1,f,c
 20779  0158A6  E30E               	bnc	u11100
 20780  0158A8  0EF3               	movlw	-13
 20781  0158AA  2AE3               	incf	plusw1,f,c
 20782  0158AC  E30B               	bnc	u11100
 20783  0158AE  0EF4               	movlw	-12
 20784  0158B0  2AE3               	incf	plusw1,f,c
 20785  0158B2  E308               	bnc	u11100
 20786  0158B4  0EF5               	movlw	-11
 20787  0158B6  2AE3               	incf	plusw1,f,c
 20788  0158B8  E305               	bnc	u11100
 20789  0158BA  0EF6               	movlw	-10
 20790  0158BC  2AE3               	incf	plusw1,f,c
 20791  0158BE  E302               	bnc	u11100
 20792  0158C0  0EF7               	movlw	-9
 20793  0158C2  2AE3               	incf	plusw1,f,c
 20794  0158C4                     u11100:
 20795                           
 20796                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 20797  0158C4  AE3D               	btfss	(_prec+1)^0,7,c
 20798                           
 20799                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 20800  0158C6  923E               	bcf	_flags^0,1,c
 20801                           
 20802                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 20803  0158C8  BE3D               	btfsc	(_prec+1)^0,7,c
 20804  0158CA  D005               	goto	u11120
 20805  0158CC  503D               	movf	(_prec+1)^0,w,c
 20806  0158CE  E110               	bnz	l12205
 20807  0158D0  043C               	decf	_prec^0,w,c
 20808  0158D2  B0D8               	btfsc	status,0,c
 20809  0158D4  D00D               	goto	l12205
 20810  0158D6                     u11120:
 20811  0158D6  0E01               	movlw	1
 20812  0158D8  6E0B               	movwf	(btemp+10)^0,c
 20813  0158DA  0E00               	movlw	0
 20814  0158DC  6E0C               	movwf	(btemp+11)^0,c
 20815                           
 20816                           ;stkvar	_p @ sp[(-18)+16]
 20817  0158DE  0EFE               	movlw	-2
 20818  0158E0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20819  0158E6  0EFF               	movlw	-1
 20820  0158E8  0060  F033  FFE3   	movff	btemp+11,plusw1
 20821  0158EE  D008               	goto	l2233
 20822  0158F0                     l12205:
 20823                           
 20824                           ;stkvar	_p @ sp[(-18)+16]
 20825  0158F0  0EFE               	movlw	-2
 20826  0158F2  0060  F0F3  FFE3   	movff	_prec,plusw1
 20827  0158F8  0EFF               	movlw	-1
 20828  0158FA  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 20829  015900                     l2233:
 20830                           
 20831                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 20832                           ;stkvar	_w @ sp[(-18)+14]
 20833  015900  0EFC               	movlw	-4
 20834  015902  0060  F0EB  FFE3   	movff	_width,plusw1
 20835  015908  0EFD               	movlw	-3
 20836  01590A  0060  F0EF  FFE3   	movff	_width+1,plusw1
 20837                           
 20838                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 20839                           ;stkvar	_s @ sp[(-18)+12]
 20840  015910  0EFA               	movlw	-6
 20841  015912  006F FF8C  F001    	movff	plusw1,btemp
 20842  015918  0EFB               	movlw	-5
 20843  01591A  50E3               	movf	plusw1,w,c
 20844  01591C  1001               	iorwf	btemp^0,w,c
 20845  01591E  A4D8               	btfss	status,2,c
 20846  015920  D002               	goto	u11140
 20847  015922  A43E               	btfss	_flags^0,2,c
 20848  015924  D00A               	goto	l12213
 20849  015926                     u11140:
 20850                           
 20851                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 20852                           ;stkvar	_w @ sp[(-18)+14]
 20853  015926  50E1               	movf	fsr1l,w,c
 20854  015928  0FFC               	addlw	-4
 20855  01592A  6ED9               	movwf	fsr2l,c
 20856  01592C  50E2               	movf	fsr1h,w,c
 20857  01592E  6EDA               	movwf	fsr2h,c
 20858  015930  0EFF               	movlw	255
 20859  015932  22DA               	addwfc	fsr2h,f,c
 20860  015934  06DE               	decf	postinc2,f,c
 20861  015936  0E00               	movlw	0
 20862  015938  5ADD               	subwfb	postdec2,f,c
 20863  01593A                     l12213:
 20864                           
 20865                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 20866  01593A  0E4F               	movlw	79
 20867  01593C  6E0B               	movwf	(btemp+10)^0,c
 20868  01593E  0E00               	movlw	0
 20869  015940  6E0C               	movwf	(btemp+11)^0,c
 20870                           
 20871                           ;stkvar	_i @ sp[(-18)+10]
 20872  015942  0EF8               	movlw	-8
 20873  015944  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20874  01594A  0EF9               	movlw	-7
 20875  01594C  0060  F033  FFE3   	movff	btemp+11,plusw1
 20876                           
 20877                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 20878  015952  0102               	movlb	2	; () banked
 20879  015954  6BE6               	clrf	(_dbuf+79)& (0+255),b
 20880                           
 20881                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 20882  015956  D109               	goto	l12227
 20883  015958                     l12217:
 20884                           
 20885                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 20886                           ;stkvar	_i @ sp[(-18)+10]
 20887  015958  50E1               	movf	fsr1l,w,c
 20888  01595A  0FF8               	addlw	-8
 20889  01595C  6ED9               	movwf	fsr2l,c
 20890  01595E  50E2               	movf	fsr1h,w,c
 20891  015960  6EDA               	movwf	fsr2h,c
 20892  015962  0EFF               	movlw	255
 20893  015964  22DA               	addwfc	fsr2h,f,c
 20894  015966  06DE               	decf	postinc2,f,c
 20895  015968  0E00               	movlw	0
 20896  01596A  5ADD               	subwfb	postdec2,f,c
 20897                           
 20898                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 20899  01596C  0E0A               	movlw	10
 20900  01596E  6EE6               	movwf	postinc1,c
 20901  015970  0E00               	movlw	0
 20902  015972  6EE6               	movwf	postinc1,c
 20903  015974  0E00               	movlw	0
 20904  015976  6EE6               	movwf	postinc1,c
 20905  015978  0E00               	movlw	0
 20906  01597A  6EE6               	movwf	postinc1,c
 20907  01597C  0E00               	movlw	0
 20908  01597E  6EE6               	movwf	postinc1,c
 20909  015980  0E00               	movlw	0
 20910  015982  6EE6               	movwf	postinc1,c
 20911  015984  0E00               	movlw	0
 20912  015986  6EE6               	movwf	postinc1,c
 20913  015988  0E00               	movlw	0
 20914  01598A  6EE6               	movwf	postinc1,c
 20915                           
 20916                           ;stkvar	_n @ sp[(-26)+2]
 20917  01598C  50E1               	movf	fsr1l,w,c
 20918  01598E  0FE8               	addlw	-24
 20919  015990  6ED9               	movwf	fsr2l,c
 20920  015992  50E2               	movf	fsr1h,w,c
 20921  015994  6EDA               	movwf	fsr2h,c
 20922  015996  0EFF               	movlw	255
 20923  015998  22DA               	addwfc	fsr2h,f,c
 20924  01599A  006F FF7B FFE6     	movff	postinc2,postinc1
 20925  0159A0  006F FF7B FFE6     	movff	postinc2,postinc1
 20926  0159A6  006F FF7B FFE6     	movff	postinc2,postinc1
 20927  0159AC  006F FF7B FFE6     	movff	postinc2,postinc1
 20928  0159B2  006F FF7B FFE6     	movff	postinc2,postinc1
 20929  0159B8  006F FF7B FFE6     	movff	postinc2,postinc1
 20930  0159BE  006F FF7B FFE6     	movff	postinc2,postinc1
 20931  0159C4  006F FF7B FFE6     	movff	postinc2,postinc1
 20932  0159CA  EC1E  F0BF         	call	___aomod	;wreg free
 20933  0159CE  52E5               	movf	postdec1,f,c
 20934  0159D0  006F FF9C  F018    	movff	indf1,btemp+23
 20935  0159D6  52E5               	movf	postdec1,f,c
 20936  0159D8  006F FF9C  F017    	movff	indf1,btemp+22
 20937  0159DE  52E5               	movf	postdec1,f,c
 20938  0159E0  006F FF9C  F016    	movff	indf1,btemp+21
 20939  0159E6  52E5               	movf	postdec1,f,c
 20940  0159E8  006F FF9C  F015    	movff	indf1,btemp+20
 20941  0159EE  52E5               	movf	postdec1,f,c
 20942  0159F0  006F FF9C  F014    	movff	indf1,btemp+19
 20943  0159F6  52E5               	movf	postdec1,f,c
 20944  0159F8  006F FF9C  F013    	movff	indf1,btemp+18
 20945  0159FE  52E5               	movf	postdec1,f,c
 20946  015A00  006F FF9C  F012    	movff	indf1,btemp+17
 20947  015A06  52E5               	movf	postdec1,f,c
 20948  015A08  006F FF9C  F011    	movff	indf1,btemp+16
 20949  015A0E  0EF8               	movlw	248
 20950  015A10  26E1               	addwf	fsr1l,f,c
 20951  015A12  0EFF               	movlw	255
 20952  015A14  22E2               	addwfc	fsr1h,f,c
 20953  015A16  0060  F044  F00B   	movff	btemp+16,btemp+10
 20954  015A1C  0060  F048  F00C   	movff	btemp+17,btemp+11
 20955  015A22  0060  F02F  FFE6   	movff	btemp+10,postinc1
 20956  015A28  0060  F033  FFE6   	movff	btemp+11,postinc1
 20957  015A2E  EC9D  F0DC         	call	_abs	;wreg free
 20958  015A32  0E30               	movlw	48
 20959  015A34  2601               	addwf	btemp^0,f,c
 20960                           
 20961                           ;stkvar	_i @ sp[(-18)+10]
 20962  015A36  0EF8               	movlw	-8
 20963  015A38  006F FF8C  F00B    	movff	plusw1,btemp+10
 20964  015A3E  0EF9               	movlw	-7
 20965  015A40  006F FF8C  F00C    	movff	plusw1,btemp+11
 20966  015A46  0E97               	movlw	low _dbuf
 20967  015A48  240B               	addwf	(btemp+10)^0,w,c
 20968  015A4A  6ED9               	movwf	fsr2l,c
 20969  015A4C  0E02               	movlw	high _dbuf
 20970  015A4E  200C               	addwfc	(btemp+11)^0,w,c
 20971  015A50  6EDA               	movwf	fsr2h,c
 20972  015A52  0060  F007  FFDF   	movff	btemp,indf2
 20973                           
 20974                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 20975                           ;stkvar	_p @ sp[(-18)+16]
 20976  015A58  50E1               	movf	fsr1l,w,c
 20977  015A5A  0FFE               	addlw	-2
 20978  015A5C  6ED9               	movwf	fsr2l,c
 20979  015A5E  50E2               	movf	fsr1h,w,c
 20980  015A60  6EDA               	movwf	fsr2h,c
 20981  015A62  0EFF               	movlw	255
 20982  015A64  22DA               	addwfc	fsr2h,f,c
 20983  015A66  06DE               	decf	postinc2,f,c
 20984  015A68  0E00               	movlw	0
 20985  015A6A  5ADD               	subwfb	postdec2,f,c
 20986                           
 20987                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 20988                           ;stkvar	_w @ sp[(-18)+14]
 20989  015A6C  50E1               	movf	fsr1l,w,c
 20990  015A6E  0FFC               	addlw	-4
 20991  015A70  6ED9               	movwf	fsr2l,c
 20992  015A72  50E2               	movf	fsr1h,w,c
 20993  015A74  6EDA               	movwf	fsr2h,c
 20994  015A76  0EFF               	movlw	255
 20995  015A78  22DA               	addwfc	fsr2h,f,c
 20996  015A7A  06DE               	decf	postinc2,f,c
 20997  015A7C  0E00               	movlw	0
 20998  015A7E  5ADD               	subwfb	postdec2,f,c
 20999                           
 21000                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 21001  015A80  0E0A               	movlw	10
 21002  015A82  6EE6               	movwf	postinc1,c
 21003  015A84  0E00               	movlw	0
 21004  015A86  6EE6               	movwf	postinc1,c
 21005  015A88  0E00               	movlw	0
 21006  015A8A  6EE6               	movwf	postinc1,c
 21007  015A8C  0E00               	movlw	0
 21008  015A8E  6EE6               	movwf	postinc1,c
 21009  015A90  0E00               	movlw	0
 21010  015A92  6EE6               	movwf	postinc1,c
 21011  015A94  0E00               	movlw	0
 21012  015A96  6EE6               	movwf	postinc1,c
 21013  015A98  0E00               	movlw	0
 21014  015A9A  6EE6               	movwf	postinc1,c
 21015  015A9C  0E00               	movlw	0
 21016  015A9E  6EE6               	movwf	postinc1,c
 21017                           
 21018                           ;stkvar	_n @ sp[(-26)+2]
 21019  015AA0  50E1               	movf	fsr1l,w,c
 21020  015AA2  0FE8               	addlw	-24
 21021  015AA4  6ED9               	movwf	fsr2l,c
 21022  015AA6  50E2               	movf	fsr1h,w,c
 21023  015AA8  6EDA               	movwf	fsr2h,c
 21024  015AAA  0EFF               	movlw	255
 21025  015AAC  22DA               	addwfc	fsr2h,f,c
 21026  015AAE  006F FF7B FFE6     	movff	postinc2,postinc1
 21027  015AB4  006F FF7B FFE6     	movff	postinc2,postinc1
 21028  015ABA  006F FF7B FFE6     	movff	postinc2,postinc1
 21029  015AC0  006F FF7B FFE6     	movff	postinc2,postinc1
 21030  015AC6  006F FF7B FFE6     	movff	postinc2,postinc1
 21031  015ACC  006F FF7B FFE6     	movff	postinc2,postinc1
 21032  015AD2  006F FF7B FFE6     	movff	postinc2,postinc1
 21033  015AD8  006F FF7B FFE6     	movff	postinc2,postinc1
 21034  015ADE  EC81  F0BB         	call	___aodiv	;wreg free
 21035  015AE2  52E5               	movf	postdec1,f,c
 21036  015AE4  006F FF9C  F018    	movff	indf1,btemp+23
 21037  015AEA  52E5               	movf	postdec1,f,c
 21038  015AEC  006F FF9C  F017    	movff	indf1,btemp+22
 21039  015AF2  52E5               	movf	postdec1,f,c
 21040  015AF4  006F FF9C  F016    	movff	indf1,btemp+21
 21041  015AFA  52E5               	movf	postdec1,f,c
 21042  015AFC  006F FF9C  F015    	movff	indf1,btemp+20
 21043  015B02  52E5               	movf	postdec1,f,c
 21044  015B04  006F FF9C  F014    	movff	indf1,btemp+19
 21045  015B0A  52E5               	movf	postdec1,f,c
 21046  015B0C  006F FF9C  F013    	movff	indf1,btemp+18
 21047  015B12  52E5               	movf	postdec1,f,c
 21048  015B14  006F FF9C  F012    	movff	indf1,btemp+17
 21049  015B1A  52E5               	movf	postdec1,f,c
 21050  015B1C  006F FF9C  F011    	movff	indf1,btemp+16
 21051  015B22  0EF8               	movlw	248
 21052  015B24  26E1               	addwf	fsr1l,f,c
 21053  015B26  0EFF               	movlw	255
 21054  015B28  22E2               	addwfc	fsr1h,f,c
 21055                           
 21056                           ;stkvar	_n @ sp[(-18)+2]
 21057  015B2A  0EF0               	movlw	-16
 21058  015B2C  0060  F047  FFE3   	movff	btemp+16,plusw1
 21059  015B32  0EF1               	movlw	-15
 21060  015B34  0060  F04B  FFE3   	movff	btemp+17,plusw1
 21061  015B3A  0EF2               	movlw	-14
 21062  015B3C  0060  F04F  FFE3   	movff	btemp+18,plusw1
 21063  015B42  0EF3               	movlw	-13
 21064  015B44  0060  F053  FFE3   	movff	btemp+19,plusw1
 21065  015B4A  0EF4               	movlw	-12
 21066  015B4C  0060  F057  FFE3   	movff	btemp+20,plusw1
 21067  015B52  0EF5               	movlw	-11
 21068  015B54  0060  F05B  FFE3   	movff	btemp+21,plusw1
 21069  015B5A  0EF6               	movlw	-10
 21070  015B5C  0060  F05F  FFE3   	movff	btemp+22,plusw1
 21071  015B62  0EF7               	movlw	-9
 21072  015B64  0060  F063  FFE3   	movff	btemp+23,plusw1
 21073  015B6A                     l12227:
 21074                           
 21075                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 21076                           ;stkvar	_i @ sp[(-18)+10]
 21077  015B6A  0EF9               	movlw	-7
 21078  015B6C  BEE3               	btfsc	plusw1,7,c
 21079  015B6E  D036               	goto	u11190
 21080  015B70  0EF9               	movlw	-7
 21081  015B72  50E3               	movf	plusw1,w,c
 21082  015B74  E104               	bnz	u11150
 21083  015B76  0EF8               	movlw	-8
 21084  015B78  04E3               	decf	plusw1,w,c
 21085  015B7A  A0D8               	btfss	status,0,c
 21086  015B7C  D02F               	goto	u11190
 21087  015B7E                     u11150:
 21088                           
 21089                           ;stkvar	_n @ sp[(-18)+2]
 21090  015B7E  0EF0               	movlw	-16
 21091  015B80  50E3               	movf	plusw1,w,c
 21092  015B82  E115               	bnz	u11161
 21093  015B84  0EF1               	movlw	-15
 21094  015B86  50E3               	movf	plusw1,w,c
 21095  015B88  E112               	bnz	u11161
 21096  015B8A  0EF2               	movlw	-14
 21097  015B8C  50E3               	movf	plusw1,w,c
 21098  015B8E  E10F               	bnz	u11161
 21099  015B90  0EF3               	movlw	-13
 21100  015B92  50E3               	movf	plusw1,w,c
 21101  015B94  E10C               	bnz	u11161
 21102  015B96  0EF4               	movlw	-12
 21103  015B98  50E3               	movf	plusw1,w,c
 21104  015B9A  E109               	bnz	u11161
 21105  015B9C  0EF5               	movlw	-11
 21106  015B9E  50E3               	movf	plusw1,w,c
 21107  015BA0  E106               	bnz	u11161
 21108  015BA2  0EF6               	movlw	-10
 21109  015BA4  50E3               	movf	plusw1,w,c
 21110  015BA6  E103               	bnz	u11161
 21111  015BA8  0EF7               	movlw	-9
 21112  015BAA  50E3               	movf	plusw1,w,c
 21113  015BAC  A4D8               	btfss	status,2,c
 21114  015BAE                     u11161:
 21115  015BAE  D6D4               	goto	l12217
 21116                           
 21117                           ;stkvar	_p @ sp[(-18)+16]
 21118  015BB0  0EFF               	movlw	-1
 21119  015BB2  BEE3               	btfsc	plusw1,7,c
 21120  015BB4  D007               	goto	u11170
 21121  015BB6  0EFF               	movlw	-1
 21122  015BB8  50E3               	movf	plusw1,w,c
 21123  015BBA  E103               	bnz	u11171
 21124  015BBC  0EFE               	movlw	-2
 21125  015BBE  04E3               	decf	plusw1,w,c
 21126  015BC0  B0D8               	btfsc	status,0,c
 21127  015BC2                     u11171:
 21128  015BC2  D6CA               	goto	l12217
 21129  015BC4                     u11170:
 21130                           
 21131                           ;stkvar	_w @ sp[(-18)+14]
 21132  015BC4  0EFD               	movlw	-3
 21133  015BC6  BEE3               	btfsc	plusw1,7,c
 21134  015BC8  D009               	goto	u11190
 21135  015BCA  0EFD               	movlw	-3
 21136  015BCC  50E3               	movf	plusw1,w,c
 21137  015BCE  E104               	bnz	u11180
 21138  015BD0  0EFC               	movlw	-4
 21139  015BD2  04E3               	decf	plusw1,w,c
 21140  015BD4  A0D8               	btfss	status,0,c
 21141  015BD6  D002               	goto	u11190
 21142  015BD8                     u11180:
 21143  015BD8  B23E               	btfsc	_flags^0,1,c
 21144  015BDA  D6BE               	goto	l12217
 21145  015BDC                     u11190:
 21146                           
 21147                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 21148                           ;stkvar	_s @ sp[(-18)+12]
 21149  015BDC  0EFA               	movlw	-6
 21150  015BDE  006F FF8C  F001    	movff	plusw1,btemp
 21151  015BE4  0EFB               	movlw	-5
 21152  015BE6  50E3               	movf	plusw1,w,c
 21153  015BE8  1001               	iorwf	btemp^0,w,c
 21154  015BEA  A4D8               	btfss	status,2,c
 21155  015BEC  D002               	goto	u11210
 21156  015BEE  A43E               	btfss	_flags^0,2,c
 21157  015BF0  D033               	goto	l12251
 21158  015BF2                     u11210:
 21159                           
 21160                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 21161                           ;stkvar	_i @ sp[(-18)+10]
 21162  015BF2  50E1               	movf	fsr1l,w,c
 21163  015BF4  0FF8               	addlw	-8
 21164  015BF6  6ED9               	movwf	fsr2l,c
 21165  015BF8  50E2               	movf	fsr1h,w,c
 21166  015BFA  6EDA               	movwf	fsr2h,c
 21167  015BFC  0EFF               	movlw	255
 21168  015BFE  22DA               	addwfc	fsr2h,f,c
 21169  015C00  06DE               	decf	postinc2,f,c
 21170  015C02  0E00               	movlw	0
 21171  015C04  5ADD               	subwfb	postdec2,f,c
 21172                           
 21173                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 21174                           ;stkvar	_s @ sp[(-18)+12]
 21175  015C06  0EFA               	movlw	-6
 21176  015C08  006F FF8C  F001    	movff	plusw1,btemp
 21177  015C0E  0EFB               	movlw	-5
 21178  015C10  50E3               	movf	plusw1,w,c
 21179  015C12  1001               	iorwf	btemp^0,w,c
 21180  015C14  A4D8               	btfss	status,2,c
 21181  015C16  D002               	goto	l12247
 21182  015C18  0E2B               	movlw	43
 21183  015C1A  D001               	goto	L25
 21184  015C1C                     l12247:
 21185  015C1C  0E2D               	movlw	45
 21186  015C1E                     L25:
 21187  015C1E  6E0B               	movwf	(btemp+10)^0,c
 21188  015C20  0E00               	movlw	0
 21189  015C22  6E0C               	movwf	(btemp+11)^0,c
 21190                           
 21191                           ;stkvar	_dtoa$5635 @ sp[(-18)+0]
 21192  015C24  0EEE               	movlw	-18
 21193  015C26  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21194  015C2C  0EEF               	movlw	-17
 21195  015C2E  0060  F033  FFE3   	movff	btemp+11,plusw1
 21196                           
 21197                           ;stkvar	_dtoa$5635 @ sp[(-18)+0]
 21198                           ;stkvar	_i @ sp[(-18)+10]
 21199  015C34  0EF8               	movlw	-8
 21200  015C36  006F FF8C  F00B    	movff	plusw1,btemp+10
 21201  015C3C  0EF9               	movlw	-7
 21202  015C3E  006F FF8C  F00C    	movff	plusw1,btemp+11
 21203  015C44  0E97               	movlw	low _dbuf
 21204  015C46  240B               	addwf	(btemp+10)^0,w,c
 21205  015C48  6ED9               	movwf	fsr2l,c
 21206  015C4A  0E02               	movlw	high _dbuf
 21207  015C4C  200C               	addwfc	(btemp+11)^0,w,c
 21208  015C4E  6EDA               	movwf	fsr2h,c
 21209  015C50  0EEE               	movlw	-18
 21210  015C52  006F FF8F FFDF     	movff	plusw1,indf2
 21211  015C58                     l12251:
 21212                           
 21213                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 21214                           ;stkvar	_w @ sp[(-18)+14]
 21215  015C58  0EFC               	movlw	-4
 21216  015C5A  006F FF8F FFE6     	movff	plusw1,postinc1
 21217  015C60  006F FF8F FFE6     	movff	plusw1,postinc1
 21218                           
 21219                           ;stkvar	_i @ sp[(-20)+10]
 21220  015C66  0E97               	movlw	low _dbuf
 21221  015C68  6E0B               	movwf	(btemp+10)^0,c
 21222  015C6A  0E02               	movlw	high _dbuf
 21223  015C6C  6E0C               	movwf	(btemp+11)^0,c
 21224  015C6E  0EF6               	movlw	-10
 21225  015C70  50E3               	movf	plusw1,w,c
 21226  015C72  260B               	addwf	(btemp+10)^0,f,c
 21227  015C74  0EF7               	movlw	-9
 21228  015C76  50E3               	movf	plusw1,w,c
 21229  015C78  220C               	addwfc	(btemp+11)^0,f,c
 21230  015C7A  0060  F02F  FFE6   	movff	btemp+10,postinc1
 21231  015C80  0060  F033  FFE6   	movff	btemp+11,postinc1
 21232                           
 21233                           ;stkvar	_fp @ sp[(-22)+-2]
 21234  015C86  0EE8               	movlw	-24
 21235  015C88  006F FF8F FFE6     	movff	plusw1,postinc1
 21236  015C8E  006F FF8F FFE6     	movff	plusw1,postinc1
 21237  015C94  ECF6  F0CD         	call	_pad	;wreg free
 21238                           
 21239                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 21240  015C98  0EE4               	movlw	228
 21241  015C9A  26E1               	addwf	fsr1l,f,c
 21242  015C9C  0EFF               	movlw	255
 21243  015C9E  22E2               	addwfc	fsr1h,f,c
 21244  015CA0  0012               	return		;funcret
 21245  015CA2                     __end_of_dtoa:
 21246                           	opt callstack 0
 21247                           
 21248 ;; *************** function _abs *****************
 21249 ;; Defined at:
 21250 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 21251 ;; Parameters:    Size  Location     Type
 21252 ;;  a               2  [STACK] int 
 21253 ;; Auto vars:     Size  Location     Type
 21254 ;;		None
 21255 ;; Return value:  Size  Location     Type
 21256 ;;                  2  [STACK] int 
 21257 ;; Registers used:
 21258 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 21259 ;; Tracked objects:
 21260 ;;		On entry : 0/2
 21261 ;;		On exit  : 0/0
 21262 ;;		Unchanged: 0/0
 21263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21267 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21268 ;;Total ram usage:        0 bytes
 21269 ;; Hardware stack levels used:    1
 21270 ;; Hardware stack levels required when called:   15
 21271 ;; This function calls:
 21272 ;;		Nothing
 21273 ;; This function is called by:
 21274 ;;		_dtoa
 21275 ;; This function uses a reentrant model
 21276 ;;
 21277                           
 21278                           	psect	text74
 21279  01B93A                     __ptext74:
 21280                           	opt callstack 0
 21281  01B93A                     _abs:
 21282                           	opt callstack 0
 21283                           
 21284                           ;stkvar	_a @ sp[(0)+-2]
 21285                           
 21286                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21287                           ;incstack = 0
 21288 ;; hardware stack exceeded
 21289  01B93A  0EFF               	movlw	-1
 21290  01B93C  BEE3               	btfsc	plusw1,7,c
 21291  01B93E  D007               	goto	u6070
 21292  01B940  0EFF               	movlw	-1
 21293  01B942  50E3               	movf	plusw1,w,c
 21294  01B944  E112               	bnz	l8173
 21295  01B946  0EFE               	movlw	-2
 21296  01B948  04E3               	decf	plusw1,w,c
 21297  01B94A  B0D8               	btfsc	status,0,c
 21298  01B94C  D00E               	goto	l8173
 21299  01B94E                     u6070:
 21300                           
 21301                           ;stkvar	_a @ sp[(0)+-2]
 21302  01B94E  0EFE               	movlw	-2
 21303  01B950  006F FF8C  F001    	movff	plusw1,btemp
 21304  01B956  1E01               	comf	btemp^0,f,c
 21305  01B958  0EFF               	movlw	-1
 21306  01B95A  006F FF8C  F002    	movff	plusw1,btemp+1
 21307  01B960  1E02               	comf	(btemp+1)^0,f,c
 21308  01B962  2A01               	incf	btemp^0,f,c
 21309  01B964  B4D8               	btfsc	status,2,c
 21310  01B966  2A02               	incf	(btemp+1)^0,f,c
 21311  01B968  D008               	goto	l3159
 21312  01B96A                     l8173:
 21313                           
 21314                           ;stkvar	_a @ sp[(0)+-2]
 21315  01B96A  0EFE               	movlw	-2
 21316  01B96C  006F FF8C  F001    	movff	plusw1,btemp
 21317  01B972  0EFF               	movlw	-1
 21318  01B974  006F FF8C  F002    	movff	plusw1,btemp+1
 21319  01B97A                     l3159:
 21320                           
 21321                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 21322  01B97A  52E5               	movf	postdec1,f,c
 21323  01B97C  52E5               	movf	postdec1,f,c
 21324  01B97E  0012               	return		;funcret
 21325  01B980                     __end_of_abs:
 21326                           	opt callstack 0
 21327                           
 21328 ;; *************** function ___aomod *****************
 21329 ;; Defined at:
 21330 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 21331 ;; Parameters:    Size  Location     Type
 21332 ;;  dividend        8  [STACK] long long 
 21333 ;;  divisor         8  [STACK] long long 
 21334 ;; Auto vars:     Size  Location     Type
 21335 ;;  sign            1  [STACK] unsigned char 
 21336 ;;  counter         1  [STACK] unsigned char 
 21337 ;; Return value:  Size  Location     Type
 21338 ;;                  8  [STACK] long long 
 21339 ;; Registers used:
 21340 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 21341 ;; Tracked objects:
 21342 ;;		On entry : 0/2
 21343 ;;		On exit  : 0/0
 21344 ;;		Unchanged: 0/0
 21345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21349 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21350 ;;Total ram usage:        0 bytes
 21351 ;; Hardware stack levels used:    1
 21352 ;; Hardware stack levels required when called:   15
 21353 ;; This function calls:
 21354 ;;		Nothing
 21355 ;; This function is called by:
 21356 ;;		_dtoa
 21357 ;; This function uses a reentrant model
 21358 ;;
 21359                           
 21360                           	psect	text75
 21361  017E3C                     __ptext75:
 21362                           	opt callstack 0
 21363  017E3C                     ___aomod:
 21364                           	opt callstack 0
 21365                           
 21366                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 21367  017E3C  52E6               	movf	postinc1,f,c
 21368  017E3E  52E6               	movf	postinc1,f,c
 21369                           
 21370                           ;stkvar	_sign @ sp[(-2)+0]
 21371                           
 21372                           ;incstack = 0
 21373 ;; hardware stack exceeded
 21374  017E40  0EFE               	movlw	-2
 21375  017E42  6AE3               	clrf	plusw1,c
 21376                           
 21377                           ;stkvar	_dividend @ sp[(-2)+-8]
 21378  017E44  0EFD               	movlw	-3
 21379  017E46  AEE3               	btfss	plusw1,7,c
 21380  017E48  D028               	goto	l8331
 21381                           
 21382                           ;stkvar	_dividend @ sp[(-2)+-8]
 21383                           ;stkvar	_dividend @ sp[(-2)+-8]
 21384  017E4A  0EF6               	movlw	-10
 21385  017E4C  6CE3               	negf	plusw1,c
 21386  017E4E  0EF7               	movlw	-9
 21387  017E50  1EE3               	comf	plusw1,f,c
 21388  017E52  0EF8               	movlw	-8
 21389  017E54  1EE3               	comf	plusw1,f,c
 21390  017E56  0EF9               	movlw	-7
 21391  017E58  1EE3               	comf	plusw1,f,c
 21392  017E5A  0EFA               	movlw	-6
 21393  017E5C  1EE3               	comf	plusw1,f,c
 21394  017E5E  0EFB               	movlw	-5
 21395  017E60  1EE3               	comf	plusw1,f,c
 21396  017E62  0EFC               	movlw	-4
 21397  017E64  1EE3               	comf	plusw1,f,c
 21398  017E66  0EFD               	movlw	-3
 21399  017E68  1EE3               	comf	plusw1,f,c
 21400  017E6A  E314               	bnc	u6500
 21401  017E6C  0EF7               	movlw	-9
 21402  017E6E  2AE3               	incf	plusw1,f,c
 21403  017E70  E311               	bnc	u6500
 21404  017E72  0EF8               	movlw	-8
 21405  017E74  2AE3               	incf	plusw1,f,c
 21406  017E76  E30E               	bnc	u6500
 21407  017E78  0EF9               	movlw	-7
 21408  017E7A  2AE3               	incf	plusw1,f,c
 21409  017E7C  E30B               	bnc	u6500
 21410  017E7E  0EFA               	movlw	-6
 21411  017E80  2AE3               	incf	plusw1,f,c
 21412  017E82  E308               	bnc	u6500
 21413  017E84  0EFB               	movlw	-5
 21414  017E86  2AE3               	incf	plusw1,f,c
 21415  017E88  E305               	bnc	u6500
 21416  017E8A  0EFC               	movlw	-4
 21417  017E8C  2AE3               	incf	plusw1,f,c
 21418  017E8E  E302               	bnc	u6500
 21419  017E90  0EFD               	movlw	-3
 21420  017E92  2AE3               	incf	plusw1,f,c
 21421  017E94                     u6500:
 21422                           
 21423                           ;stkvar	_sign @ sp[(-2)+0]
 21424  017E94  0EFE               	movlw	-2
 21425  017E96  6AE3               	clrf	plusw1,c
 21426  017E98  2AE3               	incf	plusw1,f,c
 21427  017E9A                     l8331:
 21428                           
 21429                           ;stkvar	_divisor @ sp[(-2)+-16]
 21430  017E9A  0EF5               	movlw	-11
 21431  017E9C  AEE3               	btfss	plusw1,7,c
 21432  017E9E  D025               	goto	u6520
 21433                           
 21434                           ;stkvar	_divisor @ sp[(-2)+-16]
 21435                           ;stkvar	_divisor @ sp[(-2)+-16]
 21436  017EA0  0EEE               	movlw	-18
 21437  017EA2  6CE3               	negf	plusw1,c
 21438  017EA4  0EEF               	movlw	-17
 21439  017EA6  1EE3               	comf	plusw1,f,c
 21440  017EA8  0EF0               	movlw	-16
 21441  017EAA  1EE3               	comf	plusw1,f,c
 21442  017EAC  0EF1               	movlw	-15
 21443  017EAE  1EE3               	comf	plusw1,f,c
 21444  017EB0  0EF2               	movlw	-14
 21445  017EB2  1EE3               	comf	plusw1,f,c
 21446  017EB4  0EF3               	movlw	-13
 21447  017EB6  1EE3               	comf	plusw1,f,c
 21448  017EB8  0EF4               	movlw	-12
 21449  017EBA  1EE3               	comf	plusw1,f,c
 21450  017EBC  0EF5               	movlw	-11
 21451  017EBE  1EE3               	comf	plusw1,f,c
 21452  017EC0  E314               	bnc	u6520
 21453  017EC2  0EEF               	movlw	-17
 21454  017EC4  2AE3               	incf	plusw1,f,c
 21455  017EC6  E311               	bnc	u6520
 21456  017EC8  0EF0               	movlw	-16
 21457  017ECA  2AE3               	incf	plusw1,f,c
 21458  017ECC  E30E               	bnc	u6520
 21459  017ECE  0EF1               	movlw	-15
 21460  017ED0  2AE3               	incf	plusw1,f,c
 21461  017ED2  E30B               	bnc	u6520
 21462  017ED4  0EF2               	movlw	-14
 21463  017ED6  2AE3               	incf	plusw1,f,c
 21464  017ED8  E308               	bnc	u6520
 21465  017EDA  0EF3               	movlw	-13
 21466  017EDC  2AE3               	incf	plusw1,f,c
 21467  017EDE  E305               	bnc	u6520
 21468  017EE0  0EF4               	movlw	-12
 21469  017EE2  2AE3               	incf	plusw1,f,c
 21470  017EE4  E302               	bnc	u6520
 21471  017EE6  0EF5               	movlw	-11
 21472  017EE8  2AE3               	incf	plusw1,f,c
 21473  017EEA                     u6520:
 21474                           
 21475                           ;stkvar	_divisor @ sp[(-2)+-16]
 21476  017EEA  0EEE               	movlw	-18
 21477  017EEC  50E3               	movf	plusw1,w,c
 21478  017EEE  E116               	bnz	u6530
 21479  017EF0  0EEF               	movlw	-17
 21480  017EF2  50E3               	movf	plusw1,w,c
 21481  017EF4  E113               	bnz	u6530
 21482  017EF6  0EF0               	movlw	-16
 21483  017EF8  50E3               	movf	plusw1,w,c
 21484  017EFA  E110               	bnz	u6530
 21485  017EFC  0EF1               	movlw	-15
 21486  017EFE  50E3               	movf	plusw1,w,c
 21487  017F00  E10D               	bnz	u6530
 21488  017F02  0EF2               	movlw	-14
 21489  017F04  50E3               	movf	plusw1,w,c
 21490  017F06  E10A               	bnz	u6530
 21491  017F08  0EF3               	movlw	-13
 21492  017F0A  50E3               	movf	plusw1,w,c
 21493  017F0C  E107               	bnz	u6530
 21494  017F0E  0EF4               	movlw	-12
 21495  017F10  50E3               	movf	plusw1,w,c
 21496  017F12  E104               	bnz	u6530
 21497  017F14  0EF5               	movlw	-11
 21498  017F16  50E3               	movf	plusw1,w,c
 21499  017F18  B4D8               	btfsc	status,2,c
 21500  017F1A  D075               	goto	u6560
 21501  017F1C                     u6530:
 21502                           
 21503                           ;stkvar	_counter @ sp[(-2)+1]
 21504  017F1C  0EFF               	movlw	-1
 21505  017F1E  6AE3               	clrf	plusw1,c
 21506  017F20  D012               	goto	L26
 21507  017F22                     l8339:
 21508                           
 21509                           ;stkvar	_divisor @ sp[(-2)+-16]
 21510  017F22  90D8               	bcf	status,0,c
 21511  017F24  0EEE               	movlw	-18
 21512  017F26  36E3               	rlcf	plusw1,f,c
 21513  017F28  0EEF               	movlw	-17
 21514  017F2A  36E3               	rlcf	plusw1,f,c
 21515  017F2C  0EF0               	movlw	-16
 21516  017F2E  36E3               	rlcf	plusw1,f,c
 21517  017F30  0EF1               	movlw	-15
 21518  017F32  36E3               	rlcf	plusw1,f,c
 21519  017F34  0EF2               	movlw	-14
 21520  017F36  36E3               	rlcf	plusw1,f,c
 21521  017F38  0EF3               	movlw	-13
 21522  017F3A  36E3               	rlcf	plusw1,f,c
 21523  017F3C  0EF4               	movlw	-12
 21524  017F3E  36E3               	rlcf	plusw1,f,c
 21525  017F40  0EF5               	movlw	-11
 21526  017F42  36E3               	rlcf	plusw1,f,c
 21527                           
 21528                           ;stkvar	_counter @ sp[(-2)+1]
 21529  017F44  0EFF               	movlw	-1
 21530  017F46                     L26:
 21531  017F46  2AE3               	incf	plusw1,f,c
 21532                           
 21533                           ;stkvar	_divisor @ sp[(-2)+-16]
 21534  017F48  0EF5               	movlw	-11
 21535  017F4A  AEE3               	btfss	plusw1,7,c
 21536  017F4C  D7EA               	goto	l8339
 21537  017F4E                     u6540:
 21538                           
 21539                           ;stkvar	_divisor @ sp[(-2)+-16]
 21540                           ;stkvar	_dividend @ sp[(-2)+-8]
 21541  017F4E  50E1               	movf	fsr1l,w,c
 21542  017F50  0FF6               	addlw	-10
 21543  017F52  6ED9               	movwf	fsr2l,c
 21544  017F54  50E2               	movf	fsr1h,w,c
 21545  017F56  6EDA               	movwf	fsr2h,c
 21546  017F58  0EFF               	movlw	255
 21547  017F5A  22DA               	addwfc	fsr2h,f,c
 21548  017F5C  0EEE               	movlw	-18
 21549  017F5E  50E3               	movf	plusw1,w,c
 21550  017F60  5CDE               	subwf	postinc2,w,c
 21551  017F62  0EEF               	movlw	-17
 21552  017F64  50E3               	movf	plusw1,w,c
 21553  017F66  58DE               	subwfb	postinc2,w,c
 21554  017F68  0EF0               	movlw	-16
 21555  017F6A  50E3               	movf	plusw1,w,c
 21556  017F6C  58DE               	subwfb	postinc2,w,c
 21557  017F6E  0EF1               	movlw	-15
 21558  017F70  50E3               	movf	plusw1,w,c
 21559  017F72  58DE               	subwfb	postinc2,w,c
 21560  017F74  0EF2               	movlw	-14
 21561  017F76  50E3               	movf	plusw1,w,c
 21562  017F78  58DE               	subwfb	postinc2,w,c
 21563  017F7A  0EF3               	movlw	-13
 21564  017F7C  50E3               	movf	plusw1,w,c
 21565  017F7E  58DE               	subwfb	postinc2,w,c
 21566  017F80  0EF4               	movlw	-12
 21567  017F82  50E3               	movf	plusw1,w,c
 21568  017F84  58DE               	subwfb	postinc2,w,c
 21569  017F86  0EF5               	movlw	-11
 21570  017F88  50E3               	movf	plusw1,w,c
 21571  017F8A  58DE               	subwfb	postinc2,w,c
 21572  017F8C  A0D8               	btfss	status,0,c
 21573  017F8E  D01F               	goto	l8347
 21574                           
 21575                           ;stkvar	_divisor @ sp[(-2)+-16]
 21576                           ;stkvar	_dividend @ sp[(-2)+-8]
 21577  017F90  50E1               	movf	fsr1l,w,c
 21578  017F92  0FF6               	addlw	-10
 21579  017F94  6ED9               	movwf	fsr2l,c
 21580  017F96  50E2               	movf	fsr1h,w,c
 21581  017F98  6EDA               	movwf	fsr2h,c
 21582  017F9A  0EFF               	movlw	255
 21583  017F9C  22DA               	addwfc	fsr2h,f,c
 21584  017F9E  0EEE               	movlw	-18
 21585  017FA0  50E3               	movf	plusw1,w,c
 21586  017FA2  5EDE               	subwf	postinc2,f,c
 21587  017FA4  0EEF               	movlw	-17
 21588  017FA6  50E3               	movf	plusw1,w,c
 21589  017FA8  5ADE               	subwfb	postinc2,f,c
 21590  017FAA  0EF0               	movlw	-16
 21591  017FAC  50E3               	movf	plusw1,w,c
 21592  017FAE  5ADE               	subwfb	postinc2,f,c
 21593  017FB0  0EF1               	movlw	-15
 21594  017FB2  50E3               	movf	plusw1,w,c
 21595  017FB4  5ADE               	subwfb	postinc2,f,c
 21596  017FB6  0EF2               	movlw	-14
 21597  017FB8  50E3               	movf	plusw1,w,c
 21598  017FBA  5ADE               	subwfb	postinc2,f,c
 21599  017FBC  0EF3               	movlw	-13
 21600  017FBE  50E3               	movf	plusw1,w,c
 21601  017FC0  5ADE               	subwfb	postinc2,f,c
 21602  017FC2  0EF4               	movlw	-12
 21603  017FC4  50E3               	movf	plusw1,w,c
 21604  017FC6  5ADE               	subwfb	postinc2,f,c
 21605  017FC8  0EF5               	movlw	-11
 21606  017FCA  50E3               	movf	plusw1,w,c
 21607  017FCC  5ADE               	subwfb	postinc2,f,c
 21608  017FCE                     l8347:
 21609                           
 21610                           ;stkvar	_divisor @ sp[(-2)+-16]
 21611  017FCE  90D8               	bcf	status,0,c
 21612  017FD0  0EF5               	movlw	-11
 21613  017FD2  32E3               	rrcf	plusw1,f,c
 21614  017FD4  0EF4               	movlw	-12
 21615  017FD6  32E3               	rrcf	plusw1,f,c
 21616  017FD8  0EF3               	movlw	-13
 21617  017FDA  32E3               	rrcf	plusw1,f,c
 21618  017FDC  0EF2               	movlw	-14
 21619  017FDE  32E3               	rrcf	plusw1,f,c
 21620  017FE0  0EF1               	movlw	-15
 21621  017FE2  32E3               	rrcf	plusw1,f,c
 21622  017FE4  0EF0               	movlw	-16
 21623  017FE6  32E3               	rrcf	plusw1,f,c
 21624  017FE8  0EEF               	movlw	-17
 21625  017FEA  32E3               	rrcf	plusw1,f,c
 21626  017FEC  0EEE               	movlw	-18
 21627  017FEE  32E3               	rrcf	plusw1,f,c
 21628                           
 21629                           ;stkvar	_counter @ sp[(-2)+1]
 21630  017FF0  0EFF               	movlw	-1
 21631  017FF2  50E3               	movf	plusw1,w,c
 21632  017FF4  6E01               	movwf	btemp^0,c
 21633  017FF6  0E01               	movlw	1
 21634  017FF8  5E01               	subwf	btemp^0,f,c
 21635  017FFA  0EFF               	movlw	-1
 21636  017FFC  0060  F007  FFE3   	movff	btemp,plusw1
 21637  018002  A4D8               	btfss	status,2,c
 21638  018004  D7A4               	goto	u6540
 21639  018006                     u6560:
 21640                           
 21641                           ;stkvar	_sign @ sp[(-2)+0]
 21642  018006  0EFE               	movlw	-2
 21643  018008  50E3               	movf	plusw1,w,c
 21644  01800A  B4D8               	btfsc	status,2,c
 21645  01800C  D025               	goto	u6580
 21646                           
 21647                           ;stkvar	_dividend @ sp[(-2)+-8]
 21648                           ;stkvar	_dividend @ sp[(-2)+-8]
 21649  01800E  0EF6               	movlw	-10
 21650  018010  6CE3               	negf	plusw1,c
 21651  018012  0EF7               	movlw	-9
 21652  018014  1EE3               	comf	plusw1,f,c
 21653  018016  0EF8               	movlw	-8
 21654  018018  1EE3               	comf	plusw1,f,c
 21655  01801A  0EF9               	movlw	-7
 21656  01801C  1EE3               	comf	plusw1,f,c
 21657  01801E  0EFA               	movlw	-6
 21658  018020  1EE3               	comf	plusw1,f,c
 21659  018022  0EFB               	movlw	-5
 21660  018024  1EE3               	comf	plusw1,f,c
 21661  018026  0EFC               	movlw	-4
 21662  018028  1EE3               	comf	plusw1,f,c
 21663  01802A  0EFD               	movlw	-3
 21664  01802C  1EE3               	comf	plusw1,f,c
 21665  01802E  E314               	bnc	u6580
 21666  018030  0EF7               	movlw	-9
 21667  018032  2AE3               	incf	plusw1,f,c
 21668  018034  E311               	bnc	u6580
 21669  018036  0EF8               	movlw	-8
 21670  018038  2AE3               	incf	plusw1,f,c
 21671  01803A  E30E               	bnc	u6580
 21672  01803C  0EF9               	movlw	-7
 21673  01803E  2AE3               	incf	plusw1,f,c
 21674  018040  E30B               	bnc	u6580
 21675  018042  0EFA               	movlw	-6
 21676  018044  2AE3               	incf	plusw1,f,c
 21677  018046  E308               	bnc	u6580
 21678  018048  0EFB               	movlw	-5
 21679  01804A  2AE3               	incf	plusw1,f,c
 21680  01804C  E305               	bnc	u6580
 21681  01804E  0EFC               	movlw	-4
 21682  018050  2AE3               	incf	plusw1,f,c
 21683  018052  E302               	bnc	u6580
 21684  018054  0EFD               	movlw	-3
 21685  018056  2AE3               	incf	plusw1,f,c
 21686  018058                     u6580:
 21687                           
 21688                           ;stkvar	_dividend @ sp[(-2)+-8]
 21689  018058  0EF6               	movlw	246
 21690  01805A  24E1               	addwf	fsr1l,w,c
 21691  01805C  6ED9               	movwf	fsr2l,c
 21692  01805E  0EFF               	movlw	255
 21693  018060  20E2               	addwfc	fsr1h,w,c
 21694  018062  6EDA               	movwf	fsr2h,c
 21695                           
 21696                           ;stkvar	?___aomod @ sp[(-2)+-8]
 21697  018064  0E08               	movlw	8
 21698  018066  6E01               	movwf	btemp^0,c
 21699  018068  0EF6               	movlw	-10
 21700  01806A                     us659999:
 21701  01806A  006F FF7B FFE3     	movff	postinc2,plusw1
 21702  018070  28E8               	incf	wreg,w,c
 21703  018072  2E01               	decfsz	btemp^0,f,c
 21704  018074  D7FA               	bra	us659999
 21705                           
 21706                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 21707  018076  52E5               	movf	postdec1,f,c
 21708  018078  52E5               	movf	postdec1,f,c
 21709  01807A  0012               	return		;funcret
 21710  01807C                     __end_of___aomod:
 21711                           	opt callstack 0
 21712                           
 21713 ;; *************** function ___aodiv *****************
 21714 ;; Defined at:
 21715 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 21716 ;; Parameters:    Size  Location     Type
 21717 ;;  dividend        8  [STACK] long long 
 21718 ;;  divisor         8  [STACK] long long 
 21719 ;; Auto vars:     Size  Location     Type
 21720 ;;  quotient        8  [STACK] long long 
 21721 ;;  sign            1  [STACK] unsigned char 
 21722 ;;  counter         1  [STACK] unsigned char 
 21723 ;; Return value:  Size  Location     Type
 21724 ;;                  8  [STACK] long long 
 21725 ;; Registers used:
 21726 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 21727 ;; Tracked objects:
 21728 ;;		On entry : 0/2
 21729 ;;		On exit  : 0/0
 21730 ;;		Unchanged: 0/0
 21731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21735 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21736 ;;Total ram usage:        0 bytes
 21737 ;; Hardware stack levels used:    1
 21738 ;; Hardware stack levels required when called:   15
 21739 ;; This function calls:
 21740 ;;		Nothing
 21741 ;; This function is called by:
 21742 ;;		_dtoa
 21743 ;; This function uses a reentrant model
 21744 ;;
 21745                           
 21746                           	psect	text76
 21747  017702                     __ptext76:
 21748                           	opt callstack 0
 21749  017702                     ___aodiv:
 21750                           	opt callstack 0
 21751                           
 21752                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 21753  017702  0E0A               	movlw	10
 21754  017704  26E1               	addwf	fsr1l,f,c
 21755  017706  0E00               	movlw	0
 21756  017708  22E2               	addwfc	fsr1h,f,c
 21757                           
 21758                           ;stkvar	_sign @ sp[(-10)+8]
 21759                           
 21760                           ;incstack = 0
 21761 ;; hardware stack exceeded
 21762  01770A  0EFE               	movlw	-2
 21763  01770C  6AE3               	clrf	plusw1,c
 21764                           
 21765                           ;stkvar	_divisor @ sp[(-10)+-16]
 21766  01770E  0EED               	movlw	-19
 21767  017710  AEE3               	btfss	plusw1,7,c
 21768  017712  D028               	goto	l8287
 21769                           
 21770                           ;stkvar	_divisor @ sp[(-10)+-16]
 21771                           ;stkvar	_divisor @ sp[(-10)+-16]
 21772  017714  0EE6               	movlw	-26
 21773  017716  6CE3               	negf	plusw1,c
 21774  017718  0EE7               	movlw	-25
 21775  01771A  1EE3               	comf	plusw1,f,c
 21776  01771C  0EE8               	movlw	-24
 21777  01771E  1EE3               	comf	plusw1,f,c
 21778  017720  0EE9               	movlw	-23
 21779  017722  1EE3               	comf	plusw1,f,c
 21780  017724  0EEA               	movlw	-22
 21781  017726  1EE3               	comf	plusw1,f,c
 21782  017728  0EEB               	movlw	-21
 21783  01772A  1EE3               	comf	plusw1,f,c
 21784  01772C  0EEC               	movlw	-20
 21785  01772E  1EE3               	comf	plusw1,f,c
 21786  017730  0EED               	movlw	-19
 21787  017732  1EE3               	comf	plusw1,f,c
 21788  017734  E314               	bnc	u6380
 21789  017736  0EE7               	movlw	-25
 21790  017738  2AE3               	incf	plusw1,f,c
 21791  01773A  E311               	bnc	u6380
 21792  01773C  0EE8               	movlw	-24
 21793  01773E  2AE3               	incf	plusw1,f,c
 21794  017740  E30E               	bnc	u6380
 21795  017742  0EE9               	movlw	-23
 21796  017744  2AE3               	incf	plusw1,f,c
 21797  017746  E30B               	bnc	u6380
 21798  017748  0EEA               	movlw	-22
 21799  01774A  2AE3               	incf	plusw1,f,c
 21800  01774C  E308               	bnc	u6380
 21801  01774E  0EEB               	movlw	-21
 21802  017750  2AE3               	incf	plusw1,f,c
 21803  017752  E305               	bnc	u6380
 21804  017754  0EEC               	movlw	-20
 21805  017756  2AE3               	incf	plusw1,f,c
 21806  017758  E302               	bnc	u6380
 21807  01775A  0EED               	movlw	-19
 21808  01775C  2AE3               	incf	plusw1,f,c
 21809  01775E                     u6380:
 21810                           
 21811                           ;stkvar	_sign @ sp[(-10)+8]
 21812  01775E  0EFE               	movlw	-2
 21813  017760  6AE3               	clrf	plusw1,c
 21814  017762  2AE3               	incf	plusw1,f,c
 21815  017764                     l8287:
 21816                           
 21817                           ;stkvar	_dividend @ sp[(-10)+-8]
 21818  017764  0EF5               	movlw	-11
 21819  017766  AEE3               	btfss	plusw1,7,c
 21820  017768  D027               	goto	l8293
 21821                           
 21822                           ;stkvar	_dividend @ sp[(-10)+-8]
 21823                           ;stkvar	_dividend @ sp[(-10)+-8]
 21824  01776A  0EEE               	movlw	-18
 21825  01776C  6CE3               	negf	plusw1,c
 21826  01776E  0EEF               	movlw	-17
 21827  017770  1EE3               	comf	plusw1,f,c
 21828  017772  0EF0               	movlw	-16
 21829  017774  1EE3               	comf	plusw1,f,c
 21830  017776  0EF1               	movlw	-15
 21831  017778  1EE3               	comf	plusw1,f,c
 21832  01777A  0EF2               	movlw	-14
 21833  01777C  1EE3               	comf	plusw1,f,c
 21834  01777E  0EF3               	movlw	-13
 21835  017780  1EE3               	comf	plusw1,f,c
 21836  017782  0EF4               	movlw	-12
 21837  017784  1EE3               	comf	plusw1,f,c
 21838  017786  0EF5               	movlw	-11
 21839  017788  1EE3               	comf	plusw1,f,c
 21840  01778A  E314               	bnc	u6400
 21841  01778C  0EEF               	movlw	-17
 21842  01778E  2AE3               	incf	plusw1,f,c
 21843  017790  E311               	bnc	u6400
 21844  017792  0EF0               	movlw	-16
 21845  017794  2AE3               	incf	plusw1,f,c
 21846  017796  E30E               	bnc	u6400
 21847  017798  0EF1               	movlw	-15
 21848  01779A  2AE3               	incf	plusw1,f,c
 21849  01779C  E30B               	bnc	u6400
 21850  01779E  0EF2               	movlw	-14
 21851  0177A0  2AE3               	incf	plusw1,f,c
 21852  0177A2  E308               	bnc	u6400
 21853  0177A4  0EF3               	movlw	-13
 21854  0177A6  2AE3               	incf	plusw1,f,c
 21855  0177A8  E305               	bnc	u6400
 21856  0177AA  0EF4               	movlw	-12
 21857  0177AC  2AE3               	incf	plusw1,f,c
 21858  0177AE  E302               	bnc	u6400
 21859  0177B0  0EF5               	movlw	-11
 21860  0177B2  2AE3               	incf	plusw1,f,c
 21861  0177B4                     u6400:
 21862                           
 21863                           ;stkvar	_sign @ sp[(-10)+8]
 21864  0177B4  0EFE               	movlw	-2
 21865  0177B6  70E3               	btg	plusw1,0,c
 21866  0177B8                     l8293:
 21867                           
 21868                           ;stkvar	_quotient @ sp[(-10)+0]
 21869  0177B8  0E07               	movlw	7
 21870  0177BA  6E01               	movwf	btemp^0,c
 21871  0177BC  0EF6               	movlw	-10
 21872  0177BE                     u6411:
 21873  0177BE  6AE3               	clrf	plusw1,c
 21874  0177C0  2AE8               	incf	wreg,f,c
 21875  0177C2  0601               	decf	btemp^0,f,c
 21876  0177C4  E2FC               	bc	u6411
 21877                           
 21878                           ;stkvar	_divisor @ sp[(-10)+-16]
 21879  0177C6  0EE6               	movlw	-26
 21880  0177C8  50E3               	movf	plusw1,w,c
 21881  0177CA  E116               	bnz	u6420
 21882  0177CC  0EE7               	movlw	-25
 21883  0177CE  50E3               	movf	plusw1,w,c
 21884  0177D0  E113               	bnz	u6420
 21885  0177D2  0EE8               	movlw	-24
 21886  0177D4  50E3               	movf	plusw1,w,c
 21887  0177D6  E110               	bnz	u6420
 21888  0177D8  0EE9               	movlw	-23
 21889  0177DA  50E3               	movf	plusw1,w,c
 21890  0177DC  E10D               	bnz	u6420
 21891  0177DE  0EEA               	movlw	-22
 21892  0177E0  50E3               	movf	plusw1,w,c
 21893  0177E2  E10A               	bnz	u6420
 21894  0177E4  0EEB               	movlw	-21
 21895  0177E6  50E3               	movf	plusw1,w,c
 21896  0177E8  E107               	bnz	u6420
 21897  0177EA  0EEC               	movlw	-20
 21898  0177EC  50E3               	movf	plusw1,w,c
 21899  0177EE  E104               	bnz	u6420
 21900  0177F0  0EED               	movlw	-19
 21901  0177F2  50E3               	movf	plusw1,w,c
 21902  0177F4  B4D8               	btfsc	status,2,c
 21903  0177F6  D088               	goto	u6450
 21904  0177F8                     u6420:
 21905                           
 21906                           ;stkvar	_counter @ sp[(-10)+9]
 21907  0177F8  0EFF               	movlw	-1
 21908  0177FA  6AE3               	clrf	plusw1,c
 21909  0177FC  D012               	goto	L27
 21910  0177FE                     l8299:
 21911                           
 21912                           ;stkvar	_divisor @ sp[(-10)+-16]
 21913  0177FE  90D8               	bcf	status,0,c
 21914  017800  0EE6               	movlw	-26
 21915  017802  36E3               	rlcf	plusw1,f,c
 21916  017804  0EE7               	movlw	-25
 21917  017806  36E3               	rlcf	plusw1,f,c
 21918  017808  0EE8               	movlw	-24
 21919  01780A  36E3               	rlcf	plusw1,f,c
 21920  01780C  0EE9               	movlw	-23
 21921  01780E  36E3               	rlcf	plusw1,f,c
 21922  017810  0EEA               	movlw	-22
 21923  017812  36E3               	rlcf	plusw1,f,c
 21924  017814  0EEB               	movlw	-21
 21925  017816  36E3               	rlcf	plusw1,f,c
 21926  017818  0EEC               	movlw	-20
 21927  01781A  36E3               	rlcf	plusw1,f,c
 21928  01781C  0EED               	movlw	-19
 21929  01781E  36E3               	rlcf	plusw1,f,c
 21930                           
 21931                           ;stkvar	_counter @ sp[(-10)+9]
 21932  017820  0EFF               	movlw	-1
 21933  017822                     L27:
 21934  017822  2AE3               	incf	plusw1,f,c
 21935                           
 21936                           ;stkvar	_divisor @ sp[(-10)+-16]
 21937  017824  0EED               	movlw	-19
 21938  017826  AEE3               	btfss	plusw1,7,c
 21939  017828  D7EA               	goto	l8299
 21940  01782A                     u6430:
 21941                           
 21942                           ;stkvar	_quotient @ sp[(-10)+0]
 21943  01782A  90D8               	bcf	status,0,c
 21944  01782C  0EF6               	movlw	-10
 21945  01782E  36E3               	rlcf	plusw1,f,c
 21946  017830  0EF7               	movlw	-9
 21947  017832  36E3               	rlcf	plusw1,f,c
 21948  017834  0EF8               	movlw	-8
 21949  017836  36E3               	rlcf	plusw1,f,c
 21950  017838  0EF9               	movlw	-7
 21951  01783A  36E3               	rlcf	plusw1,f,c
 21952  01783C  0EFA               	movlw	-6
 21953  01783E  36E3               	rlcf	plusw1,f,c
 21954  017840  0EFB               	movlw	-5
 21955  017842  36E3               	rlcf	plusw1,f,c
 21956  017844  0EFC               	movlw	-4
 21957  017846  36E3               	rlcf	plusw1,f,c
 21958  017848  0EFD               	movlw	-3
 21959  01784A  36E3               	rlcf	plusw1,f,c
 21960                           
 21961                           ;stkvar	_divisor @ sp[(-10)+-16]
 21962                           ;stkvar	_dividend @ sp[(-10)+-8]
 21963  01784C  50E1               	movf	fsr1l,w,c
 21964  01784E  0FEE               	addlw	-18
 21965  017850  6ED9               	movwf	fsr2l,c
 21966  017852  50E2               	movf	fsr1h,w,c
 21967  017854  6EDA               	movwf	fsr2h,c
 21968  017856  0EFF               	movlw	255
 21969  017858  22DA               	addwfc	fsr2h,f,c
 21970  01785A  0EE6               	movlw	-26
 21971  01785C  50E3               	movf	plusw1,w,c
 21972  01785E  5CDE               	subwf	postinc2,w,c
 21973  017860  0EE7               	movlw	-25
 21974  017862  50E3               	movf	plusw1,w,c
 21975  017864  58DE               	subwfb	postinc2,w,c
 21976  017866  0EE8               	movlw	-24
 21977  017868  50E3               	movf	plusw1,w,c
 21978  01786A  58DE               	subwfb	postinc2,w,c
 21979  01786C  0EE9               	movlw	-23
 21980  01786E  50E3               	movf	plusw1,w,c
 21981  017870  58DE               	subwfb	postinc2,w,c
 21982  017872  0EEA               	movlw	-22
 21983  017874  50E3               	movf	plusw1,w,c
 21984  017876  58DE               	subwfb	postinc2,w,c
 21985  017878  0EEB               	movlw	-21
 21986  01787A  50E3               	movf	plusw1,w,c
 21987  01787C  58DE               	subwfb	postinc2,w,c
 21988  01787E  0EEC               	movlw	-20
 21989  017880  50E3               	movf	plusw1,w,c
 21990  017882  58DE               	subwfb	postinc2,w,c
 21991  017884  0EED               	movlw	-19
 21992  017886  50E3               	movf	plusw1,w,c
 21993  017888  58DE               	subwfb	postinc2,w,c
 21994  01788A  A0D8               	btfss	status,0,c
 21995  01788C  D021               	goto	l8311
 21996                           
 21997                           ;stkvar	_divisor @ sp[(-10)+-16]
 21998                           ;stkvar	_dividend @ sp[(-10)+-8]
 21999  01788E  50E1               	movf	fsr1l,w,c
 22000  017890  0FEE               	addlw	-18
 22001  017892  6ED9               	movwf	fsr2l,c
 22002  017894  50E2               	movf	fsr1h,w,c
 22003  017896  6EDA               	movwf	fsr2h,c
 22004  017898  0EFF               	movlw	255
 22005  01789A  22DA               	addwfc	fsr2h,f,c
 22006  01789C  0EE6               	movlw	-26
 22007  01789E  50E3               	movf	plusw1,w,c
 22008  0178A0  5EDE               	subwf	postinc2,f,c
 22009  0178A2  0EE7               	movlw	-25
 22010  0178A4  50E3               	movf	plusw1,w,c
 22011  0178A6  5ADE               	subwfb	postinc2,f,c
 22012  0178A8  0EE8               	movlw	-24
 22013  0178AA  50E3               	movf	plusw1,w,c
 22014  0178AC  5ADE               	subwfb	postinc2,f,c
 22015  0178AE  0EE9               	movlw	-23
 22016  0178B0  50E3               	movf	plusw1,w,c
 22017  0178B2  5ADE               	subwfb	postinc2,f,c
 22018  0178B4  0EEA               	movlw	-22
 22019  0178B6  50E3               	movf	plusw1,w,c
 22020  0178B8  5ADE               	subwfb	postinc2,f,c
 22021  0178BA  0EEB               	movlw	-21
 22022  0178BC  50E3               	movf	plusw1,w,c
 22023  0178BE  5ADE               	subwfb	postinc2,f,c
 22024  0178C0  0EEC               	movlw	-20
 22025  0178C2  50E3               	movf	plusw1,w,c
 22026  0178C4  5ADE               	subwfb	postinc2,f,c
 22027  0178C6  0EED               	movlw	-19
 22028  0178C8  50E3               	movf	plusw1,w,c
 22029  0178CA  5ADE               	subwfb	postinc2,f,c
 22030                           
 22031                           ;stkvar	_quotient @ sp[(-10)+0]
 22032  0178CC  0EF6               	movlw	-10
 22033  0178CE  80E3               	bsf	plusw1,0,c
 22034  0178D0                     l8311:
 22035                           
 22036                           ;stkvar	_divisor @ sp[(-10)+-16]
 22037  0178D0  90D8               	bcf	status,0,c
 22038  0178D2  0EED               	movlw	-19
 22039  0178D4  32E3               	rrcf	plusw1,f,c
 22040  0178D6  0EEC               	movlw	-20
 22041  0178D8  32E3               	rrcf	plusw1,f,c
 22042  0178DA  0EEB               	movlw	-21
 22043  0178DC  32E3               	rrcf	plusw1,f,c
 22044  0178DE  0EEA               	movlw	-22
 22045  0178E0  32E3               	rrcf	plusw1,f,c
 22046  0178E2  0EE9               	movlw	-23
 22047  0178E4  32E3               	rrcf	plusw1,f,c
 22048  0178E6  0EE8               	movlw	-24
 22049  0178E8  32E3               	rrcf	plusw1,f,c
 22050  0178EA  0EE7               	movlw	-25
 22051  0178EC  32E3               	rrcf	plusw1,f,c
 22052  0178EE  0EE6               	movlw	-26
 22053  0178F0  32E3               	rrcf	plusw1,f,c
 22054                           
 22055                           ;stkvar	_counter @ sp[(-10)+9]
 22056  0178F2  0EFF               	movlw	-1
 22057  0178F4  50E3               	movf	plusw1,w,c
 22058  0178F6  6E01               	movwf	btemp^0,c
 22059  0178F8  0E01               	movlw	1
 22060  0178FA  5E01               	subwf	btemp^0,f,c
 22061  0178FC  0EFF               	movlw	-1
 22062  0178FE  0060  F007  FFE3   	movff	btemp,plusw1
 22063  017904  A4D8               	btfss	status,2,c
 22064  017906  D791               	goto	u6430
 22065  017908                     u6450:
 22066                           
 22067                           ;stkvar	_sign @ sp[(-10)+8]
 22068  017908  0EFE               	movlw	-2
 22069  01790A  50E3               	movf	plusw1,w,c
 22070  01790C  B4D8               	btfsc	status,2,c
 22071  01790E  D025               	goto	u6470
 22072                           
 22073                           ;stkvar	_quotient @ sp[(-10)+0]
 22074                           ;stkvar	_quotient @ sp[(-10)+0]
 22075  017910  0EF6               	movlw	-10
 22076  017912  6CE3               	negf	plusw1,c
 22077  017914  0EF7               	movlw	-9
 22078  017916  1EE3               	comf	plusw1,f,c
 22079  017918  0EF8               	movlw	-8
 22080  01791A  1EE3               	comf	plusw1,f,c
 22081  01791C  0EF9               	movlw	-7
 22082  01791E  1EE3               	comf	plusw1,f,c
 22083  017920  0EFA               	movlw	-6
 22084  017922  1EE3               	comf	plusw1,f,c
 22085  017924  0EFB               	movlw	-5
 22086  017926  1EE3               	comf	plusw1,f,c
 22087  017928  0EFC               	movlw	-4
 22088  01792A  1EE3               	comf	plusw1,f,c
 22089  01792C  0EFD               	movlw	-3
 22090  01792E  1EE3               	comf	plusw1,f,c
 22091  017930  E314               	bnc	u6470
 22092  017932  0EF7               	movlw	-9
 22093  017934  2AE3               	incf	plusw1,f,c
 22094  017936  E311               	bnc	u6470
 22095  017938  0EF8               	movlw	-8
 22096  01793A  2AE3               	incf	plusw1,f,c
 22097  01793C  E30E               	bnc	u6470
 22098  01793E  0EF9               	movlw	-7
 22099  017940  2AE3               	incf	plusw1,f,c
 22100  017942  E30B               	bnc	u6470
 22101  017944  0EFA               	movlw	-6
 22102  017946  2AE3               	incf	plusw1,f,c
 22103  017948  E308               	bnc	u6470
 22104  01794A  0EFB               	movlw	-5
 22105  01794C  2AE3               	incf	plusw1,f,c
 22106  01794E  E305               	bnc	u6470
 22107  017950  0EFC               	movlw	-4
 22108  017952  2AE3               	incf	plusw1,f,c
 22109  017954  E302               	bnc	u6470
 22110  017956  0EFD               	movlw	-3
 22111  017958  2AE3               	incf	plusw1,f,c
 22112  01795A                     u6470:
 22113                           
 22114                           ;stkvar	_quotient @ sp[(-10)+0]
 22115  01795A  0EF6               	movlw	246
 22116  01795C  24E1               	addwf	fsr1l,w,c
 22117  01795E  6ED9               	movwf	fsr2l,c
 22118  017960  0EFF               	movlw	255
 22119  017962  20E2               	addwfc	fsr1h,w,c
 22120  017964  6EDA               	movwf	fsr2h,c
 22121                           
 22122                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 22123  017966  0E08               	movlw	8
 22124  017968  6E01               	movwf	btemp^0,c
 22125  01796A  0EEE               	movlw	-18
 22126  01796C                     us648999:
 22127  01796C  006F FF7B FFE3     	movff	postinc2,plusw1
 22128  017972  28E8               	incf	wreg,w,c
 22129  017974  2E01               	decfsz	btemp^0,f,c
 22130  017976  D7FA               	bra	us648999
 22131                           
 22132                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 22133  017978  0EF6               	movlw	246
 22134  01797A  26E1               	addwf	fsr1l,f,c
 22135  01797C  0EFF               	movlw	255
 22136  01797E  22E2               	addwfc	fsr1h,f,c
 22137  017980  0012               	return		;funcret
 22138  017982                     __end_of___aodiv:
 22139                           	opt callstack 0
 22140                           
 22141 ;; *************** function _ctoa *****************
 22142 ;; Defined at:
 22143 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 22144 ;; Parameters:    Size  Location     Type
 22145 ;;  fp              2  [STACK] PTR struct _IO_FILE
 22146 ;;		 -> f(6), NULL(0), 
 22147 ;;  c               1  [STACK] unsigned char 
 22148 ;; Auto vars:     Size  Location     Type
 22149 ;;  w               2  [STACK] int 
 22150 ;;  l               2    0        int 
 22151 ;; Return value:  Size  Location     Type
 22152 ;;                  2  [STACK] int 
 22153 ;; Registers used:
 22154 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 22155 ;; Tracked objects:
 22156 ;;		On entry : 0/0
 22157 ;;		On exit  : 0/0
 22158 ;;		Unchanged: 0/0
 22159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22163 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22164 ;;Total ram usage:        0 bytes
 22165 ;; Hardware stack levels used:    1
 22166 ;; Hardware stack levels required when called:   20
 22167 ;; This function calls:
 22168 ;;		_pad
 22169 ;; This function is called by:
 22170 ;;		_vfpfcnvrt
 22171 ;; This function uses a reentrant model
 22172 ;;
 22173                           
 22174                           	psect	text77
 22175  01AEA6                     __ptext77:
 22176                           	opt callstack 0
 22177  01AEA6                     _ctoa:
 22178                           	opt callstack 0
 22179                           
 22180                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22181  01AEA6  52E6               	movf	postinc1,f,c
 22182  01AEA8  52E6               	movf	postinc1,f,c
 22183                           
 22184                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 22185                           
 22186                           ;incstack = 0
 22187 ;; hardware stack exceeded
 22188  01AEAA  503A               	movf	_width^0,w,c
 22189  01AEAC  103B               	iorwf	(_width+1)^0,w,c
 22190  01AEAE  A4D8               	btfss	status,2,c
 22191  01AEB0  D009               	goto	l12179
 22192                           
 22193                           ;stkvar	_w @ sp[(-2)+0]
 22194  01AEB2  0EFE               	movlw	-2
 22195  01AEB4  0060  F0EB  FFE3   	movff	_width,plusw1
 22196  01AEBA  0EFF               	movlw	-1
 22197  01AEBC  0060  F0EF  FFE3   	movff	_width+1,plusw1
 22198  01AEC2  D016               	goto	l12181
 22199  01AEC4                     l12179:
 22200  01AEC4  0EFF               	movlw	255
 22201  01AEC6  6E0B               	movwf	(btemp+10)^0,c
 22202  01AEC8  0EFF               	movlw	255
 22203  01AECA  6E0C               	movwf	(btemp+11)^0,c
 22204  01AECC  0060  F0E8  F009   	movff	_width,btemp+8
 22205  01AED2  0060  F0EC  F00A   	movff	_width+1,btemp+9
 22206  01AED8  500B               	movf	(btemp+10)^0,w,c
 22207  01AEDA  2609               	addwf	(btemp+8)^0,f,c
 22208  01AEDC  500C               	movf	(btemp+11)^0,w,c
 22209  01AEDE  220A               	addwfc	(btemp+9)^0,f,c
 22210                           
 22211                           ;stkvar	_w @ sp[(-2)+0]
 22212  01AEE0  0EFE               	movlw	-2
 22213  01AEE2  0060  F027  FFE3   	movff	btemp+8,plusw1
 22214  01AEE8  0EFF               	movlw	-1
 22215  01AEEA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22216  01AEF0                     l12181:
 22217                           
 22218                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 22219                           ;stkvar	_c @ sp[(-2)+-3]
 22220  01AEF0  0EFB               	movlw	-5
 22221  01AEF2  006F FF8C  F297    	movff	plusw1,_dbuf
 22222                           
 22223                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 22224  01AEF8  0102               	movlb	2	; () banked
 22225  01AEFA  6B98               	clrf	(_dbuf+1)& (0+255),b
 22226                           
 22227                           ; BSR set to: 2
 22228                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 22229                           ;stkvar	_w @ sp[(-2)+0]
 22230  01AEFC  0EFE               	movlw	-2
 22231  01AEFE  006F FF8F FFE6     	movff	plusw1,postinc1
 22232  01AF04  006F FF8F FFE6     	movff	plusw1,postinc1
 22233  01AF0A  0E97               	movlw	low _dbuf
 22234  01AF0C  6EE6               	movwf	postinc1,c
 22235  01AF0E  0E02               	movlw	high _dbuf
 22236  01AF10  6EE6               	movwf	postinc1,c
 22237                           
 22238                           ;stkvar	_fp @ sp[(-6)+-2]
 22239  01AF12  0EF8               	movlw	-8
 22240  01AF14  006F FF8F FFE6     	movff	plusw1,postinc1
 22241  01AF1A  006F FF8F FFE6     	movff	plusw1,postinc1
 22242  01AF20  ECF6  F0CD         	call	_pad	;wreg free
 22243                           
 22244                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 22245  01AF24  0EFB               	movlw	251
 22246  01AF26  26E1               	addwf	fsr1l,f,c
 22247  01AF28  0EFF               	movlw	255
 22248  01AF2A  22E2               	addwfc	fsr1h,f,c
 22249  01AF2C  0012               	return		;funcret
 22250  01AF2E                     __end_of_ctoa:
 22251                           	opt callstack 0
 22252                           
 22253 ;; *************** function _pad *****************
 22254 ;; Defined at:
 22255 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 22256 ;; Parameters:    Size  Location     Type
 22257 ;;  fp              2  [STACK] PTR struct _IO_FILE
 22258 ;;		 -> f(6), NULL(0), 
 22259 ;;  buf             2  [STACK] PTR unsigned char 
 22260 ;;		 -> dbuf(80), 
 22261 ;;  p               2  [STACK] int 
 22262 ;; Auto vars:     Size  Location     Type
 22263 ;;  w               2  [STACK] int 
 22264 ;;  i               2  [STACK] int 
 22265 ;; Return value:  Size  Location     Type
 22266 ;;                  2  [STACK] int 
 22267 ;; Registers used:
 22268 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 22269 ;; Tracked objects:
 22270 ;;		On entry : 0/2
 22271 ;;		On exit  : 0/0
 22272 ;;		Unchanged: 0/0
 22273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22277 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22278 ;;Total ram usage:        0 bytes
 22279 ;; Hardware stack levels used:    1
 22280 ;; Hardware stack levels required when called:   19
 22281 ;; This function calls:
 22282 ;;		_fputc
 22283 ;;		_fputs
 22284 ;;		_strlen
 22285 ;; This function is called by:
 22286 ;;		_ctoa
 22287 ;;		_dtoa
 22288 ;;		_efgtoa
 22289 ;;		_utoa
 22290 ;;		_xtoa
 22291 ;; This function uses a reentrant model
 22292 ;;
 22293                           
 22294                           	psect	text78
 22295  019BEC                     __ptext78:
 22296                           	opt callstack 0
 22297  019BEC                     _pad:
 22298                           	opt callstack 0
 22299                           
 22300                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22301  019BEC  52E6               	movf	postinc1,f,c
 22302  019BEE  52E6               	movf	postinc1,f,c
 22303  019BF0  52E6               	movf	postinc1,f,c
 22304  019BF2  52E6               	movf	postinc1,f,c
 22305                           
 22306                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 22307                           
 22308                           ;incstack = 0
 22309 ;; hardware stack exceeded
 22310  019BF4  A03E               	btfss	_flags^0,0,c
 22311  019BF6  D010               	goto	l12141
 22312                           
 22313                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 22314                           ;stkvar	_fp @ sp[(-4)+-2]
 22315  019BF8  0EFA               	movlw	-6
 22316  019BFA  006F FF8F FFE6     	movff	plusw1,postinc1
 22317  019C00  006F FF8F FFE6     	movff	plusw1,postinc1
 22318                           
 22319                           ;stkvar	_buf @ sp[(-6)+-4]
 22320  019C06  0EF6               	movlw	-10
 22321  019C08  006F FF8F FFE6     	movff	plusw1,postinc1
 22322  019C0E  006F FF8F FFE6     	movff	plusw1,postinc1
 22323  019C14  EC75  F0D6         	call	_fputs	;wreg free
 22324  019C18                     l12141:
 22325                           
 22326                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 22327                           ;stkvar	_p @ sp[(-4)+-6]
 22328  019C18  0EF7               	movlw	-9
 22329  019C1A  BEE3               	btfsc	plusw1,7,c
 22330  019C1C  D011               	goto	l12145
 22331                           
 22332                           ;stkvar	_p @ sp[(-4)+-6]
 22333                           ;stkvar	_w @ sp[(-4)+0]
 22334  019C1E  0EF6               	movlw	-10
 22335  019C20  006F FF8C  F001    	movff	plusw1,btemp
 22336  019C26  0EFC               	movlw	-4
 22337  019C28  0060  F007  FFE3   	movff	btemp,plusw1
 22338  019C2E  0EF7               	movlw	-9
 22339  019C30  006F FF8C  F001    	movff	plusw1,btemp
 22340  019C36  0EFD               	movlw	-3
 22341  019C38  0060  F007  FFE3   	movff	btemp,plusw1
 22342  019C3E  D004               	goto	l2213
 22343  019C40                     l12145:
 22344                           
 22345                           ;stkvar	_w @ sp[(-4)+0]
 22346  019C40  0EFC               	movlw	-4
 22347  019C42  6AE3               	clrf	plusw1,c
 22348  019C44  0EFD               	movlw	-3
 22349  019C46  6AE3               	clrf	plusw1,c
 22350  019C48                     l2213:
 22351                           
 22352                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 22353                           ;stkvar	_i @ sp[(-4)+2]
 22354  019C48  0EFE               	movlw	-2
 22355  019C4A  6AE3               	clrf	plusw1,c
 22356  019C4C  0EFF               	movlw	-1
 22357  019C4E  6AE3               	clrf	plusw1,c
 22358                           
 22359                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 22360  019C50  D01E               	goto	l12151
 22361  019C52                     l12147:
 22362                           
 22363                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 22364                           ;stkvar	_fp @ sp[(-4)+-2]
 22365  019C52  0EFA               	movlw	-6
 22366  019C54  006F FF8F FFE6     	movff	plusw1,postinc1
 22367  019C5A  006F FF8F FFE6     	movff	plusw1,postinc1
 22368  019C60  0E20               	movlw	32
 22369  019C62  6EE6               	movwf	postinc1,c
 22370  019C64  0E00               	movlw	0
 22371  019C66  6EE6               	movwf	postinc1,c
 22372  019C68  ECD8  F0CC         	call	_fputc	;wreg free
 22373                           
 22374                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 22375                           ;stkvar	_i @ sp[(-4)+2]
 22376  019C6C  0EFE               	movlw	-2
 22377  019C6E  50E3               	movf	plusw1,w,c
 22378  019C70  0F01               	addlw	1
 22379  019C72  6E01               	movwf	btemp^0,c
 22380  019C74  0EFE               	movlw	-2
 22381  019C76  0060  F007  FFE3   	movff	btemp,plusw1
 22382  019C7C  6A01               	clrf	btemp^0,c
 22383  019C7E  0EFF               	movlw	-1
 22384  019C80  50E3               	movf	plusw1,w,c
 22385  019C82  2001               	addwfc	btemp^0,w,c
 22386  019C84  6E01               	movwf	btemp^0,c
 22387  019C86  0EFF               	movlw	-1
 22388  019C88  0060  F007  FFE3   	movff	btemp,plusw1
 22389  019C8E                     l12151:
 22390                           
 22391                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 22392                           ;stkvar	_w @ sp[(-4)+0]
 22393                           ;stkvar	_i @ sp[(-4)+2]
 22394  019C8E  50E1               	movf	fsr1l,w,c
 22395  019C90  0FFE               	addlw	-2
 22396  019C92  6ED9               	movwf	fsr2l,c
 22397  019C94  50E2               	movf	fsr1h,w,c
 22398  019C96  6EDA               	movwf	fsr2h,c
 22399  019C98  0EFF               	movlw	255
 22400  019C9A  22DA               	addwfc	fsr2h,f,c
 22401  019C9C  0EFC               	movlw	-4
 22402  019C9E  50E3               	movf	plusw1,w,c
 22403  019CA0  5CDE               	subwf	postinc2,w,c
 22404  019CA2  50DE               	movf	postinc2,w,c
 22405  019CA4  0A80               	xorlw	128
 22406  019CA6  6E01               	movwf	btemp^0,c
 22407  019CA8  0EFD               	movlw	-3
 22408  019CAA  50E3               	movf	plusw1,w,c
 22409  019CAC  0A80               	xorlw	128
 22410  019CAE  5801               	subwfb	btemp^0,w,c
 22411  019CB0  A0D8               	btfss	status,0,c
 22412  019CB2  D7CF               	goto	l12147
 22413                           
 22414                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 22415  019CB4  B03E               	btfsc	_flags^0,0,c
 22416  019CB6  D010               	goto	l12155
 22417                           
 22418                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 22419                           ;stkvar	_fp @ sp[(-4)+-2]
 22420  019CB8  0EFA               	movlw	-6
 22421  019CBA  006F FF8F FFE6     	movff	plusw1,postinc1
 22422  019CC0  006F FF8F FFE6     	movff	plusw1,postinc1
 22423                           
 22424                           ;stkvar	_buf @ sp[(-6)+-4]
 22425  019CC6  0EF6               	movlw	-10
 22426  019CC8  006F FF8F FFE6     	movff	plusw1,postinc1
 22427  019CCE  006F FF8F FFE6     	movff	plusw1,postinc1
 22428  019CD4  EC75  F0D6         	call	_fputs	;wreg free
 22429  019CD8                     l12155:
 22430                           
 22431                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 22432                           ;stkvar	_w @ sp[(-4)+0]
 22433                           ;stkvar	_buf @ sp[(-4)+-4]
 22434  019CD8  0EF8               	movlw	-8
 22435  019CDA  006F FF8F FFE6     	movff	plusw1,postinc1
 22436  019CE0  006F FF8F FFE6     	movff	plusw1,postinc1
 22437  019CE6  EC24  F0D6         	call	_strlen	;wreg free
 22438  019CEA  0EFC               	movlw	-4
 22439  019CEC  50E3               	movf	plusw1,w,c
 22440  019CEE  2601               	addwf	btemp^0,f,c
 22441  019CF0  0EFD               	movlw	-3
 22442  019CF2  50E3               	movf	plusw1,w,c
 22443  019CF4  2202               	addwfc	(btemp+1)^0,f,c
 22444                           
 22445                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 22446  019CF6  0EF6               	movlw	246
 22447  019CF8  26E1               	addwf	fsr1l,f,c
 22448  019CFA  0EFF               	movlw	255
 22449  019CFC  22E2               	addwfc	fsr1h,f,c
 22450  019CFE  0012               	return		;funcret
 22451  019D00                     __end_of_pad:
 22452                           	opt callstack 0
 22453                           
 22454 ;; *************** function _strlen *****************
 22455 ;; Defined at:
 22456 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 22457 ;; Parameters:    Size  Location     Type
 22458 ;;  s               2  [STACK] PTR const unsigned char 
 22459 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 22460 ;;		 -> spin(120), STR_46(9), STR_45(12), D.lcd(480), 
 22461 ;;		 -> D(482), T(144), port_data(512), STR_3(5), 
 22462 ;;		 -> V(191), 
 22463 ;; Auto vars:     Size  Location     Type
 22464 ;;  a               2  [STACK] PTR const unsigned char 
 22465 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 22466 ;;		 -> spin(120), STR_46(9), STR_45(12), D.lcd(480), 
 22467 ;;		 -> D(482), T(144), port_data(512), STR_3(5), 
 22468 ;;		 -> V(191), 
 22469 ;; Return value:  Size  Location     Type
 22470 ;;                  2  [STACK] unsigned int 
 22471 ;; Registers used:
 22472 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 22473 ;; Tracked objects:
 22474 ;;		On entry : 0/0
 22475 ;;		On exit  : 0/0
 22476 ;;		Unchanged: 0/0
 22477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22481 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22482 ;;Total ram usage:        0 bytes
 22483 ;; Hardware stack levels used:    1
 22484 ;; Hardware stack levels required when called:   15
 22485 ;; This function calls:
 22486 ;;		Nothing
 22487 ;; This function is called by:
 22488 ;;		_eaDogM_WriteString
 22489 ;;		_spinners
 22490 ;;		_calc_bsoc
 22491 ;;		_pad
 22492 ;;		_stoa
 22493 ;; This function uses a reentrant model
 22494 ;;
 22495                           
 22496                           	psect	text79
 22497  01AC48                     __ptext79:
 22498                           	opt callstack 0
 22499  01AC48                     _strlen:
 22500                           	opt callstack 0
 22501                           
 22502                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22503  01AC48  52E6               	movf	postinc1,f,c
 22504  01AC4A  52E6               	movf	postinc1,f,c
 22505                           
 22506                           ;stkvar	_s @ sp[(-2)+-2]
 22507                           
 22508                           ;incstack = 0
 22509 ;; hardware stack exceeded
 22510  01AC4C  0EFC               	movlw	-4
 22511  01AC4E  006F FF8C  F00B    	movff	plusw1,btemp+10
 22512  01AC54  0EFD               	movlw	-3
 22513  01AC56  006F FF8C  F00C    	movff	plusw1,btemp+11
 22514                           
 22515                           ;stkvar	_a @ sp[(-2)+0]
 22516  01AC5C  0EFF               	movlw	-1
 22517  01AC5E  0060  F033  FFE3   	movff	btemp+11,plusw1
 22518  01AC64  0EFE               	movlw	-2
 22519  01AC66  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22520  01AC6C  D011               	goto	l7863
 22521  01AC6E                     l7861:
 22522                           
 22523                           ;stkvar	_s @ sp[(-2)+-2]
 22524  01AC6E  0EFC               	movlw	-4
 22525  01AC70  50E3               	movf	plusw1,w,c
 22526  01AC72  0F01               	addlw	1
 22527  01AC74  6E01               	movwf	btemp^0,c
 22528  01AC76  0EFC               	movlw	-4
 22529  01AC78  0060  F007  FFE3   	movff	btemp,plusw1
 22530  01AC7E  6A01               	clrf	btemp^0,c
 22531  01AC80  0EFD               	movlw	-3
 22532  01AC82  50E3               	movf	plusw1,w,c
 22533  01AC84  2001               	addwfc	btemp^0,w,c
 22534  01AC86  6E01               	movwf	btemp^0,c
 22535  01AC88  0EFD               	movlw	-3
 22536  01AC8A  0060  F007  FFE3   	movff	btemp,plusw1
 22537  01AC90                     l7863:
 22538                           
 22539                           ;stkvar	_s @ sp[(-2)+-2]
 22540  01AC90  0EFC               	movlw	-4
 22541  01AC92  006F FF8F FFF6     	movff	plusw1,tblptrl
 22542  01AC98  0EFD               	movlw	-3
 22543  01AC9A  006F FF8F FFF7     	movff	plusw1,tblptrh
 22544  01ACA0  0E00               	movlw	low (__mediumconst shr (0+16))
 22545  01ACA2  6EF8               	movwf	tblptru,c
 22546  01ACA4  0E1F               	movlw	(high __ramtop+-1)
 22547  01ACA6  64F7               	cpfsgt	tblptrh,c
 22548  01ACA8  D003               	bra	u5497
 22549  01ACAA  0008               	tblrd		*
 22550  01ACAC  50F5               	movf	tablat,w,c
 22551  01ACAE  D007               	bra	u5490
 22552  01ACB0                     u5497:
 22553  01ACB0  006F FFDB FFE9     	movff	tblptrl,fsr0l
 22554  01ACB6  006F FFDF FFEA     	movff	tblptrh,fsr0h
 22555  01ACBC  50EF               	movf	indf0,w,c
 22556  01ACBE                     u5490:
 22557  01ACBE  0900               	iorlw	0
 22558  01ACC0  A4D8               	btfss	status,2,c
 22559  01ACC2  D7D5               	goto	l7861
 22560                           
 22561                           ;stkvar	_a @ sp[(-2)+0]
 22562                           ;stkvar	_s @ sp[(-2)+-2]
 22563  01ACC4  0EFC               	movlw	-4
 22564  01ACC6  006F FF8C  F001    	movff	plusw1,btemp
 22565  01ACCC  0EFD               	movlw	-3
 22566  01ACCE  006F FF8C  F002    	movff	plusw1,btemp+1
 22567  01ACD4  0EFE               	movlw	-2
 22568  01ACD6  50E3               	movf	plusw1,w,c
 22569  01ACD8  5E01               	subwf	btemp^0,f,c
 22570  01ACDA  0EFF               	movlw	-1
 22571  01ACDC  50E3               	movf	plusw1,w,c
 22572  01ACDE  5A02               	subwfb	(btemp+1)^0,f,c
 22573                           
 22574                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 22575  01ACE0  52E5               	movf	postdec1,f,c
 22576  01ACE2  52E5               	movf	postdec1,f,c
 22577  01ACE4  52E5               	movf	postdec1,f,c
 22578  01ACE6  52E5               	movf	postdec1,f,c
 22579  01ACE8  0012               	return		;funcret
 22580  01ACEA                     __end_of_strlen:
 22581                           	opt callstack 0
 22582                           
 22583 ;; *************** function _fputs *****************
 22584 ;; Defined at:
 22585 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 22586 ;; Parameters:    Size  Location     Type
 22587 ;;  s               2  [STACK] PTR const unsigned char 
 22588 ;;		 -> dbuf(80), 
 22589 ;;  fp              2  [STACK] PTR struct _IO_FILE
 22590 ;;		 -> f(6), NULL(0), 
 22591 ;; Auto vars:     Size  Location     Type
 22592 ;;  i               2  [STACK] int 
 22593 ;;  c               1  [STACK] unsigned char 
 22594 ;; Return value:  Size  Location     Type
 22595 ;;                  2  [STACK] int 
 22596 ;; Registers used:
 22597 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 22598 ;; Tracked objects:
 22599 ;;		On entry : 0/2
 22600 ;;		On exit  : 0/0
 22601 ;;		Unchanged: 0/0
 22602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22606 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22607 ;;Total ram usage:        0 bytes
 22608 ;; Hardware stack levels used:    1
 22609 ;; Hardware stack levels required when called:   18
 22610 ;; This function calls:
 22611 ;;		_fputc
 22612 ;; This function is called by:
 22613 ;;		_pad
 22614 ;; This function uses a reentrant model
 22615 ;;
 22616                           
 22617                           	psect	text80
 22618  01ACEA                     __ptext80:
 22619                           	opt callstack 0
 22620  01ACEA                     _fputs:
 22621                           	opt callstack 0
 22622                           
 22623                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22624  01ACEA  52E6               	movf	postinc1,f,c
 22625  01ACEC  52E6               	movf	postinc1,f,c
 22626  01ACEE  52E6               	movf	postinc1,f,c
 22627                           
 22628                           ;stkvar	_i @ sp[(-3)+0]
 22629                           
 22630                           ;incstack = 0
 22631 ;; hardware stack exceeded
 22632  01ACF0  0EFD               	movlw	-3
 22633  01ACF2  6AE3               	clrf	plusw1,c
 22634  01ACF4  0EFE               	movlw	-2
 22635  01ACF6  6AE3               	clrf	plusw1,c
 22636  01ACF8  D01F               	goto	l12093
 22637  01ACFA                     l12089:
 22638                           
 22639                           ;stkvar	_fp @ sp[(-3)+-4]
 22640  01ACFA  0EF9               	movlw	-7
 22641  01ACFC  006F FF8F FFE6     	movff	plusw1,postinc1
 22642  01AD02  006F FF8F FFE6     	movff	plusw1,postinc1
 22643                           
 22644                           ;stkvar	_c @ sp[(-5)+2]
 22645  01AD08  0EFD               	movlw	-3
 22646  01AD0A  50E3               	movf	plusw1,w,c
 22647  01AD0C  6EE6               	movwf	postinc1,c
 22648  01AD0E  0E00               	movlw	0
 22649  01AD10  6EE6               	movwf	postinc1,c
 22650  01AD12  ECD8  F0CC         	call	_fputc	;wreg free
 22651                           
 22652                           ;stkvar	_i @ sp[(-3)+0]
 22653  01AD16  0EFD               	movlw	-3
 22654  01AD18  50E3               	movf	plusw1,w,c
 22655  01AD1A  0F01               	addlw	1
 22656  01AD1C  6E01               	movwf	btemp^0,c
 22657  01AD1E  0EFD               	movlw	-3
 22658  01AD20  0060  F007  FFE3   	movff	btemp,plusw1
 22659  01AD26  6A01               	clrf	btemp^0,c
 22660  01AD28  0EFE               	movlw	-2
 22661  01AD2A  50E3               	movf	plusw1,w,c
 22662  01AD2C  2001               	addwfc	btemp^0,w,c
 22663  01AD2E  6E01               	movwf	btemp^0,c
 22664  01AD30  0EFE               	movlw	-2
 22665  01AD32  0060  F007  FFE3   	movff	btemp,plusw1
 22666  01AD38                     l12093:
 22667                           
 22668                           ;stkvar	_i @ sp[(-3)+0]
 22669  01AD38  0EFD               	movlw	-3
 22670  01AD3A  006F FF8C  F00B    	movff	plusw1,btemp+10
 22671  01AD40  0EFE               	movlw	-2
 22672  01AD42  006F FF8C  F00C    	movff	plusw1,btemp+11
 22673                           
 22674                           ;stkvar	_s @ sp[(-3)+-2]
 22675  01AD48  0EFB               	movlw	-5
 22676  01AD4A  006F FF8C  F009    	movff	plusw1,btemp+8
 22677  01AD50  0EFC               	movlw	-4
 22678  01AD52  006F FF8C  F00A    	movff	plusw1,btemp+9
 22679  01AD58  500B               	movf	(btemp+10)^0,w,c
 22680  01AD5A  2409               	addwf	(btemp+8)^0,w,c
 22681  01AD5C  6ED9               	movwf	fsr2l,c
 22682  01AD5E  500C               	movf	(btemp+11)^0,w,c
 22683  01AD60  200A               	addwfc	(btemp+9)^0,w,c
 22684  01AD62  6EDA               	movwf	fsr2h,c
 22685  01AD64  50DF               	movf	indf2,w,c
 22686  01AD66  6E0C               	movwf	(btemp+11)^0,c
 22687                           
 22688                           ;stkvar	_c @ sp[(-3)+2]
 22689  01AD68  0EFF               	movlw	-1
 22690  01AD6A  0060  F033  FFE3   	movff	btemp+11,plusw1
 22691  01AD70  0EFF               	movlw	-1
 22692  01AD72  50E3               	movf	plusw1,w,c
 22693  01AD74  A4D8               	btfss	status,2,c
 22694  01AD76  D7C1               	goto	l12089
 22695                           
 22696                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 22697  01AD78  0EF9               	movlw	249
 22698  01AD7A  26E1               	addwf	fsr1l,f,c
 22699  01AD7C  0EFF               	movlw	255
 22700  01AD7E  22E2               	addwfc	fsr1h,f,c
 22701  01AD80  0012               	return		;funcret
 22702  01AD82                     __end_of_fputs:
 22703                           	opt callstack 0
 22704                           
 22705 ;; *************** function _fputc *****************
 22706 ;; Defined at:
 22707 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 22708 ;; Parameters:    Size  Location     Type
 22709 ;;  c               2  [STACK] int 
 22710 ;;  fp              2  [STACK] PTR struct _IO_FILE
 22711 ;;		 -> f(6), NULL(0), 
 22712 ;; Auto vars:     Size  Location     Type
 22713 ;;		None
 22714 ;; Return value:  Size  Location     Type
 22715 ;;                  2  [STACK] int 
 22716 ;; Registers used:
 22717 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 22718 ;; Tracked objects:
 22719 ;;		On entry : 0/0
 22720 ;;		On exit  : 0/0
 22721 ;;		Unchanged: 0/0
 22722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22726 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22727 ;;Total ram usage:        0 bytes
 22728 ;; Hardware stack levels used:    1
 22729 ;; Hardware stack levels required when called:   17
 22730 ;; This function calls:
 22731 ;;		_putch
 22732 ;; This function is called by:
 22733 ;;		_pad
 22734 ;;		_stoa
 22735 ;;		_vfpfcnvrt
 22736 ;;		_fputs
 22737 ;; This function uses a reentrant model
 22738 ;;
 22739                           
 22740                           	psect	text81
 22741  0199B0                     __ptext81:
 22742                           	opt callstack 0
 22743  0199B0                     _fputc:
 22744                           	opt callstack 0
 22745                           
 22746                           ;stkvar	_fp @ sp[(0)+-4]
 22747                           
 22748                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22749                           ;incstack = 0
 22750 ;; hardware stack exceeded
 22751  0199B0  0EFC               	movlw	-4
 22752  0199B2  006F FF8C  F001    	movff	plusw1,btemp
 22753  0199B8  0EFD               	movlw	-3
 22754  0199BA  50E3               	movf	plusw1,w,c
 22755  0199BC  1001               	iorwf	btemp^0,w,c
 22756  0199BE  B4D8               	btfsc	status,2,c
 22757  0199C0  D009               	goto	u10890
 22758                           
 22759                           ;stkvar	_fp @ sp[(0)+-4]
 22760  0199C2  0EFC               	movlw	-4
 22761  0199C4  006F FF8C  F001    	movff	plusw1,btemp
 22762  0199CA  0EFD               	movlw	-3
 22763  0199CC  50E3               	movf	plusw1,w,c
 22764  0199CE  1001               	iorwf	btemp^0,w,c
 22765  0199D0  A4D8               	btfss	status,2,c
 22766  0199D2  D006               	goto	l12077
 22767  0199D4                     u10890:
 22768                           
 22769                           ;stkvar	_c @ sp[(0)+-2]
 22770  0199D4  0EFE               	movlw	-2
 22771  0199D6  50E3               	movf	plusw1,w,c
 22772  0199D8  6EE6               	movwf	postinc1,c
 22773  0199DA  ECDB  F0E1         	call	_putch	;wreg free
 22774  0199DE  D075               	goto	l3259
 22775  0199E0                     l12077:
 22776                           
 22777                           ;stkvar	_fp @ sp[(0)+-4]
 22778  0199E0  0EFC               	movlw	-4
 22779  0199E2  006F FF8C  F00B    	movff	plusw1,btemp+10
 22780  0199E8  0EFD               	movlw	-3
 22781  0199EA  006F FF8C  F00C    	movff	plusw1,btemp+11
 22782  0199F0  0E04               	movlw	4
 22783  0199F2  240B               	addwf	(btemp+10)^0,w,c
 22784  0199F4  6ED9               	movwf	fsr2l,c
 22785  0199F6  0E00               	movlw	0
 22786  0199F8  200C               	addwfc	(btemp+11)^0,w,c
 22787  0199FA  6EDA               	movwf	fsr2h,c
 22788  0199FC  50DE               	movf	postinc2,w,c
 22789  0199FE  10DE               	iorwf	postinc2,w,c
 22790  019A00  B4D8               	btfsc	status,2,c
 22791  019A02  D026               	goto	u10910
 22792                           
 22793                           ;stkvar	_fp @ sp[(0)+-4]
 22794  019A04  0EFC               	movlw	-4
 22795  019A06  006F FF8C  F00B    	movff	plusw1,btemp+10
 22796  019A0C  0EFD               	movlw	-3
 22797  019A0E  006F FF8C  F00C    	movff	plusw1,btemp+11
 22798  019A14  0E04               	movlw	4
 22799  019A16  240B               	addwf	(btemp+10)^0,w,c
 22800  019A18  6ED9               	movwf	fsr2l,c
 22801  019A1A  0E00               	movlw	0
 22802  019A1C  200C               	addwfc	(btemp+11)^0,w,c
 22803  019A1E  6EDA               	movwf	fsr2h,c
 22804                           
 22805                           ;stkvar	_fp @ sp[(0)+-4]
 22806  019A20  0EFC               	movlw	-4
 22807  019A22  006F FF8C  F00B    	movff	plusw1,btemp+10
 22808  019A28  0EFD               	movlw	-3
 22809  019A2A  006F FF8C  F00C    	movff	plusw1,btemp+11
 22810  019A30  0E02               	movlw	2
 22811  019A32  240B               	addwf	(btemp+10)^0,w,c
 22812  019A34  6EE9               	movwf	fsr0l,c
 22813  019A36  0E00               	movlw	0
 22814  019A38  200C               	addwfc	(btemp+11)^0,w,c
 22815  019A3A  6EEA               	movwf	fsr0h,c
 22816  019A3C  50DE               	movf	postinc2,w,c
 22817  019A3E  5CEE               	subwf	postinc0,w,c
 22818  019A40  50EE               	movf	postinc0,w,c
 22819  019A42  0A80               	xorlw	128
 22820  019A44  6E01               	movwf	btemp^0,c
 22821  019A46  50DE               	movf	postinc2,w,c
 22822  019A48  0A80               	xorlw	128
 22823  019A4A  5801               	subwfb	btemp^0,w,c
 22824  019A4C  B0D8               	btfsc	status,0,c
 22825  019A4E  D03D               	goto	l3259
 22826  019A50                     u10910:
 22827                           
 22828                           ;stkvar	_c @ sp[(0)+-2]
 22829                           ;stkvar	_fp @ sp[(0)+-4]
 22830  019A50  0EFC               	movlw	-4
 22831  019A52  006F FF8C  F00B    	movff	plusw1,btemp+10
 22832  019A58  0EFD               	movlw	-3
 22833  019A5A  006F FF8C  F00C    	movff	plusw1,btemp+11
 22834  019A60  0E02               	movlw	2
 22835  019A62  240B               	addwf	(btemp+10)^0,w,c
 22836  019A64  6ED9               	movwf	fsr2l,c
 22837  019A66  0E00               	movlw	0
 22838  019A68  200C               	addwfc	(btemp+11)^0,w,c
 22839  019A6A  6EDA               	movwf	fsr2h,c
 22840  019A6C  006F FF78  F00B    	movff	postinc2,btemp+10
 22841  019A72  006F FF74  F00C    	movff	postdec2,btemp+11
 22842                           
 22843                           ;stkvar	_fp @ sp[(0)+-4]
 22844  019A78  0EFC               	movlw	-4
 22845  019A7A  006F FF8F FFD9     	movff	plusw1,fsr2l
 22846  019A80  0EFD               	movlw	-3
 22847  019A82  006F FF8F FFDA     	movff	plusw1,fsr2h
 22848  019A88  006F FF78  F009    	movff	postinc2,btemp+8
 22849  019A8E  006F FF74  F00A    	movff	postdec2,btemp+9
 22850  019A94  500B               	movf	(btemp+10)^0,w,c
 22851  019A96  2409               	addwf	(btemp+8)^0,w,c
 22852  019A98  6ED9               	movwf	fsr2l,c
 22853  019A9A  500C               	movf	(btemp+11)^0,w,c
 22854  019A9C  200A               	addwfc	(btemp+9)^0,w,c
 22855  019A9E  6EDA               	movwf	fsr2h,c
 22856  019AA0  0EFE               	movlw	-2
 22857  019AA2  006F FF8F FFDF     	movff	plusw1,indf2
 22858                           
 22859                           ;stkvar	_fp @ sp[(0)+-4]
 22860  019AA8  0EFC               	movlw	-4
 22861  019AAA  006F FF8C  F00B    	movff	plusw1,btemp+10
 22862  019AB0  0EFD               	movlw	-3
 22863  019AB2  006F FF8C  F00C    	movff	plusw1,btemp+11
 22864  019AB8  0E02               	movlw	2
 22865  019ABA  240B               	addwf	(btemp+10)^0,w,c
 22866  019ABC  6ED9               	movwf	fsr2l,c
 22867  019ABE  0E00               	movlw	0
 22868  019AC0  200C               	addwfc	(btemp+11)^0,w,c
 22869  019AC2  6EDA               	movwf	fsr2h,c
 22870  019AC4  2ADE               	incf	postinc2,f,c
 22871  019AC6  0E00               	movlw	0
 22872  019AC8  22DD               	addwfc	postdec2,f,c
 22873  019ACA                     l3259:
 22874                           
 22875                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 22876  019ACA  52E5               	movf	postdec1,f,c
 22877  019ACC  52E5               	movf	postdec1,f,c
 22878  019ACE  52E5               	movf	postdec1,f,c
 22879  019AD0  52E5               	movf	postdec1,f,c
 22880  019AD2  0012               	return		;funcret
 22881  019AD4                     __end_of_fputc:
 22882                           	opt callstack 0
 22883                           
 22884 ;; *************** function _putch *****************
 22885 ;; Defined at:
 22886 ;;		line 421 in file "eadog.c"
 22887 ;; Parameters:    Size  Location     Type
 22888 ;;  c               1  [STACK] unsigned char 
 22889 ;; Auto vars:     Size  Location     Type
 22890 ;;		None
 22891 ;; Return value:  Size  Location     Type
 22892 ;;                  1  [STACK] void 
 22893 ;; Registers used:
 22894 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 22895 ;; Tracked objects:
 22896 ;;		On entry : 0/0
 22897 ;;		On exit  : 0/0
 22898 ;;		Unchanged: 0/0
 22899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22903 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22904 ;;Total ram usage:        0 bytes
 22905 ;; Hardware stack levels used:    1
 22906 ;; Hardware stack levels required when called:   16
 22907 ;; This function calls:
 22908 ;;		_ringBufS_put_dma
 22909 ;; This function is called by:
 22910 ;;		_fputc
 22911 ;; This function uses a reentrant model
 22912 ;;
 22913                           
 22914                           	psect	text82
 22915  01C3B6                     __ptext82:
 22916                           	opt callstack 0
 22917  01C3B6                     _putch:
 22918                           	opt callstack 0
 22919                           
 22920                           ;eadog.c: 421: void putch(char c);eadog.c: 422: {;eadog.c: 423:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 22921                           ;stkvar	_c @ sp[(0)+-1]
 22922                           
 22923                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22924                           ;incstack = 0
 22925 ;; hardware stack exceeded
 22926  01C3B6  0EFF               	movlw	-1
 22927  01C3B8  50E3               	movf	plusw1,w,c
 22928  01C3BA  6EE6               	movwf	postinc1,c
 22929  01C3BC  0060  F74F  FFE6   	movff	_spi_link+6,postinc1
 22930  01C3C2  0060  F753  FFE6   	movff	_spi_link+7,postinc1
 22931  01C3C8  ECD7  F0D4         	call	_ringBufS_put_dma	;wreg free
 22932                           
 22933                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 22934  01C3CC  52E5               	movf	postdec1,f,c
 22935  01C3CE  0012               	return		;funcret
 22936  01C3D0                     __end_of_putch:
 22937                           	opt callstack 0
 22938                           
 22939 ;; *************** function _ringBufS_put_dma *****************
 22940 ;; Defined at:
 22941 ;;		line 67 in file "ringbufs.c"
 22942 ;; Parameters:    Size  Location     Type
 22943 ;;  _this           2  [STACK] PTR struct ringBufS_t
 22944 ;;		 -> ring_buf1(67), 
 22945 ;;  c               1  [STACK] const unsigned char 
 22946 ;; Auto vars:     Size  Location     Type
 22947 ;;		None
 22948 ;; Return value:  Size  Location     Type
 22949 ;;                  1  [STACK] void 
 22950 ;; Registers used:
 22951 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 22952 ;; Tracked objects:
 22953 ;;		On entry : 0/0
 22954 ;;		On exit  : 0/0
 22955 ;;		Unchanged: 0/0
 22956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22960 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22961 ;;Total ram usage:        0 bytes
 22962 ;; Hardware stack levels used:    1
 22963 ;; Hardware stack levels required when called:   15
 22964 ;; This function calls:
 22965 ;;		Nothing
 22966 ;; This function is called by:
 22967 ;;		_putch
 22968 ;; This function uses a reentrant model
 22969 ;;
 22970                           
 22971                           	psect	text83
 22972  01A9AE                     __ptext83:
 22973                           	opt callstack 0
 22974  01A9AE                     _ringBufS_put_dma:
 22975                           	opt callstack 0
 22976                           
 22977                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 22978                           ;stkvar	__this @ sp[(0)+-2]
 22979                           
 22980                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22981                           ;incstack = 0
 22982 ;; hardware stack exceeded
 22983  01A9AE  0EFE               	movlw	-2
 22984  01A9B0  006F FF8C  F00B    	movff	plusw1,btemp+10
 22985  01A9B6  0EFF               	movlw	-1
 22986  01A9B8  006F FF8C  F00C    	movff	plusw1,btemp+11
 22987  01A9BE  0E42               	movlw	66
 22988  01A9C0  240B               	addwf	(btemp+10)^0,w,c
 22989  01A9C2  6ED9               	movwf	fsr2l,c
 22990  01A9C4  0E00               	movlw	0
 22991  01A9C6  200C               	addwfc	(btemp+11)^0,w,c
 22992  01A9C8  6EDA               	movwf	fsr2h,c
 22993  01A9CA  0E40               	movlw	64
 22994  01A9CC  60DF               	cpfslt	indf2,c
 22995  01A9CE  D040               	goto	l1602
 22996                           
 22997                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 22998                           ;stkvar	_c @ sp[(0)+-3]
 22999                           ;stkvar	__this @ sp[(0)+-2]
 23000  01A9D0  0EFE               	movlw	-2
 23001  01A9D2  006F FF8C  F00B    	movff	plusw1,btemp+10
 23002  01A9D8  0EFF               	movlw	-1
 23003  01A9DA  006F FF8C  F00C    	movff	plusw1,btemp+11
 23004  01A9E0  0E40               	movlw	64
 23005  01A9E2  240B               	addwf	(btemp+10)^0,w,c
 23006  01A9E4  6ED9               	movwf	fsr2l,c
 23007  01A9E6  0E00               	movlw	0
 23008  01A9E8  200C               	addwfc	(btemp+11)^0,w,c
 23009  01A9EA  6EDA               	movwf	fsr2h,c
 23010  01A9EC  50DF               	movf	indf2,w,c
 23011  01A9EE  6E0C               	movwf	(btemp+11)^0,c
 23012                           
 23013                           ;stkvar	__this @ sp[(0)+-2]
 23014  01A9F0  0EFE               	movlw	-2
 23015  01A9F2  006F FF8C  F009    	movff	plusw1,btemp+8
 23016  01A9F8  0EFF               	movlw	-1
 23017  01A9FA  006F FF8C  F00A    	movff	plusw1,btemp+9
 23018  01AA00  500C               	movf	(btemp+11)^0,w,c
 23019  01AA02  2409               	addwf	(btemp+8)^0,w,c
 23020  01AA04  6ED9               	movwf	fsr2l,c
 23021  01AA06  0E00               	movlw	0
 23022  01AA08  200A               	addwfc	(btemp+9)^0,w,c
 23023  01AA0A  6EDA               	movwf	fsr2h,c
 23024  01AA0C  0EFD               	movlw	-3
 23025  01AA0E  006F FF8F FFDF     	movff	plusw1,indf2
 23026                           
 23027                           ;ringbufs.c: 71:   ++_this->head;
 23028                           ;stkvar	__this @ sp[(0)+-2]
 23029  01AA14  0EFE               	movlw	-2
 23030  01AA16  006F FF8C  F00B    	movff	plusw1,btemp+10
 23031  01AA1C  0EFF               	movlw	-1
 23032  01AA1E  006F FF8C  F00C    	movff	plusw1,btemp+11
 23033  01AA24  0E40               	movlw	64
 23034  01AA26  240B               	addwf	(btemp+10)^0,w,c
 23035  01AA28  6ED9               	movwf	fsr2l,c
 23036  01AA2A  0E00               	movlw	0
 23037  01AA2C  200C               	addwfc	(btemp+11)^0,w,c
 23038  01AA2E  6EDA               	movwf	fsr2h,c
 23039  01AA30  2ADF               	incf	indf2,f,c
 23040                           
 23041                           ;ringbufs.c: 72:   ++_this->count;
 23042                           ;stkvar	__this @ sp[(0)+-2]
 23043  01AA32  0EFE               	movlw	-2
 23044  01AA34  006F FF8C  F00B    	movff	plusw1,btemp+10
 23045  01AA3A  0EFF               	movlw	-1
 23046  01AA3C  006F FF8C  F00C    	movff	plusw1,btemp+11
 23047  01AA42  0E42               	movlw	66
 23048  01AA44  240B               	addwf	(btemp+10)^0,w,c
 23049  01AA46  6ED9               	movwf	fsr2l,c
 23050  01AA48  0E00               	movlw	0
 23051  01AA4A  200C               	addwfc	(btemp+11)^0,w,c
 23052  01AA4C  6EDA               	movwf	fsr2h,c
 23053  01AA4E  2ADF               	incf	indf2,f,c
 23054  01AA50                     l1602:
 23055                           
 23056                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 23057  01AA50  52E5               	movf	postdec1,f,c
 23058  01AA52  52E5               	movf	postdec1,f,c
 23059  01AA54  52E5               	movf	postdec1,f,c
 23060  01AA56  0012               	return		;funcret
 23061  01AA58                     __end_of_ringBufS_put_dma:
 23062                           	opt callstack 0
 23063                           
 23064 ;; *************** function _atoi *****************
 23065 ;; Defined at:
 23066 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 23067 ;; Parameters:    Size  Location     Type
 23068 ;;  s               2  [STACK] PTR const unsigned char 
 23069 ;;		 -> STR_64(121), STR_62(3), STR_61(3), STR_60(19), 
 23070 ;;		 -> STR_59(19), STR_58(19), STR_57(19), STR_56(19), 
 23071 ;;		 -> STR_55(19), STR_54(24), STR_53(15), STR_52(15), 
 23072 ;;		 -> STR_51(15), STR_50(10), STR_49(10), STR_48(19), 
 23073 ;;		 -> STR_47(19), STR_44(3), STR_43(3), STR_42(22), 
 23074 ;;		 -> STR_41(22), STR_40(22), STR_39(23), STR_38(23), 
 23075 ;;		 -> STR_37(23), STR_36(23), STR_35(23), STR_34(23), 
 23076 ;;		 -> STR_33(22), STR_32(22), STR_31(22), STR_30(22), 
 23077 ;;		 -> STR_29(22), STR_28(22), STR_27(22), STR_26(22), 
 23078 ;;		 -> STR_25(22), STR_24(22), STR_23(22), STR_22(22), 
 23079 ;;		 -> STR_21(17), STR_20(16), STR_19(16), STR_18(26), 
 23080 ;;		 -> STR_17(26), STR_16(22), STR_15(21), STR_14(21), 
 23081 ;;		 -> STR_13(21), STR_12(21), STR_11(22), STR_10(22), 
 23082 ;;		 -> STR_9(26), STR_8(21), STR_7(21), STR_6(21), 
 23083 ;;		 -> STR_5(21), STR_4(21), STR_2(21), STR_1(21), 
 23084 ;; Auto vars:     Size  Location     Type
 23085 ;;  n               2  [STACK] int 
 23086 ;;  neg             2  [STACK] int 
 23087 ;; Return value:  Size  Location     Type
 23088 ;;                  2  [STACK] int 
 23089 ;; Registers used:
 23090 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 23091 ;; Tracked objects:
 23092 ;;		On entry : 0/0
 23093 ;;		On exit  : 0/0
 23094 ;;		Unchanged: 0/0
 23095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23099 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23100 ;;Total ram usage:        0 bytes
 23101 ;; Hardware stack levels used:    1
 23102 ;; Hardware stack levels required when called:   16
 23103 ;; This function calls:
 23104 ;;		_isdigit
 23105 ;;		_isspace
 23106 ;; This function is called by:
 23107 ;;		_vfpfcnvrt
 23108 ;; This function uses a reentrant model
 23109 ;;
 23110                           
 23111                           	psect	text84
 23112  017982                     __ptext84:
 23113                           	opt callstack 0
 23114  017982                     _atoi:
 23115                           	opt callstack 0
 23116                           
 23117                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23118  017982  0E09               	movlw	9
 23119  017984  26E1               	addwf	fsr1l,f,c
 23120  017986  0E00               	movlw	0
 23121  017988  22E2               	addwfc	fsr1h,f,c
 23122                           
 23123                           ;stkvar	_n @ sp[(-9)+5]
 23124                           
 23125                           ;incstack = 0
 23126 ;; hardware stack exceeded
 23127  01798A  0EFC               	movlw	-4
 23128  01798C  6AE3               	clrf	plusw1,c
 23129  01798E  0EFD               	movlw	-3
 23130  017990  6AE3               	clrf	plusw1,c
 23131                           
 23132                           ;stkvar	_neg @ sp[(-9)+7]
 23133  017992  0EFE               	movlw	-2
 23134  017994  6AE3               	clrf	plusw1,c
 23135  017996  0EFF               	movlw	-1
 23136  017998  6AE3               	clrf	plusw1,c
 23137  01799A  D011               	goto	l9487
 23138  01799C                     l9485:
 23139                           
 23140                           ;stkvar	_s @ sp[(-9)+-2]
 23141  01799C  0EF5               	movlw	-11
 23142  01799E  50E3               	movf	plusw1,w,c
 23143  0179A0  0F01               	addlw	1
 23144  0179A2  6E01               	movwf	btemp^0,c
 23145  0179A4  0EF5               	movlw	-11
 23146  0179A6  0060  F007  FFE3   	movff	btemp,plusw1
 23147  0179AC  6A01               	clrf	btemp^0,c
 23148  0179AE  0EF6               	movlw	-10
 23149  0179B0  50E3               	movf	plusw1,w,c
 23150  0179B2  2001               	addwfc	btemp^0,w,c
 23151  0179B4  6E01               	movwf	btemp^0,c
 23152  0179B6  0EF6               	movlw	-10
 23153  0179B8  0060  F007  FFE3   	movff	btemp,plusw1
 23154  0179BE                     l9487:
 23155                           
 23156                           ;stkvar	_atoi$6218 @ sp[(-9)+4]
 23157  0179BE  0EFB               	movlw	-5
 23158  0179C0  6AE3               	clrf	plusw1,c
 23159  0179C2  2AE3               	incf	plusw1,f,c
 23160                           
 23161                           ;stkvar	_s @ sp[(-9)+-2]
 23162  0179C4  50E1               	movf	fsr1l,w,c
 23163  0179C6  0FF5               	addlw	-11
 23164  0179C8  6ED9               	movwf	fsr2l,c
 23165  0179CA  50E2               	movf	fsr1h,w,c
 23166  0179CC  6EDA               	movwf	fsr2h,c
 23167  0179CE  0EFF               	movlw	255
 23168  0179D0  22DA               	addwfc	fsr2h,f,c
 23169  0179D2  006F FF7B FFF6     	movff	postinc2,tblptrl
 23170  0179D8  006F FF77 FFF7     	movff	postdec2,tblptrh
 23171  0179DE                     	if	0	;tblptru may be non-zero
 23172  0179DE                     	endif
 23173  0179DE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 23174  0179DE  0E00               	movlw	low (__mediumconst shr (0+16))
 23175  0179E0  6EF8               	movwf	tblptru,c
 23176  0179E2                     	endif
 23177  0179E2  0008               	tblrd		*
 23178  0179E4  50F5               	movf	tablat,w,c
 23179  0179E6  0A20               	xorlw	32
 23180  0179E8  B4D8               	btfsc	status,2,c
 23181  0179EA  D023               	goto	l9495
 23182  0179EC  0EF7               	movlw	247
 23183  0179EE  6E0B               	movwf	(btemp+10)^0,c
 23184  0179F0  0EFF               	movlw	255
 23185  0179F2  6E0C               	movwf	(btemp+11)^0,c
 23186                           
 23187                           ;stkvar	_s @ sp[(-9)+-2]
 23188  0179F4  50E1               	movf	fsr1l,w,c
 23189  0179F6  0FF5               	addlw	-11
 23190  0179F8  6ED9               	movwf	fsr2l,c
 23191  0179FA  50E2               	movf	fsr1h,w,c
 23192  0179FC  6EDA               	movwf	fsr2h,c
 23193  0179FE  0EFF               	movlw	255
 23194  017A00  22DA               	addwfc	fsr2h,f,c
 23195  017A02  006F FF7B FFF6     	movff	postinc2,tblptrl
 23196  017A08  006F FF77 FFF7     	movff	postdec2,tblptrh
 23197  017A0E                     	if	0	;tblptru may be non-zero
 23198  017A0E                     	endif
 23199  017A0E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 23200  017A0E  0E00               	movlw	low (__mediumconst shr (0+16))
 23201  017A10  6EF8               	movwf	tblptru,c
 23202  017A12                     	endif
 23203  017A12  0008               	tblrd		*
 23204  017A14  50F5               	movf	tablat,w,c
 23205  017A16  6E09               	movwf	(btemp+8)^0,c
 23206  017A18  6A0A               	clrf	(btemp+9)^0,c
 23207  017A1A  500B               	movf	(btemp+10)^0,w,c
 23208  017A1C  2609               	addwf	(btemp+8)^0,f,c
 23209  017A1E  500C               	movf	(btemp+11)^0,w,c
 23210  017A20  220A               	addwfc	(btemp+9)^0,f,c
 23211  017A22  500A               	movf	(btemp+9)^0,w,c
 23212  017A24  E104               	bnz	u8610
 23213  017A26  0E05               	movlw	5
 23214  017A28  5C09               	subwf	(btemp+8)^0,w,c
 23215  017A2A  A0D8               	btfss	status,0,c
 23216  017A2C  D002               	goto	l9495
 23217  017A2E                     u8610:
 23218                           
 23219                           ;stkvar	_atoi$6218 @ sp[(-9)+4]
 23220  017A2E  0EFB               	movlw	-5
 23221  017A30  6AE3               	clrf	plusw1,c
 23222  017A32                     l9495:
 23223                           
 23224                           ;stkvar	_atoi$6218 @ sp[(-9)+4]
 23225  017A32  0EFB               	movlw	-5
 23226  017A34  50E3               	movf	plusw1,w,c
 23227  017A36  6E0B               	movwf	(btemp+10)^0,c
 23228  017A38  6A0C               	clrf	(btemp+11)^0,c
 23229                           
 23230                           ;stkvar	_atoi$6217 @ sp[(-9)+2]
 23231  017A3A  0EF9               	movlw	-7
 23232  017A3C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23233  017A42  0EFA               	movlw	-6
 23234  017A44  0060  F033  FFE3   	movff	btemp+11,plusw1
 23235                           
 23236                           ;stkvar	_atoi$6217 @ sp[(-9)+2]
 23237  017A4A  0EF9               	movlw	-7
 23238  017A4C  006F FF8C  F001    	movff	plusw1,btemp
 23239  017A52  0EFA               	movlw	-6
 23240  017A54  50E3               	movf	plusw1,w,c
 23241  017A56  1001               	iorwf	btemp^0,w,c
 23242  017A58  B4D8               	btfsc	status,2,c
 23243  017A5A  D01F               	goto	l9505
 23244  017A5C  D79F               	goto	l9485
 23245  017A5E                     l9501:
 23246  017A5E  0E01               	movlw	1
 23247  017A60  6E0B               	movwf	(btemp+10)^0,c
 23248  017A62  0E00               	movlw	0
 23249  017A64  6E0C               	movwf	(btemp+11)^0,c
 23250                           
 23251                           ;stkvar	_neg @ sp[(-9)+7]
 23252  017A66  0EFE               	movlw	-2
 23253  017A68  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23254  017A6E  0EFF               	movlw	-1
 23255  017A70  0060  F033  FFE3   	movff	btemp+11,plusw1
 23256  017A76                     l9503:
 23257                           
 23258                           ;stkvar	_s @ sp[(-9)+-2]
 23259  017A76  0EF5               	movlw	-11
 23260  017A78  50E3               	movf	plusw1,w,c
 23261  017A7A  0F01               	addlw	1
 23262  017A7C  6E01               	movwf	btemp^0,c
 23263  017A7E  0EF5               	movlw	-11
 23264  017A80  0060  F007  FFE3   	movff	btemp,plusw1
 23265  017A86  6A01               	clrf	btemp^0,c
 23266  017A88  0EF6               	movlw	-10
 23267  017A8A  50E3               	movf	plusw1,w,c
 23268  017A8C  2001               	addwfc	btemp^0,w,c
 23269  017A8E  6E01               	movwf	btemp^0,c
 23270  017A90  0EF6               	movlw	-10
 23271  017A92  0060  F007  FFE3   	movff	btemp,plusw1
 23272  017A98  D053               	goto	l9511
 23273  017A9A                     l9505:
 23274                           
 23275                           ;stkvar	_s @ sp[(-9)+-2]
 23276  017A9A  50E1               	movf	fsr1l,w,c
 23277  017A9C  0FF5               	addlw	-11
 23278  017A9E  6ED9               	movwf	fsr2l,c
 23279  017AA0  50E2               	movf	fsr1h,w,c
 23280  017AA2  6EDA               	movwf	fsr2h,c
 23281  017AA4  0EFF               	movlw	255
 23282  017AA6  22DA               	addwfc	fsr2h,f,c
 23283  017AA8  006F FF7B FFF6     	movff	postinc2,tblptrl
 23284  017AAE  006F FF77 FFF7     	movff	postdec2,tblptrh
 23285  017AB4                     	if	0	;tblptru may be non-zero
 23286  017AB4                     	endif
 23287  017AB4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 23288  017AB4  0E00               	movlw	low (__mediumconst shr (0+16))
 23289  017AB6  6EF8               	movwf	tblptru,c
 23290  017AB8                     	endif
 23291  017AB8  0008               	tblrd		*
 23292  017ABA  50F5               	movf	tablat,w,c
 23293  017ABC  6E0B               	movwf	(btemp+10)^0,c
 23294  017ABE  6A0C               	clrf	(btemp+11)^0,c
 23295                           
 23296                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 23297                           ; Switch size 1, requested type "simple"
 23298                           ; Number of cases is 1, Range of values is 0 to 0
 23299                           ; switch strategies available:
 23300                           ; Name         Instructions Cycles
 23301                           ; simple_byte            4     3 (average)
 23302                           ;	Chosen strategy is simple_byte
 23303  017AC0  500C               	movf	(btemp+11)^0,w,c
 23304  017AC2  0A00               	xorlw	0	; case 0
 23305  017AC4  A4D8               	btfss	status,2,c
 23306  017AC6  D03C               	goto	l9511
 23307                           
 23308                           ; Switch size 1, requested type "simple"
 23309                           ; Number of cases is 2, Range of values is 43 to 45
 23310                           ; switch strategies available:
 23311                           ; Name         Instructions Cycles
 23312                           ; simple_byte            7     4 (average)
 23313                           ;	Chosen strategy is simple_byte
 23314  017AC8  500B               	movf	(btemp+10)^0,w,c
 23315  017ACA  0A2B               	xorlw	43	; case 43
 23316  017ACC  B4D8               	btfsc	status,2,c
 23317  017ACE  D7D3               	goto	l9503
 23318  017AD0  0A06               	xorlw	6	; case 45
 23319  017AD2  B4D8               	btfsc	status,2,c
 23320  017AD4  D7C4               	goto	l9501
 23321  017AD6  D034               	goto	l9511
 23322  017AD8                     l9507:
 23323                           
 23324                           ;stkvar	_n @ sp[(-9)+5]
 23325  017AD8  0EFC               	movlw	-4
 23326  017ADA  006F FF8C  F00B    	movff	plusw1,btemp+10
 23327  017AE0  0EFD               	movlw	-3
 23328  017AE2  006F FF8C  F00C    	movff	plusw1,btemp+11
 23329  017AE8  0E0A               	movlw	10
 23330  017AEA  020B               	mulwf	(btemp+10)^0,c
 23331  017AEC  006F FFCC  F009    	movff	prodl,btemp+8
 23332  017AF2  006F FFD0  F00A    	movff	prodh,btemp+9
 23333  017AF8  020C               	mulwf	(btemp+11)^0,c
 23334  017AFA  50F3               	movf	prodl,w,c
 23335  017AFC  260A               	addwf	(btemp+9)^0,f,c
 23336                           
 23337                           ;stkvar	_s @ sp[(-9)+-2]
 23338  017AFE  50E1               	movf	fsr1l,w,c
 23339  017B00  0FF5               	addlw	-11
 23340  017B02  6ED9               	movwf	fsr2l,c
 23341  017B04  50E2               	movf	fsr1h,w,c
 23342  017B06  6EDA               	movwf	fsr2h,c
 23343  017B08  0EFF               	movlw	255
 23344  017B0A  22DA               	addwfc	fsr2h,f,c
 23345  017B0C  006F FF7B FFF6     	movff	postinc2,tblptrl
 23346  017B12  006F FF77 FFF7     	movff	postdec2,tblptrh
 23347  017B18                     	if	0	;tblptru may be non-zero
 23348  017B18                     	endif
 23349  017B18                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 23350  017B18  0E00               	movlw	low (__mediumconst shr (0+16))
 23351  017B1A  6EF8               	movwf	tblptru,c
 23352  017B1C                     	endif
 23353  017B1C  0008               	tblrd		*
 23354  017B1E  50F5               	movf	tablat,w,c
 23355  017B20  5E09               	subwf	(btemp+8)^0,f,c
 23356  017B22  0E00               	movlw	0
 23357  017B24  5A0A               	subwfb	(btemp+9)^0,f,c
 23358  017B26  0E30               	movlw	48
 23359  017B28  2609               	addwf	(btemp+8)^0,f,c
 23360  017B2A  0E00               	movlw	0
 23361  017B2C  220A               	addwfc	(btemp+9)^0,f,c
 23362                           
 23363                           ;stkvar	_n @ sp[(-9)+5]
 23364  017B2E  0EFC               	movlw	-4
 23365  017B30  0060  F027  FFE3   	movff	btemp+8,plusw1
 23366  017B36  0EFD               	movlw	-3
 23367  017B38  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23368  017B3E  D79B               	goto	l9503
 23369  017B40                     l9511:
 23370  017B40  0ED0               	movlw	208
 23371  017B42  6E0B               	movwf	(btemp+10)^0,c
 23372  017B44  0EFF               	movlw	255
 23373  017B46  6E0C               	movwf	(btemp+11)^0,c
 23374                           
 23375                           ;stkvar	_s @ sp[(-9)+-2]
 23376  017B48  50E1               	movf	fsr1l,w,c
 23377  017B4A  0FF5               	addlw	-11
 23378  017B4C  6ED9               	movwf	fsr2l,c
 23379  017B4E  50E2               	movf	fsr1h,w,c
 23380  017B50  6EDA               	movwf	fsr2h,c
 23381  017B52  0EFF               	movlw	255
 23382  017B54  22DA               	addwfc	fsr2h,f,c
 23383  017B56  006F FF7B FFF6     	movff	postinc2,tblptrl
 23384  017B5C  006F FF77 FFF7     	movff	postdec2,tblptrh
 23385  017B62                     	if	0	;tblptru may be non-zero
 23386  017B62                     	endif
 23387  017B62                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 23388  017B62  0E00               	movlw	low (__mediumconst shr (0+16))
 23389  017B64  6EF8               	movwf	tblptru,c
 23390  017B66                     	endif
 23391  017B66  0008               	tblrd		*
 23392  017B68  50F5               	movf	tablat,w,c
 23393  017B6A  6E09               	movwf	(btemp+8)^0,c
 23394  017B6C  6A0A               	clrf	(btemp+9)^0,c
 23395  017B6E  500B               	movf	(btemp+10)^0,w,c
 23396  017B70  2609               	addwf	(btemp+8)^0,f,c
 23397  017B72  500C               	movf	(btemp+11)^0,w,c
 23398  017B74  220A               	addwfc	(btemp+9)^0,f,c
 23399  017B76  500A               	movf	(btemp+9)^0,w,c
 23400  017B78  E106               	bnz	u8630
 23401  017B7A  0E0A               	movlw	10
 23402  017B7C  5C09               	subwf	(btemp+8)^0,w,c
 23403  017B7E  B0D8               	btfsc	status,0,c
 23404  017B80  D002               	goto	u8630
 23405  017B82  0E01               	movlw	1
 23406  017B84  D001               	goto	u8640
 23407  017B86                     u8630:
 23408  017B86  0E00               	movlw	0
 23409  017B88                     u8640:
 23410  017B88  6E0B               	movwf	(btemp+10)^0,c
 23411  017B8A  6A0C               	clrf	(btemp+11)^0,c
 23412                           
 23413                           ;stkvar	_atoi$6219 @ sp[(-9)+0]
 23414  017B8C  0EF7               	movlw	-9
 23415  017B8E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23416  017B94  0EF8               	movlw	-8
 23417  017B96  0060  F033  FFE3   	movff	btemp+11,plusw1
 23418                           
 23419                           ;stkvar	_atoi$6219 @ sp[(-9)+0]
 23420  017B9C  0EF7               	movlw	-9
 23421  017B9E  006F FF8C  F001    	movff	plusw1,btemp
 23422  017BA4  0EF8               	movlw	-8
 23423  017BA6  50E3               	movf	plusw1,w,c
 23424  017BA8  1001               	iorwf	btemp^0,w,c
 23425  017BAA  A4D8               	btfss	status,2,c
 23426  017BAC  D795               	goto	l9507
 23427                           
 23428                           ;stkvar	_neg @ sp[(-9)+7]
 23429  017BAE  0EFE               	movlw	-2
 23430  017BB0  006F FF8C  F001    	movff	plusw1,btemp
 23431  017BB6  0EFF               	movlw	-1
 23432  017BB8  50E3               	movf	plusw1,w,c
 23433  017BBA  1001               	iorwf	btemp^0,w,c
 23434  017BBC  A4D8               	btfss	status,2,c
 23435  017BBE  D00E               	goto	l9521
 23436                           
 23437                           ;stkvar	_n @ sp[(-9)+5]
 23438  017BC0  0EFC               	movlw	-4
 23439  017BC2  006F FF8C  F001    	movff	plusw1,btemp
 23440  017BC8  1E01               	comf	btemp^0,f,c
 23441  017BCA  0EFD               	movlw	-3
 23442  017BCC  006F FF8C  F002    	movff	plusw1,btemp+1
 23443  017BD2  1E02               	comf	(btemp+1)^0,f,c
 23444  017BD4  2A01               	incf	btemp^0,f,c
 23445  017BD6  B4D8               	btfsc	status,2,c
 23446  017BD8  2A02               	incf	(btemp+1)^0,f,c
 23447  017BDA  D008               	goto	l3190
 23448  017BDC                     l9521:
 23449                           
 23450                           ;stkvar	_n @ sp[(-9)+5]
 23451  017BDC  0EFC               	movlw	-4
 23452  017BDE  006F FF8C  F001    	movff	plusw1,btemp
 23453  017BE4  0EFD               	movlw	-3
 23454  017BE6  006F FF8C  F002    	movff	plusw1,btemp+1
 23455  017BEC                     l3190:
 23456                           
 23457                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 23458  017BEC  0EF5               	movlw	245
 23459  017BEE  26E1               	addwf	fsr1l,f,c
 23460  017BF0  0EFF               	movlw	255
 23461  017BF2  22E2               	addwfc	fsr1h,f,c
 23462  017BF4  0012               	return		;funcret
 23463  017BF6                     __end_of_atoi:
 23464                           	opt callstack 0
 23465                           
 23466 ;; *************** function _isspace *****************
 23467 ;; Defined at:
 23468 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 23469 ;; Parameters:    Size  Location     Type
 23470 ;;  c               2  [STACK] int 
 23471 ;; Auto vars:     Size  Location     Type
 23472 ;;		None
 23473 ;; Return value:  Size  Location     Type
 23474 ;;                  2  [STACK] int 
 23475 ;; Registers used:
 23476 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 23477 ;; Tracked objects:
 23478 ;;		On entry : 0/0
 23479 ;;		On exit  : 0/0
 23480 ;;		Unchanged: 0/0
 23481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23485 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23486 ;;Total ram usage:        0 bytes
 23487 ;; Hardware stack levels used:    1
 23488 ;; Hardware stack levels required when called:   15
 23489 ;; This function calls:
 23490 ;;		Nothing
 23491 ;; This function is called by:
 23492 ;;		_atoi
 23493 ;; This function uses a reentrant model
 23494 ;;
 23495                           
 23496                           	psect	text85
 23497  01B64E                     __ptext85:
 23498                           	opt callstack 0
 23499  01B64E                     _isspace:
 23500                           	opt callstack 0
 23501                           
 23502                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23503  01B64E  52E6               	movf	postinc1,f,c
 23504                           
 23505                           ;stkvar	_isspace$6268 @ sp[(-1)+0]
 23506                           
 23507                           ;incstack = 0
 23508 ;; hardware stack exceeded
 23509  01B650  0EFF               	movlw	-1
 23510  01B652  6AE3               	clrf	plusw1,c
 23511  01B654  2AE3               	incf	plusw1,f,c
 23512                           
 23513                           ;stkvar	_c @ sp[(-1)+-2]
 23514  01B656  0EFD               	movlw	-3
 23515  01B658  006F FF8C  F001    	movff	plusw1,btemp
 23516  01B65E  0E20               	movlw	32
 23517  01B660  1801               	xorwf	btemp^0,w,c
 23518  01B662  E104               	bnz	u7500
 23519  01B664  0EFE               	movlw	-2
 23520  01B666  50E3               	movf	plusw1,w,c
 23521  01B668  B4D8               	btfsc	status,2,c
 23522  01B66A  D012               	goto	l8905
 23523  01B66C                     u7500:
 23524                           
 23525                           ;stkvar	_c @ sp[(-1)+-2]
 23526  01B66C  0EFD               	movlw	-3
 23527  01B66E  50E3               	movf	plusw1,w,c
 23528  01B670  0FF7               	addlw	247
 23529  01B672  6E0B               	movwf	(btemp+10)^0,c
 23530  01B674  0EFE               	movlw	-2
 23531  01B676  006F FF8C  F00C    	movff	plusw1,btemp+11
 23532  01B67C  0EFF               	movlw	255
 23533  01B67E  220C               	addwfc	(btemp+11)^0,f,c
 23534  01B680  500C               	movf	(btemp+11)^0,w,c
 23535  01B682  E104               	bnz	u7510
 23536  01B684  0E05               	movlw	5
 23537  01B686  5C0B               	subwf	(btemp+10)^0,w,c
 23538  01B688  A0D8               	btfss	status,0,c
 23539  01B68A  D002               	goto	l8905
 23540  01B68C                     u7510:
 23541                           
 23542                           ;stkvar	_isspace$6268 @ sp[(-1)+0]
 23543  01B68C  0EFF               	movlw	-1
 23544  01B68E  6AE3               	clrf	plusw1,c
 23545  01B690                     l8905:
 23546                           
 23547                           ;stkvar	_isspace$6268 @ sp[(-1)+0]
 23548  01B690  0EFF               	movlw	-1
 23549  01B692  50E3               	movf	plusw1,w,c
 23550  01B694  6E01               	movwf	btemp^0,c
 23551  01B696  6A02               	clrf	(btemp+1)^0,c
 23552                           
 23553                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 23554  01B698  52E5               	movf	postdec1,f,c
 23555  01B69A  52E5               	movf	postdec1,f,c
 23556  01B69C  52E5               	movf	postdec1,f,c
 23557  01B69E  0012               	return		;funcret
 23558  01B6A0                     __end_of_isspace:
 23559                           	opt callstack 0
 23560                           
 23561 ;; *************** function _isdigit *****************
 23562 ;; Defined at:
 23563 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 23564 ;; Parameters:    Size  Location     Type
 23565 ;;  c               2  [STACK] int 
 23566 ;; Auto vars:     Size  Location     Type
 23567 ;;		None
 23568 ;; Return value:  Size  Location     Type
 23569 ;;                  2  [STACK] int 
 23570 ;; Registers used:
 23571 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 23572 ;; Tracked objects:
 23573 ;;		On entry : 0/0
 23574 ;;		On exit  : 0/0
 23575 ;;		Unchanged: 0/0
 23576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23581 ;;Total ram usage:        0 bytes
 23582 ;; Hardware stack levels used:    1
 23583 ;; Hardware stack levels required when called:   15
 23584 ;; This function calls:
 23585 ;;		Nothing
 23586 ;; This function is called by:
 23587 ;;		_vfpfcnvrt
 23588 ;;		_atoi
 23589 ;; This function uses a reentrant model
 23590 ;;
 23591                           
 23592                           	psect	text86
 23593  01BE40                     __ptext86:
 23594                           	opt callstack 0
 23595  01BE40                     _isdigit:
 23596                           	opt callstack 0
 23597                           
 23598                           ;stkvar	_c @ sp[(0)+-2]
 23599                           
 23600                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23601                           ;incstack = 0
 23602 ;; hardware stack exceeded
 23603  01BE40  0EFE               	movlw	-2
 23604  01BE42  50E3               	movf	plusw1,w,c
 23605  01BE44  0FD0               	addlw	208
 23606  01BE46  6E0B               	movwf	(btemp+10)^0,c
 23607  01BE48  0EFF               	movlw	-1
 23608  01BE4A  006F FF8C  F00C    	movff	plusw1,btemp+11
 23609  01BE50  0EFF               	movlw	255
 23610  01BE52  220C               	addwfc	(btemp+11)^0,f,c
 23611  01BE54  500C               	movf	(btemp+11)^0,w,c
 23612  01BE56  E106               	bnz	u6350
 23613  01BE58  0E0A               	movlw	10
 23614  01BE5A  5C0B               	subwf	(btemp+10)^0,w,c
 23615  01BE5C  B0D8               	btfsc	status,0,c
 23616  01BE5E  D002               	goto	u6350
 23617  01BE60  0E01               	movlw	1
 23618  01BE62  D001               	goto	u6360
 23619  01BE64                     u6350:
 23620  01BE64  0E00               	movlw	0
 23621  01BE66                     u6360:
 23622  01BE66  6E01               	movwf	btemp^0,c
 23623  01BE68  6A02               	clrf	(btemp+1)^0,c
 23624                           
 23625                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 23626  01BE6A  52E5               	movf	postdec1,f,c
 23627  01BE6C  52E5               	movf	postdec1,f,c
 23628  01BE6E  0012               	return		;funcret
 23629  01BE70                     __end_of_isdigit:
 23630                           	opt callstack 0
 23631                           
 23632 ;; *************** function _set_vterm *****************
 23633 ;; Defined at:
 23634 ;;		line 107 in file "mconfig.c"
 23635 ;; Parameters:    Size  Location     Type
 23636 ;;  vterm           1  [STACK] const unsigned char 
 23637 ;; Auto vars:     Size  Location     Type
 23638 ;;		None
 23639 ;; Return value:  Size  Location     Type
 23640 ;;                  1  [STACK] unsigned char 
 23641 ;; Registers used:
 23642 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 23643 ;; Tracked objects:
 23644 ;;		On entry : 0/1
 23645 ;;		On exit  : 0/0
 23646 ;;		Unchanged: 0/0
 23647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23651 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23652 ;;Total ram usage:        0 bytes
 23653 ;; Hardware stack levels used:    1
 23654 ;; Hardware stack levels required when called:   15
 23655 ;; This function calls:
 23656 ;;		Nothing
 23657 ;; This function is called by:
 23658 ;;		_main
 23659 ;;		_check_help
 23660 ;; This function uses a reentrant model
 23661 ;;
 23662                           
 23663                           	psect	text87
 23664  01C340                     __ptext87:
 23665                           	opt callstack 0
 23666  01C340                     _set_vterm:
 23667                           	opt callstack 15
 23668                           
 23669                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 23670                           ;stkvar	_vterm @ sp[(0)+-1]
 23671                           
 23672                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23673                           ;incstack = 0
 23674  01C340  0EFF               	movlw	-1
 23675  01C342  006F FF8C  F00C    	movff	plusw1,btemp+11
 23676  01C348  0E03               	movlw	3
 23677  01C34A  160C               	andwf	(btemp+11)^0,f,c
 23678  01C34C  EE22  F20A         	lfsr	2,_D+480
 23679  01C350  50DF               	movf	223,w,c
 23680  01C352  180C               	xorwf	(btemp+11)^0,w,c
 23681  01C354  0BFE               	andlw	-2
 23682  01C356  180C               	xorwf	(btemp+11)^0,w,c
 23683  01C358  6EDF               	movwf	223,c
 23684                           
 23685                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 23686  01C35A  52E5               	movf	postdec1,f,c
 23687  01C35C  0012               	return		;funcret
 23688  01C35E                     __end_of_set_vterm:
 23689                           	opt callstack 0
 23690                           
 23691 ;; *************** function _set_temp_display_help *****************
 23692 ;; Defined at:
 23693 ;;		line 211 in file "mconfig.c"
 23694 ;; Parameters:    Size  Location     Type
 23695 ;;  new_response    1  [STACK] const enum E16509
 23696 ;; Auto vars:     Size  Location     Type
 23697 ;;		None
 23698 ;; Return value:  Size  Location     Type
 23699 ;;                  1  [STACK] enum E16509
 23700 ;; Registers used:
 23701 ;;		wreg, fsr1l, fsr1h
 23702 ;; Tracked objects:
 23703 ;;		On entry : 0/1
 23704 ;;		On exit  : 3F/1
 23705 ;;		Unchanged: 0/0
 23706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23710 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23711 ;;Total ram usage:        0 bytes
 23712 ;; Hardware stack levels used:    1
 23713 ;; Hardware stack levels required when called:   15
 23714 ;; This function calls:
 23715 ;;		Nothing
 23716 ;; This function is called by:
 23717 ;;		_check_help
 23718 ;; This function uses a reentrant model
 23719 ;;
 23720                           
 23721                           	psect	text88
 23722  01C4B6                     __ptext88:
 23723                           	opt callstack 0
 23724  01C4B6                     _set_temp_display_help:
 23725                           	opt callstack 14
 23726                           
 23727                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 23728                           
 23729                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23730                           ;incstack = 0
 23731  01C4B6  0101               	movlb	1	; () banked
 23732  01C4B8  51AC               	movf	(_V+165)& (0+255),w,b	;volatile
 23733                           
 23734                           ; BSR set to: 1
 23735                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 23736                           ;stkvar	_new_response_info @ sp[(0)+-1]
 23737  01C4BA  0EFF               	movlw	-1
 23738  01C4BC  006F FF8C  F1AC    	movff	plusw1,_V+165	;volatile
 23739                           
 23740                           ; BSR set to: 1
 23741                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 23742  01C4C2  52E5               	movf	postdec1,f,c
 23743  01C4C4  0012               	return		;funcret
 23744  01C4C6                     __end_of_set_temp_display_help:
 23745                           	opt callstack 0
 23746                           
 23747 ;; *************** function _set_display_info *****************
 23748 ;; Defined at:
 23749 ;;		line 200 in file "mconfig.c"
 23750 ;; Parameters:    Size  Location     Type
 23751 ;;  new_response    1  [STACK] const enum E16509
 23752 ;; Auto vars:     Size  Location     Type
 23753 ;;		None
 23754 ;; Return value:  Size  Location     Type
 23755 ;;                  1  [STACK] enum E16994
 23756 ;; Registers used:
 23757 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 23758 ;; Tracked objects:
 23759 ;;		On entry : 0/1
 23760 ;;		On exit  : 0/0
 23761 ;;		Unchanged: 0/0
 23762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23767 ;;Total ram usage:        0 bytes
 23768 ;; Hardware stack levels used:    1
 23769 ;; Hardware stack levels required when called:   16
 23770 ;; This function calls:
 23771 ;;		_TimerDone
 23772 ;; This function is called by:
 23773 ;;		_main
 23774 ;;		_check_help
 23775 ;; This function uses a reentrant model
 23776 ;;
 23777                           
 23778                           	psect	text89
 23779  01C35E                     __ptext89:
 23780                           	opt callstack 0
 23781  01C35E                     _set_display_info:
 23782                           	opt callstack 14
 23783                           
 23784                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 23785                           
 23786                           ; BSR set to: 1
 23787                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23788                           ;incstack = 0
 23789  01C35E  0E07               	movlw	7
 23790  01C360  6EE6               	movwf	postinc1,c
 23791  01C362  ECBB  F0DF         	call	_TimerDone	;wreg free
 23792  01C366  5001               	movf	btemp^0,w,c
 23793  01C368  B4D8               	btfsc	status,2,c
 23794  01C36A  D006               	goto	l1737
 23795                           
 23796                           ;mconfig.c: 205:   old_info = V.response.info;
 23797  01C36C  0101               	movlb	1	; () banked
 23798  01C36E  51AB               	movf	(_V+164)& (0+255),w,b	;volatile
 23799                           
 23800                           ; BSR set to: 1
 23801                           ;mconfig.c: 206:   V.response.info = new_response_info;
 23802                           ;stkvar	_new_response_info @ sp[(0)+-1]
 23803  01C370  0EFF               	movlw	-1
 23804  01C372  006F FF8C  F1AB    	movff	plusw1,_V+164	;volatile
 23805  01C378                     l1737:
 23806                           
 23807                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 23808  01C378  52E5               	movf	postdec1,f,c
 23809  01C37A  0012               	return		;funcret
 23810  01C37C                     __end_of_set_display_info:
 23811                           	opt callstack 0
 23812                           
 23813 ;; *************** function _mode_lamp_dim *****************
 23814 ;; Defined at:
 23815 ;;		line 13 in file "mconfig.c"
 23816 ;; Parameters:    Size  Location     Type
 23817 ;;  level           2  [STACK] const unsigned short 
 23818 ;; Auto vars:     Size  Location     Type
 23819 ;;		None
 23820 ;; Return value:  Size  Location     Type
 23821 ;;                  1  [STACK] void 
 23822 ;; Registers used:
 23823 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 23824 ;; Tracked objects:
 23825 ;;		On entry : 0/1
 23826 ;;		On exit  : 0/0
 23827 ;;		Unchanged: 0/0
 23828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23833 ;;Total ram usage:        0 bytes
 23834 ;; Hardware stack levels used:    1
 23835 ;; Hardware stack levels required when called:   16
 23836 ;; This function calls:
 23837 ;;		_PWM8_LoadDutyValue
 23838 ;; This function is called by:
 23839 ;;		_main
 23840 ;;		_check_help
 23841 ;; This function uses a reentrant model
 23842 ;;
 23843                           
 23844                           	psect	text90
 23845  01C3EA                     __ptext90:
 23846                           	opt callstack 0
 23847  01C3EA                     _mode_lamp_dim:
 23848                           	opt callstack 14
 23849                           
 23850                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 23851                           ;stkvar	_level @ sp[(0)+-2]
 23852                           
 23853                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23854                           ;incstack = 0
 23855  01C3EA  0EFE               	movlw	-2
 23856  01C3EC  006F FF8F FFE6     	movff	plusw1,postinc1
 23857  01C3F2  006F FF8F FFE6     	movff	plusw1,postinc1
 23858  01C3F8  EC05  F0DD         	call	_PWM8_LoadDutyValue	;wreg free
 23859                           
 23860                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 23861  01C3FC  52E5               	movf	postdec1,f,c
 23862  01C3FE  52E5               	movf	postdec1,f,c
 23863  01C400  0012               	return		;funcret
 23864  01C402                     __end_of_mode_lamp_dim:
 23865                           	opt callstack 0
 23866                           
 23867 ;; *************** function _mode_lamp_bright *****************
 23868 ;; Defined at:
 23869 ;;		line 18 in file "mconfig.c"
 23870 ;; Parameters:    Size  Location     Type
 23871 ;;		None
 23872 ;; Auto vars:     Size  Location     Type
 23873 ;;		None
 23874 ;; Return value:  Size  Location     Type
 23875 ;;                  1  [STACK] void 
 23876 ;; Registers used:
 23877 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 23878 ;; Tracked objects:
 23879 ;;		On entry : 0/0
 23880 ;;		On exit  : 0/0
 23881 ;;		Unchanged: 0/0
 23882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23887 ;;Total ram usage:        0 bytes
 23888 ;; Hardware stack levels used:    1
 23889 ;; Hardware stack levels required when called:   16
 23890 ;; This function calls:
 23891 ;;		_PWM8_LoadDutyValue
 23892 ;; This function is called by:
 23893 ;;		_check_help
 23894 ;; This function uses a reentrant model
 23895 ;;
 23896                           
 23897                           	psect	text91
 23898  01C4E4                     __ptext91:
 23899                           	opt callstack 0
 23900  01C4E4                     _mode_lamp_bright:
 23901                           	opt callstack 13
 23902                           
 23903                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 23904                           
 23905                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23906                           ;incstack = 0
 23907  01C4E4  0E2C               	movlw	44
 23908  01C4E6  6EE6               	movwf	postinc1,c
 23909  01C4E8  0E01               	movlw	1
 23910  01C4EA  6EE6               	movwf	postinc1,c
 23911  01C4EC  EC05  F0DD         	call	_PWM8_LoadDutyValue	;wreg free
 23912                           
 23913                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 23914  01C4F0  0012               	return		;funcret
 23915  01C4F2                     __end_of_mode_lamp_bright:
 23916                           	opt callstack 0
 23917                           
 23918 ;; *************** function _PWM8_LoadDutyValue *****************
 23919 ;; Defined at:
 23920 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 23921 ;; Parameters:    Size  Location     Type
 23922 ;;  dutyValue       2  [STACK] unsigned short 
 23923 ;; Auto vars:     Size  Location     Type
 23924 ;;		None
 23925 ;; Return value:  Size  Location     Type
 23926 ;;                  1  [STACK] void 
 23927 ;; Registers used:
 23928 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 23929 ;; Tracked objects:
 23930 ;;		On entry : 0/1
 23931 ;;		On exit  : 0/0
 23932 ;;		Unchanged: 0/0
 23933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23937 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23938 ;;Total ram usage:        0 bytes
 23939 ;; Hardware stack levels used:    1
 23940 ;; Hardware stack levels required when called:   15
 23941 ;; This function calls:
 23942 ;;		Nothing
 23943 ;; This function is called by:
 23944 ;;		_mode_lamp_dim
 23945 ;;		_mode_lamp_bright
 23946 ;; This function uses a reentrant model
 23947 ;;
 23948                           
 23949                           	psect	text92
 23950  01BA0A                     __ptext92:
 23951                           	opt callstack 0
 23952  01BA0A                     _PWM8_LoadDutyValue:
 23953                           	opt callstack 14
 23954                           
 23955                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 23956                           ;stkvar	_dutyValue @ sp[(0)+-2]
 23957                           
 23958                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23959                           ;incstack = 0
 23960  01BA0A  0EFE               	movlw	-2
 23961  01BA0C  006F FF8C  F00B    	movff	plusw1,btemp+10
 23962  01BA12  0EFF               	movlw	-1
 23963  01BA14  006F FF8C  F00C    	movff	plusw1,btemp+11
 23964  01BA1A  90D8               	bcf	status,0,c
 23965  01BA1C  320C               	rrcf	(btemp+11)^0,f,c
 23966  01BA1E  320B               	rrcf	(btemp+10)^0,f,c
 23967  01BA20  90D8               	bcf	status,0,c
 23968  01BA22  320C               	rrcf	(btemp+11)^0,f,c
 23969  01BA24  320B               	rrcf	(btemp+10)^0,f,c
 23970  01BA26  500B               	movf	(btemp+10)^0,w,c
 23971  01BA28  6E61               	movwf	97,c	;volatile
 23972                           
 23973                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 23974                           ;stkvar	_dutyValue @ sp[(0)+-2]
 23975  01BA2A  0EFE               	movlw	-2
 23976  01BA2C  006F FF8C  F00C    	movff	plusw1,btemp+11
 23977  01BA32  0E03               	movlw	3
 23978  01BA34  160C               	andwf	(btemp+11)^0,f,c
 23979  01BA36  0E06               	movlw	6
 23980  01BA38  6E01               	movwf	btemp^0,c
 23981  01BA3A                     u9445:
 23982  01BA3A  90D8               	bcf	status,0,c
 23983  01BA3C  360C               	rlcf	(btemp+11)^0,f,c
 23984  01BA3E  2E01               	decfsz	btemp^0,f,c
 23985  01BA40  D7FC               	goto	u9445
 23986  01BA42  500C               	movf	(btemp+11)^0,w,c
 23987  01BA44  6E60               	movwf	96,c	;volatile
 23988                           
 23989                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 23990  01BA46  52E5               	movf	postdec1,f,c
 23991  01BA48  52E5               	movf	postdec1,f,c
 23992  01BA4A  0012               	return		;funcret
 23993  01BA4C                     __end_of_PWM8_LoadDutyValue:
 23994                           	opt callstack 0
 23995                           
 23996 ;; *************** function _help_button *****************
 23997 ;; Defined at:
 23998 ;;		line 26 in file "mconfig.c"
 23999 ;; Parameters:    Size  Location     Type
 24000 ;;		None
 24001 ;; Auto vars:     Size  Location     Type
 24002 ;;		None
 24003 ;; Return value:  Size  Location     Type
 24004 ;;                  1  [STACK] _Bool 
 24005 ;; Registers used:
 24006 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 24007 ;; Tracked objects:
 24008 ;;		On entry : 0/1
 24009 ;;		On exit  : 0/0
 24010 ;;		Unchanged: 0/0
 24011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24015 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24016 ;;Total ram usage:        0 bytes
 24017 ;; Hardware stack levels used:    1
 24018 ;; Hardware stack levels required when called:   16
 24019 ;; This function calls:
 24020 ;;		_StartTimer
 24021 ;;		_TimerDone
 24022 ;; This function is called by:
 24023 ;;		_check_help
 24024 ;; This function uses a reentrant model
 24025 ;;
 24026                           
 24027                           	psect	text93
 24028  01BC04                     __ptext93:
 24029                           	opt callstack 0
 24030  01BC04                     _help_button:
 24031                           	opt callstack 13
 24032                           
 24033                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 24034                           
 24035                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24036                           ;incstack = 0
 24037  01BC04  B0CB               	btfsc	203,0,c	;volatile
 24038  01BC06  D00C               	goto	l1680
 24039                           
 24040                           ;mconfig.c: 29:   V.help = 1;
 24041  01BC08  0101               	movlb	1	; () banked
 24042  01BC0A  85A2               	bsf	(_V+155)& (0+255),2,b	;volatile
 24043                           
 24044                           ; BSR set to: 1
 24045                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 24046  01BC0C  0E08               	movlw	8
 24047  01BC0E  6EE6               	movwf	postinc1,c
 24048  01BC10  ECBB  F0DF         	call	_TimerDone	;wreg free
 24049  01BC14  5001               	movf	btemp^0,w,c
 24050  01BC16  B4D8               	btfsc	status,2,c
 24051  01BC18  D003               	goto	l1680
 24052                           
 24053                           ;mconfig.c: 31:    return 1;
 24054  01BC1A  0E01               	movlw	1
 24055  01BC1C  6E01               	movwf	btemp^0,c
 24056  01BC1E  0012               	return	
 24057  01BC20                     l1680:
 24058                           
 24059                           ;mconfig.c: 34:  if (!V.help)
 24060  01BC20  0101               	movlb	1	; () banked
 24061  01BC22  B5A2               	btfsc	(_V+155)& (0+255),2,b	;volatile
 24062  01BC24  D008               	goto	l10633
 24063                           
 24064                           ; BSR set to: 1
 24065                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 24066  01BC26  0E2C               	movlw	44
 24067  01BC28  6EE6               	movwf	postinc1,c
 24068  01BC2A  0E01               	movlw	1
 24069  01BC2C  6EE6               	movwf	postinc1,c
 24070  01BC2E  0E08               	movlw	8
 24071  01BC30  6EE6               	movwf	postinc1,c
 24072  01BC32  EC66  F0DD         	call	_StartTimer	;wreg free
 24073  01BC36                     l10633:
 24074                           
 24075                           ;mconfig.c: 37:  return 0;
 24076  01BC36  0E00               	movlw	0
 24077  01BC38  6E01               	movwf	btemp^0,c
 24078                           
 24079                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 24080  01BC3A  0012               	return		;funcret
 24081  01BC3C                     __end_of_help_button:
 24082                           	opt callstack 0
 24083                           
 24084 ;; *************** function _TimerDone *****************
 24085 ;; Defined at:
 24086 ;;		line 20 in file "timers.c"
 24087 ;; Parameters:    Size  Location     Type
 24088 ;;  timer           1  [STACK] const unsigned char 
 24089 ;; Auto vars:     Size  Location     Type
 24090 ;;		None
 24091 ;; Return value:  Size  Location     Type
 24092 ;;                  1  [STACK] _Bool 
 24093 ;; Registers used:
 24094 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 24095 ;; Tracked objects:
 24096 ;;		On entry : 0/1
 24097 ;;		On exit  : 0/0
 24098 ;;		Unchanged: 0/0
 24099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24104 ;;Total ram usage:        0 bytes
 24105 ;; Hardware stack levels used:    1
 24106 ;; Hardware stack levels required when called:   15
 24107 ;; This function calls:
 24108 ;;		Nothing
 24109 ;; This function is called by:
 24110 ;;		_main
 24111 ;;		_WaitMs
 24112 ;;		_help_button
 24113 ;;		_check_help
 24114 ;;		_set_display_info
 24115 ;;		_update_adc_result
 24116 ;;		_esr_check
 24117 ;; This function uses a reentrant model
 24118 ;;
 24119                           
 24120                           	psect	text94
 24121  01BF76                     __ptext94:
 24122                           	opt callstack 0
 24123  01BF76                     _TimerDone:
 24124                           	opt callstack 14
 24125                           
 24126                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24127                           ;incstack = 0
 24128  01BF76  0004               	clrwdt		;# 
 24129                           
 24130                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 24131                           ;stkvar	_timer @ sp[(0)+-1]
 24132  01BF78  0EFF               	movlw	-1
 24133  01BF7A  50E3               	movf	plusw1,w,c
 24134  01BF7C  0D02               	mullw	2
 24135  01BF7E  0E7D               	movlw	low _tickCount
 24136  01BF80  24F3               	addwf	243,w,c
 24137  01BF82  6ED9               	movwf	fsr2l,c
 24138  01BF84  0E02               	movlw	high _tickCount
 24139  01BF86  20F4               	addwfc	prodh,w,c
 24140  01BF88  6EDA               	movwf	fsr2h,c
 24141  01BF8A  50DE               	movf	postinc2,w,c
 24142  01BF8C  10DE               	iorwf	postinc2,w,c
 24143  01BF8E  A4D8               	btfss	status,2,c
 24144  01BF90  D002               	goto	l9919
 24145                           
 24146                           ;timers.c: 24:   return 1;
 24147  01BF92  0E01               	movlw	1
 24148  01BF94  D001               	goto	L28
 24149  01BF96                     l9919:
 24150                           
 24151                           ;timers.c: 26:  return 0;
 24152  01BF96  0E00               	movlw	0
 24153  01BF98                     L28:
 24154  01BF98  6E01               	movwf	btemp^0,c
 24155                           
 24156                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 24157  01BF9A  52E5               	movf	postdec1,f,c
 24158  01BF9C  0012               	return		;funcret
 24159  01BF9E                     __end_of_TimerDone:
 24160                           	opt callstack 0
 24161                           
 24162 ;; *************** function _StartTimer *****************
 24163 ;; Defined at:
 24164 ;;		line 12 in file "timers.c"
 24165 ;; Parameters:    Size  Location     Type
 24166 ;;  timer           1  [STACK] const unsigned char 
 24167 ;;  count           2  [STACK] const unsigned short 
 24168 ;; Auto vars:     Size  Location     Type
 24169 ;;		None
 24170 ;; Return value:  Size  Location     Type
 24171 ;;                  1  [STACK] void 
 24172 ;; Registers used:
 24173 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 24174 ;; Tracked objects:
 24175 ;;		On entry : 0/0
 24176 ;;		On exit  : 0/0
 24177 ;;		Unchanged: 0/0
 24178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24183 ;;Total ram usage:        0 bytes
 24184 ;; Hardware stack levels used:    1
 24185 ;; Hardware stack levels required when called:   15
 24186 ;; This function calls:
 24187 ;;		Nothing
 24188 ;; This function is called by:
 24189 ;;		_main
 24190 ;;		_WaitMs
 24191 ;;		_help_button
 24192 ;;		_check_help
 24193 ;;		_update_adc_result
 24194 ;;		_calc_bsoc
 24195 ;;		_esr_check
 24196 ;; This function uses a reentrant model
 24197 ;;
 24198                           
 24199                           	psect	text95
 24200  01BACC                     __ptext95:
 24201                           	opt callstack 0
 24202  01BACC                     _StartTimer:
 24203                           	opt callstack 0
 24204                           
 24205                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 24206                           ;stkvar	_count @ sp[(0)+-3]
 24207                           
 24208                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24209                           ;incstack = 0
 24210 ;; hardware stack exceeded
 24211  01BACC  0EFD               	movlw	-3
 24212  01BACE  006F FF8C  F00B    	movff	plusw1,btemp+10
 24213  01BAD4  0EFE               	movlw	-2
 24214  01BAD6  006F FF8C  F00C    	movff	plusw1,btemp+11
 24215  01BADC  90D8               	bcf	status,0,c
 24216  01BADE  340B               	rlcf	(btemp+10)^0,w,c
 24217  01BAE0  6E09               	movwf	(btemp+8)^0,c
 24218  01BAE2  340C               	rlcf	(btemp+11)^0,w,c
 24219  01BAE4  6E0A               	movwf	(btemp+9)^0,c
 24220                           
 24221                           ;stkvar	_timer @ sp[(0)+-1]
 24222  01BAE6  0EFF               	movlw	-1
 24223  01BAE8  50E3               	movf	plusw1,w,c
 24224  01BAEA  0D02               	mullw	2
 24225  01BAEC  0E7D               	movlw	low _tickCount
 24226  01BAEE  24F3               	addwf	243,w,c
 24227  01BAF0  6ED9               	movwf	fsr2l,c
 24228  01BAF2  0E02               	movlw	high _tickCount
 24229  01BAF4  20F4               	addwfc	prodh,w,c
 24230  01BAF6  6EDA               	movwf	fsr2h,c
 24231  01BAF8  0060  F027  FFDE   	movff	btemp+8,postinc2
 24232  01BAFE  0060  F02B  FFDD   	movff	btemp+9,postdec2
 24233                           
 24234                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 24235  01BB04  52E5               	movf	postdec1,f,c
 24236  01BB06  52E5               	movf	postdec1,f,c
 24237  01BB08  52E5               	movf	postdec1,f,c
 24238  01BB0A  0012               	return		;funcret
 24239  01BB0C                     __end_of_StartTimer:
 24240                           	opt callstack 0
 24241                           
 24242 ;; *************** function _display_info *****************
 24243 ;; Defined at:
 24244 ;;		line 190 in file "mconfig.c"
 24245 ;; Parameters:    Size  Location     Type
 24246 ;;		None
 24247 ;; Auto vars:     Size  Location     Type
 24248 ;;		None
 24249 ;; Return value:  Size  Location     Type
 24250 ;;                  1  [STACK] enum E16509
 24251 ;; Registers used:
 24252 ;;		btemp
 24253 ;; Tracked objects:
 24254 ;;		On entry : 0/1
 24255 ;;		On exit  : 0/0
 24256 ;;		Unchanged: 0/0
 24257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24262 ;;Total ram usage:        0 bytes
 24263 ;; Hardware stack levels used:    1
 24264 ;; Hardware stack levels required when called:   15
 24265 ;; This function calls:
 24266 ;;		Nothing
 24267 ;; This function is called by:
 24268 ;;		_check_help
 24269 ;; This function uses a reentrant model
 24270 ;;
 24271                           
 24272                           	psect	text96
 24273  01C556                     __ptext96:
 24274                           	opt callstack 0
 24275  01C556                     _display_info:
 24276                           	opt callstack 14
 24277                           
 24278                           ;mconfig.c: 192:  return V.response.info;
 24279                           
 24280                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24281                           ;incstack = 0
 24282  01C556  0060  F6AC  F001   	movff	_V+164,btemp	;volatile
 24283                           
 24284                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 24285  01C55C  0012               	return		;funcret
 24286  01C55E                     __end_of_display_info:
 24287                           	opt callstack 0
 24288                           
 24289 ;; *************** function _display_help *****************
 24290 ;; Defined at:
 24291 ;;		line 195 in file "mconfig.c"
 24292 ;; Parameters:    Size  Location     Type
 24293 ;;		None
 24294 ;; Auto vars:     Size  Location     Type
 24295 ;;		None
 24296 ;; Return value:  Size  Location     Type
 24297 ;;                  1  [STACK] enum E16509
 24298 ;; Registers used:
 24299 ;;		btemp
 24300 ;; Tracked objects:
 24301 ;;		On entry : 3F/1
 24302 ;;		On exit  : 0/0
 24303 ;;		Unchanged: 0/0
 24304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24309 ;;Total ram usage:        0 bytes
 24310 ;; Hardware stack levels used:    1
 24311 ;; Hardware stack levels required when called:   15
 24312 ;; This function calls:
 24313 ;;		Nothing
 24314 ;; This function is called by:
 24315 ;;		_check_help
 24316 ;; This function uses a reentrant model
 24317 ;;
 24318                           
 24319                           	psect	text97
 24320  01C55E                     __ptext97:
 24321                           	opt callstack 0
 24322  01C55E                     _display_help:
 24323                           	opt callstack 14
 24324                           
 24325                           ;mconfig.c: 197:  return V.response.help_temp;
 24326                           
 24327                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24328                           ;incstack = 0
 24329  01C55E  0060  F6B0  F001   	movff	_V+165,btemp	;volatile
 24330                           
 24331                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 24332  01C564  0012               	return		;funcret
 24333  01C566                     __end_of_display_help:
 24334                           	opt callstack 0
 24335                           
 24336 ;; *************** function _check_enter_button *****************
 24337 ;; Defined at:
 24338 ;;		line 42 in file "hid.c"
 24339 ;; Parameters:    Size  Location     Type
 24340 ;;  h               2  [STACK] PTR struct H_data
 24341 ;;		 -> H(7), 
 24342 ;; Auto vars:     Size  Location     Type
 24343 ;;		None
 24344 ;; Return value:  Size  Location     Type
 24345 ;;                  1  [STACK] _Bool 
 24346 ;; Registers used:
 24347 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
 24348 ;; Tracked objects:
 24349 ;;		On entry : 0/0
 24350 ;;		On exit  : 0/0
 24351 ;;		Unchanged: 0/0
 24352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24356 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24357 ;;Total ram usage:        0 bytes
 24358 ;; Hardware stack levels used:    1
 24359 ;; Hardware stack levels required when called:   15
 24360 ;; This function calls:
 24361 ;;		Nothing
 24362 ;; This function is called by:
 24363 ;;		_main
 24364 ;; This function uses a reentrant model
 24365 ;;
 24366                           
 24367                           	psect	text98
 24368  01B1A0                     __ptext98:
 24369                           	opt callstack 0
 24370  01B1A0                     _check_enter_button:
 24371                           	opt callstack 15
 24372                           
 24373                           ;hid.c: 42: _Bool check_enter_button(H_data* h);hid.c: 43: {;hid.c: 44:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 24374                           ;stkvar	_h @ sp[(0)+-2]
 24375                           
 24376                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24377                           ;incstack = 0
 24378  01B1A0  0EFE               	movlw	-2
 24379  01B1A2  006F FF8C  F00B    	movff	plusw1,btemp+10
 24380  01B1A8  0EFF               	movlw	-1
 24381  01B1AA  006F FF8C  F00C    	movff	plusw1,btemp+11
 24382  01B1B0  0E04               	movlw	4
 24383  01B1B2  240B               	addwf	(btemp+10)^0,w,c
 24384  01B1B4  6ED9               	movwf	fsr2l,c
 24385  01B1B6  0E00               	movlw	0
 24386  01B1B8  200C               	addwfc	(btemp+11)^0,w,c
 24387  01B1BA  6EDA               	movwf	fsr2h,c
 24388  01B1BC  50DF               	movf	indf2,w,c
 24389  01B1BE  A4D8               	btfss	status,2,c
 24390  01B1C0  D023               	goto	l13277
 24391                           
 24392                           ;stkvar	_h @ sp[(0)+-2]
 24393  01B1C2  0EFE               	movlw	-2
 24394  01B1C4  006F FF8C  F00B    	movff	plusw1,btemp+10
 24395  01B1CA  0EFF               	movlw	-1
 24396  01B1CC  006F FF8C  F00C    	movff	plusw1,btemp+11
 24397  01B1D2  0E05               	movlw	5
 24398  01B1D4  240B               	addwf	(btemp+10)^0,w,c
 24399  01B1D6  6ED9               	movwf	fsr2l,c
 24400  01B1D8  0E00               	movlw	0
 24401  01B1DA  200C               	addwfc	(btemp+11)^0,w,c
 24402  01B1DC  6EDA               	movwf	fsr2h,c
 24403  01B1DE  50DF               	movf	indf2,w,c
 24404  01B1E0  A4D8               	btfss	status,2,c
 24405  01B1E2  D012               	goto	l13277
 24406                           
 24407                           ;hid.c: 45:   h->wait_enter = 1;
 24408                           ;stkvar	_h @ sp[(0)+-2]
 24409  01B1E4  0EFE               	movlw	-2
 24410  01B1E6  006F FF8C  F00B    	movff	plusw1,btemp+10
 24411  01B1EC  0EFF               	movlw	-1
 24412  01B1EE  006F FF8C  F00C    	movff	plusw1,btemp+11
 24413  01B1F4  0E04               	movlw	4
 24414  01B1F6  240B               	addwf	(btemp+10)^0,w,c
 24415  01B1F8  6ED9               	movwf	fsr2l,c
 24416  01B1FA  0E00               	movlw	0
 24417  01B1FC  200C               	addwfc	(btemp+11)^0,w,c
 24418  01B1FE  6EDA               	movwf	fsr2h,c
 24419  01B200  0E01               	movlw	1
 24420  01B202  6EDF               	movwf	indf2,c
 24421                           
 24422                           ;hid.c: 46:   return 1;
 24423  01B204  0E01               	movlw	1
 24424  01B206  D001               	goto	L29
 24425  01B208                     l13277:
 24426                           
 24427                           ;hid.c: 48:  return 0;
 24428  01B208  0E00               	movlw	0
 24429  01B20A                     L29:
 24430  01B20A  6E01               	movwf	btemp^0,c
 24431                           
 24432                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 24433  01B20C  52E5               	movf	postdec1,f,c
 24434  01B20E  52E5               	movf	postdec1,f,c
 24435  01B210  0012               	return		;funcret
 24436  01B212                     __end_of_check_enter_button:
 24437                           	opt callstack 0
 24438                           
 24439 ;; *************** function _calc_ror_data *****************
 24440 ;; Defined at:
 24441 ;;		line 102 in file "mbmc.c"
 24442 ;; Parameters:    Size  Location     Type
 24443 ;;		None
 24444 ;; Auto vars:     Size  Location     Type
 24445 ;;		None
 24446 ;; Return value:  Size  Location     Type
 24447 ;;                  1  [STACK] void 
 24448 ;; Registers used:
 24449 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 24450 ;; Tracked objects:
 24451 ;;		On entry : 0/39
 24452 ;;		On exit  : 0/0
 24453 ;;		Unchanged: 0/0
 24454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24459 ;;Total ram usage:        0 bytes
 24460 ;; Hardware stack levels used:    1
 24461 ;; Hardware stack levels required when called:   18
 24462 ;; This function calls:
 24463 ;;		___flge
 24464 ;;		___flsub
 24465 ;;		_conv_raw_result
 24466 ;;		_fabsf
 24467 ;; This function is called by:
 24468 ;;		_main
 24469 ;; This function uses a reentrant model
 24470 ;;
 24471                           
 24472                           	psect	text99
 24473  018D80                     __ptext99:
 24474                           	opt callstack 0
 24475  018D80                     _calc_ror_data:
 24476                           	opt callstack 12
 24477                           
 24478                           ;mbmc.c: 104:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 106:  C.bc_ror = fabsf(con
      +                          v_raw_result(C_BATT, CONV) - bcror);
 24479                           
 24480                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24481                           ;incstack = 0
 24482  018D80  0060  F1A3  FFE6   	movff	calc_ror_data@bcror,postinc1
 24483  018D86  0060  F1A7  FFE6   	movff	calc_ror_data@bcror+1,postinc1
 24484  018D8C  0060  F1AB  FFE6   	movff	calc_ror_data@bcror+2,postinc1
 24485  018D92  0060  F1AF  FFE6   	movff	calc_ror_data@bcror+3,postinc1
 24486  018D98  0E00               	movlw	0
 24487  018D9A  6EE6               	movwf	postinc1,c
 24488  018D9C  0E00               	movlw	0
 24489  018D9E  6EE6               	movwf	postinc1,c
 24490  018DA0  EC87  F0A9         	call	_conv_raw_result	;wreg free
 24491  018DA4  0060  F007  FFE6   	movff	btemp,postinc1
 24492  018DAA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24493  018DB0  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24494  018DB6  0060  F013  FFE6   	movff	btemp+3,postinc1
 24495  018DBC  ECC0  F0DC         	call	___flsub	;wreg free
 24496  018DC0  0060  F007  FFE6   	movff	btemp,postinc1
 24497  018DC6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24498  018DCC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24499  018DD2  0060  F013  FFE6   	movff	btemp+3,postinc1
 24500  018DD8  EC2A  F0D4         	call	_fabsf	;wreg free
 24501  018DDC  0060  F004  F76F   	movff	btemp,_C+112	;volatile
 24502  018DE2  0060  F008  F770   	movff	btemp+1,_C+113	;volatile
 24503  018DE8  0060  F00C  F771   	movff	btemp+2,_C+114	;volatile
 24504  018DEE  0060  F010  F772   	movff	btemp+3,_C+115	;volatile
 24505                           
 24506                           ;mbmc.c: 107:  bcror = conv_raw_result(C_BATT, CONV);
 24507  018DF4  0E00               	movlw	0
 24508  018DF6  6EE6               	movwf	postinc1,c
 24509  018DF8  0E00               	movlw	0
 24510  018DFA  6EE6               	movwf	postinc1,c
 24511  018DFC  EC87  F0A9         	call	_conv_raw_result	;wreg free
 24512  018E00  0060  F004  F068   	movff	btemp,calc_ror_data@bcror
 24513  018E06  0060  F008  F069   	movff	btemp+1,calc_ror_data@bcror+1
 24514  018E0C  0060  F00C  F06A   	movff	btemp+2,calc_ror_data@bcror+2
 24515  018E12  0060  F010  F06B   	movff	btemp+3,calc_ror_data@bcror+3
 24516                           
 24517                           ;mbmc.c: 108:  C.bv_ror = fabsf(conv_raw_result(V_BAT, CONV) - bvror);
 24518  018E18  0060  F1B3  FFE6   	movff	calc_ror_data@bvror,postinc1
 24519  018E1E  0060  F1B7  FFE6   	movff	calc_ror_data@bvror+1,postinc1
 24520  018E24  0060  F1BB  FFE6   	movff	calc_ror_data@bvror+2,postinc1
 24521  018E2A  0060  F1BF  FFE6   	movff	calc_ror_data@bvror+3,postinc1
 24522  018E30  0E00               	movlw	0
 24523  018E32  6EE6               	movwf	postinc1,c
 24524  018E34  0E04               	movlw	4
 24525  018E36  6EE6               	movwf	postinc1,c
 24526  018E38  EC87  F0A9         	call	_conv_raw_result	;wreg free
 24527  018E3C  0060  F007  FFE6   	movff	btemp,postinc1
 24528  018E42  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24529  018E48  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24530  018E4E  0060  F013  FFE6   	movff	btemp+3,postinc1
 24531  018E54  ECC0  F0DC         	call	___flsub	;wreg free
 24532  018E58  0060  F007  FFE6   	movff	btemp,postinc1
 24533  018E5E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24534  018E64  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24535  018E6A  0060  F013  FFE6   	movff	btemp+3,postinc1
 24536  018E70  EC2A  F0D4         	call	_fabsf	;wreg free
 24537  018E74  0060  F004  F76B   	movff	btemp,_C+108	;volatile
 24538  018E7A  0060  F008  F76C   	movff	btemp+1,_C+109	;volatile
 24539  018E80  0060  F00C  F76D   	movff	btemp+2,_C+110	;volatile
 24540  018E86  0060  F010  F76E   	movff	btemp+3,_C+111	;volatile
 24541                           
 24542                           ;mbmc.c: 109:  if (C.bv_ror < 0.0051)
 24543  018E8C  0EE7               	movlw	231
 24544  018E8E  6EE6               	movwf	postinc1,c
 24545  018E90  0E1D               	movlw	29
 24546  018E92  6EE6               	movwf	postinc1,c
 24547  018E94  0EA7               	movlw	167
 24548  018E96  6EE6               	movwf	postinc1,c
 24549  018E98  0E3B               	movlw	59
 24550  018E9A  6EE6               	movwf	postinc1,c
 24551  018E9C  EE21  F36B         	lfsr	2,_C+108	;volatile
 24552  018EA0  006F FF7B FFE6     	movff	postinc2,postinc1
 24553  018EA6  006F FF7B FFE6     	movff	postinc2,postinc1
 24554  018EAC  006F FF7B FFE6     	movff	postinc2,postinc1
 24555  018EB2  006F FF7B FFE6     	movff	postinc2,postinc1
 24556  018EB8  ECFC  F0C8         	call	___flge	;wreg free
 24557  018EBC  B001               	btfsc	btemp& (0+255),0,c
 24558  018EBE  D010               	goto	l11093
 24559                           
 24560                           ;mbmc.c: 110:   C.bv_ror = 0.0140 + 0.0001;
 24561  018EC0  0EB0               	movlw	176
 24562  018EC2  006F FFA0  F76B    	movff	wreg,_C+108	;volatile
 24563  018EC8  0E03               	movlw	3
 24564  018ECA  006F FFA0  F76C    	movff	wreg,_C+109	;volatile
 24565  018ED0  0E67               	movlw	103
 24566  018ED2  006F FFA0  F76D    	movff	wreg,_C+110	;volatile
 24567  018ED8  0E3C               	movlw	60
 24568  018EDA  006F FFA0  F76E    	movff	wreg,_C+111	;volatile
 24569  018EE0                     l11093:
 24570                           
 24571                           ;mbmc.c: 111:  bvror = conv_raw_result(V_BAT, CONV);
 24572  018EE0  0E00               	movlw	0
 24573  018EE2  6EE6               	movwf	postinc1,c
 24574  018EE4  0E04               	movlw	4
 24575  018EE6  6EE6               	movwf	postinc1,c
 24576  018EE8  EC87  F0A9         	call	_conv_raw_result	;wreg free
 24577  018EEC  0060  F004  F06C   	movff	btemp,calc_ror_data@bvror
 24578  018EF2  0060  F008  F06D   	movff	btemp+1,calc_ror_data@bvror+1
 24579  018EF8  0060  F00C  F06E   	movff	btemp+2,calc_ror_data@bvror+2
 24580  018EFE  0060  F010  F06F   	movff	btemp+3,calc_ror_data@bvror+3
 24581                           
 24582                           ; _calc_ror_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 24583  018F04  0012               	return		;funcret
 24584  018F06                     __end_of_calc_ror_data:
 24585                           	opt callstack 0
 24586                           
 24587 ;; *************** function _fabsf *****************
 24588 ;; Defined at:
 24589 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fabsf.c"
 24590 ;; Parameters:    Size  Location     Type
 24591 ;;  x               4  [STACK] float 
 24592 ;; Auto vars:     Size  Location     Type
 24593 ;;  u               4  [STACK] struct .
 24594 ;; Return value:  Size  Location     Type
 24595 ;;                  4  [STACK] float 
 24596 ;; Registers used:
 24597 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 24598 ;; Tracked objects:
 24599 ;;		On entry : 0/0
 24600 ;;		On exit  : 0/0
 24601 ;;		Unchanged: 0/0
 24602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24606 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24607 ;;Total ram usage:        0 bytes
 24608 ;; Hardware stack levels used:    1
 24609 ;; Hardware stack levels required when called:   15
 24610 ;; This function calls:
 24611 ;;		Nothing
 24612 ;; This function is called by:
 24613 ;;		_main
 24614 ;;		_calc_ror_data
 24615 ;;		_calc_bsoc
 24616 ;;		_esr_check
 24617 ;; This function uses a reentrant model
 24618 ;;
 24619                           
 24620                           	psect	text100
 24621  01A854                     __ptext100:
 24622                           	opt callstack 0
 24623  01A854                     _fabsf:
 24624                           	opt callstack 0
 24625                           
 24626                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24627  01A854  52E6               	movf	postinc1,f,c
 24628  01A856  52E6               	movf	postinc1,f,c
 24629  01A858  52E6               	movf	postinc1,f,c
 24630  01A85A  52E6               	movf	postinc1,f,c
 24631                           
 24632                           ;incstack = 0
 24633 ;; hardware stack exceeded
 24634  01A85C  0060  F180  F009   	movff	fabsf@F463,btemp+8
 24635  01A862  0060  F184  F00A   	movff	fabsf@F463+1,btemp+9
 24636  01A868  0060  F188  F00B   	movff	fabsf@F463+2,btemp+10
 24637  01A86E  0060  F18C  F00C   	movff	fabsf@F463+3,btemp+11
 24638                           
 24639                           ;stkvar	_u @ sp[(-4)+0]
 24640  01A874  0EFC               	movlw	-4
 24641  01A876  0060  F027  FFE3   	movff	btemp+8,plusw1
 24642  01A87C  0EFD               	movlw	-3
 24643  01A87E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24644  01A884  0EFE               	movlw	-2
 24645  01A886  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24646  01A88C  0EFF               	movlw	-1
 24647  01A88E  0060  F033  FFE3   	movff	btemp+11,plusw1
 24648                           
 24649                           ;stkvar	_x @ sp[(-4)+-4]
 24650  01A894  0EF8               	movlw	-8
 24651  01A896  006F FF8C  F009    	movff	plusw1,btemp+8
 24652  01A89C  0EF9               	movlw	-7
 24653  01A89E  006F FF8C  F00A    	movff	plusw1,btemp+9
 24654  01A8A4  0EFA               	movlw	-6
 24655  01A8A6  006F FF8C  F00B    	movff	plusw1,btemp+10
 24656  01A8AC  0EFB               	movlw	-5
 24657  01A8AE  006F FF8C  F00C    	movff	plusw1,btemp+11
 24658                           
 24659                           ;stkvar	_u @ sp[(-4)+0]
 24660  01A8B4  0EFC               	movlw	-4
 24661  01A8B6  0060  F027  FFE3   	movff	btemp+8,plusw1
 24662  01A8BC  0EFD               	movlw	-3
 24663  01A8BE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24664  01A8C4  0EFE               	movlw	-2
 24665  01A8C6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24666  01A8CC  0EFF               	movlw	-1
 24667  01A8CE  0060  F033  FFE3   	movff	btemp+11,plusw1
 24668                           
 24669                           ;stkvar	_u @ sp[(-4)+0]
 24670  01A8D4  0EFF               	movlw	-1
 24671  01A8D6  9EE3               	bcf	plusw1,7,c
 24672                           
 24673                           ;stkvar	_u @ sp[(-4)+0]
 24674  01A8D8  0EFC               	movlw	-4
 24675  01A8DA  006F FF8C  F001    	movff	plusw1,btemp
 24676  01A8E0  0EFD               	movlw	-3
 24677  01A8E2  006F FF8C  F002    	movff	plusw1,btemp+1
 24678  01A8E8  0EFE               	movlw	-2
 24679  01A8EA  006F FF8C  F003    	movff	plusw1,btemp+2
 24680  01A8F0  0EFF               	movlw	-1
 24681  01A8F2  006F FF8C  F004    	movff	plusw1,btemp+3
 24682                           
 24683                           ; _fabsf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 24684  01A8F8  0EF8               	movlw	248
 24685  01A8FA  26E1               	addwf	fsr1l,f,c
 24686  01A8FC  0EFF               	movlw	255
 24687  01A8FE  22E2               	addwfc	fsr1h,f,c
 24688  01A900  0012               	return		;funcret
 24689  01A902                     __end_of_fabsf:
 24690                           	opt callstack 0
 24691                           
 24692 ;; *************** function _conv_raw_result *****************
 24693 ;; Defined at:
 24694 ;;		line 120 in file "daq.c"
 24695 ;; Parameters:    Size  Location     Type
 24696 ;;  chan            1  [STACK] const enum E16590
 24697 ;;  to_what         1  [STACK] const enum E16652
 24698 ;; Auto vars:     Size  Location     Type
 24699 ;;		None
 24700 ;; Return value:  Size  Location     Type
 24701 ;;                  4  [STACK] float 
 24702 ;; Registers used:
 24703 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 24704 ;; Tracked objects:
 24705 ;;		On entry : 0/39
 24706 ;;		On exit  : 0/0
 24707 ;;		Unchanged: 0/0
 24708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24712 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24713 ;;Total ram usage:        0 bytes
 24714 ;; Hardware stack levels used:    1
 24715 ;; Hardware stack levels required when called:   17
 24716 ;; This function calls:
 24717 ;;		___fladd
 24718 ;;		___fldiv
 24719 ;;		___flmul
 24720 ;;		___flsub
 24721 ;;		___xxtofl
 24722 ;;		_get_raw_result
 24723 ;;		_nanf
 24724 ;; This function is called by:
 24725 ;;		_main
 24726 ;;		_convert_adc_data
 24727 ;;		_calc_ror_data
 24728 ;;		_check_day_time
 24729 ;;		_init_bsoc
 24730 ;;		_esr_check
 24731 ;; This function uses a reentrant model
 24732 ;;
 24733                           
 24734                           	psect	text101
 24735  01530E                     __ptext101:
 24736                           	opt callstack 0
 24737  01530E                     _conv_raw_result:
 24738                           	opt callstack 0
 24739                           
 24740                           ;daq.c: 120: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);
      +                          daq.c: 121: {;daq.c: 123:  switch (to_what) {
 24741                           
 24742                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24743                           ;incstack = 0
 24744 ;; hardware stack exceeded
 24745  01530E  D276               	goto	l9901
 24746  015310                     l9847:
 24747                           
 24748                           ;daq.c: 125:   if (!(0b0011110001110111 >> chan & 0x1))
 24749                           ;stkvar	_chan @ sp[(0)+-1]
 24750  015310  0EFF               	movlw	-1
 24751  015312  006F FF8C  F00C    	movff	plusw1,btemp+11
 24752  015318  0E77               	movlw	119
 24753  01531A  6E09               	movwf	(btemp+8)^0,c
 24754  01531C  0E3C               	movlw	60
 24755  01531E  6E0A               	movwf	(btemp+9)^0,c
 24756  015320  2A0C               	incf	(btemp+11)^0,f,c
 24757  015322  D003               	goto	u9164
 24758  015324                     u9165:
 24759  015324  340A               	rlcf	(btemp+9)^0,w,c
 24760  015326  320A               	rrcf	(btemp+9)^0,f,c
 24761  015328  3209               	rrcf	(btemp+8)^0,f,c
 24762  01532A                     u9164:
 24763  01532A  2E0C               	decfsz	(btemp+11)^0,f,c
 24764  01532C  D7FB               	goto	u9165
 24765  01532E  B009               	btfsc	(btemp+8)^0,0,c
 24766  015330  D007               	goto	l9853
 24767                           
 24768                           ;daq.c: 126:    return nanf("");
 24769  015332  0E4F               	movlw	low (STR_64+120)
 24770  015334  6EE6               	movwf	postinc1,c
 24771  015336  0EFC               	movlw	high (STR_64+120)
 24772  015338  6EE6               	movwf	postinc1,c
 24773  01533A  EC3F  F0DA         	call	_nanf	;wreg free
 24774  01533E  D26E               	goto	l1815
 24775  015340                     l9853:
 24776                           
 24777                           ;daq.c: 128:   if (0b0000000000000011 >> chan & 0x1) {
 24778                           ;stkvar	_chan @ sp[(0)+-1]
 24779  015340  0EFF               	movlw	-1
 24780  015342  006F FF8C  F00C    	movff	plusw1,btemp+11
 24781  015348  0E03               	movlw	3
 24782  01534A  6E09               	movwf	(btemp+8)^0,c
 24783  01534C  0E00               	movlw	0
 24784  01534E  6E0A               	movwf	(btemp+9)^0,c
 24785  015350  2A0C               	incf	(btemp+11)^0,f,c
 24786  015352  D003               	goto	u9184
 24787  015354                     u9185:
 24788  015354  340A               	rlcf	(btemp+9)^0,w,c
 24789  015356  320A               	rrcf	(btemp+9)^0,f,c
 24790  015358  3209               	rrcf	(btemp+8)^0,f,c
 24791  01535A                     u9184:
 24792  01535A  2E0C               	decfsz	(btemp+11)^0,f,c
 24793  01535C  D7FB               	goto	u9185
 24794  01535E  A009               	btfss	(btemp+8)^0,0,c
 24795  015360  D11F               	goto	l9867
 24796                           
 24797                           ;daq.c: 129:    if (0b0000000000000001 >> chan & 0x1) {
 24798                           ;stkvar	_chan @ sp[(0)+-1]
 24799  015362  0EFF               	movlw	-1
 24800  015364  006F FF8C  F00C    	movff	plusw1,btemp+11
 24801  01536A  0E01               	movlw	1
 24802  01536C  6E09               	movwf	(btemp+8)^0,c
 24803  01536E  0E00               	movlw	0
 24804  015370  6E0A               	movwf	(btemp+9)^0,c
 24805  015372  2A0C               	incf	(btemp+11)^0,f,c
 24806  015374  D003               	goto	u9204
 24807  015376                     u9205:
 24808  015376  340A               	rlcf	(btemp+9)^0,w,c
 24809  015378  320A               	rrcf	(btemp+9)^0,f,c
 24810  01537A  3209               	rrcf	(btemp+8)^0,f,c
 24811  01537C                     u9204:
 24812  01537C  2E0C               	decfsz	(btemp+11)^0,f,c
 24813  01537E  D7FB               	goto	u9205
 24814  015380  A009               	btfss	(btemp+8)^0,0,c
 24815  015382  D087               	goto	l9863
 24816                           
 24817                           ;daq.c: 130:     return R.n_zero[0]+((float) ((int16_t) get_raw_result(chan)) - R.n_offs
      +                          et[0]) * 0.0850000;
 24818  015384  0060  F367  FFE6   	movff	_R+42,postinc1
 24819  01538A  0060  F36B  FFE6   	movff	_R+43,postinc1
 24820  015390  0060  F36F  FFE6   	movff	_R+44,postinc1
 24821  015396  0060  F373  FFE6   	movff	_R+45,postinc1
 24822  01539C  0E7B               	movlw	123
 24823  01539E  6EE6               	movwf	postinc1,c
 24824  0153A0  0E14               	movlw	20
 24825  0153A2  6EE6               	movwf	postinc1,c
 24826  0153A4  0EAE               	movlw	174
 24827  0153A6  6EE6               	movwf	postinc1,c
 24828  0153A8  0E3D               	movlw	61
 24829  0153AA  6EE6               	movwf	postinc1,c
 24830  0153AC  0060  F354  F009   	movff	_R+38,btemp+8	;volatile
 24831  0153B2  0060  F358  F00A   	movff	_R+39,btemp+9	;volatile
 24832  0153B8  0E00               	movlw	0
 24833  0153BA  BE0A               	btfsc	(btemp+9)^0,7,c
 24834  0153BC  0EFF               	movlw	255
 24835  0153BE  6E0B               	movwf	(btemp+10)^0,c
 24836  0153C0  6E0C               	movwf	(btemp+11)^0,c
 24837  0153C2  0060  F027  FFE6   	movff	btemp+8,postinc1
 24838  0153C8  0060  F02B  FFE6   	movff	btemp+9,postinc1
 24839  0153CE  0060  F02F  FFE6   	movff	btemp+10,postinc1
 24840  0153D4  0060  F033  FFE6   	movff	btemp+11,postinc1
 24841  0153DA  0E01               	movlw	1
 24842  0153DC  6EE6               	movwf	postinc1,c
 24843  0153DE  EC57  F0C2         	call	___xxtofl	;wreg free
 24844  0153E2  0060  F007  FFE6   	movff	btemp,postinc1
 24845  0153E8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24846  0153EE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24847  0153F4  0060  F013  FFE6   	movff	btemp+3,postinc1
 24848                           
 24849                           ;stkvar	_chan @ sp[(-12)+-1]
 24850  0153FA  0EF3               	movlw	-13
 24851  0153FC  50E3               	movf	plusw1,w,c
 24852  0153FE  6EE6               	movwf	postinc1,c
 24853  015400  ECBE  F0E1         	call	_get_raw_result	;wreg free
 24854  015404  0060  F004  F00B   	movff	btemp,btemp+10
 24855  01540A  0060  F008  F00C   	movff	btemp+1,btemp+11
 24856  015410  500B               	movf	(btemp+10)^0,w,c
 24857  015412  6E05               	movwf	(btemp+4)^0,c
 24858  015414  500C               	movf	(btemp+11)^0,w,c
 24859  015416  6E06               	movwf	(btemp+5)^0,c
 24860  015418  6A07               	clrf	(btemp+6)^0,c
 24861  01541A  6A08               	clrf	(btemp+7)^0,c
 24862  01541C  0060  F017  FFE6   	movff	btemp+4,postinc1
 24863  015422  0060  F01B  FFE6   	movff	btemp+5,postinc1
 24864  015428  0060  F01F  FFE6   	movff	btemp+6,postinc1
 24865  01542E  0060  F023  FFE6   	movff	btemp+7,postinc1
 24866  015434  0E00               	movlw	0
 24867  015436  6EE6               	movwf	postinc1,c
 24868  015438  EC57  F0C2         	call	___xxtofl	;wreg free
 24869  01543C  0060  F007  FFE6   	movff	btemp,postinc1
 24870  015442  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24871  015448  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24872  01544E  0060  F013  FFE6   	movff	btemp+3,postinc1
 24873  015454  ECC0  F0DC         	call	___flsub	;wreg free
 24874  015458  0060  F007  FFE6   	movff	btemp,postinc1
 24875  01545E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24876  015464  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24877  01546A  0060  F013  FFE6   	movff	btemp+3,postinc1
 24878  015470  ECD7  F09E         	call	___flmul	;wreg free
 24879  015474  0060  F007  FFE6   	movff	btemp,postinc1
 24880  01547A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24881  015480  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24882  015486  0060  F013  FFE6   	movff	btemp+3,postinc1
 24883  01548C  ECEC  F0A2         	call	___fladd	;wreg free
 24884  015490  D1C5               	goto	l1815
 24885  015492                     l9863:
 24886                           
 24887                           ;daq.c: 132:     return R.n_zero[1]+((float) ((int16_t) get_raw_result(chan)) - R.n_offs
      +                          et[1]) * 0.0350000;
 24888  015492  0060  F377  FFE6   	movff	_R+46,postinc1
 24889  015498  0060  F37B  FFE6   	movff	_R+47,postinc1
 24890  01549E  0060  F37F  FFE6   	movff	_R+48,postinc1
 24891  0154A4  0060  F383  FFE6   	movff	_R+49,postinc1
 24892  0154AA  0E29               	movlw	41
 24893  0154AC  6EE6               	movwf	postinc1,c
 24894  0154AE  0E5C               	movlw	92
 24895  0154B0  6EE6               	movwf	postinc1,c
 24896  0154B2  0E0F               	movlw	15
 24897  0154B4  6EE6               	movwf	postinc1,c
 24898  0154B6  0E3D               	movlw	61
 24899  0154B8  6EE6               	movwf	postinc1,c
 24900  0154BA  0060  F35C  F009   	movff	_R+40,btemp+8	;volatile
 24901  0154C0  0060  F360  F00A   	movff	_R+41,btemp+9	;volatile
 24902  0154C6  0E00               	movlw	0
 24903  0154C8  BE0A               	btfsc	(btemp+9)^0,7,c
 24904  0154CA  0EFF               	movlw	255
 24905  0154CC  6E0B               	movwf	(btemp+10)^0,c
 24906  0154CE  6E0C               	movwf	(btemp+11)^0,c
 24907  0154D0  0060  F027  FFE6   	movff	btemp+8,postinc1
 24908  0154D6  0060  F02B  FFE6   	movff	btemp+9,postinc1
 24909  0154DC  0060  F02F  FFE6   	movff	btemp+10,postinc1
 24910  0154E2  0060  F033  FFE6   	movff	btemp+11,postinc1
 24911  0154E8  0E01               	movlw	1
 24912  0154EA  6EE6               	movwf	postinc1,c
 24913  0154EC  EC57  F0C2         	call	___xxtofl	;wreg free
 24914  0154F0  0060  F007  FFE6   	movff	btemp,postinc1
 24915  0154F6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24916  0154FC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24917  015502  0060  F013  FFE6   	movff	btemp+3,postinc1
 24918                           
 24919                           ;stkvar	_chan @ sp[(-12)+-1]
 24920  015508  0EF3               	movlw	-13
 24921  01550A  50E3               	movf	plusw1,w,c
 24922  01550C  6EE6               	movwf	postinc1,c
 24923  01550E  ECBE  F0E1         	call	_get_raw_result	;wreg free
 24924  015512  0060  F004  F00B   	movff	btemp,btemp+10
 24925  015518  0060  F008  F00C   	movff	btemp+1,btemp+11
 24926  01551E  500B               	movf	(btemp+10)^0,w,c
 24927  015520  6E05               	movwf	(btemp+4)^0,c
 24928  015522  500C               	movf	(btemp+11)^0,w,c
 24929  015524  6E06               	movwf	(btemp+5)^0,c
 24930  015526  6A07               	clrf	(btemp+6)^0,c
 24931  015528  6A08               	clrf	(btemp+7)^0,c
 24932  01552A  0060  F017  FFE6   	movff	btemp+4,postinc1
 24933  015530  0060  F01B  FFE6   	movff	btemp+5,postinc1
 24934  015536  0060  F01F  FFE6   	movff	btemp+6,postinc1
 24935  01553C  0060  F023  FFE6   	movff	btemp+7,postinc1
 24936  015542  0E00               	movlw	0
 24937  015544  6EE6               	movwf	postinc1,c
 24938  015546  EC57  F0C2         	call	___xxtofl	;wreg free
 24939  01554A  0060  F007  FFE6   	movff	btemp,postinc1
 24940  015550  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24941  015556  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24942  01555C  0060  F013  FFE6   	movff	btemp+3,postinc1
 24943  015562  ECC0  F0DC         	call	___flsub	;wreg free
 24944  015566  0060  F007  FFE6   	movff	btemp,postinc1
 24945  01556C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24946  015572  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24947  015578  0060  F013  FFE6   	movff	btemp+3,postinc1
 24948  01557E  ECD7  F09E         	call	___flmul	;wreg free
 24949  015582  0060  F007  FFE6   	movff	btemp,postinc1
 24950  015588  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24951  01558E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24952  015594  0060  F013  FFE6   	movff	btemp+3,postinc1
 24953  01559A  ECEC  F0A2         	call	___fladd	;wreg free
 24954  01559E  D13E               	goto	l1815
 24955  0155A0                     l9867:
 24956                           
 24957                           ;daq.c: 135:    if (0b0000100000000000 >> chan & 0x1) {
 24958                           ;stkvar	_chan @ sp[(0)+-1]
 24959  0155A0  0EFF               	movlw	-1
 24960  0155A2  006F FF8C  F00C    	movff	plusw1,btemp+11
 24961  0155A8  0E00               	movlw	0
 24962  0155AA  6E09               	movwf	(btemp+8)^0,c
 24963  0155AC  0E08               	movlw	8
 24964  0155AE  6E0A               	movwf	(btemp+9)^0,c
 24965  0155B0  2A0C               	incf	(btemp+11)^0,f,c
 24966  0155B2  D003               	goto	u9224
 24967  0155B4                     u9225:
 24968  0155B4  340A               	rlcf	(btemp+9)^0,w,c
 24969  0155B6  320A               	rrcf	(btemp+9)^0,f,c
 24970  0155B8  3209               	rrcf	(btemp+8)^0,f,c
 24971  0155BA                     u9224:
 24972  0155BA  2E0C               	decfsz	(btemp+11)^0,f,c
 24973  0155BC  D7FB               	goto	u9225
 24974  0155BE  A009               	btfss	(btemp+8)^0,0,c
 24975  0155C0  D008               	goto	l9875
 24976                           
 24977                           ;daq.c: 136:     return 25.0;
 24978  0155C2  0E00               	movlw	0
 24979  0155C4  6E01               	movwf	btemp^0,c
 24980  0155C6  0E00               	movlw	0
 24981  0155C8  6E02               	movwf	(btemp+1)^0,c
 24982  0155CA  0EC8               	movlw	200
 24983  0155CC  6E03               	movwf	(btemp+2)^0,c
 24984  0155CE  0E41               	movlw	65
 24985  0155D0  D113               	goto	L30
 24986  0155D2                     l9875:
 24987                           
 24988                           ;daq.c: 138:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 24989  0155D2  0E00               	movlw	0
 24990  0155D4  6EE6               	movwf	postinc1,c
 24991  0155D6  0E00               	movlw	0
 24992  0155D8  6EE6               	movwf	postinc1,c
 24993  0155DA  0E7A               	movlw	122
 24994  0155DC  6EE6               	movwf	postinc1,c
 24995  0155DE  0E44               	movlw	68
 24996  0155E0  6EE6               	movwf	postinc1,c
 24997  0155E2  0E61               	movlw	97
 24998  0155E4  6EE6               	movwf	postinc1,c
 24999  0155E6  0E03               	movlw	3
 25000  0155E8  6EE6               	movwf	postinc1,c
 25001  0155EA  0E84               	movlw	132
 25002  0155EC  6EE6               	movwf	postinc1,c
 25003  0155EE  0E40               	movlw	64
 25004  0155F0  6EE6               	movwf	postinc1,c
 25005                           
 25006                           ;stkvar	_chan @ sp[(-8)+-1]
 25007  0155F2  0EF7               	movlw	-9
 25008  0155F4  50E3               	movf	plusw1,w,c
 25009  0155F6  6EE6               	movwf	postinc1,c
 25010  0155F8  ECBE  F0E1         	call	_get_raw_result	;wreg free
 25011  0155FC  0060  F004  F00B   	movff	btemp,btemp+10
 25012  015602  0060  F008  F00C   	movff	btemp+1,btemp+11
 25013  015608  500B               	movf	(btemp+10)^0,w,c
 25014  01560A  6E05               	movwf	(btemp+4)^0,c
 25015  01560C  500C               	movf	(btemp+11)^0,w,c
 25016  01560E  6E06               	movwf	(btemp+5)^0,c
 25017  015610  6A07               	clrf	(btemp+6)^0,c
 25018  015612  6A08               	clrf	(btemp+7)^0,c
 25019  015614  0060  F017  FFE6   	movff	btemp+4,postinc1
 25020  01561A  0060  F01B  FFE6   	movff	btemp+5,postinc1
 25021  015620  0060  F01F  FFE6   	movff	btemp+6,postinc1
 25022  015626  0060  F023  FFE6   	movff	btemp+7,postinc1
 25023  01562C  0E00               	movlw	0
 25024  01562E  6EE6               	movwf	postinc1,c
 25025  015630  EC57  F0C2         	call	___xxtofl	;wreg free
 25026  015634  0060  F007  FFE6   	movff	btemp,postinc1
 25027  01563A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25028  015640  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25029  015646  0060  F013  FFE6   	movff	btemp+3,postinc1
 25030  01564C  ECD7  F09E         	call	___flmul	;wreg free
 25031  015650  0060  F007  FFE6   	movff	btemp,postinc1
 25032  015656  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25033  01565C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25034  015662  0060  F013  FFE6   	movff	btemp+3,postinc1
 25035  015668  ECCA  F0A6         	call	___fldiv	;wreg free
 25036  01566C  D0D7               	goto	l1815
 25037  01566E                     l9879:
 25038                           
 25039                           ;daq.c: 143:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
 25040                           ;stkvar	_chan @ sp[(0)+-1]
 25041  01566E  0EFF               	movlw	-1
 25042  015670  006F FF8C  F00C    	movff	plusw1,btemp+11
 25043  015676  0E03               	movlw	3
 25044  015678  6E09               	movwf	(btemp+8)^0,c
 25045  01567A  0E00               	movlw	0
 25046  01567C  6E0A               	movwf	(btemp+9)^0,c
 25047  01567E  2A0C               	incf	(btemp+11)^0,f,c
 25048  015680  D003               	goto	u9244
 25049  015682                     u9245:
 25050  015682  340A               	rlcf	(btemp+9)^0,w,c
 25051  015684  320A               	rrcf	(btemp+9)^0,f,c
 25052  015686  3209               	rrcf	(btemp+8)^0,f,c
 25053  015688                     u9244:
 25054  015688  2E0C               	decfsz	(btemp+11)^0,f,c
 25055  01568A  D7FB               	goto	u9245
 25056  01568C  B009               	btfsc	(btemp+8)^0,0,c
 25057  01568E  D011               	goto	u9270
 25058                           
 25059                           ;stkvar	_chan @ sp[(0)+-1]
 25060  015690  0EFF               	movlw	-1
 25061  015692  006F FF8C  F00C    	movff	plusw1,btemp+11
 25062  015698  0E00               	movlw	0
 25063  01569A  6E09               	movwf	(btemp+8)^0,c
 25064  01569C  0E08               	movlw	8
 25065  01569E  6E0A               	movwf	(btemp+9)^0,c
 25066  0156A0  2A0C               	incf	(btemp+11)^0,f,c
 25067  0156A2  D003               	goto	u9264
 25068  0156A4                     u9265:
 25069  0156A4  340A               	rlcf	(btemp+9)^0,w,c
 25070  0156A6  320A               	rrcf	(btemp+9)^0,f,c
 25071  0156A8  3209               	rrcf	(btemp+8)^0,f,c
 25072  0156AA                     u9264:
 25073  0156AA  2E0C               	decfsz	(btemp+11)^0,f,c
 25074  0156AC  D7FB               	goto	u9265
 25075  0156AE  A009               	btfss	(btemp+8)^0,0,c
 25076  0156B0  D04E               	goto	l9887
 25077  0156B2                     u9270:
 25078                           
 25079                           ;daq.c: 144:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
 25080  0156B2  0E00               	movlw	0
 25081  0156B4  6EE6               	movwf	postinc1,c
 25082  0156B6  0E00               	movlw	0
 25083  0156B8  6EE6               	movwf	postinc1,c
 25084  0156BA  0E7A               	movlw	122
 25085  0156BC  6EE6               	movwf	postinc1,c
 25086  0156BE  0E44               	movlw	68
 25087  0156C0  6EE6               	movwf	postinc1,c
 25088  0156C2  0E00               	movlw	0
 25089  0156C4  6EE6               	movwf	postinc1,c
 25090  0156C6  0E00               	movlw	0
 25091  0156C8  6EE6               	movwf	postinc1,c
 25092  0156CA  0E20               	movlw	32
 25093  0156CC  6EE6               	movwf	postinc1,c
 25094  0156CE  0E3F               	movlw	63
 25095  0156D0  6EE6               	movwf	postinc1,c
 25096                           
 25097                           ;stkvar	_chan @ sp[(-8)+-1]
 25098  0156D2  0EF7               	movlw	-9
 25099  0156D4  50E3               	movf	plusw1,w,c
 25100  0156D6  6EE6               	movwf	postinc1,c
 25101  0156D8  ECBE  F0E1         	call	_get_raw_result	;wreg free
 25102  0156DC  0060  F004  F00B   	movff	btemp,btemp+10
 25103  0156E2  0060  F008  F00C   	movff	btemp+1,btemp+11
 25104  0156E8  500B               	movf	(btemp+10)^0,w,c
 25105  0156EA  6E05               	movwf	(btemp+4)^0,c
 25106  0156EC  500C               	movf	(btemp+11)^0,w,c
 25107  0156EE  6E06               	movwf	(btemp+5)^0,c
 25108  0156F0  6A07               	clrf	(btemp+6)^0,c
 25109  0156F2  6A08               	clrf	(btemp+7)^0,c
 25110  0156F4  0060  F017  FFE6   	movff	btemp+4,postinc1
 25111  0156FA  0060  F01B  FFE6   	movff	btemp+5,postinc1
 25112  015700  0060  F01F  FFE6   	movff	btemp+6,postinc1
 25113  015706  0060  F023  FFE6   	movff	btemp+7,postinc1
 25114  01570C  0E00               	movlw	0
 25115  01570E  6EE6               	movwf	postinc1,c
 25116  015710  EC57  F0C2         	call	___xxtofl	;wreg free
 25117  015714  0060  F007  FFE6   	movff	btemp,postinc1
 25118  01571A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25119  015720  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25120  015726  0060  F013  FFE6   	movff	btemp+3,postinc1
 25121  01572C  ECD7  F09E         	call	___flmul	;wreg free
 25122  015730  0060  F007  FFE6   	movff	btemp,postinc1
 25123  015736  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25124  01573C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25125  015742  0060  F013  FFE6   	movff	btemp+3,postinc1
 25126  015748  ECCA  F0A6         	call	___fldiv	;wreg free
 25127  01574C  D067               	goto	l1815
 25128  01574E                     l9887:
 25129                           
 25130                           ;daq.c: 146:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 25131  01574E  0E00               	movlw	0
 25132  015750  6EE6               	movwf	postinc1,c
 25133  015752  0E00               	movlw	0
 25134  015754  6EE6               	movwf	postinc1,c
 25135  015756  0E7A               	movlw	122
 25136  015758  6EE6               	movwf	postinc1,c
 25137  01575A  0E44               	movlw	68
 25138  01575C  6EE6               	movwf	postinc1,c
 25139  01575E  0E61               	movlw	97
 25140  015760  6EE6               	movwf	postinc1,c
 25141  015762  0E03               	movlw	3
 25142  015764  6EE6               	movwf	postinc1,c
 25143  015766  0E84               	movlw	132
 25144  015768  6EE6               	movwf	postinc1,c
 25145  01576A  0E40               	movlw	64
 25146  01576C  6EE6               	movwf	postinc1,c
 25147                           
 25148                           ;stkvar	_chan @ sp[(-8)+-1]
 25149  01576E  0EF7               	movlw	-9
 25150  015770  50E3               	movf	plusw1,w,c
 25151  015772  6EE6               	movwf	postinc1,c
 25152  015774  ECBE  F0E1         	call	_get_raw_result	;wreg free
 25153  015778  0060  F004  F00B   	movff	btemp,btemp+10
 25154  01577E  0060  F008  F00C   	movff	btemp+1,btemp+11
 25155  015784  500B               	movf	(btemp+10)^0,w,c
 25156  015786  6E05               	movwf	(btemp+4)^0,c
 25157  015788  500C               	movf	(btemp+11)^0,w,c
 25158  01578A  6E06               	movwf	(btemp+5)^0,c
 25159  01578C  6A07               	clrf	(btemp+6)^0,c
 25160  01578E  6A08               	clrf	(btemp+7)^0,c
 25161  015790  0060  F017  FFE6   	movff	btemp+4,postinc1
 25162  015796  0060  F01B  FFE6   	movff	btemp+5,postinc1
 25163  01579C  0060  F01F  FFE6   	movff	btemp+6,postinc1
 25164  0157A2  0060  F023  FFE6   	movff	btemp+7,postinc1
 25165  0157A8  0E00               	movlw	0
 25166  0157AA  6EE6               	movwf	postinc1,c
 25167  0157AC  EC57  F0C2         	call	___xxtofl	;wreg free
 25168  0157B0  0060  F007  FFE6   	movff	btemp,postinc1
 25169  0157B6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25170  0157BC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25171  0157C2  0060  F013  FFE6   	movff	btemp+3,postinc1
 25172  0157C8  ECD7  F09E         	call	___flmul	;wreg free
 25173  0157CC  0060  F007  FFE6   	movff	btemp,postinc1
 25174  0157D2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25175  0157D8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25176  0157DE  0060  F013  FFE6   	movff	btemp+3,postinc1
 25177  0157E4  ECCA  F0A6         	call	___fldiv	;wreg free
 25178  0157E8  D019               	goto	l1815
 25179  0157EA                     l9893:
 25180                           
 25181                           ;daq.c: 149:   return 0.0;
 25182  0157EA  0E00               	movlw	0
 25183  0157EC  6E01               	movwf	btemp^0,c
 25184  0157EE  0E00               	movlw	0
 25185  0157F0  6E02               	movwf	(btemp+1)^0,c
 25186  0157F2  0E00               	movlw	0
 25187  0157F4  6E03               	movwf	(btemp+2)^0,c
 25188  0157F6  0E00               	movlw	0
 25189  0157F8                     L30:
 25190  0157F8  6E04               	movwf	(btemp+3)^0,c
 25191  0157FA  D010               	goto	l1815
 25192  0157FC                     l9901:
 25193                           
 25194                           ;stkvar	_to_what @ sp[(0)+-2]
 25195  0157FC  0EFE               	movlw	-2
 25196  0157FE  50E3               	movf	plusw1,w,c
 25197  015800  6E0B               	movwf	(btemp+10)^0,c
 25198  015802  6A0C               	clrf	(btemp+11)^0,c
 25199                           
 25200                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25201                           ; Switch size 1, requested type "simple"
 25202                           ; Number of cases is 1, Range of values is 0 to 0
 25203                           ; switch strategies available:
 25204                           ; Name         Instructions Cycles
 25205                           ; simple_byte            4     3 (average)
 25206                           ;	Chosen strategy is simple_byte
 25207  015804  500C               	movf	(btemp+11)^0,w,c
 25208  015806  0A00               	xorlw	0	; case 0
 25209  015808  A4D8               	btfss	status,2,c
 25210  01580A  D7EF               	goto	l9893
 25211                           
 25212                           ; Switch size 1, requested type "simple"
 25213                           ; Number of cases is 2, Range of values is 0 to 1
 25214                           ; switch strategies available:
 25215                           ; Name         Instructions Cycles
 25216                           ; simple_byte            7     4 (average)
 25217                           ;	Chosen strategy is simple_byte
 25218  01580C  500B               	movf	(btemp+10)^0,w,c
 25219  01580E  0A00               	xorlw	0	; case 0
 25220  015810  B4D8               	btfsc	status,2,c
 25221  015812  D57E               	goto	l9847
 25222  015814  0A01               	xorlw	1	; case 1
 25223  015816  B4D8               	btfsc	status,2,c
 25224  015818  D72A               	goto	l9879
 25225  01581A  D7E7               	goto	l9893
 25226  01581C                     l1815:
 25227                           
 25228                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 25229  01581C  52E5               	movf	postdec1,f,c
 25230  01581E  52E5               	movf	postdec1,f,c
 25231  015820  0012               	return		;funcret
 25232  015822                     __end_of_conv_raw_result:
 25233                           	opt callstack 0
 25234                           
 25235 ;; *************** function _nanf *****************
 25236 ;; Defined at:
 25237 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
 25238 ;; Parameters:    Size  Location     Type
 25239 ;;  s               2  [STACK] PTR const unsigned char 
 25240 ;;		 -> STR_101(1), STR_63(1), 
 25241 ;; Auto vars:     Size  Location     Type
 25242 ;;  u               4  [STACK] struct .
 25243 ;; Return value:  Size  Location     Type
 25244 ;;                  4  [STACK] float 
 25245 ;; Registers used:
 25246 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 25247 ;; Tracked objects:
 25248 ;;		On entry : 0/39
 25249 ;;		On exit  : 0/0
 25250 ;;		Unchanged: 0/0
 25251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25255 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25256 ;;Total ram usage:        0 bytes
 25257 ;; Hardware stack levels used:    1
 25258 ;; Hardware stack levels required when called:   15
 25259 ;; This function calls:
 25260 ;;		Nothing
 25261 ;; This function is called by:
 25262 ;;		_conv_raw_result
 25263 ;; This function uses a reentrant model
 25264 ;;
 25265                           
 25266                           	psect	text102
 25267  01B47E                     __ptext102:
 25268                           	opt callstack 0
 25269  01B47E                     _nanf:
 25270                           	opt callstack 0
 25271                           
 25272                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25273  01B47E  52E6               	movf	postinc1,f,c
 25274  01B480  52E6               	movf	postinc1,f,c
 25275  01B482  52E6               	movf	postinc1,f,c
 25276  01B484  52E6               	movf	postinc1,f,c
 25277                           
 25278                           ;incstack = 0
 25279 ;; hardware stack exceeded
 25280  01B486  0EFF               	movlw	255
 25281  01B488  6E09               	movwf	(btemp+8)^0,c
 25282  01B48A  0EFF               	movlw	255
 25283  01B48C  6E0A               	movwf	(btemp+9)^0,c
 25284  01B48E  0EFF               	movlw	255
 25285  01B490  6E0B               	movwf	(btemp+10)^0,c
 25286  01B492  0E7F               	movlw	127
 25287  01B494  6E0C               	movwf	(btemp+11)^0,c
 25288                           
 25289                           ;stkvar	_u @ sp[(-4)+0]
 25290  01B496  0EFC               	movlw	-4
 25291  01B498  0060  F027  FFE3   	movff	btemp+8,plusw1
 25292  01B49E  0EFD               	movlw	-3
 25293  01B4A0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25294  01B4A6  0EFE               	movlw	-2
 25295  01B4A8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25296  01B4AE  0EFF               	movlw	-1
 25297  01B4B0  0060  F033  FFE3   	movff	btemp+11,plusw1
 25298                           
 25299                           ;stkvar	_u @ sp[(-4)+0]
 25300  01B4B6  0EFC               	movlw	-4
 25301  01B4B8  006F FF8C  F001    	movff	plusw1,btemp
 25302  01B4BE  0EFD               	movlw	-3
 25303  01B4C0  006F FF8C  F002    	movff	plusw1,btemp+1
 25304  01B4C6  0EFE               	movlw	-2
 25305  01B4C8  006F FF8C  F003    	movff	plusw1,btemp+2
 25306  01B4CE  0EFF               	movlw	-1
 25307  01B4D0  006F FF8C  F004    	movff	plusw1,btemp+3
 25308                           
 25309                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 25310  01B4D6  0EFA               	movlw	250
 25311  01B4D8  26E1               	addwf	fsr1l,f,c
 25312  01B4DA  0EFF               	movlw	255
 25313  01B4DC  22E2               	addwfc	fsr1h,f,c
 25314  01B4DE  0012               	return		;funcret
 25315  01B4E0                     __end_of_nanf:
 25316                           	opt callstack 0
 25317                           
 25318 ;; *************** function _get_raw_result *****************
 25319 ;; Defined at:
 25320 ;;		line 112 in file "daq.c"
 25321 ;; Parameters:    Size  Location     Type
 25322 ;;  index           1  [STACK] const enum E16590
 25323 ;; Auto vars:     Size  Location     Type
 25324 ;;		None
 25325 ;; Return value:  Size  Location     Type
 25326 ;;                  2  [STACK] unsigned short 
 25327 ;; Registers used:
 25328 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
 25329 ;; Tracked objects:
 25330 ;;		On entry : 0/1
 25331 ;;		On exit  : 0/0
 25332 ;;		Unchanged: 0/0
 25333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25338 ;;Total ram usage:        0 bytes
 25339 ;; Hardware stack levels used:    1
 25340 ;; Hardware stack levels required when called:   15
 25341 ;; This function calls:
 25342 ;;		Nothing
 25343 ;; This function is called by:
 25344 ;;		_main
 25345 ;;		_conv_raw_result
 25346 ;; This function uses a reentrant model
 25347 ;;
 25348                           
 25349                           	psect	text103
 25350  01C37C                     __ptext103:
 25351                           	opt callstack 0
 25352  01C37C                     _get_raw_result:
 25353                           	opt callstack 0
 25354                           
 25355                           ;daq.c: 112: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 113: {;daq.c
      +                          : 114:  return R.raw_adc[index];
 25356                           ;stkvar	_index @ sp[(0)+-1]
 25357                           
 25358                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25359                           ;incstack = 0
 25360 ;; hardware stack exceeded
 25361  01C37C  0EFF               	movlw	-1
 25362  01C37E  50E3               	movf	plusw1,w,c
 25363  01C380  0D02               	mullw	2
 25364  01C382  50F3               	movf	243,w,c
 25365  01C384  0FAF               	addlw	low _R
 25366  01C386  6ED9               	movwf	fsr2l,c
 25367  01C388  6ADA               	clrf	fsr2h,c
 25368  01C38A  006F FF78  F001    	movff	postinc2,btemp
 25369  01C390  006F FF74  F002    	movff	postdec2,btemp+1
 25370                           
 25371                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
 25372  01C396  52E5               	movf	postdec1,f,c
 25373  01C398  0012               	return		;funcret
 25374  01C39A                     __end_of_get_raw_result:
 25375                           	opt callstack 0
 25376                           
 25377 ;; *************** function ___xxtofl *****************
 25378 ;; Defined at:
 25379 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
 25380 ;; Parameters:    Size  Location     Type
 25381 ;;  sign            1  [STACK] unsigned char 
 25382 ;;  val             4  [STACK] long 
 25383 ;; Auto vars:     Size  Location     Type
 25384 ;;  arg             4  [STACK] unsigned long 
 25385 ;;  exp             1  [STACK] unsigned char 
 25386 ;; Return value:  Size  Location     Type
 25387 ;;                  4  [STACK] unsigned char 
 25388 ;; Registers used:
 25389 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 25390 ;; Tracked objects:
 25391 ;;		On entry : 0/0
 25392 ;;		On exit  : 0/0
 25393 ;;		Unchanged: 0/0
 25394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25398 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25399 ;;Total ram usage:        0 bytes
 25400 ;; Hardware stack levels used:    1
 25401 ;; Hardware stack levels required when called:   15
 25402 ;; This function calls:
 25403 ;;		Nothing
 25404 ;; This function is called by:
 25405 ;;		_conv_raw_result
 25406 ;;		_init_bsoc
 25407 ;; This function uses a reentrant model
 25408 ;;
 25409                           
 25410                           	psect	text104
 25411  0184AE                     __ptext104:
 25412                           	opt callstack 0
 25413  0184AE                     ___xxtofl:
 25414                           	opt callstack 0
 25415                           
 25416                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25417  0184AE  0E05               	movlw	5
 25418  0184B0  26E1               	addwf	fsr1l,f,c
 25419  0184B2  0E00               	movlw	0
 25420  0184B4  22E2               	addwfc	fsr1h,f,c
 25421                           
 25422                           ;stkvar	_sign @ sp[(-5)+-1]
 25423                           
 25424                           ;incstack = 0
 25425 ;; hardware stack exceeded
 25426  0184B6  0EFA               	movlw	-6
 25427  0184B8  50E3               	movf	plusw1,w,c
 25428  0184BA  B4D8               	btfsc	status,2,c
 25429  0184BC  D01D               	goto	l9795
 25430                           
 25431                           ;stkvar	_val @ sp[(-5)+-5]
 25432  0184BE  0EF9               	movlw	-7
 25433  0184C0  AEE3               	btfss	plusw1,7,c
 25434  0184C2  D01A               	goto	l9795
 25435                           
 25436                           ;stkvar	_val @ sp[(-5)+-5]
 25437  0184C4  0EF6               	movlw	-10
 25438  0184C6  006F FF8C  F009    	movff	plusw1,btemp+8
 25439  0184CC  0EF7               	movlw	-9
 25440  0184CE  006F FF8C  F00A    	movff	plusw1,btemp+9
 25441  0184D4  0EF8               	movlw	-8
 25442  0184D6  006F FF8C  F00B    	movff	plusw1,btemp+10
 25443  0184DC  0EF9               	movlw	-7
 25444  0184DE  006F FF8C  F00C    	movff	plusw1,btemp+11
 25445  0184E4  1E09               	comf	(btemp+8)^0,f,c
 25446  0184E6  1E0A               	comf	(btemp+9)^0,f,c
 25447  0184E8  1E0B               	comf	(btemp+10)^0,f,c
 25448  0184EA  1E0C               	comf	(btemp+11)^0,f,c
 25449  0184EC  2A09               	incf	(btemp+8)^0,f,c
 25450  0184EE  0E00               	movlw	0
 25451  0184F0  220A               	addwfc	(btemp+9)^0,f,c
 25452  0184F2  220B               	addwfc	(btemp+10)^0,f,c
 25453  0184F4  220C               	addwfc	(btemp+11)^0,f,c
 25454  0184F6  D010               	goto	L31
 25455  0184F8                     l9795:
 25456                           
 25457                           ;stkvar	_val @ sp[(-5)+-5]
 25458  0184F8  0EF6               	movlw	-10
 25459  0184FA  006F FF8C  F009    	movff	plusw1,btemp+8
 25460  018500  0EF7               	movlw	-9
 25461  018502  006F FF8C  F00A    	movff	plusw1,btemp+9
 25462  018508  0EF8               	movlw	-8
 25463  01850A  006F FF8C  F00B    	movff	plusw1,btemp+10
 25464  018510  0EF9               	movlw	-7
 25465  018512  006F FF8C  F00C    	movff	plusw1,btemp+11
 25466  018518                     L31:
 25467                           
 25468                           ;stkvar	_arg @ sp[(-5)+0]
 25469  018518  0EFB               	movlw	-5
 25470  01851A  0060  F027  FFE3   	movff	btemp+8,plusw1
 25471  018520  0EFC               	movlw	-4
 25472  018522  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25473  018528  0EFD               	movlw	-3
 25474  01852A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25475  018530  0EFE               	movlw	-2
 25476  018532  0060  F033  FFE3   	movff	btemp+11,plusw1
 25477                           
 25478                           ;stkvar	_val @ sp[(-5)+-5]
 25479  018538  0EF6               	movlw	-10
 25480  01853A  50E3               	movf	plusw1,w,c
 25481  01853C  E113               	bnz	l9803
 25482  01853E  0EF7               	movlw	-9
 25483  018540  50E3               	movf	plusw1,w,c
 25484  018542  E110               	bnz	l9803
 25485  018544  0EF8               	movlw	-8
 25486  018546  50E3               	movf	plusw1,w,c
 25487  018548  E10D               	bnz	l9803
 25488  01854A  0EF9               	movlw	-7
 25489  01854C  50E3               	movf	plusw1,w,c
 25490  01854E  A4D8               	btfss	status,2,c
 25491  018550  D009               	goto	l9803
 25492  018552  0E00               	movlw	0
 25493  018554  6E01               	movwf	btemp^0,c
 25494  018556  0E00               	movlw	0
 25495  018558  6E02               	movwf	(btemp+1)^0,c
 25496  01855A  0E00               	movlw	0
 25497  01855C  6E03               	movwf	(btemp+2)^0,c
 25498  01855E  0E00               	movlw	0
 25499  018560  6E04               	movwf	(btemp+3)^0,c
 25500  018562  D0A2               	goto	l3128
 25501  018564                     l9803:
 25502  018564  0E96               	movlw	150
 25503  018566  6E0C               	movwf	(btemp+11)^0,c
 25504                           
 25505                           ;stkvar	_exp @ sp[(-5)+4]
 25506  018568  0EFF               	movlw	-1
 25507  01856A  0060  F033  FFE3   	movff	btemp+11,plusw1
 25508  018570  D00B               	goto	l9807
 25509  018572                     l9805:
 25510                           
 25511                           ;stkvar	_exp @ sp[(-5)+4]
 25512  018572  0EFF               	movlw	-1
 25513  018574  2AE3               	incf	plusw1,f,c
 25514                           
 25515                           ;stkvar	_arg @ sp[(-5)+0]
 25516  018576  90D8               	bcf	status,0,c
 25517  018578  0EFE               	movlw	-2
 25518  01857A  32E3               	rrcf	plusw1,f,c
 25519  01857C  0EFD               	movlw	-3
 25520  01857E  32E3               	rrcf	plusw1,f,c
 25521  018580  0EFC               	movlw	-4
 25522  018582  32E3               	rrcf	plusw1,f,c
 25523  018584  0EFB               	movlw	-5
 25524  018586  32E3               	rrcf	plusw1,f,c
 25525  018588                     l9807:
 25526                           
 25527                           ;stkvar	_arg @ sp[(-5)+0]
 25528  018588  50E1               	movf	fsr1l,w,c
 25529  01858A  0FFB               	addlw	-5
 25530  01858C  6ED9               	movwf	fsr2l,c
 25531  01858E  50E2               	movf	fsr1h,w,c
 25532  018590  6EDA               	movwf	fsr2h,c
 25533  018592  0EFF               	movlw	255
 25534  018594  22DA               	addwfc	fsr2h,f,c
 25535  018596  52DE               	movf	postinc2,f,c
 25536  018598  52DE               	movf	postinc2,f,c
 25537  01859A  52DE               	movf	postinc2,f,c
 25538  01859C  0EFE               	movlw	254
 25539  01859E  14DD               	andwf	postdec2,w,c
 25540  0185A0  B4D8               	btfsc	status,2,c
 25541  0185A2  D018               	goto	l9815
 25542  0185A4  D7E6               	goto	l9805
 25543  0185A6                     l9809:
 25544                           
 25545                           ;stkvar	_exp @ sp[(-5)+4]
 25546  0185A6  0EFF               	movlw	-1
 25547  0185A8  2AE3               	incf	plusw1,f,c
 25548                           
 25549                           ;stkvar	_arg @ sp[(-5)+0]
 25550  0185AA  50E1               	movf	fsr1l,w,c
 25551  0185AC  0FFB               	addlw	-5
 25552  0185AE  6ED9               	movwf	fsr2l,c
 25553  0185B0  50E2               	movf	fsr1h,w,c
 25554  0185B2  6EDA               	movwf	fsr2h,c
 25555  0185B4  0EFF               	movlw	255
 25556  0185B6  22DA               	addwfc	fsr2h,f,c
 25557  0185B8  2ADE               	incf	postinc2,f,c
 25558  0185BA  0E00               	movlw	0
 25559  0185BC  22DE               	addwfc	postinc2,f,c
 25560  0185BE  22DE               	addwfc	postinc2,f,c
 25561  0185C0  22DE               	addwfc	postinc2,f,c
 25562                           
 25563                           ;stkvar	_arg @ sp[(-5)+0]
 25564  0185C2  90D8               	bcf	status,0,c
 25565  0185C4  0EFE               	movlw	-2
 25566  0185C6  32E3               	rrcf	plusw1,f,c
 25567  0185C8  0EFD               	movlw	-3
 25568  0185CA  32E3               	rrcf	plusw1,f,c
 25569  0185CC  0EFC               	movlw	-4
 25570  0185CE  32E3               	rrcf	plusw1,f,c
 25571  0185D0  0EFB               	movlw	-5
 25572  0185D2  32E3               	rrcf	plusw1,f,c
 25573  0185D4                     l9815:
 25574                           
 25575                           ;stkvar	_arg @ sp[(-5)+0]
 25576  0185D4  50E1               	movf	fsr1l,w,c
 25577  0185D6  0FFB               	addlw	-5
 25578  0185D8  6ED9               	movwf	fsr2l,c
 25579  0185DA  50E2               	movf	fsr1h,w,c
 25580  0185DC  6EDA               	movwf	fsr2h,c
 25581  0185DE  0EFF               	movlw	255
 25582  0185E0  22DA               	addwfc	fsr2h,f,c
 25583  0185E2  52DE               	movf	postinc2,f,c
 25584  0185E4  52DE               	movf	postinc2,f,c
 25585  0185E6  52DE               	movf	postinc2,f,c
 25586  0185E8  0EFF               	movlw	255
 25587  0185EA  14DD               	andwf	postdec2,w,c
 25588  0185EC  B4D8               	btfsc	status,2,c
 25589  0185EE  D00C               	goto	l9819
 25590  0185F0  D7DA               	goto	l9809
 25591  0185F2                     l9817:
 25592                           
 25593                           ;stkvar	_exp @ sp[(-5)+4]
 25594  0185F2  0EFF               	movlw	-1
 25595  0185F4  06E3               	decf	plusw1,f,c
 25596                           
 25597                           ;stkvar	_arg @ sp[(-5)+0]
 25598  0185F6  90D8               	bcf	status,0,c
 25599  0185F8  0EFB               	movlw	-5
 25600  0185FA  36E3               	rlcf	plusw1,f,c
 25601  0185FC  0EFC               	movlw	-4
 25602  0185FE  36E3               	rlcf	plusw1,f,c
 25603  018600  0EFD               	movlw	-3
 25604  018602  36E3               	rlcf	plusw1,f,c
 25605  018604  0EFE               	movlw	-2
 25606  018606  36E3               	rlcf	plusw1,f,c
 25607  018608                     l9819:
 25608                           
 25609                           ;stkvar	_arg @ sp[(-5)+0]
 25610  018608  0EFD               	movlw	-3
 25611  01860A  BEE3               	btfsc	plusw1,7,c
 25612  01860C  D007               	goto	u9120
 25613                           
 25614                           ;stkvar	_exp @ sp[(-5)+4]
 25615  01860E  0EFF               	movlw	-1
 25616  018610  006F FF8C  F001    	movff	plusw1,btemp
 25617  018616  0E02               	movlw	2
 25618  018618  6001               	cpfslt	btemp^0,c
 25619  01861A  D7EB               	goto	l9817
 25620  01861C                     u9120:
 25621                           
 25622                           ;stkvar	_exp @ sp[(-5)+4]
 25623  01861C  0EFF               	movlw	-1
 25624  01861E  B0E3               	btfsc	plusw1,0,c
 25625  018620  D002               	goto	l9827
 25626                           
 25627                           ;stkvar	_arg @ sp[(-5)+0]
 25628  018622  0EFD               	movlw	-3
 25629  018624  9EE3               	bcf	plusw1,7,c
 25630  018626                     l9827:
 25631                           
 25632                           ;stkvar	_exp @ sp[(-5)+4]
 25633  018626  50E1               	movf	fsr1l,w,c
 25634  018628  0FFF               	addlw	-1
 25635  01862A  6ED9               	movwf	fsr2l,c
 25636  01862C  50E2               	movf	fsr1h,w,c
 25637  01862E  6EDA               	movwf	fsr2h,c
 25638  018630  0EFF               	movlw	255
 25639  018632  22DA               	addwfc	fsr2h,f,c
 25640  018634  90D8               	bcf	status,0,c
 25641  018636  32DF               	rrcf	indf2,f,c
 25642                           
 25643                           ;stkvar	_exp @ sp[(-5)+4]
 25644  018638  0EFF               	movlw	-1
 25645  01863A  006F FF8C  F00C    	movff	plusw1,btemp+11
 25646  018640  0060  F030  F005   	movff	btemp+11,btemp+4
 25647  018646  6A06               	clrf	(btemp+5)^0,c
 25648  018648  6A07               	clrf	(btemp+6)^0,c
 25649  01864A  6A08               	clrf	(btemp+7)^0,c
 25650  01864C  0060  F014  F008   	movff	btemp+4,btemp+7
 25651  018652  6A07               	clrf	(btemp+6)^0,c
 25652  018654  6A06               	clrf	(btemp+5)^0,c
 25653  018656  6A05               	clrf	(btemp+4)^0,c
 25654                           
 25655                           ;stkvar	_arg @ sp[(-5)+0]
 25656  018658  50E1               	movf	fsr1l,w,c
 25657  01865A  0FFB               	addlw	-5
 25658  01865C  6ED9               	movwf	fsr2l,c
 25659  01865E  50E2               	movf	fsr1h,w,c
 25660  018660  6EDA               	movwf	fsr2h,c
 25661  018662  0EFF               	movlw	255
 25662  018664  22DA               	addwfc	fsr2h,f,c
 25663  018666  5005               	movf	(btemp+4)^0,w,c
 25664  018668  12DE               	iorwf	postinc2,f,c
 25665  01866A  5006               	movf	(btemp+5)^0,w,c
 25666  01866C  12DE               	iorwf	postinc2,f,c
 25667  01866E  5007               	movf	(btemp+6)^0,w,c
 25668  018670  12DE               	iorwf	postinc2,f,c
 25669  018672  5008               	movf	(btemp+7)^0,w,c
 25670  018674  12DE               	iorwf	postinc2,f,c
 25671                           
 25672                           ;stkvar	_sign @ sp[(-5)+-1]
 25673  018676  0EFA               	movlw	-6
 25674  018678  50E3               	movf	plusw1,w,c
 25675  01867A  B4D8               	btfsc	status,2,c
 25676  01867C  D005               	goto	l9837
 25677                           
 25678                           ;stkvar	_val @ sp[(-5)+-5]
 25679  01867E  0EF9               	movlw	-7
 25680  018680  AEE3               	btfss	plusw1,7,c
 25681  018682  D002               	goto	l9837
 25682                           
 25683                           ;stkvar	_arg @ sp[(-5)+0]
 25684  018684  0EFE               	movlw	-2
 25685  018686  8EE3               	bsf	plusw1,7,c
 25686  018688                     l9837:
 25687                           
 25688                           ;stkvar	_arg @ sp[(-5)+0]
 25689  018688  0EFB               	movlw	-5
 25690  01868A  006F FF8C  F001    	movff	plusw1,btemp
 25691  018690  0EFC               	movlw	-4
 25692  018692  006F FF8C  F002    	movff	plusw1,btemp+1
 25693  018698  0EFD               	movlw	-3
 25694  01869A  006F FF8C  F003    	movff	plusw1,btemp+2
 25695  0186A0  0EFE               	movlw	-2
 25696  0186A2  006F FF8C  F004    	movff	plusw1,btemp+3
 25697  0186A8                     l3128:
 25698                           
 25699                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
 25700  0186A8  0EF6               	movlw	246
 25701  0186AA  26E1               	addwf	fsr1l,f,c
 25702  0186AC  0EFF               	movlw	255
 25703  0186AE  22E2               	addwfc	fsr1h,f,c
 25704  0186B0  0012               	return		;funcret
 25705  0186B2                     __end_of___xxtofl:
 25706                           	opt callstack 0
 25707                           
 25708 ;; *************** function ___fldiv *****************
 25709 ;; Defined at:
 25710 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 25711 ;; Parameters:    Size  Location     Type
 25712 ;;  b               4  [STACK] unsigned char 
 25713 ;;  a               4  [STACK] unsigned char 
 25714 ;; Auto vars:     Size  Location     Type
 25715 ;;  grs             4  [STACK] unsigned long 
 25716 ;;  rem             4  [STACK] unsigned long 
 25717 ;;  new_exp         2  [STACK] short 
 25718 ;;  aexp            1  [STACK] unsigned char 
 25719 ;;  bexp            1  [STACK] unsigned char 
 25720 ;;  sign            1  [STACK] unsigned char 
 25721 ;; Return value:  Size  Location     Type
 25722 ;;                  4  [STACK] unsigned char 
 25723 ;; Registers used:
 25724 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 25725 ;; Tracked objects:
 25726 ;;		On entry : 0/0
 25727 ;;		On exit  : 0/0
 25728 ;;		Unchanged: 0/0
 25729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25733 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25734 ;;Total ram usage:        0 bytes
 25735 ;; Hardware stack levels used:    1
 25736 ;; Hardware stack levels required when called:   15
 25737 ;; This function calls:
 25738 ;;		Nothing
 25739 ;; This function is called by:
 25740 ;;		_conv_raw_result
 25741 ;;		_convert_dac_raw
 25742 ;;		_calc_bsoc
 25743 ;;		_init_bsoc
 25744 ;;		_esr_check
 25745 ;;		_efgtoa
 25746 ;; This function uses a reentrant model
 25747 ;;
 25748                           
 25749                           	psect	text105
 25750  014D94                     __ptext105:
 25751                           	opt callstack 0
 25752  014D94                     ___fldiv:
 25753                           	opt callstack 0
 25754                           
 25755                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 25756  014D94  0E0D               	movlw	13
 25757  014D96  26E1               	addwf	fsr1l,f,c
 25758  014D98  0E00               	movlw	0
 25759  014D9A  22E2               	addwfc	fsr1h,f,c
 25760                           
 25761                           ;stkvar	_b @ sp[(-13)+-4]
 25762                           
 25763                           ;incstack = 0
 25764 ;; hardware stack exceeded
 25765  014D9C  0EF2               	movlw	242
 25766  014D9E  24E1               	addwf	fsr1l,w,c
 25767  014DA0  6ED9               	movwf	fsr2l,c
 25768  014DA2  0EFF               	movlw	255
 25769  014DA4  20E2               	addwfc	fsr1h,w,c
 25770  014DA6  6EDA               	movwf	fsr2h,c
 25771  014DA8  50DF               	movf	indf2,w,c
 25772  014DAA  6E0C               	movwf	(btemp+11)^0,c
 25773  014DAC  0E80               	movlw	128
 25774  014DAE  160C               	andwf	(btemp+11)^0,f,c
 25775                           
 25776                           ;stkvar	_sign @ sp[(-13)+12]
 25777  014DB0  0EFF               	movlw	-1
 25778  014DB2  0060  F033  FFE3   	movff	btemp+11,plusw1
 25779                           
 25780                           ;stkvar	_b @ sp[(-13)+-4]
 25781  014DB8  0EF2               	movlw	242
 25782  014DBA  24E1               	addwf	fsr1l,w,c
 25783  014DBC  6ED9               	movwf	fsr2l,c
 25784  014DBE  0EFF               	movlw	255
 25785  014DC0  20E2               	addwfc	fsr1h,w,c
 25786  014DC2  6EDA               	movwf	fsr2h,c
 25787  014DC4  50DF               	movf	indf2,w,c
 25788  014DC6  6E0C               	movwf	(btemp+11)^0,c
 25789  014DC8  90D8               	bcf	status,0,c
 25790  014DCA  340C               	rlcf	(btemp+11)^0,w,c
 25791  014DCC  6E0B               	movwf	(btemp+10)^0,c
 25792                           
 25793                           ;stkvar	_bexp @ sp[(-13)+11]
 25794  014DCE  0EFE               	movlw	-2
 25795  014DD0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25796                           
 25797                           ;stkvar	_b @ sp[(-13)+-4]
 25798  014DD6  0EF1               	movlw	241
 25799  014DD8  24E1               	addwf	fsr1l,w,c
 25800  014DDA  6ED9               	movwf	fsr2l,c
 25801  014DDC  0EFF               	movlw	255
 25802  014DDE  20E2               	addwfc	fsr1h,w,c
 25803  014DE0  6EDA               	movwf	fsr2h,c
 25804  014DE2  AEDF               	btfss	indf2,7,c
 25805  014DE4  D002               	goto	l8367
 25806                           
 25807                           ;stkvar	_bexp @ sp[(-13)+11]
 25808  014DE6  0EFE               	movlw	-2
 25809  014DE8  80E3               	bsf	plusw1,0,c
 25810  014DEA                     l8367:
 25811                           
 25812                           ;stkvar	_bexp @ sp[(-13)+11]
 25813  014DEA  0EFE               	movlw	-2
 25814  014DEC  50E3               	movf	plusw1,w,c
 25815  014DEE  B4D8               	btfsc	status,2,c
 25816  014DF0  D027               	goto	l8377
 25817                           
 25818                           ;stkvar	_bexp @ sp[(-13)+11]
 25819  014DF2  0EFE               	movlw	-2
 25820  014DF4  28E3               	incf	plusw1,w,c
 25821  014DF6  A4D8               	btfss	status,2,c
 25822  014DF8  D018               	goto	l8373
 25823  014DFA  0E00               	movlw	0
 25824  014DFC  6E09               	movwf	(btemp+8)^0,c
 25825  014DFE  0E00               	movlw	0
 25826  014E00  6E0A               	movwf	(btemp+9)^0,c
 25827  014E02  0E00               	movlw	0
 25828  014E04  6E0B               	movwf	(btemp+10)^0,c
 25829  014E06  0E00               	movlw	0
 25830  014E08  6E0C               	movwf	(btemp+11)^0,c
 25831                           
 25832                           ;stkvar	_b @ sp[(-13)+-4]
 25833  014E0A  0EEF               	movlw	-17
 25834  014E0C  0060  F027  FFE3   	movff	btemp+8,plusw1
 25835  014E12  0EF0               	movlw	-16
 25836  014E14  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25837  014E1A  0EF1               	movlw	-15
 25838  014E1C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25839  014E22  0EF2               	movlw	-14
 25840  014E24  0060  F033  FFE3   	movff	btemp+11,plusw1
 25841  014E2A                     l8373:
 25842                           
 25843                           ;stkvar	_b @ sp[(-13)+-4]
 25844  014E2A  0EF1               	movlw	-15
 25845  014E2C  8EE3               	bsf	plusw1,7,c
 25846                           
 25847                           ;stkvar	_b @ sp[(-13)+-4]
 25848  014E2E  0EF2               	movlw	242
 25849  014E30  24E1               	addwf	fsr1l,w,c
 25850  014E32  6ED9               	movwf	fsr2l,c
 25851  014E34  0EFF               	movlw	255
 25852  014E36  20E2               	addwfc	fsr1h,w,c
 25853  014E38  6EDA               	movwf	fsr2h,c
 25854  014E3A  0E00               	movlw	0
 25855  014E3C  6EDF               	movwf	indf2,c
 25856  014E3E  D018               	goto	l8379
 25857  014E40                     l8377:
 25858  014E40  0E00               	movlw	0
 25859  014E42  6E09               	movwf	(btemp+8)^0,c
 25860  014E44  0E00               	movlw	0
 25861  014E46  6E0A               	movwf	(btemp+9)^0,c
 25862  014E48  0E00               	movlw	0
 25863  014E4A  6E0B               	movwf	(btemp+10)^0,c
 25864  014E4C  0E00               	movlw	0
 25865  014E4E  6E0C               	movwf	(btemp+11)^0,c
 25866                           
 25867                           ;stkvar	_b @ sp[(-13)+-4]
 25868  014E50  0EEF               	movlw	-17
 25869  014E52  0060  F027  FFE3   	movff	btemp+8,plusw1
 25870  014E58  0EF0               	movlw	-16
 25871  014E5A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25872  014E60  0EF1               	movlw	-15
 25873  014E62  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25874  014E68  0EF2               	movlw	-14
 25875  014E6A  0060  F033  FFE3   	movff	btemp+11,plusw1
 25876  014E70                     l8379:
 25877                           
 25878                           ;stkvar	_a @ sp[(-13)+-8]
 25879  014E70  0EEE               	movlw	238
 25880  014E72  24E1               	addwf	fsr1l,w,c
 25881  014E74  6ED9               	movwf	fsr2l,c
 25882  014E76  0EFF               	movlw	255
 25883  014E78  20E2               	addwfc	fsr1h,w,c
 25884  014E7A  6EDA               	movwf	fsr2h,c
 25885  014E7C  50DF               	movf	indf2,w,c
 25886  014E7E  6E0C               	movwf	(btemp+11)^0,c
 25887  014E80  0E80               	movlw	128
 25888  014E82  160C               	andwf	(btemp+11)^0,f,c
 25889                           
 25890                           ;stkvar	_sign @ sp[(-13)+12]
 25891  014E84  50E1               	movf	fsr1l,w,c
 25892  014E86  0FFF               	addlw	-1
 25893  014E88  6ED9               	movwf	fsr2l,c
 25894  014E8A  50E2               	movf	fsr1h,w,c
 25895  014E8C  6EDA               	movwf	fsr2h,c
 25896  014E8E  0EFF               	movlw	255
 25897  014E90  22DA               	addwfc	fsr2h,f,c
 25898  014E92  500C               	movf	(btemp+11)^0,w,c
 25899  014E94  1ADF               	xorwf	indf2,f,c
 25900                           
 25901                           ;stkvar	_a @ sp[(-13)+-8]
 25902  014E96  0EEE               	movlw	238
 25903  014E98  24E1               	addwf	fsr1l,w,c
 25904  014E9A  6ED9               	movwf	fsr2l,c
 25905  014E9C  0EFF               	movlw	255
 25906  014E9E  20E2               	addwfc	fsr1h,w,c
 25907  014EA0  6EDA               	movwf	fsr2h,c
 25908  014EA2  50DF               	movf	indf2,w,c
 25909  014EA4  6E0C               	movwf	(btemp+11)^0,c
 25910  014EA6  90D8               	bcf	status,0,c
 25911  014EA8  340C               	rlcf	(btemp+11)^0,w,c
 25912  014EAA  6E0B               	movwf	(btemp+10)^0,c
 25913                           
 25914                           ;stkvar	_aexp @ sp[(-13)+10]
 25915  014EAC  0EFD               	movlw	-3
 25916  014EAE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25917                           
 25918                           ;stkvar	_a @ sp[(-13)+-8]
 25919  014EB4  0EED               	movlw	237
 25920  014EB6  24E1               	addwf	fsr1l,w,c
 25921  014EB8  6ED9               	movwf	fsr2l,c
 25922  014EBA  0EFF               	movlw	255
 25923  014EBC  20E2               	addwfc	fsr1h,w,c
 25924  014EBE  6EDA               	movwf	fsr2h,c
 25925  014EC0  AEDF               	btfss	indf2,7,c
 25926  014EC2  D002               	goto	l8387
 25927                           
 25928                           ;stkvar	_aexp @ sp[(-13)+10]
 25929  014EC4  0EFD               	movlw	-3
 25930  014EC6  80E3               	bsf	plusw1,0,c
 25931  014EC8                     l8387:
 25932                           
 25933                           ;stkvar	_aexp @ sp[(-13)+10]
 25934  014EC8  0EFD               	movlw	-3
 25935  014ECA  50E3               	movf	plusw1,w,c
 25936  014ECC  B4D8               	btfsc	status,2,c
 25937  014ECE  D027               	goto	l8397
 25938                           
 25939                           ;stkvar	_aexp @ sp[(-13)+10]
 25940  014ED0  0EFD               	movlw	-3
 25941  014ED2  28E3               	incf	plusw1,w,c
 25942  014ED4  A4D8               	btfss	status,2,c
 25943  014ED6  D018               	goto	l8393
 25944  014ED8  0E00               	movlw	0
 25945  014EDA  6E09               	movwf	(btemp+8)^0,c
 25946  014EDC  0E00               	movlw	0
 25947  014EDE  6E0A               	movwf	(btemp+9)^0,c
 25948  014EE0  0E00               	movlw	0
 25949  014EE2  6E0B               	movwf	(btemp+10)^0,c
 25950  014EE4  0E00               	movlw	0
 25951  014EE6  6E0C               	movwf	(btemp+11)^0,c
 25952                           
 25953                           ;stkvar	_a @ sp[(-13)+-8]
 25954  014EE8  0EEB               	movlw	-21
 25955  014EEA  0060  F027  FFE3   	movff	btemp+8,plusw1
 25956  014EF0  0EEC               	movlw	-20
 25957  014EF2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25958  014EF8  0EED               	movlw	-19
 25959  014EFA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25960  014F00  0EEE               	movlw	-18
 25961  014F02  0060  F033  FFE3   	movff	btemp+11,plusw1
 25962  014F08                     l8393:
 25963                           
 25964                           ;stkvar	_a @ sp[(-13)+-8]
 25965  014F08  0EED               	movlw	-19
 25966  014F0A  8EE3               	bsf	plusw1,7,c
 25967                           
 25968                           ;stkvar	_a @ sp[(-13)+-8]
 25969  014F0C  0EEE               	movlw	238
 25970  014F0E  24E1               	addwf	fsr1l,w,c
 25971  014F10  6ED9               	movwf	fsr2l,c
 25972  014F12  0EFF               	movlw	255
 25973  014F14  20E2               	addwfc	fsr1h,w,c
 25974  014F16  6EDA               	movwf	fsr2h,c
 25975  014F18  0E00               	movlw	0
 25976  014F1A  6EDF               	movwf	indf2,c
 25977  014F1C  D018               	goto	l8399
 25978  014F1E                     l8397:
 25979  014F1E  0E00               	movlw	0
 25980  014F20  6E09               	movwf	(btemp+8)^0,c
 25981  014F22  0E00               	movlw	0
 25982  014F24  6E0A               	movwf	(btemp+9)^0,c
 25983  014F26  0E00               	movlw	0
 25984  014F28  6E0B               	movwf	(btemp+10)^0,c
 25985  014F2A  0E00               	movlw	0
 25986  014F2C  6E0C               	movwf	(btemp+11)^0,c
 25987                           
 25988                           ;stkvar	_a @ sp[(-13)+-8]
 25989  014F2E  0EEB               	movlw	-21
 25990  014F30  0060  F027  FFE3   	movff	btemp+8,plusw1
 25991  014F36  0EEC               	movlw	-20
 25992  014F38  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25993  014F3E  0EED               	movlw	-19
 25994  014F40  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25995  014F46  0EEE               	movlw	-18
 25996  014F48  0060  F033  FFE3   	movff	btemp+11,plusw1
 25997  014F4E                     l8399:
 25998                           
 25999                           ;stkvar	_a @ sp[(-13)+-8]
 26000  014F4E  0EEB               	movlw	-21
 26001  014F50  50E3               	movf	plusw1,w,c
 26002  014F52  E139               	bnz	l8411
 26003  014F54  0EEC               	movlw	-20
 26004  014F56  50E3               	movf	plusw1,w,c
 26005  014F58  E136               	bnz	l8411
 26006  014F5A  0EED               	movlw	-19
 26007  014F5C  50E3               	movf	plusw1,w,c
 26008  014F5E  E133               	bnz	l8411
 26009  014F60  0EEE               	movlw	-18
 26010  014F62  50E3               	movf	plusw1,w,c
 26011  014F64  A4D8               	btfss	status,2,c
 26012  014F66  D02F               	goto	l8411
 26013                           
 26014                           ;stkvar	_b @ sp[(-13)+-4]
 26015  014F68  0EEF               	movlw	-17
 26016  014F6A  6AE3               	clrf	plusw1,c
 26017  014F6C  0EF0               	movlw	-16
 26018  014F6E  6AE3               	clrf	plusw1,c
 26019  014F70  0EF1               	movlw	-15
 26020  014F72  6AE3               	clrf	plusw1,c
 26021  014F74  0EF2               	movlw	-14
 26022  014F76  6AE3               	clrf	plusw1,c
 26023                           
 26024                           ;stkvar	_b @ sp[(-13)+-4]
 26025  014F78  0EF1               	movlw	241
 26026  014F7A  24E1               	addwf	fsr1l,w,c
 26027  014F7C  6ED9               	movwf	fsr2l,c
 26028  014F7E  0EFF               	movlw	255
 26029  014F80  20E2               	addwfc	fsr1h,w,c
 26030  014F82  6EDA               	movwf	fsr2h,c
 26031  014F84  0E80               	movlw	128
 26032  014F86  12DE               	iorwf	postinc2,f,c
 26033  014F88  0E7F               	movlw	127
 26034  014F8A  12DD               	iorwf	postdec2,f,c
 26035  014F8C                     l8405:
 26036                           
 26037                           ;stkvar	_sign @ sp[(-13)+12]
 26038  014F8C  0EFF               	movlw	-1
 26039  014F8E  006F FF8C  F00C    	movff	plusw1,btemp+11
 26040                           
 26041                           ;stkvar	_b @ sp[(-13)+-4]
 26042  014F94  0EF2               	movlw	242
 26043  014F96  24E1               	addwf	fsr1l,w,c
 26044  014F98  6ED9               	movwf	fsr2l,c
 26045  014F9A  0EFF               	movlw	255
 26046  014F9C  20E2               	addwfc	fsr1h,w,c
 26047  014F9E  6EDA               	movwf	fsr2h,c
 26048  014FA0  500C               	movf	(btemp+11)^0,w,c
 26049  014FA2  12DF               	iorwf	indf2,f,c
 26050                           
 26051                           ;stkvar	_b @ sp[(-13)+-4]
 26052  014FA4  0EEF               	movlw	-17
 26053  014FA6  006F FF8C  F001    	movff	plusw1,btemp
 26054  014FAC  0EF0               	movlw	-16
 26055  014FAE  006F FF8C  F002    	movff	plusw1,btemp+1
 26056  014FB4  0EF1               	movlw	-15
 26057  014FB6  006F FF8C  F003    	movff	plusw1,btemp+2
 26058  014FBC  0EF2               	movlw	-14
 26059  014FBE  006F FF8C  F004    	movff	plusw1,btemp+3
 26060  014FC4  D19F               	goto	l3052
 26061  014FC6                     l8411:
 26062                           
 26063                           ;stkvar	_bexp @ sp[(-13)+11]
 26064  014FC6  0EFE               	movlw	-2
 26065  014FC8  50E3               	movf	plusw1,w,c
 26066  014FCA  A4D8               	btfss	status,2,c
 26067  014FCC  D009               	goto	l8419
 26068  014FCE  0E00               	movlw	0
 26069  014FD0  6E01               	movwf	btemp^0,c
 26070  014FD2  0E00               	movlw	0
 26071  014FD4  6E02               	movwf	(btemp+1)^0,c
 26072  014FD6  0E00               	movlw	0
 26073  014FD8  6E03               	movwf	(btemp+2)^0,c
 26074  014FDA  0E00               	movlw	0
 26075  014FDC  6E04               	movwf	(btemp+3)^0,c
 26076  014FDE  D192               	goto	l3052
 26077  014FE0                     l8419:
 26078                           
 26079                           ;stkvar	_bexp @ sp[(-13)+11]
 26080  014FE0  0EFE               	movlw	-2
 26081  014FE2  50E3               	movf	plusw1,w,c
 26082  014FE4  6E0B               	movwf	(btemp+10)^0,c
 26083  014FE6  6A0C               	clrf	(btemp+11)^0,c
 26084                           
 26085                           ;stkvar	_aexp @ sp[(-13)+10]
 26086  014FE8  0EFD               	movlw	-3
 26087  014FEA  50E3               	movf	plusw1,w,c
 26088  014FEC  5E0B               	subwf	(btemp+10)^0,f,c
 26089  014FEE  0E00               	movlw	0
 26090  014FF0  5A0C               	subwfb	(btemp+11)^0,f,c
 26091  014FF2  0E7F               	movlw	127
 26092  014FF4  260B               	addwf	(btemp+10)^0,f,c
 26093  014FF6  0E00               	movlw	0
 26094  014FF8  220C               	addwfc	(btemp+11)^0,f,c
 26095                           
 26096                           ;stkvar	_new_exp @ sp[(-13)+8]
 26097  014FFA  0EFB               	movlw	-5
 26098  014FFC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26099  015002  0EFC               	movlw	-4
 26100  015004  0060  F033  FFE3   	movff	btemp+11,plusw1
 26101                           
 26102                           ;stkvar	_b @ sp[(-13)+-4]
 26103  01500A  0EEF               	movlw	-17
 26104  01500C  006F FF8C  F009    	movff	plusw1,btemp+8
 26105  015012  0EF0               	movlw	-16
 26106  015014  006F FF8C  F00A    	movff	plusw1,btemp+9
 26107  01501A  0EF1               	movlw	-15
 26108  01501C  006F FF8C  F00B    	movff	plusw1,btemp+10
 26109  015022  0EF2               	movlw	-14
 26110  015024  006F FF8C  F00C    	movff	plusw1,btemp+11
 26111                           
 26112                           ;stkvar	_rem @ sp[(-13)+4]
 26113  01502A  0EF7               	movlw	-9
 26114  01502C  0060  F027  FFE3   	movff	btemp+8,plusw1
 26115  015032  0EF8               	movlw	-8
 26116  015034  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26117  01503A  0EF9               	movlw	-7
 26118  01503C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26119  015042  0EFA               	movlw	-6
 26120  015044  0060  F033  FFE3   	movff	btemp+11,plusw1
 26121                           
 26122                           ;stkvar	_b @ sp[(-13)+-4]
 26123  01504A  0EEF               	movlw	-17
 26124  01504C  6AE3               	clrf	plusw1,c
 26125  01504E  0EF0               	movlw	-16
 26126  015050  6AE3               	clrf	plusw1,c
 26127  015052  0EF1               	movlw	-15
 26128  015054  6AE3               	clrf	plusw1,c
 26129  015056  0EF2               	movlw	-14
 26130  015058  6AE3               	clrf	plusw1,c
 26131                           
 26132                           ;stkvar	_grs @ sp[(-13)+0]
 26133  01505A  0EF3               	movlw	-13
 26134  01505C  6AE3               	clrf	plusw1,c
 26135  01505E  0EF4               	movlw	-12
 26136  015060  6AE3               	clrf	plusw1,c
 26137  015062  0EF5               	movlw	-11
 26138  015064  6AE3               	clrf	plusw1,c
 26139  015066  0EF6               	movlw	-10
 26140  015068  6AE3               	clrf	plusw1,c
 26141                           
 26142                           ;stkvar	_aexp @ sp[(-13)+10]
 26143  01506A  0EFD               	movlw	-3
 26144  01506C  6AE3               	clrf	plusw1,c
 26145  01506E  D050               	goto	l8447
 26146  015070                     l8429:
 26147                           
 26148                           ;stkvar	_aexp @ sp[(-13)+10]
 26149  015070  0EFD               	movlw	-3
 26150  015072  50E3               	movf	plusw1,w,c
 26151  015074  B4D8               	btfsc	status,2,c
 26152  015076  D020               	goto	l8439
 26153                           
 26154                           ;stkvar	_rem @ sp[(-13)+4]
 26155  015078  90D8               	bcf	status,0,c
 26156  01507A  0EF7               	movlw	-9
 26157  01507C  36E3               	rlcf	plusw1,f,c
 26158  01507E  0EF8               	movlw	-8
 26159  015080  36E3               	rlcf	plusw1,f,c
 26160  015082  0EF9               	movlw	-7
 26161  015084  36E3               	rlcf	plusw1,f,c
 26162  015086  0EFA               	movlw	-6
 26163  015088  36E3               	rlcf	plusw1,f,c
 26164                           
 26165                           ;stkvar	_b @ sp[(-13)+-4]
 26166  01508A  90D8               	bcf	status,0,c
 26167  01508C  0EEF               	movlw	-17
 26168  01508E  36E3               	rlcf	plusw1,f,c
 26169  015090  0EF0               	movlw	-16
 26170  015092  36E3               	rlcf	plusw1,f,c
 26171  015094  0EF1               	movlw	-15
 26172  015096  36E3               	rlcf	plusw1,f,c
 26173  015098  0EF2               	movlw	-14
 26174  01509A  36E3               	rlcf	plusw1,f,c
 26175                           
 26176                           ;stkvar	_grs @ sp[(-13)+0]
 26177  01509C  0EF6               	movlw	-10
 26178  01509E  AEE3               	btfss	plusw1,7,c
 26179  0150A0  D002               	goto	l8437
 26180                           
 26181                           ;stkvar	_b @ sp[(-13)+-4]
 26182  0150A2  0EEF               	movlw	-17
 26183  0150A4  80E3               	bsf	plusw1,0,c
 26184  0150A6                     l8437:
 26185                           
 26186                           ;stkvar	_grs @ sp[(-13)+0]
 26187  0150A6  90D8               	bcf	status,0,c
 26188  0150A8  0EF3               	movlw	-13
 26189  0150AA  36E3               	rlcf	plusw1,f,c
 26190  0150AC  0EF4               	movlw	-12
 26191  0150AE  36E3               	rlcf	plusw1,f,c
 26192  0150B0  0EF5               	movlw	-11
 26193  0150B2  36E3               	rlcf	plusw1,f,c
 26194  0150B4  0EF6               	movlw	-10
 26195  0150B6  36E3               	rlcf	plusw1,f,c
 26196  0150B8                     l8439:
 26197                           
 26198                           ;stkvar	_a @ sp[(-13)+-8]
 26199                           ;stkvar	_rem @ sp[(-13)+4]
 26200  0150B8  50E1               	movf	fsr1l,w,c
 26201  0150BA  0FF7               	addlw	-9
 26202  0150BC  6ED9               	movwf	fsr2l,c
 26203  0150BE  50E2               	movf	fsr1h,w,c
 26204  0150C0  6EDA               	movwf	fsr2h,c
 26205  0150C2  0EFF               	movlw	255
 26206  0150C4  22DA               	addwfc	fsr2h,f,c
 26207  0150C6  0EEB               	movlw	-21
 26208  0150C8  50E3               	movf	plusw1,w,c
 26209  0150CA  5CDE               	subwf	postinc2,w,c
 26210  0150CC  0EEC               	movlw	-20
 26211  0150CE  50E3               	movf	plusw1,w,c
 26212  0150D0  58DE               	subwfb	postinc2,w,c
 26213  0150D2  0EED               	movlw	-19
 26214  0150D4  50E3               	movf	plusw1,w,c
 26215  0150D6  58DE               	subwfb	postinc2,w,c
 26216  0150D8  0EEE               	movlw	-18
 26217  0150DA  50E3               	movf	plusw1,w,c
 26218  0150DC  58DE               	subwfb	postinc2,w,c
 26219  0150DE  A0D8               	btfss	status,0,c
 26220  0150E0  D015               	goto	l8445
 26221                           
 26222                           ;stkvar	_grs @ sp[(-13)+0]
 26223  0150E2  0EF6               	movlw	-10
 26224  0150E4  8CE3               	bsf	plusw1,6,c
 26225                           
 26226                           ;stkvar	_a @ sp[(-13)+-8]
 26227                           ;stkvar	_rem @ sp[(-13)+4]
 26228  0150E6  50E1               	movf	fsr1l,w,c
 26229  0150E8  0FF7               	addlw	-9
 26230  0150EA  6ED9               	movwf	fsr2l,c
 26231  0150EC  50E2               	movf	fsr1h,w,c
 26232  0150EE  6EDA               	movwf	fsr2h,c
 26233  0150F0  0EFF               	movlw	255
 26234  0150F2  22DA               	addwfc	fsr2h,f,c
 26235  0150F4  0EEB               	movlw	-21
 26236  0150F6  50E3               	movf	plusw1,w,c
 26237  0150F8  5EDE               	subwf	postinc2,f,c
 26238  0150FA  0EEC               	movlw	-20
 26239  0150FC  50E3               	movf	plusw1,w,c
 26240  0150FE  5ADE               	subwfb	postinc2,f,c
 26241  015100  0EED               	movlw	-19
 26242  015102  50E3               	movf	plusw1,w,c
 26243  015104  5ADE               	subwfb	postinc2,f,c
 26244  015106  0EEE               	movlw	-18
 26245  015108  50E3               	movf	plusw1,w,c
 26246  01510A  5ADE               	subwfb	postinc2,f,c
 26247  01510C                     l8445:
 26248                           
 26249                           ;stkvar	_aexp @ sp[(-13)+10]
 26250  01510C  0EFD               	movlw	-3
 26251  01510E  2AE3               	incf	plusw1,f,c
 26252  015110                     l8447:
 26253                           
 26254                           ;stkvar	_aexp @ sp[(-13)+10]
 26255  015110  0EFD               	movlw	-3
 26256  015112  006F FF8C  F001    	movff	plusw1,btemp
 26257  015118  0E19               	movlw	25
 26258  01511A  6401               	cpfsgt	btemp^0,c
 26259  01511C  D7A9               	goto	l8429
 26260                           
 26261                           ;stkvar	_rem @ sp[(-13)+4]
 26262  01511E  0EF7               	movlw	-9
 26263  015120  50E3               	movf	plusw1,w,c
 26264  015122  E10A               	bnz	u6720
 26265  015124  0EF8               	movlw	-8
 26266  015126  50E3               	movf	plusw1,w,c
 26267  015128  E107               	bnz	u6720
 26268  01512A  0EF9               	movlw	-7
 26269  01512C  50E3               	movf	plusw1,w,c
 26270  01512E  E104               	bnz	u6720
 26271  015130  0EFA               	movlw	-6
 26272  015132  50E3               	movf	plusw1,w,c
 26273  015134  B4D8               	btfsc	status,2,c
 26274  015136  D024               	goto	l8463
 26275  015138                     u6720:
 26276                           
 26277                           ;stkvar	_grs @ sp[(-13)+0]
 26278  015138  0EF3               	movlw	-13
 26279  01513A  80E3               	bsf	plusw1,0,c
 26280  01513C  D021               	goto	l8463
 26281  01513E                     l8453:
 26282                           
 26283                           ;stkvar	_b @ sp[(-13)+-4]
 26284  01513E  90D8               	bcf	status,0,c
 26285  015140  0EEF               	movlw	-17
 26286  015142  36E3               	rlcf	plusw1,f,c
 26287  015144  0EF0               	movlw	-16
 26288  015146  36E3               	rlcf	plusw1,f,c
 26289  015148  0EF1               	movlw	-15
 26290  01514A  36E3               	rlcf	plusw1,f,c
 26291  01514C  0EF2               	movlw	-14
 26292  01514E  36E3               	rlcf	plusw1,f,c
 26293                           
 26294                           ;stkvar	_grs @ sp[(-13)+0]
 26295  015150  0EF6               	movlw	-10
 26296  015152  AEE3               	btfss	plusw1,7,c
 26297  015154  D002               	goto	l8459
 26298                           
 26299                           ;stkvar	_b @ sp[(-13)+-4]
 26300  015156  0EEF               	movlw	-17
 26301  015158  80E3               	bsf	plusw1,0,c
 26302  01515A                     l8459:
 26303                           
 26304                           ;stkvar	_grs @ sp[(-13)+0]
 26305  01515A  90D8               	bcf	status,0,c
 26306  01515C  0EF3               	movlw	-13
 26307  01515E  36E3               	rlcf	plusw1,f,c
 26308  015160  0EF4               	movlw	-12
 26309  015162  36E3               	rlcf	plusw1,f,c
 26310  015164  0EF5               	movlw	-11
 26311  015166  36E3               	rlcf	plusw1,f,c
 26312  015168  0EF6               	movlw	-10
 26313  01516A  36E3               	rlcf	plusw1,f,c
 26314                           
 26315                           ;stkvar	_new_exp @ sp[(-13)+8]
 26316  01516C  50E1               	movf	fsr1l,w,c
 26317  01516E  0FFB               	addlw	-5
 26318  015170  6ED9               	movwf	fsr2l,c
 26319  015172  50E2               	movf	fsr1h,w,c
 26320  015174  6EDA               	movwf	fsr2h,c
 26321  015176  0EFF               	movlw	255
 26322  015178  22DA               	addwfc	fsr2h,f,c
 26323  01517A  06DE               	decf	postinc2,f,c
 26324  01517C  0E00               	movlw	0
 26325  01517E  5ADD               	subwfb	postdec2,f,c
 26326  015180                     l8463:
 26327                           
 26328                           ;stkvar	_b @ sp[(-13)+-4]
 26329  015180  0EF1               	movlw	-15
 26330  015182  AEE3               	btfss	plusw1,7,c
 26331  015184  D7DC               	goto	l8453
 26332                           
 26333                           ;stkvar	_aexp @ sp[(-13)+10]
 26334  015186  0EFD               	movlw	-3
 26335  015188  6AE3               	clrf	plusw1,c
 26336                           
 26337                           ;stkvar	_grs @ sp[(-13)+0]
 26338  01518A  0EF6               	movlw	-10
 26339  01518C  AEE3               	btfss	plusw1,7,c
 26340  01518E  D020               	goto	l8477
 26341                           
 26342                           ;stkvar	_grs @ sp[(-13)+0]
 26343  015190  50E1               	movf	fsr1l,w,c
 26344  015192  0FF3               	addlw	-13
 26345  015194  6ED9               	movwf	fsr2l,c
 26346  015196  50E2               	movf	fsr1h,w,c
 26347  015198  6EDA               	movwf	fsr2h,c
 26348  01519A  0EFF               	movlw	255
 26349  01519C  22DA               	addwfc	fsr2h,f,c
 26350  01519E  0EFF               	movlw	255
 26351  0151A0  14DE               	andwf	postinc2,w,c
 26352  0151A2  6E09               	movwf	(btemp+8)^0,c
 26353  0151A4  0EFF               	movlw	255
 26354  0151A6  14DE               	andwf	postinc2,w,c
 26355  0151A8  6E0A               	movwf	(btemp+9)^0,c
 26356  0151AA  0EFF               	movlw	255
 26357  0151AC  14DE               	andwf	postinc2,w,c
 26358  0151AE  6E0B               	movwf	(btemp+10)^0,c
 26359  0151B0  0E7F               	movlw	127
 26360  0151B2  14DE               	andwf	postinc2,w,c
 26361  0151B4  6E0C               	movwf	(btemp+11)^0,c
 26362  0151B6  5009               	movf	(btemp+8)^0,w,c
 26363  0151B8  100A               	iorwf	(btemp+9)^0,w,c
 26364  0151BA  100B               	iorwf	(btemp+10)^0,w,c
 26365  0151BC  100C               	iorwf	(btemp+11)^0,w,c
 26366  0151BE  B4D8               	btfsc	status,2,c
 26367  0151C0  D004               	goto	l8473
 26368  0151C2                     u6760:
 26369                           
 26370                           ;stkvar	_aexp @ sp[(-13)+10]
 26371  0151C2  0EFD               	movlw	-3
 26372  0151C4  6AE3               	clrf	plusw1,c
 26373  0151C6  2AE3               	incf	plusw1,f,c
 26374  0151C8  D003               	goto	l8477
 26375  0151CA                     l8473:
 26376                           
 26377                           ;stkvar	_b @ sp[(-13)+-4]
 26378  0151CA  0EEF               	movlw	-17
 26379  0151CC  B0E3               	btfsc	plusw1,0,c
 26380  0151CE  D7F9               	goto	u6760
 26381  0151D0                     l8477:
 26382                           
 26383                           ;stkvar	_aexp @ sp[(-13)+10]
 26384  0151D0  0EFD               	movlw	-3
 26385  0151D2  50E3               	movf	plusw1,w,c
 26386  0151D4  B4D8               	btfsc	status,2,c
 26387  0151D6  D036               	goto	l8487
 26388                           
 26389                           ;stkvar	_b @ sp[(-13)+-4]
 26390  0151D8  50E1               	movf	fsr1l,w,c
 26391  0151DA  0FEF               	addlw	-17
 26392  0151DC  6ED9               	movwf	fsr2l,c
 26393  0151DE  50E2               	movf	fsr1h,w,c
 26394  0151E0  6EDA               	movwf	fsr2h,c
 26395  0151E2  0EFF               	movlw	255
 26396  0151E4  22DA               	addwfc	fsr2h,f,c
 26397  0151E6  2ADE               	incf	postinc2,f,c
 26398  0151E8  0E00               	movlw	0
 26399  0151EA  22DE               	addwfc	postinc2,f,c
 26400  0151EC  22DE               	addwfc	postinc2,f,c
 26401  0151EE  22DE               	addwfc	postinc2,f,c
 26402                           
 26403                           ;stkvar	_b @ sp[(-13)+-4]
 26404  0151F0  0EF2               	movlw	-14
 26405  0151F2  A0E3               	btfss	plusw1,0,c
 26406  0151F4  D027               	goto	l8487
 26407  0151F6  0E01               	movlw	1
 26408  0151F8  6E0C               	movwf	(btemp+11)^0,c
 26409                           
 26410                           ;stkvar	_b @ sp[(-13)+-4]
 26411  0151FA  50E1               	movf	fsr1l,w,c
 26412  0151FC  0FEF               	addlw	-17
 26413  0151FE  6ED9               	movwf	fsr2l,c
 26414  015200  50E2               	movf	fsr1h,w,c
 26415  015202  6EDA               	movwf	fsr2h,c
 26416  015204  0EFF               	movlw	255
 26417  015206  22DA               	addwfc	fsr2h,f,c
 26418  015208  280C               	incf	(btemp+11)^0,w,c
 26419  01520A  52DE               	movf	postinc2,f,c
 26420  01520C  D008               	goto	u6800
 26421  01520E                     u6805:
 26422  01520E  52DE               	movf	postinc2,f,c
 26423  015210  90D8               	bcf	status,0,c
 26424  015212  BEDC               	btfsc	preinc2,7,c
 26425  015214  80D8               	bsf	status,0,c
 26426  015216  32DD               	rrcf	postdec2,f,c
 26427  015218  32DD               	rrcf	postdec2,f,c
 26428  01521A  32DD               	rrcf	postdec2,f,c
 26429  01521C  32DE               	rrcf	postinc2,f,c
 26430  01521E                     u6800:
 26431  01521E  2EE8               	decfsz	wreg,f,c
 26432  015220  D7F6               	goto	u6805
 26433                           
 26434                           ;stkvar	_new_exp @ sp[(-13)+8]
 26435  015222  0EFB               	movlw	-5
 26436  015224  50E3               	movf	plusw1,w,c
 26437  015226  0F01               	addlw	1
 26438  015228  6E01               	movwf	btemp^0,c
 26439  01522A  0EFB               	movlw	-5
 26440  01522C  0060  F007  FFE3   	movff	btemp,plusw1
 26441  015232  6A01               	clrf	btemp^0,c
 26442  015234  0EFC               	movlw	-4
 26443  015236  50E3               	movf	plusw1,w,c
 26444  015238  2001               	addwfc	btemp^0,w,c
 26445  01523A  6E01               	movwf	btemp^0,c
 26446  01523C  0EFC               	movlw	-4
 26447  01523E  0060  F007  FFE3   	movff	btemp,plusw1
 26448  015244                     l8487:
 26449                           
 26450                           ;stkvar	_new_exp @ sp[(-13)+8]
 26451  015244  0EFC               	movlw	-4
 26452  015246  BEE3               	btfsc	plusw1,7,c
 26453  015248  D01B               	goto	l8493
 26454  01524A  0EFC               	movlw	-4
 26455  01524C  50E3               	movf	plusw1,w,c
 26456  01524E  E104               	bnz	u6810
 26457  015250  0EFB               	movlw	-5
 26458  015252  28E3               	incf	plusw1,w,c
 26459  015254  A0D8               	btfss	status,0,c
 26460  015256  D014               	goto	l8493
 26461  015258                     u6810:
 26462  015258  0EFF               	movlw	255
 26463  01525A  6E0B               	movwf	(btemp+10)^0,c
 26464  01525C  0E00               	movlw	0
 26465  01525E  6E0C               	movwf	(btemp+11)^0,c
 26466                           
 26467                           ;stkvar	_new_exp @ sp[(-13)+8]
 26468  015260  0EFB               	movlw	-5
 26469  015262  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26470  015268  0EFC               	movlw	-4
 26471  01526A  0060  F033  FFE3   	movff	btemp+11,plusw1
 26472                           
 26473                           ;stkvar	_b @ sp[(-13)+-4]
 26474  015270  0EEF               	movlw	-17
 26475  015272  6AE3               	clrf	plusw1,c
 26476  015274  0EF0               	movlw	-16
 26477  015276  6AE3               	clrf	plusw1,c
 26478  015278  0EF1               	movlw	-15
 26479  01527A  6AE3               	clrf	plusw1,c
 26480  01527C  0EF2               	movlw	-14
 26481  01527E  6AE3               	clrf	plusw1,c
 26482  015280                     l8493:
 26483                           
 26484                           ;stkvar	_new_exp @ sp[(-13)+8]
 26485  015280  0EFC               	movlw	-4
 26486  015282  BEE3               	btfsc	plusw1,7,c
 26487  015284  D007               	goto	u6820
 26488  015286  0EFC               	movlw	-4
 26489  015288  50E3               	movf	plusw1,w,c
 26490  01528A  E112               	bnz	l8499
 26491  01528C  0EFB               	movlw	-5
 26492  01528E  04E3               	decf	plusw1,w,c
 26493  015290  B0D8               	btfsc	status,0,c
 26494  015292  D00E               	goto	l8499
 26495  015294                     u6820:
 26496                           
 26497                           ;stkvar	_new_exp @ sp[(-13)+8]
 26498  015294  0EFB               	movlw	-5
 26499  015296  6AE3               	clrf	plusw1,c
 26500  015298  0EFC               	movlw	-4
 26501  01529A  6AE3               	clrf	plusw1,c
 26502                           
 26503                           ;stkvar	_b @ sp[(-13)+-4]
 26504  01529C  0EEF               	movlw	-17
 26505  01529E  6AE3               	clrf	plusw1,c
 26506  0152A0  0EF0               	movlw	-16
 26507  0152A2  6AE3               	clrf	plusw1,c
 26508  0152A4  0EF1               	movlw	-15
 26509  0152A6  6AE3               	clrf	plusw1,c
 26510  0152A8  0EF2               	movlw	-14
 26511  0152AA  6AE3               	clrf	plusw1,c
 26512                           
 26513                           ;stkvar	_sign @ sp[(-13)+12]
 26514  0152AC  0EFF               	movlw	-1
 26515  0152AE  6AE3               	clrf	plusw1,c
 26516  0152B0                     l8499:
 26517                           
 26518                           ;stkvar	_new_exp @ sp[(-13)+8]
 26519                           ;stkvar	_bexp @ sp[(-13)+11]
 26520  0152B0  0EFB               	movlw	-5
 26521  0152B2  006F FF8C  F001    	movff	plusw1,btemp
 26522  0152B8  0EFE               	movlw	-2
 26523  0152BA  0060  F007  FFE3   	movff	btemp,plusw1
 26524                           
 26525                           ;stkvar	_bexp @ sp[(-13)+11]
 26526  0152C0  0EFE               	movlw	-2
 26527  0152C2  A0E3               	btfss	plusw1,0,c
 26528  0152C4  D009               	goto	l8505
 26529                           
 26530                           ;stkvar	_b @ sp[(-13)+-4]
 26531  0152C6  0EF1               	movlw	241
 26532  0152C8  24E1               	addwf	fsr1l,w,c
 26533  0152CA  6ED9               	movwf	fsr2l,c
 26534  0152CC  0EFF               	movlw	255
 26535  0152CE  20E2               	addwfc	fsr1h,w,c
 26536  0152D0  6EDA               	movwf	fsr2h,c
 26537  0152D2  0E00               	movlw	0
 26538  0152D4  8EDB               	bsf	plusw2,7,c
 26539  0152D6  D008               	goto	l8507
 26540  0152D8                     l8505:
 26541                           
 26542                           ;stkvar	_b @ sp[(-13)+-4]
 26543  0152D8  0EF1               	movlw	241
 26544  0152DA  24E1               	addwf	fsr1l,w,c
 26545  0152DC  6ED9               	movwf	fsr2l,c
 26546  0152DE  0EFF               	movlw	255
 26547  0152E0  20E2               	addwfc	fsr1h,w,c
 26548  0152E2  6EDA               	movwf	fsr2h,c
 26549  0152E4  0E7F               	movlw	127
 26550  0152E6  16DF               	andwf	indf2,f,c
 26551  0152E8                     l8507:
 26552                           
 26553                           ;stkvar	_b @ sp[(-13)+-4]
 26554  0152E8  0EF2               	movlw	242
 26555  0152EA  24E1               	addwf	fsr1l,w,c
 26556  0152EC  6ED9               	movwf	fsr2l,c
 26557  0152EE  0EFF               	movlw	255
 26558  0152F0  20E2               	addwfc	fsr1h,w,c
 26559  0152F2  6EDA               	movwf	fsr2h,c
 26560                           
 26561                           ;stkvar	_bexp @ sp[(-13)+11]
 26562  0152F4  0EFE               	movlw	-2
 26563  0152F6  006F FF8C  F00C    	movff	plusw1,btemp+11
 26564  0152FC  90D8               	bcf	status,0,c
 26565  0152FE  300C               	rrcf	(btemp+11)^0,w,c
 26566  015300  6EDF               	movwf	indf2,c
 26567  015302  D644               	goto	l8405
 26568  015304                     l3052:
 26569                           
 26570                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 26571  015304  0EEB               	movlw	235
 26572  015306  26E1               	addwf	fsr1l,f,c
 26573  015308  0EFF               	movlw	255
 26574  01530A  22E2               	addwfc	fsr1h,f,c
 26575  01530C  0012               	return		;funcret
 26576  01530E                     __end_of___fldiv:
 26577                           	opt callstack 0
 26578                           
 26579 ;; *************** function ___flge *****************
 26580 ;; Defined at:
 26581 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 26582 ;; Parameters:    Size  Location     Type
 26583 ;;  ff1             4  [STACK] unsigned char 
 26584 ;;  ff2             4  [STACK] unsigned char 
 26585 ;; Auto vars:     Size  Location     Type
 26586 ;;		None
 26587 ;; Return value:  Size  Location     Type
 26588 ;;		None               void
 26589 ;; Registers used:
 26590 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 26591 ;; Tracked objects:
 26592 ;;		On entry : 0/0
 26593 ;;		On exit  : 0/0
 26594 ;;		Unchanged: 0/0
 26595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26599 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26600 ;;Total ram usage:        0 bytes
 26601 ;; Hardware stack levels used:    1
 26602 ;; Hardware stack levels required when called:   15
 26603 ;; This function calls:
 26604 ;;		Nothing
 26605 ;; This function is called by:
 26606 ;;		_main
 26607 ;;		_convert_dac_raw
 26608 ;;		_calc_ror_data
 26609 ;;		_check_day_time
 26610 ;;		_calc_bsoc
 26611 ;;		_efgtoa
 26612 ;; This function uses a reentrant model
 26613 ;;
 26614                           
 26615                           	psect	text106
 26616  0191F8                     __ptext106:
 26617                           	opt callstack 0
 26618  0191F8                     ___flge:
 26619                           	opt callstack 0
 26620                           
 26621                           ;stkvar	_ff1 @ sp[(0)+-4]
 26622                           
 26623                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26624                           ;incstack = 0
 26625 ;; hardware stack exceeded
 26626  0191F8  50E1               	movf	fsr1l,w,c
 26627  0191FA  0FFC               	addlw	-4
 26628  0191FC  6ED9               	movwf	fsr2l,c
 26629  0191FE  50E2               	movf	fsr1h,w,c
 26630  019200  6EDA               	movwf	fsr2h,c
 26631  019202  0EFF               	movlw	255
 26632  019204  22DA               	addwfc	fsr2h,f,c
 26633  019206  0E00               	movlw	0
 26634  019208  14DE               	andwf	postinc2,w,c
 26635  01920A  6E09               	movwf	(btemp+8)^0,c
 26636  01920C  0E00               	movlw	0
 26637  01920E  14DE               	andwf	postinc2,w,c
 26638  019210  6E0A               	movwf	(btemp+9)^0,c
 26639  019212  0E80               	movlw	128
 26640  019214  14DE               	andwf	postinc2,w,c
 26641  019216  6E0B               	movwf	(btemp+10)^0,c
 26642  019218  0E7F               	movlw	127
 26643  01921A  14DE               	andwf	postinc2,w,c
 26644  01921C  6E0C               	movwf	(btemp+11)^0,c
 26645  01921E  5009               	movf	(btemp+8)^0,w,c
 26646  019220  100A               	iorwf	(btemp+9)^0,w,c
 26647  019222  100B               	iorwf	(btemp+10)^0,w,c
 26648  019224  100C               	iorwf	(btemp+11)^0,w,c
 26649  019226  A4D8               	btfss	status,2,c
 26650  019228  D008               	goto	l8781
 26651                           
 26652                           ;stkvar	_ff1 @ sp[(0)+-4]
 26653  01922A  0EFC               	movlw	-4
 26654  01922C  6AE3               	clrf	plusw1,c
 26655  01922E  0EFD               	movlw	-3
 26656  019230  6AE3               	clrf	plusw1,c
 26657  019232  0EFE               	movlw	-2
 26658  019234  6AE3               	clrf	plusw1,c
 26659  019236  0EFF               	movlw	-1
 26660  019238  6AE3               	clrf	plusw1,c
 26661  01923A                     l8781:
 26662                           
 26663                           ;stkvar	_ff2 @ sp[(0)+-8]
 26664  01923A  50E1               	movf	fsr1l,w,c
 26665  01923C  0FF8               	addlw	-8
 26666  01923E  6ED9               	movwf	fsr2l,c
 26667  019240  50E2               	movf	fsr1h,w,c
 26668  019242  6EDA               	movwf	fsr2h,c
 26669  019244  0EFF               	movlw	255
 26670  019246  22DA               	addwfc	fsr2h,f,c
 26671  019248  0E00               	movlw	0
 26672  01924A  14DE               	andwf	postinc2,w,c
 26673  01924C  6E09               	movwf	(btemp+8)^0,c
 26674  01924E  0E00               	movlw	0
 26675  019250  14DE               	andwf	postinc2,w,c
 26676  019252  6E0A               	movwf	(btemp+9)^0,c
 26677  019254  0E80               	movlw	128
 26678  019256  14DE               	andwf	postinc2,w,c
 26679  019258  6E0B               	movwf	(btemp+10)^0,c
 26680  01925A  0E7F               	movlw	127
 26681  01925C  14DE               	andwf	postinc2,w,c
 26682  01925E  6E0C               	movwf	(btemp+11)^0,c
 26683  019260  5009               	movf	(btemp+8)^0,w,c
 26684  019262  100A               	iorwf	(btemp+9)^0,w,c
 26685  019264  100B               	iorwf	(btemp+10)^0,w,c
 26686  019266  100C               	iorwf	(btemp+11)^0,w,c
 26687  019268  A4D8               	btfss	status,2,c
 26688  01926A  D008               	goto	l2733
 26689                           
 26690                           ;stkvar	_ff2 @ sp[(0)+-8]
 26691  01926C  0EF8               	movlw	-8
 26692  01926E  6AE3               	clrf	plusw1,c
 26693  019270  0EF9               	movlw	-7
 26694  019272  6AE3               	clrf	plusw1,c
 26695  019274  0EFA               	movlw	-6
 26696  019276  6AE3               	clrf	plusw1,c
 26697  019278  0EFB               	movlw	-5
 26698  01927A  6AE3               	clrf	plusw1,c
 26699  01927C                     l2733:
 26700                           
 26701                           ;stkvar	_ff1 @ sp[(0)+-4]
 26702  01927C  0EFF               	movlw	-1
 26703  01927E  AEE3               	btfss	plusw1,7,c
 26704  019280  D024               	goto	l8787
 26705                           
 26706                           ;stkvar	_ff1 @ sp[(0)+-4]
 26707  019282  0E00               	movlw	0
 26708  019284  6E09               	movwf	(btemp+8)^0,c
 26709  019286  0E00               	movlw	0
 26710  019288  6E0A               	movwf	(btemp+9)^0,c
 26711  01928A  0E00               	movlw	0
 26712  01928C  6E0B               	movwf	(btemp+10)^0,c
 26713  01928E  0E80               	movlw	128
 26714  019290  6E0C               	movwf	(btemp+11)^0,c
 26715  019292  0EFC               	movlw	-4
 26716  019294  50E3               	movf	plusw1,w,c
 26717  019296  5E09               	subwf	(btemp+8)^0,f,c
 26718  019298  0EFD               	movlw	-3
 26719  01929A  50E3               	movf	plusw1,w,c
 26720  01929C  5A0A               	subwfb	(btemp+9)^0,f,c
 26721  01929E  0EFE               	movlw	-2
 26722  0192A0  50E3               	movf	plusw1,w,c
 26723  0192A2  5A0B               	subwfb	(btemp+10)^0,f,c
 26724  0192A4  0EFF               	movlw	-1
 26725  0192A6  50E3               	movf	plusw1,w,c
 26726  0192A8  5A0C               	subwfb	(btemp+11)^0,f,c
 26727                           
 26728                           ;stkvar	_ff1 @ sp[(0)+-4]
 26729  0192AA  0EFC               	movlw	-4
 26730  0192AC  0060  F027  FFE3   	movff	btemp+8,plusw1
 26731  0192B2  0EFD               	movlw	-3
 26732  0192B4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26733  0192BA  0EFE               	movlw	-2
 26734  0192BC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26735  0192C2  0EFF               	movlw	-1
 26736  0192C4  0060  F033  FFE3   	movff	btemp+11,plusw1
 26737  0192CA                     l8787:
 26738                           
 26739                           ;stkvar	_ff2 @ sp[(0)+-8]
 26740  0192CA  0EFB               	movlw	-5
 26741  0192CC  AEE3               	btfss	plusw1,7,c
 26742  0192CE  D024               	goto	l8791
 26743                           
 26744                           ;stkvar	_ff2 @ sp[(0)+-8]
 26745  0192D0  0E00               	movlw	0
 26746  0192D2  6E09               	movwf	(btemp+8)^0,c
 26747  0192D4  0E00               	movlw	0
 26748  0192D6  6E0A               	movwf	(btemp+9)^0,c
 26749  0192D8  0E00               	movlw	0
 26750  0192DA  6E0B               	movwf	(btemp+10)^0,c
 26751  0192DC  0E80               	movlw	128
 26752  0192DE  6E0C               	movwf	(btemp+11)^0,c
 26753  0192E0  0EF8               	movlw	-8
 26754  0192E2  50E3               	movf	plusw1,w,c
 26755  0192E4  5E09               	subwf	(btemp+8)^0,f,c
 26756  0192E6  0EF9               	movlw	-7
 26757  0192E8  50E3               	movf	plusw1,w,c
 26758  0192EA  5A0A               	subwfb	(btemp+9)^0,f,c
 26759  0192EC  0EFA               	movlw	-6
 26760  0192EE  50E3               	movf	plusw1,w,c
 26761  0192F0  5A0B               	subwfb	(btemp+10)^0,f,c
 26762  0192F2  0EFB               	movlw	-5
 26763  0192F4  50E3               	movf	plusw1,w,c
 26764  0192F6  5A0C               	subwfb	(btemp+11)^0,f,c
 26765                           
 26766                           ;stkvar	_ff2 @ sp[(0)+-8]
 26767  0192F8  0EF8               	movlw	-8
 26768  0192FA  0060  F027  FFE3   	movff	btemp+8,plusw1
 26769  019300  0EF9               	movlw	-7
 26770  019302  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26771  019308  0EFA               	movlw	-6
 26772  01930A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26773  019310  0EFB               	movlw	-5
 26774  019312  0060  F033  FFE3   	movff	btemp+11,plusw1
 26775  019318                     l8791:
 26776                           
 26777                           ;stkvar	_ff1 @ sp[(0)+-4]
 26778  019318  0EFF               	movlw	-1
 26779  01931A  7EE3               	btg	plusw1,7,c
 26780                           
 26781                           ;stkvar	_ff2 @ sp[(0)+-8]
 26782  01931C  0EFB               	movlw	-5
 26783  01931E  7EE3               	btg	plusw1,7,c
 26784                           
 26785                           ;stkvar	_ff2 @ sp[(0)+-8]
 26786                           ;stkvar	_ff1 @ sp[(0)+-4]
 26787  019320  50E1               	movf	fsr1l,w,c
 26788  019322  0FFC               	addlw	-4
 26789  019324  6ED9               	movwf	fsr2l,c
 26790  019326  50E2               	movf	fsr1h,w,c
 26791  019328  6EDA               	movwf	fsr2h,c
 26792  01932A  0EFF               	movlw	255
 26793  01932C  22DA               	addwfc	fsr2h,f,c
 26794  01932E  0EF8               	movlw	-8
 26795  019330  50E3               	movf	plusw1,w,c
 26796  019332  5CDE               	subwf	postinc2,w,c
 26797  019334  0EF9               	movlw	-7
 26798  019336  50E3               	movf	plusw1,w,c
 26799  019338  58DE               	subwfb	postinc2,w,c
 26800  01933A  0EFA               	movlw	-6
 26801  01933C  50E3               	movf	plusw1,w,c
 26802  01933E  58DE               	subwfb	postinc2,w,c
 26803  019340  0EFB               	movlw	-5
 26804  019342  50E3               	movf	plusw1,w,c
 26805  019344  58DE               	subwfb	postinc2,w,c
 26806  019346  B0D8               	btfsc	status,0,c
 26807  019348  D002               	goto	l8799
 26808  01934A  9001               	bcf	btemp& (0+255),0,c
 26809  01934C  D001               	goto	l2740
 26810  01934E                     l8799:
 26811  01934E  8001               	bsf	btemp& (0+255),0,c
 26812  019350                     l2740:
 26813                           
 26814                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 26815  019350  0EF8               	movlw	248
 26816  019352  26E1               	addwf	fsr1l,f,c
 26817  019354  0EFF               	movlw	255
 26818  019356  22E2               	addwfc	fsr1h,f,c
 26819  019358  0012               	return		;funcret
 26820  01935A                     __end_of___flge:
 26821                           	opt callstack 0
 26822                           
 26823 ;; *************** function _calc_model_data *****************
 26824 ;; Defined at:
 26825 ;;		line 67 in file "mbmc.c"
 26826 ;; Parameters:    Size  Location     Type
 26827 ;;		None
 26828 ;; Auto vars:     Size  Location     Type
 26829 ;;		None
 26830 ;; Return value:  Size  Location     Type
 26831 ;;                  1  [STACK] void 
 26832 ;; Registers used:
 26833 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 26834 ;; Tracked objects:
 26835 ;;		On entry : 0/1
 26836 ;;		On exit  : 3F/39
 26837 ;;		Unchanged: 0/0
 26838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26843 ;;Total ram usage:        0 bytes
 26844 ;; Hardware stack levels used:    1
 26845 ;; Hardware stack levels required when called:   18
 26846 ;; This function calls:
 26847 ;;		___fladd
 26848 ;;		___flmul
 26849 ;;		___flsub
 26850 ;;		_lp_filter
 26851 ;;		_start_bsoc
 26852 ;;		_stop_bsoc
 26853 ;; This function is called by:
 26854 ;;		_main
 26855 ;; This function uses a reentrant model
 26856 ;;
 26857                           
 26858                           	psect	text107
 26859  015CA2                     __ptext107:
 26860                           	opt callstack 0
 26861  015CA2                     _calc_model_data:
 26862                           	opt callstack 12
 26863                           
 26864                           ;mbmc.c: 69:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 70:  stop_bsoc();
 26865                           
 26866                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26867                           ;incstack = 0
 26868  015CA2  ECC0  F0E2         	call	_stop_bsoc	;wreg free
 26869                           
 26870                           ; BSR set to: 57
 26871                           ;mbmc.c: 72:  if (!V.calib) {
 26872  015CA6  0101               	movlb	1	; () banked
 26873  015CA8  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
 26874  015CAA  A4D8               	btfss	status,2,c
 26875  015CAC  D219               	goto	l11259
 26876                           
 26877                           ; BSR set to: 1
 26878                           ;mbmc.c: 73:   C.c_bat = C.calc[C_BATT];
 26879  015CAE  EE21  F2FF         	lfsr	2,_C
 26880  015CB2  006F FF78  F743    	movff	postinc2,_C+68	;volatile
 26881  015CB8  006F FF78  F744    	movff	postinc2,_C+69	;volatile
 26882  015CBE  006F FF78  F745    	movff	postinc2,_C+70	;volatile
 26883  015CC4  006F FF74  F746    	movff	postdec2,_C+71	;volatile
 26884                           
 26885                           ; BSR set to: 1
 26886                           ;mbmc.c: 74:   C.bc_ror = C.c_bat - bcror;
 26887  015CCA  0060  F1C3  FFE6   	movff	calc_model_data@bcror,postinc1
 26888  015CD0  0060  F1C7  FFE6   	movff	calc_model_data@bcror+1,postinc1
 26889  015CD6  0060  F1CB  FFE6   	movff	calc_model_data@bcror+2,postinc1
 26890  015CDC  0060  F1CF  FFE6   	movff	calc_model_data@bcror+3,postinc1
 26891  015CE2  EE21  F343         	lfsr	2,_C+68	;volatile
 26892  015CE6  006F FF7B FFE6     	movff	postinc2,postinc1
 26893  015CEC  006F FF7B FFE6     	movff	postinc2,postinc1
 26894  015CF2  006F FF7B FFE6     	movff	postinc2,postinc1
 26895  015CF8  006F FF7B FFE6     	movff	postinc2,postinc1
 26896  015CFE  ECC0  F0DC         	call	___flsub	;wreg free
 26897  015D02  0060  F004  F76F   	movff	btemp,_C+112	;volatile
 26898  015D08  0060  F008  F770   	movff	btemp+1,_C+113	;volatile
 26899  015D0E  0060  F00C  F771   	movff	btemp+2,_C+114	;volatile
 26900  015D14  0060  F010  F772   	movff	btemp+3,_C+115	;volatile
 26901                           
 26902                           ;mbmc.c: 75:   bcror = C.c_bat;
 26903  015D1A  C743  F070         	movff	_C+68,calc_model_data@bcror	;volatile
 26904  015D1E  C744  F071         	movff	_C+69,calc_model_data@bcror+1	;volatile
 26905  015D22  C745  F072         	movff	_C+70,calc_model_data@bcror+2	;volatile
 26906  015D26  C746  F073         	movff	_C+71,calc_model_data@bcror+3	;volatile
 26907                           
 26908                           ;mbmc.c: 76:   C.c_pv = C.calc[C_PV];
 26909  015D2A  EE21  F303         	lfsr	2,_C+4	;volatile
 26910  015D2E  006F FF78  F747    	movff	postinc2,_C+72	;volatile
 26911  015D34  006F FF78  F748    	movff	postinc2,_C+73	;volatile
 26912  015D3A  006F FF78  F749    	movff	postinc2,_C+74	;volatile
 26913  015D40  006F FF74  F74A    	movff	postdec2,_C+75	;volatile
 26914                           
 26915                           ;mbmc.c: 77:   C.v_bat = C.calc[V_BAT];
 26916  015D46  EE21  F30F         	lfsr	2,_C+16	;volatile
 26917  015D4A  006F FF78  F753    	movff	postinc2,_C+84	;volatile
 26918  015D50  006F FF78  F754    	movff	postinc2,_C+85	;volatile
 26919  015D56  006F FF78  F755    	movff	postinc2,_C+86	;volatile
 26920  015D5C  006F FF74  F756    	movff	postdec2,_C+87	;volatile
 26921                           
 26922                           ;mbmc.c: 78:   C.v_sensor = C.calc[V_LIGHT_SENSOR];
 26923  015D62  EE21  F333         	lfsr	2,_C+52	;volatile
 26924  015D66  006F FF78  F767    	movff	postinc2,_C+104	;volatile
 26925  015D6C  006F FF78  F768    	movff	postinc2,_C+105	;volatile
 26926  015D72  006F FF78  F769    	movff	postinc2,_C+106	;volatile
 26927  015D78  006F FF74  F76A    	movff	postdec2,_C+107	;volatile
 26928                           
 26929                           ;mbmc.c: 79:   C.bv_ror = C.v_bat - bvror;
 26930  015D7E  0060  F1D3  FFE6   	movff	calc_model_data@bvror,postinc1
 26931  015D84  0060  F1D7  FFE6   	movff	calc_model_data@bvror+1,postinc1
 26932  015D8A  0060  F1DB  FFE6   	movff	calc_model_data@bvror+2,postinc1
 26933  015D90  0060  F1DF  FFE6   	movff	calc_model_data@bvror+3,postinc1
 26934  015D96  EE21  F353         	lfsr	2,_C+84	;volatile
 26935  015D9A  006F FF7B FFE6     	movff	postinc2,postinc1
 26936  015DA0  006F FF7B FFE6     	movff	postinc2,postinc1
 26937  015DA6  006F FF7B FFE6     	movff	postinc2,postinc1
 26938  015DAC  006F FF7B FFE6     	movff	postinc2,postinc1
 26939  015DB2  ECC0  F0DC         	call	___flsub	;wreg free
 26940  015DB6  0060  F004  F76B   	movff	btemp,_C+108	;volatile
 26941  015DBC  0060  F008  F76C   	movff	btemp+1,_C+109	;volatile
 26942  015DC2  0060  F00C  F76D   	movff	btemp+2,_C+110	;volatile
 26943  015DC8  0060  F010  F76E   	movff	btemp+3,_C+111	;volatile
 26944                           
 26945                           ;mbmc.c: 80:   bvror = C.v_bat;
 26946  015DCE  C753  F074         	movff	_C+84,calc_model_data@bvror	;volatile
 26947  015DD2  C754  F075         	movff	_C+85,calc_model_data@bvror+1	;volatile
 26948  015DD6  C755  F076         	movff	_C+86,calc_model_data@bvror+2	;volatile
 26949  015DDA  C756  F077         	movff	_C+87,calc_model_data@bvror+3	;volatile
 26950                           
 26951                           ;mbmc.c: 81:   C.v_pv = C.calc[V_PV];
 26952  015DDE  EE21  F313         	lfsr	2,_C+20	;volatile
 26953  015DE2  006F FF78  F74F    	movff	postinc2,_C+80	;volatile
 26954  015DE8  006F FF78  F750    	movff	postinc2,_C+81	;volatile
 26955  015DEE  006F FF78  F751    	movff	postinc2,_C+82	;volatile
 26956  015DF4  006F FF74  F752    	movff	postdec2,_C+83	;volatile
 26957                           
 26958                           ;mbmc.c: 82:   C.v_cc = C.calc[V_CC];
 26959  015DFA  EE21  F307         	lfsr	2,_C+8	;volatile
 26960  015DFE  006F FF78  F74B    	movff	postinc2,_C+76	;volatile
 26961  015E04  006F FF78  F74C    	movff	postinc2,_C+77	;volatile
 26962  015E0A  006F FF78  F74D    	movff	postinc2,_C+78	;volatile
 26963  015E10  006F FF74  F74E    	movff	postdec2,_C+79	;volatile
 26964                           
 26965                           ;mbmc.c: 83:   C.v_inverter = C.calc[V_INVERTER];
 26966  015E16  EE21  F32F         	lfsr	2,_C+48	;volatile
 26967  015E1A  006F FF78  F763    	movff	postinc2,_C+100	;volatile
 26968  015E20  006F FF78  F764    	movff	postinc2,_C+101	;volatile
 26969  015E26  006F FF78  F765    	movff	postinc2,_C+102	;volatile
 26970  015E2C  006F FF74  F766    	movff	postdec2,_C+103	;volatile
 26971                           
 26972                           ;mbmc.c: 84:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 26973  015E32  0E01               	movlw	1
 26974  015E34  6EE6               	movwf	postinc1,c
 26975  015E36  0E10               	movlw	16
 26976  015E38  6EE6               	movwf	postinc1,c
 26977  015E3A  EE21  F2FF         	lfsr	2,_C
 26978  015E3E  006F FF7B FFE6     	movff	postinc2,postinc1
 26979  015E44  006F FF7B FFE6     	movff	postinc2,postinc1
 26980  015E4A  006F FF7B FFE6     	movff	postinc2,postinc1
 26981  015E50  006F FF7B FFE6     	movff	postinc2,postinc1
 26982  015E56  EE21  F303         	lfsr	2,_C+4	;volatile
 26983  015E5A  006F FF7B FFE6     	movff	postinc2,postinc1
 26984  015E60  006F FF7B FFE6     	movff	postinc2,postinc1
 26985  015E66  006F FF7B FFE6     	movff	postinc2,postinc1
 26986  015E6C  006F FF7B FFE6     	movff	postinc2,postinc1
 26987  015E72  ECC0  F0DC         	call	___flsub	;wreg free
 26988  015E76  0060  F007  FFE6   	movff	btemp,postinc1
 26989  015E7C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26990  015E82  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26991  015E88  0060  F013  FFE6   	movff	btemp+3,postinc1
 26992  015E8E  EC47  F0C4         	call	_lp_filter	;wreg free
 26993  015E92  0060  F004  F73F   	movff	btemp,_C+64	;volatile
 26994  015E98  0060  F008  F740   	movff	btemp+1,_C+65	;volatile
 26995  015E9E  0060  F00C  F741   	movff	btemp+2,_C+66	;volatile
 26996  015EA4  0060  F010  F742   	movff	btemp+3,_C+67	;volatile
 26997                           
 26998                           ;mbmc.c: 85:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 26999  015EAA  0E01               	movlw	1
 27000  015EAC  6EE6               	movwf	postinc1,c
 27001  015EAE  0E11               	movlw	17
 27002  015EB0  6EE6               	movwf	postinc1,c
 27003  015EB2  EE21  F353         	lfsr	2,_C+84	;volatile
 27004  015EB6  006F FF7B FFE6     	movff	postinc2,postinc1
 27005  015EBC  006F FF7B FFE6     	movff	postinc2,postinc1
 27006  015EC2  006F FF7B FFE6     	movff	postinc2,postinc1
 27007  015EC8  006F FF7B FFE6     	movff	postinc2,postinc1
 27008  015ECE  EE21  F33F         	lfsr	2,_C+64	;volatile
 27009  015ED2  006F FF7B FFE6     	movff	postinc2,postinc1
 27010  015ED8  006F FF7B FFE6     	movff	postinc2,postinc1
 27011  015EDE  006F FF7B FFE6     	movff	postinc2,postinc1
 27012  015EE4  006F FF7B FFE6     	movff	postinc2,postinc1
 27013  015EEA  ECD7  F09E         	call	___flmul	;wreg free
 27014  015EEE  0060  F007  FFE6   	movff	btemp,postinc1
 27015  015EF4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27016  015EFA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27017  015F00  0060  F013  FFE6   	movff	btemp+3,postinc1
 27018  015F06  EC47  F0C4         	call	_lp_filter	;wreg free
 27019  015F0A  0060  F004  F773   	movff	btemp,_C+116	;volatile
 27020  015F10  0060  F008  F774   	movff	btemp+1,_C+117	;volatile
 27021  015F16  0060  F00C  F775   	movff	btemp+2,_C+118	;volatile
 27022  015F1C  0060  F010  F776   	movff	btemp+3,_C+119	;volatile
 27023                           
 27024                           ;mbmc.c: 86:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 27025  015F22  0E01               	movlw	1
 27026  015F24  6EE6               	movwf	postinc1,c
 27027  015F26  0E12               	movlw	18
 27028  015F28  6EE6               	movwf	postinc1,c
 27029  015F2A  EE21  F34F         	lfsr	2,_C+80	;volatile
 27030  015F2E  006F FF7B FFE6     	movff	postinc2,postinc1
 27031  015F34  006F FF7B FFE6     	movff	postinc2,postinc1
 27032  015F3A  006F FF7B FFE6     	movff	postinc2,postinc1
 27033  015F40  006F FF7B FFE6     	movff	postinc2,postinc1
 27034  015F46  EE21  F347         	lfsr	2,_C+72	;volatile
 27035  015F4A  006F FF7B FFE6     	movff	postinc2,postinc1
 27036  015F50  006F FF7B FFE6     	movff	postinc2,postinc1
 27037  015F56  006F FF7B FFE6     	movff	postinc2,postinc1
 27038  015F5C  006F FF7B FFE6     	movff	postinc2,postinc1
 27039  015F62  ECD7  F09E         	call	___flmul	;wreg free
 27040  015F66  0060  F007  FFE6   	movff	btemp,postinc1
 27041  015F6C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27042  015F72  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27043  015F78  0060  F013  FFE6   	movff	btemp+3,postinc1
 27044  015F7E  EC47  F0C4         	call	_lp_filter	;wreg free
 27045  015F82  0060  F004  F77B   	movff	btemp,_C+124	;volatile
 27046  015F88  0060  F008  F77C   	movff	btemp+1,_C+125	;volatile
 27047  015F8E  0060  F00C  F77D   	movff	btemp+2,_C+126	;volatile
 27048  015F94  0060  F010  F77E   	movff	btemp+3,_C+127	;volatile
 27049                           
 27050                           ;mbmc.c: 87:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 27051  015F9A  0E01               	movlw	1
 27052  015F9C  6EE6               	movwf	postinc1,c
 27053  015F9E  0E13               	movlw	19
 27054  015FA0  6EE6               	movwf	postinc1,c
 27055  015FA2  0E00               	movlw	0
 27056  015FA4  6EE6               	movwf	postinc1,c
 27057  015FA6  0E00               	movlw	0
 27058  015FA8  6EE6               	movwf	postinc1,c
 27059  015FAA  0E60               	movlw	96
 27060  015FAC  6EE6               	movwf	postinc1,c
 27061  015FAE  0EC1               	movlw	193
 27062  015FB0  6EE6               	movwf	postinc1,c
 27063  015FB2  EE21  F363         	lfsr	2,_C+100	;volatile
 27064  015FB6  006F FF7B FFE6     	movff	postinc2,postinc1
 27065  015FBC  006F FF7B FFE6     	movff	postinc2,postinc1
 27066  015FC2  006F FF7B FFE6     	movff	postinc2,postinc1
 27067  015FC8  006F FF7B FFE6     	movff	postinc2,postinc1
 27068  015FCE  EE21  F33F         	lfsr	2,_C+64	;volatile
 27069  015FD2  006F FF7B FFE6     	movff	postinc2,postinc1
 27070  015FD8  006F FF7B FFE6     	movff	postinc2,postinc1
 27071  015FDE  006F FF7B FFE6     	movff	postinc2,postinc1
 27072  015FE4  006F FF7B FFE6     	movff	postinc2,postinc1
 27073  015FEA  ECD7  F09E         	call	___flmul	;wreg free
 27074  015FEE  0060  F007  FFE6   	movff	btemp,postinc1
 27075  015FF4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27076  015FFA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27077  016000  0060  F013  FFE6   	movff	btemp+3,postinc1
 27078  016006  ECEC  F0A2         	call	___fladd	;wreg free
 27079  01600A  0060  F007  FFE6   	movff	btemp,postinc1
 27080  016010  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27081  016016  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27082  01601C  0060  F013  FFE6   	movff	btemp+3,postinc1
 27083  016022  EC47  F0C4         	call	_lp_filter	;wreg free
 27084  016026  0060  F004  F777   	movff	btemp,_C+120	;volatile
 27085  01602C  0060  F008  F778   	movff	btemp+1,_C+121	;volatile
 27086  016032  0060  F00C  F779   	movff	btemp+2,_C+122	;volatile
 27087  016038  0060  F010  F77A   	movff	btemp+3,_C+123	;volatile
 27088                           
 27089                           ;mbmc.c: 88:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 27090  01603E  0E01               	movlw	1
 27091  016040  6EE6               	movwf	postinc1,c
 27092  016042  0E14               	movlw	20
 27093  016044  6EE6               	movwf	postinc1,c
 27094  016046  EE21  F353         	lfsr	2,_C+84	;volatile
 27095  01604A  006F FF7B FFE6     	movff	postinc2,postinc1
 27096  016050  006F FF7B FFE6     	movff	postinc2,postinc1
 27097  016056  006F FF7B FFE6     	movff	postinc2,postinc1
 27098  01605C  006F FF7B FFE6     	movff	postinc2,postinc1
 27099  016062  EE21  F343         	lfsr	2,_C+68	;volatile
 27100  016066  006F FF7B FFE6     	movff	postinc2,postinc1
 27101  01606C  006F FF7B FFE6     	movff	postinc2,postinc1
 27102  016072  006F FF7B FFE6     	movff	postinc2,postinc1
 27103  016078  006F FF7B FFE6     	movff	postinc2,postinc1
 27104  01607E  ECD7  F09E         	call	___flmul	;wreg free
 27105  016082  0060  F007  FFE6   	movff	btemp,postinc1
 27106  016088  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27107  01608E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27108  016094  0060  F013  FFE6   	movff	btemp+3,postinc1
 27109  01609A  EC47  F0C4         	call	_lp_filter	;wreg free
 27110  01609E  0060  F004  F77F   	movff	btemp,_C+128	;volatile
 27111  0160A4  0060  F008  F780   	movff	btemp+1,_C+129	;volatile
 27112  0160AA  0060  F00C  F781   	movff	btemp+2,_C+130	;volatile
 27113  0160B0  0060  F010  F782   	movff	btemp+3,_C+131	;volatile
 27114                           
 27115                           ;mbmc.c: 92:   if (C.p_inverter < 0.0)
 27116  0160B6  EE21  F377         	lfsr	2,_C+120	;volatile
 27117  0160BA  0E03               	movlw	3
 27118  0160BC  AEDB               	btfss	plusw2,7,c
 27119  0160BE  D010               	goto	l11259
 27120                           
 27121                           ;mbmc.c: 93:    C.p_inverter = 0.0001;
 27122  0160C0  0E17               	movlw	23
 27123  0160C2  006F FFA0  F777    	movff	wreg,_C+120	;volatile
 27124  0160C8  0EB7               	movlw	183
 27125  0160CA  006F FFA0  F778    	movff	wreg,_C+121	;volatile
 27126  0160D0  0ED1               	movlw	209
 27127  0160D2  006F FFA0  F779    	movff	wreg,_C+122	;volatile
 27128  0160D8  0E38               	movlw	56
 27129  0160DA  006F FFA0  F77A    	movff	wreg,_C+123	;volatile
 27130  0160E0                     l11259:
 27131                           
 27132                           ;mbmc.c: 95:  start_bsoc();
 27133  0160E0  EC40  F0E1         	call	_start_bsoc	;wreg free
 27134                           
 27135                           ; BSR set to: 57
 27136                           ;mbmc.c: 96:  C.update = 1;
 27137  0160E4  0E01               	movlw	1
 27138  0160E6  006F FFA0  F7B7    	movff	wreg,_C+184	;volatile
 27139                           
 27140                           ; BSR set to: 57
 27141                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 27142  0160EC  0012               	return		;funcret
 27143  0160EE                     __end_of_calc_model_data:
 27144                           	opt callstack 0
 27145                           
 27146 ;; *************** function _stop_bsoc *****************
 27147 ;; Defined at:
 27148 ;;		line 129 in file "bsoc.c"
 27149 ;; Parameters:    Size  Location     Type
 27150 ;;		None
 27151 ;; Auto vars:     Size  Location     Type
 27152 ;;		None
 27153 ;; Return value:  Size  Location     Type
 27154 ;;                  1  [STACK] void 
 27155 ;; Registers used:
 27156 ;;		None
 27157 ;; Tracked objects:
 27158 ;;		On entry : 0/1
 27159 ;;		On exit  : 3F/39
 27160 ;;		Unchanged: 0/0
 27161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27165 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27166 ;;Total ram usage:        0 bytes
 27167 ;; Hardware stack levels used:    1
 27168 ;; Hardware stack levels required when called:   15
 27169 ;; This function calls:
 27170 ;;		Nothing
 27171 ;; This function is called by:
 27172 ;;		_calc_model_data
 27173 ;; This function uses a reentrant model
 27174 ;;
 27175                           
 27176                           	psect	text108
 27177  01C580                     __ptext108:
 27178                           	opt callstack 0
 27179  01C580                     _stop_bsoc:
 27180                           	opt callstack 14
 27181                           
 27182                           ;bsoc.c: 132:  PIE6bits.TMR3IE = 0;
 27183                           
 27184                           ; BSR set to: 57
 27185                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27186                           ;incstack = 0
 27187  01C580  0139               	movlb	57	; () banked
 27188  01C582  9D96               	bcf	150,6,b	;volatile
 27189                           
 27190                           ; BSR set to: 57
 27191                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 27192  01C584  0012               	return		;funcret
 27193  01C586                     __end_of_stop_bsoc:
 27194                           	opt callstack 0
 27195                           
 27196 ;; *************** function _start_bsoc *****************
 27197 ;; Defined at:
 27198 ;;		line 120 in file "bsoc.c"
 27199 ;; Parameters:    Size  Location     Type
 27200 ;;		None
 27201 ;; Auto vars:     Size  Location     Type
 27202 ;;		None
 27203 ;; Return value:  Size  Location     Type
 27204 ;;                  1  [STACK] void 
 27205 ;; Registers used:
 27206 ;;		wreg, status,2, status,0, btemp+11
 27207 ;; Tracked objects:
 27208 ;;		On entry : 0/1
 27209 ;;		On exit  : 3F/39
 27210 ;;		Unchanged: 0/0
 27211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27215 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27216 ;;Total ram usage:        0 bytes
 27217 ;; Hardware stack levels used:    1
 27218 ;; Hardware stack levels required when called:   15
 27219 ;; This function calls:
 27220 ;;		Nothing
 27221 ;; This function is called by:
 27222 ;;		_calc_model_data
 27223 ;; This function uses a reentrant model
 27224 ;;
 27225                           
 27226                           	psect	text109
 27227  01C280                     __ptext109:
 27228                           	opt callstack 0
 27229  01C280                     _start_bsoc:
 27230                           	opt callstack 14
 27231                           
 27232                           ;bsoc.c: 123:  PIE6bits.TMR3IE = 1;
 27233                           
 27234                           ; BSR set to: 57
 27235                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27236                           ;incstack = 0
 27237  01C280  0139               	movlb	57	; () banked
 27238  01C282  8D96               	bsf	150,6,b	;volatile
 27239                           
 27240                           ; BSR set to: 57
 27241  01C284  A4BE               	btfss	190,2,c	;volatile
 27242  01C286  D002               	goto	u9760
 27243  01C288  0E01               	movlw	1
 27244  01C28A  D001               	goto	u9766
 27245  01C28C                     u9760:
 27246  01C28C  0E00               	movlw	0
 27247  01C28E                     u9766:
 27248  01C28E  0AFF               	xorlw	255
 27249  01C290  6E0C               	movwf	(btemp+11)^0,c
 27250  01C292  460C               	rlncf	(btemp+11)^0,f,c
 27251  01C294  460C               	rlncf	(btemp+11)^0,f,c
 27252  01C296  50BE               	movf	190,w,c	;volatile
 27253  01C298  180C               	xorwf	(btemp+11)^0,w,c
 27254  01C29A  0BFB               	andlw	-5
 27255  01C29C  180C               	xorwf	(btemp+11)^0,w,c
 27256  01C29E  6EBE               	movwf	190,c	;volatile
 27257                           
 27258                           ; BSR set to: 57
 27259                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 27260  01C2A0  0012               	return		;funcret
 27261  01C2A2                     __end_of_start_bsoc:
 27262                           	opt callstack 0
 27263                           
 27264 ;; *************** function _lp_filter *****************
 27265 ;; Defined at:
 27266 ;;		line 29 in file "mbmc.c"
 27267 ;; Parameters:    Size  Location     Type
 27268 ;;  new             4  [STACK] const float 
 27269 ;;  bn              1  [STACK] const unsigned char 
 27270 ;;  slow            1  [STACK] const char 
 27271 ;; Auto vars:     Size  Location     Type
 27272 ;;  lp_speed        4  [STACK] float 
 27273 ;; Return value:  Size  Location     Type
 27274 ;;                  4  [STACK] float 
 27275 ;; Registers used:
 27276 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 27277 ;; Tracked objects:
 27278 ;;		On entry : 0/1
 27279 ;;		On exit  : 0/0
 27280 ;;		Unchanged: 0/0
 27281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27285 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27286 ;;Total ram usage:        0 bytes
 27287 ;; Hardware stack levels used:    1
 27288 ;; Hardware stack levels required when called:   17
 27289 ;; This function calls:
 27290 ;;		___fladd
 27291 ;;		___flmul
 27292 ;;		___flsub
 27293 ;; This function is called by:
 27294 ;;		_main
 27295 ;;		_convert_adc_data
 27296 ;;		_calc_model_data
 27297 ;; This function uses a reentrant model
 27298 ;;
 27299                           
 27300                           	psect	text110
 27301  01888E                     __ptext110:
 27302                           	opt callstack 0
 27303  01888E                     _lp_filter:
 27304                           	opt callstack 0
 27305                           
 27306                           ; BSR set to: 57
 27307                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27308  01888E  52E6               	movf	postinc1,f,c
 27309  018890  52E6               	movf	postinc1,f,c
 27310  018892  52E6               	movf	postinc1,f,c
 27311  018894  52E6               	movf	postinc1,f,c
 27312                           
 27313                           ;mbmc.c: 29: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 30: {;mbmc.c: 31:  static float smooth[16 +5];;mbmc.c: 32:  float lp_speed;;mbmc.c: 3
      +                          4:  if (bn >= 16 +5)
 27314                           ;stkvar	_bn @ sp[(-4)+-5]
 27315                           
 27316                           ;incstack = 0
 27317  018896  0EF7               	movlw	-9
 27318  018898  006F FF8C  F001    	movff	plusw1,btemp
 27319  01889E  0E14               	movlw	20
 27320  0188A0  6401               	cpfsgt	btemp^0,c
 27321  0188A2  D011               	goto	l10583
 27322  0188A4                     u9620:
 27323                           
 27324                           ;mbmc.c: 35:   return new;
 27325                           ;stkvar	_new @ sp[(-4)+-4]
 27326  0188A4  0EF8               	movlw	-8
 27327  0188A6  006F FF8C  F001    	movff	plusw1,btemp
 27328  0188AC  0EF9               	movlw	-7
 27329  0188AE  006F FF8C  F002    	movff	plusw1,btemp+1
 27330  0188B4  0EFA               	movlw	-6
 27331  0188B6  006F FF8C  F003    	movff	plusw1,btemp+2
 27332  0188BC  0EFB               	movlw	-5
 27333  0188BE  006F FF8C  F004    	movff	plusw1,btemp+3
 27334  0188C4  D0BD               	goto	l1907
 27335  0188C6                     l10583:
 27336                           
 27337                           ;mbmc.c: 37:  if (slow == (-1)) {
 27338                           ;stkvar	_slow @ sp[(-4)+-6]
 27339  0188C6  0EF6               	movlw	-10
 27340  0188C8  28E3               	incf	plusw1,w,c
 27341  0188CA  A4D8               	btfss	status,2,c
 27342  0188CC  D012               	goto	l10591
 27343                           
 27344                           ;mbmc.c: 38:   smooth[bn] = 0.0;
 27345                           ;stkvar	_bn @ sp[(-4)+-5]
 27346  0188CE  0EF7               	movlw	-9
 27347  0188D0  50E3               	movf	plusw1,w,c
 27348  0188D2  0D04               	mullw	4
 27349  0188D4  0E00               	movlw	low lp_filter@smooth
 27350  0188D6  24F3               	addwf	243,w,c
 27351  0188D8  6ED9               	movwf	fsr2l,c
 27352  0188DA  0E02               	movlw	high lp_filter@smooth
 27353  0188DC  20F4               	addwfc	prodh,w,c
 27354  0188DE  6EDA               	movwf	fsr2h,c
 27355  0188E0  0E00               	movlw	0
 27356  0188E2  6EDE               	movwf	postinc2,c
 27357  0188E4  0E00               	movlw	0
 27358  0188E6  6EDE               	movwf	postinc2,c
 27359  0188E8  0E00               	movlw	0
 27360  0188EA  6EDE               	movwf	postinc2,c
 27361  0188EC  0E00               	movlw	0
 27362  0188EE  6EDD               	movwf	postdec2,c
 27363  0188F0  D7D9               	goto	u9620
 27364  0188F2                     l10591:
 27365                           
 27366                           ;mbmc.c: 42:  if (slow) {
 27367                           ;stkvar	_slow @ sp[(-4)+-6]
 27368  0188F2  0EF6               	movlw	-10
 27369  0188F4  50E3               	movf	plusw1,w,c
 27370  0188F6  B4D8               	btfsc	status,2,c
 27371  0188F8  D006               	goto	l10595
 27372                           
 27373                           ;mbmc.c: 43:   lp_speed = 0.033;
 27374  0188FA  0E02               	movlw	2
 27375  0188FC  6E09               	movwf	(btemp+8)^0,c
 27376  0188FE  0E2B               	movlw	43
 27377  018900  6E0A               	movwf	(btemp+9)^0,c
 27378  018902  0E07               	movlw	7
 27379  018904  D005               	goto	L32
 27380  018906                     l10595:
 27381                           
 27382                           ;mbmc.c: 45:   lp_speed = 0.066;
 27383  018906  0E02               	movlw	2
 27384  018908  6E09               	movwf	(btemp+8)^0,c
 27385  01890A  0E2B               	movlw	43
 27386  01890C  6E0A               	movwf	(btemp+9)^0,c
 27387  01890E  0E87               	movlw	135
 27388  018910                     L32:
 27389  018910  6E0B               	movwf	(btemp+10)^0,c
 27390  018912  0E3D               	movlw	61
 27391  018914  6E0C               	movwf	(btemp+11)^0,c
 27392                           
 27393                           ;stkvar	_lp_speed @ sp[(-4)+0]
 27394  018916  0EFC               	movlw	-4
 27395  018918  0060  F027  FFE3   	movff	btemp+8,plusw1
 27396  01891E  0EFD               	movlw	-3
 27397  018920  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27398  018926  0EFE               	movlw	-2
 27399  018928  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27400  01892E  0EFF               	movlw	-1
 27401  018930  0060  F033  FFE3   	movff	btemp+11,plusw1
 27402                           
 27403                           ;mbmc.c: 48:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 27404                           ;stkvar	_bn @ sp[(-4)+-5]
 27405  018936  0EF7               	movlw	-9
 27406  018938  50E3               	movf	plusw1,w,c
 27407  01893A  0D04               	mullw	4
 27408  01893C  0E00               	movlw	low lp_filter@smooth
 27409  01893E  24F3               	addwf	243,w,c
 27410  018940  6ED9               	movwf	fsr2l,c
 27411  018942  0E02               	movlw	high lp_filter@smooth
 27412  018944  20F4               	addwfc	prodh,w,c
 27413  018946  6EDA               	movwf	fsr2h,c
 27414  018948  006F FF7B FFE6     	movff	postinc2,postinc1
 27415  01894E  006F FF7B FFE6     	movff	postinc2,postinc1
 27416  018954  006F FF7B FFE6     	movff	postinc2,postinc1
 27417  01895A  006F FF7B FFE6     	movff	postinc2,postinc1
 27418                           
 27419                           ;stkvar	_lp_speed @ sp[(-8)+0]
 27420  018960  0EF8               	movlw	-8
 27421  018962  006F FF8F FFE6     	movff	plusw1,postinc1
 27422  018968  006F FF8F FFE6     	movff	plusw1,postinc1
 27423  01896E  006F FF8F FFE6     	movff	plusw1,postinc1
 27424  018974  006F FF8F FFE6     	movff	plusw1,postinc1
 27425                           
 27426                           ;stkvar	_bn @ sp[(-12)+-5]
 27427  01897A  0EEF               	movlw	-17
 27428  01897C  50E3               	movf	plusw1,w,c
 27429  01897E  0D04               	mullw	4
 27430  018980  0E00               	movlw	low lp_filter@smooth
 27431  018982  24F3               	addwf	243,w,c
 27432  018984  6ED9               	movwf	fsr2l,c
 27433  018986  0E02               	movlw	high lp_filter@smooth
 27434  018988  20F4               	addwfc	prodh,w,c
 27435  01898A  6EDA               	movwf	fsr2h,c
 27436  01898C  006F FF7B FFE6     	movff	postinc2,postinc1
 27437  018992  006F FF7B FFE6     	movff	postinc2,postinc1
 27438  018998  006F FF7B FFE6     	movff	postinc2,postinc1
 27439  01899E  006F FF7B FFE6     	movff	postinc2,postinc1
 27440                           
 27441                           ;stkvar	_new @ sp[(-16)+-4]
 27442  0189A4  0EEC               	movlw	-20
 27443  0189A6  006F FF8F FFE6     	movff	plusw1,postinc1
 27444  0189AC  006F FF8F FFE6     	movff	plusw1,postinc1
 27445  0189B2  006F FF8F FFE6     	movff	plusw1,postinc1
 27446  0189B8  006F FF8F FFE6     	movff	plusw1,postinc1
 27447  0189BE  ECC0  F0DC         	call	___flsub	;wreg free
 27448  0189C2  0060  F007  FFE6   	movff	btemp,postinc1
 27449  0189C8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27450  0189CE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27451  0189D4  0060  F013  FFE6   	movff	btemp+3,postinc1
 27452  0189DA  ECD7  F09E         	call	___flmul	;wreg free
 27453  0189DE  0060  F007  FFE6   	movff	btemp,postinc1
 27454  0189E4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27455  0189EA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27456  0189F0  0060  F013  FFE6   	movff	btemp+3,postinc1
 27457  0189F6  ECEC  F0A2         	call	___fladd	;wreg free
 27458                           
 27459                           ;stkvar	_bn @ sp[(-4)+-5]
 27460  0189FA  0EF7               	movlw	-9
 27461  0189FC  50E3               	movf	plusw1,w,c
 27462  0189FE  0D04               	mullw	4
 27463  018A00  0E00               	movlw	low lp_filter@smooth
 27464  018A02  24F3               	addwf	243,w,c
 27465  018A04  6ED9               	movwf	fsr2l,c
 27466  018A06  0E02               	movlw	high lp_filter@smooth
 27467  018A08  20F4               	addwfc	prodh,w,c
 27468  018A0A  6EDA               	movwf	fsr2h,c
 27469  018A0C  0060  F007  FFDE   	movff	btemp,postinc2
 27470  018A12  0060  F00B  FFDE   	movff	btemp+1,postinc2
 27471  018A18  0060  F00F  FFDE   	movff	btemp+2,postinc2
 27472  018A1E  0060  F013  FFDD   	movff	btemp+3,postdec2
 27473  018A24  52DD               	movf	postdec2,f,c
 27474  018A26  52DD               	movf	postdec2,f,c
 27475  018A28  006F FF78  F001    	movff	postinc2,btemp
 27476  018A2E  006F FF78  F002    	movff	postinc2,btemp+1
 27477  018A34  006F FF78  F003    	movff	postinc2,btemp+2
 27478  018A3A  006F FF78  F004    	movff	postinc2,btemp+3
 27479  018A40                     l1907:
 27480                           
 27481                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 27482  018A40  0EF6               	movlw	246
 27483  018A42  26E1               	addwf	fsr1l,f,c
 27484  018A44  0EFF               	movlw	255
 27485  018A46  22E2               	addwfc	fsr1h,f,c
 27486  018A48  0012               	return		;funcret
 27487  018A4A                     __end_of_lp_filter:
 27488                           	opt callstack 0
 27489                           
 27490 ;; *************** function ___flsub *****************
 27491 ;; Defined at:
 27492 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 27493 ;; Parameters:    Size  Location     Type
 27494 ;;  b               4  [STACK] float 
 27495 ;;  a               4  [STACK] float 
 27496 ;; Auto vars:     Size  Location     Type
 27497 ;;		None
 27498 ;; Return value:  Size  Location     Type
 27499 ;;                  4  [STACK] float 
 27500 ;; Registers used:
 27501 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 27502 ;; Tracked objects:
 27503 ;;		On entry : 0/0
 27504 ;;		On exit  : 0/0
 27505 ;;		Unchanged: 0/0
 27506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27511 ;;Total ram usage:        0 bytes
 27512 ;; Hardware stack levels used:    1
 27513 ;; Hardware stack levels required when called:   16
 27514 ;; This function calls:
 27515 ;;		___fladd
 27516 ;; This function is called by:
 27517 ;;		_conv_raw_result
 27518 ;;		_lp_filter
 27519 ;;		_calc_model_data
 27520 ;;		_calc_ror_data
 27521 ;;		_esr_check
 27522 ;;		_efgtoa
 27523 ;; This function uses a reentrant model
 27524 ;;
 27525                           
 27526                           	psect	text111
 27527  01B980                     __ptext111:
 27528                           	opt callstack 0
 27529  01B980                     ___flsub:
 27530                           	opt callstack 0
 27531                           
 27532                           ;stkvar	_a @ sp[(0)+-8]
 27533                           
 27534                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27535                           ;incstack = 0
 27536 ;; hardware stack exceeded
 27537  01B980  0EFB               	movlw	-5
 27538  01B982  7EE3               	btg	plusw1,7,c
 27539                           
 27540                           ;stkvar	_a @ sp[(0)+-8]
 27541  01B984  0EF8               	movlw	-8
 27542  01B986  006F FF8F FFE6     	movff	plusw1,postinc1
 27543  01B98C  006F FF8F FFE6     	movff	plusw1,postinc1
 27544  01B992  006F FF8F FFE6     	movff	plusw1,postinc1
 27545  01B998  006F FF8F FFE6     	movff	plusw1,postinc1
 27546                           
 27547                           ;stkvar	_b @ sp[(-4)+-4]
 27548  01B99E  0EF8               	movlw	-8
 27549  01B9A0  006F FF8F FFE6     	movff	plusw1,postinc1
 27550  01B9A6  006F FF8F FFE6     	movff	plusw1,postinc1
 27551  01B9AC  006F FF8F FFE6     	movff	plusw1,postinc1
 27552  01B9B2  006F FF8F FFE6     	movff	plusw1,postinc1
 27553  01B9B8  ECEC  F0A2         	call	___fladd	;wreg free
 27554                           
 27555                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 27556  01B9BC  0EF8               	movlw	248
 27557  01B9BE  26E1               	addwf	fsr1l,f,c
 27558  01B9C0  0EFF               	movlw	255
 27559  01B9C2  22E2               	addwfc	fsr1h,f,c
 27560  01B9C4  0012               	return		;funcret
 27561  01B9C6                     __end_of___flsub:
 27562                           	opt callstack 0
 27563                           
 27564 ;; *************** function ___fladd *****************
 27565 ;; Defined at:
 27566 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 27567 ;; Parameters:    Size  Location     Type
 27568 ;;  b               4  [STACK] float 
 27569 ;;  a               4  [STACK] float 
 27570 ;; Auto vars:     Size  Location     Type
 27571 ;;  grs             1  [STACK] unsigned char 
 27572 ;;  bexp            1  [STACK] unsigned char 
 27573 ;;  aexp            1  [STACK] unsigned char 
 27574 ;;  signs           1  [STACK] unsigned char 
 27575 ;; Return value:  Size  Location     Type
 27576 ;;                  4  [STACK] unsigned char 
 27577 ;; Registers used:
 27578 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 27579 ;; Tracked objects:
 27580 ;;		On entry : 0/0
 27581 ;;		On exit  : 0/0
 27582 ;;		Unchanged: 0/0
 27583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27588 ;;Total ram usage:        0 bytes
 27589 ;; Hardware stack levels used:    1
 27590 ;; Hardware stack levels required when called:   15
 27591 ;; This function calls:
 27592 ;;		Nothing
 27593 ;; This function is called by:
 27594 ;;		_main
 27595 ;;		_conv_raw_result
 27596 ;;		_lp_filter
 27597 ;;		_calc_model_data
 27598 ;;		_efgtoa
 27599 ;;		___asfladd
 27600 ;;		___flsub
 27601 ;; This function uses a reentrant model
 27602 ;;
 27603                           
 27604                           	psect	text112
 27605  0145D8                     __ptext112:
 27606                           	opt callstack 0
 27607  0145D8                     ___fladd:
 27608                           	opt callstack 0
 27609                           
 27610                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27611  0145D8  52E6               	movf	postinc1,f,c
 27612  0145DA  52E6               	movf	postinc1,f,c
 27613  0145DC  52E6               	movf	postinc1,f,c
 27614  0145DE  52E6               	movf	postinc1,f,c
 27615                           
 27616                           ;stkvar	_b @ sp[(-4)+-4]
 27617                           
 27618                           ;incstack = 0
 27619 ;; hardware stack exceeded
 27620  0145E0  0EFB               	movlw	251
 27621  0145E2  24E1               	addwf	fsr1l,w,c
 27622  0145E4  6ED9               	movwf	fsr2l,c
 27623  0145E6  0EFF               	movlw	255
 27624  0145E8  20E2               	addwfc	fsr1h,w,c
 27625  0145EA  6EDA               	movwf	fsr2h,c
 27626  0145EC  50DF               	movf	indf2,w,c
 27627  0145EE  6E0C               	movwf	(btemp+11)^0,c
 27628  0145F0  0E80               	movlw	128
 27629  0145F2  160C               	andwf	(btemp+11)^0,f,c
 27630                           
 27631                           ;stkvar	_signs @ sp[(-4)+3]
 27632  0145F4  0EFF               	movlw	-1
 27633  0145F6  0060  F033  FFE3   	movff	btemp+11,plusw1
 27634                           
 27635                           ;stkvar	_b @ sp[(-4)+-4]
 27636  0145FC  0EFB               	movlw	251
 27637  0145FE  24E1               	addwf	fsr1l,w,c
 27638  014600  6ED9               	movwf	fsr2l,c
 27639  014602  0EFF               	movlw	255
 27640  014604  20E2               	addwfc	fsr1h,w,c
 27641  014606  6EDA               	movwf	fsr2h,c
 27642  014608  50DF               	movf	indf2,w,c
 27643  01460A  6E0C               	movwf	(btemp+11)^0,c
 27644  01460C  90D8               	bcf	status,0,c
 27645  01460E  340C               	rlcf	(btemp+11)^0,w,c
 27646  014610  6E0B               	movwf	(btemp+10)^0,c
 27647                           
 27648                           ;stkvar	_bexp @ sp[(-4)+1]
 27649  014612  0EFD               	movlw	-3
 27650  014614  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27651                           
 27652                           ;stkvar	_b @ sp[(-4)+-4]
 27653  01461A  0EFA               	movlw	250
 27654  01461C  24E1               	addwf	fsr1l,w,c
 27655  01461E  6ED9               	movwf	fsr2l,c
 27656  014620  0EFF               	movlw	255
 27657  014622  20E2               	addwfc	fsr1h,w,c
 27658  014624  6EDA               	movwf	fsr2h,c
 27659  014626  AEDF               	btfss	indf2,7,c
 27660  014628  D002               	goto	l7889
 27661                           
 27662                           ;stkvar	_bexp @ sp[(-4)+1]
 27663  01462A  0EFD               	movlw	-3
 27664  01462C  80E3               	bsf	plusw1,0,c
 27665  01462E                     l7889:
 27666                           
 27667                           ;stkvar	_bexp @ sp[(-4)+1]
 27668  01462E  0EFD               	movlw	-3
 27669  014630  50E3               	movf	plusw1,w,c
 27670  014632  B4D8               	btfsc	status,2,c
 27671  014634  D027               	goto	l7899
 27672                           
 27673                           ;stkvar	_bexp @ sp[(-4)+1]
 27674  014636  0EFD               	movlw	-3
 27675  014638  28E3               	incf	plusw1,w,c
 27676  01463A  A4D8               	btfss	status,2,c
 27677  01463C  D018               	goto	l7895
 27678  01463E  0E00               	movlw	0
 27679  014640  6E09               	movwf	(btemp+8)^0,c
 27680  014642  0E00               	movlw	0
 27681  014644  6E0A               	movwf	(btemp+9)^0,c
 27682  014646  0E00               	movlw	0
 27683  014648  6E0B               	movwf	(btemp+10)^0,c
 27684  01464A  0E00               	movlw	0
 27685  01464C  6E0C               	movwf	(btemp+11)^0,c
 27686                           
 27687                           ;stkvar	_b @ sp[(-4)+-4]
 27688  01464E  0EF8               	movlw	-8
 27689  014650  0060  F027  FFE3   	movff	btemp+8,plusw1
 27690  014656  0EF9               	movlw	-7
 27691  014658  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27692  01465E  0EFA               	movlw	-6
 27693  014660  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27694  014666  0EFB               	movlw	-5
 27695  014668  0060  F033  FFE3   	movff	btemp+11,plusw1
 27696  01466E                     l7895:
 27697                           
 27698                           ;stkvar	_b @ sp[(-4)+-4]
 27699  01466E  0EFA               	movlw	-6
 27700  014670  8EE3               	bsf	plusw1,7,c
 27701                           
 27702                           ;stkvar	_b @ sp[(-4)+-4]
 27703  014672  0EFB               	movlw	251
 27704  014674  24E1               	addwf	fsr1l,w,c
 27705  014676  6ED9               	movwf	fsr2l,c
 27706  014678  0EFF               	movlw	255
 27707  01467A  20E2               	addwfc	fsr1h,w,c
 27708  01467C  6EDA               	movwf	fsr2h,c
 27709  01467E  0E00               	movlw	0
 27710  014680  6EDF               	movwf	indf2,c
 27711  014682  D018               	goto	l7901
 27712  014684                     l7899:
 27713  014684  0E00               	movlw	0
 27714  014686  6E09               	movwf	(btemp+8)^0,c
 27715  014688  0E00               	movlw	0
 27716  01468A  6E0A               	movwf	(btemp+9)^0,c
 27717  01468C  0E00               	movlw	0
 27718  01468E  6E0B               	movwf	(btemp+10)^0,c
 27719  014690  0E00               	movlw	0
 27720  014692  6E0C               	movwf	(btemp+11)^0,c
 27721                           
 27722                           ;stkvar	_b @ sp[(-4)+-4]
 27723  014694  0EF8               	movlw	-8
 27724  014696  0060  F027  FFE3   	movff	btemp+8,plusw1
 27725  01469C  0EF9               	movlw	-7
 27726  01469E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27727  0146A4  0EFA               	movlw	-6
 27728  0146A6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27729  0146AC  0EFB               	movlw	-5
 27730  0146AE  0060  F033  FFE3   	movff	btemp+11,plusw1
 27731  0146B4                     l7901:
 27732                           
 27733                           ;stkvar	_a @ sp[(-4)+-8]
 27734  0146B4  0EF7               	movlw	247
 27735  0146B6  24E1               	addwf	fsr1l,w,c
 27736  0146B8  6ED9               	movwf	fsr2l,c
 27737  0146BA  0EFF               	movlw	255
 27738  0146BC  20E2               	addwfc	fsr1h,w,c
 27739  0146BE  6EDA               	movwf	fsr2h,c
 27740  0146C0  50DF               	movf	indf2,w,c
 27741  0146C2  6E0C               	movwf	(btemp+11)^0,c
 27742  0146C4  0E80               	movlw	128
 27743  0146C6  160C               	andwf	(btemp+11)^0,f,c
 27744                           
 27745                           ;stkvar	_aexp @ sp[(-4)+2]
 27746  0146C8  0EFE               	movlw	-2
 27747  0146CA  0060  F033  FFE3   	movff	btemp+11,plusw1
 27748                           
 27749                           ;stkvar	_signs @ sp[(-4)+3]
 27750                           ;stkvar	_aexp @ sp[(-4)+2]
 27751  0146D0  50E1               	movf	fsr1l,w,c
 27752  0146D2  0FFE               	addlw	-2
 27753  0146D4  6ED9               	movwf	fsr2l,c
 27754  0146D6  50E2               	movf	fsr1h,w,c
 27755  0146D8  6EDA               	movwf	fsr2h,c
 27756  0146DA  0EFF               	movlw	255
 27757  0146DC  22DA               	addwfc	fsr2h,f,c
 27758  0146DE  0EFF               	movlw	-1
 27759  0146E0  50E3               	movf	plusw1,w,c
 27760  0146E2  18DE               	xorwf	postinc2,w,c
 27761  0146E4  B4D8               	btfsc	status,2,c
 27762  0146E6  D002               	goto	l7907
 27763                           
 27764                           ;stkvar	_signs @ sp[(-4)+3]
 27765  0146E8  0EFF               	movlw	-1
 27766  0146EA  8CE3               	bsf	plusw1,6,c
 27767  0146EC                     l7907:
 27768                           
 27769                           ;stkvar	_a @ sp[(-4)+-8]
 27770  0146EC  0EF7               	movlw	247
 27771  0146EE  24E1               	addwf	fsr1l,w,c
 27772  0146F0  6ED9               	movwf	fsr2l,c
 27773  0146F2  0EFF               	movlw	255
 27774  0146F4  20E2               	addwfc	fsr1h,w,c
 27775  0146F6  6EDA               	movwf	fsr2h,c
 27776  0146F8  50DF               	movf	indf2,w,c
 27777  0146FA  6E0C               	movwf	(btemp+11)^0,c
 27778  0146FC  90D8               	bcf	status,0,c
 27779  0146FE  340C               	rlcf	(btemp+11)^0,w,c
 27780  014700  6E0B               	movwf	(btemp+10)^0,c
 27781                           
 27782                           ;stkvar	_aexp @ sp[(-4)+2]
 27783  014702  0EFE               	movlw	-2
 27784  014704  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27785                           
 27786                           ;stkvar	_a @ sp[(-4)+-8]
 27787  01470A  0EF6               	movlw	246
 27788  01470C  24E1               	addwf	fsr1l,w,c
 27789  01470E  6ED9               	movwf	fsr2l,c
 27790  014710  0EFF               	movlw	255
 27791  014712  20E2               	addwfc	fsr1h,w,c
 27792  014714  6EDA               	movwf	fsr2h,c
 27793  014716  AEDF               	btfss	indf2,7,c
 27794  014718  D002               	goto	l7913
 27795                           
 27796                           ;stkvar	_aexp @ sp[(-4)+2]
 27797  01471A  0EFE               	movlw	-2
 27798  01471C  80E3               	bsf	plusw1,0,c
 27799  01471E                     l7913:
 27800                           
 27801                           ;stkvar	_aexp @ sp[(-4)+2]
 27802  01471E  0EFE               	movlw	-2
 27803  014720  50E3               	movf	plusw1,w,c
 27804  014722  B4D8               	btfsc	status,2,c
 27805  014724  D027               	goto	l7923
 27806                           
 27807                           ;stkvar	_aexp @ sp[(-4)+2]
 27808  014726  0EFE               	movlw	-2
 27809  014728  28E3               	incf	plusw1,w,c
 27810  01472A  A4D8               	btfss	status,2,c
 27811  01472C  D018               	goto	l7919
 27812  01472E  0E00               	movlw	0
 27813  014730  6E09               	movwf	(btemp+8)^0,c
 27814  014732  0E00               	movlw	0
 27815  014734  6E0A               	movwf	(btemp+9)^0,c
 27816  014736  0E00               	movlw	0
 27817  014738  6E0B               	movwf	(btemp+10)^0,c
 27818  01473A  0E00               	movlw	0
 27819  01473C  6E0C               	movwf	(btemp+11)^0,c
 27820                           
 27821                           ;stkvar	_a @ sp[(-4)+-8]
 27822  01473E  0EF4               	movlw	-12
 27823  014740  0060  F027  FFE3   	movff	btemp+8,plusw1
 27824  014746  0EF5               	movlw	-11
 27825  014748  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27826  01474E  0EF6               	movlw	-10
 27827  014750  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27828  014756  0EF7               	movlw	-9
 27829  014758  0060  F033  FFE3   	movff	btemp+11,plusw1
 27830  01475E                     l7919:
 27831                           
 27832                           ;stkvar	_a @ sp[(-4)+-8]
 27833  01475E  0EF6               	movlw	-10
 27834  014760  8EE3               	bsf	plusw1,7,c
 27835                           
 27836                           ;stkvar	_a @ sp[(-4)+-8]
 27837  014762  0EF7               	movlw	247
 27838  014764  24E1               	addwf	fsr1l,w,c
 27839  014766  6ED9               	movwf	fsr2l,c
 27840  014768  0EFF               	movlw	255
 27841  01476A  20E2               	addwfc	fsr1h,w,c
 27842  01476C  6EDA               	movwf	fsr2h,c
 27843  01476E  0E00               	movlw	0
 27844  014770  6EDF               	movwf	indf2,c
 27845  014772  D018               	goto	l7925
 27846  014774                     l7923:
 27847  014774  0E00               	movlw	0
 27848  014776  6E09               	movwf	(btemp+8)^0,c
 27849  014778  0E00               	movlw	0
 27850  01477A  6E0A               	movwf	(btemp+9)^0,c
 27851  01477C  0E00               	movlw	0
 27852  01477E  6E0B               	movwf	(btemp+10)^0,c
 27853  014780  0E00               	movlw	0
 27854  014782  6E0C               	movwf	(btemp+11)^0,c
 27855                           
 27856                           ;stkvar	_a @ sp[(-4)+-8]
 27857  014784  0EF4               	movlw	-12
 27858  014786  0060  F027  FFE3   	movff	btemp+8,plusw1
 27859  01478C  0EF5               	movlw	-11
 27860  01478E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27861  014794  0EF6               	movlw	-10
 27862  014796  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27863  01479C  0EF7               	movlw	-9
 27864  01479E  0060  F033  FFE3   	movff	btemp+11,plusw1
 27865  0147A4                     l7925:
 27866                           
 27867                           ;stkvar	_bexp @ sp[(-4)+1]
 27868                           ;stkvar	_aexp @ sp[(-4)+2]
 27869  0147A4  50E1               	movf	fsr1l,w,c
 27870  0147A6  0FFE               	addlw	-2
 27871  0147A8  6ED9               	movwf	fsr2l,c
 27872  0147AA  50E2               	movf	fsr1h,w,c
 27873  0147AC  6EDA               	movwf	fsr2h,c
 27874  0147AE  0EFF               	movlw	255
 27875  0147B0  22DA               	addwfc	fsr2h,f,c
 27876  0147B2  0EFD               	movlw	-3
 27877  0147B4  50E3               	movf	plusw1,w,c
 27878  0147B6  5CDE               	subwf	postinc2,w,c
 27879  0147B8  B0D8               	btfsc	status,0,c
 27880  0147BA  D0A4               	goto	l7961
 27881                           
 27882                           ;stkvar	_signs @ sp[(-4)+3]
 27883  0147BC  0EFF               	movlw	-1
 27884  0147BE  ACE3               	btfss	plusw1,6,c
 27885  0147C0  D002               	goto	l7931
 27886                           
 27887                           ;stkvar	_signs @ sp[(-4)+3]
 27888  0147C2  0EFF               	movlw	-1
 27889  0147C4  7EE3               	btg	plusw1,7,c
 27890  0147C6                     l7931:
 27891                           
 27892                           ;stkvar	_bexp @ sp[(-4)+1]
 27893                           ;stkvar	_grs @ sp[(-4)+0]
 27894  0147C6  0EFD               	movlw	-3
 27895  0147C8  006F FF8C  F001    	movff	plusw1,btemp
 27896  0147CE  0EFC               	movlw	-4
 27897  0147D0  0060  F007  FFE3   	movff	btemp,plusw1
 27898                           
 27899                           ;stkvar	_aexp @ sp[(-4)+2]
 27900                           ;stkvar	_bexp @ sp[(-4)+1]
 27901  0147D6  0EFE               	movlw	-2
 27902  0147D8  006F FF8C  F001    	movff	plusw1,btemp
 27903  0147DE  0EFD               	movlw	-3
 27904  0147E0  0060  F007  FFE3   	movff	btemp,plusw1
 27905                           
 27906                           ;stkvar	_grs @ sp[(-4)+0]
 27907                           ;stkvar	_aexp @ sp[(-4)+2]
 27908  0147E6  0EFC               	movlw	-4
 27909  0147E8  006F FF8C  F001    	movff	plusw1,btemp
 27910  0147EE  0EFE               	movlw	-2
 27911  0147F0  0060  F007  FFE3   	movff	btemp,plusw1
 27912                           
 27913                           ;stkvar	_b @ sp[(-4)+-4]
 27914                           ;stkvar	_grs @ sp[(-4)+0]
 27915  0147F6  0EF8               	movlw	-8
 27916  0147F8  006F FF8C  F001    	movff	plusw1,btemp
 27917  0147FE  0EFC               	movlw	-4
 27918  014800  0060  F007  FFE3   	movff	btemp,plusw1
 27919                           
 27920                           ;stkvar	_a @ sp[(-4)+-8]
 27921                           ;stkvar	_b @ sp[(-4)+-4]
 27922  014806  0EF4               	movlw	-12
 27923  014808  006F FF8C  F001    	movff	plusw1,btemp
 27924  01480E  0EF8               	movlw	-8
 27925  014810  0060  F007  FFE3   	movff	btemp,plusw1
 27926                           
 27927                           ;stkvar	_grs @ sp[(-4)+0]
 27928                           ;stkvar	_a @ sp[(-4)+-8]
 27929  014816  0EFC               	movlw	-4
 27930  014818  006F FF8C  F001    	movff	plusw1,btemp
 27931  01481E  0EF4               	movlw	-12
 27932  014820  0060  F007  FFE3   	movff	btemp,plusw1
 27933                           
 27934                           ;stkvar	_b @ sp[(-4)+-4]
 27935  014826  0EF9               	movlw	249
 27936  014828  24E1               	addwf	fsr1l,w,c
 27937  01482A  6ED9               	movwf	fsr2l,c
 27938  01482C  0EFF               	movlw	255
 27939  01482E  20E2               	addwfc	fsr1h,w,c
 27940  014830  6EDA               	movwf	fsr2h,c
 27941  014832  50DF               	movf	indf2,w,c
 27942  014834  6E0C               	movwf	(btemp+11)^0,c
 27943                           
 27944                           ;stkvar	_grs @ sp[(-4)+0]
 27945  014836  0EFC               	movlw	-4
 27946  014838  0060  F033  FFE3   	movff	btemp+11,plusw1
 27947                           
 27948                           ;stkvar	_a @ sp[(-4)+-8]
 27949  01483E  0EF5               	movlw	245
 27950  014840  24E1               	addwf	fsr1l,w,c
 27951  014842  6ED9               	movwf	fsr2l,c
 27952  014844  0EFF               	movlw	255
 27953  014846  20E2               	addwfc	fsr1h,w,c
 27954  014848  6EDA               	movwf	fsr2h,c
 27955                           
 27956                           ;stkvar	_b @ sp[(-4)+-4]
 27957  01484A  0EF9               	movlw	249
 27958  01484C  24E1               	addwf	fsr1l,w,c
 27959  01484E  6EE9               	movwf	fsr0l,c
 27960  014850  0EFF               	movlw	255
 27961  014852  20E2               	addwfc	fsr1h,w,c
 27962  014854  6EEA               	movwf	fsr0h,c
 27963  014856  006F FF7F FFEF     	movff	indf2,indf0
 27964                           
 27965                           ;stkvar	_grs @ sp[(-4)+0]
 27966                           ;stkvar	_a @ sp[(-4)+-8]
 27967  01485C  0EF5               	movlw	245
 27968  01485E  24E1               	addwf	fsr1l,w,c
 27969  014860  6ED9               	movwf	fsr2l,c
 27970  014862  0EFF               	movlw	255
 27971  014864  20E2               	addwfc	fsr1h,w,c
 27972  014866  6EDA               	movwf	fsr2h,c
 27973  014868  0EFC               	movlw	-4
 27974  01486A  006F FF8F FFDF     	movff	plusw1,indf2
 27975                           
 27976                           ;stkvar	_b @ sp[(-4)+-4]
 27977  014870  0EFA               	movlw	250
 27978  014872  24E1               	addwf	fsr1l,w,c
 27979  014874  6ED9               	movwf	fsr2l,c
 27980  014876  0EFF               	movlw	255
 27981  014878  20E2               	addwfc	fsr1h,w,c
 27982  01487A  6EDA               	movwf	fsr2h,c
 27983  01487C  50DF               	movf	indf2,w,c
 27984  01487E  6E0C               	movwf	(btemp+11)^0,c
 27985                           
 27986                           ;stkvar	_grs @ sp[(-4)+0]
 27987  014880  0EFC               	movlw	-4
 27988  014882  0060  F033  FFE3   	movff	btemp+11,plusw1
 27989                           
 27990                           ;stkvar	_a @ sp[(-4)+-8]
 27991  014888  0EF6               	movlw	246
 27992  01488A  24E1               	addwf	fsr1l,w,c
 27993  01488C  6ED9               	movwf	fsr2l,c
 27994  01488E  0EFF               	movlw	255
 27995  014890  20E2               	addwfc	fsr1h,w,c
 27996  014892  6EDA               	movwf	fsr2h,c
 27997                           
 27998                           ;stkvar	_b @ sp[(-4)+-4]
 27999  014894  0EFA               	movlw	250
 28000  014896  24E1               	addwf	fsr1l,w,c
 28001  014898  6EE9               	movwf	fsr0l,c
 28002  01489A  0EFF               	movlw	255
 28003  01489C  20E2               	addwfc	fsr1h,w,c
 28004  01489E  6EEA               	movwf	fsr0h,c
 28005  0148A0  006F FF7F FFEF     	movff	indf2,indf0
 28006                           
 28007                           ;stkvar	_grs @ sp[(-4)+0]
 28008                           ;stkvar	_a @ sp[(-4)+-8]
 28009  0148A6  0EF6               	movlw	246
 28010  0148A8  24E1               	addwf	fsr1l,w,c
 28011  0148AA  6ED9               	movwf	fsr2l,c
 28012  0148AC  0EFF               	movlw	255
 28013  0148AE  20E2               	addwfc	fsr1h,w,c
 28014  0148B0  6EDA               	movwf	fsr2h,c
 28015  0148B2  0EFC               	movlw	-4
 28016  0148B4  006F FF8F FFDF     	movff	plusw1,indf2
 28017                           
 28018                           ;stkvar	_b @ sp[(-4)+-4]
 28019  0148BA  0EFB               	movlw	251
 28020  0148BC  24E1               	addwf	fsr1l,w,c
 28021  0148BE  6ED9               	movwf	fsr2l,c
 28022  0148C0  0EFF               	movlw	255
 28023  0148C2  20E2               	addwfc	fsr1h,w,c
 28024  0148C4  6EDA               	movwf	fsr2h,c
 28025  0148C6  50DF               	movf	indf2,w,c
 28026  0148C8  6E0C               	movwf	(btemp+11)^0,c
 28027                           
 28028                           ;stkvar	_grs @ sp[(-4)+0]
 28029  0148CA  0EFC               	movlw	-4
 28030  0148CC  0060  F033  FFE3   	movff	btemp+11,plusw1
 28031                           
 28032                           ;stkvar	_a @ sp[(-4)+-8]
 28033  0148D2  0EF7               	movlw	247
 28034  0148D4  24E1               	addwf	fsr1l,w,c
 28035  0148D6  6ED9               	movwf	fsr2l,c
 28036  0148D8  0EFF               	movlw	255
 28037  0148DA  20E2               	addwfc	fsr1h,w,c
 28038  0148DC  6EDA               	movwf	fsr2h,c
 28039                           
 28040                           ;stkvar	_b @ sp[(-4)+-4]
 28041  0148DE  0EFB               	movlw	251
 28042  0148E0  24E1               	addwf	fsr1l,w,c
 28043  0148E2  6EE9               	movwf	fsr0l,c
 28044  0148E4  0EFF               	movlw	255
 28045  0148E6  20E2               	addwfc	fsr1h,w,c
 28046  0148E8  6EEA               	movwf	fsr0h,c
 28047  0148EA  006F FF7F FFEF     	movff	indf2,indf0
 28048                           
 28049                           ;stkvar	_grs @ sp[(-4)+0]
 28050                           ;stkvar	_a @ sp[(-4)+-8]
 28051  0148F0  0EF7               	movlw	247
 28052  0148F2  24E1               	addwf	fsr1l,w,c
 28053  0148F4  6ED9               	movwf	fsr2l,c
 28054  0148F6  0EFF               	movlw	255
 28055  0148F8  20E2               	addwfc	fsr1h,w,c
 28056  0148FA  6EDA               	movwf	fsr2h,c
 28057  0148FC  0EFC               	movlw	-4
 28058  0148FE  006F FF8F FFDF     	movff	plusw1,indf2
 28059  014904                     l7961:
 28060                           
 28061                           ;stkvar	_grs @ sp[(-4)+0]
 28062  014904  0EFC               	movlw	-4
 28063  014906  6AE3               	clrf	plusw1,c
 28064                           
 28065                           ;stkvar	_aexp @ sp[(-4)+2]
 28066  014908  0EFE               	movlw	-2
 28067  01490A  50E3               	movf	plusw1,w,c
 28068  01490C  6E0B               	movwf	(btemp+10)^0,c
 28069  01490E  6A0C               	clrf	(btemp+11)^0,c
 28070                           
 28071                           ;stkvar	_bexp @ sp[(-4)+1]
 28072  014910  0EFD               	movlw	-3
 28073  014912  50E3               	movf	plusw1,w,c
 28074  014914  5E0B               	subwf	(btemp+10)^0,f,c
 28075  014916  0E00               	movlw	0
 28076  014918  5A0C               	subwfb	(btemp+11)^0,f,c
 28077  01491A  BE0C               	btfsc	(btemp+11)^0,7,c
 28078  01491C  D062               	goto	l7985
 28079  01491E  500C               	movf	(btemp+11)^0,w,c
 28080  014920  E104               	bnz	u5630
 28081  014922  0E1A               	movlw	26
 28082  014924  5C0B               	subwf	(btemp+10)^0,w,c
 28083  014926  A0D8               	btfss	status,0,c
 28084  014928  D05C               	goto	l7985
 28085  01492A                     u5630:
 28086                           
 28087                           ;stkvar	_b @ sp[(-4)+-4]
 28088  01492A  0EF8               	movlw	-8
 28089  01492C  50E3               	movf	plusw1,w,c
 28090  01492E  E10A               	bnz	u5641
 28091  014930  0EF9               	movlw	-7
 28092  014932  50E3               	movf	plusw1,w,c
 28093  014934  E107               	bnz	u5641
 28094  014936  0EFA               	movlw	-6
 28095  014938  50E3               	movf	plusw1,w,c
 28096  01493A  E104               	bnz	u5641
 28097  01493C  0EFB               	movlw	-5
 28098  01493E  50E3               	movf	plusw1,w,c
 28099  014940  B4D8               	btfsc	status,2,c
 28100  014942  D003               	goto	u5640
 28101  014944                     u5641:
 28102  014944  6A0C               	clrf	(btemp+11)^0,c
 28103  014946  2A0C               	incf	(btemp+11)^0,f,c
 28104  014948  D001               	goto	u5658
 28105  01494A                     u5640:
 28106  01494A  6A0C               	clrf	(btemp+11)^0,c
 28107  01494C                     u5658:
 28108                           
 28109                           ;stkvar	_grs @ sp[(-4)+0]
 28110  01494C  0EFC               	movlw	-4
 28111  01494E  0060  F033  FFE3   	movff	btemp+11,plusw1
 28112                           
 28113                           ;stkvar	_b @ sp[(-4)+-4]
 28114  014954  0EF8               	movlw	-8
 28115  014956  6AE3               	clrf	plusw1,c
 28116  014958  0EF9               	movlw	-7
 28117  01495A  6AE3               	clrf	plusw1,c
 28118  01495C  0EFA               	movlw	-6
 28119  01495E  6AE3               	clrf	plusw1,c
 28120  014960  0EFB               	movlw	-5
 28121  014962  6AE3               	clrf	plusw1,c
 28122                           
 28123                           ;stkvar	_aexp @ sp[(-4)+2]
 28124                           ;stkvar	_bexp @ sp[(-4)+1]
 28125  014964  0EFE               	movlw	-2
 28126  014966  006F FF8C  F001    	movff	plusw1,btemp
 28127  01496C  0EFD               	movlw	-3
 28128  01496E  0060  F007  FFE3   	movff	btemp,plusw1
 28129  014974  D042               	goto	u5690
 28130  014976                     l7971:
 28131                           
 28132                           ;stkvar	_grs @ sp[(-4)+0]
 28133  014976  0EFC               	movlw	-4
 28134  014978  A0E3               	btfss	plusw1,0,c
 28135  01497A  D00D               	goto	l7975
 28136                           
 28137                           ;stkvar	_grs @ sp[(-4)+0]
 28138  01497C  0EFC               	movlw	-4
 28139  01497E  006F FF8C  F00C    	movff	plusw1,btemp+11
 28140  014984  90D8               	bcf	status,0,c
 28141  014986  320C               	rrcf	(btemp+11)^0,f,c
 28142  014988  0E01               	movlw	1
 28143  01498A  120C               	iorwf	(btemp+11)^0,f,c
 28144                           
 28145                           ;stkvar	_grs @ sp[(-4)+0]
 28146  01498C  0EFC               	movlw	-4
 28147  01498E  0060  F033  FFE3   	movff	btemp+11,plusw1
 28148  014994  D009               	goto	l7977
 28149  014996                     l7975:
 28150                           
 28151                           ;stkvar	_grs @ sp[(-4)+0]
 28152  014996  50E1               	movf	fsr1l,w,c
 28153  014998  0FFC               	addlw	-4
 28154  01499A  6ED9               	movwf	fsr2l,c
 28155  01499C  50E2               	movf	fsr1h,w,c
 28156  01499E  6EDA               	movwf	fsr2h,c
 28157  0149A0  0EFF               	movlw	255
 28158  0149A2  22DA               	addwfc	fsr2h,f,c
 28159  0149A4  90D8               	bcf	status,0,c
 28160  0149A6  32DF               	rrcf	indf2,f,c
 28161  0149A8                     l7977:
 28162                           
 28163                           ;stkvar	_b @ sp[(-4)+-4]
 28164  0149A8  0EF8               	movlw	-8
 28165  0149AA  A0E3               	btfss	plusw1,0,c
 28166  0149AC  D002               	goto	l7981
 28167                           
 28168                           ;stkvar	_grs @ sp[(-4)+0]
 28169  0149AE  0EFC               	movlw	-4
 28170  0149B0  8EE3               	bsf	plusw1,7,c
 28171  0149B2                     l7981:
 28172  0149B2  0E01               	movlw	1
 28173  0149B4  6E0C               	movwf	(btemp+11)^0,c
 28174                           
 28175                           ;stkvar	_b @ sp[(-4)+-4]
 28176  0149B6  50E1               	movf	fsr1l,w,c
 28177  0149B8  0FF8               	addlw	-8
 28178  0149BA  6ED9               	movwf	fsr2l,c
 28179  0149BC  50E2               	movf	fsr1h,w,c
 28180  0149BE  6EDA               	movwf	fsr2h,c
 28181  0149C0  0EFF               	movlw	255
 28182  0149C2  22DA               	addwfc	fsr2h,f,c
 28183  0149C4  280C               	incf	(btemp+11)^0,w,c
 28184  0149C6  52DE               	movf	postinc2,f,c
 28185  0149C8  D008               	goto	u5680
 28186  0149CA                     u5685:
 28187  0149CA  52DE               	movf	postinc2,f,c
 28188  0149CC  90D8               	bcf	status,0,c
 28189  0149CE  BEDC               	btfsc	preinc2,7,c
 28190  0149D0  80D8               	bsf	status,0,c
 28191  0149D2  32DD               	rrcf	postdec2,f,c
 28192  0149D4  32DD               	rrcf	postdec2,f,c
 28193  0149D6  32DD               	rrcf	postdec2,f,c
 28194  0149D8  32DE               	rrcf	postinc2,f,c
 28195  0149DA                     u5680:
 28196  0149DA  2EE8               	decfsz	wreg,f,c
 28197  0149DC  D7F6               	goto	u5685
 28198                           
 28199                           ;stkvar	_bexp @ sp[(-4)+1]
 28200  0149DE  0EFD               	movlw	-3
 28201  0149E0  2AE3               	incf	plusw1,f,c
 28202  0149E2                     l7985:
 28203                           
 28204                           ;stkvar	_aexp @ sp[(-4)+2]
 28205                           ;stkvar	_bexp @ sp[(-4)+1]
 28206  0149E2  50E1               	movf	fsr1l,w,c
 28207  0149E4  0FFD               	addlw	-3
 28208  0149E6  6ED9               	movwf	fsr2l,c
 28209  0149E8  50E2               	movf	fsr1h,w,c
 28210  0149EA  6EDA               	movwf	fsr2h,c
 28211  0149EC  0EFF               	movlw	255
 28212  0149EE  22DA               	addwfc	fsr2h,f,c
 28213  0149F0  0EFE               	movlw	-2
 28214  0149F2  50E3               	movf	plusw1,w,c
 28215  0149F4  5CDE               	subwf	postinc2,w,c
 28216  0149F6  A0D8               	btfss	status,0,c
 28217  0149F8  D7BE               	goto	l7971
 28218  0149FA                     u5690:
 28219                           
 28220                           ;stkvar	_signs @ sp[(-4)+3]
 28221  0149FA  0EFF               	movlw	-1
 28222  0149FC  BCE3               	btfsc	plusw1,6,c
 28223  0149FE  D066               	goto	l8013
 28224                           
 28225                           ;stkvar	_bexp @ sp[(-4)+1]
 28226  014A00  0EFD               	movlw	-3
 28227  014A02  50E3               	movf	plusw1,w,c
 28228  014A04  B4D8               	btfsc	status,2,c
 28229  014A06  D0F2               	goto	u5790
 28230                           
 28231                           ;stkvar	_a @ sp[(-4)+-8]
 28232                           ;stkvar	_b @ sp[(-4)+-4]
 28233  014A08  0EF8               	movlw	-8
 28234  014A0A  50E3               	movf	plusw1,w,c
 28235  014A0C  6E01               	movwf	btemp^0,c
 28236  014A0E  0EF4               	movlw	-12
 28237  014A10  50E3               	movf	plusw1,w,c
 28238  014A12  2601               	addwf	btemp^0,f,c
 28239  014A14  0EF8               	movlw	-8
 28240  014A16  0060  F007  FFE3   	movff	btemp,plusw1
 28241  014A1C  0EF9               	movlw	-7
 28242  014A1E  50E3               	movf	plusw1,w,c
 28243  014A20  6E01               	movwf	btemp^0,c
 28244  014A22  0EF5               	movlw	-11
 28245  014A24  50E3               	movf	plusw1,w,c
 28246  014A26  2201               	addwfc	btemp^0,f,c
 28247  014A28  0EF9               	movlw	-7
 28248  014A2A  0060  F007  FFE3   	movff	btemp,plusw1
 28249  014A30  0EFA               	movlw	-6
 28250  014A32  50E3               	movf	plusw1,w,c
 28251  014A34  6E01               	movwf	btemp^0,c
 28252  014A36  0EF6               	movlw	-10
 28253  014A38  50E3               	movf	plusw1,w,c
 28254  014A3A  2201               	addwfc	btemp^0,f,c
 28255  014A3C  0EFA               	movlw	-6
 28256  014A3E  0060  F007  FFE3   	movff	btemp,plusw1
 28257  014A44  0EFB               	movlw	-5
 28258  014A46  50E3               	movf	plusw1,w,c
 28259  014A48  6E01               	movwf	btemp^0,c
 28260  014A4A  0EF7               	movlw	-9
 28261  014A4C  50E3               	movf	plusw1,w,c
 28262  014A4E  2201               	addwfc	btemp^0,f,c
 28263  014A50  0EFB               	movlw	-5
 28264  014A52  0060  F007  FFE3   	movff	btemp,plusw1
 28265                           
 28266                           ;stkvar	_b @ sp[(-4)+-4]
 28267  014A58  0EFB               	movlw	-5
 28268  014A5A  A0E3               	btfss	plusw1,0,c
 28269  014A5C  D101               	goto	u5830
 28270                           
 28271                           ;stkvar	_grs @ sp[(-4)+0]
 28272  014A5E  0EFC               	movlw	-4
 28273  014A60  A0E3               	btfss	plusw1,0,c
 28274  014A62  D00D               	goto	l8003
 28275                           
 28276                           ;stkvar	_grs @ sp[(-4)+0]
 28277  014A64  0EFC               	movlw	-4
 28278  014A66  006F FF8C  F00C    	movff	plusw1,btemp+11
 28279  014A6C  90D8               	bcf	status,0,c
 28280  014A6E  320C               	rrcf	(btemp+11)^0,f,c
 28281  014A70  0E01               	movlw	1
 28282  014A72  120C               	iorwf	(btemp+11)^0,f,c
 28283                           
 28284                           ;stkvar	_grs @ sp[(-4)+0]
 28285  014A74  0EFC               	movlw	-4
 28286  014A76  0060  F033  FFE3   	movff	btemp+11,plusw1
 28287  014A7C  D009               	goto	l8005
 28288  014A7E                     l8003:
 28289                           
 28290                           ;stkvar	_grs @ sp[(-4)+0]
 28291  014A7E  50E1               	movf	fsr1l,w,c
 28292  014A80  0FFC               	addlw	-4
 28293  014A82  6ED9               	movwf	fsr2l,c
 28294  014A84  50E2               	movf	fsr1h,w,c
 28295  014A86  6EDA               	movwf	fsr2h,c
 28296  014A88  0EFF               	movlw	255
 28297  014A8A  22DA               	addwfc	fsr2h,f,c
 28298  014A8C  90D8               	bcf	status,0,c
 28299  014A8E  32DF               	rrcf	indf2,f,c
 28300  014A90                     l8005:
 28301                           
 28302                           ;stkvar	_b @ sp[(-4)+-4]
 28303  014A90  0EF8               	movlw	-8
 28304  014A92  A0E3               	btfss	plusw1,0,c
 28305  014A94  D002               	goto	l8009
 28306                           
 28307                           ;stkvar	_grs @ sp[(-4)+0]
 28308  014A96  0EFC               	movlw	-4
 28309  014A98  8EE3               	bsf	plusw1,7,c
 28310  014A9A                     l8009:
 28311  014A9A  0E01               	movlw	1
 28312  014A9C  6E0C               	movwf	(btemp+11)^0,c
 28313                           
 28314                           ;stkvar	_b @ sp[(-4)+-4]
 28315  014A9E  50E1               	movf	fsr1l,w,c
 28316  014AA0  0FF8               	addlw	-8
 28317  014AA2  6ED9               	movwf	fsr2l,c
 28318  014AA4  50E2               	movf	fsr1h,w,c
 28319  014AA6  6EDA               	movwf	fsr2h,c
 28320  014AA8  0EFF               	movlw	255
 28321  014AAA  22DA               	addwfc	fsr2h,f,c
 28322  014AAC  280C               	incf	(btemp+11)^0,w,c
 28323  014AAE  52DE               	movf	postinc2,f,c
 28324  014AB0  D008               	goto	u5750
 28325  014AB2                     u5755:
 28326  014AB2  52DE               	movf	postinc2,f,c
 28327  014AB4  90D8               	bcf	status,0,c
 28328  014AB6  BEDC               	btfsc	preinc2,7,c
 28329  014AB8  80D8               	bsf	status,0,c
 28330  014ABA  32DD               	rrcf	postdec2,f,c
 28331  014ABC  32DD               	rrcf	postdec2,f,c
 28332  014ABE  32DD               	rrcf	postdec2,f,c
 28333  014AC0  32DE               	rrcf	postinc2,f,c
 28334  014AC2                     u5750:
 28335  014AC2  2EE8               	decfsz	wreg,f,c
 28336  014AC4  D7F6               	goto	u5755
 28337                           
 28338                           ;stkvar	_bexp @ sp[(-4)+1]
 28339  014AC6  0EFD               	movlw	-3
 28340  014AC8  2AE3               	incf	plusw1,f,c
 28341  014ACA  D0CA               	goto	u5830
 28342  014ACC                     l8013:
 28343                           
 28344                           ;stkvar	_a @ sp[(-4)+-8]
 28345                           ;stkvar	_b @ sp[(-4)+-4]
 28346  014ACC  50E1               	movf	fsr1l,w,c
 28347  014ACE  0FF8               	addlw	-8
 28348  014AD0  6ED9               	movwf	fsr2l,c
 28349  014AD2  50E2               	movf	fsr1h,w,c
 28350  014AD4  6EDA               	movwf	fsr2h,c
 28351  014AD6  0EFF               	movlw	255
 28352  014AD8  22DA               	addwfc	fsr2h,f,c
 28353  014ADA  0EF4               	movlw	-12
 28354  014ADC  50E3               	movf	plusw1,w,c
 28355  014ADE  5CDE               	subwf	postinc2,w,c
 28356  014AE0  0EF5               	movlw	-11
 28357  014AE2  50E3               	movf	plusw1,w,c
 28358  014AE4  58DE               	subwfb	postinc2,w,c
 28359  014AE6  0EF6               	movlw	-10
 28360  014AE8  50E3               	movf	plusw1,w,c
 28361  014AEA  58DE               	subwfb	postinc2,w,c
 28362  014AEC  50DE               	movf	postinc2,w,c
 28363  014AEE  0A80               	xorlw	128
 28364  014AF0  6E01               	movwf	btemp^0,c
 28365  014AF2  0EF7               	movlw	-9
 28366  014AF4  50E3               	movf	plusw1,w,c
 28367  014AF6  0A80               	xorlw	128
 28368  014AF8  5801               	subwfb	btemp^0,w,c
 28369  014AFA  B0D8               	btfsc	status,0,c
 28370  014AFC  D053               	goto	l8025
 28371                           
 28372                           ;stkvar	_b @ sp[(-4)+-4]
 28373                           ;stkvar	_a @ sp[(-4)+-8]
 28374  014AFE  0EF4               	movlw	-12
 28375  014B00  006F FF8C  F009    	movff	plusw1,btemp+8
 28376  014B06  0EF5               	movlw	-11
 28377  014B08  006F FF8C  F00A    	movff	plusw1,btemp+9
 28378  014B0E  0EF6               	movlw	-10
 28379  014B10  006F FF8C  F00B    	movff	plusw1,btemp+10
 28380  014B16  0EF7               	movlw	-9
 28381  014B18  006F FF8C  F00C    	movff	plusw1,btemp+11
 28382  014B1E  0EF8               	movlw	-8
 28383  014B20  50E3               	movf	plusw1,w,c
 28384  014B22  5E09               	subwf	(btemp+8)^0,f,c
 28385  014B24  0EF9               	movlw	-7
 28386  014B26  50E3               	movf	plusw1,w,c
 28387  014B28  5A0A               	subwfb	(btemp+9)^0,f,c
 28388  014B2A  0EFA               	movlw	-6
 28389  014B2C  50E3               	movf	plusw1,w,c
 28390  014B2E  5A0B               	subwfb	(btemp+10)^0,f,c
 28391  014B30  0EFB               	movlw	-5
 28392  014B32  50E3               	movf	plusw1,w,c
 28393  014B34  5A0C               	subwfb	(btemp+11)^0,f,c
 28394  014B36  0EFF               	movlw	255
 28395  014B38  2409               	addwf	(btemp+8)^0,w,c
 28396  014B3A  6E05               	movwf	(btemp+4)^0,c
 28397  014B3C  0EFF               	movlw	255
 28398  014B3E  200A               	addwfc	(btemp+9)^0,w,c
 28399  014B40  6E06               	movwf	(btemp+5)^0,c
 28400  014B42  0EFF               	movlw	255
 28401  014B44  200B               	addwfc	(btemp+10)^0,w,c
 28402  014B46  6E07               	movwf	(btemp+6)^0,c
 28403  014B48  0EFF               	movlw	255
 28404  014B4A  200C               	addwfc	(btemp+11)^0,w,c
 28405  014B4C  6E08               	movwf	(btemp+7)^0,c
 28406                           
 28407                           ;stkvar	_b @ sp[(-4)+-4]
 28408  014B4E  0EF8               	movlw	-8
 28409  014B50  0060  F017  FFE3   	movff	btemp+4,plusw1
 28410  014B56  0EF9               	movlw	-7
 28411  014B58  0060  F01B  FFE3   	movff	btemp+5,plusw1
 28412  014B5E  0EFA               	movlw	-6
 28413  014B60  0060  F01F  FFE3   	movff	btemp+6,plusw1
 28414  014B66  0EFB               	movlw	-5
 28415  014B68  0060  F023  FFE3   	movff	btemp+7,plusw1
 28416                           
 28417                           ;stkvar	_signs @ sp[(-4)+3]
 28418  014B6E  0EFF               	movlw	-1
 28419  014B70  7EE3               	btg	plusw1,7,c
 28420                           
 28421                           ;stkvar	_grs @ sp[(-4)+0]
 28422  014B72  0EFC               	movlw	-4
 28423  014B74  50E3               	movf	plusw1,w,c
 28424  014B76  0800               	sublw	0
 28425  014B78  6E0C               	movwf	(btemp+11)^0,c
 28426                           
 28427                           ;stkvar	_grs @ sp[(-4)+0]
 28428  014B7A  0EFC               	movlw	-4
 28429  014B7C  0060  F033  FFE3   	movff	btemp+11,plusw1
 28430                           
 28431                           ;stkvar	_grs @ sp[(-4)+0]
 28432  014B82  0EFC               	movlw	-4
 28433  014B84  50E3               	movf	plusw1,w,c
 28434  014B86  A4D8               	btfss	status,2,c
 28435  014B88  D020               	goto	l8027
 28436                           
 28437                           ;stkvar	_b @ sp[(-4)+-4]
 28438  014B8A  50E1               	movf	fsr1l,w,c
 28439  014B8C  0FF8               	addlw	-8
 28440  014B8E  6ED9               	movwf	fsr2l,c
 28441  014B90  50E2               	movf	fsr1h,w,c
 28442  014B92  6EDA               	movwf	fsr2h,c
 28443  014B94  0EFF               	movlw	255
 28444  014B96  22DA               	addwfc	fsr2h,f,c
 28445  014B98  2ADE               	incf	postinc2,f,c
 28446  014B9A  0E00               	movlw	0
 28447  014B9C  22DE               	addwfc	postinc2,f,c
 28448  014B9E  22DE               	addwfc	postinc2,f,c
 28449  014BA0  22DE               	addwfc	postinc2,f,c
 28450  014BA2  D013               	goto	l8027
 28451  014BA4                     l8025:
 28452                           
 28453                           ;stkvar	_a @ sp[(-4)+-8]
 28454                           ;stkvar	_b @ sp[(-4)+-4]
 28455  014BA4  50E1               	movf	fsr1l,w,c
 28456  014BA6  0FF8               	addlw	-8
 28457  014BA8  6ED9               	movwf	fsr2l,c
 28458  014BAA  50E2               	movf	fsr1h,w,c
 28459  014BAC  6EDA               	movwf	fsr2h,c
 28460  014BAE  0EFF               	movlw	255
 28461  014BB0  22DA               	addwfc	fsr2h,f,c
 28462  014BB2  0EF4               	movlw	-12
 28463  014BB4  50E3               	movf	plusw1,w,c
 28464  014BB6  5EDE               	subwf	postinc2,f,c
 28465  014BB8  0EF5               	movlw	-11
 28466  014BBA  50E3               	movf	plusw1,w,c
 28467  014BBC  5ADE               	subwfb	postinc2,f,c
 28468  014BBE  0EF6               	movlw	-10
 28469  014BC0  50E3               	movf	plusw1,w,c
 28470  014BC2  5ADE               	subwfb	postinc2,f,c
 28471  014BC4  0EF7               	movlw	-9
 28472  014BC6  50E3               	movf	plusw1,w,c
 28473  014BC8  5ADE               	subwfb	postinc2,f,c
 28474  014BCA                     l8027:
 28475                           
 28476                           ;stkvar	_b @ sp[(-4)+-4]
 28477  014BCA  0EF8               	movlw	-8
 28478  014BCC  50E3               	movf	plusw1,w,c
 28479  014BCE  E145               	bnz	l8049
 28480  014BD0  0EF9               	movlw	-7
 28481  014BD2  50E3               	movf	plusw1,w,c
 28482  014BD4  E142               	bnz	l8049
 28483  014BD6  0EFA               	movlw	-6
 28484  014BD8  50E3               	movf	plusw1,w,c
 28485  014BDA  E13F               	bnz	l8049
 28486  014BDC  0EFB               	movlw	-5
 28487  014BDE  50E3               	movf	plusw1,w,c
 28488  014BE0  A4D8               	btfss	status,2,c
 28489  014BE2  D03B               	goto	l8049
 28490                           
 28491                           ;stkvar	_grs @ sp[(-4)+0]
 28492  014BE4  0EFC               	movlw	-4
 28493  014BE6  50E3               	movf	plusw1,w,c
 28494  014BE8  A4D8               	btfss	status,2,c
 28495  014BEA  D037               	goto	l8049
 28496  014BEC                     u5790:
 28497  014BEC  0E00               	movlw	0
 28498  014BEE  6E01               	movwf	btemp^0,c
 28499  014BF0  0E00               	movlw	0
 28500  014BF2  6E02               	movwf	(btemp+1)^0,c
 28501  014BF4  0E00               	movlw	0
 28502  014BF6  6E03               	movwf	(btemp+2)^0,c
 28503  014BF8  0E00               	movlw	0
 28504  014BFA  6E04               	movwf	(btemp+3)^0,c
 28505  014BFC  D0C6               	goto	l3007
 28506  014BFE                     l8035:
 28507                           
 28508                           ;stkvar	_b @ sp[(-4)+-4]
 28509  014BFE  90D8               	bcf	status,0,c
 28510  014C00  0EF8               	movlw	-8
 28511  014C02  36E3               	rlcf	plusw1,f,c
 28512  014C04  0EF9               	movlw	-7
 28513  014C06  36E3               	rlcf	plusw1,f,c
 28514  014C08  0EFA               	movlw	-6
 28515  014C0A  36E3               	rlcf	plusw1,f,c
 28516  014C0C  0EFB               	movlw	-5
 28517  014C0E  36E3               	rlcf	plusw1,f,c
 28518                           
 28519                           ;stkvar	_grs @ sp[(-4)+0]
 28520  014C10  0EFC               	movlw	-4
 28521  014C12  AEE3               	btfss	plusw1,7,c
 28522  014C14  D002               	goto	l3019
 28523                           
 28524                           ;stkvar	_b @ sp[(-4)+-4]
 28525  014C16  0EF8               	movlw	-8
 28526  014C18  80E3               	bsf	plusw1,0,c
 28527  014C1A                     l3019:
 28528                           
 28529                           ;stkvar	_grs @ sp[(-4)+0]
 28530  014C1A  0EFC               	movlw	-4
 28531  014C1C  A0E3               	btfss	plusw1,0,c
 28532  014C1E  D00E               	goto	l8043
 28533                           
 28534                           ;stkvar	_grs @ sp[(-4)+0]
 28535  014C20  0EFC               	movlw	-4
 28536  014C22  006F FF8C  F00C    	movff	plusw1,btemp+11
 28537  014C28  90D8               	bcf	status,0,c
 28538  014C2A  340C               	rlcf	(btemp+11)^0,w,c
 28539  014C2C  6E0B               	movwf	(btemp+10)^0,c
 28540  014C2E  0E01               	movlw	1
 28541  014C30  120B               	iorwf	(btemp+10)^0,f,c
 28542                           
 28543                           ;stkvar	_grs @ sp[(-4)+0]
 28544  014C32  0EFC               	movlw	-4
 28545  014C34  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28546  014C3A  D009               	goto	l8045
 28547  014C3C                     l8043:
 28548                           
 28549                           ;stkvar	_grs @ sp[(-4)+0]
 28550  014C3C  50E1               	movf	fsr1l,w,c
 28551  014C3E  0FFC               	addlw	-4
 28552  014C40  6ED9               	movwf	fsr2l,c
 28553  014C42  50E2               	movf	fsr1h,w,c
 28554  014C44  6EDA               	movwf	fsr2h,c
 28555  014C46  0EFF               	movlw	255
 28556  014C48  22DA               	addwfc	fsr2h,f,c
 28557  014C4A  90D8               	bcf	status,0,c
 28558  014C4C  36DF               	rlcf	indf2,f,c
 28559  014C4E                     l8045:
 28560                           
 28561                           ;stkvar	_bexp @ sp[(-4)+1]
 28562  014C4E  0EFD               	movlw	-3
 28563  014C50  50E3               	movf	plusw1,w,c
 28564  014C52  B4D8               	btfsc	status,2,c
 28565  014C54  D002               	goto	l8049
 28566                           
 28567                           ;stkvar	_bexp @ sp[(-4)+1]
 28568  014C56  0EFD               	movlw	-3
 28569  014C58  06E3               	decf	plusw1,f,c
 28570  014C5A                     l8049:
 28571                           
 28572                           ;stkvar	_b @ sp[(-4)+-4]
 28573  014C5A  0EFA               	movlw	-6
 28574  014C5C  AEE3               	btfss	plusw1,7,c
 28575  014C5E  D7CF               	goto	l8035
 28576  014C60                     u5830:
 28577                           
 28578                           ;stkvar	_aexp @ sp[(-4)+2]
 28579  014C60  0EFE               	movlw	-2
 28580  014C62  6AE3               	clrf	plusw1,c
 28581                           
 28582                           ;stkvar	_grs @ sp[(-4)+0]
 28583  014C64  0EFC               	movlw	-4
 28584  014C66  AEE3               	btfss	plusw1,7,c
 28585  014C68  D00F               	goto	l8063
 28586                           
 28587                           ;stkvar	_grs @ sp[(-4)+0]
 28588  014C6A  0EFC               	movlw	-4
 28589  014C6C  006F FF8C  F00C    	movff	plusw1,btemp+11
 28590  014C72  0E7F               	movlw	127
 28591  014C74  160C               	andwf	(btemp+11)^0,f,c
 28592  014C76  B4D8               	btfsc	status,2,c
 28593  014C78  D004               	goto	l8059
 28594  014C7A                     u5850:
 28595                           
 28596                           ;stkvar	_aexp @ sp[(-4)+2]
 28597  014C7A  0EFE               	movlw	-2
 28598  014C7C  6AE3               	clrf	plusw1,c
 28599  014C7E  2AE3               	incf	plusw1,f,c
 28600  014C80  D003               	goto	l8063
 28601  014C82                     l8059:
 28602                           
 28603                           ;stkvar	_b @ sp[(-4)+-4]
 28604  014C82  0EF8               	movlw	-8
 28605  014C84  B0E3               	btfsc	plusw1,0,c
 28606  014C86  D7F9               	goto	u5850
 28607  014C88                     l8063:
 28608                           
 28609                           ;stkvar	_aexp @ sp[(-4)+2]
 28610  014C88  0EFE               	movlw	-2
 28611  014C8A  50E3               	movf	plusw1,w,c
 28612  014C8C  B4D8               	btfsc	status,2,c
 28613  014C8E  D02B               	goto	l8075
 28614                           
 28615                           ;stkvar	_b @ sp[(-4)+-4]
 28616  014C90  50E1               	movf	fsr1l,w,c
 28617  014C92  0FF8               	addlw	-8
 28618  014C94  6ED9               	movwf	fsr2l,c
 28619  014C96  50E2               	movf	fsr1h,w,c
 28620  014C98  6EDA               	movwf	fsr2h,c
 28621  014C9A  0EFF               	movlw	255
 28622  014C9C  22DA               	addwfc	fsr2h,f,c
 28623  014C9E  2ADE               	incf	postinc2,f,c
 28624  014CA0  0E00               	movlw	0
 28625  014CA2  22DE               	addwfc	postinc2,f,c
 28626  014CA4  22DE               	addwfc	postinc2,f,c
 28627  014CA6  22DE               	addwfc	postinc2,f,c
 28628                           
 28629                           ;stkvar	_b @ sp[(-4)+-4]
 28630  014CA8  0EFB               	movlw	-5
 28631  014CAA  A0E3               	btfss	plusw1,0,c
 28632  014CAC  D01C               	goto	l8075
 28633  014CAE  0E01               	movlw	1
 28634  014CB0  6E0C               	movwf	(btemp+11)^0,c
 28635                           
 28636                           ;stkvar	_b @ sp[(-4)+-4]
 28637  014CB2  50E1               	movf	fsr1l,w,c
 28638  014CB4  0FF8               	addlw	-8
 28639  014CB6  6ED9               	movwf	fsr2l,c
 28640  014CB8  50E2               	movf	fsr1h,w,c
 28641  014CBA  6EDA               	movwf	fsr2h,c
 28642  014CBC  0EFF               	movlw	255
 28643  014CBE  22DA               	addwfc	fsr2h,f,c
 28644  014CC0  280C               	incf	(btemp+11)^0,w,c
 28645  014CC2  52DE               	movf	postinc2,f,c
 28646  014CC4  D008               	goto	u5890
 28647  014CC6                     u5895:
 28648  014CC6  52DE               	movf	postinc2,f,c
 28649  014CC8  90D8               	bcf	status,0,c
 28650  014CCA  BEDC               	btfsc	preinc2,7,c
 28651  014CCC  80D8               	bsf	status,0,c
 28652  014CCE  32DD               	rrcf	postdec2,f,c
 28653  014CD0  32DD               	rrcf	postdec2,f,c
 28654  014CD2  32DD               	rrcf	postdec2,f,c
 28655  014CD4  32DE               	rrcf	postinc2,f,c
 28656  014CD6                     u5890:
 28657  014CD6  2EE8               	decfsz	wreg,f,c
 28658  014CD8  D7F6               	goto	u5895
 28659                           
 28660                           ;stkvar	_bexp @ sp[(-4)+1]
 28661  014CDA  0EFD               	movlw	-3
 28662  014CDC  28E3               	incf	plusw1,w,c
 28663  014CDE  B4D8               	btfsc	status,2,c
 28664  014CE0  D002               	goto	l8075
 28665                           
 28666                           ;stkvar	_bexp @ sp[(-4)+1]
 28667  014CE2  0EFD               	movlw	-3
 28668  014CE4  2AE3               	incf	plusw1,f,c
 28669  014CE6                     l8075:
 28670                           
 28671                           ;stkvar	_bexp @ sp[(-4)+1]
 28672  014CE6  0EFD               	movlw	-3
 28673  014CE8  28E3               	incf	plusw1,w,c
 28674  014CEA  B4D8               	btfsc	status,2,c
 28675  014CEC  D004               	goto	u5920
 28676                           
 28677                           ;stkvar	_bexp @ sp[(-4)+1]
 28678  014CEE  0EFD               	movlw	-3
 28679  014CF0  50E3               	movf	plusw1,w,c
 28680  014CF2  A4D8               	btfss	status,2,c
 28681  014CF4  D00E               	goto	l8085
 28682  014CF6                     u5920:
 28683                           
 28684                           ;stkvar	_b @ sp[(-4)+-4]
 28685  014CF6  0EF8               	movlw	-8
 28686  014CF8  6AE3               	clrf	plusw1,c
 28687  014CFA  0EF9               	movlw	-7
 28688  014CFC  6AE3               	clrf	plusw1,c
 28689  014CFE  0EFA               	movlw	-6
 28690  014D00  6AE3               	clrf	plusw1,c
 28691  014D02  0EFB               	movlw	-5
 28692  014D04  6AE3               	clrf	plusw1,c
 28693                           
 28694                           ;stkvar	_bexp @ sp[(-4)+1]
 28695  014D06  0EFD               	movlw	-3
 28696  014D08  50E3               	movf	plusw1,w,c
 28697  014D0A  A4D8               	btfss	status,2,c
 28698  014D0C  D002               	goto	l8085
 28699                           
 28700                           ;stkvar	_signs @ sp[(-4)+3]
 28701  014D0E  0EFF               	movlw	-1
 28702  014D10  6AE3               	clrf	plusw1,c
 28703  014D12                     l8085:
 28704                           
 28705                           ;stkvar	_bexp @ sp[(-4)+1]
 28706  014D12  0EFD               	movlw	-3
 28707  014D14  A0E3               	btfss	plusw1,0,c
 28708  014D16  D009               	goto	l8089
 28709                           
 28710                           ;stkvar	_b @ sp[(-4)+-4]
 28711  014D18  0EFA               	movlw	250
 28712  014D1A  24E1               	addwf	fsr1l,w,c
 28713  014D1C  6ED9               	movwf	fsr2l,c
 28714  014D1E  0EFF               	movlw	255
 28715  014D20  20E2               	addwfc	fsr1h,w,c
 28716  014D22  6EDA               	movwf	fsr2h,c
 28717  014D24  0E00               	movlw	0
 28718  014D26  8EDB               	bsf	plusw2,7,c
 28719  014D28  D008               	goto	l8091
 28720  014D2A                     l8089:
 28721                           
 28722                           ;stkvar	_b @ sp[(-4)+-4]
 28723  014D2A  0EFA               	movlw	250
 28724  014D2C  24E1               	addwf	fsr1l,w,c
 28725  014D2E  6ED9               	movwf	fsr2l,c
 28726  014D30  0EFF               	movlw	255
 28727  014D32  20E2               	addwfc	fsr1h,w,c
 28728  014D34  6EDA               	movwf	fsr2h,c
 28729  014D36  0E7F               	movlw	127
 28730  014D38  16DF               	andwf	indf2,f,c
 28731  014D3A                     l8091:
 28732                           
 28733                           ;stkvar	_b @ sp[(-4)+-4]
 28734  014D3A  0EFB               	movlw	251
 28735  014D3C  24E1               	addwf	fsr1l,w,c
 28736  014D3E  6ED9               	movwf	fsr2l,c
 28737  014D40  0EFF               	movlw	255
 28738  014D42  20E2               	addwfc	fsr1h,w,c
 28739  014D44  6EDA               	movwf	fsr2h,c
 28740                           
 28741                           ;stkvar	_bexp @ sp[(-4)+1]
 28742  014D46  0EFD               	movlw	-3
 28743  014D48  006F FF8C  F00C    	movff	plusw1,btemp+11
 28744  014D4E  90D8               	bcf	status,0,c
 28745  014D50  300C               	rrcf	(btemp+11)^0,w,c
 28746  014D52  6EDF               	movwf	indf2,c
 28747                           
 28748                           ;stkvar	_signs @ sp[(-4)+3]
 28749  014D54  0EFF               	movlw	-1
 28750  014D56  AEE3               	btfss	plusw1,7,c
 28751  014D58  D008               	goto	l8097
 28752                           
 28753                           ;stkvar	_b @ sp[(-4)+-4]
 28754  014D5A  0EFB               	movlw	251
 28755  014D5C  24E1               	addwf	fsr1l,w,c
 28756  014D5E  6ED9               	movwf	fsr2l,c
 28757  014D60  0EFF               	movlw	255
 28758  014D62  20E2               	addwfc	fsr1h,w,c
 28759  014D64  6EDA               	movwf	fsr2h,c
 28760  014D66  0E00               	movlw	0
 28761  014D68  8EDB               	bsf	plusw2,7,c
 28762  014D6A                     l8097:
 28763                           
 28764                           ;stkvar	_b @ sp[(-4)+-4]
 28765  014D6A  0EF8               	movlw	-8
 28766  014D6C  006F FF8C  F001    	movff	plusw1,btemp
 28767  014D72  0EF9               	movlw	-7
 28768  014D74  006F FF8C  F002    	movff	plusw1,btemp+1
 28769  014D7A  0EFA               	movlw	-6
 28770  014D7C  006F FF8C  F003    	movff	plusw1,btemp+2
 28771  014D82  0EFB               	movlw	-5
 28772  014D84  006F FF8C  F004    	movff	plusw1,btemp+3
 28773  014D8A                     l3007:
 28774                           
 28775                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 28776  014D8A  0EF4               	movlw	244
 28777  014D8C  26E1               	addwf	fsr1l,f,c
 28778  014D8E  0EFF               	movlw	255
 28779  014D90  22E2               	addwfc	fsr1h,f,c
 28780  014D92  0012               	return		;funcret
 28781  014D94                     __end_of___fladd:
 28782                           	opt callstack 0
 28783                           
 28784 ;; *************** function ___flmul *****************
 28785 ;; Defined at:
 28786 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 28787 ;; Parameters:    Size  Location     Type
 28788 ;;  b               4  [STACK] unsigned char 
 28789 ;;  a               4  [STACK] unsigned char 
 28790 ;; Auto vars:     Size  Location     Type
 28791 ;;  prod            4  [STACK] struct .
 28792 ;;  grs             4  [STACK] unsigned long 
 28793 ;;  temp            2  [STACK] struct .
 28794 ;;  bexp            1  [STACK] unsigned char 
 28795 ;;  aexp            1  [STACK] unsigned char 
 28796 ;;  sign            1  [STACK] unsigned char 
 28797 ;; Return value:  Size  Location     Type
 28798 ;;                  4  [STACK] unsigned char 
 28799 ;; Registers used:
 28800 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 28801 ;; Tracked objects:
 28802 ;;		On entry : 0/0
 28803 ;;		On exit  : 0/0
 28804 ;;		Unchanged: 0/0
 28805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28810 ;;Total ram usage:        0 bytes
 28811 ;; Hardware stack levels used:    1
 28812 ;; Hardware stack levels required when called:   15
 28813 ;; This function calls:
 28814 ;;		Nothing
 28815 ;; This function is called by:
 28816 ;;		_conv_raw_result
 28817 ;;		_lp_filter
 28818 ;;		_calc_model_data
 28819 ;;		_calc_bsoc
 28820 ;;		_init_bsoc
 28821 ;;		_efgtoa
 28822 ;; This function uses a reentrant model
 28823 ;;
 28824                           
 28825                           	psect	text113
 28826  013DAE                     __ptext113:
 28827                           	opt callstack 0
 28828  013DAE                     ___flmul:
 28829                           	opt callstack 0
 28830                           
 28831                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 28832  013DAE  0E0D               	movlw	13
 28833  013DB0  26E1               	addwf	fsr1l,f,c
 28834  013DB2  0E00               	movlw	0
 28835  013DB4  22E2               	addwfc	fsr1h,f,c
 28836                           
 28837                           ;stkvar	_b @ sp[(-13)+-4]
 28838                           
 28839                           ;incstack = 0
 28840 ;; hardware stack exceeded
 28841  013DB6  0EF2               	movlw	242
 28842  013DB8  24E1               	addwf	fsr1l,w,c
 28843  013DBA  6ED9               	movwf	fsr2l,c
 28844  013DBC  0EFF               	movlw	255
 28845  013DBE  20E2               	addwfc	fsr1h,w,c
 28846  013DC0  6EDA               	movwf	fsr2h,c
 28847  013DC2  50DF               	movf	indf2,w,c
 28848  013DC4  6E0C               	movwf	(btemp+11)^0,c
 28849  013DC6  0E80               	movlw	128
 28850  013DC8  160C               	andwf	(btemp+11)^0,f,c
 28851                           
 28852                           ;stkvar	_sign @ sp[(-13)+12]
 28853  013DCA  0EFF               	movlw	-1
 28854  013DCC  0060  F033  FFE3   	movff	btemp+11,plusw1
 28855                           
 28856                           ;stkvar	_b @ sp[(-13)+-4]
 28857  013DD2  0EF2               	movlw	242
 28858  013DD4  24E1               	addwf	fsr1l,w,c
 28859  013DD6  6ED9               	movwf	fsr2l,c
 28860  013DD8  0EFF               	movlw	255
 28861  013DDA  20E2               	addwfc	fsr1h,w,c
 28862  013DDC  6EDA               	movwf	fsr2h,c
 28863  013DDE  50DF               	movf	indf2,w,c
 28864  013DE0  6E0C               	movwf	(btemp+11)^0,c
 28865  013DE2  90D8               	bcf	status,0,c
 28866  013DE4  340C               	rlcf	(btemp+11)^0,w,c
 28867  013DE6  6E0B               	movwf	(btemp+10)^0,c
 28868                           
 28869                           ;stkvar	_bexp @ sp[(-13)+10]
 28870  013DE8  0EFD               	movlw	-3
 28871  013DEA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28872                           
 28873                           ;stkvar	_b @ sp[(-13)+-4]
 28874  013DF0  0EF1               	movlw	241
 28875  013DF2  24E1               	addwf	fsr1l,w,c
 28876  013DF4  6ED9               	movwf	fsr2l,c
 28877  013DF6  0EFF               	movlw	255
 28878  013DF8  20E2               	addwfc	fsr1h,w,c
 28879  013DFA  6EDA               	movwf	fsr2h,c
 28880  013DFC  AEDF               	btfss	indf2,7,c
 28881  013DFE  D002               	goto	l8523
 28882                           
 28883                           ;stkvar	_bexp @ sp[(-13)+10]
 28884  013E00  0EFD               	movlw	-3
 28885  013E02  80E3               	bsf	plusw1,0,c
 28886  013E04                     l8523:
 28887                           
 28888                           ;stkvar	_bexp @ sp[(-13)+10]
 28889  013E04  0EFD               	movlw	-3
 28890  013E06  50E3               	movf	plusw1,w,c
 28891  013E08  B4D8               	btfsc	status,2,c
 28892  013E0A  D01F               	goto	l8531
 28893                           
 28894                           ;stkvar	_bexp @ sp[(-13)+10]
 28895  013E0C  0EFD               	movlw	-3
 28896  013E0E  28E3               	incf	plusw1,w,c
 28897  013E10  A4D8               	btfss	status,2,c
 28898  013E12  D018               	goto	l8529
 28899  013E14  0E00               	movlw	0
 28900  013E16  6E09               	movwf	(btemp+8)^0,c
 28901  013E18  0E00               	movlw	0
 28902  013E1A  6E0A               	movwf	(btemp+9)^0,c
 28903  013E1C  0E00               	movlw	0
 28904  013E1E  6E0B               	movwf	(btemp+10)^0,c
 28905  013E20  0E00               	movlw	0
 28906  013E22  6E0C               	movwf	(btemp+11)^0,c
 28907                           
 28908                           ;stkvar	_b @ sp[(-13)+-4]
 28909  013E24  0EEF               	movlw	-17
 28910  013E26  0060  F027  FFE3   	movff	btemp+8,plusw1
 28911  013E2C  0EF0               	movlw	-16
 28912  013E2E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28913  013E34  0EF1               	movlw	-15
 28914  013E36  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28915  013E3C  0EF2               	movlw	-14
 28916  013E3E  0060  F033  FFE3   	movff	btemp+11,plusw1
 28917  013E44                     l8529:
 28918                           
 28919                           ;stkvar	_b @ sp[(-13)+-4]
 28920  013E44  0EF1               	movlw	-15
 28921  013E46  8EE3               	bsf	plusw1,7,c
 28922  013E48  D018               	goto	l8533
 28923  013E4A                     l8531:
 28924  013E4A  0E00               	movlw	0
 28925  013E4C  6E09               	movwf	(btemp+8)^0,c
 28926  013E4E  0E00               	movlw	0
 28927  013E50  6E0A               	movwf	(btemp+9)^0,c
 28928  013E52  0E00               	movlw	0
 28929  013E54  6E0B               	movwf	(btemp+10)^0,c
 28930  013E56  0E00               	movlw	0
 28931  013E58  6E0C               	movwf	(btemp+11)^0,c
 28932                           
 28933                           ;stkvar	_b @ sp[(-13)+-4]
 28934  013E5A  0EEF               	movlw	-17
 28935  013E5C  0060  F027  FFE3   	movff	btemp+8,plusw1
 28936  013E62  0EF0               	movlw	-16
 28937  013E64  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28938  013E6A  0EF1               	movlw	-15
 28939  013E6C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28940  013E72  0EF2               	movlw	-14
 28941  013E74  0060  F033  FFE3   	movff	btemp+11,plusw1
 28942  013E7A                     l8533:
 28943                           
 28944                           ;stkvar	_a @ sp[(-13)+-8]
 28945  013E7A  0EEE               	movlw	238
 28946  013E7C  24E1               	addwf	fsr1l,w,c
 28947  013E7E  6ED9               	movwf	fsr2l,c
 28948  013E80  0EFF               	movlw	255
 28949  013E82  20E2               	addwfc	fsr1h,w,c
 28950  013E84  6EDA               	movwf	fsr2h,c
 28951  013E86  50DF               	movf	indf2,w,c
 28952  013E88  6E0C               	movwf	(btemp+11)^0,c
 28953  013E8A  0E80               	movlw	128
 28954  013E8C  160C               	andwf	(btemp+11)^0,f,c
 28955                           
 28956                           ;stkvar	_sign @ sp[(-13)+12]
 28957  013E8E  50E1               	movf	fsr1l,w,c
 28958  013E90  0FFF               	addlw	-1
 28959  013E92  6ED9               	movwf	fsr2l,c
 28960  013E94  50E2               	movf	fsr1h,w,c
 28961  013E96  6EDA               	movwf	fsr2h,c
 28962  013E98  0EFF               	movlw	255
 28963  013E9A  22DA               	addwfc	fsr2h,f,c
 28964  013E9C  500C               	movf	(btemp+11)^0,w,c
 28965  013E9E  1ADF               	xorwf	indf2,f,c
 28966                           
 28967                           ;stkvar	_a @ sp[(-13)+-8]
 28968  013EA0  0EEE               	movlw	238
 28969  013EA2  24E1               	addwf	fsr1l,w,c
 28970  013EA4  6ED9               	movwf	fsr2l,c
 28971  013EA6  0EFF               	movlw	255
 28972  013EA8  20E2               	addwfc	fsr1h,w,c
 28973  013EAA  6EDA               	movwf	fsr2h,c
 28974  013EAC  50DF               	movf	indf2,w,c
 28975  013EAE  6E0C               	movwf	(btemp+11)^0,c
 28976  013EB0  90D8               	bcf	status,0,c
 28977  013EB2  340C               	rlcf	(btemp+11)^0,w,c
 28978  013EB4  6E0B               	movwf	(btemp+10)^0,c
 28979                           
 28980                           ;stkvar	_aexp @ sp[(-13)+11]
 28981  013EB6  0EFE               	movlw	-2
 28982  013EB8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28983                           
 28984                           ;stkvar	_a @ sp[(-13)+-8]
 28985  013EBE  0EED               	movlw	237
 28986  013EC0  24E1               	addwf	fsr1l,w,c
 28987  013EC2  6ED9               	movwf	fsr2l,c
 28988  013EC4  0EFF               	movlw	255
 28989  013EC6  20E2               	addwfc	fsr1h,w,c
 28990  013EC8  6EDA               	movwf	fsr2h,c
 28991  013ECA  AEDF               	btfss	indf2,7,c
 28992  013ECC  D002               	goto	l8541
 28993                           
 28994                           ;stkvar	_aexp @ sp[(-13)+11]
 28995  013ECE  0EFE               	movlw	-2
 28996  013ED0  80E3               	bsf	plusw1,0,c
 28997  013ED2                     l8541:
 28998                           
 28999                           ;stkvar	_aexp @ sp[(-13)+11]
 29000  013ED2  0EFE               	movlw	-2
 29001  013ED4  50E3               	movf	plusw1,w,c
 29002  013ED6  B4D8               	btfsc	status,2,c
 29003  013ED8  D01F               	goto	l8549
 29004                           
 29005                           ;stkvar	_aexp @ sp[(-13)+11]
 29006  013EDA  0EFE               	movlw	-2
 29007  013EDC  28E3               	incf	plusw1,w,c
 29008  013EDE  A4D8               	btfss	status,2,c
 29009  013EE0  D018               	goto	l8547
 29010  013EE2  0E00               	movlw	0
 29011  013EE4  6E09               	movwf	(btemp+8)^0,c
 29012  013EE6  0E00               	movlw	0
 29013  013EE8  6E0A               	movwf	(btemp+9)^0,c
 29014  013EEA  0E00               	movlw	0
 29015  013EEC  6E0B               	movwf	(btemp+10)^0,c
 29016  013EEE  0E00               	movlw	0
 29017  013EF0  6E0C               	movwf	(btemp+11)^0,c
 29018                           
 29019                           ;stkvar	_a @ sp[(-13)+-8]
 29020  013EF2  0EEB               	movlw	-21
 29021  013EF4  0060  F027  FFE3   	movff	btemp+8,plusw1
 29022  013EFA  0EEC               	movlw	-20
 29023  013EFC  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29024  013F02  0EED               	movlw	-19
 29025  013F04  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29026  013F0A  0EEE               	movlw	-18
 29027  013F0C  0060  F033  FFE3   	movff	btemp+11,plusw1
 29028  013F12                     l8547:
 29029                           
 29030                           ;stkvar	_a @ sp[(-13)+-8]
 29031  013F12  0EED               	movlw	-19
 29032  013F14  8EE3               	bsf	plusw1,7,c
 29033  013F16  D018               	goto	l8551
 29034  013F18                     l8549:
 29035  013F18  0E00               	movlw	0
 29036  013F1A  6E09               	movwf	(btemp+8)^0,c
 29037  013F1C  0E00               	movlw	0
 29038  013F1E  6E0A               	movwf	(btemp+9)^0,c
 29039  013F20  0E00               	movlw	0
 29040  013F22  6E0B               	movwf	(btemp+10)^0,c
 29041  013F24  0E00               	movlw	0
 29042  013F26  6E0C               	movwf	(btemp+11)^0,c
 29043                           
 29044                           ;stkvar	_a @ sp[(-13)+-8]
 29045  013F28  0EEB               	movlw	-21
 29046  013F2A  0060  F027  FFE3   	movff	btemp+8,plusw1
 29047  013F30  0EEC               	movlw	-20
 29048  013F32  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29049  013F38  0EED               	movlw	-19
 29050  013F3A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29051  013F40  0EEE               	movlw	-18
 29052  013F42  0060  F033  FFE3   	movff	btemp+11,plusw1
 29053  013F48                     l8551:
 29054                           
 29055                           ;stkvar	_aexp @ sp[(-13)+11]
 29056  013F48  0EFE               	movlw	-2
 29057  013F4A  50E3               	movf	plusw1,w,c
 29058  013F4C  B4D8               	btfsc	status,2,c
 29059  013F4E  D004               	goto	u6910
 29060                           
 29061                           ;stkvar	_bexp @ sp[(-13)+10]
 29062  013F50  0EFD               	movlw	-3
 29063  013F52  50E3               	movf	plusw1,w,c
 29064  013F54  A4D8               	btfss	status,2,c
 29065  013F56  D009               	goto	l8559
 29066  013F58                     u6910:
 29067  013F58  0E00               	movlw	0
 29068  013F5A  6E01               	movwf	btemp^0,c
 29069  013F5C  0E00               	movlw	0
 29070  013F5E  6E02               	movwf	(btemp+1)^0,c
 29071  013F60  0E00               	movlw	0
 29072  013F62  6E03               	movwf	(btemp+2)^0,c
 29073  013F64  0E00               	movlw	0
 29074  013F66  6E04               	movwf	(btemp+3)^0,c
 29075  013F68  D332               	goto	l3088
 29076  013F6A                     l8559:
 29077                           
 29078                           ;stkvar	_b @ sp[(-13)+-4]
 29079  013F6A  0EEF               	movlw	-17
 29080  013F6C  006F FF8C  F00C    	movff	plusw1,btemp+11
 29081                           
 29082                           ;stkvar	_a @ sp[(-13)+-8]
 29083  013F72  0EED               	movlw	237
 29084  013F74  24E1               	addwf	fsr1l,w,c
 29085  013F76  6ED9               	movwf	fsr2l,c
 29086  013F78  0EFF               	movlw	255
 29087  013F7A  20E2               	addwfc	fsr1h,w,c
 29088  013F7C  6EDA               	movwf	fsr2h,c
 29089  013F7E  50DF               	movf	indf2,w,c
 29090  013F80  020C               	mulwf	(btemp+11)^0,c
 29091                           
 29092                           ;stkvar	_temp @ sp[(-13)+8]
 29093  013F82  0EFB               	movlw	-5
 29094  013F84  006F FFCF FFE3     	movff	prodl,plusw1
 29095  013F8A  0EFC               	movlw	-4
 29096  013F8C  006F FFD3 FFE3     	movff	prodh,plusw1
 29097                           
 29098                           ;stkvar	_temp @ sp[(-13)+8]
 29099  013F92  0EFB               	movlw	-5
 29100  013F94  006F FF8C  F00C    	movff	plusw1,btemp+11
 29101  013F9A  0060  F030  F005   	movff	btemp+11,btemp+4
 29102  013FA0  6A06               	clrf	(btemp+5)^0,c
 29103  013FA2  6A07               	clrf	(btemp+6)^0,c
 29104  013FA4  6A08               	clrf	(btemp+7)^0,c
 29105                           
 29106                           ;stkvar	_grs @ sp[(-13)+4]
 29107  013FA6  0EF7               	movlw	-9
 29108  013FA8  0060  F017  FFE3   	movff	btemp+4,plusw1
 29109  013FAE  0EF8               	movlw	-8
 29110  013FB0  0060  F01B  FFE3   	movff	btemp+5,plusw1
 29111  013FB6  0EF9               	movlw	-7
 29112  013FB8  0060  F01F  FFE3   	movff	btemp+6,plusw1
 29113  013FBE  0EFA               	movlw	-6
 29114  013FC0  0060  F023  FFE3   	movff	btemp+7,plusw1
 29115                           
 29116                           ;stkvar	_temp @ sp[(-13)+8]
 29117  013FC6  0EFC               	movlw	252
 29118  013FC8  24E1               	addwf	fsr1l,w,c
 29119  013FCA  6ED9               	movwf	fsr2l,c
 29120  013FCC  0EFF               	movlw	255
 29121  013FCE  20E2               	addwfc	fsr1h,w,c
 29122  013FD0  6EDA               	movwf	fsr2h,c
 29123  013FD2  50DF               	movf	indf2,w,c
 29124  013FD4  6E0C               	movwf	(btemp+11)^0,c
 29125  013FD6  0060  F030  F005   	movff	btemp+11,btemp+4
 29126  013FDC  6A06               	clrf	(btemp+5)^0,c
 29127  013FDE  6A07               	clrf	(btemp+6)^0,c
 29128  013FE0  6A08               	clrf	(btemp+7)^0,c
 29129                           
 29130                           ;stkvar	_prod @ sp[(-13)+0]
 29131  013FE2  0EF3               	movlw	-13
 29132  013FE4  0060  F017  FFE3   	movff	btemp+4,plusw1
 29133  013FEA  0EF4               	movlw	-12
 29134  013FEC  0060  F01B  FFE3   	movff	btemp+5,plusw1
 29135  013FF2  0EF5               	movlw	-11
 29136  013FF4  0060  F01F  FFE3   	movff	btemp+6,plusw1
 29137  013FFA  0EF6               	movlw	-10
 29138  013FFC  0060  F023  FFE3   	movff	btemp+7,plusw1
 29139                           
 29140                           ;stkvar	_b @ sp[(-13)+-4]
 29141  014002  0EF0               	movlw	240
 29142  014004  24E1               	addwf	fsr1l,w,c
 29143  014006  6ED9               	movwf	fsr2l,c
 29144  014008  0EFF               	movlw	255
 29145  01400A  20E2               	addwfc	fsr1h,w,c
 29146  01400C  6EDA               	movwf	fsr2h,c
 29147  01400E  50DF               	movf	indf2,w,c
 29148  014010  6E0C               	movwf	(btemp+11)^0,c
 29149                           
 29150                           ;stkvar	_a @ sp[(-13)+-8]
 29151  014012  0EEC               	movlw	236
 29152  014014  24E1               	addwf	fsr1l,w,c
 29153  014016  6ED9               	movwf	fsr2l,c
 29154  014018  0EFF               	movlw	255
 29155  01401A  20E2               	addwfc	fsr1h,w,c
 29156  01401C  6EDA               	movwf	fsr2h,c
 29157  01401E  50DF               	movf	indf2,w,c
 29158  014020  020C               	mulwf	(btemp+11)^0,c
 29159                           
 29160                           ;stkvar	_temp @ sp[(-13)+8]
 29161  014022  0EFB               	movlw	-5
 29162  014024  006F FFCF FFE3     	movff	prodl,plusw1
 29163  01402A  0EFC               	movlw	-4
 29164  01402C  006F FFD3 FFE3     	movff	prodh,plusw1
 29165                           
 29166                           ;stkvar	_grs @ sp[(-13)+4]
 29167  014032  50E1               	movf	fsr1l,w,c
 29168  014034  0FF7               	addlw	-9
 29169  014036  6ED9               	movwf	fsr2l,c
 29170  014038  50E2               	movf	fsr1h,w,c
 29171  01403A  6EDA               	movwf	fsr2h,c
 29172  01403C  0EFF               	movlw	255
 29173  01403E  22DA               	addwfc	fsr2h,f,c
 29174                           
 29175                           ;stkvar	_temp @ sp[(-13)+8]
 29176  014040  0EFB               	movlw	-5
 29177  014042  50E3               	movf	plusw1,w,c
 29178  014044  26DE               	addwf	postinc2,f,c
 29179  014046  0E00               	movlw	0
 29180  014048  22DE               	addwfc	postinc2,f,c
 29181  01404A  22DE               	addwfc	postinc2,f,c
 29182  01404C  22DE               	addwfc	postinc2,f,c
 29183                           
 29184                           ;stkvar	_prod @ sp[(-13)+0]
 29185  01404E  50E1               	movf	fsr1l,w,c
 29186  014050  0FF3               	addlw	-13
 29187  014052  6ED9               	movwf	fsr2l,c
 29188  014054  50E2               	movf	fsr1h,w,c
 29189  014056  6EDA               	movwf	fsr2h,c
 29190  014058  0EFF               	movlw	255
 29191  01405A  22DA               	addwfc	fsr2h,f,c
 29192                           
 29193                           ;stkvar	_temp @ sp[(-13)+8]
 29194  01405C  0EFC               	movlw	252
 29195  01405E  24E1               	addwf	fsr1l,w,c
 29196  014060  6EE9               	movwf	fsr0l,c
 29197  014062  0EFF               	movlw	255
 29198  014064  20E2               	addwfc	fsr1h,w,c
 29199  014066  6EEA               	movwf	fsr0h,c
 29200  014068  50EF               	movf	indf0,w,c
 29201  01406A  26DE               	addwf	postinc2,f,c
 29202  01406C  0E00               	movlw	0
 29203  01406E  22DE               	addwfc	postinc2,f,c
 29204  014070  22DE               	addwfc	postinc2,f,c
 29205  014072  22DE               	addwfc	postinc2,f,c
 29206                           
 29207                           ;stkvar	_b @ sp[(-13)+-4]
 29208  014074  0EF1               	movlw	241
 29209  014076  24E1               	addwf	fsr1l,w,c
 29210  014078  6ED9               	movwf	fsr2l,c
 29211  01407A  0EFF               	movlw	255
 29212  01407C  20E2               	addwfc	fsr1h,w,c
 29213  01407E  6EDA               	movwf	fsr2h,c
 29214  014080  50DF               	movf	indf2,w,c
 29215  014082  6E0C               	movwf	(btemp+11)^0,c
 29216                           
 29217                           ;stkvar	_a @ sp[(-13)+-8]
 29218  014084  0EEB               	movlw	-21
 29219  014086  50E3               	movf	plusw1,w,c
 29220  014088  020C               	mulwf	(btemp+11)^0,c
 29221                           
 29222                           ;stkvar	_temp @ sp[(-13)+8]
 29223  01408A  0EFB               	movlw	-5
 29224  01408C  006F FFCF FFE3     	movff	prodl,plusw1
 29225  014092  0EFC               	movlw	-4
 29226  014094  006F FFD3 FFE3     	movff	prodh,plusw1
 29227                           
 29228                           ;stkvar	_grs @ sp[(-13)+4]
 29229  01409A  50E1               	movf	fsr1l,w,c
 29230  01409C  0FF7               	addlw	-9
 29231  01409E  6ED9               	movwf	fsr2l,c
 29232  0140A0  50E2               	movf	fsr1h,w,c
 29233  0140A2  6EDA               	movwf	fsr2h,c
 29234  0140A4  0EFF               	movlw	255
 29235  0140A6  22DA               	addwfc	fsr2h,f,c
 29236                           
 29237                           ;stkvar	_temp @ sp[(-13)+8]
 29238  0140A8  0EFB               	movlw	-5
 29239  0140AA  50E3               	movf	plusw1,w,c
 29240  0140AC  26DE               	addwf	postinc2,f,c
 29241  0140AE  0E00               	movlw	0
 29242  0140B0  22DE               	addwfc	postinc2,f,c
 29243  0140B2  22DE               	addwfc	postinc2,f,c
 29244  0140B4  22DE               	addwfc	postinc2,f,c
 29245                           
 29246                           ;stkvar	_prod @ sp[(-13)+0]
 29247  0140B6  50E1               	movf	fsr1l,w,c
 29248  0140B8  0FF3               	addlw	-13
 29249  0140BA  6ED9               	movwf	fsr2l,c
 29250  0140BC  50E2               	movf	fsr1h,w,c
 29251  0140BE  6EDA               	movwf	fsr2h,c
 29252  0140C0  0EFF               	movlw	255
 29253  0140C2  22DA               	addwfc	fsr2h,f,c
 29254                           
 29255                           ;stkvar	_temp @ sp[(-13)+8]
 29256  0140C4  0EFC               	movlw	252
 29257  0140C6  24E1               	addwf	fsr1l,w,c
 29258  0140C8  6EE9               	movwf	fsr0l,c
 29259  0140CA  0EFF               	movlw	255
 29260  0140CC  20E2               	addwfc	fsr1h,w,c
 29261  0140CE  6EEA               	movwf	fsr0h,c
 29262  0140D0  50EF               	movf	indf0,w,c
 29263  0140D2  26DE               	addwf	postinc2,f,c
 29264  0140D4  0E00               	movlw	0
 29265  0140D6  22DE               	addwfc	postinc2,f,c
 29266  0140D8  22DE               	addwfc	postinc2,f,c
 29267  0140DA  22DE               	addwfc	postinc2,f,c
 29268                           
 29269                           ;stkvar	_grs @ sp[(-13)+4]
 29270  0140DC  50E1               	movf	fsr1l,w,c
 29271  0140DE  0FF7               	addlw	-9
 29272  0140E0  6ED9               	movwf	fsr2l,c
 29273  0140E2  50E2               	movf	fsr1h,w,c
 29274  0140E4  6EDA               	movwf	fsr2h,c
 29275  0140E6  0EFF               	movlw	255
 29276  0140E8  22DA               	addwfc	fsr2h,f,c
 29277  0140EA  0E08               	movlw	8
 29278  0140EC                     u6925:
 29279  0140EC  90D8               	bcf	status,0,c
 29280  0140EE  36DE               	rlcf	postinc2,f,c
 29281  0140F0  36DE               	rlcf	postinc2,f,c
 29282  0140F2  36DE               	rlcf	postinc2,f,c
 29283  0140F4  36DD               	rlcf	postdec2,f,c
 29284  0140F6  52DD               	movf	postdec2,f,c
 29285  0140F8  52DD               	movf	postdec2,f,c
 29286  0140FA  2EE8               	decfsz	wreg,f,c
 29287  0140FC  D7F7               	goto	u6925
 29288                           
 29289                           ;stkvar	_b @ sp[(-13)+-4]
 29290  0140FE  0EF0               	movlw	240
 29291  014100  24E1               	addwf	fsr1l,w,c
 29292  014102  6ED9               	movwf	fsr2l,c
 29293  014104  0EFF               	movlw	255
 29294  014106  20E2               	addwfc	fsr1h,w,c
 29295  014108  6EDA               	movwf	fsr2h,c
 29296  01410A  50DF               	movf	indf2,w,c
 29297  01410C  6E0C               	movwf	(btemp+11)^0,c
 29298                           
 29299                           ;stkvar	_a @ sp[(-13)+-8]
 29300  01410E  0EEB               	movlw	-21
 29301  014110  50E3               	movf	plusw1,w,c
 29302  014112  020C               	mulwf	(btemp+11)^0,c
 29303                           
 29304                           ;stkvar	_temp @ sp[(-13)+8]
 29305  014114  0EFB               	movlw	-5
 29306  014116  006F FFCF FFE3     	movff	prodl,plusw1
 29307  01411C  0EFC               	movlw	-4
 29308  01411E  006F FFD3 FFE3     	movff	prodh,plusw1
 29309                           
 29310                           ;stkvar	_temp @ sp[(-13)+8]
 29311  014124  0EFB               	movlw	-5
 29312  014126  006F FF8C  F00B    	movff	plusw1,btemp+10
 29313  01412C  0EFC               	movlw	-4
 29314  01412E  006F FF8C  F00C    	movff	plusw1,btemp+11
 29315                           
 29316                           ;stkvar	_grs @ sp[(-13)+4]
 29317  014134  50E1               	movf	fsr1l,w,c
 29318  014136  0FF7               	addlw	-9
 29319  014138  6ED9               	movwf	fsr2l,c
 29320  01413A  50E2               	movf	fsr1h,w,c
 29321  01413C  6EDA               	movwf	fsr2h,c
 29322  01413E  0EFF               	movlw	255
 29323  014140  22DA               	addwfc	fsr2h,f,c
 29324  014142  500B               	movf	(btemp+10)^0,w,c
 29325  014144  26DE               	addwf	postinc2,f,c
 29326  014146  500C               	movf	(btemp+11)^0,w,c
 29327  014148  22DE               	addwfc	postinc2,f,c
 29328  01414A  0E00               	movlw	0
 29329  01414C  22DE               	addwfc	postinc2,f,c
 29330  01414E  22DE               	addwfc	postinc2,f,c
 29331                           
 29332                           ;stkvar	_b @ sp[(-13)+-4]
 29333  014150  0EEF               	movlw	-17
 29334  014152  006F FF8C  F00C    	movff	plusw1,btemp+11
 29335                           
 29336                           ;stkvar	_a @ sp[(-13)+-8]
 29337  014158  0EEC               	movlw	236
 29338  01415A  24E1               	addwf	fsr1l,w,c
 29339  01415C  6ED9               	movwf	fsr2l,c
 29340  01415E  0EFF               	movlw	255
 29341  014160  20E2               	addwfc	fsr1h,w,c
 29342  014162  6EDA               	movwf	fsr2h,c
 29343  014164  50DF               	movf	indf2,w,c
 29344  014166  020C               	mulwf	(btemp+11)^0,c
 29345                           
 29346                           ;stkvar	_temp @ sp[(-13)+8]
 29347  014168  0EFB               	movlw	-5
 29348  01416A  006F FFCF FFE3     	movff	prodl,plusw1
 29349  014170  0EFC               	movlw	-4
 29350  014172  006F FFD3 FFE3     	movff	prodh,plusw1
 29351                           
 29352                           ;stkvar	_temp @ sp[(-13)+8]
 29353  014178  0EFB               	movlw	-5
 29354  01417A  006F FF8C  F00B    	movff	plusw1,btemp+10
 29355  014180  0EFC               	movlw	-4
 29356  014182  006F FF8C  F00C    	movff	plusw1,btemp+11
 29357                           
 29358                           ;stkvar	_grs @ sp[(-13)+4]
 29359  014188  50E1               	movf	fsr1l,w,c
 29360  01418A  0FF7               	addlw	-9
 29361  01418C  6ED9               	movwf	fsr2l,c
 29362  01418E  50E2               	movf	fsr1h,w,c
 29363  014190  6EDA               	movwf	fsr2h,c
 29364  014192  0EFF               	movlw	255
 29365  014194  22DA               	addwfc	fsr2h,f,c
 29366  014196  500B               	movf	(btemp+10)^0,w,c
 29367  014198  26DE               	addwf	postinc2,f,c
 29368  01419A  500C               	movf	(btemp+11)^0,w,c
 29369  01419C  22DE               	addwfc	postinc2,f,c
 29370  01419E  0E00               	movlw	0
 29371  0141A0  22DE               	addwfc	postinc2,f,c
 29372  0141A2  22DE               	addwfc	postinc2,f,c
 29373                           
 29374                           ;stkvar	_grs @ sp[(-13)+4]
 29375  0141A4  50E1               	movf	fsr1l,w,c
 29376  0141A6  0FF7               	addlw	-9
 29377  0141A8  6ED9               	movwf	fsr2l,c
 29378  0141AA  50E2               	movf	fsr1h,w,c
 29379  0141AC  6EDA               	movwf	fsr2h,c
 29380  0141AE  0EFF               	movlw	255
 29381  0141B0  22DA               	addwfc	fsr2h,f,c
 29382  0141B2  0E08               	movlw	8
 29383  0141B4                     u6935:
 29384  0141B4  90D8               	bcf	status,0,c
 29385  0141B6  36DE               	rlcf	postinc2,f,c
 29386  0141B8  36DE               	rlcf	postinc2,f,c
 29387  0141BA  36DE               	rlcf	postinc2,f,c
 29388  0141BC  36DD               	rlcf	postdec2,f,c
 29389  0141BE  52DD               	movf	postdec2,f,c
 29390  0141C0  52DD               	movf	postdec2,f,c
 29391  0141C2  2EE8               	decfsz	wreg,f,c
 29392  0141C4  D7F7               	goto	u6935
 29393                           
 29394                           ;stkvar	_b @ sp[(-13)+-4]
 29395  0141C6  0EEF               	movlw	-17
 29396  0141C8  006F FF8C  F00C    	movff	plusw1,btemp+11
 29397                           
 29398                           ;stkvar	_a @ sp[(-13)+-8]
 29399  0141CE  0EEB               	movlw	-21
 29400  0141D0  50E3               	movf	plusw1,w,c
 29401  0141D2  020C               	mulwf	(btemp+11)^0,c
 29402                           
 29403                           ;stkvar	_temp @ sp[(-13)+8]
 29404  0141D4  0EFB               	movlw	-5
 29405  0141D6  006F FFCF FFE3     	movff	prodl,plusw1
 29406  0141DC  0EFC               	movlw	-4
 29407  0141DE  006F FFD3 FFE3     	movff	prodh,plusw1
 29408                           
 29409                           ;stkvar	_temp @ sp[(-13)+8]
 29410  0141E4  0EFB               	movlw	-5
 29411  0141E6  006F FF8C  F00B    	movff	plusw1,btemp+10
 29412  0141EC  0EFC               	movlw	-4
 29413  0141EE  006F FF8C  F00C    	movff	plusw1,btemp+11
 29414                           
 29415                           ;stkvar	_grs @ sp[(-13)+4]
 29416  0141F4  50E1               	movf	fsr1l,w,c
 29417  0141F6  0FF7               	addlw	-9
 29418  0141F8  6ED9               	movwf	fsr2l,c
 29419  0141FA  50E2               	movf	fsr1h,w,c
 29420  0141FC  6EDA               	movwf	fsr2h,c
 29421  0141FE  0EFF               	movlw	255
 29422  014200  22DA               	addwfc	fsr2h,f,c
 29423  014202  500B               	movf	(btemp+10)^0,w,c
 29424  014204  26DE               	addwf	postinc2,f,c
 29425  014206  500C               	movf	(btemp+11)^0,w,c
 29426  014208  22DE               	addwfc	postinc2,f,c
 29427  01420A  0E00               	movlw	0
 29428  01420C  22DE               	addwfc	postinc2,f,c
 29429  01420E  22DE               	addwfc	postinc2,f,c
 29430                           
 29431                           ;stkvar	_b @ sp[(-13)+-4]
 29432  014210  0EF0               	movlw	240
 29433  014212  24E1               	addwf	fsr1l,w,c
 29434  014214  6ED9               	movwf	fsr2l,c
 29435  014216  0EFF               	movlw	255
 29436  014218  20E2               	addwfc	fsr1h,w,c
 29437  01421A  6EDA               	movwf	fsr2h,c
 29438  01421C  50DF               	movf	indf2,w,c
 29439  01421E  6E0C               	movwf	(btemp+11)^0,c
 29440                           
 29441                           ;stkvar	_a @ sp[(-13)+-8]
 29442  014220  0EED               	movlw	237
 29443  014222  24E1               	addwf	fsr1l,w,c
 29444  014224  6ED9               	movwf	fsr2l,c
 29445  014226  0EFF               	movlw	255
 29446  014228  20E2               	addwfc	fsr1h,w,c
 29447  01422A  6EDA               	movwf	fsr2h,c
 29448  01422C  50DF               	movf	indf2,w,c
 29449  01422E  020C               	mulwf	(btemp+11)^0,c
 29450                           
 29451                           ;stkvar	_temp @ sp[(-13)+8]
 29452  014230  0EFB               	movlw	-5
 29453  014232  006F FFCF FFE3     	movff	prodl,plusw1
 29454  014238  0EFC               	movlw	-4
 29455  01423A  006F FFD3 FFE3     	movff	prodh,plusw1
 29456                           
 29457                           ;stkvar	_temp @ sp[(-13)+8]
 29458  014240  0EFB               	movlw	-5
 29459  014242  006F FF8C  F00B    	movff	plusw1,btemp+10
 29460  014248  0EFC               	movlw	-4
 29461  01424A  006F FF8C  F00C    	movff	plusw1,btemp+11
 29462                           
 29463                           ;stkvar	_prod @ sp[(-13)+0]
 29464  014250  50E1               	movf	fsr1l,w,c
 29465  014252  0FF3               	addlw	-13
 29466  014254  6ED9               	movwf	fsr2l,c
 29467  014256  50E2               	movf	fsr1h,w,c
 29468  014258  6EDA               	movwf	fsr2h,c
 29469  01425A  0EFF               	movlw	255
 29470  01425C  22DA               	addwfc	fsr2h,f,c
 29471  01425E  500B               	movf	(btemp+10)^0,w,c
 29472  014260  26DE               	addwf	postinc2,f,c
 29473  014262  500C               	movf	(btemp+11)^0,w,c
 29474  014264  22DE               	addwfc	postinc2,f,c
 29475  014266  0E00               	movlw	0
 29476  014268  22DE               	addwfc	postinc2,f,c
 29477  01426A  22DE               	addwfc	postinc2,f,c
 29478                           
 29479                           ;stkvar	_b @ sp[(-13)+-4]
 29480  01426C  0EF1               	movlw	241
 29481  01426E  24E1               	addwf	fsr1l,w,c
 29482  014270  6ED9               	movwf	fsr2l,c
 29483  014272  0EFF               	movlw	255
 29484  014274  20E2               	addwfc	fsr1h,w,c
 29485  014276  6EDA               	movwf	fsr2h,c
 29486  014278  50DF               	movf	indf2,w,c
 29487  01427A  6E0C               	movwf	(btemp+11)^0,c
 29488                           
 29489                           ;stkvar	_a @ sp[(-13)+-8]
 29490  01427C  0EEC               	movlw	236
 29491  01427E  24E1               	addwf	fsr1l,w,c
 29492  014280  6ED9               	movwf	fsr2l,c
 29493  014282  0EFF               	movlw	255
 29494  014284  20E2               	addwfc	fsr1h,w,c
 29495  014286  6EDA               	movwf	fsr2h,c
 29496  014288  50DF               	movf	indf2,w,c
 29497  01428A  020C               	mulwf	(btemp+11)^0,c
 29498                           
 29499                           ;stkvar	_temp @ sp[(-13)+8]
 29500  01428C  0EFB               	movlw	-5
 29501  01428E  006F FFCF FFE3     	movff	prodl,plusw1
 29502  014294  0EFC               	movlw	-4
 29503  014296  006F FFD3 FFE3     	movff	prodh,plusw1
 29504                           
 29505                           ;stkvar	_temp @ sp[(-13)+8]
 29506  01429C  0EFB               	movlw	-5
 29507  01429E  006F FF8C  F00B    	movff	plusw1,btemp+10
 29508  0142A4  0EFC               	movlw	-4
 29509  0142A6  006F FF8C  F00C    	movff	plusw1,btemp+11
 29510                           
 29511                           ;stkvar	_prod @ sp[(-13)+0]
 29512  0142AC  50E1               	movf	fsr1l,w,c
 29513  0142AE  0FF3               	addlw	-13
 29514  0142B0  6ED9               	movwf	fsr2l,c
 29515  0142B2  50E2               	movf	fsr1h,w,c
 29516  0142B4  6EDA               	movwf	fsr2h,c
 29517  0142B6  0EFF               	movlw	255
 29518  0142B8  22DA               	addwfc	fsr2h,f,c
 29519  0142BA  500B               	movf	(btemp+10)^0,w,c
 29520  0142BC  26DE               	addwf	postinc2,f,c
 29521  0142BE  500C               	movf	(btemp+11)^0,w,c
 29522  0142C0  22DE               	addwfc	postinc2,f,c
 29523  0142C2  0E00               	movlw	0
 29524  0142C4  22DE               	addwfc	postinc2,f,c
 29525  0142C6  22DE               	addwfc	postinc2,f,c
 29526                           
 29527                           ;stkvar	_b @ sp[(-13)+-4]
 29528  0142C8  0EF1               	movlw	241
 29529  0142CA  24E1               	addwf	fsr1l,w,c
 29530  0142CC  6ED9               	movwf	fsr2l,c
 29531  0142CE  0EFF               	movlw	255
 29532  0142D0  20E2               	addwfc	fsr1h,w,c
 29533  0142D2  6EDA               	movwf	fsr2h,c
 29534  0142D4  50DF               	movf	indf2,w,c
 29535  0142D6  6E0C               	movwf	(btemp+11)^0,c
 29536                           
 29537                           ;stkvar	_a @ sp[(-13)+-8]
 29538  0142D8  0EED               	movlw	237
 29539  0142DA  24E1               	addwf	fsr1l,w,c
 29540  0142DC  6ED9               	movwf	fsr2l,c
 29541  0142DE  0EFF               	movlw	255
 29542  0142E0  20E2               	addwfc	fsr1h,w,c
 29543  0142E2  6EDA               	movwf	fsr2h,c
 29544  0142E4  50DF               	movf	indf2,w,c
 29545  0142E6  020C               	mulwf	(btemp+11)^0,c
 29546                           
 29547                           ;stkvar	_temp @ sp[(-13)+8]
 29548  0142E8  0EFB               	movlw	-5
 29549  0142EA  006F FFCF FFE3     	movff	prodl,plusw1
 29550  0142F0  0EFC               	movlw	-4
 29551  0142F2  006F FFD3 FFE3     	movff	prodh,plusw1
 29552                           
 29553                           ;stkvar	_temp @ sp[(-13)+8]
 29554  0142F8  0EFB               	movlw	-5
 29555  0142FA  006F FF8C  F00B    	movff	plusw1,btemp+10
 29556  014300  0EFC               	movlw	-4
 29557  014302  006F FF8C  F00C    	movff	plusw1,btemp+11
 29558  014308  500B               	movf	(btemp+10)^0,w,c
 29559  01430A  6E05               	movwf	(btemp+4)^0,c
 29560  01430C  500C               	movf	(btemp+11)^0,w,c
 29561  01430E  6E06               	movwf	(btemp+5)^0,c
 29562  014310  6A07               	clrf	(btemp+6)^0,c
 29563  014312  6A08               	clrf	(btemp+7)^0,c
 29564  014314  0060  F01C  F008   	movff	btemp+6,btemp+7
 29565  01431A  0060  F018  F007   	movff	btemp+5,btemp+6
 29566  014320  0060  F014  F006   	movff	btemp+4,btemp+5
 29567  014326  6A05               	clrf	(btemp+4)^0,c
 29568                           
 29569                           ;stkvar	_prod @ sp[(-13)+0]
 29570  014328  50E1               	movf	fsr1l,w,c
 29571  01432A  0FF3               	addlw	-13
 29572  01432C  6ED9               	movwf	fsr2l,c
 29573  01432E  50E2               	movf	fsr1h,w,c
 29574  014330  6EDA               	movwf	fsr2h,c
 29575  014332  0EFF               	movlw	255
 29576  014334  22DA               	addwfc	fsr2h,f,c
 29577  014336  5005               	movf	(btemp+4)^0,w,c
 29578  014338  26DE               	addwf	postinc2,f,c
 29579  01433A  5006               	movf	(btemp+5)^0,w,c
 29580  01433C  22DE               	addwfc	postinc2,f,c
 29581  01433E  5007               	movf	(btemp+6)^0,w,c
 29582  014340  22DE               	addwfc	postinc2,f,c
 29583  014342  5008               	movf	(btemp+7)^0,w,c
 29584  014344  22DE               	addwfc	postinc2,f,c
 29585                           
 29586                           ;stkvar	_prod @ sp[(-13)+0]
 29587  014346  50E1               	movf	fsr1l,w,c
 29588  014348  0FF3               	addlw	-13
 29589  01434A  6ED9               	movwf	fsr2l,c
 29590  01434C  50E2               	movf	fsr1h,w,c
 29591  01434E  6EDA               	movwf	fsr2h,c
 29592  014350  0EFF               	movlw	255
 29593  014352  22DA               	addwfc	fsr2h,f,c
 29594                           
 29595                           ;stkvar	_grs @ sp[(-13)+4]
 29596  014354  0EFA               	movlw	250
 29597  014356  24E1               	addwf	fsr1l,w,c
 29598  014358  6EE9               	movwf	fsr0l,c
 29599  01435A  0EFF               	movlw	255
 29600  01435C  20E2               	addwfc	fsr1h,w,c
 29601  01435E  6EEA               	movwf	fsr0h,c
 29602  014360  50EF               	movf	indf0,w,c
 29603  014362  26DE               	addwf	postinc2,f,c
 29604  014364  0E00               	movlw	0
 29605  014366  22DE               	addwfc	postinc2,f,c
 29606  014368  22DE               	addwfc	postinc2,f,c
 29607  01436A  22DE               	addwfc	postinc2,f,c
 29608                           
 29609                           ;stkvar	_grs @ sp[(-13)+4]
 29610  01436C  50E1               	movf	fsr1l,w,c
 29611  01436E  0FF7               	addlw	-9
 29612  014370  6ED9               	movwf	fsr2l,c
 29613  014372  50E2               	movf	fsr1h,w,c
 29614  014374  6EDA               	movwf	fsr2h,c
 29615  014376  0EFF               	movlw	255
 29616  014378  22DA               	addwfc	fsr2h,f,c
 29617  01437A  0E08               	movlw	8
 29618  01437C                     u6945:
 29619  01437C  90D8               	bcf	status,0,c
 29620  01437E  36DE               	rlcf	postinc2,f,c
 29621  014380  36DE               	rlcf	postinc2,f,c
 29622  014382  36DE               	rlcf	postinc2,f,c
 29623  014384  36DD               	rlcf	postdec2,f,c
 29624  014386  52DD               	movf	postdec2,f,c
 29625  014388  52DD               	movf	postdec2,f,c
 29626  01438A  2EE8               	decfsz	wreg,f,c
 29627  01438C  D7F7               	goto	u6945
 29628  01438E  0E82               	movlw	130
 29629  014390  6E0B               	movwf	(btemp+10)^0,c
 29630  014392  0EFF               	movlw	255
 29631  014394  6E0C               	movwf	(btemp+11)^0,c
 29632                           
 29633                           ;stkvar	_bexp @ sp[(-13)+10]
 29634  014396  0EFD               	movlw	-3
 29635  014398  50E3               	movf	plusw1,w,c
 29636  01439A  6E09               	movwf	(btemp+8)^0,c
 29637  01439C  6A0A               	clrf	(btemp+9)^0,c
 29638                           
 29639                           ;stkvar	_aexp @ sp[(-13)+11]
 29640  01439E  0EFE               	movlw	-2
 29641  0143A0  50E3               	movf	plusw1,w,c
 29642  0143A2  2609               	addwf	(btemp+8)^0,f,c
 29643  0143A4  0E00               	movlw	0
 29644  0143A6  220A               	addwfc	(btemp+9)^0,f,c
 29645  0143A8  500B               	movf	(btemp+10)^0,w,c
 29646  0143AA  2609               	addwf	(btemp+8)^0,f,c
 29647  0143AC  500C               	movf	(btemp+11)^0,w,c
 29648  0143AE  220A               	addwfc	(btemp+9)^0,f,c
 29649                           
 29650                           ;stkvar	_temp @ sp[(-13)+8]
 29651  0143B0  0EFB               	movlw	-5
 29652  0143B2  0060  F027  FFE3   	movff	btemp+8,plusw1
 29653  0143B8  0EFC               	movlw	-4
 29654  0143BA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29655  0143C0  D021               	goto	l8621
 29656  0143C2                     l8611:
 29657                           
 29658                           ;stkvar	_prod @ sp[(-13)+0]
 29659  0143C2  90D8               	bcf	status,0,c
 29660  0143C4  0EF3               	movlw	-13
 29661  0143C6  36E3               	rlcf	plusw1,f,c
 29662  0143C8  0EF4               	movlw	-12
 29663  0143CA  36E3               	rlcf	plusw1,f,c
 29664  0143CC  0EF5               	movlw	-11
 29665  0143CE  36E3               	rlcf	plusw1,f,c
 29666  0143D0  0EF6               	movlw	-10
 29667  0143D2  36E3               	rlcf	plusw1,f,c
 29668                           
 29669                           ;stkvar	_grs @ sp[(-13)+4]
 29670  0143D4  0EFA               	movlw	-6
 29671  0143D6  AEE3               	btfss	plusw1,7,c
 29672  0143D8  D002               	goto	l8617
 29673                           
 29674                           ;stkvar	_prod @ sp[(-13)+0]
 29675  0143DA  0EF3               	movlw	-13
 29676  0143DC  80E3               	bsf	plusw1,0,c
 29677  0143DE                     l8617:
 29678                           
 29679                           ;stkvar	_grs @ sp[(-13)+4]
 29680  0143DE  90D8               	bcf	status,0,c
 29681  0143E0  0EF7               	movlw	-9
 29682  0143E2  36E3               	rlcf	plusw1,f,c
 29683  0143E4  0EF8               	movlw	-8
 29684  0143E6  36E3               	rlcf	plusw1,f,c
 29685  0143E8  0EF9               	movlw	-7
 29686  0143EA  36E3               	rlcf	plusw1,f,c
 29687  0143EC  0EFA               	movlw	-6
 29688  0143EE  36E3               	rlcf	plusw1,f,c
 29689                           
 29690                           ;stkvar	_temp @ sp[(-13)+8]
 29691  0143F0  50E1               	movf	fsr1l,w,c
 29692  0143F2  0FFB               	addlw	-5
 29693  0143F4  6ED9               	movwf	fsr2l,c
 29694  0143F6  50E2               	movf	fsr1h,w,c
 29695  0143F8  6EDA               	movwf	fsr2h,c
 29696  0143FA  0EFF               	movlw	255
 29697  0143FC  22DA               	addwfc	fsr2h,f,c
 29698  0143FE  06DE               	decf	postinc2,f,c
 29699  014400  0E00               	movlw	0
 29700  014402  5ADD               	subwfb	postdec2,f,c
 29701  014404                     l8621:
 29702                           
 29703                           ;stkvar	_prod @ sp[(-13)+0]
 29704  014404  0EF5               	movlw	-11
 29705  014406  AEE3               	btfss	plusw1,7,c
 29706  014408  D7DC               	goto	l8611
 29707                           
 29708                           ;stkvar	_aexp @ sp[(-13)+11]
 29709  01440A  0EFE               	movlw	-2
 29710  01440C  6AE3               	clrf	plusw1,c
 29711                           
 29712                           ;stkvar	_grs @ sp[(-13)+4]
 29713  01440E  0EFA               	movlw	-6
 29714  014410  AEE3               	btfss	plusw1,7,c
 29715  014412  D020               	goto	l8635
 29716                           
 29717                           ;stkvar	_grs @ sp[(-13)+4]
 29718  014414  50E1               	movf	fsr1l,w,c
 29719  014416  0FF7               	addlw	-9
 29720  014418  6ED9               	movwf	fsr2l,c
 29721  01441A  50E2               	movf	fsr1h,w,c
 29722  01441C  6EDA               	movwf	fsr2h,c
 29723  01441E  0EFF               	movlw	255
 29724  014420  22DA               	addwfc	fsr2h,f,c
 29725  014422  0EFF               	movlw	255
 29726  014424  14DE               	andwf	postinc2,w,c
 29727  014426  6E09               	movwf	(btemp+8)^0,c
 29728  014428  0EFF               	movlw	255
 29729  01442A  14DE               	andwf	postinc2,w,c
 29730  01442C  6E0A               	movwf	(btemp+9)^0,c
 29731  01442E  0EFF               	movlw	255
 29732  014430  14DE               	andwf	postinc2,w,c
 29733  014432  6E0B               	movwf	(btemp+10)^0,c
 29734  014434  0E7F               	movlw	127
 29735  014436  14DE               	andwf	postinc2,w,c
 29736  014438  6E0C               	movwf	(btemp+11)^0,c
 29737  01443A  5009               	movf	(btemp+8)^0,w,c
 29738  01443C  100A               	iorwf	(btemp+9)^0,w,c
 29739  01443E  100B               	iorwf	(btemp+10)^0,w,c
 29740  014440  100C               	iorwf	(btemp+11)^0,w,c
 29741  014442  B4D8               	btfsc	status,2,c
 29742  014444  D004               	goto	l8631
 29743  014446                     u6980:
 29744                           
 29745                           ;stkvar	_aexp @ sp[(-13)+11]
 29746  014446  0EFE               	movlw	-2
 29747  014448  6AE3               	clrf	plusw1,c
 29748  01444A  2AE3               	incf	plusw1,f,c
 29749  01444C  D003               	goto	l8635
 29750  01444E                     l8631:
 29751                           
 29752                           ;stkvar	_prod @ sp[(-13)+0]
 29753  01444E  0EF3               	movlw	-13
 29754  014450  B0E3               	btfsc	plusw1,0,c
 29755  014452  D7F9               	goto	u6980
 29756  014454                     l8635:
 29757                           
 29758                           ;stkvar	_aexp @ sp[(-13)+11]
 29759  014454  0EFE               	movlw	-2
 29760  014456  50E3               	movf	plusw1,w,c
 29761  014458  B4D8               	btfsc	status,2,c
 29762  01445A  D036               	goto	l8645
 29763                           
 29764                           ;stkvar	_prod @ sp[(-13)+0]
 29765  01445C  50E1               	movf	fsr1l,w,c
 29766  01445E  0FF3               	addlw	-13
 29767  014460  6ED9               	movwf	fsr2l,c
 29768  014462  50E2               	movf	fsr1h,w,c
 29769  014464  6EDA               	movwf	fsr2h,c
 29770  014466  0EFF               	movlw	255
 29771  014468  22DA               	addwfc	fsr2h,f,c
 29772  01446A  2ADE               	incf	postinc2,f,c
 29773  01446C  0E00               	movlw	0
 29774  01446E  22DE               	addwfc	postinc2,f,c
 29775  014470  22DE               	addwfc	postinc2,f,c
 29776  014472  22DE               	addwfc	postinc2,f,c
 29777                           
 29778                           ;stkvar	_prod @ sp[(-13)+0]
 29779  014474  0EF6               	movlw	-10
 29780  014476  A0E3               	btfss	plusw1,0,c
 29781  014478  D027               	goto	l8645
 29782  01447A  0E01               	movlw	1
 29783  01447C  6E0C               	movwf	(btemp+11)^0,c
 29784                           
 29785                           ;stkvar	_prod @ sp[(-13)+0]
 29786  01447E  50E1               	movf	fsr1l,w,c
 29787  014480  0FF3               	addlw	-13
 29788  014482  6ED9               	movwf	fsr2l,c
 29789  014484  50E2               	movf	fsr1h,w,c
 29790  014486  6EDA               	movwf	fsr2h,c
 29791  014488  0EFF               	movlw	255
 29792  01448A  22DA               	addwfc	fsr2h,f,c
 29793  01448C  280C               	incf	(btemp+11)^0,w,c
 29794  01448E  52DE               	movf	postinc2,f,c
 29795  014490  D008               	goto	u7020
 29796  014492                     u7025:
 29797  014492  52DE               	movf	postinc2,f,c
 29798  014494  90D8               	bcf	status,0,c
 29799  014496  BEDC               	btfsc	preinc2,7,c
 29800  014498  80D8               	bsf	status,0,c
 29801  01449A  32DD               	rrcf	postdec2,f,c
 29802  01449C  32DD               	rrcf	postdec2,f,c
 29803  01449E  32DD               	rrcf	postdec2,f,c
 29804  0144A0  32DE               	rrcf	postinc2,f,c
 29805  0144A2                     u7020:
 29806  0144A2  2EE8               	decfsz	wreg,f,c
 29807  0144A4  D7F6               	goto	u7025
 29808                           
 29809                           ;stkvar	_temp @ sp[(-13)+8]
 29810  0144A6  0EFB               	movlw	-5
 29811  0144A8  50E3               	movf	plusw1,w,c
 29812  0144AA  0F01               	addlw	1
 29813  0144AC  6E01               	movwf	btemp^0,c
 29814  0144AE  0EFB               	movlw	-5
 29815  0144B0  0060  F007  FFE3   	movff	btemp,plusw1
 29816  0144B6  6A01               	clrf	btemp^0,c
 29817  0144B8  0EFC               	movlw	-4
 29818  0144BA  50E3               	movf	plusw1,w,c
 29819  0144BC  2001               	addwfc	btemp^0,w,c
 29820  0144BE  6E01               	movwf	btemp^0,c
 29821  0144C0  0EFC               	movlw	-4
 29822  0144C2  0060  F007  FFE3   	movff	btemp,plusw1
 29823  0144C8                     l8645:
 29824                           
 29825                           ;stkvar	_temp @ sp[(-13)+8]
 29826  0144C8  0EFC               	movlw	-4
 29827  0144CA  BEE3               	btfsc	plusw1,7,c
 29828  0144CC  D020               	goto	l8649
 29829  0144CE  0EFC               	movlw	-4
 29830  0144D0  50E3               	movf	plusw1,w,c
 29831  0144D2  E104               	bnz	u7030
 29832  0144D4  0EFB               	movlw	-5
 29833  0144D6  28E3               	incf	plusw1,w,c
 29834  0144D8  A0D8               	btfss	status,0,c
 29835  0144DA  D019               	goto	l8649
 29836  0144DC                     u7030:
 29837  0144DC  0E00               	movlw	0
 29838  0144DE  6E09               	movwf	(btemp+8)^0,c
 29839  0144E0  0E00               	movlw	0
 29840  0144E2  6E0A               	movwf	(btemp+9)^0,c
 29841  0144E4  0E80               	movlw	128
 29842  0144E6  6E0B               	movwf	(btemp+10)^0,c
 29843  0144E8  0E7F               	movlw	127
 29844  0144EA  6E0C               	movwf	(btemp+11)^0,c
 29845                           
 29846                           ;stkvar	_prod @ sp[(-13)+0]
 29847  0144EC  0EF3               	movlw	-13
 29848  0144EE  0060  F027  FFE3   	movff	btemp+8,plusw1
 29849  0144F4  0EF4               	movlw	-12
 29850  0144F6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29851  0144FC  0EF5               	movlw	-11
 29852  0144FE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29853  014504  0EF6               	movlw	-10
 29854  014506  0060  F033  FFE3   	movff	btemp+11,plusw1
 29855  01450C  D044               	goto	l8665
 29856  01450E                     l8649:
 29857                           
 29858                           ;stkvar	_temp @ sp[(-13)+8]
 29859  01450E  0EFC               	movlw	-4
 29860  014510  BEE3               	btfsc	plusw1,7,c
 29861  014512  D007               	goto	u7040
 29862  014514  0EFC               	movlw	-4
 29863  014516  50E3               	movf	plusw1,w,c
 29864  014518  E10F               	bnz	l8655
 29865  01451A  0EFB               	movlw	-5
 29866  01451C  04E3               	decf	plusw1,w,c
 29867  01451E  B0D8               	btfsc	status,0,c
 29868  014520  D00B               	goto	l8655
 29869  014522                     u7040:
 29870                           
 29871                           ;stkvar	_prod @ sp[(-13)+0]
 29872  014522  0EF3               	movlw	-13
 29873  014524  6AE3               	clrf	plusw1,c
 29874  014526  0EF4               	movlw	-12
 29875  014528  6AE3               	clrf	plusw1,c
 29876  01452A  0EF5               	movlw	-11
 29877  01452C  6AE3               	clrf	plusw1,c
 29878  01452E  0EF6               	movlw	-10
 29879  014530  6AE3               	clrf	plusw1,c
 29880                           
 29881                           ;stkvar	_sign @ sp[(-13)+12]
 29882  014532  0EFF               	movlw	-1
 29883  014534  6AE3               	clrf	plusw1,c
 29884  014536  D02F               	goto	l8665
 29885  014538                     l8655:
 29886                           
 29887                           ;stkvar	_temp @ sp[(-13)+8]
 29888                           ;stkvar	_bexp @ sp[(-13)+10]
 29889  014538  0EFB               	movlw	-5
 29890  01453A  006F FF8C  F001    	movff	plusw1,btemp
 29891  014540  0EFD               	movlw	-3
 29892  014542  0060  F007  FFE3   	movff	btemp,plusw1
 29893                           
 29894                           ;stkvar	_prod @ sp[(-13)+0]
 29895  014548  50E1               	movf	fsr1l,w,c
 29896  01454A  0FF3               	addlw	-13
 29897  01454C  6ED9               	movwf	fsr2l,c
 29898  01454E  50E2               	movf	fsr1h,w,c
 29899  014550  6EDA               	movwf	fsr2h,c
 29900  014552  0EFF               	movlw	255
 29901  014554  22DA               	addwfc	fsr2h,f,c
 29902  014556  0EFF               	movlw	255
 29903  014558  16DE               	andwf	postinc2,f,c
 29904  01455A  0EFF               	movlw	255
 29905  01455C  16DE               	andwf	postinc2,f,c
 29906  01455E  0E7F               	movlw	127
 29907  014560  16DE               	andwf	postinc2,f,c
 29908  014562  0E00               	movlw	0
 29909  014564  16DE               	andwf	postinc2,f,c
 29910                           
 29911                           ;stkvar	_bexp @ sp[(-13)+10]
 29912  014566  0EFD               	movlw	-3
 29913  014568  A0E3               	btfss	plusw1,0,c
 29914  01456A  D008               	goto	l8663
 29915                           
 29916                           ;stkvar	_prod @ sp[(-13)+0]
 29917  01456C  0EF5               	movlw	245
 29918  01456E  24E1               	addwf	fsr1l,w,c
 29919  014570  6ED9               	movwf	fsr2l,c
 29920  014572  0EFF               	movlw	255
 29921  014574  20E2               	addwfc	fsr1h,w,c
 29922  014576  6EDA               	movwf	fsr2h,c
 29923  014578  0E00               	movlw	0
 29924  01457A  8EDB               	bsf	plusw2,7,c
 29925  01457C                     l8663:
 29926                           
 29927                           ;stkvar	_prod @ sp[(-13)+0]
 29928  01457C  0EF6               	movlw	246
 29929  01457E  24E1               	addwf	fsr1l,w,c
 29930  014580  6ED9               	movwf	fsr2l,c
 29931  014582  0EFF               	movlw	255
 29932  014584  20E2               	addwfc	fsr1h,w,c
 29933  014586  6EDA               	movwf	fsr2h,c
 29934                           
 29935                           ;stkvar	_bexp @ sp[(-13)+10]
 29936  014588  0EFD               	movlw	-3
 29937  01458A  006F FF8C  F00C    	movff	plusw1,btemp+11
 29938  014590  90D8               	bcf	status,0,c
 29939  014592  300C               	rrcf	(btemp+11)^0,w,c
 29940  014594  6EDF               	movwf	indf2,c
 29941  014596                     l8665:
 29942                           
 29943                           ;stkvar	_sign @ sp[(-13)+12]
 29944  014596  0EFF               	movlw	-1
 29945  014598  006F FF8C  F00C    	movff	plusw1,btemp+11
 29946                           
 29947                           ;stkvar	_prod @ sp[(-13)+0]
 29948  01459E  0EF6               	movlw	246
 29949  0145A0  24E1               	addwf	fsr1l,w,c
 29950  0145A2  6ED9               	movwf	fsr2l,c
 29951  0145A4  0EFF               	movlw	255
 29952  0145A6  20E2               	addwfc	fsr1h,w,c
 29953  0145A8  6EDA               	movwf	fsr2h,c
 29954  0145AA  500C               	movf	(btemp+11)^0,w,c
 29955  0145AC  12DF               	iorwf	indf2,f,c
 29956                           
 29957                           ;stkvar	_prod @ sp[(-13)+0]
 29958  0145AE  0EF3               	movlw	-13
 29959  0145B0  006F FF8C  F001    	movff	plusw1,btemp
 29960  0145B6  0EF4               	movlw	-12
 29961  0145B8  006F FF8C  F002    	movff	plusw1,btemp+1
 29962  0145BE  0EF5               	movlw	-11
 29963  0145C0  006F FF8C  F003    	movff	plusw1,btemp+2
 29964  0145C6  0EF6               	movlw	-10
 29965  0145C8  006F FF8C  F004    	movff	plusw1,btemp+3
 29966  0145CE                     l3088:
 29967                           
 29968                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 29969  0145CE  0EEB               	movlw	235
 29970  0145D0  26E1               	addwf	fsr1l,f,c
 29971  0145D2  0EFF               	movlw	255
 29972  0145D4  22E2               	addwfc	fsr1h,f,c
 29973  0145D6  0012               	return		;funcret
 29974  0145D8                     __end_of___flmul:
 29975                           	opt callstack 0
 29976                           
 29977 ;; *************** function _SYSTEM_Initialize *****************
 29978 ;; Defined at:
 29979 ;;		line 50 in file "mcc_generated_files/mcc.c"
 29980 ;; Parameters:    Size  Location     Type
 29981 ;;		None
 29982 ;; Auto vars:     Size  Location     Type
 29983 ;;		None
 29984 ;; Return value:  Size  Location     Type
 29985 ;;                  1  [STACK] void 
 29986 ;; Registers used:
 29987 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 29988 ;; Tracked objects:
 29989 ;;		On entry : 0/0
 29990 ;;		On exit  : 3F/3C
 29991 ;;		Unchanged: 0/0
 29992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29997 ;;Total ram usage:        0 bytes
 29998 ;; Hardware stack levels used:    1
 29999 ;; Hardware stack levels required when called:   17
 30000 ;; This function calls:
 30001 ;;		_ADCC_Initialize
 30002 ;;		_CLKREF_Initialize
 30003 ;;		_DMA1_Initialize
 30004 ;;		_DMA2_Initialize
 30005 ;;		_EXT_INT_Initialize
 30006 ;;		_FVR_Initialize
 30007 ;;		_INTERRUPT_Initialize
 30008 ;;		_OSCILLATOR_Initialize
 30009 ;;		_PIN_MANAGER_Initialize
 30010 ;;		_PMD_Initialize
 30011 ;;		_PWM8_Initialize
 30012 ;;		_SPI1_Initialize
 30013 ;;		_TMR2_Initialize
 30014 ;;		_TMR3_Initialize
 30015 ;;		_TMR5_Initialize
 30016 ;;		_TMR6_Initialize
 30017 ;;		_UART1_Initialize
 30018 ;;		_UART2_Initialize
 30019 ;; This function is called by:
 30020 ;;		_main
 30021 ;; This function uses a reentrant model
 30022 ;;
 30023                           
 30024                           	psect	text114
 30025  01B78A                     __ptext114:
 30026                           	opt callstack 0
 30027  01B78A                     _SYSTEM_Initialize:
 30028                           	opt callstack 13
 30029                           
 30030                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 30031                           
 30032                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30033                           ;incstack = 0
 30034  01B78A  ECA9  F0D9         	call	_INTERRUPT_Initialize	;wreg free
 30035                           
 30036                           ; BSR set to: 57
 30037                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 30038  01B78E  EC2E  F0E2         	call	_PMD_Initialize	;wreg free
 30039                           
 30040                           ; BSR set to: 57
 30041                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 30042  01B792  EC0A  F0D7         	call	_PIN_MANAGER_Initialize	;wreg free
 30043                           
 30044                           ; BSR set to: 58
 30045                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 30046  01B796  EC23  F0E2         	call	_OSCILLATOR_Initialize	;wreg free
 30047                           
 30048                           ; BSR set to: 57
 30049                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 30050  01B79A  ECB3  F0E2         	call	_FVR_Initialize	;wreg free
 30051                           
 30052                           ; BSR set to: 62
 30053                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 30054  01B79E  EC3E  F0D9         	call	_ADCC_Initialize	;wreg free
 30055                           
 30056                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
 30057  01B7A2  EC01  F0E2         	call	_TMR2_Initialize	;wreg free
 30058                           
 30059                           ; BSR set to: 57
 30060                           ;mcc_generated_files/mcc.c: 59:     PWM8_Initialize();
 30061  01B7A6  EC18  F0E2         	call	_PWM8_Initialize	;wreg free
 30062                           
 30063                           ; BSR set to: 63
 30064                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 30065  01B7AA  ECBE  F0DE         	call	_EXT_INT_Initialize	;wreg free
 30066                           
 30067                           ; BSR set to: 57
 30068                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 30069  01B7AE  EC92  F0DF         	call	_TMR6_Initialize	;wreg free
 30070                           
 30071                           ;mcc_generated_files/mcc.c: 62:     TMR3_Initialize();
 30072  01B7B2  EC56  F0DC         	call	_TMR3_Initialize	;wreg free
 30073                           
 30074                           ;mcc_generated_files/mcc.c: 63:     TMR5_Initialize();
 30075  01B7B6  EC32  F0DC         	call	_TMR5_Initialize	;wreg free
 30076                           
 30077                           ;mcc_generated_files/mcc.c: 64:     UART1_Initialize();
 30078  01B7BA  EC0E  F0DC         	call	_UART1_Initialize	;wreg free
 30079                           
 30080                           ; BSR set to: 57
 30081                           ;mcc_generated_files/mcc.c: 65:     UART2_Initialize();
 30082  01B7BE  EC70  F0DA         	call	_UART2_Initialize	;wreg free
 30083                           
 30084                           ; BSR set to: 57
 30085                           ;mcc_generated_files/mcc.c: 66:     SPI1_Initialize();
 30086  01B7C2  EC0D  F0E2         	call	_SPI1_Initialize	;wreg free
 30087                           
 30088                           ; BSR set to: 61
 30089                           ;mcc_generated_files/mcc.c: 67:     DMA2_Initialize();
 30090  01B7C6  ECFA  F0DA         	call	_DMA2_Initialize	;wreg free
 30091                           
 30092                           ; BSR set to: 59
 30093                           ;mcc_generated_files/mcc.c: 68:     DMA1_Initialize();
 30094  01B7CA  EC09  F0D9         	call	_DMA1_Initialize	;wreg free
 30095                           
 30096                           ; BSR set to: 59
 30097                           ;mcc_generated_files/mcc.c: 69:     CLKREF_Initialize();
 30098  01B7CE  EC87  F0E2         	call	_CLKREF_Initialize	;wreg free
 30099                           
 30100                           ; BSR set to: 60
 30101                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 30102  01B7D2  0012               	return		;funcret
 30103  01B7D4                     __end_of_SYSTEM_Initialize:
 30104                           	opt callstack 0
 30105                           
 30106 ;; *************** function _UART2_Initialize *****************
 30107 ;; Defined at:
 30108 ;;		line 78 in file "mcc_generated_files/uart2.c"
 30109 ;; Parameters:    Size  Location     Type
 30110 ;;		None
 30111 ;; Auto vars:     Size  Location     Type
 30112 ;;		None
 30113 ;; Return value:  Size  Location     Type
 30114 ;;                  1  [STACK] void 
 30115 ;; Registers used:
 30116 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 30117 ;; Tracked objects:
 30118 ;;		On entry : 3F/39
 30119 ;;		On exit  : 3F/39
 30120 ;;		Unchanged: 0/0
 30121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30126 ;;Total ram usage:        0 bytes
 30127 ;; Hardware stack levels used:    1
 30128 ;; Hardware stack levels required when called:   16
 30129 ;; This function calls:
 30130 ;;		_UART2_SetRxInterruptHandler
 30131 ;;		_UART2_SetTxInterruptHandler
 30132 ;; This function is called by:
 30133 ;;		_SYSTEM_Initialize
 30134 ;; This function uses a reentrant model
 30135 ;;
 30136                           
 30137                           	psect	text115
 30138  01B4E0                     __ptext115:
 30139                           	opt callstack 0
 30140  01B4E0                     _UART2_Initialize:
 30141                           	opt callstack 13
 30142                           
 30143                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 30144                           
 30145                           ; BSR set to: 60
 30146                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30147                           ;incstack = 0
 30148  01B4E0  0139               	movlb	57	; () banked
 30149  01B4E2  9596               	bcf	150,2,b	;volatile
 30150                           
 30151                           ; BSR set to: 57
 30152                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 30153  01B4E4  0EE4               	movlw	low _UART2_Receive_ISR
 30154  01B4E6  6EE6               	movwf	postinc1,c
 30155  01B4E8  0EC2               	movlw	high _UART2_Receive_ISR
 30156  01B4EA  6EE6               	movwf	postinc1,c
 30157  01B4EC  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 30158  01B4EE  6EE6               	movwf	postinc1,c
 30159  01B4F0  ECE3  F0DF         	call	_UART2_SetRxInterruptHandler	;wreg free
 30160                           
 30161                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 30162  01B4F4  0139               	movlb	57	; () banked
 30163  01B4F6  9796               	bcf	150,3,b	;volatile
 30164                           
 30165                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 30166  01B4F8  0EF8               	movlw	low _UART2_Transmit_ISR
 30167  01B4FA  6EE6               	movwf	postinc1,c
 30168  01B4FC  0EBE               	movlw	high _UART2_Transmit_ISR
 30169  01B4FE  6EE6               	movwf	postinc1,c
 30170  01B500  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 30171  01B502  6EE6               	movwf	postinc1,c
 30172  01B504  ECCF  F0DF         	call	_UART2_SetTxInterruptHandler	;wreg free
 30173                           
 30174                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 30175  01B508  013D               	movlb	61	; () banked
 30176  01B50A  6BD4               	clrf	212,b	;volatile
 30177                           
 30178                           ; BSR set to: 61
 30179                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 30180  01B50C  6BD6               	clrf	214,b	;volatile
 30181                           
 30182                           ; BSR set to: 61
 30183                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 30184  01B50E  6BD8               	clrf	216,b	;volatile
 30185                           
 30186                           ; BSR set to: 61
 30187                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 30188  01B510  0EB0               	movlw	176
 30189  01B512  6FDA               	movwf	218,b	;volatile
 30190                           
 30191                           ; BSR set to: 61
 30192                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 30193  01B514  0E80               	movlw	128
 30194  01B516  6FDB               	movwf	219,b	;volatile
 30195                           
 30196                           ; BSR set to: 61
 30197                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 30198  01B518  6BDC               	clrf	220,b	;volatile
 30199                           
 30200                           ; BSR set to: 61
 30201                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 30202  01B51A  0E82               	movlw	130
 30203  01B51C  6FDD               	movwf	221,b	;volatile
 30204                           
 30205                           ; BSR set to: 61
 30206                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 30207  01B51E  0E06               	movlw	6
 30208  01B520  6FDE               	movwf	222,b	;volatile
 30209                           
 30210                           ; BSR set to: 61
 30211                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 30212  01B522  6BDF               	clrf	223,b	;volatile
 30213                           
 30214                           ; BSR set to: 61
 30215                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 30216  01B524  6BE0               	clrf	224,b	;volatile
 30217                           
 30218                           ; BSR set to: 61
 30219                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 30220  01B526  6BE1               	clrf	225,b	;volatile
 30221                           
 30222                           ; BSR set to: 61
 30223                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 30224  01B528  6BE2               	clrf	226,b	;volatile
 30225                           
 30226                           ; BSR set to: 61
 30227                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 30228  01B52A  0100               	movlb	0	; () banked
 30229  01B52C  6BAC               	clrf	_uart2TxHead& (0+255),b	;volatile
 30230                           
 30231                           ; BSR set to: 0
 30232                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 30233  01B52E  6A46               	clrf	_uart2TxTail^0,c	;volatile
 30234                           
 30235                           ; BSR set to: 0
 30236                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 30237  01B530  0E40               	movlw	64
 30238  01B532  6E45               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 30239                           
 30240                           ; BSR set to: 0
 30241                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 30242  01B534  6A44               	clrf	_uart2RxHead^0,c	;volatile
 30243                           
 30244                           ; BSR set to: 0
 30245                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 30246  01B536  6BAB               	clrf	_uart2RxTail& (0+255),b	;volatile
 30247                           
 30248                           ; BSR set to: 0
 30249                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 30250  01B538  6BAA               	clrf	_uart2RxCount& (0+255),b	;volatile
 30251                           
 30252                           ; BSR set to: 0
 30253                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 30254  01B53A  0139               	movlb	57	; () banked
 30255  01B53C  8596               	bsf	150,2,b	;volatile
 30256                           
 30257                           ; BSR set to: 57
 30258                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 30259  01B53E  0012               	return		;funcret
 30260  01B540                     __end_of_UART2_Initialize:
 30261                           	opt callstack 0
 30262                           
 30263 ;; *************** function _UART2_SetTxInterruptHandler *****************
 30264 ;; Defined at:
 30265 ;;		line 252 in file "mcc_generated_files/uart2.c"
 30266 ;; Parameters:    Size  Location     Type
 30267 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30268 ;;		 -> UART2_Transmit_ISR(1), 
 30269 ;; Auto vars:     Size  Location     Type
 30270 ;;		None
 30271 ;; Return value:  Size  Location     Type
 30272 ;;                  1  [STACK] void 
 30273 ;; Registers used:
 30274 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30275 ;; Tracked objects:
 30276 ;;		On entry : 3F/39
 30277 ;;		On exit  : 0/0
 30278 ;;		Unchanged: 0/0
 30279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30283 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30284 ;;Total ram usage:        0 bytes
 30285 ;; Hardware stack levels used:    1
 30286 ;; Hardware stack levels required when called:   15
 30287 ;; This function calls:
 30288 ;;		Nothing
 30289 ;; This function is called by:
 30290 ;;		_UART2_Initialize
 30291 ;; This function uses a reentrant model
 30292 ;;
 30293                           
 30294                           	psect	text116
 30295  01BF9E                     __ptext116:
 30296                           	opt callstack 0
 30297  01BF9E                     _UART2_SetTxInterruptHandler:
 30298                           	opt callstack 13
 30299                           
 30300                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 30301                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30302                           
 30303                           ; BSR set to: 57
 30304                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30305                           ;incstack = 0
 30306  01BF9E  50E1               	movf	fsr1l,w,c
 30307  01BFA0  0FFD               	addlw	-3
 30308  01BFA2  6ED9               	movwf	fsr2l,c
 30309  01BFA4  50E2               	movf	fsr1h,w,c
 30310  01BFA6  6EDA               	movwf	fsr2h,c
 30311  01BFA8  0EFF               	movlw	255
 30312  01BFAA  22DA               	addwfc	fsr2h,f,c
 30313  01BFAC  006F FF78  F08E    	movff	postinc2,_UART2_TxInterruptHandler
 30314  01BFB2  006F FF78  F08F    	movff	postinc2,_UART2_TxInterruptHandler+1
 30315  01BFB8  006F FF74  F090    	movff	postdec2,_UART2_TxInterruptHandler+2
 30316                           
 30317                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 30318  01BFBE  52E5               	movf	postdec1,f,c
 30319  01BFC0  52E5               	movf	postdec1,f,c
 30320  01BFC2  52E5               	movf	postdec1,f,c
 30321  01BFC4  0012               	return		;funcret
 30322  01BFC6                     __end_of_UART2_SetTxInterruptHandler:
 30323                           	opt callstack 0
 30324                           
 30325 ;; *************** function _UART2_SetRxInterruptHandler *****************
 30326 ;; Defined at:
 30327 ;;		line 248 in file "mcc_generated_files/uart2.c"
 30328 ;; Parameters:    Size  Location     Type
 30329 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30330 ;;		 -> UART2_Receive_ISR(1), 
 30331 ;; Auto vars:     Size  Location     Type
 30332 ;;		None
 30333 ;; Return value:  Size  Location     Type
 30334 ;;                  1  [STACK] void 
 30335 ;; Registers used:
 30336 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30337 ;; Tracked objects:
 30338 ;;		On entry : 3F/39
 30339 ;;		On exit  : 0/0
 30340 ;;		Unchanged: 0/0
 30341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30346 ;;Total ram usage:        0 bytes
 30347 ;; Hardware stack levels used:    1
 30348 ;; Hardware stack levels required when called:   15
 30349 ;; This function calls:
 30350 ;;		Nothing
 30351 ;; This function is called by:
 30352 ;;		_UART2_Initialize
 30353 ;; This function uses a reentrant model
 30354 ;;
 30355                           
 30356                           	psect	text117
 30357  01BFC6                     __ptext117:
 30358                           	opt callstack 0
 30359  01BFC6                     _UART2_SetRxInterruptHandler:
 30360                           	opt callstack 13
 30361                           
 30362                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 30363                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30364                           
 30365                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30366                           ;incstack = 0
 30367  01BFC6  50E1               	movf	fsr1l,w,c
 30368  01BFC8  0FFD               	addlw	-3
 30369  01BFCA  6ED9               	movwf	fsr2l,c
 30370  01BFCC  50E2               	movf	fsr1h,w,c
 30371  01BFCE  6EDA               	movwf	fsr2h,c
 30372  01BFD0  0EFF               	movlw	255
 30373  01BFD2  22DA               	addwfc	fsr2h,f,c
 30374  01BFD4  006F FF78  F091    	movff	postinc2,_UART2_RxInterruptHandler
 30375  01BFDA  006F FF78  F092    	movff	postinc2,_UART2_RxInterruptHandler+1
 30376  01BFE0  006F FF74  F093    	movff	postdec2,_UART2_RxInterruptHandler+2
 30377                           
 30378                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 30379  01BFE6  52E5               	movf	postdec1,f,c
 30380  01BFE8  52E5               	movf	postdec1,f,c
 30381  01BFEA  52E5               	movf	postdec1,f,c
 30382  01BFEC  0012               	return		;funcret
 30383  01BFEE                     __end_of_UART2_SetRxInterruptHandler:
 30384                           	opt callstack 0
 30385                           
 30386 ;; *************** function _UART1_Initialize *****************
 30387 ;; Defined at:
 30388 ;;		line 75 in file "mcc_generated_files/uart1.c"
 30389 ;; Parameters:    Size  Location     Type
 30390 ;;		None
 30391 ;; Auto vars:     Size  Location     Type
 30392 ;;		None
 30393 ;; Return value:  Size  Location     Type
 30394 ;;                  1  [STACK] void 
 30395 ;; Registers used:
 30396 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 30397 ;; Tracked objects:
 30398 ;;		On entry : 0/39
 30399 ;;		On exit  : 3F/39
 30400 ;;		Unchanged: 0/0
 30401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30405 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30406 ;;Total ram usage:        0 bytes
 30407 ;; Hardware stack levels used:    1
 30408 ;; Hardware stack levels required when called:   16
 30409 ;; This function calls:
 30410 ;;		_UART1_SetRxInterruptHandler
 30411 ;; This function is called by:
 30412 ;;		_SYSTEM_Initialize
 30413 ;; This function uses a reentrant model
 30414 ;;
 30415                           
 30416                           	psect	text118
 30417  01B81C                     __ptext118:
 30418                           	opt callstack 0
 30419  01B81C                     _UART1_Initialize:
 30420                           	opt callstack 13
 30421                           
 30422                           ;mcc_generated_files/uart1.c: 78:  PIE3bits.U1RXIE = 0;
 30423                           
 30424                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30425                           ;incstack = 0
 30426  01B81C  0139               	movlb	57	; () banked
 30427  01B81E  9793               	bcf	147,3,b	;volatile
 30428                           
 30429                           ; BSR set to: 57
 30430                           ;mcc_generated_files/uart1.c: 79:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 30431  01B820  0EA2               	movlw	low _UART1_Receive_ISR
 30432  01B822  6EE6               	movwf	postinc1,c
 30433  01B824  0EC2               	movlw	high _UART1_Receive_ISR
 30434  01B826  6EE6               	movwf	postinc1,c
 30435  01B828  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 30436  01B82A  6EE6               	movwf	postinc1,c
 30437  01B82C  ECF7  F0DF         	call	_UART1_SetRxInterruptHandler	;wreg free
 30438                           
 30439                           ;mcc_generated_files/uart1.c: 84:  U1P1L = 0x00;
 30440  01B830  013D               	movlb	61	; () banked
 30441  01B832  6BEC               	clrf	236,b	;volatile
 30442                           
 30443                           ; BSR set to: 61
 30444                           ;mcc_generated_files/uart1.c: 87:  U1P1H = 0x00;
 30445  01B834  6BED               	clrf	237,b	;volatile
 30446                           
 30447                           ; BSR set to: 61
 30448                           ;mcc_generated_files/uart1.c: 90:  U1P2L = 0x00;
 30449  01B836  6BEE               	clrf	238,b	;volatile
 30450                           
 30451                           ; BSR set to: 61
 30452                           ;mcc_generated_files/uart1.c: 93:  U1P2H = 0x00;
 30453  01B838  6BEF               	clrf	239,b	;volatile
 30454                           
 30455                           ; BSR set to: 61
 30456                           ;mcc_generated_files/uart1.c: 96:  U1P3L = 0x00;
 30457  01B83A  6BF0               	clrf	240,b	;volatile
 30458                           
 30459                           ; BSR set to: 61
 30460                           ;mcc_generated_files/uart1.c: 99:  U1P3H = 0x00;
 30461  01B83C  6BF1               	clrf	241,b	;volatile
 30462                           
 30463                           ; BSR set to: 61
 30464                           ;mcc_generated_files/uart1.c: 102:  U1CON0 = 0xB0;
 30465  01B83E  0EB0               	movlw	176
 30466  01B840  6FF2               	movwf	242,b	;volatile
 30467                           
 30468                           ; BSR set to: 61
 30469                           ;mcc_generated_files/uart1.c: 105:  U1CON1 = 0x80;
 30470  01B842  0E80               	movlw	128
 30471  01B844  6FF3               	movwf	243,b	;volatile
 30472                           
 30473                           ; BSR set to: 61
 30474                           ;mcc_generated_files/uart1.c: 108:  U1CON2 = 0x00;
 30475  01B846  6BF4               	clrf	244,b	;volatile
 30476                           
 30477                           ; BSR set to: 61
 30478                           ;mcc_generated_files/uart1.c: 111:     U1BRGL = 0x8A;
 30479  01B848  0E8A               	movlw	138
 30480  01B84A  6FF5               	movwf	245,b	;volatile
 30481                           
 30482                           ; BSR set to: 61
 30483                           ;mcc_generated_files/uart1.c: 114:     U1BRGH = 0x00;
 30484  01B84C  6BF6               	clrf	246,b	;volatile
 30485                           
 30486                           ; BSR set to: 61
 30487                           ;mcc_generated_files/uart1.c: 117:  U1FIFO = 0x00;
 30488  01B84E  6BF7               	clrf	247,b	;volatile
 30489                           
 30490                           ; BSR set to: 61
 30491                           ;mcc_generated_files/uart1.c: 120:  U1UIR = 0x00;
 30492  01B850  6BF8               	clrf	248,b	;volatile
 30493                           
 30494                           ; BSR set to: 61
 30495                           ;mcc_generated_files/uart1.c: 123:  U1ERRIR = 0x00;
 30496  01B852  6BF9               	clrf	249,b	;volatile
 30497                           
 30498                           ; BSR set to: 61
 30499                           ;mcc_generated_files/uart1.c: 126:  U1ERRIE = 0x00;
 30500  01B854  6BFA               	clrf	250,b	;volatile
 30501                           
 30502                           ; BSR set to: 61
 30503                           ;mcc_generated_files/uart1.c: 129:  uart1RxHead = 0;
 30504  01B856  6A47               	clrf	_uart1RxHead^0,c	;volatile
 30505                           
 30506                           ; BSR set to: 61
 30507                           ;mcc_generated_files/uart1.c: 130:  uart1RxTail = 0;
 30508  01B858  0100               	movlb	0	; () banked
 30509  01B85A  6BAE               	clrf	_uart1RxTail& (0+255),b	;volatile
 30510                           
 30511                           ; BSR set to: 0
 30512                           ;mcc_generated_files/uart1.c: 131:  uart1RxCount = 0;
 30513  01B85C  6BAD               	clrf	_uart1RxCount& (0+255),b	;volatile
 30514                           
 30515                           ; BSR set to: 0
 30516                           ;mcc_generated_files/uart1.c: 134:  PIE3bits.U1RXIE = 1;
 30517  01B85E  0139               	movlb	57	; () banked
 30518  01B860  8793               	bsf	147,3,b	;volatile
 30519                           
 30520                           ; BSR set to: 57
 30521                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 30522  01B862  0012               	return		;funcret
 30523  01B864                     __end_of_UART1_Initialize:
 30524                           	opt callstack 0
 30525                           
 30526 ;; *************** function _UART1_SetRxInterruptHandler *****************
 30527 ;; Defined at:
 30528 ;;		line 207 in file "mcc_generated_files/uart1.c"
 30529 ;; Parameters:    Size  Location     Type
 30530 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30531 ;;		 -> UART1_Receive_ISR(1), 
 30532 ;; Auto vars:     Size  Location     Type
 30533 ;;		None
 30534 ;; Return value:  Size  Location     Type
 30535 ;;                  1  [STACK] void 
 30536 ;; Registers used:
 30537 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30538 ;; Tracked objects:
 30539 ;;		On entry : 3F/39
 30540 ;;		On exit  : 0/0
 30541 ;;		Unchanged: 0/0
 30542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30546 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30547 ;;Total ram usage:        0 bytes
 30548 ;; Hardware stack levels used:    1
 30549 ;; Hardware stack levels required when called:   15
 30550 ;; This function calls:
 30551 ;;		Nothing
 30552 ;; This function is called by:
 30553 ;;		_UART1_Initialize
 30554 ;; This function uses a reentrant model
 30555 ;;
 30556                           
 30557                           	psect	text119
 30558  01BFEE                     __ptext119:
 30559                           	opt callstack 0
 30560  01BFEE                     _UART1_SetRxInterruptHandler:
 30561                           	opt callstack 13
 30562                           
 30563                           ;mcc_generated_files/uart1.c: 208:  UART1_RxInterruptHandler = InterruptHandler;
 30564                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30565                           
 30566                           ; BSR set to: 57
 30567                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30568                           ;incstack = 0
 30569  01BFEE  50E1               	movf	fsr1l,w,c
 30570  01BFF0  0FFD               	addlw	-3
 30571  01BFF2  6ED9               	movwf	fsr2l,c
 30572  01BFF4  50E2               	movf	fsr1h,w,c
 30573  01BFF6  6EDA               	movwf	fsr2h,c
 30574  01BFF8  0EFF               	movlw	255
 30575  01BFFA  22DA               	addwfc	fsr2h,f,c
 30576  01BFFC  006F FF78  F08B    	movff	postinc2,_UART1_RxInterruptHandler
 30577  01C002  006F FF78  F08C    	movff	postinc2,_UART1_RxInterruptHandler+1
 30578  01C008  006F FF74  F08D    	movff	postdec2,_UART1_RxInterruptHandler+2
 30579                           
 30580                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 30581  01C00E  52E5               	movf	postdec1,f,c
 30582  01C010  52E5               	movf	postdec1,f,c
 30583  01C012  52E5               	movf	postdec1,f,c
 30584  01C014  0012               	return		;funcret
 30585  01C016                     __end_of_UART1_SetRxInterruptHandler:
 30586                           	opt callstack 0
 30587                           
 30588 ;; *************** function _TMR6_Initialize *****************
 30589 ;; Defined at:
 30590 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 30591 ;; Parameters:    Size  Location     Type
 30592 ;;		None
 30593 ;; Auto vars:     Size  Location     Type
 30594 ;;		None
 30595 ;; Return value:  Size  Location     Type
 30596 ;;                  1  [STACK] void 
 30597 ;; Registers used:
 30598 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 30599 ;; Tracked objects:
 30600 ;;		On entry : 3F/39
 30601 ;;		On exit  : 0/0
 30602 ;;		Unchanged: 0/0
 30603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30607 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30608 ;;Total ram usage:        0 bytes
 30609 ;; Hardware stack levels used:    1
 30610 ;; Hardware stack levels required when called:   16
 30611 ;; This function calls:
 30612 ;;		_TMR6_SetInterruptHandler
 30613 ;; This function is called by:
 30614 ;;		_SYSTEM_Initialize
 30615 ;; This function uses a reentrant model
 30616 ;;
 30617                           
 30618                           	psect	text120
 30619  01BF24                     __ptext120:
 30620                           	opt callstack 0
 30621  01BF24                     _TMR6_Initialize:
 30622                           	opt callstack 13
 30623                           
 30624                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 30625                           
 30626                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30627                           ;incstack = 0
 30628  01BF24  0E01               	movlw	1
 30629  01BF26  6E96               	movwf	150,c	;volatile
 30630                           
 30631                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 30632  01BF28  6A95               	clrf	149,c	;volatile
 30633                           
 30634                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 30635  01BF2A  6A97               	clrf	151,c	;volatile
 30636                           
 30637                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 30638  01BF2C  0E7C               	movlw	124
 30639  01BF2E  6E93               	movwf	147,c	;volatile
 30640                           
 30641                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 30642  01BF30  6A92               	clrf	146,c	;volatile
 30643                           
 30644                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 30645  01BF32  0139               	movlb	57	; () banked
 30646  01BF34  91A9               	bcf	169,0,b	;volatile
 30647                           
 30648                           ; BSR set to: 57
 30649                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 30650  01BF36  8199               	bsf	153,0,b	;volatile
 30651                           
 30652                           ; BSR set to: 57
 30653                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 30654  01BF38  0EF2               	movlw	low _TMR6_DefaultInterruptHandler
 30655  01BF3A  6EE6               	movwf	postinc1,c
 30656  01BF3C  0EB6               	movlw	high _TMR6_DefaultInterruptHandler
 30657  01BF3E  6EE6               	movwf	postinc1,c
 30658  01BF40  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 30659  01BF42  6EE6               	movwf	postinc1,c
 30660  01BF44  EC0B  F0E0         	call	_TMR6_SetInterruptHandler	;wreg free
 30661                           
 30662                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 30663  01BF48  0EE0               	movlw	224
 30664  01BF4A  6E94               	movwf	148,c	;volatile
 30665                           
 30666                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30667  01BF4C  0012               	return		;funcret
 30668  01BF4E                     __end_of_TMR6_Initialize:
 30669                           	opt callstack 0
 30670                           
 30671 ;; *************** function _TMR6_SetInterruptHandler *****************
 30672 ;; Defined at:
 30673 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 30674 ;; Parameters:    Size  Location     Type
 30675 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30676 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 30677 ;; Auto vars:     Size  Location     Type
 30678 ;;		None
 30679 ;; Return value:  Size  Location     Type
 30680 ;;                  1  [STACK] void 
 30681 ;; Registers used:
 30682 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30683 ;; Tracked objects:
 30684 ;;		On entry : 3F/39
 30685 ;;		On exit  : 0/0
 30686 ;;		Unchanged: 0/0
 30687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30692 ;;Total ram usage:        0 bytes
 30693 ;; Hardware stack levels used:    1
 30694 ;; Hardware stack levels required when called:   15
 30695 ;; This function calls:
 30696 ;;		Nothing
 30697 ;; This function is called by:
 30698 ;;		_TMR6_Initialize
 30699 ;; This function uses a reentrant model
 30700 ;;
 30701                           
 30702                           	psect	text121
 30703  01C016                     __ptext121:
 30704                           	opt callstack 0
 30705  01C016                     _TMR6_SetInterruptHandler:
 30706                           	opt callstack 13
 30707                           
 30708                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 30709                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30710                           
 30711                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30712                           ;incstack = 0
 30713  01C016  50E1               	movf	fsr1l,w,c
 30714  01C018  0FFD               	addlw	-3
 30715  01C01A  6ED9               	movwf	fsr2l,c
 30716  01C01C  50E2               	movf	fsr1h,w,c
 30717  01C01E  6EDA               	movwf	fsr2h,c
 30718  01C020  0EFF               	movlw	255
 30719  01C022  22DA               	addwfc	fsr2h,f,c
 30720  01C024  006F FF78  F082    	movff	postinc2,_TMR6_InterruptHandler
 30721  01C02A  006F FF78  F083    	movff	postinc2,_TMR6_InterruptHandler+1
 30722  01C030  006F FF74  F084    	movff	postdec2,_TMR6_InterruptHandler+2
 30723                           
 30724                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 30725  01C036  52E5               	movf	postdec1,f,c
 30726  01C038  52E5               	movf	postdec1,f,c
 30727  01C03A  52E5               	movf	postdec1,f,c
 30728  01C03C  0012               	return		;funcret
 30729  01C03E                     __end_of_TMR6_SetInterruptHandler:
 30730                           	opt callstack 0
 30731                           
 30732 ;; *************** function _TMR5_Initialize *****************
 30733 ;; Defined at:
 30734 ;;		line 69 in file "mcc_generated_files/tmr5.c"
 30735 ;; Parameters:    Size  Location     Type
 30736 ;;		None
 30737 ;; Auto vars:     Size  Location     Type
 30738 ;;		None
 30739 ;; Return value:  Size  Location     Type
 30740 ;;                  1  [STACK] void 
 30741 ;; Registers used:
 30742 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 30743 ;; Tracked objects:
 30744 ;;		On entry : 0/39
 30745 ;;		On exit  : 0/0
 30746 ;;		Unchanged: 0/0
 30747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30751 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30752 ;;Total ram usage:        0 bytes
 30753 ;; Hardware stack levels used:    1
 30754 ;; Hardware stack levels required when called:   16
 30755 ;; This function calls:
 30756 ;;		_TMR5_SetInterruptHandler
 30757 ;; This function is called by:
 30758 ;;		_SYSTEM_Initialize
 30759 ;; This function uses a reentrant model
 30760 ;;
 30761                           
 30762                           	psect	text122
 30763  01B864                     __ptext122:
 30764                           	opt callstack 0
 30765  01B864                     _TMR5_Initialize:
 30766                           	opt callstack 13
 30767                           
 30768                           ;mcc_generated_files/tmr5.c: 74:  T5GCON = 0x00;
 30769                           
 30770                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30771                           ;incstack = 0
 30772  01B864  6A9B               	clrf	155,c	;volatile
 30773                           
 30774                           ;mcc_generated_files/tmr5.c: 77:  T5GATE = 0x00;
 30775  01B866  6A9C               	clrf	156,c	;volatile
 30776                           
 30777                           ;mcc_generated_files/tmr5.c: 80:  T5CLK = 0x01;
 30778  01B868  0E01               	movlw	1
 30779  01B86A  6E9D               	movwf	157,c	;volatile
 30780                           
 30781                           ;mcc_generated_files/tmr5.c: 83:  TMR5H = 0x63;
 30782  01B86C  0E63               	movlw	99
 30783  01B86E  6E99               	movwf	153,c	;volatile
 30784                           
 30785                           ;mcc_generated_files/tmr5.c: 86:  TMR5L = 0xC0;
 30786  01B870  0EC0               	movlw	192
 30787  01B872  6E98               	movwf	152,c	;volatile
 30788                           
 30789                           ;mcc_generated_files/tmr5.c: 89:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 30790  01B874  5098               	movf	152,w,c	;volatile
 30791  01B876  006F FE64  F001    	movff	16281,btemp	;volatile
 30792  01B87C  6A02               	clrf	(btemp+1)^0,c
 30793  01B87E  0060  F004  F002   	movff	btemp,btemp+1
 30794  01B884  6A01               	clrf	btemp^0,c
 30795  01B886  1001               	iorwf	btemp^0,w,c
 30796  01B888  0100               	movlb	0	; () banked
 30797  01B88A  6FA2               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 30798  01B88C  5002               	movf	(btemp+1)^0,w,c
 30799  01B88E  6FA3               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 30800                           
 30801                           ; BSR set to: 0
 30802                           ;mcc_generated_files/tmr5.c: 92:  PIR8bits.TMR5IF = 0;
 30803  01B890  0139               	movlb	57	; () banked
 30804  01B892  9DA8               	bcf	168,6,b	;volatile
 30805                           
 30806                           ; BSR set to: 57
 30807                           ;mcc_generated_files/tmr5.c: 95:  PIE8bits.TMR5IE = 1;
 30808  01B894  8D98               	bsf	152,6,b	;volatile
 30809                           
 30810                           ; BSR set to: 57
 30811                           ;mcc_generated_files/tmr5.c: 98:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 30812  01B896  0E3C               	movlw	low _TMR5_DefaultInterruptHandler
 30813  01B898  6EE6               	movwf	postinc1,c
 30814  01B89A  0EBC               	movlw	high _TMR5_DefaultInterruptHandler
 30815  01B89C  6EE6               	movwf	postinc1,c
 30816  01B89E  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 30817  01B8A0  6EE6               	movwf	postinc1,c
 30818  01B8A2  EC1F  F0E0         	call	_TMR5_SetInterruptHandler	;wreg free
 30819                           
 30820                           ;mcc_generated_files/tmr5.c: 101:  T5CON = 0x31;
 30821  01B8A6  0E31               	movlw	49
 30822  01B8A8  6E9A               	movwf	154,c	;volatile
 30823                           
 30824                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30825  01B8AA  0012               	return		;funcret
 30826  01B8AC                     __end_of_TMR5_Initialize:
 30827                           	opt callstack 0
 30828                           
 30829 ;; *************** function _TMR5_SetInterruptHandler *****************
 30830 ;; Defined at:
 30831 ;;		line 192 in file "mcc_generated_files/tmr5.c"
 30832 ;; Parameters:    Size  Location     Type
 30833 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30834 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 30835 ;; Auto vars:     Size  Location     Type
 30836 ;;		None
 30837 ;; Return value:  Size  Location     Type
 30838 ;;                  1  [STACK] void 
 30839 ;; Registers used:
 30840 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30841 ;; Tracked objects:
 30842 ;;		On entry : 3F/39
 30843 ;;		On exit  : 0/0
 30844 ;;		Unchanged: 0/0
 30845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30850 ;;Total ram usage:        0 bytes
 30851 ;; Hardware stack levels used:    1
 30852 ;; Hardware stack levels required when called:   15
 30853 ;; This function calls:
 30854 ;;		Nothing
 30855 ;; This function is called by:
 30856 ;;		_TMR5_Initialize
 30857 ;; This function uses a reentrant model
 30858 ;;
 30859                           
 30860                           	psect	text123
 30861  01C03E                     __ptext123:
 30862                           	opt callstack 0
 30863  01C03E                     _TMR5_SetInterruptHandler:
 30864                           	opt callstack 13
 30865                           
 30866                           ;mcc_generated_files/tmr5.c: 192: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 193: {;mcc_generated_files/tmr5.c: 194:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 30867                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30868                           
 30869                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30870                           ;incstack = 0
 30871  01C03E  50E1               	movf	fsr1l,w,c
 30872  01C040  0FFD               	addlw	-3
 30873  01C042  6ED9               	movwf	fsr2l,c
 30874  01C044  50E2               	movf	fsr1h,w,c
 30875  01C046  6EDA               	movwf	fsr2h,c
 30876  01C048  0EFF               	movlw	255
 30877  01C04A  22DA               	addwfc	fsr2h,f,c
 30878  01C04C  006F FF78  F07F    	movff	postinc2,_TMR5_InterruptHandler
 30879  01C052  006F FF78  F080    	movff	postinc2,_TMR5_InterruptHandler+1
 30880  01C058  006F FF74  F081    	movff	postdec2,_TMR5_InterruptHandler+2
 30881                           
 30882                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 30883  01C05E  52E5               	movf	postdec1,f,c
 30884  01C060  52E5               	movf	postdec1,f,c
 30885  01C062  52E5               	movf	postdec1,f,c
 30886  01C064  0012               	return		;funcret
 30887  01C066                     __end_of_TMR5_SetInterruptHandler:
 30888                           	opt callstack 0
 30889                           
 30890 ;; *************** function _TMR3_Initialize *****************
 30891 ;; Defined at:
 30892 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 30893 ;; Parameters:    Size  Location     Type
 30894 ;;		None
 30895 ;; Auto vars:     Size  Location     Type
 30896 ;;		None
 30897 ;; Return value:  Size  Location     Type
 30898 ;;                  1  [STACK] void 
 30899 ;; Registers used:
 30900 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 30901 ;; Tracked objects:
 30902 ;;		On entry : 0/39
 30903 ;;		On exit  : 0/0
 30904 ;;		Unchanged: 0/0
 30905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30909 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30910 ;;Total ram usage:        0 bytes
 30911 ;; Hardware stack levels used:    1
 30912 ;; Hardware stack levels required when called:   16
 30913 ;; This function calls:
 30914 ;;		_TMR3_SetInterruptHandler
 30915 ;; This function is called by:
 30916 ;;		_SYSTEM_Initialize
 30917 ;; This function uses a reentrant model
 30918 ;;
 30919                           
 30920                           	psect	text124
 30921  01B8AC                     __ptext124:
 30922                           	opt callstack 0
 30923  01B8AC                     _TMR3_Initialize:
 30924                           	opt callstack 13
 30925                           
 30926                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 30927                           
 30928                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30929                           ;incstack = 0
 30930  01B8AC  6AA7               	clrf	167,c	;volatile
 30931                           
 30932                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 30933  01B8AE  6AA8               	clrf	168,c	;volatile
 30934                           
 30935                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 30936  01B8B0  0E01               	movlw	1
 30937  01B8B2  6EA9               	movwf	169,c	;volatile
 30938                           
 30939                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 30940  01B8B4  0E3C               	movlw	60
 30941  01B8B6  6EA5               	movwf	165,c	;volatile
 30942                           
 30943                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 30944  01B8B8  0EB0               	movlw	176
 30945  01B8BA  6EA4               	movwf	164,c	;volatile
 30946                           
 30947                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 30948  01B8BC  50A4               	movf	164,w,c	;volatile
 30949  01B8BE  006F FE94  F001    	movff	16293,btemp	;volatile
 30950  01B8C4  6A02               	clrf	(btemp+1)^0,c
 30951  01B8C6  0060  F004  F002   	movff	btemp,btemp+1
 30952  01B8CC  6A01               	clrf	btemp^0,c
 30953  01B8CE  1001               	iorwf	btemp^0,w,c
 30954  01B8D0  0100               	movlb	0	; () banked
 30955  01B8D2  6F9E               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 30956  01B8D4  5002               	movf	(btemp+1)^0,w,c
 30957  01B8D6  6F9F               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 30958                           
 30959                           ; BSR set to: 0
 30960                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 30961  01B8D8  0139               	movlb	57	; () banked
 30962  01B8DA  9DA6               	bcf	166,6,b	;volatile
 30963                           
 30964                           ; BSR set to: 57
 30965                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 30966  01B8DC  8D96               	bsf	150,6,b	;volatile
 30967                           
 30968                           ; BSR set to: 57
 30969                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 30970  01B8DE  0E90               	movlw	low _TMR3_DefaultInterruptHandler
 30971  01B8E0  6EE6               	movwf	postinc1,c
 30972  01B8E2  0EC5               	movlw	high _TMR3_DefaultInterruptHandler
 30973  01B8E4  6EE6               	movwf	postinc1,c
 30974  01B8E6  0E01               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 30975  01B8E8  6EE6               	movwf	postinc1,c
 30976  01B8EA  EC33  F0E0         	call	_TMR3_SetInterruptHandler	;wreg free
 30977                           
 30978                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 30979  01B8EE  0E31               	movlw	49
 30980  01B8F0  6EA6               	movwf	166,c	;volatile
 30981                           
 30982                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30983  01B8F2  0012               	return		;funcret
 30984  01B8F4                     __end_of_TMR3_Initialize:
 30985                           	opt callstack 0
 30986                           
 30987 ;; *************** function _TMR3_SetInterruptHandler *****************
 30988 ;; Defined at:
 30989 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 30990 ;; Parameters:    Size  Location     Type
 30991 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30992 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 30993 ;; Auto vars:     Size  Location     Type
 30994 ;;		None
 30995 ;; Return value:  Size  Location     Type
 30996 ;;                  1  [STACK] void 
 30997 ;; Registers used:
 30998 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30999 ;; Tracked objects:
 31000 ;;		On entry : 0/0
 31001 ;;		On exit  : 0/0
 31002 ;;		Unchanged: 0/0
 31003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31007 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31008 ;;Total ram usage:        0 bytes
 31009 ;; Hardware stack levels used:    1
 31010 ;; Hardware stack levels required when called:   15
 31011 ;; This function calls:
 31012 ;;		Nothing
 31013 ;; This function is called by:
 31014 ;;		_TMR3_Initialize
 31015 ;;		_init_bsoc
 31016 ;; This function uses a reentrant model
 31017 ;;
 31018                           
 31019                           	psect	text125
 31020  01C066                     __ptext125:
 31021                           	opt callstack 0
 31022  01C066                     _TMR3_SetInterruptHandler:
 31023                           	opt callstack 14
 31024                           
 31025                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 31026                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31027                           
 31028                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31029                           ;incstack = 0
 31030  01C066  50E1               	movf	fsr1l,w,c
 31031  01C068  0FFD               	addlw	-3
 31032  01C06A  6ED9               	movwf	fsr2l,c
 31033  01C06C  50E2               	movf	fsr1h,w,c
 31034  01C06E  6EDA               	movwf	fsr2h,c
 31035  01C070  0EFF               	movlw	255
 31036  01C072  22DA               	addwfc	fsr2h,f,c
 31037  01C074  006F FF78  F07C    	movff	postinc2,_TMR3_InterruptHandler
 31038  01C07A  006F FF78  F07D    	movff	postinc2,_TMR3_InterruptHandler+1
 31039  01C080  006F FF74  F07E    	movff	postdec2,_TMR3_InterruptHandler+2
 31040                           
 31041                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 31042  01C086  52E5               	movf	postdec1,f,c
 31043  01C088  52E5               	movf	postdec1,f,c
 31044  01C08A  52E5               	movf	postdec1,f,c
 31045  01C08C  0012               	return		;funcret
 31046  01C08E                     __end_of_TMR3_SetInterruptHandler:
 31047                           	opt callstack 0
 31048                           
 31049 ;; *************** function _TMR2_Initialize *****************
 31050 ;; Defined at:
 31051 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 31052 ;; Parameters:    Size  Location     Type
 31053 ;;		None
 31054 ;; Auto vars:     Size  Location     Type
 31055 ;;		None
 31056 ;; Return value:  Size  Location     Type
 31057 ;;                  1  [STACK] void 
 31058 ;; Registers used:
 31059 ;;		wreg, status,2
 31060 ;; Tracked objects:
 31061 ;;		On entry : 0/3E
 31062 ;;		On exit  : 3F/39
 31063 ;;		Unchanged: 0/0
 31064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31068 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31069 ;;Total ram usage:        0 bytes
 31070 ;; Hardware stack levels used:    1
 31071 ;; Hardware stack levels required when called:   15
 31072 ;; This function calls:
 31073 ;;		Nothing
 31074 ;; This function is called by:
 31075 ;;		_SYSTEM_Initialize
 31076 ;; This function uses a reentrant model
 31077 ;;
 31078                           
 31079                           	psect	text126
 31080  01C402                     __ptext126:
 31081                           	opt callstack 0
 31082  01C402                     _TMR2_Initialize:
 31083                           	opt callstack 14
 31084                           
 31085                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 31086                           
 31087                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31088                           ;incstack = 0
 31089  01C402  0E01               	movlw	1
 31090  01C404  6EAE               	movwf	174,c	;volatile
 31091                           
 31092                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 31093  01C406  6AAD               	clrf	173,c	;volatile
 31094                           
 31095                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 31096  01C408  6AAF               	clrf	175,c	;volatile
 31097                           
 31098                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 31099  01C40A  0E63               	movlw	99
 31100  01C40C  6EAB               	movwf	171,c	;volatile
 31101                           
 31102                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 31103  01C40E  6AAA               	clrf	170,c	;volatile
 31104                           
 31105                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 31106  01C410  0139               	movlb	57	; () banked
 31107  01C412  95A4               	bcf	164,2,b	;volatile
 31108                           
 31109                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 31110  01C414  0EC0               	movlw	192
 31111  01C416  6EAC               	movwf	172,c	;volatile
 31112                           
 31113                           ; BSR set to: 57
 31114                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31115  01C418  0012               	return		;funcret
 31116  01C41A                     __end_of_TMR2_Initialize:
 31117                           	opt callstack 0
 31118                           
 31119 ;; *************** function _SPI1_Initialize *****************
 31120 ;; Defined at:
 31121 ;;		line 64 in file "mcc_generated_files/spi1.c"
 31122 ;; Parameters:    Size  Location     Type
 31123 ;;		None
 31124 ;; Auto vars:     Size  Location     Type
 31125 ;;		None
 31126 ;; Return value:  Size  Location     Type
 31127 ;;                  1  [STACK] void 
 31128 ;; Registers used:
 31129 ;;		wreg, status,2
 31130 ;; Tracked objects:
 31131 ;;		On entry : 3F/39
 31132 ;;		On exit  : 3F/3D
 31133 ;;		Unchanged: 0/0
 31134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31138 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31139 ;;Total ram usage:        0 bytes
 31140 ;; Hardware stack levels used:    1
 31141 ;; Hardware stack levels required when called:   15
 31142 ;; This function calls:
 31143 ;;		Nothing
 31144 ;; This function is called by:
 31145 ;;		_SYSTEM_Initialize
 31146 ;; This function uses a reentrant model
 31147 ;;
 31148                           
 31149                           	psect	text127
 31150  01C41A                     __ptext127:
 31151                           	opt callstack 0
 31152  01C41A                     _SPI1_Initialize:
 31153                           	opt callstack 14
 31154                           
 31155                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 31156                           
 31157                           ; BSR set to: 57
 31158                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31159                           ;incstack = 0
 31160  01C41A  0E40               	movlw	64
 31161  01C41C  013D               	movlb	61	; () banked
 31162  01C41E  6F15               	movwf	21,b	;volatile
 31163                           
 31164                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 31165  01C420  0E03               	movlw	3
 31166  01C422  6F16               	movwf	22,b	;volatile
 31167                           
 31168                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 31169  01C424  0E4F               	movlw	79
 31170  01C426  6F19               	movwf	25,b	;volatile
 31171                           
 31172                           ; BSR set to: 61
 31173                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 31174  01C428  6B1C               	clrf	28,b	;volatile
 31175                           
 31176                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 31177  01C42A  0E83               	movlw	131
 31178  01C42C  6F14               	movwf	20,b	;volatile
 31179                           
 31180                           ; BSR set to: 61
 31181                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31182  01C42E  0012               	return		;funcret
 31183  01C430                     __end_of_SPI1_Initialize:
 31184                           	opt callstack 0
 31185                           
 31186 ;; *************** function _PWM8_Initialize *****************
 31187 ;; Defined at:
 31188 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 31189 ;; Parameters:    Size  Location     Type
 31190 ;;		None
 31191 ;; Auto vars:     Size  Location     Type
 31192 ;;		None
 31193 ;; Return value:  Size  Location     Type
 31194 ;;                  1  [STACK] void 
 31195 ;; Registers used:
 31196 ;;		wreg, status,2
 31197 ;; Tracked objects:
 31198 ;;		On entry : 3F/39
 31199 ;;		On exit  : 3F/3F
 31200 ;;		Unchanged: 0/0
 31201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31205 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31206 ;;Total ram usage:        0 bytes
 31207 ;; Hardware stack levels used:    1
 31208 ;; Hardware stack levels required when called:   15
 31209 ;; This function calls:
 31210 ;;		Nothing
 31211 ;; This function is called by:
 31212 ;;		_SYSTEM_Initialize
 31213 ;; This function uses a reentrant model
 31214 ;;
 31215                           
 31216                           	psect	text128
 31217  01C430                     __ptext128:
 31218                           	opt callstack 0
 31219  01C430                     _PWM8_Initialize:
 31220                           	opt callstack 14
 31221                           
 31222                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 31223                           
 31224                           ; BSR set to: 61
 31225                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31226                           ;incstack = 0
 31227  01C430  0E80               	movlw	128
 31228  01C432  6E62               	movwf	98,c	;volatile
 31229                           
 31230                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 31231  01C434  6A61               	clrf	97,c	;volatile
 31232                           
 31233                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 31234  01C436  0E40               	movlw	64
 31235  01C438  6E60               	movwf	96,c	;volatile
 31236                           
 31237                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 31238  01C43A  013F               	movlb	63	; () banked
 31239  01C43C  515F               	movf	95,w,b	;volatile
 31240  01C43E  0B3F               	andlw	-193
 31241  01C440  0940               	iorlw	64
 31242  01C442  6F5F               	movwf	95,b	;volatile
 31243                           
 31244                           ; BSR set to: 63
 31245                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31246  01C444  0012               	return		;funcret
 31247  01C446                     __end_of_PWM8_Initialize:
 31248                           	opt callstack 0
 31249                           
 31250 ;; *************** function _PMD_Initialize *****************
 31251 ;; Defined at:
 31252 ;;		line 90 in file "mcc_generated_files/mcc.c"
 31253 ;; Parameters:    Size  Location     Type
 31254 ;;		None
 31255 ;; Auto vars:     Size  Location     Type
 31256 ;;		None
 31257 ;; Return value:  Size  Location     Type
 31258 ;;                  1  [STACK] void 
 31259 ;; Registers used:
 31260 ;;		None
 31261 ;; Tracked objects:
 31262 ;;		On entry : 3F/39
 31263 ;;		On exit  : 3F/39
 31264 ;;		Unchanged: 0/0
 31265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31270 ;;Total ram usage:        0 bytes
 31271 ;; Hardware stack levels used:    1
 31272 ;; Hardware stack levels required when called:   15
 31273 ;; This function calls:
 31274 ;;		Nothing
 31275 ;; This function is called by:
 31276 ;;		_SYSTEM_Initialize
 31277 ;; This function uses a reentrant model
 31278 ;;
 31279                           
 31280                           	psect	text129
 31281  01C45C                     __ptext129:
 31282                           	opt callstack 0
 31283  01C45C                     _PMD_Initialize:
 31284                           	opt callstack 14
 31285                           
 31286                           ;mcc_generated_files/mcc.c: 93:     PMD0 = 0x00;
 31287                           
 31288                           ; BSR set to: 63
 31289                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31290                           ;incstack = 0
 31291  01C45C  0139               	movlb	57	; () banked
 31292  01C45E  6BC0               	clrf	192,b	;volatile
 31293                           
 31294                           ;mcc_generated_files/mcc.c: 95:     PMD1 = 0x00;
 31295  01C460  6BC1               	clrf	193,b	;volatile
 31296                           
 31297                           ;mcc_generated_files/mcc.c: 97:     PMD2 = 0x00;
 31298  01C462  6BC2               	clrf	194,b	;volatile
 31299                           
 31300                           ;mcc_generated_files/mcc.c: 99:     PMD3 = 0x00;
 31301  01C464  6BC3               	clrf	195,b	;volatile
 31302                           
 31303                           ;mcc_generated_files/mcc.c: 101:     PMD4 = 0x00;
 31304  01C466  6BC4               	clrf	196,b	;volatile
 31305                           
 31306                           ;mcc_generated_files/mcc.c: 103:     PMD5 = 0x00;
 31307  01C468  6BC5               	clrf	197,b	;volatile
 31308                           
 31309                           ;mcc_generated_files/mcc.c: 105:     PMD6 = 0x00;
 31310  01C46A  6BC6               	clrf	198,b	;volatile
 31311                           
 31312                           ;mcc_generated_files/mcc.c: 107:     PMD7 = 0x00;
 31313  01C46C  6BC7               	clrf	199,b	;volatile
 31314                           
 31315                           ; BSR set to: 57
 31316                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 31317  01C46E  0012               	return		;funcret
 31318  01C470                     __end_of_PMD_Initialize:
 31319                           	opt callstack 0
 31320                           
 31321 ;; *************** function _PIN_MANAGER_Initialize *****************
 31322 ;; Defined at:
 31323 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 31324 ;; Parameters:    Size  Location     Type
 31325 ;;		None
 31326 ;; Auto vars:     Size  Location     Type
 31327 ;;		None
 31328 ;; Return value:  Size  Location     Type
 31329 ;;                  1  [STACK] void 
 31330 ;; Registers used:
 31331 ;;		wreg, status,2
 31332 ;; Tracked objects:
 31333 ;;		On entry : 3F/39
 31334 ;;		On exit  : 3F/3A
 31335 ;;		Unchanged: 0/0
 31336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31341 ;;Total ram usage:        0 bytes
 31342 ;; Hardware stack levels used:    1
 31343 ;; Hardware stack levels required when called:   15
 31344 ;; This function calls:
 31345 ;;		Nothing
 31346 ;; This function is called by:
 31347 ;;		_SYSTEM_Initialize
 31348 ;; This function uses a reentrant model
 31349 ;;
 31350                           
 31351                           	psect	text130
 31352  01AE14                     __ptext130:
 31353                           	opt callstack 0
 31354  01AE14                     _PIN_MANAGER_Initialize:
 31355                           	opt callstack 14
 31356                           
 31357                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 31358                           
 31359                           ; BSR set to: 57
 31360                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31361                           ;incstack = 0
 31362  01AE14  0E07               	movlw	7
 31363  01AE16  6EBE               	movwf	190,c	;volatile
 31364                           
 31365                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 31366  01AE18  6ABD               	clrf	189,c	;volatile
 31367                           
 31368                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 31369  01AE1A  6ABA               	clrf	186,c	;volatile
 31370                           
 31371                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x23;
 31372  01AE1C  0E23               	movlw	35
 31373  01AE1E  6EBF               	movwf	191,c	;volatile
 31374                           
 31375                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 31376  01AE20  6ABB               	clrf	187,c	;volatile
 31377                           
 31378                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 31379  01AE22  0E07               	movlw	7
 31380  01AE24  6EBC               	movwf	188,c	;volatile
 31381                           
 31382                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 31383  01AE26  6AC6               	clrf	198,c	;volatile
 31384                           
 31385                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0C;
 31386  01AE28  0E0C               	movlw	12
 31387  01AE2A  6EC7               	movwf	199,c	;volatile
 31388                           
 31389                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 31390  01AE2C  68C2               	setf	194,c	;volatile
 31391                           
 31392                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 31393  01AE2E  0EBF               	movlw	191
 31394  01AE30  6EC3               	movwf	195,c	;volatile
 31395                           
 31396                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 31397  01AE32  0E90               	movlw	144
 31398  01AE34  6EC4               	movwf	196,c	;volatile
 31399                           
 31400                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 31401  01AE36  0E0C               	movlw	12
 31402  01AE38  6EC5               	movwf	197,c	;volatile
 31403                           
 31404                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 31405  01AE3A  013A               	movlb	58	; () banked
 31406  01AE3C  6B70               	clrf	112,b	;volatile
 31407                           
 31408                           ; BSR set to: 58
 31409                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 31410  01AE3E  6B60               	clrf	96,b	;volatile
 31411                           
 31412                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 31413  01AE40  0E3C               	movlw	60
 31414  01AE42  6F50               	movwf	80,b	;volatile
 31415                           
 31416                           ; BSR set to: 58
 31417                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 31418  01AE44  6B80               	clrf	128,b	;volatile
 31419                           
 31420                           ; BSR set to: 58
 31421                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 31422  01AE46  6B90               	clrf	144,b	;volatile
 31423                           
 31424                           ; BSR set to: 58
 31425                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 31426  01AE48  6940               	setf	64,b	;volatile
 31427                           
 31428                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 31429  01AE4A  0E0C               	movlw	12
 31430  01AE4C  6F71               	movwf	113,b	;volatile
 31431                           
 31432                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0C;
 31433  01AE4E  0E0C               	movlw	12
 31434  01AE50  6F91               	movwf	145,b	;volatile
 31435                           
 31436                           ; BSR set to: 58
 31437                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 31438  01AE52  6B81               	clrf	129,b	;volatile
 31439                           
 31440                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 31441  01AE54  0E83               	movlw	131
 31442  01AE56  6F51               	movwf	81,b	;volatile
 31443                           
 31444                           ; BSR set to: 58
 31445                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 31446  01AE58  6B41               	clrf	65,b	;volatile
 31447                           
 31448                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 31449  01AE5A  0E97               	movlw	151
 31450  01AE5C  6F61               	movwf	97,b	;volatile
 31451                           
 31452                           ; BSR set to: 58
 31453                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 31454  01AE5E  6B82               	clrf	130,b	;volatile
 31455                           
 31456                           ; BSR set to: 58
 31457                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 31458  01AE60  6B92               	clrf	146,b	;volatile
 31459                           
 31460                           ; BSR set to: 58
 31461                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 31462  01AE62  6B42               	clrf	66,b	;volatile
 31463                           
 31464                           ; BSR set to: 58
 31465                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 31466  01AE64  6B52               	clrf	82,b	;volatile
 31467                           
 31468                           ; BSR set to: 58
 31469                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 31470  01AE66  6B62               	clrf	98,b	;volatile
 31471                           
 31472                           ; BSR set to: 58
 31473                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 31474  01AE68  6B72               	clrf	114,b	;volatile
 31475                           
 31476                           ; BSR set to: 58
 31477                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 31478  01AE6A  6943               	setf	67,b	;volatile
 31479                           
 31480                           ; BSR set to: 58
 31481                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 31482  01AE6C  6953               	setf	83,b	;volatile
 31483                           
 31484                           ; BSR set to: 58
 31485                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 31486  01AE6E  6963               	setf	99,b	;volatile
 31487                           
 31488                           ; BSR set to: 58
 31489                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 31490  01AE70  6973               	setf	115,b	;volatile
 31491                           
 31492                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 31493  01AE72  0E07               	movlw	7
 31494  01AE74  6F83               	movwf	131,b	;volatile
 31495                           
 31496                           ; BSR set to: 58
 31497                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 31498  01AE76  6993               	setf	147,b	;volatile
 31499                           
 31500                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 31501  01AE78  0E0F               	movlw	15
 31502  01AE7A  6FE8               	movwf	232,b	;volatile
 31503                           
 31504                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 31505  01AE7C  0E13               	movlw	19
 31506  01AE7E  6FDE               	movwf	222,b	;volatile
 31507                           
 31508                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 31509  01AE80  0E16               	movlw	22
 31510  01AE82  6F0E               	movwf	14,b	;volatile
 31511                           
 31512                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 31513  01AE84  0E1E               	movlw	30
 31514  01AE86  6F13               	movwf	19,b	;volatile
 31515                           
 31516                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 31517  01AE88  0E08               	movlw	8
 31518  01AE8A  6FC0               	movwf	192,b	;volatile
 31519                           
 31520                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 31521  01AE8C  0E10               	movlw	16
 31522  01AE8E  6F19               	movwf	25,b	;volatile
 31523                           
 31524                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 31525  01AE90  0E09               	movlw	9
 31526  01AE92  6FC1               	movwf	193,b	;volatile
 31527                           
 31528                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 31529  01AE94  0E1F               	movlw	31
 31530  01AE96  6F15               	movwf	21,b	;volatile
 31531                           
 31532                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 31533  01AE98  0E13               	movlw	19
 31534  01AE9A  6F16               	movwf	22,b	;volatile
 31535                           
 31536                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 31537  01AE9C  0E17               	movlw	23
 31538  01AE9E  6FE5               	movwf	229,b	;volatile
 31539                           
 31540                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 31541  01AEA0  0E14               	movlw	20
 31542  01AEA2  6FDF               	movwf	223,b	;volatile
 31543                           
 31544                           ; BSR set to: 58
 31545                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 31546  01AEA4  0012               	return		;funcret
 31547  01AEA6                     __end_of_PIN_MANAGER_Initialize:
 31548                           	opt callstack 0
 31549                           
 31550 ;; *************** function _OSCILLATOR_Initialize *****************
 31551 ;; Defined at:
 31552 ;;		line 72 in file "mcc_generated_files/mcc.c"
 31553 ;; Parameters:    Size  Location     Type
 31554 ;;		None
 31555 ;; Auto vars:     Size  Location     Type
 31556 ;;		None
 31557 ;; Return value:  Size  Location     Type
 31558 ;;                  1  [STACK] void 
 31559 ;; Registers used:
 31560 ;;		wreg, status,2
 31561 ;; Tracked objects:
 31562 ;;		On entry : 3F/3A
 31563 ;;		On exit  : 3F/39
 31564 ;;		Unchanged: 0/0
 31565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31569 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31570 ;;Total ram usage:        0 bytes
 31571 ;; Hardware stack levels used:    1
 31572 ;; Hardware stack levels required when called:   15
 31573 ;; This function calls:
 31574 ;;		Nothing
 31575 ;; This function is called by:
 31576 ;;		_SYSTEM_Initialize
 31577 ;; This function uses a reentrant model
 31578 ;;
 31579                           
 31580                           	psect	text131
 31581  01C446                     __ptext131:
 31582                           	opt callstack 0
 31583  01C446                     _OSCILLATOR_Initialize:
 31584                           	opt callstack 14
 31585                           
 31586                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x20;
 31587                           
 31588                           ; BSR set to: 58
 31589                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31590                           ;incstack = 0
 31591  01C446  0E20               	movlw	32
 31592  01C448  0139               	movlb	57	; () banked
 31593  01C44A  6FD9               	movwf	217,b	;volatile
 31594                           
 31595                           ; BSR set to: 57
 31596                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 31597  01C44C  6BDB               	clrf	219,b	;volatile
 31598                           
 31599                           ; BSR set to: 57
 31600                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 31601  01C44E  6BDD               	clrf	221,b	;volatile
 31602                           
 31603                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x02;
 31604  01C450  0E02               	movlw	2
 31605  01C452  6FDF               	movwf	223,b	;volatile
 31606                           
 31607                           ; BSR set to: 57
 31608                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 31609  01C454  6BDE               	clrf	222,b	;volatile
 31610  01C456                     l169:
 31611                           
 31612                           ; BSR set to: 57
 31613                           ;mcc_generated_files/mcc.c: 85:     while(PLLR == 0)
 31614  01C456  B1DC               	btfsc	220,0,b	;volatile
 31615  01C458  0012               	return	
 31616  01C45A  D7FD               	goto	l169
 31617  01C45C                     __end_of_OSCILLATOR_Initialize:
 31618                           	opt callstack 0
 31619                           
 31620 ;; *************** function _INTERRUPT_Initialize *****************
 31621 ;; Defined at:
 31622 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 31623 ;; Parameters:    Size  Location     Type
 31624 ;;		None
 31625 ;; Auto vars:     Size  Location     Type
 31626 ;;  state           1  [STACK] _Bool 
 31627 ;; Return value:  Size  Location     Type
 31628 ;;                  1  [STACK] void 
 31629 ;; Registers used:
 31630 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 31631 ;; Tracked objects:
 31632 ;;		On entry : 0/0
 31633 ;;		On exit  : 3F/39
 31634 ;;		Unchanged: 0/0
 31635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31639 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31640 ;;Total ram usage:        0 bytes
 31641 ;; Hardware stack levels used:    1
 31642 ;; Hardware stack levels required when called:   15
 31643 ;; This function calls:
 31644 ;;		Nothing
 31645 ;; This function is called by:
 31646 ;;		_SYSTEM_Initialize
 31647 ;; This function uses a reentrant model
 31648 ;;
 31649                           
 31650                           	psect	text132
 31651  01B352                     __ptext132:
 31652                           	opt callstack 0
 31653  01B352                     _INTERRUPT_Initialize:
 31654                           	opt callstack 0
 31655                           
 31656                           ; BSR set to: 57
 31657                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31658  01B352  52E6               	movf	postinc1,f,c
 31659                           
 31660                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 31661                           
 31662                           ;incstack = 0
 31663  01B354  8AD2               	bsf	210,5,c	;volatile
 31664                           
 31665                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 31666  01B356  AED2               	btfss	16338,7,c	;volatile
 31667  01B358  D003               	goto	u9500
 31668  01B35A  6A0C               	clrf	(btemp+11)^0,c
 31669  01B35C  2A0C               	incf	(btemp+11)^0,f,c
 31670  01B35E  D001               	goto	u9518
 31671  01B360                     u9500:
 31672  01B360  6A0C               	clrf	(btemp+11)^0,c
 31673  01B362                     u9518:
 31674                           
 31675                           ;stkvar	_state @ sp[(-1)+0]
 31676  01B362  0EFF               	movlw	-1
 31677  01B364  0060  F033  FFE3   	movff	btemp+11,plusw1
 31678                           
 31679                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 31680  01B36A  9ED2               	bcf	16338,7,c	;volatile
 31681                           
 31682                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 31683  01B36C  0E55               	movlw	85
 31684  01B36E  6ED4               	movwf	212,c	;volatile
 31685                           
 31686                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 31687  01B370  0EAA               	movlw	170
 31688  01B372  6ED4               	movwf	212,c	;volatile
 31689                           
 31690                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 31691  01B374  90D4               	bcf	212,0,c	;volatile
 31692                           
 31693                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 31694  01B376  0138               	movlb	56	; () banked
 31695  01B378  6B9F               	clrf	159,b	;volatile
 31696                           
 31697                           ; BSR set to: 56
 31698                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 31699  01B37A  6B9E               	clrf	158,b	;volatile
 31700                           
 31701                           ; BSR set to: 56
 31702                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 31703  01B37C  0E08               	movlw	8
 31704  01B37E  6F9D               	movwf	157,b	;volatile
 31705                           
 31706                           ; BSR set to: 56
 31707                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 31708  01B380  0E55               	movlw	85
 31709  01B382  6ED4               	movwf	212,c	;volatile
 31710                           
 31711                           ; BSR set to: 56
 31712                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 31713  01B384  0EAA               	movlw	170
 31714  01B386  6ED4               	movwf	212,c	;volatile
 31715                           
 31716                           ; BSR set to: 56
 31717                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 31718  01B388  80D4               	bsf	212,0,c	;volatile
 31719                           
 31720                           ; BSR set to: 56
 31721                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 31722                           ;stkvar	_state @ sp[(-1)+0]
 31723  01B38A  0EFF               	movlw	-1
 31724  01B38C  B0E3               	btfsc	plusw1,0,c
 31725  01B38E  D002               	bra	u9525
 31726  01B390  9ED2               	bcf	16338,7,c	;volatile
 31727  01B392  D001               	bra	u9526
 31728  01B394                     u9525:
 31729  01B394  8ED2               	bsf	16338,7,c	;volatile
 31730  01B396                     u9526:
 31731                           
 31732                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 31733  01B396  0139               	movlb	57	; () banked
 31734  01B398  8782               	bsf	130,3,b	;volatile
 31735                           
 31736                           ; BSR set to: 57
 31737                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 31738  01B39A  8382               	bsf	130,1,b	;volatile
 31739                           
 31740                           ; BSR set to: 57
 31741                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 31742  01B39C  8182               	bsf	130,0,b	;volatile
 31743                           
 31744                           ; BSR set to: 57
 31745                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 31746  01B39E  8582               	bsf	130,2,b	;volatile
 31747                           
 31748                           ; BSR set to: 57
 31749                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 31750  01B3A0  8786               	bsf	134,3,b	;volatile
 31751                           
 31752                           ; BSR set to: 57
 31753                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 31754  01B3A2  8586               	bsf	134,2,b	;volatile
 31755                           
 31756                           ; BSR set to: 57
 31757                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1RXIP = 1;
 31758  01B3A4  8783               	bsf	131,3,b	;volatile
 31759                           
 31760                           ; BSR set to: 57
 31761                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR1bits.INT0IP = 1;
 31762  01B3A6  8181               	bsf	129,0,b	;volatile
 31763                           
 31764                           ; BSR set to: 57
 31765                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR5bits.INT1IP = 0;
 31766  01B3A8  9185               	bcf	133,0,b	;volatile
 31767                           
 31768                           ; BSR set to: 57
 31769                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR9bits.TMR6IP = 1;
 31770  01B3AA  8189               	bsf	137,0,b	;volatile
 31771                           
 31772                           ; BSR set to: 57
 31773                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR8bits.TMR5IP = 0;
 31774  01B3AC  9D88               	bcf	136,6,b	;volatile
 31775                           
 31776                           ; BSR set to: 57
 31777                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR6bits.TMR3IP = 0;
 31778  01B3AE  9D86               	bcf	134,6,b	;volatile
 31779                           
 31780                           ; BSR set to: 57
 31781                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 31782  01B3B0  8581               	bsf	129,2,b	;volatile
 31783                           
 31784                           ; BSR set to: 57
 31785                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 31786  01B3B2  8781               	bsf	129,3,b	;volatile
 31787                           
 31788                           ; BSR set to: 57
 31789                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 31790  01B3B4  52E5               	movf	postdec1,f,c
 31791  01B3B6  0012               	return		;funcret
 31792  01B3B8                     __end_of_INTERRUPT_Initialize:
 31793                           	opt callstack 0
 31794                           
 31795 ;; *************** function _FVR_Initialize *****************
 31796 ;; Defined at:
 31797 ;;		line 58 in file "mcc_generated_files/fvr.c"
 31798 ;; Parameters:    Size  Location     Type
 31799 ;;		None
 31800 ;; Auto vars:     Size  Location     Type
 31801 ;;		None
 31802 ;; Return value:  Size  Location     Type
 31803 ;;                  1  [STACK] void 
 31804 ;; Registers used:
 31805 ;;		wreg, status,2
 31806 ;; Tracked objects:
 31807 ;;		On entry : 3F/39
 31808 ;;		On exit  : 3F/3E
 31809 ;;		Unchanged: 0/0
 31810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31814 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31815 ;;Total ram usage:        0 bytes
 31816 ;; Hardware stack levels used:    1
 31817 ;; Hardware stack levels required when called:   15
 31818 ;; This function calls:
 31819 ;;		Nothing
 31820 ;; This function is called by:
 31821 ;;		_SYSTEM_Initialize
 31822 ;; This function uses a reentrant model
 31823 ;;
 31824                           
 31825                           	psect	text133
 31826  01C566                     __ptext133:
 31827                           	opt callstack 0
 31828  01C566                     _FVR_Initialize:
 31829                           	opt callstack 14
 31830                           
 31831                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 31832                           
 31833                           ; BSR set to: 57
 31834                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31835                           ;incstack = 0
 31836  01C566  0EAF               	movlw	175
 31837  01C568  013E               	movlb	62	; () banked
 31838  01C56A  6FC1               	movwf	193,b	;volatile
 31839                           
 31840                           ; BSR set to: 62
 31841                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 31842  01C56C  0012               	return		;funcret
 31843  01C56E                     __end_of_FVR_Initialize:
 31844                           	opt callstack 0
 31845                           
 31846 ;; *************** function _EXT_INT_Initialize *****************
 31847 ;; Defined at:
 31848 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 31849 ;; Parameters:    Size  Location     Type
 31850 ;;		None
 31851 ;; Auto vars:     Size  Location     Type
 31852 ;;		None
 31853 ;; Return value:  Size  Location     Type
 31854 ;;                  1  [STACK] void 
 31855 ;; Registers used:
 31856 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31857 ;; Tracked objects:
 31858 ;;		On entry : 3F/3F
 31859 ;;		On exit  : 3F/39
 31860 ;;		Unchanged: 0/0
 31861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31865 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31866 ;;Total ram usage:        0 bytes
 31867 ;; Hardware stack levels used:    1
 31868 ;; Hardware stack levels required when called:   16
 31869 ;; This function calls:
 31870 ;;		_INT0_SetInterruptHandler
 31871 ;;		_INT1_SetInterruptHandler
 31872 ;; This function is called by:
 31873 ;;		_SYSTEM_Initialize
 31874 ;; This function uses a reentrant model
 31875 ;;
 31876                           
 31877                           	psect	text134
 31878  01BD7C                     __ptext134:
 31879                           	opt callstack 0
 31880  01BD7C                     _EXT_INT_Initialize:
 31881                           	opt callstack 13
 31882                           
 31883                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 31884                           
 31885                           ; BSR set to: 62
 31886                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31887                           ;incstack = 0
 31888  01BD7C  0139               	movlb	57	; () banked
 31889  01BD7E  91A1               	bcf	161,0,b	;volatile
 31890                           
 31891                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 31892  01BD80  90D2               	bcf	210,0,c	;volatile
 31893                           
 31894                           ; BSR set to: 57
 31895                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 31896  01BD82  0E92               	movlw	low _INT0_DefaultInterruptHandler
 31897  01BD84  6EE6               	movwf	postinc1,c
 31898  01BD86  0EC5               	movlw	high _INT0_DefaultInterruptHandler
 31899  01BD88  6EE6               	movwf	postinc1,c
 31900  01BD8A  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 31901  01BD8C  6EE6               	movwf	postinc1,c
 31902  01BD8E  EC5B  F0E0         	call	_INT0_SetInterruptHandler	;wreg free
 31903                           
 31904                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 31905  01BD92  0139               	movlb	57	; () banked
 31906  01BD94  8191               	bsf	145,0,b	;volatile
 31907                           
 31908                           ; BSR set to: 57
 31909                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 31910  01BD96  91A5               	bcf	165,0,b	;volatile
 31911                           
 31912                           ; BSR set to: 57
 31913                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 31914  01BD98  92D2               	bcf	210,1,c	;volatile
 31915                           
 31916                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 31917  01BD9A  0E8E               	movlw	low _INT1_DefaultInterruptHandler
 31918  01BD9C  6EE6               	movwf	postinc1,c
 31919  01BD9E  0EC5               	movlw	high _INT1_DefaultInterruptHandler
 31920  01BDA0  6EE6               	movwf	postinc1,c
 31921  01BDA2  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 31922  01BDA4  6EE6               	movwf	postinc1,c
 31923  01BDA6  EC47  F0E0         	call	_INT1_SetInterruptHandler	;wreg free
 31924                           
 31925                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 31926  01BDAA  0139               	movlb	57	; () banked
 31927  01BDAC  8195               	bsf	149,0,b	;volatile
 31928                           
 31929                           ; BSR set to: 57
 31930                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 31931  01BDAE  0012               	return		;funcret
 31932  01BDB0                     __end_of_EXT_INT_Initialize:
 31933                           	opt callstack 0
 31934                           
 31935 ;; *************** function _INT1_SetInterruptHandler *****************
 31936 ;; Defined at:
 31937 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 31938 ;; Parameters:    Size  Location     Type
 31939 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31940 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 31941 ;; Auto vars:     Size  Location     Type
 31942 ;;		None
 31943 ;; Return value:  Size  Location     Type
 31944 ;;                  1  [STACK] void 
 31945 ;; Registers used:
 31946 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31947 ;; Tracked objects:
 31948 ;;		On entry : 3F/39
 31949 ;;		On exit  : 0/0
 31950 ;;		Unchanged: 0/0
 31951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31956 ;;Total ram usage:        0 bytes
 31957 ;; Hardware stack levels used:    1
 31958 ;; Hardware stack levels required when called:   15
 31959 ;; This function calls:
 31960 ;;		Nothing
 31961 ;; This function is called by:
 31962 ;;		_EXT_INT_Initialize
 31963 ;;		_start_switch_handler
 31964 ;; This function uses a reentrant model
 31965 ;;
 31966                           
 31967                           	psect	text135
 31968  01C08E                     __ptext135:
 31969                           	opt callstack 0
 31970  01C08E                     _INT1_SetInterruptHandler:
 31971                           	opt callstack 14
 31972                           
 31973                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 31974                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31975                           
 31976                           ; BSR set to: 57
 31977                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31978                           ;incstack = 0
 31979  01C08E  50E1               	movf	fsr1l,w,c
 31980  01C090  0FFD               	addlw	-3
 31981  01C092  6ED9               	movwf	fsr2l,c
 31982  01C094  50E2               	movf	fsr1h,w,c
 31983  01C096  6EDA               	movwf	fsr2h,c
 31984  01C098  0EFF               	movlw	255
 31985  01C09A  22DA               	addwfc	fsr2h,f,c
 31986  01C09C  006F FF78  F094    	movff	postinc2,_INT1_InterruptHandler
 31987  01C0A2  006F FF78  F095    	movff	postinc2,_INT1_InterruptHandler+1
 31988  01C0A8  006F FF74  F096    	movff	postdec2,_INT1_InterruptHandler+2
 31989                           
 31990                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 31991  01C0AE  52E5               	movf	postdec1,f,c
 31992  01C0B0  52E5               	movf	postdec1,f,c
 31993  01C0B2  52E5               	movf	postdec1,f,c
 31994  01C0B4  0012               	return		;funcret
 31995  01C0B6                     __end_of_INT1_SetInterruptHandler:
 31996                           	opt callstack 0
 31997                           
 31998 ;; *************** function _INT0_SetInterruptHandler *****************
 31999 ;; Defined at:
 32000 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 32001 ;; Parameters:    Size  Location     Type
 32002 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 32003 ;;		 -> INT0_DefaultInterruptHandler(1), 
 32004 ;; Auto vars:     Size  Location     Type
 32005 ;;		None
 32006 ;; Return value:  Size  Location     Type
 32007 ;;                  1  [STACK] void 
 32008 ;; Registers used:
 32009 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 32010 ;; Tracked objects:
 32011 ;;		On entry : 3F/39
 32012 ;;		On exit  : 0/0
 32013 ;;		Unchanged: 0/0
 32014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32018 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32019 ;;Total ram usage:        0 bytes
 32020 ;; Hardware stack levels used:    1
 32021 ;; Hardware stack levels required when called:   15
 32022 ;; This function calls:
 32023 ;;		Nothing
 32024 ;; This function is called by:
 32025 ;;		_EXT_INT_Initialize
 32026 ;; This function uses a reentrant model
 32027 ;;
 32028                           
 32029                           	psect	text136
 32030  01C0B6                     __ptext136:
 32031                           	opt callstack 0
 32032  01C0B6                     _INT0_SetInterruptHandler:
 32033                           	opt callstack 13
 32034                           
 32035                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 32036                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 32037                           
 32038                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32039                           ;incstack = 0
 32040  01C0B6  50E1               	movf	fsr1l,w,c
 32041  01C0B8  0FFD               	addlw	-3
 32042  01C0BA  6ED9               	movwf	fsr2l,c
 32043  01C0BC  50E2               	movf	fsr1h,w,c
 32044  01C0BE  6EDA               	movwf	fsr2h,c
 32045  01C0C0  0EFF               	movlw	255
 32046  01C0C2  22DA               	addwfc	fsr2h,f,c
 32047  01C0C4  006F FF78  F097    	movff	postinc2,_INT0_InterruptHandler
 32048  01C0CA  006F FF78  F098    	movff	postinc2,_INT0_InterruptHandler+1
 32049  01C0D0  006F FF74  F099    	movff	postdec2,_INT0_InterruptHandler+2
 32050                           
 32051                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 32052  01C0D6  52E5               	movf	postdec1,f,c
 32053  01C0D8  52E5               	movf	postdec1,f,c
 32054  01C0DA  52E5               	movf	postdec1,f,c
 32055  01C0DC  0012               	return		;funcret
 32056  01C0DE                     __end_of_INT0_SetInterruptHandler:
 32057                           	opt callstack 0
 32058                           
 32059 ;; *************** function _DMA2_Initialize *****************
 32060 ;; Defined at:
 32061 ;;		line 61 in file "mcc_generated_files/dma2.c"
 32062 ;; Parameters:    Size  Location     Type
 32063 ;;		None
 32064 ;; Auto vars:     Size  Location     Type
 32065 ;;		None
 32066 ;; Return value:  Size  Location     Type
 32067 ;;                  1  [STACK] void 
 32068 ;; Registers used:
 32069 ;;		wreg, status,2
 32070 ;; Tracked objects:
 32071 ;;		On entry : 3F/3D
 32072 ;;		On exit  : 3F/3B
 32073 ;;		Unchanged: 0/0
 32074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32078 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32079 ;;Total ram usage:        0 bytes
 32080 ;; Hardware stack levels used:    1
 32081 ;; Hardware stack levels required when called:   15
 32082 ;; This function calls:
 32083 ;;		Nothing
 32084 ;; This function is called by:
 32085 ;;		_SYSTEM_Initialize
 32086 ;; This function uses a reentrant model
 32087 ;;
 32088                           
 32089                           	psect	text137
 32090  01B5F4                     __ptext137:
 32091                           	opt callstack 0
 32092  01B5F4                     _DMA2_Initialize:
 32093                           	opt callstack 14
 32094                           
 32095                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 32096                           
 32097                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32098                           ;incstack = 0
 32099  01B5F4  0E00               	movlw	0
 32100  01B5F6  013B               	movlb	59	; () banked
 32101  01B5F8  6FD9               	movwf	217,b	;volatile
 32102  01B5FA  0E10               	movlw	16
 32103  01B5FC  6FDA               	movwf	218,b	;volatile
 32104  01B5FE  0E00               	movlw	0
 32105  01B600  6FDB               	movwf	219,b	;volatile
 32106                           
 32107                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 32108  01B602  0E3F               	movlw	63
 32109  01B604  6FD1               	movwf	209,b	;volatile
 32110  01B606  0EBB               	movlw	187
 32111  01B608  6FD0               	movwf	208,b	;volatile
 32112                           
 32113                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 32114  01B60A  0E03               	movlw	3
 32115  01B60C  6FDD               	movwf	221,b	;volatile
 32116                           
 32117                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 32118  01B60E  0E00               	movlw	0
 32119  01B610  6FD8               	movwf	216,b	;volatile
 32120  01B612  0E01               	movlw	1
 32121  01B614  6FD7               	movwf	215,b	;volatile
 32122                           
 32123                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 32124  01B616  0E00               	movlw	0
 32125  01B618  6FCF               	movwf	207,b	;volatile
 32126  01B61A  0E01               	movlw	1
 32127  01B61C  6FCE               	movwf	206,b	;volatile
 32128                           
 32129                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x1C;
 32130  01B61E  0E1C               	movlw	28
 32131  01B620  6FDF               	movwf	223,b	;volatile
 32132                           
 32133                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 32134  01B622  0E3D               	movlw	61
 32135  01B624  6FDE               	movwf	222,b	;volatile
 32136                           
 32137                           ; BSR set to: 59
 32138                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 32139  01B626  0139               	movlb	57	; () banked
 32140  01B628  97A5               	bcf	165,3,b	;volatile
 32141                           
 32142                           ; BSR set to: 57
 32143                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 32144  01B62A  95A5               	bcf	165,2,b	;volatile
 32145                           
 32146                           ; BSR set to: 57
 32147                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 32148  01B62C  9BA5               	bcf	165,5,b	;volatile
 32149                           
 32150                           ; BSR set to: 57
 32151                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 32152  01B62E  99A5               	bcf	165,4,b	;volatile
 32153                           
 32154                           ; BSR set to: 57
 32155                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 32156  01B630  9795               	bcf	149,3,b	;volatile
 32157                           
 32158                           ; BSR set to: 57
 32159                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 32160  01B632  9595               	bcf	149,2,b	;volatile
 32161                           
 32162                           ; BSR set to: 57
 32163                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 32164  01B634  9B95               	bcf	149,5,b	;volatile
 32165                           
 32166                           ; BSR set to: 57
 32167                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 32168  01B636  9995               	bcf	149,4,b	;volatile
 32169  01B638  9ED2               	bcf	16338,7,c	;# 
 32170  01B63A  0139               	banksel	14831	;# 
 32171  01B63C  0E55               	movlw	85	;# 
 32172  01B63E  6FEF               	movwf	14831,b	;# 
 32173  01B640  0EAA               	movlw	170	;# 
 32174  01B642  6FEF               	movwf	14831,b	;# 
 32175  01B644  81EF               	bsf	14831,0,b	;# 
 32176  01B646  8ED2               	bsf	16338,7,c	;# 
 32177                           
 32178                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 32179  01B648  013B               	movlb	59	; () banked
 32180  01B64A  6BDC               	clrf	220,b	;volatile
 32181                           
 32182                           ; BSR set to: 59
 32183                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 32184  01B64C  0012               	return		;funcret
 32185  01B64E                     __end_of_DMA2_Initialize:
 32186                           	opt callstack 0
 32187                           
 32188 ;; *************** function _DMA1_Initialize *****************
 32189 ;; Defined at:
 32190 ;;		line 86 in file "mcc_generated_files/dma1.c"
 32191 ;; Parameters:    Size  Location     Type
 32192 ;;		None
 32193 ;; Auto vars:     Size  Location     Type
 32194 ;;		None
 32195 ;; Return value:  Size  Location     Type
 32196 ;;                  1  [STACK] void 
 32197 ;; Registers used:
 32198 ;;		wreg, status,2
 32199 ;; Tracked objects:
 32200 ;;		On entry : 3F/3B
 32201 ;;		On exit  : 3F/3B
 32202 ;;		Unchanged: 0/0
 32203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32208 ;;Total ram usage:        0 bytes
 32209 ;; Hardware stack levels used:    1
 32210 ;; Hardware stack levels required when called:   15
 32211 ;; This function calls:
 32212 ;;		Nothing
 32213 ;; This function is called by:
 32214 ;;		_SYSTEM_Initialize
 32215 ;; This function uses a reentrant model
 32216 ;;
 32217                           
 32218                           	psect	text138
 32219  01B212                     __ptext138:
 32220                           	opt callstack 0
 32221  01B212                     _DMA1_Initialize:
 32222                           	opt callstack 14
 32223                           
 32224                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 32225                           
 32226                           ; BSR set to: 59
 32227                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32228                           ;incstack = 0
 32229  01B212  0E00               	movlw	0
 32230  01B214  013B               	movlb	59	; () banked
 32231  01B216  6FF9               	movwf	249,b	;volatile
 32232  01B218  0E10               	movlw	16
 32233  01B21A  6FFA               	movwf	250,b	;volatile
 32234  01B21C  0E00               	movlw	0
 32235  01B21E  6FFB               	movwf	251,b	;volatile
 32236                           
 32237                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 32238  01B220  0E3D               	movlw	61
 32239  01B222  6FF1               	movwf	241,b	;volatile
 32240  01B224  0E11               	movlw	17
 32241  01B226  6FF0               	movwf	240,b	;volatile
 32242                           
 32243                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 32244  01B228  0E03               	movlw	3
 32245  01B22A  6FFD               	movwf	253,b	;volatile
 32246                           
 32247                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 32248  01B22C  0E00               	movlw	0
 32249  01B22E  6FF8               	movwf	248,b	;volatile
 32250  01B230  0E01               	movlw	1
 32251  01B232  6FF7               	movwf	247,b	;volatile
 32252                           
 32253                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 32254  01B234  0E00               	movlw	0
 32255  01B236  6FEF               	movwf	239,b	;volatile
 32256  01B238  0E01               	movlw	1
 32257  01B23A  6FEE               	movwf	238,b	;volatile
 32258                           
 32259                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 32260  01B23C  0E15               	movlw	21
 32261  01B23E  6FFF               	movwf	255,b	;volatile
 32262                           
 32263                           ; BSR set to: 59
 32264                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 32265  01B240  6BFE               	clrf	254,b	;volatile
 32266                           
 32267                           ; BSR set to: 59
 32268                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 32269  01B242  0139               	movlb	57	; () banked
 32270  01B244  93A2               	bcf	162,1,b	;volatile
 32271                           
 32272                           ; BSR set to: 57
 32273                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 32274  01B246  91A2               	bcf	162,0,b	;volatile
 32275                           
 32276                           ; BSR set to: 57
 32277                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 32278  01B248  97A2               	bcf	162,3,b	;volatile
 32279                           
 32280                           ; BSR set to: 57
 32281                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 32282  01B24A  95A2               	bcf	162,2,b	;volatile
 32283                           
 32284                           ; BSR set to: 57
 32285                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 32286  01B24C  8392               	bsf	146,1,b	;volatile
 32287                           
 32288                           ; BSR set to: 57
 32289                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 32290  01B24E  8192               	bsf	146,0,b	;volatile
 32291                           
 32292                           ; BSR set to: 57
 32293                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 32294  01B250  8792               	bsf	146,3,b	;volatile
 32295                           
 32296                           ; BSR set to: 57
 32297                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 32298  01B252  8592               	bsf	146,2,b	;volatile
 32299                           
 32300                           ; BSR set to: 57
 32301                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 32302  01B254  6BF1               	clrf	241,b	;volatile
 32303                           
 32304                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 32305  01B256  0E01               	movlw	1
 32306  01B258  6FF2               	movwf	242,b	;volatile
 32307                           
 32308                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 32309  01B25A  0E04               	movlw	4
 32310  01B25C  6FF3               	movwf	243,b	;volatile
 32311                           
 32312                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 32313  01B25E  0E02               	movlw	2
 32314  01B260  6FF4               	movwf	244,b	;volatile
 32315                           
 32316                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 32317  01B262  0E03               	movlw	3
 32318  01B264  6FF7               	movwf	247,b	;volatile
 32319  01B266  9ED2               	bcf	16338,7,c	;# 
 32320  01B268  0139               	banksel	14831	;# 
 32321  01B26A  0E55               	movlw	85	;# 
 32322  01B26C  6FEF               	movwf	14831,b	;# 
 32323  01B26E  0EAA               	movlw	170	;# 
 32324  01B270  6FEF               	movwf	14831,b	;# 
 32325  01B272  81EF               	bsf	14831,0,b	;# 
 32326  01B274  8ED2               	bsf	16338,7,c	;# 
 32327                           
 32328                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 32329  01B276  013B               	movlb	59	; () banked
 32330  01B278  6BFC               	clrf	252,b	;volatile
 32331                           
 32332                           ; BSR set to: 59
 32333                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 32334  01B27A  0012               	return		;funcret
 32335  01B27C                     __end_of_DMA1_Initialize:
 32336                           	opt callstack 0
 32337                           
 32338 ;; *************** function _CLKREF_Initialize *****************
 32339 ;; Defined at:
 32340 ;;		line 58 in file "mcc_generated_files/clkref.c"
 32341 ;; Parameters:    Size  Location     Type
 32342 ;;		None
 32343 ;; Auto vars:     Size  Location     Type
 32344 ;;		None
 32345 ;; Return value:  Size  Location     Type
 32346 ;;                  1  [STACK] void 
 32347 ;; Registers used:
 32348 ;;		wreg, status,2
 32349 ;; Tracked objects:
 32350 ;;		On entry : 3F/3B
 32351 ;;		On exit  : 3F/3C
 32352 ;;		Unchanged: 0/0
 32353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32357 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32358 ;;Total ram usage:        0 bytes
 32359 ;; Hardware stack levels used:    1
 32360 ;; Hardware stack levels required when called:   15
 32361 ;; This function calls:
 32362 ;;		Nothing
 32363 ;; This function is called by:
 32364 ;;		_SYSTEM_Initialize
 32365 ;; This function uses a reentrant model
 32366 ;;
 32367                           
 32368                           	psect	text139
 32369  01C50E                     __ptext139:
 32370                           	opt callstack 0
 32371  01C50E                     _CLKREF_Initialize:
 32372                           	opt callstack 14
 32373                           
 32374                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 32375                           
 32376                           ; BSR set to: 59
 32377                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32378                           ;incstack = 0
 32379  01C50E  013C               	movlb	60	; () banked
 32380  01C510  6BE6               	clrf	230,b	;volatile
 32381                           
 32382                           ; BSR set to: 60
 32383                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 32384  01C512  0E94               	movlw	148
 32385  01C514  6FE5               	movwf	229,b	;volatile
 32386                           
 32387                           ; BSR set to: 60
 32388                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 32389  01C516  0012               	return		;funcret
 32390  01C518                     __end_of_CLKREF_Initialize:
 32391                           	opt callstack 0
 32392                           
 32393 ;; *************** function _ADCC_Initialize *****************
 32394 ;; Defined at:
 32395 ;;		line 65 in file "mcc_generated_files/adcc.c"
 32396 ;; Parameters:    Size  Location     Type
 32397 ;;		None
 32398 ;; Auto vars:     Size  Location     Type
 32399 ;;		None
 32400 ;; Return value:  Size  Location     Type
 32401 ;;                  1  [STACK] void 
 32402 ;; Registers used:
 32403 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 32404 ;; Tracked objects:
 32405 ;;		On entry : 3F/3E
 32406 ;;		On exit  : 0/0
 32407 ;;		Unchanged: 0/0
 32408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32412 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32413 ;;Total ram usage:        0 bytes
 32414 ;; Hardware stack levels used:    1
 32415 ;; Hardware stack levels required when called:   16
 32416 ;; This function calls:
 32417 ;;		_ADCC_SetADIInterruptHandler
 32418 ;;		_ADCC_SetADTIInterruptHandler
 32419 ;; This function is called by:
 32420 ;;		_SYSTEM_Initialize
 32421 ;; This function uses a reentrant model
 32422 ;;
 32423                           
 32424                           	psect	text140
 32425  01B27C                     __ptext140:
 32426                           	opt callstack 0
 32427  01B27C                     _ADCC_Initialize:
 32428                           	opt callstack 13
 32429                           
 32430                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 32431                           
 32432                           ; BSR set to: 60
 32433                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32434                           ;incstack = 0
 32435  01B27C  013E               	movlb	62	; () banked
 32436  01B27E  6BDE               	clrf	222,b	;volatile
 32437                           
 32438                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 32439  01B280  6BDF               	clrf	223,b	;volatile
 32440                           
 32441                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 32442  01B282  6BE0               	clrf	224,b	;volatile
 32443                           
 32444                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 32445  01B284  6BE1               	clrf	225,b	;volatile
 32446                           
 32447                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 32448  01B286  6BE4               	clrf	228,b	;volatile
 32449                           
 32450                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 32451  01B288  6BE5               	clrf	229,b	;volatile
 32452                           
 32453                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 32454  01B28A  6BEA               	clrf	234,b	;volatile
 32455                           
 32456                           ; BSR set to: 62
 32457                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 32458  01B28C  0E40               	movlw	64
 32459  01B28E  6FEC               	movwf	236,b	;volatile
 32460                           
 32461                           ; BSR set to: 62
 32462                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 32463  01B290  6BF1               	clrf	241,b	;volatile
 32464                           
 32465                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 32466  01B292  0E20               	movlw	32
 32467  01B294  6FF3               	movwf	243,b	;volatile
 32468                           
 32469                           ; BSR set to: 62
 32470                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 32471  01B296  6BF4               	clrf	244,b	;volatile
 32472                           
 32473                           ; BSR set to: 62
 32474                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 32475  01B298  6BF5               	clrf	245,b	;volatile
 32476                           
 32477                           ; BSR set to: 62
 32478                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 32479  01B29A  6BF6               	clrf	246,b	;volatile
 32480                           
 32481                           ; BSR set to: 62
 32482                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 32483  01B29C  6BF7               	clrf	247,b	;volatile
 32484                           
 32485                           ; BSR set to: 62
 32486                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 32487  01B29E  6BF9               	clrf	249,b	;volatile
 32488                           
 32489                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 32490  01B2A0  0E5B               	movlw	91
 32491  01B2A2  6FFA               	movwf	250,b	;volatile
 32492                           
 32493                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 32494  01B2A4  0E27               	movlw	39
 32495  01B2A6  6FFB               	movwf	251,b	;volatile
 32496                           
 32497                           ; BSR set to: 62
 32498                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 32499  01B2A8  6BFC               	clrf	252,b	;volatile
 32500                           
 32501                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 32502  01B2AA  0E02               	movlw	2
 32503  01B2AC  6FFD               	movwf	253,b	;volatile
 32504                           
 32505                           ; BSR set to: 62
 32506                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 32507  01B2AE  6BFE               	clrf	254,b	;volatile
 32508                           
 32509                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 32510  01B2B0  0E07               	movlw	7
 32511  01B2B2  6FFF               	movwf	255,b	;volatile
 32512                           
 32513                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 32514  01B2B4  0E84               	movlw	132
 32515  01B2B6  6FF8               	movwf	248,b	;volatile
 32516                           
 32517                           ; BSR set to: 62
 32518                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 32519  01B2B8  0139               	movlb	57	; () banked
 32520  01B2BA  95A1               	bcf	161,2,b	;volatile
 32521                           
 32522                           ; BSR set to: 57
 32523                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 32524  01B2BC  8591               	bsf	145,2,b	;volatile
 32525                           
 32526                           ; BSR set to: 57
 32527                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 32528  01B2BE  0E94               	movlw	low _ADCC_DefaultInterruptHandler
 32529  01B2C0  6EE6               	movwf	postinc1,c
 32530  01B2C2  0EC5               	movlw	high _ADCC_DefaultInterruptHandler
 32531  01B2C4  6EE6               	movwf	postinc1,c
 32532  01B2C6  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 32533  01B2C8  6EE6               	movwf	postinc1,c
 32534  01B2CA  EC83  F0E0         	call	_ADCC_SetADIInterruptHandler	;wreg free
 32535                           
 32536                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 32537  01B2CE  0139               	movlb	57	; () banked
 32538  01B2D0  97A1               	bcf	161,3,b	;volatile
 32539                           
 32540                           ; BSR set to: 57
 32541                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 32542  01B2D2  8791               	bsf	145,3,b	;volatile
 32543                           
 32544                           ; BSR set to: 57
 32545                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 32546  01B2D4  0E94               	movlw	low _ADCC_DefaultInterruptHandler
 32547  01B2D6  6EE6               	movwf	postinc1,c
 32548  01B2D8  0EC5               	movlw	high _ADCC_DefaultInterruptHandler
 32549  01B2DA  6EE6               	movwf	postinc1,c
 32550  01B2DC  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 32551  01B2DE  6EE6               	movwf	postinc1,c
 32552  01B2E0  EC6F  F0E0         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 32553                           
 32554                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 32555  01B2E4  0012               	return		;funcret
 32556  01B2E6                     __end_of_ADCC_Initialize:
 32557                           	opt callstack 0
 32558                           
 32559 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 32560 ;; Defined at:
 32561 ;;		line 336 in file "mcc_generated_files/adcc.c"
 32562 ;; Parameters:    Size  Location     Type
 32563 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 32564 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 32565 ;; Auto vars:     Size  Location     Type
 32566 ;;		None
 32567 ;; Return value:  Size  Location     Type
 32568 ;;                  1  [STACK] void 
 32569 ;; Registers used:
 32570 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 32571 ;; Tracked objects:
 32572 ;;		On entry : 0/0
 32573 ;;		On exit  : 0/0
 32574 ;;		Unchanged: 0/0
 32575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32580 ;;Total ram usage:        0 bytes
 32581 ;; Hardware stack levels used:    1
 32582 ;; Hardware stack levels required when called:   15
 32583 ;; This function calls:
 32584 ;;		Nothing
 32585 ;; This function is called by:
 32586 ;;		_ADCC_Initialize
 32587 ;;		_start_adc_scan
 32588 ;; This function uses a reentrant model
 32589 ;;
 32590                           
 32591                           	psect	text141
 32592  01C0DE                     __ptext141:
 32593                           	opt callstack 0
 32594  01C0DE                     _ADCC_SetADTIInterruptHandler:
 32595                           	opt callstack 14
 32596                           
 32597                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 32598                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 32599                           
 32600                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32601                           ;incstack = 0
 32602  01C0DE  50E1               	movf	fsr1l,w,c
 32603  01C0E0  0FFD               	addlw	-3
 32604  01C0E2  6ED9               	movwf	fsr2l,c
 32605  01C0E4  50E2               	movf	fsr1h,w,c
 32606  01C0E6  6EDA               	movwf	fsr2h,c
 32607  01C0E8  0EFF               	movlw	255
 32608  01C0EA  22DA               	addwfc	fsr2h,f,c
 32609  01C0EC  006F FF78  F085    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 32610  01C0F2  006F FF78  F086    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 32611  01C0F8  006F FF74  F087    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 32612                           
 32613                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 32614  01C0FE  52E5               	movf	postdec1,f,c
 32615  01C100  52E5               	movf	postdec1,f,c
 32616  01C102  52E5               	movf	postdec1,f,c
 32617  01C104  0012               	return		;funcret
 32618  01C106                     __end_of_ADCC_SetADTIInterruptHandler:
 32619                           	opt callstack 0
 32620                           
 32621 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 32622 ;; Defined at:
 32623 ;;		line 323 in file "mcc_generated_files/adcc.c"
 32624 ;; Parameters:    Size  Location     Type
 32625 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 32626 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 32627 ;; Auto vars:     Size  Location     Type
 32628 ;;		None
 32629 ;; Return value:  Size  Location     Type
 32630 ;;                  1  [STACK] void 
 32631 ;; Registers used:
 32632 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 32633 ;; Tracked objects:
 32634 ;;		On entry : 6/0
 32635 ;;		On exit  : 0/0
 32636 ;;		Unchanged: 0/0
 32637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32642 ;;Total ram usage:        0 bytes
 32643 ;; Hardware stack levels used:    1
 32644 ;; Hardware stack levels required when called:   15
 32645 ;; This function calls:
 32646 ;;		Nothing
 32647 ;; This function is called by:
 32648 ;;		_ADCC_Initialize
 32649 ;;		_start_adc_scan
 32650 ;; This function uses a reentrant model
 32651 ;;
 32652                           
 32653                           	psect	text142
 32654  01C106                     __ptext142:
 32655                           	opt callstack 0
 32656  01C106                     _ADCC_SetADIInterruptHandler:
 32657                           	opt callstack 14
 32658                           
 32659                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 32660                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 32661                           
 32662                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32663                           ;incstack = 0
 32664  01C106  50E1               	movf	fsr1l,w,c
 32665  01C108  0FFD               	addlw	-3
 32666  01C10A  6ED9               	movwf	fsr2l,c
 32667  01C10C  50E2               	movf	fsr1h,w,c
 32668  01C10E  6EDA               	movwf	fsr2h,c
 32669  01C110  0EFF               	movlw	255
 32670  01C112  22DA               	addwfc	fsr2h,f,c
 32671  01C114  006F FF78  F088    	movff	postinc2,_ADCC_ADI_InterruptHandler
 32672  01C11A  006F FF78  F089    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 32673  01C120  006F FF74  F08A    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 32674                           
 32675                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 32676  01C126  52E5               	movf	postdec1,f,c
 32677  01C128  52E5               	movf	postdec1,f,c
 32678  01C12A  52E5               	movf	postdec1,f,c
 32679  01C12C  0012               	return		;funcret
 32680  01C12E                     __end_of_ADCC_SetADIInterruptHandler:
 32681                           	opt callstack 0
 32682                           
 32683 ;; *************** function _INT1_ISR *****************
 32684 ;; Defined at:
 32685 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 32686 ;; Parameters:    Size  Location     Type
 32687 ;;		None
 32688 ;; Auto vars:     Size  Location     Type
 32689 ;;		None
 32690 ;; Return value:  Size  Location     Type
 32691 ;;                  1    wreg      void 
 32692 ;; Registers used:
 32693 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 32694 ;; Tracked objects:
 32695 ;;		On entry : 0/0
 32696 ;;		On exit  : 0/0
 32697 ;;		Unchanged: 0/0
 32698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32701 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32702 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32703 ;;Total ram usage:        4 bytes
 32704 ;; Hardware stack levels used:    1
 32705 ;; Hardware stack levels required when called:    5
 32706 ;; This function calls:
 32707 ;;		_INT1_CallBack
 32708 ;; This function is called by:
 32709 ;;		Interrupt level 1
 32710 ;; This function uses a non-reentrant model
 32711 ;;
 32712                           
 32713                           	psect	text143
 32714  01BB8C                     __ptext143:
 32715                           	opt callstack 0
 32716  01BB8C                     _INT1_ISR:
 32717                           	opt callstack 11
 32718                           
 32719                           ;incstack = 0
 32720  01BB8C  006F FF60  F027    	movff	status,??_INT1_ISR
 32721  01BB92  0060  F004  F028   	movff	btemp,??_INT1_ISR+1
 32722  01BB98  0060  F02C  F029   	movff	btemp+10,??_INT1_ISR+2
 32723  01BB9E  0060  F030  F02A   	movff	btemp+11,??_INT1_ISR+3
 32724  01BBA4  EE16  F0AF         	lfsr	1,___intlo_sp
 32725                           
 32726                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 32727  01BBA8  0139               	movlb	57	; () banked
 32728  01BBAA  91A5               	bcf	165,0,b	;volatile
 32729                           
 32730                           ; BSR set to: 57
 32731                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 32732  01BBAC  ECE6  F0E0         	call	_INT1_CallBack	;wreg free
 32733  01BBB0  0060  F0A8  F00C   	movff	??_INT1_ISR+3,btemp+11
 32734  01BBB6  0060  F0A4  F00B   	movff	??_INT1_ISR+2,btemp+10
 32735  01BBBC  0060  F0A0  F001   	movff	??_INT1_ISR+1,btemp
 32736  01BBC2  0060  F09F  FFD8   	movff	??_INT1_ISR,status
 32737  01BBC8  0011               	retfie		f
 32738  01BBCA                     __end_of_INT1_ISR:
 32739                           	opt callstack 0
 32740                           
 32741 ;; *************** function _INT1_CallBack *****************
 32742 ;; Defined at:
 32743 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 32744 ;; Parameters:    Size  Location     Type
 32745 ;;		None
 32746 ;; Auto vars:     Size  Location     Type
 32747 ;;		None
 32748 ;; Return value:  Size  Location     Type
 32749 ;;                  1  [STACK] void 
 32750 ;; Registers used:
 32751 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 32752 ;; Tracked objects:
 32753 ;;		On entry : 3F/39
 32754 ;;		On exit  : 0/0
 32755 ;;		Unchanged: 0/0
 32756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32760 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32761 ;;Total ram usage:        0 bytes
 32762 ;; Hardware stack levels used:    1
 32763 ;; Hardware stack levels required when called:    4
 32764 ;; This function calls:
 32765 ;;		Absolute function
 32766 ;;		_INT1_DefaultInterruptHandler
 32767 ;;		_switch_handler
 32768 ;; This function is called by:
 32769 ;;		_INT1_ISR
 32770 ;; This function uses a reentrant model
 32771 ;;
 32772                           
 32773                           	psect	text144
 32774  01C1CC                     __ptext144:
 32775                           	opt callstack 0
 32776  01C1CC                     _INT1_CallBack:
 32777                           	opt callstack 11
 32778                           
 32779                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 32780                           
 32781                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32782                           ;incstack = 0
 32783  01C1CC  0100               	movlb	0	; () banked
 32784  01C1CE  5194               	movf	_INT1_InterruptHandler& (0+255),w,b
 32785  01C1D0  1195               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 32786  01C1D2  1196               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 32787  01C1D4  B4D8               	btfsc	status,2,c
 32788  01C1D6  0012               	return	
 32789                           
 32790                           ; BSR set to: 0
 32791                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 32792  01C1D8  D801               	call	u1009_28
 32793  01C1DA  0012               	return	
 32794  01C1DC                     u1009_28:
 32795  01C1DC  0005               	push	
 32796  01C1DE  6EFA               	movwf	pclath,c
 32797  01C1E0  5194               	movf	_INT1_InterruptHandler& (0+255),w,b
 32798  01C1E2  6EFD               	movwf	tosl,c
 32799  01C1E4  5195               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 32800  01C1E6  6EFE               	movwf	tosh,c
 32801  01C1E8  5196               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 32802  01C1EA  6EFF               	movwf	tosu,c
 32803  01C1EC  50FA               	movf	pclath,w,c
 32804  01C1EE  0012               	return		;indir
 32805  01C1F0                     __end_of_INT1_CallBack:
 32806                           	opt callstack 0
 32807                           
 32808 ;; *************** function _INT1_DefaultInterruptHandler *****************
 32809 ;; Defined at:
 32810 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 32811 ;; Parameters:    Size  Location     Type
 32812 ;;		None
 32813 ;; Auto vars:     Size  Location     Type
 32814 ;;		None
 32815 ;; Return value:  Size  Location     Type
 32816 ;;                  1  [STACK] void 
 32817 ;; Registers used:
 32818 ;;		None
 32819 ;; Tracked objects:
 32820 ;;		On entry : 3F/0
 32821 ;;		On exit  : 0/0
 32822 ;;		Unchanged: 0/0
 32823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32828 ;;Total ram usage:        0 bytes
 32829 ;; Hardware stack levels used:    1
 32830 ;; Hardware stack levels required when called:    3
 32831 ;; This function calls:
 32832 ;;		Nothing
 32833 ;; This function is called by:
 32834 ;;		_EXT_INT_Initialize
 32835 ;;		_INT1_CallBack
 32836 ;; This function uses a reentrant model
 32837 ;;
 32838                           
 32839                           	psect	text145
 32840  01C58E                     __ptext145:
 32841                           	opt callstack 0
 32842  01C58E                     _INT1_DefaultInterruptHandler:
 32843                           	opt callstack 11
 32844                           
 32845                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 32846                           
 32847                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32848                           ;incstack = 0
 32849  01C58E  0012               	return		;funcret
 32850  01C590                     __end_of_INT1_DefaultInterruptHandler:
 32851                           	opt callstack 0
 32852                           
 32853 ;; *************** function _switch_handler *****************
 32854 ;; Defined at:
 32855 ;;		line 58 in file "dio.c"
 32856 ;; Parameters:    Size  Location     Type
 32857 ;;		None
 32858 ;; Auto vars:     Size  Location     Type
 32859 ;;  i               1  [STACK] unsigned char 
 32860 ;;  sw_value        1  [STACK] unsigned char 
 32861 ;; Return value:  Size  Location     Type
 32862 ;;                  1  [STACK] void 
 32863 ;; Registers used:
 32864 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 32865 ;; Tracked objects:
 32866 ;;		On entry : 3F/0
 32867 ;;		On exit  : 0/0
 32868 ;;		Unchanged: 0/0
 32869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32873 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32874 ;;Total ram usage:        0 bytes
 32875 ;; Hardware stack levels used:    1
 32876 ;; Hardware stack levels required when called:    3
 32877 ;; This function calls:
 32878 ;;		Nothing
 32879 ;; This function is called by:
 32880 ;;		_start_switch_handler
 32881 ;;		_INT1_CallBack
 32882 ;; This function uses a reentrant model
 32883 ;;
 32884                           
 32885                           	psect	text146
 32886  01974C                     __ptext146:
 32887                           	opt callstack 0
 32888  01974C                     _switch_handler:
 32889                           	opt callstack 0
 32890                           
 32891                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32892  01974C  52E6               	movf	postinc1,f,c
 32893  01974E  52E6               	movf	postinc1,f,c
 32894                           
 32895                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 32896                           ;stkvar	_i @ sp[(-2)+0]
 32897                           
 32898                           ;incstack = 0
 32899  019750  0EFE               	movlw	-2
 32900  019752  6AE3               	clrf	plusw1,c
 32901  019754  9ABF               	bcf	191,5,c	;volatile
 32902                           
 32903                           ;dio.c: 72:  __nop();
 32904  019756  F000               	nop	
 32905                           
 32906                           ;dio.c: 73:  __nop();
 32907  019758  F000               	nop	
 32908                           
 32909                           ;dio.c: 74:  __nop();
 32910  01975A  F000               	nop	
 32911                           
 32912                           ;dio.c: 75:  __nop();
 32913  01975C  F000               	nop	
 32914                           
 32915                           ;dio.c: 76:  __nop();
 32916  01975E  F000               	nop	
 32917                           
 32918                           ;dio.c: 77:  __nop();
 32919  019760  F000               	nop	
 32920  019762  D013               	goto	l10755
 32921  019764                     l10743:
 32922                           
 32923                           ;dio.c: 82:    sw_value = PORTFbits.RF3;
 32924  019764  A6CF               	btfss	207,3,c	;volatile
 32925  019766  D00B               	goto	u978_20
 32926  019768  D007               	goto	u978_21
 32927  01976A                     u977_28:
 32928                           
 32929                           ;stkvar	_sw_value @ sp[(-2)+1]
 32930  01976A  0EFF               	movlw	-1
 32931  01976C  0060  F033  FFE3   	movff	btemp+11,plusw1
 32932                           
 32933                           ;dio.c: 83:    break;
 32934  019772  D021               	goto	l10757
 32935  019774                     l10745:
 32936                           
 32937                           ;dio.c: 85:    sw_value = PORTFbits.RF2;
 32938  019774  A4CF               	btfss	207,2,c	;volatile
 32939  019776  D003               	goto	u978_20
 32940  019778                     u978_21:
 32941  019778  6A0C               	clrf	(btemp+11)^0,c
 32942  01977A  2A0C               	incf	(btemp+11)^0,f,c
 32943  01977C  D7F6               	goto	u977_28
 32944  01977E                     u978_20:
 32945  01977E  6A0C               	clrf	(btemp+11)^0,c
 32946  019780  D7F4               	goto	u977_28
 32947  019782                     l10747:
 32948                           
 32949                           ;dio.c: 88:    sw_value = 1;
 32950                           ;stkvar	_sw_value @ sp[(-2)+1]
 32951  019782  0EFF               	movlw	-1
 32952  019784  6AE3               	clrf	plusw1,c
 32953  019786  2AE3               	incf	plusw1,f,c
 32954                           
 32955                           ;dio.c: 89:    break;
 32956  019788  D016               	goto	l10757
 32957  01978A                     l10755:
 32958                           
 32959                           ;stkvar	_i @ sp[(-2)+0]
 32960  01978A  0EFE               	movlw	-2
 32961  01978C  50E3               	movf	plusw1,w,c
 32962  01978E  6E0B               	movwf	(btemp+10)^0,c
 32963  019790  6A0C               	clrf	(btemp+11)^0,c
 32964                           
 32965                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 32966                           ; Switch size 1, requested type "simple"
 32967                           ; Number of cases is 1, Range of values is 0 to 0
 32968                           ; switch strategies available:
 32969                           ; Name         Instructions Cycles
 32970                           ; simple_byte            4     3 (average)
 32971                           ;	Chosen strategy is simple_byte
 32972  019792  500C               	movf	(btemp+11)^0,w,c
 32973  019794  0A00               	xorlw	0	; case 0
 32974  019796  A4D8               	btfss	status,2,c
 32975  019798  D7F4               	goto	l10747
 32976                           
 32977                           ; Switch size 1, requested type "simple"
 32978                           ; Number of cases is 4, Range of values is 0 to 3
 32979                           ; switch strategies available:
 32980                           ; Name         Instructions Cycles
 32981                           ; simple_byte           13     7 (average)
 32982                           ;	Chosen strategy is simple_byte
 32983  01979A  500B               	movf	(btemp+10)^0,w,c
 32984  01979C  0A00               	xorlw	0	; case 0
 32985  01979E  B4D8               	btfsc	status,2,c
 32986  0197A0  D7F0               	goto	l10747
 32987  0197A2  0A01               	xorlw	1	; case 1
 32988  0197A4  B4D8               	btfsc	status,2,c
 32989  0197A6  D7ED               	goto	l10747
 32990  0197A8  0A03               	xorlw	3	; case 2
 32991  0197AA  B4D8               	btfsc	status,2,c
 32992  0197AC  D7E3               	goto	l10745
 32993  0197AE  0A01               	xorlw	1	; case 3
 32994  0197B0  B4D8               	btfsc	status,2,c
 32995  0197B2  D7D8               	goto	l10743
 32996  0197B4  D7E6               	goto	l10747
 32997  0197B6                     l10757:
 32998                           
 32999                           ;dio.c: 99:   if (sw_value) {
 33000                           ;stkvar	_sw_value @ sp[(-2)+1]
 33001  0197B6  0EFF               	movlw	-1
 33002  0197B8  50E3               	movf	plusw1,w,c
 33003  0197BA  B4D8               	btfsc	status,2,c
 33004  0197BC  D018               	goto	l10763
 33005                           
 33006                           ;dio.c: 100:    if (S.button[i].sw == SW_ON) {
 33007                           ;stkvar	_i @ sp[(-2)+0]
 33008  0197BE  0EFE               	movlw	-2
 33009  0197C0  50E3               	movf	plusw1,w,c
 33010  0197C2  0D05               	mullw	5
 33011  0197C4  0E54               	movlw	low _S
 33012  0197C6  24F3               	addwf	243,w,c
 33013  0197C8  6ED9               	movwf	fsr2l,c
 33014  0197CA  0E02               	movlw	high _S
 33015  0197CC  20F4               	addwfc	prodh,w,c
 33016  0197CE  6EDA               	movwf	fsr2h,c
 33017  0197D0  04DE               	decf	postinc2,w,c
 33018  0197D2  A4D8               	btfss	status,2,c
 33019  0197D4  D049               	goto	l10771
 33020                           
 33021                           ;dio.c: 101:     S.button[i].sw = SW_OFF;
 33022                           ;stkvar	_i @ sp[(-2)+0]
 33023  0197D6  0EFE               	movlw	-2
 33024  0197D8  50E3               	movf	plusw1,w,c
 33025  0197DA  0D05               	mullw	5
 33026  0197DC  0E54               	movlw	low _S
 33027  0197DE  24F3               	addwf	243,w,c
 33028  0197E0  6ED9               	movwf	fsr2l,c
 33029  0197E2  0E02               	movlw	high _S
 33030  0197E4  20F4               	addwfc	prodh,w,c
 33031  0197E6  6EDA               	movwf	fsr2h,c
 33032  0197E8  0E00               	movlw	0
 33033  0197EA  6EDF               	movwf	indf2,c
 33034  0197EC  D03D               	goto	l10771
 33035  0197EE                     l10763:
 33036                           
 33037                           ;dio.c: 104:    if (S.button[i].sw == SW_OFF) {
 33038                           ;stkvar	_i @ sp[(-2)+0]
 33039  0197EE  0EFE               	movlw	-2
 33040  0197F0  50E3               	movf	plusw1,w,c
 33041  0197F2  0D05               	mullw	5
 33042  0197F4  0E54               	movlw	low _S
 33043  0197F6  24F3               	addwf	243,w,c
 33044  0197F8  6ED9               	movwf	fsr2l,c
 33045  0197FA  0E02               	movlw	high _S
 33046  0197FC  20F4               	addwfc	prodh,w,c
 33047  0197FE  6EDA               	movwf	fsr2h,c
 33048  019800  50DF               	movf	indf2,w,c
 33049  019802  A4D8               	btfss	status,2,c
 33050  019804  D031               	goto	l10771
 33051                           
 33052                           ;dio.c: 105:     S.button[i].sw = SW_ON;
 33053                           ;stkvar	_i @ sp[(-2)+0]
 33054  019806  0EFE               	movlw	-2
 33055  019808  50E3               	movf	plusw1,w,c
 33056  01980A  0D05               	mullw	5
 33057  01980C  0E54               	movlw	low _S
 33058  01980E  24F3               	addwf	243,w,c
 33059  019810  6ED9               	movwf	fsr2l,c
 33060  019812  0E02               	movlw	high _S
 33061  019814  20F4               	addwfc	prodh,w,c
 33062  019816  6EDA               	movwf	fsr2h,c
 33063  019818  0E01               	movlw	1
 33064  01981A  6EDF               	movwf	indf2,c
 33065                           
 33066                           ;dio.c: 106:     S.button[i].count = V.timerint_count;
 33067  01981C  EE20  F1C2         	lfsr	2,_V+187	;volatile
 33068                           
 33069                           ;stkvar	_i @ sp[(-2)+0]
 33070  019820  0EFE               	movlw	-2
 33071  019822  50E3               	movf	plusw1,w,c
 33072  019824  0D05               	mullw	5
 33073  019826  0E55               	movlw	low (_S+1)
 33074  019828  24F3               	addwf	243,w,c
 33075  01982A  6EE9               	movwf	fsr0l,c
 33076  01982C  0E02               	movlw	high (_S+1)
 33077  01982E  20F4               	addwfc	prodh,w,c
 33078  019830  6EEA               	movwf	fsr0h,c
 33079  019832  006F FF7B FFEE     	movff	postinc2,postinc0
 33080  019838  006F FF7B FFEE     	movff	postinc2,postinc0
 33081  01983E  006F FF7B FFEE     	movff	postinc2,postinc0
 33082  019844  006F FF7B FFEE     	movff	postinc2,postinc0
 33083                           
 33084                           ;dio.c: 107:     S.sw_bitmap |= 1 << i;
 33085                           ;stkvar	_i @ sp[(-2)+0]
 33086  01984A  0EFE               	movlw	-2
 33087  01984C  006F FF8C  F00C    	movff	plusw1,btemp+11
 33088  019852  0E01               	movlw	1
 33089  019854  6E0B               	movwf	(btemp+10)^0,c
 33090  019856  2A0C               	incf	(btemp+11)^0,f,c
 33091  019858  D002               	goto	u982_24
 33092  01985A                     u982_25:
 33093  01985A  90D8               	bcf	status,0,c
 33094  01985C  360B               	rlcf	(btemp+10)^0,f,c
 33095  01985E                     u982_24:
 33096  01985E  2E0C               	decfsz	(btemp+11)^0,f,c
 33097  019860  D7FC               	goto	u982_25
 33098  019862  500B               	movf	(btemp+10)^0,w,c
 33099  019864  0102               	movlb	2	; () banked
 33100  019866  137C               	iorwf	(_S+40)& (0+255),f,b	;volatile
 33101  019868                     l10771:
 33102                           
 33103                           ;dio.c: 110:  } while (++i < 4);
 33104                           ;stkvar	_i @ sp[(-2)+0]
 33105  019868  0EFE               	movlw	-2
 33106  01986A  2AE3               	incf	plusw1,f,c
 33107  01986C  0EFE               	movlw	-2
 33108  01986E  006F FF8C  F001    	movff	plusw1,btemp
 33109  019874  0E03               	movlw	3
 33110  019876  6401               	cpfsgt	btemp^0,c
 33111  019878  D788               	goto	l10755
 33112                           
 33113                           ;dio.c: 119:  do { LATFbits.LATF5 = 1; } while(0);
 33114  01987A  8ABF               	bsf	191,5,c	;volatile
 33115                           
 33116                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 33117  01987C  52E5               	movf	postdec1,f,c
 33118  01987E  52E5               	movf	postdec1,f,c
 33119  019880  0012               	return		;funcret
 33120  019882                     __end_of_switch_handler:
 33121                           	opt callstack 0
 33122                           
 33123 ;; *************** function _TMR5_ISR *****************
 33124 ;; Defined at:
 33125 ;;		line 166 in file "mcc_generated_files/tmr5.c"
 33126 ;; Parameters:    Size  Location     Type
 33127 ;;		None
 33128 ;; Auto vars:     Size  Location     Type
 33129 ;;		None
 33130 ;; Return value:  Size  Location     Type
 33131 ;;                  1    wreg      void 
 33132 ;; Registers used:
 33133 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 33134 ;; Tracked objects:
 33135 ;;		On entry : 0/0
 33136 ;;		On exit  : 3F/0
 33137 ;;		Unchanged: 0/0
 33138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33141 ;;      Temps:         15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33142 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33143 ;;Total ram usage:       15 bytes
 33144 ;; Hardware stack levels used:    1
 33145 ;; Hardware stack levels required when called:    9
 33146 ;; This function calls:
 33147 ;;		_TMR5_CallBack
 33148 ;;		_TMR5_WriteTimer
 33149 ;; This function is called by:
 33150 ;;		Interrupt level 1
 33151 ;; This function uses a non-reentrant model
 33152 ;;
 33153                           
 33154                           	psect	text147
 33155  01A1E8                     __ptext147:
 33156                           	opt callstack 0
 33157  01A1E8                     _TMR5_ISR:
 33158                           	opt callstack 7
 33159                           
 33160                           ;incstack = 0
 33161  01A1E8  006F FF60  F02D    	movff	status,??_TMR5_ISR+2
 33162  01A1EE  0060  F004  F02E   	movff	btemp,??_TMR5_ISR+3
 33163  01A1F4  0060  F008  F02F   	movff	btemp+1,??_TMR5_ISR+4
 33164  01A1FA  0060  F00C  F030   	movff	btemp+2,??_TMR5_ISR+5
 33165  01A200  0060  F010  F031   	movff	btemp+3,??_TMR5_ISR+6
 33166  01A206  0060  F014  F032   	movff	btemp+4,??_TMR5_ISR+7
 33167  01A20C  0060  F018  F033   	movff	btemp+5,??_TMR5_ISR+8
 33168  01A212  0060  F01C  F034   	movff	btemp+6,??_TMR5_ISR+9
 33169  01A218  0060  F020  F035   	movff	btemp+7,??_TMR5_ISR+10
 33170  01A21E  0060  F024  F036   	movff	btemp+8,??_TMR5_ISR+11
 33171  01A224  0060  F028  F037   	movff	btemp+9,??_TMR5_ISR+12
 33172  01A22A  0060  F02C  F038   	movff	btemp+10,??_TMR5_ISR+13
 33173  01A230  0060  F030  F039   	movff	btemp+11,??_TMR5_ISR+14
 33174  01A236  EE16  F0AF         	lfsr	1,___intlo_sp
 33175                           
 33176                           ;mcc_generated_files/tmr5.c: 168:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 171:  PIR8bits.TMR5IF = 0;
 33177  01A23A  0139               	movlb	57	; () banked
 33178  01A23C  9DA8               	bcf	168,6,b	;volatile
 33179                           
 33180                           ; BSR set to: 57
 33181                           ;mcc_generated_files/tmr5.c: 172:  TMR5_WriteTimer(timer5ReloadVal);
 33182  01A23E  0060  F28B  FFE6   	movff	_timer5ReloadVal,postinc1
 33183  01A244  0060  F28F  FFE6   	movff	_timer5ReloadVal+1,postinc1
 33184  01A24A  EC86  F0DD         	call	_TMR5_WriteTimer	;wreg free
 33185                           
 33186                           ;mcc_generated_files/tmr5.c: 175:  if (++CountCallBack >= (5 +V.ticker)) {
 33187  01A24E  0101               	movlb	1	; () banked
 33188  01A250  51B1               	movf	(_V+170)& (0+255),w,b	;volatile
 33189  01A252  6E2B               	movwf	??_TMR5_ISR^0,c
 33190  01A254  6A2C               	clrf	(??_TMR5_ISR+1)^0,c
 33191  01A256  0E05               	movlw	5
 33192  01A258  262B               	addwf	??_TMR5_ISR^0,f,c
 33193  01A25A  0E00               	movlw	0
 33194  01A25C  222C               	addwfc	(??_TMR5_ISR+1)^0,f,c
 33195  01A25E  0100               	movlb	0	; () banked
 33196  01A260  4BA0               	infsnz	TMR5_ISR@CountCallBack& (0+255),f,b	;volatile
 33197  01A262  2BA1               	incf	(TMR5_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 33198  01A264  502B               	movf	??_TMR5_ISR^0,w,c
 33199  01A266  5DA0               	subwf	TMR5_ISR@CountCallBack& (0+255),w,b	;volatile
 33200  01A268  502C               	movf	(??_TMR5_ISR+1)^0,w,c
 33201  01A26A  59A1               	subwfb	(TMR5_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 33202  01A26C  A0D8               	btfss	status,0,c
 33203  01A26E  D005               	goto	i1l1029
 33204                           
 33205                           ; BSR set to: 0
 33206                           ;mcc_generated_files/tmr5.c: 177:   TMR5_CallBack();
 33207  01A270  ECF8  F0E0         	call	_TMR5_CallBack	;wreg free
 33208                           
 33209                           ;mcc_generated_files/tmr5.c: 180:   CountCallBack = 0;
 33210  01A274  0100               	movlb	0	; () banked
 33211  01A276  6BA0               	clrf	TMR5_ISR@CountCallBack& (0+255),b	;volatile
 33212  01A278  6BA1               	clrf	(TMR5_ISR@CountCallBack+1)& (0+255),b	;volatile
 33213  01A27A                     i1l1029:
 33214                           
 33215                           ; BSR set to: 0
 33216  01A27A  0060  F0E4  F00C   	movff	??_TMR5_ISR+14,btemp+11
 33217  01A280  0060  F0E0  F00B   	movff	??_TMR5_ISR+13,btemp+10
 33218  01A286  0060  F0DC  F00A   	movff	??_TMR5_ISR+12,btemp+9
 33219  01A28C  0060  F0D8  F009   	movff	??_TMR5_ISR+11,btemp+8
 33220  01A292  0060  F0D4  F008   	movff	??_TMR5_ISR+10,btemp+7
 33221  01A298  0060  F0D0  F007   	movff	??_TMR5_ISR+9,btemp+6
 33222  01A29E  0060  F0CC  F006   	movff	??_TMR5_ISR+8,btemp+5
 33223  01A2A4  0060  F0C8  F005   	movff	??_TMR5_ISR+7,btemp+4
 33224  01A2AA  0060  F0C4  F004   	movff	??_TMR5_ISR+6,btemp+3
 33225  01A2B0  0060  F0C0  F003   	movff	??_TMR5_ISR+5,btemp+2
 33226  01A2B6  0060  F0BC  F002   	movff	??_TMR5_ISR+4,btemp+1
 33227  01A2BC  0060  F0B8  F001   	movff	??_TMR5_ISR+3,btemp
 33228  01A2C2  0060  F0B7  FFD8   	movff	??_TMR5_ISR+2,status
 33229  01A2C8  0011               	retfie		f
 33230  01A2CA                     __end_of_TMR5_ISR:
 33231                           	opt callstack 0
 33232                           
 33233 ;; *************** function _TMR5_WriteTimer *****************
 33234 ;; Defined at:
 33235 ;;		line 132 in file "mcc_generated_files/tmr5.c"
 33236 ;; Parameters:    Size  Location     Type
 33237 ;;  timerVal        2  [STACK] unsigned short 
 33238 ;; Auto vars:     Size  Location     Type
 33239 ;;		None
 33240 ;; Return value:  Size  Location     Type
 33241 ;;                  1  [STACK] void 
 33242 ;; Registers used:
 33243 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 33244 ;; Tracked objects:
 33245 ;;		On entry : 3F/39
 33246 ;;		On exit  : 0/0
 33247 ;;		Unchanged: 0/0
 33248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33253 ;;Total ram usage:        0 bytes
 33254 ;; Hardware stack levels used:    1
 33255 ;; Hardware stack levels required when called:    3
 33256 ;; This function calls:
 33257 ;;		Nothing
 33258 ;; This function is called by:
 33259 ;;		_TMR5_ISR
 33260 ;; This function uses a reentrant model
 33261 ;;
 33262                           
 33263                           	psect	text148
 33264  01BB0C                     __ptext148:
 33265                           	opt callstack 0
 33266  01BB0C                     _TMR5_WriteTimer:
 33267                           	opt callstack 12
 33268                           
 33269                           ;mcc_generated_files/tmr5.c: 132: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 133: {;mcc_generated_files/tmr5.c: 134:  if (T5CONbits.NOT_SYNC == 1) {
 33270                           
 33271                           ; BSR set to: 0
 33272                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33273                           ;incstack = 0
 33274  01BB0C  A49A               	btfss	154,2,c	;volatile
 33275  01BB0E  D00F               	goto	l10975
 33276                           
 33277                           ;mcc_generated_files/tmr5.c: 136:   T5CONbits.TMR5ON = 0;
 33278  01BB10  909A               	bcf	154,0,c	;volatile
 33279                           
 33280                           ;mcc_generated_files/tmr5.c: 139:   TMR5H = (timerVal >> 8);
 33281                           ;stkvar	_timerVal @ sp[(0)+-2]
 33282  01BB12  0EFF               	movlw	255
 33283  01BB14  24E1               	addwf	fsr1l,w,c
 33284  01BB16  6ED9               	movwf	fsr2l,c
 33285  01BB18  0EFF               	movlw	255
 33286  01BB1A  20E2               	addwfc	fsr1h,w,c
 33287  01BB1C  6EDA               	movwf	fsr2h,c
 33288  01BB1E  50DF               	movf	indf2,w,c
 33289  01BB20  6E99               	movwf	153,c	;volatile
 33290                           
 33291                           ;mcc_generated_files/tmr5.c: 140:   TMR5L = timerVal;
 33292                           ;stkvar	_timerVal @ sp[(0)+-2]
 33293  01BB22  0EFE               	movlw	-2
 33294  01BB24  006F FF8F FF98     	movff	plusw1,16280	;volatile
 33295                           
 33296                           ;mcc_generated_files/tmr5.c: 143:   T5CONbits.TMR5ON = 1;
 33297  01BB2A  809A               	bsf	154,0,c	;volatile
 33298                           
 33299                           ;mcc_generated_files/tmr5.c: 144:  } else {
 33300  01BB2C  D00C               	goto	l1012
 33301  01BB2E                     l10975:
 33302                           
 33303                           ;mcc_generated_files/tmr5.c: 146:   TMR5H = (timerVal >> 8);
 33304                           ;stkvar	_timerVal @ sp[(0)+-2]
 33305  01BB2E  0EFF               	movlw	255
 33306  01BB30  24E1               	addwf	fsr1l,w,c
 33307  01BB32  6ED9               	movwf	fsr2l,c
 33308  01BB34  0EFF               	movlw	255
 33309  01BB36  20E2               	addwfc	fsr1h,w,c
 33310  01BB38  6EDA               	movwf	fsr2h,c
 33311  01BB3A  50DF               	movf	indf2,w,c
 33312  01BB3C  6E99               	movwf	153,c	;volatile
 33313                           
 33314                           ;mcc_generated_files/tmr5.c: 147:   TMR5L = timerVal;
 33315                           ;stkvar	_timerVal @ sp[(0)+-2]
 33316  01BB3E  0EFE               	movlw	-2
 33317  01BB40  006F FF8F FF98     	movff	plusw1,16280	;volatile
 33318  01BB46                     l1012:
 33319                           
 33320                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 33321  01BB46  52E5               	movf	postdec1,f,c
 33322  01BB48  52E5               	movf	postdec1,f,c
 33323  01BB4A  0012               	return		;funcret
 33324  01BB4C                     __end_of_TMR5_WriteTimer:
 33325                           	opt callstack 0
 33326                           
 33327 ;; *************** function _TMR5_CallBack *****************
 33328 ;; Defined at:
 33329 ;;		line 184 in file "mcc_generated_files/tmr5.c"
 33330 ;; Parameters:    Size  Location     Type
 33331 ;;		None
 33332 ;; Auto vars:     Size  Location     Type
 33333 ;;		None
 33334 ;; Return value:  Size  Location     Type
 33335 ;;                  1  [STACK] void 
 33336 ;; Registers used:
 33337 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 33338 ;; Tracked objects:
 33339 ;;		On entry : 3F/0
 33340 ;;		On exit  : 0/0
 33341 ;;		Unchanged: 0/0
 33342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33346 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33347 ;;Total ram usage:        0 bytes
 33348 ;; Hardware stack levels used:    1
 33349 ;; Hardware stack levels required when called:    8
 33350 ;; This function calls:
 33351 ;;		Absolute function
 33352 ;;		_TMR5_DefaultInterruptHandler
 33353 ;; This function is called by:
 33354 ;;		_TMR5_ISR
 33355 ;; This function uses a reentrant model
 33356 ;;
 33357                           
 33358                           	psect	text149
 33359  01C1F0                     __ptext149:
 33360                           	opt callstack 0
 33361  01C1F0                     _TMR5_CallBack:
 33362                           	opt callstack 7
 33363                           
 33364                           ;mcc_generated_files/tmr5.c: 187:  if (TMR5_InterruptHandler) {
 33365                           
 33366                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33367                           ;incstack = 0
 33368  01C1F0  0100               	movlb	0	; () banked
 33369  01C1F2  517F               	movf	_TMR5_InterruptHandler& (0+255),w,b
 33370  01C1F4  1180               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 33371  01C1F6  1181               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 33372  01C1F8  B4D8               	btfsc	status,2,c
 33373  01C1FA  0012               	return	
 33374                           
 33375                           ; BSR set to: 0
 33376                           ;mcc_generated_files/tmr5.c: 188:   TMR5_InterruptHandler();
 33377  01C1FC  D801               	call	u1018_28
 33378  01C1FE  0012               	return	
 33379  01C200                     u1018_28:
 33380  01C200  0005               	push	
 33381  01C202  6EFA               	movwf	pclath,c
 33382  01C204  517F               	movf	_TMR5_InterruptHandler& (0+255),w,b
 33383  01C206  6EFD               	movwf	tosl,c
 33384  01C208  5180               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 33385  01C20A  6EFE               	movwf	tosh,c
 33386  01C20C  5181               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 33387  01C20E  6EFF               	movwf	tosu,c
 33388  01C210  50FA               	movf	pclath,w,c
 33389  01C212  0012               	return		;indir
 33390  01C214                     __end_of_TMR5_CallBack:
 33391                           	opt callstack 0
 33392                           
 33393 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 33394 ;; Defined at:
 33395 ;;		line 197 in file "mcc_generated_files/tmr5.c"
 33396 ;; Parameters:    Size  Location     Type
 33397 ;;		None
 33398 ;; Auto vars:     Size  Location     Type
 33399 ;;		None
 33400 ;; Return value:  Size  Location     Type
 33401 ;;                  1  [STACK] void 
 33402 ;; Registers used:
 33403 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 33404 ;; Tracked objects:
 33405 ;;		On entry : 3F/0
 33406 ;;		On exit  : 0/0
 33407 ;;		Unchanged: 0/0
 33408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33412 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33413 ;;Total ram usage:        0 bytes
 33414 ;; Hardware stack levels used:    1
 33415 ;; Hardware stack levels required when called:    7
 33416 ;; This function calls:
 33417 ;;		_check_day_time
 33418 ;; This function is called by:
 33419 ;;		_TMR5_Initialize
 33420 ;;		_TMR5_CallBack
 33421 ;; This function uses a reentrant model
 33422 ;;
 33423                           
 33424                           	psect	text150
 33425  01BC3C                     __ptext150:
 33426                           	opt callstack 0
 33427  01BC3C                     _TMR5_DefaultInterruptHandler:
 33428                           	opt callstack 7
 33429                           
 33430                           ;mcc_generated_files/tmr5.c: 201:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 33431                           
 33432                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33433                           ;incstack = 0
 33434  01BC3C  A0BE               	btfss	190,0,c	;volatile
 33435  01BC3E  D002               	goto	u956_20
 33436  01BC40  0E01               	movlw	1
 33437  01BC42  D001               	goto	u956_26
 33438  01BC44                     u956_20:
 33439  01BC44  0E00               	movlw	0
 33440  01BC46                     u956_26:
 33441  01BC46  0AFF               	xorlw	255
 33442  01BC48  6E0C               	movwf	(btemp+11)^0,c
 33443  01BC4A  50BE               	movf	190,w,c	;volatile
 33444  01BC4C  180C               	xorwf	(btemp+11)^0,w,c
 33445  01BC4E  0BFE               	andlw	-2
 33446  01BC50  180C               	xorwf	(btemp+11)^0,w,c
 33447  01BC52  6EBE               	movwf	190,c	;volatile
 33448                           
 33449                           ;mcc_generated_files/tmr5.c: 202:  V.timerint_count++;
 33450  01BC54  0E01               	movlw	1
 33451  01BC56  0101               	movlb	1	; () banked
 33452  01BC58  27C2               	addwf	(_V+187)& (0+255),f,b	;volatile
 33453  01BC5A  0E00               	movlw	0
 33454  01BC5C  23C3               	addwfc	(_V+188)& (0+255),f,b	;volatile
 33455  01BC5E  23C4               	addwfc	(_V+189)& (0+255),f,b	;volatile
 33456  01BC60  23C5               	addwfc	(_V+190)& (0+255),f,b	;volatile
 33457                           
 33458                           ; BSR set to: 1
 33459                           ;mcc_generated_files/tmr5.c: 203:  V.ticks++;
 33460  01BC62  0E01               	movlw	1
 33461  01BC64  2788               	addwf	(_V+129)& (0+255),f,b	;volatile
 33462  01BC66  0E00               	movlw	0
 33463  01BC68  2389               	addwfc	(_V+130)& (0+255),f,b	;volatile
 33464  01BC6A  238A               	addwfc	(_V+131)& (0+255),f,b	;volatile
 33465  01BC6C  238B               	addwfc	(_V+132)& (0+255),f,b	;volatile
 33466                           
 33467                           ; BSR set to: 1
 33468                           ;mcc_generated_files/tmr5.c: 204:  check_day_time();
 33469  01BC6E  EC25  F0C5         	call	_check_day_time	;wreg free
 33470                           
 33471                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 33472  01BC72  0012               	return		;funcret
 33473  01BC74                     __end_of_TMR5_DefaultInterruptHandler:
 33474                           	opt callstack 0
 33475                           
 33476 ;; *************** function _check_day_time *****************
 33477 ;; Defined at:
 33478 ;;		line 165 in file "mbmc.c"
 33479 ;; Parameters:    Size  Location     Type
 33480 ;;		None
 33481 ;; Auto vars:     Size  Location     Type
 33482 ;;  light           4  [STACK] float 
 33483 ;; Return value:  Size  Location     Type
 33484 ;;                  1  [STACK] _Bool 
 33485 ;; Registers used:
 33486 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 33487 ;; Tracked objects:
 33488 ;;		On entry : 3F/1
 33489 ;;		On exit  : 0/0
 33490 ;;		Unchanged: 0/0
 33491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33495 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33496 ;;Total ram usage:        0 bytes
 33497 ;; Hardware stack levels used:    1
 33498 ;; Hardware stack levels required when called:    6
 33499 ;; This function calls:
 33500 ;;		___flge
 33501 ;;		_conv_raw_result
 33502 ;;		_get_ac_charger_relay
 33503 ;;		_set_ac_charger_relay
 33504 ;; This function is called by:
 33505 ;;		_TMR5_DefaultInterruptHandler
 33506 ;; This function uses a reentrant model
 33507 ;;
 33508                           
 33509                           	psect	text151
 33510  018A4A                     __ptext151:
 33511                           	opt callstack 0
 33512  018A4A                     _check_day_time:
 33513                           	opt callstack 0
 33514                           
 33515                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33516  018A4A  52E6               	movf	postinc1,f,c
 33517  018A4C  52E6               	movf	postinc1,f,c
 33518  018A4E  52E6               	movf	postinc1,f,c
 33519  018A50  52E6               	movf	postinc1,f,c
 33520                           
 33521                           ;mbmc.c: 167:  static uint8_t day_delay = 0;;mbmc.c: 168:  float light;;mbmc.c: 170:  li
      +                          ght = conv_raw_result(V_LIGHT_SENSOR, CONV);
 33522                           
 33523                           ;incstack = 0
 33524  018A52  0E00               	movlw	0
 33525  018A54  6EE6               	movwf	postinc1,c
 33526  018A56  0E0D               	movlw	13
 33527  018A58  6EE6               	movwf	postinc1,c
 33528  018A5A  EC87  F0A9         	call	_conv_raw_result	;wreg free
 33529                           
 33530                           ;stkvar	_light @ sp[(-4)+0]
 33531  018A5E  0EFC               	movlw	-4
 33532  018A60  0060  F007  FFE3   	movff	btemp,plusw1
 33533  018A66  0EFD               	movlw	-3
 33534  018A68  0060  F00B  FFE3   	movff	btemp+1,plusw1
 33535  018A6E  0EFE               	movlw	-2
 33536  018A70  0060  F00F  FFE3   	movff	btemp+2,plusw1
 33537  018A76  0EFF               	movlw	-1
 33538  018A78  0060  F013  FFE3   	movff	btemp+3,plusw1
 33539                           
 33540                           ;mbmc.c: 172:  if (!day_delay++ && V.system_stable) {
 33541  018A7E  2A41               	incf	check_day_time@day_delay^0,f,c
 33542  018A80  0441               	decf	check_day_time@day_delay^0,w,c
 33543  018A82  A4D8               	btfss	status,2,c
 33544  018A84  D0A9               	goto	l1971
 33545  018A86  0101               	movlb	1	; () banked
 33546  018A88  51B5               	movf	(_V+174)& (0+255),w,b	;volatile
 33547  018A8A  B4D8               	btfsc	status,2,c
 33548  018A8C  D0A5               	goto	l1971
 33549                           
 33550                           ; BSR set to: 1
 33551                           ;mbmc.c: 173:   if (C.soc > 15) {
 33552  018A8E  EE21  F3B5         	lfsr	2,_C+182	;volatile
 33553  018A92  0E01               	movlw	1
 33554  018A94  50DB               	movf	plusw2,w,c
 33555  018A96  E104               	bnz	u935_20
 33556  018A98  0E10               	movlw	16
 33557  018A9A  5CDE               	subwf	postinc2,w,c
 33558  018A9C  A0D8               	btfss	status,0,c
 33559  018A9E  D073               	goto	l10019
 33560  018AA0                     u935_20:
 33561                           
 33562                           ; BSR set to: 1
 33563                           ;mbmc.c: 174:    if (!C.day) {
 33564  018AA0  EE22  F021         	lfsr	2,_C+290	;volatile
 33565  018AA4  50DF               	movf	indf2,w,c
 33566  018AA6  A4D8               	btfss	status,2,c
 33567  018AA8  D035               	goto	l10007
 33568                           
 33569                           ; BSR set to: 1
 33570                           ;mbmc.c: 175:     if (light > 22.0) {
 33571                           ;stkvar	_light @ sp[(-4)+0]
 33572  018AAA  0EFC               	movlw	-4
 33573  018AAC  006F FF8F FFE6     	movff	plusw1,postinc1
 33574  018AB2  006F FF8F FFE6     	movff	plusw1,postinc1
 33575  018AB8  006F FF8F FFE6     	movff	plusw1,postinc1
 33576  018ABE  006F FF8F FFE6     	movff	plusw1,postinc1
 33577  018AC4  0E00               	movlw	0
 33578  018AC6  6EE6               	movwf	postinc1,c
 33579  018AC8  0E00               	movlw	0
 33580  018ACA  6EE6               	movwf	postinc1,c
 33581  018ACC  0EB0               	movlw	176
 33582  018ACE  6EE6               	movwf	postinc1,c
 33583  018AD0  0E41               	movlw	65
 33584  018AD2  6EE6               	movwf	postinc1,c
 33585  018AD4  ECFC  F0C8         	call	___flge	;wreg free
 33586  018AD8  B001               	btfsc	btemp& (0+255),0,c
 33587  018ADA  D07E               	goto	l1971
 33588                           
 33589                           ;mbmc.c: 176:      C.day = 1;
 33590  018ADC  0E01               	movlw	1
 33591  018ADE  006F FFA0  F821    	movff	wreg,_C+290	;volatile
 33592                           
 33593                           ;mbmc.c: 177:      C.day_start = V.ticks;
 33594  018AE4  EE20  F188         	lfsr	2,_V+129	;volatile
 33595  018AE8  006F FF78  F822    	movff	postinc2,_C+291	;volatile
 33596  018AEE  006F FF78  F823    	movff	postinc2,_C+292	;volatile
 33597  018AF4  006F FF78  F824    	movff	postinc2,_C+293	;volatile
 33598  018AFA  006F FF74  F825    	movff	postdec2,_C+294	;volatile
 33599                           
 33600                           ;mbmc.c: 178:      if (get_ac_charger_relay()) {
 33601  018B00  EC79  F0E2         	call	_get_ac_charger_relay	;wreg free
 33602  018B04  5001               	movf	btemp^0,w,c
 33603  018B06  B4D8               	btfsc	status,2,c
 33604  018B08  D06B               	goto	l1967
 33605                           
 33606                           ;mbmc.c: 179:       set_ac_charger_relay(0);
 33607  018B0A  0E00               	movlw	0
 33608  018B0C  6EE6               	movwf	postinc1,c
 33609  018B0E  EC63  F0E2         	call	_set_ac_charger_relay	;wreg free
 33610  018B12  D066               	goto	l1967
 33611  018B14                     l10007:
 33612                           
 33613                           ; BSR set to: 1
 33614                           ;mbmc.c: 184:     if (light < 12.0) {
 33615  018B14  0E00               	movlw	0
 33616  018B16  6EE6               	movwf	postinc1,c
 33617  018B18  0E00               	movlw	0
 33618  018B1A  6EE6               	movwf	postinc1,c
 33619  018B1C  0E40               	movlw	64
 33620  018B1E  6EE6               	movwf	postinc1,c
 33621  018B20  0E41               	movlw	65
 33622  018B22  6EE6               	movwf	postinc1,c
 33623                           
 33624                           ;stkvar	_light @ sp[(-8)+0]
 33625  018B24  0EF8               	movlw	-8
 33626  018B26  006F FF8F FFE6     	movff	plusw1,postinc1
 33627  018B2C  006F FF8F FFE6     	movff	plusw1,postinc1
 33628  018B32  006F FF8F FFE6     	movff	plusw1,postinc1
 33629  018B38  006F FF8F FFE6     	movff	plusw1,postinc1
 33630  018B3E  ECFC  F0C8         	call	___flge	;wreg free
 33631  018B42  B001               	btfsc	btemp& (0+255),0,c
 33632  018B44  D049               	goto	l1971
 33633                           
 33634                           ;mbmc.c: 185:      C.day = 0;
 33635  018B46  0E00               	movlw	0
 33636  018B48  006F FFA0  F821    	movff	wreg,_C+290	;volatile
 33637                           
 33638                           ;mbmc.c: 186:      C.day_end = V.ticks;
 33639  018B4E  EE20  F188         	lfsr	2,_V+129	;volatile
 33640  018B52  006F FF78  F826    	movff	postinc2,_C+295	;volatile
 33641  018B58  006F FF78  F827    	movff	postinc2,_C+296	;volatile
 33642  018B5E  006F FF78  F828    	movff	postinc2,_C+297	;volatile
 33643  018B64  006F FF74  F829    	movff	postdec2,_C+298	;volatile
 33644                           
 33645                           ;mbmc.c: 190:      if ((C.soc < 40)) {
 33646  018B6A  EE21  F3B5         	lfsr	2,_C+182	;volatile
 33647  018B6E  0E01               	movlw	1
 33648  018B70  50DB               	movf	plusw2,w,c
 33649  018B72  E136               	bnz	l1967
 33650  018B74  0E28               	movlw	40
 33651  018B76  5CDE               	subwf	postinc2,w,c
 33652  018B78  B0D8               	btfsc	status,0,c
 33653  018B7A  D032               	goto	l1967
 33654                           
 33655                           ;mbmc.c: 191:       set_ac_charger_relay(1);
 33656  018B7C  0E01               	movlw	1
 33657  018B7E  6EE6               	movwf	postinc1,c
 33658  018B80  EC63  F0E2         	call	_set_ac_charger_relay	;wreg free
 33659  018B84  D02D               	goto	l1967
 33660  018B86                     l10019:
 33661                           
 33662                           ; BSR set to: 1
 33663                           ;mbmc.c: 197:    if (C.p_pv < C.p_inverter) {
 33664  018B86  EE21  F377         	lfsr	2,_C+120	;volatile
 33665  018B8A  006F FF7B FFE6     	movff	postinc2,postinc1
 33666  018B90  006F FF7B FFE6     	movff	postinc2,postinc1
 33667  018B96  006F FF7B FFE6     	movff	postinc2,postinc1
 33668  018B9C  006F FF7B FFE6     	movff	postinc2,postinc1
 33669  018BA2  EE21  F37B         	lfsr	2,_C+124	;volatile
 33670  018BA6  006F FF7B FFE6     	movff	postinc2,postinc1
 33671  018BAC  006F FF7B FFE6     	movff	postinc2,postinc1
 33672  018BB2  006F FF7B FFE6     	movff	postinc2,postinc1
 33673  018BB8  006F FF7B FFE6     	movff	postinc2,postinc1
 33674  018BBE  ECFC  F0C8         	call	___flge	;wreg free
 33675  018BC2  B001               	btfsc	btemp& (0+255),0,c
 33676  018BC4  D009               	goto	l1971
 33677                           
 33678                           ;mbmc.c: 198:     if (!get_ac_charger_relay()) {
 33679  018BC6  EC79  F0E2         	call	_get_ac_charger_relay	;wreg free
 33680  018BCA  5001               	movf	btemp^0,w,c
 33681  018BCC  A4D8               	btfss	status,2,c
 33682  018BCE  D004               	goto	l1971
 33683                           
 33684                           ;mbmc.c: 199:      set_ac_charger_relay(1);
 33685  018BD0  0E01               	movlw	1
 33686  018BD2  6EE6               	movwf	postinc1,c
 33687  018BD4  EC63  F0E2         	call	_set_ac_charger_relay	;wreg free
 33688  018BD8                     l1971:
 33689                           
 33690                           ;mbmc.c: 204:  if (day_delay >= 240)
 33691  018BD8  0EEF               	movlw	239
 33692  018BDA  6441               	cpfsgt	check_day_time@day_delay^0,c
 33693  018BDC  D001               	goto	l1967
 33694                           
 33695                           ;mbmc.c: 205:   day_delay = 0;
 33696  018BDE  6A41               	clrf	check_day_time@day_delay^0,c
 33697  018BE0                     l1967:
 33698                           
 33699                           ; _check_day_time: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 33700  018BE0  52E5               	movf	postdec1,f,c
 33701  018BE2  52E5               	movf	postdec1,f,c
 33702  018BE4  52E5               	movf	postdec1,f,c
 33703  018BE6  52E5               	movf	postdec1,f,c
 33704  018BE8  0012               	return		;funcret
 33705  018BEA                     __end_of_check_day_time:
 33706                           	opt callstack 0
 33707                           
 33708 ;; *************** function _set_ac_charger_relay *****************
 33709 ;; Defined at:
 33710 ;;		line 135 in file "mbmc.c"
 33711 ;; Parameters:    Size  Location     Type
 33712 ;;  mode            1  [STACK] const _Bool 
 33713 ;; Auto vars:     Size  Location     Type
 33714 ;;		None
 33715 ;; Return value:  Size  Location     Type
 33716 ;;                  1  [STACK] void 
 33717 ;; Registers used:
 33718 ;;		wreg, fsr1l, fsr1h
 33719 ;; Tracked objects:
 33720 ;;		On entry : 0/1
 33721 ;;		On exit  : 0/0
 33722 ;;		Unchanged: 0/0
 33723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33728 ;;Total ram usage:        0 bytes
 33729 ;; Hardware stack levels used:    1
 33730 ;; Hardware stack levels required when called:    3
 33731 ;; This function calls:
 33732 ;;		Nothing
 33733 ;; This function is called by:
 33734 ;;		_check_day_time
 33735 ;; This function uses a reentrant model
 33736 ;;
 33737                           
 33738                           	psect	text152
 33739  01C4C6                     __ptext152:
 33740                           	opt callstack 0
 33741  01C4C6                     _set_ac_charger_relay:
 33742                           	opt callstack 9
 33743                           
 33744                           ;mbmc.c: 135: void set_ac_charger_relay(const _Bool mode);mbmc.c: 136: {;mbmc.c: 137:  L
      +                          ATDbits.LATD6 = mode;
 33745                           ;stkvar	_mode @ sp[(0)+-1]
 33746                           
 33747                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33748                           ;incstack = 0
 33749  01C4C6  0EFF               	movlw	-1
 33750  01C4C8  B0E3               	btfsc	plusw1,0,c
 33751  01C4CA  D002               	bra	u930_25
 33752  01C4CC  9CBD               	bcf	189,6,c	;volatile
 33753  01C4CE  D001               	bra	u930_26
 33754  01C4D0                     u930_25:
 33755  01C4D0  8CBD               	bsf	189,6,c	;volatile
 33756  01C4D2                     u930_26:
 33757                           
 33758                           ; _set_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
 33759  01C4D2  52E5               	movf	postdec1,f,c
 33760  01C4D4  0012               	return		;funcret
 33761  01C4D6                     __end_of_set_ac_charger_relay:
 33762                           	opt callstack 0
 33763                           
 33764 ;; *************** function _get_ac_charger_relay *****************
 33765 ;; Defined at:
 33766 ;;		line 140 in file "mbmc.c"
 33767 ;; Parameters:    Size  Location     Type
 33768 ;;		None
 33769 ;; Auto vars:     Size  Location     Type
 33770 ;;		None
 33771 ;; Return value:  Size  Location     Type
 33772 ;;                  1  [STACK] _Bool 
 33773 ;; Registers used:
 33774 ;;		btemp
 33775 ;; Tracked objects:
 33776 ;;		On entry : 0/1
 33777 ;;		On exit  : 0/0
 33778 ;;		Unchanged: 0/0
 33779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33783 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33784 ;;Total ram usage:        0 bytes
 33785 ;; Hardware stack levels used:    1
 33786 ;; Hardware stack levels required when called:    3
 33787 ;; This function calls:
 33788 ;;		Nothing
 33789 ;; This function is called by:
 33790 ;;		_check_day_time
 33791 ;;		_calc_bsoc
 33792 ;; This function uses a reentrant model
 33793 ;;
 33794                           
 33795                           	psect	text153
 33796  01C4F2                     __ptext153:
 33797                           	opt callstack 0
 33798  01C4F2                     _get_ac_charger_relay:
 33799                           	opt callstack 10
 33800                           
 33801                           ;mbmc.c: 142:  return LATDbits.LATD6;
 33802                           
 33803                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33804                           ;incstack = 0
 33805  01C4F2  ACBD               	btfss	189,6,c	;volatile
 33806  01C4F4  D003               	goto	u949_20
 33807  01C4F6  6A01               	clrf	btemp^0,c
 33808  01C4F8  2A01               	incf	btemp^0,f,c
 33809  01C4FA  0012               	return	
 33810  01C4FC                     u949_20:
 33811  01C4FC  6A01               	clrf	btemp^0,c
 33812                           
 33813                           ; _get_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 33814  01C4FE  0012               	return		;funcret
 33815  01C500                     __end_of_get_ac_charger_relay:
 33816                           	opt callstack 0
 33817                           
 33818 ;; *************** function _TMR3_ISR *****************
 33819 ;; Defined at:
 33820 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 33821 ;; Parameters:    Size  Location     Type
 33822 ;;		None
 33823 ;; Auto vars:     Size  Location     Type
 33824 ;;		None
 33825 ;; Return value:  Size  Location     Type
 33826 ;;                  1    wreg      void 
 33827 ;; Registers used:
 33828 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 33829 ;; Tracked objects:
 33830 ;;		On entry : 0/0
 33831 ;;		On exit  : 3F/0
 33832 ;;		Unchanged: 0/0
 33833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33836 ;;      Temps:          0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33837 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33838 ;;Total ram usage:       25 bytes
 33839 ;; Hardware stack levels used:    1
 33840 ;; Hardware stack levels required when called:   14
 33841 ;; This function calls:
 33842 ;;		_TMR3_CallBack
 33843 ;;		_TMR3_WriteTimer
 33844 ;; This function is called by:
 33845 ;;		Interrupt level 1
 33846 ;; This function uses a non-reentrant model
 33847 ;;
 33848                           
 33849                           	psect	text154
 33850  01935C                     __ptext154:
 33851                           	opt callstack 0
 33852  01935C                     _TMR3_ISR:
 33853                           	opt callstack 2
 33854                           
 33855                           ;incstack = 0
 33856  01935C  006F FF60  F0E5    	movff	status,??_TMR3_ISR
 33857  019362  006F FFD8  F0E6    	movff	tblptrl,??_TMR3_ISR+1
 33858  019368  006F FFDC  F0E7    	movff	tblptrh,??_TMR3_ISR+2
 33859  01936E  006F FFE0  F0E8    	movff	tblptru,??_TMR3_ISR+3
 33860  019374  006F FFD4  F0E9    	movff	tablat,??_TMR3_ISR+4
 33861  01937A  0060  F004  F0EA   	movff	btemp,??_TMR3_ISR+5
 33862  019380  0060  F008  F0EB   	movff	btemp+1,??_TMR3_ISR+6
 33863  019386  0060  F00C  F0EC   	movff	btemp+2,??_TMR3_ISR+7
 33864  01938C  0060  F010  F0ED   	movff	btemp+3,??_TMR3_ISR+8
 33865  019392  0060  F014  F0EE   	movff	btemp+4,??_TMR3_ISR+9
 33866  019398  0060  F018  F0EF   	movff	btemp+5,??_TMR3_ISR+10
 33867  01939E  0060  F01C  F0F0   	movff	btemp+6,??_TMR3_ISR+11
 33868  0193A4  0060  F020  F0F1   	movff	btemp+7,??_TMR3_ISR+12
 33869  0193AA  0060  F024  F0F2   	movff	btemp+8,??_TMR3_ISR+13
 33870  0193B0  0060  F028  F0F3   	movff	btemp+9,??_TMR3_ISR+14
 33871  0193B6  0060  F02C  F0F4   	movff	btemp+10,??_TMR3_ISR+15
 33872  0193BC  0060  F030  F0F5   	movff	btemp+11,??_TMR3_ISR+16
 33873  0193C2  0060  F044  F0F6   	movff	btemp+16,??_TMR3_ISR+17
 33874  0193C8  0060  F048  F0F7   	movff	btemp+17,??_TMR3_ISR+18
 33875  0193CE  0060  F04C  F0F8   	movff	btemp+18,??_TMR3_ISR+19
 33876  0193D4  0060  F050  F0F9   	movff	btemp+19,??_TMR3_ISR+20
 33877  0193DA  0060  F054  F0FA   	movff	btemp+20,??_TMR3_ISR+21
 33878  0193E0  0060  F058  F0FB   	movff	btemp+21,??_TMR3_ISR+22
 33879  0193E6  0060  F05C  F0FC   	movff	btemp+22,??_TMR3_ISR+23
 33880  0193EC  0060  F060  F0FD   	movff	btemp+23,??_TMR3_ISR+24
 33881  0193F2  EE16  F0AF         	lfsr	1,___intlo_sp
 33882                           
 33883                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 33884  0193F6  0139               	movlb	57	; () banked
 33885  0193F8  9DA6               	bcf	166,6,b	;volatile
 33886                           
 33887                           ; BSR set to: 57
 33888                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 33889  0193FA  0060  F27B  FFE6   	movff	_timer3ReloadVal,postinc1
 33890  019400  0060  F27F  FFE6   	movff	_timer3ReloadVal+1,postinc1
 33891  019406  ECA6  F0DD         	call	_TMR3_WriteTimer	;wreg free
 33892                           
 33893                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 33894  01940A  0100               	movlb	0	; () banked
 33895  01940C  4B9C               	infsnz	TMR3_ISR@CountCallBack& (0+255),f,b	;volatile
 33896  01940E  2B9D               	incf	(TMR3_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 33897  019410  519D               	movf	(TMR3_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 33898  019412  E104               	bnz	i1u1280_20
 33899  019414  0E28               	movlw	40
 33900  019416  5D9C               	subwf	TMR3_ISR@CountCallBack& (0+255),w,b	;volatile
 33901  019418  A0D8               	btfss	status,0,c
 33902  01941A  D005               	goto	i1l1217
 33903  01941C                     i1u1280_20:
 33904                           
 33905                           ; BSR set to: 0
 33906                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 33907  01941C  EC0A  F0E1         	call	_TMR3_CallBack	;wreg free
 33908                           
 33909                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 33910  019420  0100               	movlb	0	; () banked
 33911  019422  6B9C               	clrf	TMR3_ISR@CountCallBack& (0+255),b	;volatile
 33912  019424  6B9D               	clrf	(TMR3_ISR@CountCallBack+1)& (0+255),b	;volatile
 33913  019426                     i1l1217:
 33914                           
 33915                           ; BSR set to: 0
 33916  019426  0060  F3F4  F018   	movff	??_TMR3_ISR+24,btemp+23
 33917  01942C  0060  F3F0  F017   	movff	??_TMR3_ISR+23,btemp+22
 33918  019432  0060  F3EC  F016   	movff	??_TMR3_ISR+22,btemp+21
 33919  019438  0060  F3E8  F015   	movff	??_TMR3_ISR+21,btemp+20
 33920  01943E  0060  F3E4  F014   	movff	??_TMR3_ISR+20,btemp+19
 33921  019444  0060  F3E0  F013   	movff	??_TMR3_ISR+19,btemp+18
 33922  01944A  0060  F3DC  F012   	movff	??_TMR3_ISR+18,btemp+17
 33923  019450  0060  F3D8  F011   	movff	??_TMR3_ISR+17,btemp+16
 33924  019456  0060  F3D4  F00C   	movff	??_TMR3_ISR+16,btemp+11
 33925  01945C  0060  F3D0  F00B   	movff	??_TMR3_ISR+15,btemp+10
 33926  019462  0060  F3CC  F00A   	movff	??_TMR3_ISR+14,btemp+9
 33927  019468  0060  F3C8  F009   	movff	??_TMR3_ISR+13,btemp+8
 33928  01946E  0060  F3C4  F008   	movff	??_TMR3_ISR+12,btemp+7
 33929  019474  0060  F3C0  F007   	movff	??_TMR3_ISR+11,btemp+6
 33930  01947A  0060  F3BC  F006   	movff	??_TMR3_ISR+10,btemp+5
 33931  019480  0060  F3B8  F005   	movff	??_TMR3_ISR+9,btemp+4
 33932  019486  0060  F3B4  F004   	movff	??_TMR3_ISR+8,btemp+3
 33933  01948C  0060  F3B0  F003   	movff	??_TMR3_ISR+7,btemp+2
 33934  019492  0060  F3AC  F002   	movff	??_TMR3_ISR+6,btemp+1
 33935  019498  0060  F3A8  F001   	movff	??_TMR3_ISR+5,btemp
 33936  01949E  0060  F3A7  FFF5   	movff	??_TMR3_ISR+4,tablat
 33937  0194A4  0060  F3A3  FFF8   	movff	??_TMR3_ISR+3,tblptru
 33938  0194AA  0060  F39F  FFF7   	movff	??_TMR3_ISR+2,tblptrh
 33939  0194B0  0060  F39B  FFF6   	movff	??_TMR3_ISR+1,tblptrl
 33940  0194B6  0060  F397  FFD8   	movff	??_TMR3_ISR,status
 33941  0194BC  0011               	retfie		f
 33942  0194BE                     __end_of_TMR3_ISR:
 33943                           	opt callstack 0
 33944                           
 33945 ;; *************** function _TMR3_WriteTimer *****************
 33946 ;; Defined at:
 33947 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 33948 ;; Parameters:    Size  Location     Type
 33949 ;;  timerVal        2  [STACK] unsigned short 
 33950 ;; Auto vars:     Size  Location     Type
 33951 ;;		None
 33952 ;; Return value:  Size  Location     Type
 33953 ;;                  1  [STACK] void 
 33954 ;; Registers used:
 33955 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 33956 ;; Tracked objects:
 33957 ;;		On entry : 3F/39
 33958 ;;		On exit  : 0/0
 33959 ;;		Unchanged: 0/0
 33960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33965 ;;Total ram usage:        0 bytes
 33966 ;; Hardware stack levels used:    1
 33967 ;; Hardware stack levels required when called:    3
 33968 ;; This function calls:
 33969 ;;		Nothing
 33970 ;; This function is called by:
 33971 ;;		_TMR3_ISR
 33972 ;; This function uses a reentrant model
 33973 ;;
 33974                           
 33975                           	psect	text155
 33976  01BB4C                     __ptext155:
 33977                           	opt callstack 0
 33978  01BB4C                     _TMR3_WriteTimer:
 33979                           	opt callstack 12
 33980                           
 33981                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 33982                           
 33983                           ; BSR set to: 0
 33984                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33985                           ;incstack = 0
 33986  01BB4C  A4A6               	btfss	166,2,c	;volatile
 33987  01BB4E  D00F               	goto	l10993
 33988                           
 33989                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 33990  01BB50  90A6               	bcf	166,0,c	;volatile
 33991                           
 33992                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 33993                           ;stkvar	_timerVal @ sp[(0)+-2]
 33994  01BB52  0EFF               	movlw	255
 33995  01BB54  24E1               	addwf	fsr1l,w,c
 33996  01BB56  6ED9               	movwf	fsr2l,c
 33997  01BB58  0EFF               	movlw	255
 33998  01BB5A  20E2               	addwfc	fsr1h,w,c
 33999  01BB5C  6EDA               	movwf	fsr2h,c
 34000  01BB5E  50DF               	movf	indf2,w,c
 34001  01BB60  6EA5               	movwf	165,c	;volatile
 34002                           
 34003                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 34004                           ;stkvar	_timerVal @ sp[(0)+-2]
 34005  01BB62  0EFE               	movlw	-2
 34006  01BB64  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 34007                           
 34008                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 34009  01BB6A  80A6               	bsf	166,0,c	;volatile
 34010                           
 34011                           ;mcc_generated_files/tmr3.c: 141:     }
 34012  01BB6C  D00C               	goto	l1200
 34013  01BB6E                     l10993:
 34014                           
 34015                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 34016                           ;stkvar	_timerVal @ sp[(0)+-2]
 34017  01BB6E  0EFF               	movlw	255
 34018  01BB70  24E1               	addwf	fsr1l,w,c
 34019  01BB72  6ED9               	movwf	fsr2l,c
 34020  01BB74  0EFF               	movlw	255
 34021  01BB76  20E2               	addwfc	fsr1h,w,c
 34022  01BB78  6EDA               	movwf	fsr2h,c
 34023  01BB7A  50DF               	movf	indf2,w,c
 34024  01BB7C  6EA5               	movwf	165,c	;volatile
 34025                           
 34026                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 34027                           ;stkvar	_timerVal @ sp[(0)+-2]
 34028  01BB7E  0EFE               	movlw	-2
 34029  01BB80  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 34030  01BB86                     l1200:
 34031                           
 34032                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 34033  01BB86  52E5               	movf	postdec1,f,c
 34034  01BB88  52E5               	movf	postdec1,f,c
 34035  01BB8A  0012               	return		;funcret
 34036  01BB8C                     __end_of_TMR3_WriteTimer:
 34037                           	opt callstack 0
 34038                           
 34039 ;; *************** function _TMR3_CallBack *****************
 34040 ;; Defined at:
 34041 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 34042 ;; Parameters:    Size  Location     Type
 34043 ;;		None
 34044 ;; Auto vars:     Size  Location     Type
 34045 ;;		None
 34046 ;; Return value:  Size  Location     Type
 34047 ;;                  1  [STACK] void 
 34048 ;; Registers used:
 34049 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 34050 ;; Tracked objects:
 34051 ;;		On entry : 3F/0
 34052 ;;		On exit  : 0/0
 34053 ;;		Unchanged: 0/0
 34054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34059 ;;Total ram usage:        0 bytes
 34060 ;; Hardware stack levels used:    1
 34061 ;; Hardware stack levels required when called:   13
 34062 ;; This function calls:
 34063 ;;		Absolute function
 34064 ;;		_TMR3_DefaultInterruptHandler
 34065 ;;		_calc_bsoc
 34066 ;; This function is called by:
 34067 ;;		_TMR3_ISR
 34068 ;; This function uses a reentrant model
 34069 ;;
 34070                           
 34071                           	psect	text156
 34072  01C214                     __ptext156:
 34073                           	opt callstack 0
 34074  01C214                     _TMR3_CallBack:
 34075                           	opt callstack 2
 34076                           
 34077                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 34078                           
 34079                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34080                           ;incstack = 0
 34081  01C214  0100               	movlb	0	; () banked
 34082  01C216  517C               	movf	_TMR3_InterruptHandler& (0+255),w,b
 34083  01C218  117D               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 34084  01C21A  117E               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 34085  01C21C  B4D8               	btfsc	status,2,c
 34086  01C21E  0012               	return	
 34087                           
 34088                           ; BSR set to: 0
 34089                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 34090  01C220  D801               	call	u1267_28
 34091  01C222  0012               	return	
 34092  01C224                     u1267_28:
 34093  01C224  0005               	push	
 34094  01C226  6EFA               	movwf	pclath,c
 34095  01C228  517C               	movf	_TMR3_InterruptHandler& (0+255),w,b
 34096  01C22A  6EFD               	movwf	tosl,c
 34097  01C22C  517D               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 34098  01C22E  6EFE               	movwf	tosh,c
 34099  01C230  517E               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 34100  01C232  6EFF               	movwf	tosu,c
 34101  01C234  50FA               	movf	pclath,w,c
 34102  01C236  0012               	return		;indir
 34103  01C238                     __end_of_TMR3_CallBack:
 34104                           	opt callstack 0
 34105                           
 34106 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 34107 ;; Defined at:
 34108 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 34109 ;; Parameters:    Size  Location     Type
 34110 ;;		None
 34111 ;; Auto vars:     Size  Location     Type
 34112 ;;		None
 34113 ;; Return value:  Size  Location     Type
 34114 ;;                  1  [STACK] void 
 34115 ;; Registers used:
 34116 ;;		None
 34117 ;; Tracked objects:
 34118 ;;		On entry : 3F/0
 34119 ;;		On exit  : 0/0
 34120 ;;		Unchanged: 0/0
 34121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34126 ;;Total ram usage:        0 bytes
 34127 ;; Hardware stack levels used:    1
 34128 ;; Hardware stack levels required when called:    3
 34129 ;; This function calls:
 34130 ;;		Nothing
 34131 ;; This function is called by:
 34132 ;;		_TMR3_Initialize
 34133 ;;		_TMR3_CallBack
 34134 ;; This function uses a reentrant model
 34135 ;;
 34136                           
 34137                           	psect	text157
 34138  01C590                     __ptext157:
 34139                           	opt callstack 0
 34140  01C590                     _TMR3_DefaultInterruptHandler:
 34141                           	opt callstack 11
 34142                           
 34143                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 34144                           
 34145                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34146                           ;incstack = 0
 34147  01C590  0012               	return		;funcret
 34148  01C592                     __end_of_TMR3_DefaultInterruptHandler:
 34149                           	opt callstack 0
 34150                           
 34151 ;; *************** function _calc_bsoc *****************
 34152 ;; Defined at:
 34153 ;;		line 39 in file "bsoc.c"
 34154 ;; Parameters:    Size  Location     Type
 34155 ;;		None
 34156 ;; Auto vars:     Size  Location     Type
 34157 ;;  adj             4  [STACK] float 
 34158 ;;  log_ptr         2  [STACK] PTR unsigned char 
 34159 ;;		 -> port_data(512), 
 34160 ;; Return value:  Size  Location     Type
 34161 ;;                  1  [STACK] void 
 34162 ;; Registers used:
 34163 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 34164 ;; Tracked objects:
 34165 ;;		On entry : 3F/0
 34166 ;;		On exit  : 5/1
 34167 ;;		Unchanged: 0/0
 34168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34173 ;;Total ram usage:        0 bytes
 34174 ;; Hardware stack levels used:    1
 34175 ;; Hardware stack levels required when called:   12
 34176 ;; This function calls:
 34177 ;;		_StartTimer
 34178 ;;		___asfladd
 34179 ;;		___fldiv
 34180 ;;		___flge
 34181 ;;		___flmul
 34182 ;;		___flneg
 34183 ;;		___fltol
 34184 ;;		_fabsf
 34185 ;;		_get_ac_charger_relay
 34186 ;;		_port_data_dma_ptr
 34187 ;;		_send_port_data_dma
 34188 ;;		_sprintf
 34189 ;;		_strlen
 34190 ;; This function is called by:
 34191 ;;		_init_bsoc
 34192 ;;		_TMR3_CallBack
 34193 ;; This function uses a reentrant model
 34194 ;;
 34195                           
 34196                           	psect	text158
 34197  013378                     __ptext158:
 34198                           	opt callstack 0
 34199  013378                     _calc_bsoc:
 34200                           	opt callstack 0
 34201                           
 34202                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34203  013378  0E06               	movlw	6
 34204  01337A  26E1               	addwf	fsr1l,f,c
 34205  01337C  0E00               	movlw	0
 34206  01337E  22E2               	addwfc	fsr1h,f,c
 34207                           
 34208                           ;bsoc.c: 41:  uint8_t * log_ptr;;bsoc.c: 42:  static uint8_t log_update_wait = 0;;bsoc.c
      +                          : 43:  float adj = 1.0;
 34209                           
 34210                           ;incstack = 0
 34211  013380  0E00               	movlw	0
 34212  013382  6E09               	movwf	(btemp+8)^0,c
 34213  013384  0E00               	movlw	0
 34214  013386  6E0A               	movwf	(btemp+9)^0,c
 34215  013388  0E80               	movlw	128
 34216  01338A  6E0B               	movwf	(btemp+10)^0,c
 34217  01338C  0E3F               	movlw	63
 34218  01338E  6E0C               	movwf	(btemp+11)^0,c
 34219                           
 34220                           ;stkvar	_adj @ sp[(-6)+0]
 34221  013390  0EFA               	movlw	-6
 34222  013392  0060  F027  FFE3   	movff	btemp+8,plusw1
 34223  013398  0EFB               	movlw	-5
 34224  01339A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 34225  0133A0  0EFC               	movlw	-4
 34226  0133A2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 34227  0133A8  0EFD               	movlw	-3
 34228  0133AA  0060  F033  FFE3   	movff	btemp+11,plusw1
 34229  0133B0  82BE               	bsf	190,1,c	;volatile
 34230                           
 34231                           ;bsoc.c: 47:  C.dynamic_ah += (C.c_bat / 3600.0);
 34232  0133B2  0E00               	movlw	0
 34233  0133B4  6EE6               	movwf	postinc1,c
 34234  0133B6  0E00               	movlw	0
 34235  0133B8  6EE6               	movwf	postinc1,c
 34236  0133BA  0E61               	movlw	97
 34237  0133BC  6EE6               	movwf	postinc1,c
 34238  0133BE  0E45               	movlw	69
 34239  0133C0  6EE6               	movwf	postinc1,c
 34240  0133C2  EE21  F343         	lfsr	2,_C+68	;volatile
 34241  0133C6  006F FF7B FFE6     	movff	postinc2,postinc1
 34242  0133CC  006F FF7B FFE6     	movff	postinc2,postinc1
 34243  0133D2  006F FF7B FFE6     	movff	postinc2,postinc1
 34244  0133D8  006F FF7B FFE6     	movff	postinc2,postinc1
 34245  0133DE  ECCA  F0A6         	call	___fldiv	;wreg free
 34246  0133E2  0060  F007  FFE6   	movff	btemp,postinc1
 34247  0133E8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34248  0133EE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34249  0133F4  0060  F013  FFE6   	movff	btemp+3,postinc1
 34250  0133FA  0E8F               	movlw	low (_C+144)
 34251  0133FC  6EE6               	movwf	postinc1,c
 34252  0133FE  0E07               	movlw	high (_C+144)
 34253  013400  6EE6               	movwf	postinc1,c
 34254  013402  EC5A  F0D8         	call	___asfladd	;wreg free
 34255                           
 34256                           ;bsoc.c: 48:  if (C.dynamic_ah > (C.bank_ah))
 34257  013406  EE21  F38F         	lfsr	2,_C+144	;volatile
 34258  01340A  006F FF7B FFE6     	movff	postinc2,postinc1
 34259  013410  006F FF7B FFE6     	movff	postinc2,postinc1
 34260  013416  006F FF7B FFE6     	movff	postinc2,postinc1
 34261  01341C  006F FF7B FFE6     	movff	postinc2,postinc1
 34262  013422  EE21  F38B         	lfsr	2,_C+140	;volatile
 34263  013426  006F FF7B FFE6     	movff	postinc2,postinc1
 34264  01342C  006F FF7B FFE6     	movff	postinc2,postinc1
 34265  013432  006F FF7B FFE6     	movff	postinc2,postinc1
 34266  013438  006F FF7B FFE6     	movff	postinc2,postinc1
 34267  01343E  ECFC  F0C8         	call	___flge	;wreg free
 34268  013442  B001               	btfsc	btemp& (0+255),0,c
 34269  013444  D00E               	goto	l13095
 34270                           
 34271                           ;bsoc.c: 49:   C.dynamic_ah = C.bank_ah;
 34272  013446  EE21  F38B         	lfsr	2,_C+140	;volatile
 34273  01344A  006F FF78  F78F    	movff	postinc2,_C+144	;volatile
 34274  013450  006F FF78  F790    	movff	postinc2,_C+145	;volatile
 34275  013456  006F FF78  F791    	movff	postinc2,_C+146	;volatile
 34276  01345C  006F FF74  F792    	movff	postdec2,_C+147	;volatile
 34277  013462                     l13095:
 34278                           
 34279                           ;bsoc.c: 50:  if (C.dynamic_ah < 0.1)
 34280  013462  0ECD               	movlw	205
 34281  013464  6EE6               	movwf	postinc1,c
 34282  013466  0ECC               	movlw	204
 34283  013468  6EE6               	movwf	postinc1,c
 34284  01346A  0ECC               	movlw	204
 34285  01346C  6EE6               	movwf	postinc1,c
 34286  01346E  0E3D               	movlw	61
 34287  013470  6EE6               	movwf	postinc1,c
 34288  013472  EE21  F38F         	lfsr	2,_C+144	;volatile
 34289  013476  006F FF7B FFE6     	movff	postinc2,postinc1
 34290  01347C  006F FF7B FFE6     	movff	postinc2,postinc1
 34291  013482  006F FF7B FFE6     	movff	postinc2,postinc1
 34292  013488  006F FF7B FFE6     	movff	postinc2,postinc1
 34293  01348E  ECFC  F0C8         	call	___flge	;wreg free
 34294  013492  B001               	btfsc	btemp& (0+255),0,c
 34295  013494  D010               	goto	l13099
 34296                           
 34297                           ;bsoc.c: 51:   C.dynamic_ah = 0.1;
 34298  013496  0ECD               	movlw	205
 34299  013498  006F FFA0  F78F    	movff	wreg,_C+144	;volatile
 34300  01349E  0ECC               	movlw	204
 34301  0134A0  006F FFA0  F790    	movff	wreg,_C+145	;volatile
 34302  0134A6  0ECC               	movlw	204
 34303  0134A8  006F FFA0  F791    	movff	wreg,_C+146	;volatile
 34304  0134AE  0E3D               	movlw	61
 34305  0134B0  006F FFA0  F792    	movff	wreg,_C+147	;volatile
 34306  0134B6                     l13099:
 34307                           
 34308                           ;bsoc.c: 53:  if (C.c_bat > 0.01)
 34309  0134B6  EE21  F343         	lfsr	2,_C+68	;volatile
 34310  0134BA  006F FF7B FFE6     	movff	postinc2,postinc1
 34311  0134C0  006F FF7B FFE6     	movff	postinc2,postinc1
 34312  0134C6  006F FF7B FFE6     	movff	postinc2,postinc1
 34313  0134CC  006F FF7B FFE6     	movff	postinc2,postinc1
 34314  0134D2  0E0A               	movlw	10
 34315  0134D4  6EE6               	movwf	postinc1,c
 34316  0134D6  0ED7               	movlw	215
 34317  0134D8  6EE6               	movwf	postinc1,c
 34318  0134DA  0E23               	movlw	35
 34319  0134DC  6EE6               	movwf	postinc1,c
 34320  0134DE  0E3C               	movlw	60
 34321  0134E0  6EE6               	movwf	postinc1,c
 34322  0134E2  ECFC  F0C8         	call	___flge	;wreg free
 34323  0134E6  B001               	btfsc	btemp& (0+255),0,c
 34324  0134E8  D01C               	goto	l13103
 34325                           
 34326                           ;bsoc.c: 54:   adj = C.hist[0].cef;
 34327  0134EA  0061  FEF4  F009   	movff	_C+190,btemp+8	;volatile
 34328  0134F0  0061  FEF8  F00A   	movff	_C+191,btemp+9	;volatile
 34329  0134F6  0061  FEFC  F00B   	movff	_C+192,btemp+10	;volatile
 34330  0134FC  0061  FF00  F00C   	movff	_C+193,btemp+11	;volatile
 34331                           
 34332                           ;stkvar	_adj @ sp[(-6)+0]
 34333  013502  0EFA               	movlw	-6
 34334  013504  0060  F027  FFE3   	movff	btemp+8,plusw1
 34335  01350A  0EFB               	movlw	-5
 34336  01350C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 34337  013512  0EFC               	movlw	-4
 34338  013514  0060  F02F  FFE3   	movff	btemp+10,plusw1
 34339  01351A  0EFD               	movlw	-3
 34340  01351C  0060  F033  FFE3   	movff	btemp+11,plusw1
 34341  013522                     l13103:
 34342                           
 34343                           ;bsoc.c: 55:  if (C.c_bat < 0.01)
 34344  013522  0E0A               	movlw	10
 34345  013524  6EE6               	movwf	postinc1,c
 34346  013526  0ED7               	movlw	215
 34347  013528  6EE6               	movwf	postinc1,c
 34348  01352A  0E23               	movlw	35
 34349  01352C  6EE6               	movwf	postinc1,c
 34350  01352E  0E3C               	movlw	60
 34351  013530  6EE6               	movwf	postinc1,c
 34352  013532  EE21  F343         	lfsr	2,_C+68	;volatile
 34353  013536  006F FF7B FFE6     	movff	postinc2,postinc1
 34354  01353C  006F FF7B FFE6     	movff	postinc2,postinc1
 34355  013542  006F FF7B FFE6     	movff	postinc2,postinc1
 34356  013548  006F FF7B FFE6     	movff	postinc2,postinc1
 34357  01354E  ECFC  F0C8         	call	___flge	;wreg free
 34358  013552  B001               	btfsc	btemp& (0+255),0,c
 34359  013554  D01C               	goto	l13107
 34360                           
 34361                           ;bsoc.c: 56:   adj = C.hist[0].peukert;
 34362  013556  0061  FEE4  F009   	movff	_C+186,btemp+8	;volatile
 34363  01355C  0061  FEE8  F00A   	movff	_C+187,btemp+9	;volatile
 34364  013562  0061  FEEC  F00B   	movff	_C+188,btemp+10	;volatile
 34365  013568  0061  FEF0  F00C   	movff	_C+189,btemp+11	;volatile
 34366                           
 34367                           ;stkvar	_adj @ sp[(-6)+0]
 34368  01356E  0EFA               	movlw	-6
 34369  013570  0060  F027  FFE3   	movff	btemp+8,plusw1
 34370  013576  0EFB               	movlw	-5
 34371  013578  0060  F02B  FFE3   	movff	btemp+9,plusw1
 34372  01357E  0EFC               	movlw	-4
 34373  013580  0060  F02F  FFE3   	movff	btemp+10,plusw1
 34374  013586  0EFD               	movlw	-3
 34375  013588  0060  F033  FFE3   	movff	btemp+11,plusw1
 34376  01358E                     l13107:
 34377                           
 34378                           ;bsoc.c: 57:  C.dynamic_ah += ((C.c_bat * adj) / 3600.0);
 34379  01358E  0E00               	movlw	0
 34380  013590  6EE6               	movwf	postinc1,c
 34381  013592  0E00               	movlw	0
 34382  013594  6EE6               	movwf	postinc1,c
 34383  013596  0E61               	movlw	97
 34384  013598  6EE6               	movwf	postinc1,c
 34385  01359A  0E45               	movlw	69
 34386  01359C  6EE6               	movwf	postinc1,c
 34387                           
 34388                           ;stkvar	_adj @ sp[(-10)+0]
 34389  01359E  0EF6               	movlw	-10
 34390  0135A0  006F FF8F FFE6     	movff	plusw1,postinc1
 34391  0135A6  006F FF8F FFE6     	movff	plusw1,postinc1
 34392  0135AC  006F FF8F FFE6     	movff	plusw1,postinc1
 34393  0135B2  006F FF8F FFE6     	movff	plusw1,postinc1
 34394  0135B8  EE21  F343         	lfsr	2,_C+68	;volatile
 34395  0135BC  006F FF7B FFE6     	movff	postinc2,postinc1
 34396  0135C2  006F FF7B FFE6     	movff	postinc2,postinc1
 34397  0135C8  006F FF7B FFE6     	movff	postinc2,postinc1
 34398  0135CE  006F FF7B FFE6     	movff	postinc2,postinc1
 34399  0135D4  ECD7  F09E         	call	___flmul	;wreg free
 34400  0135D8  0060  F007  FFE6   	movff	btemp,postinc1
 34401  0135DE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34402  0135E4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34403  0135EA  0060  F013  FFE6   	movff	btemp+3,postinc1
 34404  0135F0  ECCA  F0A6         	call	___fldiv	;wreg free
 34405  0135F4  0060  F007  FFE6   	movff	btemp,postinc1
 34406  0135FA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34407  013600  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34408  013606  0060  F013  FFE6   	movff	btemp+3,postinc1
 34409  01360C  0E8F               	movlw	low (_C+144)
 34410  01360E  6EE6               	movwf	postinc1,c
 34411  013610  0E07               	movlw	high (_C+144)
 34412  013612  6EE6               	movwf	postinc1,c
 34413  013614  EC5A  F0D8         	call	___asfladd	;wreg free
 34414                           
 34415                           ;bsoc.c: 59:  C.dynamic_ah_adj = C.dynamic_ah;
 34416  013618  EE21  F38F         	lfsr	2,_C+144	;volatile
 34417  01361C  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
 34418  013622  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
 34419  013628  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
 34420  01362E  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
 34421                           
 34422                           ;bsoc.c: 60:  if (C.dynamic_ah_adj > (C.bank_ah))
 34423  013634  EE21  F39B         	lfsr	2,_C+156	;volatile
 34424  013638  006F FF7B FFE6     	movff	postinc2,postinc1
 34425  01363E  006F FF7B FFE6     	movff	postinc2,postinc1
 34426  013644  006F FF7B FFE6     	movff	postinc2,postinc1
 34427  01364A  006F FF7B FFE6     	movff	postinc2,postinc1
 34428  013650  EE21  F38B         	lfsr	2,_C+140	;volatile
 34429  013654  006F FF7B FFE6     	movff	postinc2,postinc1
 34430  01365A  006F FF7B FFE6     	movff	postinc2,postinc1
 34431  013660  006F FF7B FFE6     	movff	postinc2,postinc1
 34432  013666  006F FF7B FFE6     	movff	postinc2,postinc1
 34433  01366C  ECFC  F0C8         	call	___flge	;wreg free
 34434  013670  B001               	btfsc	btemp& (0+255),0,c
 34435  013672  D00E               	goto	l13115
 34436                           
 34437                           ;bsoc.c: 61:   C.dynamic_ah_adj = C.bank_ah;
 34438  013674  EE21  F38B         	lfsr	2,_C+140	;volatile
 34439  013678  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
 34440  01367E  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
 34441  013684  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
 34442  01368A  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
 34443  013690                     l13115:
 34444                           
 34445                           ;bsoc.c: 62:  if (C.dynamic_ah_adj < 0.1)
 34446  013690  0ECD               	movlw	205
 34447  013692  6EE6               	movwf	postinc1,c
 34448  013694  0ECC               	movlw	204
 34449  013696  6EE6               	movwf	postinc1,c
 34450  013698  0ECC               	movlw	204
 34451  01369A  6EE6               	movwf	postinc1,c
 34452  01369C  0E3D               	movlw	61
 34453  01369E  6EE6               	movwf	postinc1,c
 34454  0136A0  EE21  F39B         	lfsr	2,_C+156	;volatile
 34455  0136A4  006F FF7B FFE6     	movff	postinc2,postinc1
 34456  0136AA  006F FF7B FFE6     	movff	postinc2,postinc1
 34457  0136B0  006F FF7B FFE6     	movff	postinc2,postinc1
 34458  0136B6  006F FF7B FFE6     	movff	postinc2,postinc1
 34459  0136BC  ECFC  F0C8         	call	___flge	;wreg free
 34460  0136C0  B001               	btfsc	btemp& (0+255),0,c
 34461  0136C2  D010               	goto	l13119
 34462                           
 34463                           ;bsoc.c: 63:   C.dynamic_ah_adj = 0.1;
 34464  0136C4  0ECD               	movlw	205
 34465  0136C6  006F FFA0  F79B    	movff	wreg,_C+156	;volatile
 34466  0136CC  0ECC               	movlw	204
 34467  0136CE  006F FFA0  F79C    	movff	wreg,_C+157	;volatile
 34468  0136D4  0ECC               	movlw	204
 34469  0136D6  006F FFA0  F79D    	movff	wreg,_C+158	;volatile
 34470  0136DC  0E3D               	movlw	61
 34471  0136DE  006F FFA0  F79E    	movff	wreg,_C+159	;volatile
 34472  0136E4                     l13119:
 34473                           
 34474                           ;bsoc.c: 66:  C.pv_ah += (C.c_pv / 3600.0);
 34475  0136E4  0E00               	movlw	0
 34476  0136E6  6EE6               	movwf	postinc1,c
 34477  0136E8  0E00               	movlw	0
 34478  0136EA  6EE6               	movwf	postinc1,c
 34479  0136EC  0E61               	movlw	97
 34480  0136EE  6EE6               	movwf	postinc1,c
 34481  0136F0  0E45               	movlw	69
 34482  0136F2  6EE6               	movwf	postinc1,c
 34483  0136F4  EE21  F347         	lfsr	2,_C+72	;volatile
 34484  0136F8  006F FF7B FFE6     	movff	postinc2,postinc1
 34485  0136FE  006F FF7B FFE6     	movff	postinc2,postinc1
 34486  013704  006F FF7B FFE6     	movff	postinc2,postinc1
 34487  01370A  006F FF7B FFE6     	movff	postinc2,postinc1
 34488  013710  ECCA  F0A6         	call	___fldiv	;wreg free
 34489  013714  0060  F007  FFE6   	movff	btemp,postinc1
 34490  01371A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34491  013720  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34492  013726  0060  F013  FFE6   	movff	btemp+3,postinc1
 34493  01372C  0E93               	movlw	low (_C+148)
 34494  01372E  6EE6               	movwf	postinc1,c
 34495  013730  0E07               	movlw	high (_C+148)
 34496  013732  6EE6               	movwf	postinc1,c
 34497  013734  EC5A  F0D8         	call	___asfladd	;wreg free
 34498                           
 34499                           ;bsoc.c: 67:  C.pvkw += (C.p_pv / 3600.0);
 34500  013738  0E00               	movlw	0
 34501  01373A  6EE6               	movwf	postinc1,c
 34502  01373C  0E00               	movlw	0
 34503  01373E  6EE6               	movwf	postinc1,c
 34504  013740  0E61               	movlw	97
 34505  013742  6EE6               	movwf	postinc1,c
 34506  013744  0E45               	movlw	69
 34507  013746  6EE6               	movwf	postinc1,c
 34508  013748  EE21  F37B         	lfsr	2,_C+124	;volatile
 34509  01374C  006F FF7B FFE6     	movff	postinc2,postinc1
 34510  013752  006F FF7B FFE6     	movff	postinc2,postinc1
 34511  013758  006F FF7B FFE6     	movff	postinc2,postinc1
 34512  01375E  006F FF7B FFE6     	movff	postinc2,postinc1
 34513  013764  ECCA  F0A6         	call	___fldiv	;wreg free
 34514  013768  0060  F007  FFE6   	movff	btemp,postinc1
 34515  01376E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34516  013774  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34517  01377A  0060  F013  FFE6   	movff	btemp+3,postinc1
 34518  013780  0EA7               	movlw	low (_C+168)
 34519  013782  6EE6               	movwf	postinc1,c
 34520  013784  0E07               	movlw	high (_C+168)
 34521  013786  6EE6               	movwf	postinc1,c
 34522  013788  EC5A  F0D8         	call	___asfladd	;wreg free
 34523                           
 34524                           ;bsoc.c: 68:  C.invkw += (C.p_inverter / 3600.0);
 34525  01378C  0E00               	movlw	0
 34526  01378E  6EE6               	movwf	postinc1,c
 34527  013790  0E00               	movlw	0
 34528  013792  6EE6               	movwf	postinc1,c
 34529  013794  0E61               	movlw	97
 34530  013796  6EE6               	movwf	postinc1,c
 34531  013798  0E45               	movlw	69
 34532  01379A  6EE6               	movwf	postinc1,c
 34533  01379C  EE21  F377         	lfsr	2,_C+120	;volatile
 34534  0137A0  006F FF7B FFE6     	movff	postinc2,postinc1
 34535  0137A6  006F FF7B FFE6     	movff	postinc2,postinc1
 34536  0137AC  006F FF7B FFE6     	movff	postinc2,postinc1
 34537  0137B2  006F FF7B FFE6     	movff	postinc2,postinc1
 34538  0137B8  ECCA  F0A6         	call	___fldiv	;wreg free
 34539  0137BC  0060  F007  FFE6   	movff	btemp,postinc1
 34540  0137C2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34541  0137C8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34542  0137CE  0060  F013  FFE6   	movff	btemp+3,postinc1
 34543  0137D4  0EAB               	movlw	low (_C+172)
 34544  0137D6  6EE6               	movwf	postinc1,c
 34545  0137D8  0E07               	movlw	high (_C+172)
 34546  0137DA  6EE6               	movwf	postinc1,c
 34547  0137DC  EC5A  F0D8         	call	___asfladd	;wreg free
 34548                           
 34549                           ;bsoc.c: 69:  C.loadkw += (C.p_load / 3600.0);
 34550  0137E0  0E00               	movlw	0
 34551  0137E2  6EE6               	movwf	postinc1,c
 34552  0137E4  0E00               	movlw	0
 34553  0137E6  6EE6               	movwf	postinc1,c
 34554  0137E8  0E61               	movlw	97
 34555  0137EA  6EE6               	movwf	postinc1,c
 34556  0137EC  0E45               	movlw	69
 34557  0137EE  6EE6               	movwf	postinc1,c
 34558  0137F0  EE21  F373         	lfsr	2,_C+116	;volatile
 34559  0137F4  006F FF7B FFE6     	movff	postinc2,postinc1
 34560  0137FA  006F FF7B FFE6     	movff	postinc2,postinc1
 34561  013800  006F FF7B FFE6     	movff	postinc2,postinc1
 34562  013806  006F FF7B FFE6     	movff	postinc2,postinc1
 34563  01380C  ECCA  F0A6         	call	___fldiv	;wreg free
 34564  013810  0060  F007  FFE6   	movff	btemp,postinc1
 34565  013816  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34566  01381C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34567  013822  0060  F013  FFE6   	movff	btemp+3,postinc1
 34568  013828  0EAF               	movlw	low (_C+176)
 34569  01382A  6EE6               	movwf	postinc1,c
 34570  01382C  0E07               	movlw	high (_C+176)
 34571  01382E  6EE6               	movwf	postinc1,c
 34572  013830  EC5A  F0D8         	call	___asfladd	;wreg free
 34573                           
 34574                           ;bsoc.c: 70:  if (C.p_bat > 0.0)
 34575  013834  EE21  F37F         	lfsr	2,_C+128	;volatile
 34576  013838  006F FF7B FFE6     	movff	postinc2,postinc1
 34577  01383E  006F FF7B FFE6     	movff	postinc2,postinc1
 34578  013844  006F FF7B FFE6     	movff	postinc2,postinc1
 34579  01384A  006F FF7B FFE6     	movff	postinc2,postinc1
 34580  013850  0E00               	movlw	0
 34581  013852  6EE6               	movwf	postinc1,c
 34582  013854  0E00               	movlw	0
 34583  013856  6EE6               	movwf	postinc1,c
 34584  013858  0E00               	movlw	0
 34585  01385A  6EE6               	movwf	postinc1,c
 34586  01385C  0E00               	movlw	0
 34587  01385E  6EE6               	movwf	postinc1,c
 34588  013860  ECFC  F0C8         	call	___flge	;wreg free
 34589  013864  B001               	btfsc	btemp& (0+255),0,c
 34590  013866  D02A               	goto	l13125
 34591                           
 34592                           ;bsoc.c: 71:   C.bkwi += (C.p_bat / 3600.0);
 34593  013868  0E00               	movlw	0
 34594  01386A  6EE6               	movwf	postinc1,c
 34595  01386C  0E00               	movlw	0
 34596  01386E  6EE6               	movwf	postinc1,c
 34597  013870  0E61               	movlw	97
 34598  013872  6EE6               	movwf	postinc1,c
 34599  013874  0E45               	movlw	69
 34600  013876  6EE6               	movwf	postinc1,c
 34601  013878  EE21  F37F         	lfsr	2,_C+128	;volatile
 34602  01387C  006F FF7B FFE6     	movff	postinc2,postinc1
 34603  013882  006F FF7B FFE6     	movff	postinc2,postinc1
 34604  013888  006F FF7B FFE6     	movff	postinc2,postinc1
 34605  01388E  006F FF7B FFE6     	movff	postinc2,postinc1
 34606  013894  ECCA  F0A6         	call	___fldiv	;wreg free
 34607  013898  0060  F007  FFE6   	movff	btemp,postinc1
 34608  01389E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34609  0138A4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34610  0138AA  0060  F013  FFE6   	movff	btemp+3,postinc1
 34611  0138B0  0E9F               	movlw	low (_C+160)
 34612  0138B2  6EE6               	movwf	postinc1,c
 34613  0138B4  0E07               	movlw	high (_C+160)
 34614  0138B6  6EE6               	movwf	postinc1,c
 34615  0138B8  EC5A  F0D8         	call	___asfladd	;wreg free
 34616  0138BC                     l13125:
 34617                           
 34618                           ;bsoc.c: 72:  if (C.p_bat < 0.0)
 34619  0138BC  EE21  F37F         	lfsr	2,_C+128	;volatile
 34620  0138C0  0E03               	movlw	3
 34621  0138C2  AEDB               	btfss	plusw2,7,c
 34622  0138C4  D038               	goto	l13129
 34623                           
 34624                           ;bsoc.c: 73:   C.bkwo += fabsf(C.p_bat / 3600.0);
 34625  0138C6  0E00               	movlw	0
 34626  0138C8  6EE6               	movwf	postinc1,c
 34627  0138CA  0E00               	movlw	0
 34628  0138CC  6EE6               	movwf	postinc1,c
 34629  0138CE  0E61               	movlw	97
 34630  0138D0  6EE6               	movwf	postinc1,c
 34631  0138D2  0E45               	movlw	69
 34632  0138D4  6EE6               	movwf	postinc1,c
 34633  0138D6  EE21  F37F         	lfsr	2,_C+128	;volatile
 34634  0138DA  006F FF7B FFE6     	movff	postinc2,postinc1
 34635  0138E0  006F FF7B FFE6     	movff	postinc2,postinc1
 34636  0138E6  006F FF7B FFE6     	movff	postinc2,postinc1
 34637  0138EC  006F FF7B FFE6     	movff	postinc2,postinc1
 34638  0138F2  ECCA  F0A6         	call	___fldiv	;wreg free
 34639  0138F6  0060  F007  FFE6   	movff	btemp,postinc1
 34640  0138FC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34641  013902  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34642  013908  0060  F013  FFE6   	movff	btemp+3,postinc1
 34643  01390E  EC2A  F0D4         	call	_fabsf	;wreg free
 34644  013912  0060  F007  FFE6   	movff	btemp,postinc1
 34645  013918  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34646  01391E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34647  013924  0060  F013  FFE6   	movff	btemp+3,postinc1
 34648  01392A  0EA3               	movlw	low (_C+164)
 34649  01392C  6EE6               	movwf	postinc1,c
 34650  01392E  0E07               	movlw	high (_C+164)
 34651  013930  6EE6               	movwf	postinc1,c
 34652  013932  EC5A  F0D8         	call	___asfladd	;wreg free
 34653  013936                     l13129:
 34654                           
 34655                           ;bsoc.c: 75:  C.soc = ((uint16_t) ((C.dynamic_ah_adj / C.bank_ah)*100.0) + 1);
 34656  013936  0E00               	movlw	0
 34657  013938  6EE6               	movwf	postinc1,c
 34658  01393A  0E00               	movlw	0
 34659  01393C  6EE6               	movwf	postinc1,c
 34660  01393E  0EC8               	movlw	200
 34661  013940  6EE6               	movwf	postinc1,c
 34662  013942  0E42               	movlw	66
 34663  013944  6EE6               	movwf	postinc1,c
 34664  013946  EE21  F38B         	lfsr	2,_C+140	;volatile
 34665  01394A  006F FF7B FFE6     	movff	postinc2,postinc1
 34666  013950  006F FF7B FFE6     	movff	postinc2,postinc1
 34667  013956  006F FF7B FFE6     	movff	postinc2,postinc1
 34668  01395C  006F FF7B FFE6     	movff	postinc2,postinc1
 34669  013962  EE21  F39B         	lfsr	2,_C+156	;volatile
 34670  013966  006F FF7B FFE6     	movff	postinc2,postinc1
 34671  01396C  006F FF7B FFE6     	movff	postinc2,postinc1
 34672  013972  006F FF7B FFE6     	movff	postinc2,postinc1
 34673  013978  006F FF7B FFE6     	movff	postinc2,postinc1
 34674  01397E  ECCA  F0A6         	call	___fldiv	;wreg free
 34675  013982  0060  F007  FFE6   	movff	btemp,postinc1
 34676  013988  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34677  01398E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34678  013994  0060  F013  FFE6   	movff	btemp+3,postinc1
 34679  01399A  ECD7  F09E         	call	___flmul	;wreg free
 34680  01399E  0060  F007  FFE6   	movff	btemp,postinc1
 34681  0139A4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34682  0139AA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34683  0139B0  0060  F013  FFE6   	movff	btemp+3,postinc1
 34684  0139B6  EC43  F0C8         	call	___fltol	;wreg free
 34685  0139BA  0060  F004  F00B   	movff	btemp,btemp+10
 34686  0139C0  0060  F008  F00C   	movff	btemp+1,btemp+11
 34687  0139C6  0E01               	movlw	1
 34688  0139C8  260B               	addwf	(btemp+10)^0,f,c
 34689  0139CA  0E00               	movlw	0
 34690  0139CC  220C               	addwfc	(btemp+11)^0,f,c
 34691  0139CE  0060  F02C  F7B5   	movff	btemp+10,_C+182	;volatile
 34692  0139D4  0060  F030  F7B6   	movff	btemp+11,_C+183	;volatile
 34693                           
 34694                           ;bsoc.c: 76:  if (C.soc > 100)
 34695  0139DA  EE21  F3B5         	lfsr	2,_C+182	;volatile
 34696  0139DE  0E01               	movlw	1
 34697  0139E0  50DB               	movf	plusw2,w,c
 34698  0139E2  E104               	bnz	u1260_20
 34699  0139E4  0E65               	movlw	101
 34700  0139E6  5CDE               	subwf	postinc2,w,c
 34701  0139E8  A0D8               	btfss	status,0,c
 34702  0139EA  D008               	goto	l13135
 34703  0139EC                     u1260_20:
 34704                           
 34705                           ;bsoc.c: 77:   C.soc = 100;
 34706  0139EC  0E64               	movlw	100
 34707  0139EE  006F FFA0  F7B5    	movff	wreg,_C+182	;volatile
 34708  0139F4  0E00               	movlw	0
 34709  0139F6  006F FFA0  F7B6    	movff	wreg,_C+183	;volatile
 34710  0139FC                     l13135:
 34711                           
 34712                           ;bsoc.c: 79:  if (C.c_bat < 0.0) {
 34713  0139FC  EE21  F343         	lfsr	2,_C+68	;volatile
 34714  013A00  0E03               	movlw	3
 34715  013A02  AEDB               	btfss	plusw2,7,c
 34716  013A04  D047               	goto	l2108
 34717                           
 34718                           ;bsoc.c: 80:   C.runtime = (uint16_t) (-(C.dynamic_ah_adj / C.c_bat));
 34719  013A06  EE21  F343         	lfsr	2,_C+68	;volatile
 34720  013A0A  006F FF7B FFE6     	movff	postinc2,postinc1
 34721  013A10  006F FF7B FFE6     	movff	postinc2,postinc1
 34722  013A16  006F FF7B FFE6     	movff	postinc2,postinc1
 34723  013A1C  006F FF7B FFE6     	movff	postinc2,postinc1
 34724  013A22  EE21  F39B         	lfsr	2,_C+156	;volatile
 34725  013A26  006F FF7B FFE6     	movff	postinc2,postinc1
 34726  013A2C  006F FF7B FFE6     	movff	postinc2,postinc1
 34727  013A32  006F FF7B FFE6     	movff	postinc2,postinc1
 34728  013A38  006F FF7B FFE6     	movff	postinc2,postinc1
 34729  013A3E  ECCA  F0A6         	call	___fldiv	;wreg free
 34730  013A42  0060  F007  FFE6   	movff	btemp,postinc1
 34731  013A48  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34732  013A4E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34733  013A54  0060  F013  FFE6   	movff	btemp+3,postinc1
 34734  013A5A  ECEA  F0DB         	call	___flneg	;wreg free
 34735  013A5E  0060  F007  FFE6   	movff	btemp,postinc1
 34736  013A64  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34737  013A6A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34738  013A70  0060  F013  FFE6   	movff	btemp+3,postinc1
 34739  013A76  EC43  F0C8         	call	___fltol	;wreg free
 34740  013A7A  0060  F004  F00B   	movff	btemp,btemp+10
 34741  013A80  0060  F008  F00C   	movff	btemp+1,btemp+11
 34742  013A86  0060  F02C  F7B3   	movff	btemp+10,_C+180	;volatile
 34743  013A8C  0060  F030  F7B4   	movff	btemp+11,_C+181	;volatile
 34744                           
 34745                           ;bsoc.c: 81:  } else {
 34746  013A92  D008               	goto	l13139
 34747  013A94                     l2108:
 34748                           
 34749                           ;bsoc.c: 82:   C.runtime = 120;
 34750  013A94  0E78               	movlw	120
 34751  013A96  006F FFA0  F7B3    	movff	wreg,_C+180	;volatile
 34752  013A9C  0E00               	movlw	0
 34753  013A9E  006F FFA0  F7B4    	movff	wreg,_C+181	;volatile
 34754  013AA4                     l13139:
 34755                           
 34756                           ;bsoc.c: 84:  if (C.runtime > 120)
 34757  013AA4  EE21  F3B3         	lfsr	2,_C+180	;volatile
 34758  013AA8  0E01               	movlw	1
 34759  013AAA  50DB               	movf	plusw2,w,c
 34760  013AAC  E104               	bnz	u1262_20
 34761  013AAE  0E79               	movlw	121
 34762  013AB0  5CDE               	subwf	postinc2,w,c
 34763  013AB2  A0D8               	btfss	status,0,c
 34764  013AB4  D008               	goto	l13143
 34765  013AB6                     u1262_20:
 34766                           
 34767                           ;bsoc.c: 85:   C.runtime = 120;
 34768  013AB6  0E78               	movlw	120
 34769  013AB8  006F FFA0  F7B3    	movff	wreg,_C+180	;volatile
 34770  013ABE  0E00               	movlw	0
 34771  013AC0  006F FFA0  F7B4    	movff	wreg,_C+181	;volatile
 34772  013AC6                     l13143:
 34773                           
 34774                           ;bsoc.c: 87:  V.lowint_count++;
 34775  013AC6  0E01               	movlw	1
 34776  013AC8  0101               	movlb	1	; () banked
 34777  013ACA  27BA               	addwf	(_V+179)& (0+255),f,b	;volatile
 34778  013ACC  0E00               	movlw	0
 34779  013ACE  23BB               	addwfc	(_V+180)& (0+255),f,b	;volatile
 34780  013AD0  23BC               	addwfc	(_V+181)& (0+255),f,b	;volatile
 34781  013AD2  23BD               	addwfc	(_V+182)& (0+255),f,b	;volatile
 34782                           
 34783                           ;bsoc.c: 89:  if (!log_update_wait++ && V.system_stable) {
 34784  013AD4  2A40               	incf	calc_bsoc@log_update_wait^0,f,c
 34785  013AD6  0440               	decf	calc_bsoc@log_update_wait^0,w,c
 34786  013AD8  A4D8               	btfss	status,2,c
 34787  013ADA  D15B               	goto	l13155
 34788                           
 34789                           ; BSR set to: 1
 34790  013ADC  51B5               	movf	(_V+174)& (0+255),w,b	;volatile
 34791  013ADE  B4D8               	btfsc	status,2,c
 34792  013AE0  D158               	goto	l13155
 34793                           
 34794                           ; BSR set to: 1
 34795                           ;bsoc.c: 90:   log_ptr = port_data_dma_ptr();
 34796  013AE2  EC8C  F0E2         	call	_port_data_dma_ptr	;wreg free
 34797                           
 34798                           ;stkvar	_log_ptr @ sp[(-6)+4]
 34799  013AE6  0EFF               	movlw	-1
 34800  013AE8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 34801  013AEE  0EFE               	movlw	-2
 34802  013AF0  0060  F007  FFE3   	movff	btemp,plusw1
 34803                           
 34804                           ;bsoc.c: 91:   sprintf((char*) log_ptr, " %c ,%lu,%4.4f,%4.4f,%4.4f,%4.4f,%4.3f,%4.3f,%4
      +                          .3f,%4.3f,%4.3f,%4.3f,%d,%d,%2.6f,%4.3f,%d,%d,%lu,%lu,%4.3f,%4.3f,%4.3f\r\n",
 34805  013AF6  EE21  F3B9         	lfsr	2,_C+186	;volatile
 34806  013AFA  006F FF7B FFE6     	movff	postinc2,postinc1
 34807  013B00  006F FF7B FFE6     	movff	postinc2,postinc1
 34808  013B06  006F FF7B FFE6     	movff	postinc2,postinc1
 34809  013B0C  006F FF7B FFE6     	movff	postinc2,postinc1
 34810  013B12  EE21  F3BD         	lfsr	2,_C+190	;volatile
 34811  013B16  006F FF7B FFE6     	movff	postinc2,postinc1
 34812  013B1C  006F FF7B FFE6     	movff	postinc2,postinc1
 34813  013B22  006F FF7B FFE6     	movff	postinc2,postinc1
 34814  013B28  006F FF7B FFE6     	movff	postinc2,postinc1
 34815  013B2E  EE21  F39B         	lfsr	2,_C+156	;volatile
 34816  013B32  006F FF7B FFE6     	movff	postinc2,postinc1
 34817  013B38  006F FF7B FFE6     	movff	postinc2,postinc1
 34818  013B3E  006F FF7B FFE6     	movff	postinc2,postinc1
 34819  013B44  006F FF7B FFE6     	movff	postinc2,postinc1
 34820  013B4A  EE22  F026         	lfsr	2,_C+295	;volatile
 34821  013B4E  006F FF7B FFE6     	movff	postinc2,postinc1
 34822  013B54  006F FF7B FFE6     	movff	postinc2,postinc1
 34823  013B5A  006F FF7B FFE6     	movff	postinc2,postinc1
 34824  013B60  006F FF7B FFE6     	movff	postinc2,postinc1
 34825  013B66  EE22  F022         	lfsr	2,_C+291	;volatile
 34826  013B6A  006F FF7B FFE6     	movff	postinc2,postinc1
 34827  013B70  006F FF7B FFE6     	movff	postinc2,postinc1
 34828  013B76  006F FF7B FFE6     	movff	postinc2,postinc1
 34829  013B7C  006F FF7B FFE6     	movff	postinc2,postinc1
 34830  013B82  EE22  F021         	lfsr	2,_C+290	;volatile
 34831  013B86  50DF               	movf	indf2,w,c
 34832  013B88  6EE6               	movwf	postinc1,c
 34833  013B8A  0E00               	movlw	0
 34834  013B8C  6EE6               	movwf	postinc1,c
 34835  013B8E  EC79  F0E2         	call	_get_ac_charger_relay	;wreg free
 34836  013B92  5001               	movf	btemp^0,w,c
 34837  013B94  6EE6               	movwf	postinc1,c
 34838  013B96  0E00               	movlw	0
 34839  013B98  6EE6               	movwf	postinc1,c
 34840  013B9A  EE21  F367         	lfsr	2,_C+104	;volatile
 34841  013B9E  006F FF7B FFE6     	movff	postinc2,postinc1
 34842  013BA4  006F FF7B FFE6     	movff	postinc2,postinc1
 34843  013BAA  006F FF7B FFE6     	movff	postinc2,postinc1
 34844  013BB0  006F FF7B FFE6     	movff	postinc2,postinc1
 34845  013BB6  EE21  F387         	lfsr	2,_C+136	;volatile
 34846  013BBA  006F FF7B FFE6     	movff	postinc2,postinc1
 34847  013BC0  006F FF7B FFE6     	movff	postinc2,postinc1
 34848  013BC6  006F FF7B FFE6     	movff	postinc2,postinc1
 34849  013BCC  006F FF7B FFE6     	movff	postinc2,postinc1
 34850  013BD2  EE21  F3B3         	lfsr	2,_C+180	;volatile
 34851  013BD6  006F FF78  F00B    	movff	postinc2,btemp+10
 34852  013BDC  006F FF74  F00C    	movff	postdec2,btemp+11
 34853  013BE2  0060  F02F  FFE6   	movff	btemp+10,postinc1
 34854  013BE8  0060  F033  FFE6   	movff	btemp+11,postinc1
 34855  013BEE  EE21  F3B5         	lfsr	2,_C+182	;volatile
 34856  013BF2  006F FF78  F00B    	movff	postinc2,btemp+10
 34857  013BF8  006F FF74  F00C    	movff	postdec2,btemp+11
 34858  013BFE  0060  F02F  FFE6   	movff	btemp+10,postinc1
 34859  013C04  0060  F033  FFE6   	movff	btemp+11,postinc1
 34860  013C0A  EE21  F393         	lfsr	2,_C+148	;volatile
 34861  013C0E  006F FF7B FFE6     	movff	postinc2,postinc1
 34862  013C14  006F FF7B FFE6     	movff	postinc2,postinc1
 34863  013C1A  006F FF7B FFE6     	movff	postinc2,postinc1
 34864  013C20  006F FF7B FFE6     	movff	postinc2,postinc1
 34865  013C26  EE21  F38F         	lfsr	2,_C+144	;volatile
 34866  013C2A  006F FF7B FFE6     	movff	postinc2,postinc1
 34867  013C30  006F FF7B FFE6     	movff	postinc2,postinc1
 34868  013C36  006F FF7B FFE6     	movff	postinc2,postinc1
 34869  013C3C  006F FF7B FFE6     	movff	postinc2,postinc1
 34870  013C42  EE21  F377         	lfsr	2,_C+120	;volatile
 34871  013C46  006F FF7B FFE6     	movff	postinc2,postinc1
 34872  013C4C  006F FF7B FFE6     	movff	postinc2,postinc1
 34873  013C52  006F FF7B FFE6     	movff	postinc2,postinc1
 34874  013C58  006F FF7B FFE6     	movff	postinc2,postinc1
 34875  013C5E  EE21  F373         	lfsr	2,_C+116	;volatile
 34876  013C62  006F FF7B FFE6     	movff	postinc2,postinc1
 34877  013C68  006F FF7B FFE6     	movff	postinc2,postinc1
 34878  013C6E  006F FF7B FFE6     	movff	postinc2,postinc1
 34879  013C74  006F FF7B FFE6     	movff	postinc2,postinc1
 34880  013C7A  EE21  F37B         	lfsr	2,_C+124	;volatile
 34881  013C7E  006F FF7B FFE6     	movff	postinc2,postinc1
 34882  013C84  006F FF7B FFE6     	movff	postinc2,postinc1
 34883  013C8A  006F FF7B FFE6     	movff	postinc2,postinc1
 34884  013C90  006F FF7B FFE6     	movff	postinc2,postinc1
 34885  013C96  EE21  F37F         	lfsr	2,_C+128	;volatile
 34886  013C9A  006F FF7B FFE6     	movff	postinc2,postinc1
 34887  013CA0  006F FF7B FFE6     	movff	postinc2,postinc1
 34888  013CA6  006F FF7B FFE6     	movff	postinc2,postinc1
 34889  013CAC  006F FF7B FFE6     	movff	postinc2,postinc1
 34890  013CB2  EE21  F363         	lfsr	2,_C+100	;volatile
 34891  013CB6  006F FF7B FFE6     	movff	postinc2,postinc1
 34892  013CBC  006F FF7B FFE6     	movff	postinc2,postinc1
 34893  013CC2  006F FF7B FFE6     	movff	postinc2,postinc1
 34894  013CC8  006F FF7B FFE6     	movff	postinc2,postinc1
 34895  013CCE  EE21  F34B         	lfsr	2,_C+76	;volatile
 34896  013CD2  006F FF7B FFE6     	movff	postinc2,postinc1
 34897  013CD8  006F FF7B FFE6     	movff	postinc2,postinc1
 34898  013CDE  006F FF7B FFE6     	movff	postinc2,postinc1
 34899  013CE4  006F FF7B FFE6     	movff	postinc2,postinc1
 34900  013CEA  EE21  F34F         	lfsr	2,_C+80	;volatile
 34901  013CEE  006F FF7B FFE6     	movff	postinc2,postinc1
 34902  013CF4  006F FF7B FFE6     	movff	postinc2,postinc1
 34903  013CFA  006F FF7B FFE6     	movff	postinc2,postinc1
 34904  013D00  006F FF7B FFE6     	movff	postinc2,postinc1
 34905  013D06  EE21  F353         	lfsr	2,_C+84	;volatile
 34906  013D0A  006F FF7B FFE6     	movff	postinc2,postinc1
 34907  013D10  006F FF7B FFE6     	movff	postinc2,postinc1
 34908  013D16  006F FF7B FFE6     	movff	postinc2,postinc1
 34909  013D1C  006F FF7B FFE6     	movff	postinc2,postinc1
 34910  013D22  0060  F623  FFE6   	movff	_V+129,postinc1
 34911  013D28  0060  F627  FFE6   	movff	_V+130,postinc1
 34912  013D2E  0060  F62B  FFE6   	movff	_V+131,postinc1
 34913  013D34  0060  F62F  FFE6   	movff	_V+132,postinc1
 34914  013D3A  0E31               	movlw	49
 34915  013D3C  6EE6               	movwf	postinc1,c
 34916  013D3E  0E00               	movlw	0
 34917  013D40  6EE6               	movwf	postinc1,c
 34918  013D42  0ED7               	movlw	low STR_64
 34919  013D44  6EE6               	movwf	postinc1,c
 34920  013D46  0EFB               	movlw	high STR_64
 34921  013D48  6EE6               	movwf	postinc1,c
 34922                           
 34923                           ;stkvar	_log_ptr @ sp[(-90)+4]
 34924  013D4A  0EAA               	movlw	-86
 34925  013D4C  006F FF8F FFE6     	movff	plusw1,postinc1
 34926  013D52  006F FF8F FFE6     	movff	plusw1,postinc1
 34927  013D58  0E56               	movlw	86
 34928  013D5A  6EE6               	movwf	postinc1,c
 34929  013D5C  EC08  F0CF         	call	_sprintf	;wreg free
 34930                           
 34931                           ; BSR set to: 0
 34932                           ;bsoc.c: 97:   StartTimer(TMR_DISPLAY, 125);
 34933  013D60  0E7D               	movlw	125
 34934  013D62  6EE6               	movwf	postinc1,c
 34935  013D64  0E00               	movlw	0
 34936  013D66  6EE6               	movwf	postinc1,c
 34937  013D68  0E0A               	movlw	10
 34938  013D6A  6EE6               	movwf	postinc1,c
 34939  013D6C  EC66  F0DD         	call	_StartTimer	;wreg free
 34940                           
 34941                           ;bsoc.c: 98:   send_port_data_dma(strlen((char*) log_ptr));
 34942                           ;stkvar	_log_ptr @ sp[(-6)+4]
 34943  013D70  0EFE               	movlw	-2
 34944  013D72  006F FF8F FFE6     	movff	plusw1,postinc1
 34945  013D78  006F FF8F FFE6     	movff	plusw1,postinc1
 34946  013D7E  EC24  F0D6         	call	_strlen	;wreg free
 34947  013D82  0060  F007  FFE6   	movff	btemp,postinc1
 34948  013D88  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34949  013D8E  EC50  F0DB         	call	_send_port_data_dma	;wreg free
 34950  013D92                     l13155:
 34951                           
 34952                           ;bsoc.c: 100:  if (log_update_wait >= 10)
 34953  013D92  0E09               	movlw	9
 34954  013D94  6440               	cpfsgt	calc_bsoc@log_update_wait^0,c
 34955  013D96  D001               	goto	l2112
 34956                           
 34957                           ;bsoc.c: 101:   log_update_wait = 0;
 34958  013D98  6A40               	clrf	calc_bsoc@log_update_wait^0,c
 34959  013D9A                     l2112:
 34960                           
 34961                           ;bsoc.c: 103:  C.update = 0;
 34962  013D9A  0E00               	movlw	0
 34963  013D9C  006F FFA0  F7B7    	movff	wreg,_C+184	;volatile
 34964                           
 34965                           ;bsoc.c: 105:  do { LATEbits.LATE1 = 0; } while(0);
 34966  013DA2  92BE               	bcf	190,1,c	;volatile
 34967                           
 34968                           ; _calc_bsoc: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 34969  013DA4  0EFA               	movlw	250
 34970  013DA6  26E1               	addwf	fsr1l,f,c
 34971  013DA8  0EFF               	movlw	255
 34972  013DAA  22E2               	addwfc	fsr1h,f,c
 34973  013DAC  0012               	return		;funcret
 34974  013DAE                     __end_of_calc_bsoc:
 34975                           	opt callstack 0
 34976                           
 34977 ;; *************** function _send_port_data_dma *****************
 34978 ;; Defined at:
 34979 ;;		line 398 in file "eadog.c"
 34980 ;; Parameters:    Size  Location     Type
 34981 ;;  dsize           2  [STACK] unsigned short 
 34982 ;; Auto vars:     Size  Location     Type
 34983 ;;		None
 34984 ;; Return value:  Size  Location     Type
 34985 ;;                  1  [STACK] void 
 34986 ;; Registers used:
 34987 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 34988 ;; Tracked objects:
 34989 ;;		On entry : 0/0
 34990 ;;		On exit  : 3F/3B
 34991 ;;		Unchanged: 0/0
 34992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34997 ;;Total ram usage:        0 bytes
 34998 ;; Hardware stack levels used:    1
 34999 ;; Hardware stack levels required when called:    3
 35000 ;; This function calls:
 35001 ;;		Nothing
 35002 ;; This function is called by:
 35003 ;;		_calc_bsoc
 35004 ;; This function uses a reentrant model
 35005 ;;
 35006                           
 35007                           	psect	text159
 35008  01B6A0                     __ptext159:
 35009                           	opt callstack 0
 35010  01B6A0                     _send_port_data_dma:
 35011                           	opt callstack 10
 35012                           
 35013                           ;eadog.c: 398: void send_port_data_dma(uint16_t dsize);eadog.c: 399: {;eadog.c: 400:  if
      +                           (dsize > 512)
 35014                           ;stkvar	_dsize @ sp[(0)+-2]
 35015                           
 35016                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35017                           ;incstack = 0
 35018  01B6A0  0EFE               	movlw	-2
 35019  01B6A2  04E3               	decf	plusw1,w,c
 35020  01B6A4  0EFF               	movlw	-1
 35021  01B6A6  006F FF8C  F001    	movff	plusw1,btemp
 35022  01B6AC  0E02               	movlw	2
 35023  01B6AE  5A01               	subwfb	btemp^0,f,c
 35024  01B6B0  A0D8               	btfss	status,0,c
 35025  01B6B2  D00C               	goto	l10129
 35026                           
 35027                           ;eadog.c: 401:   dsize = 512;
 35028  01B6B4  0E00               	movlw	0
 35029  01B6B6  6E0B               	movwf	(btemp+10)^0,c
 35030  01B6B8  0E02               	movlw	2
 35031  01B6BA  6E0C               	movwf	(btemp+11)^0,c
 35032                           
 35033                           ;stkvar	_dsize @ sp[(0)+-2]
 35034  01B6BC  0EFE               	movlw	-2
 35035  01B6BE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 35036  01B6C4  0EFF               	movlw	-1
 35037  01B6C6  0060  F033  FFE3   	movff	btemp+11,plusw1
 35038  01B6CC                     l10129:
 35039                           
 35040                           ;eadog.c: 403:  DMA2CON0bits.EN = 0;
 35041  01B6CC  013B               	movlb	59	; () banked
 35042  01B6CE  9FDC               	bcf	220,7,b	;volatile
 35043                           
 35044                           ; BSR set to: 59
 35045                           ;eadog.c: 404:  DMA2SSZ = dsize;
 35046                           ;stkvar	_dsize @ sp[(0)+-2]
 35047  01B6D0  0EFE               	movlw	-2
 35048  01B6D2  006F FF8F FBD7     	movff	plusw1,15319	;volatile
 35049  01B6D8  0EFF               	movlw	-1
 35050  01B6DA  006F FF8F FBD8     	movff	plusw1,15320	;volatile
 35051                           
 35052                           ; BSR set to: 59
 35053                           ;eadog.c: 405:  DMA2DSZ = 1;
 35054  01B6E0  0E00               	movlw	0
 35055  01B6E2  6FCF               	movwf	207,b	;volatile
 35056  01B6E4  0E01               	movlw	1
 35057  01B6E6  6FCE               	movwf	206,b	;volatile
 35058                           
 35059                           ; BSR set to: 59
 35060                           ;eadog.c: 406:  DMA2CON0bits.EN = 1;
 35061  01B6E8  8FDC               	bsf	220,7,b	;volatile
 35062                           
 35063                           ; BSR set to: 59
 35064                           ;eadog.c: 407:  DMA2CON0bits.DMA2SIRQEN = 1;
 35065  01B6EA  8DDC               	bsf	220,6,b	;volatile
 35066                           
 35067                           ; BSR set to: 59
 35068                           ; _send_port_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 35069  01B6EC  52E5               	movf	postdec1,f,c
 35070  01B6EE  52E5               	movf	postdec1,f,c
 35071  01B6F0  0012               	return		;funcret
 35072  01B6F2                     __end_of_send_port_data_dma:
 35073                           	opt callstack 0
 35074                           
 35075 ;; *************** function _port_data_dma_ptr *****************
 35076 ;; Defined at:
 35077 ;;		line 413 in file "eadog.c"
 35078 ;; Parameters:    Size  Location     Type
 35079 ;;		None
 35080 ;; Auto vars:     Size  Location     Type
 35081 ;;		None
 35082 ;; Return value:  Size  Location     Type
 35083 ;;                  2  [STACK] PTR unsigned char 
 35084 ;; Registers used:
 35085 ;;		wreg, status,2, status,0, btemp, btemp+1
 35086 ;; Tracked objects:
 35087 ;;		On entry : 3F/1
 35088 ;;		On exit  : 0/0
 35089 ;;		Unchanged: 0/0
 35090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35095 ;;Total ram usage:        0 bytes
 35096 ;; Hardware stack levels used:    1
 35097 ;; Hardware stack levels required when called:    3
 35098 ;; This function calls:
 35099 ;;		Nothing
 35100 ;; This function is called by:
 35101 ;;		_calc_bsoc
 35102 ;; This function uses a reentrant model
 35103 ;;
 35104                           
 35105                           	psect	text160
 35106  01C518                     __ptext160:
 35107                           	opt callstack 0
 35108  01C518                     _port_data_dma_ptr:
 35109                           	opt callstack 10
 35110                           
 35111                           ;eadog.c: 415:  return port_data;
 35112                           
 35113                           ; BSR set to: 59
 35114                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35115                           ;incstack = 0
 35116  01C518  0EFF               	movlw	low _port_data
 35117  01C51A  6E01               	movwf	btemp^0,c
 35118  01C51C  0E04               	movlw	high _port_data
 35119  01C51E  6E02               	movwf	(btemp+1)^0,c
 35120                           
 35121                           ; _port_data_dma_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 35122  01C520  0012               	return		;funcret
 35123  01C522                     __end_of_port_data_dma_ptr:
 35124                           	opt callstack 0
 35125                           
 35126 ;; *************** function ___asfladd *****************
 35127 ;; Defined at:
 35128 ;;		line 6 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/pic18/asfladd.c"
 35129 ;; Parameters:    Size  Location     Type
 35130 ;;  f1p             2  [STACK] PTR 
 35131 ;;		 -> C(299), 
 35132 ;;  f2              4  [STACK] PTR 
 35133 ;; Auto vars:     Size  Location     Type
 35134 ;;		None
 35135 ;; Return value:  Size  Location     Type
 35136 ;;                  4  [STACK] PTR 
 35137 ;; Registers used:
 35138 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 35139 ;; Tracked objects:
 35140 ;;		On entry : 0/0
 35141 ;;		On exit  : 0/0
 35142 ;;		Unchanged: 0/0
 35143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35148 ;;Total ram usage:        0 bytes
 35149 ;; Hardware stack levels used:    1
 35150 ;; Hardware stack levels required when called:    4
 35151 ;; This function calls:
 35152 ;;		___fladd
 35153 ;; This function is called by:
 35154 ;;		_calc_bsoc
 35155 ;; This function uses a reentrant model
 35156 ;;
 35157                           
 35158                           	psect	text161
 35159  01B0B4                     __ptext161:
 35160                           	opt callstack 0
 35161  01B0B4                     ___asfladd:
 35162                           	opt callstack 9
 35163                           
 35164                           ;	Return value of ___asfladd is never used
 35165                           ;stkvar	_f2 @ sp[(0)+-6]
 35166                           
 35167                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35168                           ;incstack = 0
 35169  01B0B4  0EFA               	movlw	-6
 35170  01B0B6  006F FF8F FFE6     	movff	plusw1,postinc1
 35171  01B0BC  006F FF8F FFE6     	movff	plusw1,postinc1
 35172  01B0C2  006F FF8F FFE6     	movff	plusw1,postinc1
 35173  01B0C8  006F FF8F FFE6     	movff	plusw1,postinc1
 35174                           
 35175                           ;stkvar	_f1p @ sp[(-4)+-2]
 35176  01B0CE  0EFA               	movlw	-6
 35177  01B0D0  006F FF8F FFD9     	movff	plusw1,fsr2l
 35178  01B0D6  0EFB               	movlw	-5
 35179  01B0D8  006F FF8F FFDA     	movff	plusw1,fsr2h
 35180  01B0DE  006F FF7B FFE6     	movff	postinc2,postinc1
 35181  01B0E4  006F FF7B FFE6     	movff	postinc2,postinc1
 35182  01B0EA  006F FF7B FFE6     	movff	postinc2,postinc1
 35183  01B0F0  006F FF7B FFE6     	movff	postinc2,postinc1
 35184  01B0F6  ECEC  F0A2         	call	___fladd	;wreg free
 35185                           
 35186                           ;stkvar	_f1p @ sp[(0)+-2]
 35187  01B0FA  0EFE               	movlw	-2
 35188  01B0FC  006F FF8F FFD9     	movff	plusw1,fsr2l
 35189  01B102  0EFF               	movlw	-1
 35190  01B104  006F FF8F FFDA     	movff	plusw1,fsr2h
 35191  01B10A  0060  F007  FFDE   	movff	btemp,postinc2
 35192  01B110  0060  F00B  FFDE   	movff	btemp+1,postinc2
 35193  01B116  0060  F00F  FFDE   	movff	btemp+2,postinc2
 35194  01B11C  0060  F013  FFDE   	movff	btemp+3,postinc2
 35195                           
 35196                           ; ___asfladd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 35197  01B122  0EFA               	movlw	250
 35198  01B124  26E1               	addwf	fsr1l,f,c
 35199  01B126  0EFF               	movlw	255
 35200  01B128  22E2               	addwfc	fsr1h,f,c
 35201  01B12A  0012               	return		;funcret
 35202  01B12C                     __end_of___asfladd:
 35203                           	opt callstack 0
 35204                           
 35205 ;; *************** function _INT0_ISR *****************
 35206 ;; Defined at:
 35207 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 35208 ;; Parameters:    Size  Location     Type
 35209 ;;		None
 35210 ;; Auto vars:     Size  Location     Type
 35211 ;;		None
 35212 ;; Return value:  Size  Location     Type
 35213 ;;                  1    wreg      void 
 35214 ;; Registers used:
 35215 ;;		wreg, status,2, status,0, pclath, tosl
 35216 ;; Tracked objects:
 35217 ;;		On entry : 0/0
 35218 ;;		On exit  : 0/0
 35219 ;;		Unchanged: 0/0
 35220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35224 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35225 ;;Total ram usage:        0 bytes
 35226 ;; Hardware stack levels used:    1
 35227 ;; Hardware stack levels required when called:    2
 35228 ;; This function calls:
 35229 ;;		_INT0_CallBack
 35230 ;; This function is called by:
 35231 ;;		Interrupt level 2
 35232 ;; This function uses a non-reentrant model
 35233 ;;
 35234                           
 35235                           	psect	text162
 35236  01C500                     __ptext162:
 35237                           	opt callstack 0
 35238  01C500                     _INT0_ISR:
 35239                           	opt callstack 2
 35240                           
 35241                           ;incstack = 0
 35242  01C500  EE14  F15E         	lfsr	1,___inthi_sp
 35243                           
 35244                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 35245  01C504  0139               	movlb	57	; () banked
 35246  01C506  91A1               	bcf	161,0,b	;volatile
 35247                           
 35248                           ; BSR set to: 57
 35249                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 35250  01C508  EC1C  F0E1         	call	_INT0_CallBack	;wreg free
 35251  01C50C  0011               	retfie		f
 35252  01C50E                     __end_of_INT0_ISR:
 35253                           	opt callstack 0
 35254                           
 35255 ;; *************** function _INT0_CallBack *****************
 35256 ;; Defined at:
 35257 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 35258 ;; Parameters:    Size  Location     Type
 35259 ;;		None
 35260 ;; Auto vars:     Size  Location     Type
 35261 ;;		None
 35262 ;; Return value:  Size  Location     Type
 35263 ;;                  1  [STACK] void 
 35264 ;; Registers used:
 35265 ;;		wreg, status,2, status,0, pclath, tosl
 35266 ;; Tracked objects:
 35267 ;;		On entry : 3F/39
 35268 ;;		On exit  : 0/0
 35269 ;;		Unchanged: 0/0
 35270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35274 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35275 ;;Total ram usage:        0 bytes
 35276 ;; Hardware stack levels used:    1
 35277 ;; Hardware stack levels required when called:    1
 35278 ;; This function calls:
 35279 ;;		Absolute function
 35280 ;;		_INT0_DefaultInterruptHandler
 35281 ;; This function is called by:
 35282 ;;		_INT0_ISR
 35283 ;; This function uses a reentrant model
 35284 ;;
 35285                           
 35286                           	psect	text163
 35287  01C238                     __ptext163:
 35288                           	opt callstack 0
 35289  01C238                     _INT0_CallBack:
 35290                           	opt callstack 2
 35291                           
 35292                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 35293                           
 35294                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35295                           ;incstack = 0
 35296  01C238  0100               	movlb	0	; () banked
 35297  01C23A  5197               	movf	_INT0_InterruptHandler& (0+255),w,b
 35298  01C23C  1198               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 35299  01C23E  1199               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 35300  01C240  B4D8               	btfsc	status,2,c
 35301  01C242  0012               	return	
 35302                           
 35303                           ; BSR set to: 0
 35304                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 35305  01C244  D801               	call	u1007_48
 35306  01C246  0012               	return	
 35307  01C248                     u1007_48:
 35308  01C248  0005               	push	
 35309  01C24A  6EFA               	movwf	pclath,c
 35310  01C24C  5197               	movf	_INT0_InterruptHandler& (0+255),w,b
 35311  01C24E  6EFD               	movwf	tosl,c
 35312  01C250  5198               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 35313  01C252  6EFE               	movwf	tosh,c
 35314  01C254  5199               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 35315  01C256  6EFF               	movwf	tosu,c
 35316  01C258  50FA               	movf	pclath,w,c
 35317  01C25A  0012               	return		;indir
 35318  01C25C                     __end_of_INT0_CallBack:
 35319                           	opt callstack 0
 35320                           
 35321 ;; *************** function _INT0_DefaultInterruptHandler *****************
 35322 ;; Defined at:
 35323 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 35324 ;; Parameters:    Size  Location     Type
 35325 ;;		None
 35326 ;; Auto vars:     Size  Location     Type
 35327 ;;		None
 35328 ;; Return value:  Size  Location     Type
 35329 ;;                  1  [STACK] void 
 35330 ;; Registers used:
 35331 ;;		None
 35332 ;; Tracked objects:
 35333 ;;		On entry : 3F/0
 35334 ;;		On exit  : 0/0
 35335 ;;		Unchanged: 0/0
 35336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35341 ;;Total ram usage:        0 bytes
 35342 ;; Hardware stack levels used:    1
 35343 ;; This function calls:
 35344 ;;		Nothing
 35345 ;; This function is called by:
 35346 ;;		_EXT_INT_Initialize
 35347 ;;		_INT0_CallBack
 35348 ;; This function uses a reentrant model
 35349 ;;
 35350                           
 35351                           	psect	text164
 35352  01C592                     __ptext164:
 35353                           	opt callstack 0
 35354  01C592                     _INT0_DefaultInterruptHandler:
 35355                           	opt callstack 2
 35356                           
 35357                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 35358                           
 35359                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35360                           ;incstack = 0
 35361  01C592  0012               	return		;funcret
 35362  01C594                     __end_of_INT0_DefaultInterruptHandler:
 35363                           	opt callstack 0
 35364                           
 35365 ;; *************** function _Default_ISR *****************
 35366 ;; Defined at:
 35367 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 35368 ;; Parameters:    Size  Location     Type
 35369 ;;		None
 35370 ;; Auto vars:     Size  Location     Type
 35371 ;;		None
 35372 ;; Return value:  Size  Location     Type
 35373 ;;                  1    wreg      void 
 35374 ;; Registers used:
 35375 ;;		None
 35376 ;; Tracked objects:
 35377 ;;		On entry : 0/0
 35378 ;;		On exit  : 0/0
 35379 ;;		Unchanged: 0/0
 35380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35385 ;;Total ram usage:        0 bytes
 35386 ;; Hardware stack levels used:    1
 35387 ;; This function calls:
 35388 ;;		Nothing
 35389 ;; This function is called by:
 35390 ;;		Interrupt level 2
 35391 ;; This function uses a non-reentrant model
 35392 ;;
 35393                           
 35394                           	psect	text165
 35395  01C588                     __ptext165:
 35396                           	opt callstack 0
 35397  01C588                     _Default_ISR:
 35398                           	opt callstack 4
 35399                           
 35400                           ;incstack = 0
 35401  01C588  EE14  F15E         	lfsr	1,___inthi_sp
 35402  01C58C  0011               	retfie		f
 35403  01C58E                     __end_of_Default_ISR:
 35404                           	opt callstack 0
 35405                           
 35406 ;; *************** function _ADCC_ISR *****************
 35407 ;; Defined at:
 35408 ;;		line 314 in file "mcc_generated_files/adcc.c"
 35409 ;; Parameters:    Size  Location     Type
 35410 ;;		None
 35411 ;; Auto vars:     Size  Location     Type
 35412 ;;		None
 35413 ;; Return value:  Size  Location     Type
 35414 ;;                  1    wreg      void 
 35415 ;; Registers used:
 35416 ;;		wreg, status,2, status,0, pclath, tosl
 35417 ;; Tracked objects:
 35418 ;;		On entry : 0/0
 35419 ;;		On exit  : 0/0
 35420 ;;		Unchanged: 0/0
 35421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35426 ;;Total ram usage:        0 bytes
 35427 ;; Hardware stack levels used:    1
 35428 ;; Hardware stack levels required when called:    1
 35429 ;; This function calls:
 35430 ;;		Absolute function
 35431 ;;		_ADCC_DefaultInterruptHandler
 35432 ;;		_adc_int_handler
 35433 ;; This function is called by:
 35434 ;;		Interrupt level 2
 35435 ;; This function uses a non-reentrant model
 35436 ;;
 35437                           
 35438                           	psect	text166
 35439  01BECC                     __ptext166:
 35440                           	opt callstack 0
 35441  01BECC                     _ADCC_ISR:
 35442                           	opt callstack 3
 35443                           
 35444                           ;incstack = 0
 35445  01BECC  EE14  F15E         	lfsr	1,___inthi_sp
 35446                           
 35447                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 35448  01BED0  0139               	movlb	57	; () banked
 35449  01BED2  95A1               	bcf	161,2,b	;volatile
 35450                           
 35451                           ; BSR set to: 57
 35452                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 35453  01BED4  0100               	movlb	0	; () banked
 35454  01BED6  5188               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 35455  01BED8  1189               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 35456  01BEDA  118A               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 35457  01BEDC  B4D8               	btfsc	status,2,c
 35458  01BEDE  0011               	retfie		f
 35459                           
 35460                           ; BSR set to: 0
 35461                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 35462  01BEE0  D801               	call	i2u1054_48
 35463  01BEE2  0011               	retfie		f
 35464  01BEE4                     i2u1054_48:
 35465  01BEE4  0005               	push	
 35466  01BEE6  6EFA               	movwf	pclath,c
 35467  01BEE8  5188               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 35468  01BEEA  6EFD               	movwf	tosl,c
 35469  01BEEC  5189               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 35470  01BEEE  6EFE               	movwf	tosh,c
 35471  01BEF0  518A               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 35472  01BEF2  6EFF               	movwf	tosu,c
 35473  01BEF4  50FA               	movf	pclath,w,c
 35474  01BEF6  0012               	return		;indir
 35475  01BEF8                     __end_of_ADCC_ISR:
 35476                           	opt callstack 0
 35477                           
 35478 ;; *************** function _adc_int_t_handler *****************
 35479 ;; Defined at:
 35480 ;;		line 168 in file "daq.c"
 35481 ;; Parameters:    Size  Location     Type
 35482 ;;		None
 35483 ;; Auto vars:     Size  Location     Type
 35484 ;;		None
 35485 ;; Return value:  Size  Location     Type
 35486 ;;                  1  [STACK] void 
 35487 ;; Registers used:
 35488 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 35489 ;; Tracked objects:
 35490 ;;		On entry : 3F/0
 35491 ;;		On exit  : 1/0
 35492 ;;		Unchanged: 0/0
 35493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35498 ;;Total ram usage:        0 bytes
 35499 ;; Hardware stack levels used:    1
 35500 ;; Hardware stack levels required when called:    1
 35501 ;; This function calls:
 35502 ;;		_ADCC_DischargeSampleCapacitor
 35503 ;;		_ADCC_StartConversion
 35504 ;; This function is called by:
 35505 ;;		_start_adc_scan
 35506 ;;		_ADCC_ThresholdISR
 35507 ;; This function uses a reentrant model
 35508 ;;
 35509                           
 35510                           	psect	text167
 35511  01B036                     __ptext167:
 35512                           	opt callstack 0
 35513  01B036                     _adc_int_t_handler:
 35514                           	opt callstack 2
 35515                           
 35516                           ;daq.c: 173:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 35517                           
 35518                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35519                           ;incstack = 0
 35520  01B036  013E               	movlb	62	; () banked
 35521  01B038  51E6               	movf	230,w,b	;volatile
 35522  01B03A  006F FB9C  F001    	movff	16103,btemp	;volatile
 35523  01B040  6A02               	clrf	(btemp+1)^0,c
 35524  01B042  0060  F004  F002   	movff	btemp,btemp+1
 35525  01B048  6A01               	clrf	btemp^0,c
 35526  01B04A  2601               	addwf	btemp^0,f,c
 35527  01B04C  0E00               	movlw	0
 35528  01B04E  2202               	addwfc	(btemp+1)^0,f,c
 35529  01B050  0100               	movlb	0	; () banked
 35530  01B052  51E1               	movf	(_R+50)& (0+255),w,b	;volatile
 35531  01B054  0D02               	mullw	2
 35532  01B056  50F3               	movf	243,w,c
 35533  01B058  0FAF               	addlw	low _R
 35534  01B05A  6ED9               	movwf	fsr2l,c
 35535  01B05C  6ADA               	clrf	fsr2h,c
 35536  01B05E  0060  F007  FFDE   	movff	btemp,postinc2
 35537  01B064  0060  F00B  FFDD   	movff	btemp+1,postdec2
 35538  01B06A                     l11407:
 35539                           
 35540                           ;daq.c: 175:   if (++R.scan_index > 0XD) {
 35541  01B06A  0100               	movlb	0	; () banked
 35542  01B06C  2BE1               	incf	(_R+50)& (0+255),f,b	;volatile
 35543  01B06E  0E0D               	movlw	13
 35544  01B070  65E1               	cpfsgt	(_R+50)& (0+255),b	;volatile
 35545  01B072  D003               	goto	l11413
 35546                           
 35547                           ; BSR set to: 0
 35548                           ;daq.c: 176:    R.done = 1;
 35549  01B074  0E01               	movlw	1
 35550  01B076  6FE4               	movwf	(_R+53)& (0+255),b	;volatile
 35551  01B078  0012               	return	
 35552  01B07A                     l11413:
 35553                           
 35554                           ; BSR set to: 0
 35555                           ;daq.c: 182:  } while (!((R.scan_select >> R.scan_index) &0x1));
 35556  01B07A  0060  F384  F00C   	movff	_R+50,btemp+11	;volatile
 35557  01B080  EE20  F0E2         	lfsr	2,_R+51	;volatile
 35558  01B084  006F FF78  F009    	movff	postinc2,btemp+8
 35559  01B08A  006F FF74  F00A    	movff	postdec2,btemp+9
 35560  01B090  2A0C               	incf	(btemp+11)^0,f,c
 35561  01B092  D003               	goto	u1051_44
 35562  01B094                     u1051_45:
 35563  01B094  90D8               	bcf	status,0,c
 35564  01B096  320A               	rrcf	(btemp+9)^0,f,c
 35565  01B098  3209               	rrcf	(btemp+8)^0,f,c
 35566  01B09A                     u1051_44:
 35567  01B09A  2E0C               	decfsz	(btemp+11)^0,f,c
 35568  01B09C  D7FB               	goto	u1051_45
 35569  01B09E  A009               	btfss	(btemp+8)^0,0,c
 35570  01B0A0  D7E4               	goto	l11407
 35571                           
 35572                           ;daq.c: 183:  ADCC_DischargeSampleCapacitor();
 35573  01B0A2  ECA3  F0E2         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 35574                           
 35575                           ; BSR set to: 62
 35576                           ;daq.c: 184:  ADCC_StartConversion(R.scan_index & 0xf);
 35577  01B0A6  0100               	movlb	0	; () banked
 35578  01B0A8  51E1               	movf	(_R+50)& (0+255),w,b	;volatile
 35579  01B0AA  0B0F               	andlw	15
 35580  01B0AC  6EE6               	movwf	postinc1,c
 35581  01B0AE  EC42  F0E2         	call	_ADCC_StartConversion	;wreg free
 35582                           
 35583                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 35584  01B0B2  0012               	return		;funcret
 35585  01B0B4                     __end_of_adc_int_t_handler:
 35586                           	opt callstack 0
 35587                           
 35588 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 35589 ;; Defined at:
 35590 ;;		line 339 in file "mcc_generated_files/adcc.c"
 35591 ;; Parameters:    Size  Location     Type
 35592 ;;		None
 35593 ;; Auto vars:     Size  Location     Type
 35594 ;;		None
 35595 ;; Return value:  Size  Location     Type
 35596 ;;                  1  [STACK] void 
 35597 ;; Registers used:
 35598 ;;		None
 35599 ;; Tracked objects:
 35600 ;;		On entry : 3F/0
 35601 ;;		On exit  : 0/0
 35602 ;;		Unchanged: 0/0
 35603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35607 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35608 ;;Total ram usage:        0 bytes
 35609 ;; Hardware stack levels used:    1
 35610 ;; This function calls:
 35611 ;;		Nothing
 35612 ;; This function is called by:
 35613 ;;		_ADCC_Initialize
 35614 ;;		_ADCC_ISR
 35615 ;;		_ADCC_ThresholdISR
 35616 ;; This function uses a reentrant model
 35617 ;;
 35618                           
 35619                           	psect	text168
 35620  01C594                     __ptext168:
 35621                           	opt callstack 0
 35622  01C594                     _ADCC_DefaultInterruptHandler:
 35623                           	opt callstack 3
 35624                           
 35625                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 35626                           
 35627                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35628                           ;incstack = 0
 35629  01C594  0012               	return		;funcret
 35630  01C596                     __end_of_ADCC_DefaultInterruptHandler:
 35631                           	opt callstack 0
 35632                           
 35633 ;; *************** function _adc_int_handler *****************
 35634 ;; Defined at:
 35635 ;;		line 158 in file "daq.c"
 35636 ;; Parameters:    Size  Location     Type
 35637 ;;		None
 35638 ;; Auto vars:     Size  Location     Type
 35639 ;;		None
 35640 ;; Return value:  Size  Location     Type
 35641 ;;                  1  [STACK] void 
 35642 ;; Registers used:
 35643 ;;		None
 35644 ;; Tracked objects:
 35645 ;;		On entry : 3F/0
 35646 ;;		On exit  : 0/0
 35647 ;;		Unchanged: 0/0
 35648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35653 ;;Total ram usage:        0 bytes
 35654 ;; Hardware stack levels used:    1
 35655 ;; This function calls:
 35656 ;;		Nothing
 35657 ;; This function is called by:
 35658 ;;		_start_adc_scan
 35659 ;;		_ADCC_ISR
 35660 ;; This function uses a reentrant model
 35661 ;;
 35662                           
 35663                           	psect	text169
 35664  01C596                     __ptext169:
 35665                           	opt callstack 0
 35666  01C596                     _adc_int_handler:
 35667                           	opt callstack 3
 35668                           
 35669                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 35670                           
 35671                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35672                           ;incstack = 0
 35673  01C596  0012               	return		;funcret
 35674  01C598                     __end_of_adc_int_handler:
 35675                           	opt callstack 0
 35676                           
 35677 ;; *************** function _ADCC_ThresholdISR *****************
 35678 ;; Defined at:
 35679 ;;		line 327 in file "mcc_generated_files/adcc.c"
 35680 ;; Parameters:    Size  Location     Type
 35681 ;;		None
 35682 ;; Auto vars:     Size  Location     Type
 35683 ;;		None
 35684 ;; Return value:  Size  Location     Type
 35685 ;;                  1    wreg      void 
 35686 ;; Registers used:
 35687 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 35688 ;; Tracked objects:
 35689 ;;		On entry : 0/0
 35690 ;;		On exit  : 0/0
 35691 ;;		Unchanged: 0/0
 35692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35695 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35696 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35697 ;;Total ram usage:        5 bytes
 35698 ;; Hardware stack levels used:    1
 35699 ;; Hardware stack levels required when called:    2
 35700 ;; This function calls:
 35701 ;;		Absolute function
 35702 ;;		_ADCC_DefaultInterruptHandler
 35703 ;;		_adc_int_t_handler
 35704 ;; This function is called by:
 35705 ;;		Interrupt level 2
 35706 ;; This function uses a non-reentrant model
 35707 ;;
 35708                           
 35709                           	psect	text170
 35710  01B2E8                     __ptext170:
 35711                           	opt callstack 0
 35712  01B2E8                     _ADCC_ThresholdISR:
 35713                           	opt callstack 2
 35714                           
 35715                           ;incstack = 0
 35716  01B2E8  0060  F004  F021   	movff	btemp,??_ADCC_ThresholdISR
 35717  01B2EE  0060  F008  F022   	movff	btemp+1,??_ADCC_ThresholdISR+1
 35718  01B2F4  0060  F024  F023   	movff	btemp+8,??_ADCC_ThresholdISR+2
 35719  01B2FA  0060  F028  F024   	movff	btemp+9,??_ADCC_ThresholdISR+3
 35720  01B300  0060  F030  F025   	movff	btemp+11,??_ADCC_ThresholdISR+4
 35721  01B306  EE14  F15E         	lfsr	1,___inthi_sp
 35722                           
 35723                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 35724  01B30A  0139               	movlb	57	; () banked
 35725  01B30C  97A1               	bcf	161,3,b	;volatile
 35726                           
 35727                           ; BSR set to: 57
 35728                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 35729  01B30E  0100               	movlb	0	; () banked
 35730  01B310  5185               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 35731  01B312  1186               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 35732  01B314  1187               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 35733  01B316  B4D8               	btfsc	status,2,c
 35734  01B318  D00C               	goto	i2u1056_49
 35735                           
 35736                           ; BSR set to: 0
 35737                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 35738  01B31A  D801               	call	i2u1056_48
 35739  01B31C  D00A               	goto	i2u1056_49
 35740  01B31E                     i2u1056_48:
 35741  01B31E  0005               	push	
 35742  01B320  6EFA               	movwf	pclath,c
 35743  01B322  5185               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 35744  01B324  6EFD               	movwf	tosl,c
 35745  01B326  5186               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 35746  01B328  6EFE               	movwf	tosh,c
 35747  01B32A  5187               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 35748  01B32C  6EFF               	movwf	tosu,c
 35749  01B32E  50FA               	movf	pclath,w,c
 35750  01B330  0012               	return		;indir
 35751  01B332                     i2u1056_49:
 35752  01B332  0060  F094  F00C   	movff	??_ADCC_ThresholdISR+4,btemp+11
 35753  01B338  0060  F090  F00A   	movff	??_ADCC_ThresholdISR+3,btemp+9
 35754  01B33E  0060  F08C  F009   	movff	??_ADCC_ThresholdISR+2,btemp+8
 35755  01B344  0060  F088  F002   	movff	??_ADCC_ThresholdISR+1,btemp+1
 35756  01B34A  0060  F084  F001   	movff	??_ADCC_ThresholdISR,btemp
 35757  01B350  0011               	retfie		f
 35758  01B352                     __end_of_ADCC_ThresholdISR:
 35759                           	opt callstack 0
 35760                           
 35761 ;; *************** function _UART1_rx_vect_isr *****************
 35762 ;; Defined at:
 35763 ;;		line 181 in file "mcc_generated_files/uart1.c"
 35764 ;; Parameters:    Size  Location     Type
 35765 ;;		None
 35766 ;; Auto vars:     Size  Location     Type
 35767 ;;		None
 35768 ;; Return value:  Size  Location     Type
 35769 ;;                  1    wreg      void 
 35770 ;; Registers used:
 35771 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 35772 ;; Tracked objects:
 35773 ;;		On entry : 0/0
 35774 ;;		On exit  : 0/0
 35775 ;;		Unchanged: 0/0
 35776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35781 ;;Total ram usage:        0 bytes
 35782 ;; Hardware stack levels used:    1
 35783 ;; Hardware stack levels required when called:    1
 35784 ;; This function calls:
 35785 ;;		Absolute function
 35786 ;;		_UART1_Receive_ISR
 35787 ;; This function is called by:
 35788 ;;		Interrupt level 2
 35789 ;; This function uses a non-reentrant model
 35790 ;;
 35791                           
 35792                           	psect	text171
 35793  01C130                     __ptext171:
 35794                           	opt callstack 0
 35795  01C130                     _UART1_rx_vect_isr:
 35796                           	opt callstack 3
 35797                           
 35798                           ;incstack = 0
 35799  01C130  EE14  F15E         	lfsr	1,___inthi_sp
 35800                           
 35801                           ;mcc_generated_files/uart1.c: 183:     if(UART1_RxInterruptHandler)
 35802  01C134  0100               	movlb	0	; () banked
 35803  01C136  518B               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 35804  01C138  118C               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 35805  01C13A  118D               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 35806  01C13C  B4D8               	btfsc	status,2,c
 35807  01C13E  0011               	retfie		f
 35808                           
 35809                           ; BSR set to: 0
 35810                           ;mcc_generated_files/uart1.c: 184: {;mcc_generated_files/uart1.c: 185:   UART1_RxInterru
      +                          ptHandler();
 35811  01C140  D801               	call	i2u1058_48
 35812  01C142  0011               	retfie		f
 35813  01C144                     i2u1058_48:
 35814  01C144  0005               	push	
 35815  01C146  6EFA               	movwf	pclath,c
 35816  01C148  518B               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 35817  01C14A  6EFD               	movwf	tosl,c
 35818  01C14C  518C               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 35819  01C14E  6EFE               	movwf	tosh,c
 35820  01C150  518D               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 35821  01C152  6EFF               	movwf	tosu,c
 35822  01C154  50FA               	movf	pclath,w,c
 35823  01C156  0012               	return		;indir
 35824  01C158                     __end_of_UART1_rx_vect_isr:
 35825                           	opt callstack 0
 35826                           
 35827 ;; *************** function _UART1_Receive_ISR *****************
 35828 ;; Defined at:
 35829 ;;		line 192 in file "mcc_generated_files/uart1.c"
 35830 ;; Parameters:    Size  Location     Type
 35831 ;;		None
 35832 ;; Auto vars:     Size  Location     Type
 35833 ;;		None
 35834 ;; Return value:  Size  Location     Type
 35835 ;;                  1  [STACK] void 
 35836 ;; Registers used:
 35837 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 35838 ;; Tracked objects:
 35839 ;;		On entry : 3F/0
 35840 ;;		On exit  : 3F/0
 35841 ;;		Unchanged: 0/0
 35842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35847 ;;Total ram usage:        0 bytes
 35848 ;; Hardware stack levels used:    1
 35849 ;; This function calls:
 35850 ;;		Nothing
 35851 ;; This function is called by:
 35852 ;;		_UART1_Initialize
 35853 ;;		_UART1_rx_vect_isr
 35854 ;; This function uses a reentrant model
 35855 ;;
 35856                           
 35857                           	psect	text172
 35858  01C2A2                     __ptext172:
 35859                           	opt callstack 0
 35860  01C2A2                     _UART1_Receive_ISR:
 35861                           	opt callstack 3
 35862                           
 35863                           ;mcc_generated_files/uart1.c: 195:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 35864                           
 35865                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35866                           ;incstack = 0
 35867  01C2A2  0ED9               	movlw	low _uart1RxBuffer
 35868  01C2A4  2447               	addwf	_uart1RxHead^0,w,c	;volatile
 35869  01C2A6  6ED9               	movwf	fsr2l,c
 35870  01C2A8  6ADA               	clrf	fsr2h,c
 35871  01C2AA  0E01               	movlw	high _uart1RxBuffer
 35872  01C2AC  22DA               	addwfc	fsr2h,f,c
 35873  01C2AE  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 35874  01C2B4  2A47               	incf	_uart1RxHead^0,f,c	;volatile
 35875                           
 35876                           ;mcc_generated_files/uart1.c: 196:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 35877  01C2B6  0E07               	movlw	7
 35878  01C2B8  6447               	cpfsgt	_uart1RxHead^0,c
 35879  01C2BA  D001               	goto	l10937
 35880                           
 35881                           ;mcc_generated_files/uart1.c: 197:     {;mcc_generated_files/uart1.c: 198:   uart1RxHead
      +                           = 0;
 35882  01C2BC  6A47               	clrf	_uart1RxHead^0,c	;volatile
 35883  01C2BE                     l10937:
 35884                           
 35885                           ;mcc_generated_files/uart1.c: 200:  uart1RxCount++;
 35886  01C2BE  0100               	movlb	0	; () banked
 35887  01C2C0  2BAD               	incf	_uart1RxCount& (0+255),f,b	;volatile
 35888                           
 35889                           ; BSR set to: 0
 35890                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 35891  01C2C2  0012               	return		;funcret
 35892  01C2C4                     __end_of_UART1_Receive_ISR:
 35893                           	opt callstack 0
 35894                           
 35895 ;; *************** function _UART2_tx_vect_isr *****************
 35896 ;; Defined at:
 35897 ;;		line 195 in file "mcc_generated_files/uart2.c"
 35898 ;; Parameters:    Size  Location     Type
 35899 ;;		None
 35900 ;; Auto vars:     Size  Location     Type
 35901 ;;		None
 35902 ;; Return value:  Size  Location     Type
 35903 ;;                  1    wreg      void 
 35904 ;; Registers used:
 35905 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 35906 ;; Tracked objects:
 35907 ;;		On entry : 0/0
 35908 ;;		On exit  : 0/0
 35909 ;;		Unchanged: 0/0
 35910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35914 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35915 ;;Total ram usage:        0 bytes
 35916 ;; Hardware stack levels used:    1
 35917 ;; Hardware stack levels required when called:    1
 35918 ;; This function calls:
 35919 ;;		Absolute function
 35920 ;;		_UART2_Transmit_ISR
 35921 ;; This function is called by:
 35922 ;;		Interrupt level 2
 35923 ;; This function uses a non-reentrant model
 35924 ;;
 35925                           
 35926                           	psect	text173
 35927  01C158                     __ptext173:
 35928                           	opt callstack 0
 35929  01C158                     _UART2_tx_vect_isr:
 35930                           	opt callstack 3
 35931                           
 35932                           ; BSR set to: 0
 35933                           ;incstack = 0
 35934  01C158  EE14  F15E         	lfsr	1,___inthi_sp
 35935                           
 35936                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 35937  01C15C  0100               	movlb	0	; () banked
 35938  01C15E  518E               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 35939  01C160  118F               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 35940  01C162  1190               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 35941  01C164  B4D8               	btfsc	status,2,c
 35942  01C166  0011               	retfie		f
 35943                           
 35944                           ; BSR set to: 0
 35945                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 35946  01C168  D801               	call	i2u1060_48
 35947  01C16A  0011               	retfie		f
 35948  01C16C                     i2u1060_48:
 35949  01C16C  0005               	push	
 35950  01C16E  6EFA               	movwf	pclath,c
 35951  01C170  518E               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 35952  01C172  6EFD               	movwf	tosl,c
 35953  01C174  518F               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 35954  01C176  6EFE               	movwf	tosh,c
 35955  01C178  5190               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 35956  01C17A  6EFF               	movwf	tosu,c
 35957  01C17C  50FA               	movf	pclath,w,c
 35958  01C17E  0012               	return		;indir
 35959  01C180                     __end_of_UART2_tx_vect_isr:
 35960                           	opt callstack 0
 35961                           
 35962 ;; *************** function _UART2_Transmit_ISR *****************
 35963 ;; Defined at:
 35964 ;;		line 213 in file "mcc_generated_files/uart2.c"
 35965 ;; Parameters:    Size  Location     Type
 35966 ;;		None
 35967 ;; Auto vars:     Size  Location     Type
 35968 ;;		None
 35969 ;; Return value:  Size  Location     Type
 35970 ;;                  1  [STACK] void 
 35971 ;; Registers used:
 35972 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 35973 ;; Tracked objects:
 35974 ;;		On entry : 3F/0
 35975 ;;		On exit  : 3B/39
 35976 ;;		Unchanged: 0/0
 35977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35982 ;;Total ram usage:        0 bytes
 35983 ;; Hardware stack levels used:    1
 35984 ;; This function calls:
 35985 ;;		Nothing
 35986 ;; This function is called by:
 35987 ;;		_UART2_Initialize
 35988 ;;		_UART2_tx_vect_isr
 35989 ;; This function uses a reentrant model
 35990 ;;
 35991                           
 35992                           	psect	text174
 35993  01BEF8                     __ptext174:
 35994                           	opt callstack 0
 35995  01BEF8                     _UART2_Transmit_ISR:
 35996                           	opt callstack 3
 35997                           
 35998                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 35999                           
 36000                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36001                           ;incstack = 0
 36002  01BEF8  0E40               	movlw	64
 36003  01BEFA  6045               	cpfslt	_uart2TxBufferRemaining^0,c
 36004  01BEFC  D010               	goto	l673
 36005                           
 36006                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 36007  01BEFE  0E00               	movlw	low _uart2TxBuffer
 36008  01BF00  2446               	addwf	_uart2TxTail^0,w,c	;volatile
 36009  01BF02  6ED9               	movwf	fsr2l,c
 36010  01BF04  6ADA               	clrf	fsr2h,c
 36011  01BF06  0E03               	movlw	high _uart2TxBuffer
 36012  01BF08  22DA               	addwfc	fsr2h,f,c
 36013  01BF0A  50DF               	movf	indf2,w,c
 36014  01BF0C  013D               	movlb	61	; () banked
 36015  01BF0E  6FD2               	movwf	210,b	;volatile
 36016                           
 36017                           ; BSR set to: 61
 36018  01BF10  2A46               	incf	_uart2TxTail^0,f,c	;volatile
 36019                           
 36020                           ; BSR set to: 61
 36021                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 36022  01BF12  0E3F               	movlw	63
 36023  01BF14  6446               	cpfsgt	_uart2TxTail^0,c
 36024  01BF16  D001               	goto	l10949
 36025                           
 36026                           ; BSR set to: 61
 36027                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 36028  01BF18  6A46               	clrf	_uart2TxTail^0,c	;volatile
 36029  01BF1A                     l10949:
 36030                           
 36031                           ; BSR set to: 61
 36032                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 36033  01BF1A  2A45               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 36034                           
 36035                           ;mcc_generated_files/uart2.c: 224:     }
 36036  01BF1C  0012               	return	
 36037  01BF1E                     l673:
 36038                           
 36039                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 36040  01BF1E  0139               	movlb	57	; () banked
 36041  01BF20  9796               	bcf	150,3,b	;volatile
 36042                           
 36043                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 36044  01BF22  0012               	return		;funcret
 36045  01BF24                     __end_of_UART2_Transmit_ISR:
 36046                           	opt callstack 0
 36047                           
 36048 ;; *************** function _UART2_rx_vect_isr *****************
 36049 ;; Defined at:
 36050 ;;		line 203 in file "mcc_generated_files/uart2.c"
 36051 ;; Parameters:    Size  Location     Type
 36052 ;;		None
 36053 ;; Auto vars:     Size  Location     Type
 36054 ;;		None
 36055 ;; Return value:  Size  Location     Type
 36056 ;;                  1    wreg      void 
 36057 ;; Registers used:
 36058 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 36059 ;; Tracked objects:
 36060 ;;		On entry : 0/0
 36061 ;;		On exit  : 0/0
 36062 ;;		Unchanged: 0/0
 36063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36067 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36068 ;;Total ram usage:        0 bytes
 36069 ;; Hardware stack levels used:    1
 36070 ;; Hardware stack levels required when called:    1
 36071 ;; This function calls:
 36072 ;;		Absolute function
 36073 ;;		_UART2_Receive_ISR
 36074 ;; This function is called by:
 36075 ;;		Interrupt level 2
 36076 ;; This function uses a non-reentrant model
 36077 ;;
 36078                           
 36079                           	psect	text175
 36080  01C180                     __ptext175:
 36081                           	opt callstack 0
 36082  01C180                     _UART2_rx_vect_isr:
 36083                           	opt callstack 3
 36084                           
 36085                           ;incstack = 0
 36086  01C180  EE14  F15E         	lfsr	1,___inthi_sp
 36087                           
 36088                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 36089  01C184  0100               	movlb	0	; () banked
 36090  01C186  5191               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 36091  01C188  1192               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 36092  01C18A  1193               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 36093  01C18C  B4D8               	btfsc	status,2,c
 36094  01C18E  0011               	retfie		f
 36095                           
 36096                           ; BSR set to: 0
 36097                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 36098  01C190  D801               	call	i2u1062_48
 36099  01C192  0011               	retfie		f
 36100  01C194                     i2u1062_48:
 36101  01C194  0005               	push	
 36102  01C196  6EFA               	movwf	pclath,c
 36103  01C198  5191               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 36104  01C19A  6EFD               	movwf	tosl,c
 36105  01C19C  5192               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 36106  01C19E  6EFE               	movwf	tosh,c
 36107  01C1A0  5193               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 36108  01C1A2  6EFF               	movwf	tosu,c
 36109  01C1A4  50FA               	movf	pclath,w,c
 36110  01C1A6  0012               	return		;indir
 36111  01C1A8                     __end_of_UART2_rx_vect_isr:
 36112                           	opt callstack 0
 36113                           
 36114 ;; *************** function _UART2_Receive_ISR *****************
 36115 ;; Defined at:
 36116 ;;		line 233 in file "mcc_generated_files/uart2.c"
 36117 ;; Parameters:    Size  Location     Type
 36118 ;;		None
 36119 ;; Auto vars:     Size  Location     Type
 36120 ;;		None
 36121 ;; Return value:  Size  Location     Type
 36122 ;;                  1  [STACK] void 
 36123 ;; Registers used:
 36124 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 36125 ;; Tracked objects:
 36126 ;;		On entry : 3F/0
 36127 ;;		On exit  : 3F/0
 36128 ;;		Unchanged: 0/0
 36129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36134 ;;Total ram usage:        0 bytes
 36135 ;; Hardware stack levels used:    1
 36136 ;; This function calls:
 36137 ;;		Nothing
 36138 ;; This function is called by:
 36139 ;;		_UART2_Initialize
 36140 ;;		_UART2_rx_vect_isr
 36141 ;; This function uses a reentrant model
 36142 ;;
 36143                           
 36144                           	psect	text176
 36145  01C2E4                     __ptext176:
 36146                           	opt callstack 0
 36147  01C2E4                     _UART2_Receive_ISR:
 36148                           	opt callstack 3
 36149                           
 36150                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 36151                           
 36152                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36153                           ;incstack = 0
 36154  01C2E4  0E00               	movlw	low _uart2RxBuffer
 36155  01C2E6  2444               	addwf	_uart2RxHead^0,w,c	;volatile
 36156  01C2E8  6ED9               	movwf	fsr2l,c
 36157  01C2EA  6ADA               	clrf	fsr2h,c
 36158  01C2EC  0E04               	movlw	high _uart2RxBuffer
 36159  01C2EE  22DA               	addwfc	fsr2h,f,c
 36160  01C2F0  006F F743 FFDF     	movff	15824,indf2	;volatile
 36161  01C2F6  2A44               	incf	_uart2RxHead^0,f,c	;volatile
 36162                           
 36163                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 36164  01C2F8  2844               	incf	_uart2RxHead^0,w,c
 36165  01C2FA  B4D8               	btfsc	status,2,c
 36166                           
 36167                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 36168  01C2FC  6A44               	clrf	_uart2RxHead^0,c	;volatile
 36169                           
 36170                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 36171  01C2FE  0100               	movlb	0	; () banked
 36172  01C300  2BAA               	incf	_uart2RxCount& (0+255),f,b	;volatile
 36173                           
 36174                           ; BSR set to: 0
 36175                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 36176  01C302  0012               	return		;funcret
 36177  01C304                     __end_of_UART2_Receive_ISR:
 36178                           	opt callstack 0
 36179                           
 36180 ;; *************** function _TMR6_ISR *****************
 36181 ;; Defined at:
 36182 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 36183 ;; Parameters:    Size  Location     Type
 36184 ;;		None
 36185 ;; Auto vars:     Size  Location     Type
 36186 ;;		None
 36187 ;; Return value:  Size  Location     Type
 36188 ;;                  1    wreg      void 
 36189 ;; Registers used:
 36190 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 36191 ;; Tracked objects:
 36192 ;;		On entry : 0/0
 36193 ;;		On exit  : 0/0
 36194 ;;		Unchanged: 0/0
 36195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36198 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36199 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36200 ;;Total ram usage:        1 bytes
 36201 ;; Hardware stack levels used:    1
 36202 ;; Hardware stack levels required when called:    2
 36203 ;; This function calls:
 36204 ;;		_TMR6_CallBack
 36205 ;; This function is called by:
 36206 ;;		Interrupt level 2
 36207 ;; This function uses a non-reentrant model
 36208 ;;
 36209                           
 36210                           	psect	text177
 36211  01C3D0                     __ptext177:
 36212                           	opt callstack 0
 36213  01C3D0                     _TMR6_ISR:
 36214                           	opt callstack 2
 36215                           
 36216                           ; BSR set to: 0
 36217                           ;incstack = 0
 36218  01C3D0  0060  F004  F026   	movff	btemp,??_TMR6_ISR
 36219  01C3D6  EE14  F15E         	lfsr	1,___inthi_sp
 36220                           
 36221                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 36222  01C3DA  0139               	movlb	57	; () banked
 36223  01C3DC  91A9               	bcf	169,0,b	;volatile
 36224                           
 36225                           ; BSR set to: 57
 36226                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 36227  01C3DE  EC2E  F0E1         	call	_TMR6_CallBack	;wreg free
 36228  01C3E2  0060  F098  F001   	movff	??_TMR6_ISR,btemp
 36229  01C3E8  0011               	retfie		f
 36230  01C3EA                     __end_of_TMR6_ISR:
 36231                           	opt callstack 0
 36232                           
 36233 ;; *************** function _TMR6_CallBack *****************
 36234 ;; Defined at:
 36235 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 36236 ;; Parameters:    Size  Location     Type
 36237 ;;		None
 36238 ;; Auto vars:     Size  Location     Type
 36239 ;;		None
 36240 ;; Return value:  Size  Location     Type
 36241 ;;                  1  [STACK] void 
 36242 ;; Registers used:
 36243 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 36244 ;; Tracked objects:
 36245 ;;		On entry : 3F/39
 36246 ;;		On exit  : 0/0
 36247 ;;		Unchanged: 0/0
 36248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36253 ;;Total ram usage:        0 bytes
 36254 ;; Hardware stack levels used:    1
 36255 ;; Hardware stack levels required when called:    1
 36256 ;; This function calls:
 36257 ;;		Absolute function
 36258 ;;		_TMR6_DefaultInterruptHandler
 36259 ;; This function is called by:
 36260 ;;		_TMR6_ISR
 36261 ;; This function uses a reentrant model
 36262 ;;
 36263                           
 36264                           	psect	text178
 36265  01C25C                     __ptext178:
 36266                           	opt callstack 0
 36267  01C25C                     _TMR6_CallBack:
 36268                           	opt callstack 2
 36269                           
 36270                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 36271                           
 36272                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36273                           ;incstack = 0
 36274  01C25C  0100               	movlb	0	; () banked
 36275  01C25E  5182               	movf	_TMR6_InterruptHandler& (0+255),w,b
 36276  01C260  1183               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 36277  01C262  1184               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 36278  01C264  B4D8               	btfsc	status,2,c
 36279  01C266  0012               	return	
 36280                           
 36281                           ; BSR set to: 0
 36282                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 36283  01C268  D801               	call	u1015_48
 36284  01C26A  0012               	return	
 36285  01C26C                     u1015_48:
 36286  01C26C  0005               	push	
 36287  01C26E  6EFA               	movwf	pclath,c
 36288  01C270  5182               	movf	_TMR6_InterruptHandler& (0+255),w,b
 36289  01C272  6EFD               	movwf	tosl,c
 36290  01C274  5183               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 36291  01C276  6EFE               	movwf	tosh,c
 36292  01C278  5184               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 36293  01C27A  6EFF               	movwf	tosu,c
 36294  01C27C  50FA               	movf	pclath,w,c
 36295  01C27E  0012               	return		;indir
 36296  01C280                     __end_of_TMR6_CallBack:
 36297                           	opt callstack 0
 36298                           
 36299 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 36300 ;; Defined at:
 36301 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 36302 ;; Parameters:    Size  Location     Type
 36303 ;;		None
 36304 ;; Auto vars:     Size  Location     Type
 36305 ;;  i               1  [STACK] unsigned char 
 36306 ;; Return value:  Size  Location     Type
 36307 ;;                  1  [STACK] void 
 36308 ;; Registers used:
 36309 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 36310 ;; Tracked objects:
 36311 ;;		On entry : 3F/0
 36312 ;;		On exit  : 0/0
 36313 ;;		Unchanged: 0/0
 36314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36319 ;;Total ram usage:        0 bytes
 36320 ;; Hardware stack levels used:    1
 36321 ;; This function calls:
 36322 ;;		Nothing
 36323 ;; This function is called by:
 36324 ;;		_TMR6_Initialize
 36325 ;;		_TMR6_CallBack
 36326 ;; This function uses a reentrant model
 36327 ;;
 36328                           
 36329                           	psect	text179
 36330  01B6F2                     __ptext179:
 36331                           	opt callstack 0
 36332  01B6F2                     _TMR6_DefaultInterruptHandler:
 36333                           	opt callstack 0
 36334                           
 36335                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36336  01B6F2  52E6               	movf	postinc1,f,c
 36337                           
 36338                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 36339                           ;stkvar	_i @ sp[(-1)+0]
 36340                           
 36341                           ;incstack = 0
 36342  01B6F4  0EFF               	movlw	-1
 36343  01B6F6  6AE3               	clrf	plusw1,c
 36344  01B6F8                     l10519:
 36345                           
 36346                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 36347                           ;stkvar	_i @ sp[(-1)+0]
 36348  01B6F8  0EFF               	movlw	-1
 36349  01B6FA  50E3               	movf	plusw1,w,c
 36350  01B6FC  0D02               	mullw	2
 36351  01B6FE  0E7D               	movlw	low _tickCount
 36352  01B700  24F3               	addwf	243,w,c
 36353  01B702  6ED9               	movwf	fsr2l,c
 36354  01B704  0E02               	movlw	high _tickCount
 36355  01B706  20F4               	addwfc	prodh,w,c
 36356  01B708  6EDA               	movwf	fsr2h,c
 36357  01B70A  50DE               	movf	postinc2,w,c
 36358  01B70C  10DE               	iorwf	postinc2,w,c
 36359  01B70E  B4D8               	btfsc	status,2,c
 36360  01B710  D00C               	goto	l10523
 36361                           
 36362                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 36363                           ;stkvar	_i @ sp[(-1)+0]
 36364  01B712  0EFF               	movlw	-1
 36365  01B714  50E3               	movf	plusw1,w,c
 36366  01B716  0D02               	mullw	2
 36367  01B718  0E7D               	movlw	low _tickCount
 36368  01B71A  24F3               	addwf	243,w,c
 36369  01B71C  6ED9               	movwf	fsr2l,c
 36370  01B71E  0E02               	movlw	high _tickCount
 36371  01B720  20F4               	addwfc	prodh,w,c
 36372  01B722  6EDA               	movwf	fsr2h,c
 36373  01B724  06DE               	decf	postinc2,f,c
 36374  01B726  0E00               	movlw	0
 36375  01B728  5ADD               	subwfb	postdec2,f,c
 36376  01B72A                     l10523:
 36377                           
 36378                           ;mcc_generated_files/tmr6.c: 207:  }
 36379                           ;stkvar	_i @ sp[(-1)+0]
 36380  01B72A  0EFF               	movlw	-1
 36381  01B72C  2AE3               	incf	plusw1,f,c
 36382                           
 36383                           ;stkvar	_i @ sp[(-1)+0]
 36384  01B72E  0EFF               	movlw	-1
 36385  01B730  006F FF8C  F001    	movff	plusw1,btemp
 36386  01B736  0E0C               	movlw	12
 36387  01B738  6401               	cpfsgt	btemp^0,c
 36388  01B73A  D7DE               	goto	l10519
 36389                           
 36390                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 36391  01B73C  52E5               	movf	postdec1,f,c
 36392  01B73E  0012               	return		;funcret
 36393  01B740                     __end_of_TMR6_DefaultInterruptHandler:
 36394                           	opt callstack 0
 36395                           
 36396 ;; *************** function _DMA1_DMASCNT_ISR *****************
 36397 ;; Defined at:
 36398 ;;		line 126 in file "mcc_generated_files/dma1.c"
 36399 ;; Parameters:    Size  Location     Type
 36400 ;;		None
 36401 ;; Auto vars:     Size  Location     Type
 36402 ;;		None
 36403 ;; Return value:  Size  Location     Type
 36404 ;;                  1    wreg      void 
 36405 ;; Registers used:
 36406 ;;		None
 36407 ;; Tracked objects:
 36408 ;;		On entry : 0/0
 36409 ;;		On exit  : 3F/1
 36410 ;;		Unchanged: 0/0
 36411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36415 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36416 ;;Total ram usage:        0 bytes
 36417 ;; Hardware stack levels used:    1
 36418 ;; This function calls:
 36419 ;;		Nothing
 36420 ;; This function is called by:
 36421 ;;		Interrupt level 2
 36422 ;; This function uses a non-reentrant model
 36423 ;;
 36424                           
 36425                           	psect	text180
 36426  01C470                     __ptext180:
 36427                           	opt callstack 0
 36428  01C470                     _DMA1_DMASCNT_ISR:
 36429                           	opt callstack 4
 36430                           
 36431                           ;incstack = 0
 36432  01C470  EE14  F15E         	lfsr	1,___inthi_sp
 36433                           
 36434                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 36435  01C474  0139               	movlb	57	; () banked
 36436  01C476  91A2               	bcf	162,0,b	;volatile
 36437                           
 36438                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 36439  01C478  0101               	movlb	1	; () banked
 36440  01C47A  97CD               	bcf	_spi_link& (0+255),3,b	;volatile
 36441                           
 36442                           ; BSR set to: 1
 36443                           
 36444                           ;mcc_generated_files/dma1.c: 134:  do { LATCbits.LATC2 = 1; } while(0);
 36445  01C47C  84BC               	bsf	188,2,c	;volatile
 36446                           
 36447                           ; BSR set to: 1
 36448                           
 36449                           ;mcc_generated_files/dma1.c: 135:  do { LATCbits.LATC0 = 1; } while(0);
 36450  01C47E  80BC               	bsf	188,0,c	;volatile
 36451                           
 36452                           ; BSR set to: 1
 36453                           
 36454                           ;mcc_generated_files/dma1.c: 136:  do { LATFbits.LATF0 = 1; } while(0);
 36455  01C480  80BF               	bsf	191,0,c	;volatile
 36456                           
 36457                           ; BSR set to: 1
 36458  01C482  0011               	retfie		f
 36459  01C484                     __end_of_DMA1_DMASCNT_ISR:
 36460                           	opt callstack 0
 36461                           
 36462 ;; *************** function _DMA1_DMADCNT_ISR *****************
 36463 ;; Defined at:
 36464 ;;		line 139 in file "mcc_generated_files/dma1.c"
 36465 ;; Parameters:    Size  Location     Type
 36466 ;;		None
 36467 ;; Auto vars:     Size  Location     Type
 36468 ;;		None
 36469 ;; Return value:  Size  Location     Type
 36470 ;;                  1    wreg      void 
 36471 ;; Registers used:
 36472 ;;		None
 36473 ;; Tracked objects:
 36474 ;;		On entry : 0/0
 36475 ;;		On exit  : 3F/39
 36476 ;;		Unchanged: 0/0
 36477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36481 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36482 ;;Total ram usage:        0 bytes
 36483 ;; Hardware stack levels used:    1
 36484 ;; This function calls:
 36485 ;;		Nothing
 36486 ;; This function is called by:
 36487 ;;		Interrupt level 2
 36488 ;; This function uses a non-reentrant model
 36489 ;;
 36490                           
 36491                           	psect	text181
 36492  01C524                     __ptext181:
 36493                           	opt callstack 0
 36494  01C524                     _DMA1_DMADCNT_ISR:
 36495                           	opt callstack 4
 36496                           
 36497                           ; BSR set to: 1
 36498                           ;incstack = 0
 36499  01C524  EE14  F15E         	lfsr	1,___inthi_sp
 36500                           
 36501                           ;mcc_generated_files/dma1.c: 141:  PIR2bits.DMA1DCNTIF = 0;
 36502  01C528  0139               	movlb	57	; () banked
 36503  01C52A  93A2               	bcf	162,1,b	;volatile
 36504                           
 36505                           ; BSR set to: 57
 36506  01C52C  0011               	retfie		f
 36507  01C52E                     __end_of_DMA1_DMADCNT_ISR:
 36508                           	opt callstack 0
 36509                           
 36510 ;; *************** function _DMA1_DMAA_ISR *****************
 36511 ;; Defined at:
 36512 ;;		line 149 in file "mcc_generated_files/dma1.c"
 36513 ;; Parameters:    Size  Location     Type
 36514 ;;		None
 36515 ;; Auto vars:     Size  Location     Type
 36516 ;;		None
 36517 ;; Return value:  Size  Location     Type
 36518 ;;                  1    wreg      void 
 36519 ;; Registers used:
 36520 ;;		None
 36521 ;; Tracked objects:
 36522 ;;		On entry : 0/0
 36523 ;;		On exit  : 3F/39
 36524 ;;		Unchanged: 0/0
 36525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36530 ;;Total ram usage:        0 bytes
 36531 ;; Hardware stack levels used:    1
 36532 ;; This function calls:
 36533 ;;		Nothing
 36534 ;; This function is called by:
 36535 ;;		Interrupt level 2
 36536 ;; This function uses a non-reentrant model
 36537 ;;
 36538                           
 36539                           	psect	text182
 36540  01C530                     __ptext182:
 36541                           	opt callstack 0
 36542  01C530                     _DMA1_DMAA_ISR:
 36543                           	opt callstack 4
 36544                           
 36545                           ; BSR set to: 57
 36546                           ;incstack = 0
 36547  01C530  EE14  F15E         	lfsr	1,___inthi_sp
 36548                           
 36549                           ;mcc_generated_files/dma1.c: 152:  PIR2bits.DMA1AIF = 0;
 36550  01C534  0139               	movlb	57	; () banked
 36551  01C536  97A2               	bcf	162,3,b	;volatile
 36552                           
 36553                           ; BSR set to: 57
 36554  01C538  0011               	retfie		f
 36555  01C53A                     __end_of_DMA1_DMAA_ISR:
 36556                           	opt callstack 0
 36557                           
 36558 ;; *************** function _DMA1_DMAOR_ISR *****************
 36559 ;; Defined at:
 36560 ;;		line 160 in file "mcc_generated_files/dma1.c"
 36561 ;; Parameters:    Size  Location     Type
 36562 ;;		None
 36563 ;; Auto vars:     Size  Location     Type
 36564 ;;		None
 36565 ;; Return value:  Size  Location     Type
 36566 ;;                  1    wreg      void 
 36567 ;; Registers used:
 36568 ;;		None
 36569 ;; Tracked objects:
 36570 ;;		On entry : 0/0
 36571 ;;		On exit  : 3F/39
 36572 ;;		Unchanged: 0/0
 36573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36578 ;;Total ram usage:        0 bytes
 36579 ;; Hardware stack levels used:    1
 36580 ;; This function calls:
 36581 ;;		Nothing
 36582 ;; This function is called by:
 36583 ;;		Interrupt level 2
 36584 ;; This function uses a non-reentrant model
 36585 ;;
 36586                           
 36587                           	psect	text183
 36588  01C53C                     __ptext183:
 36589                           	opt callstack 0
 36590  01C53C                     _DMA1_DMAOR_ISR:
 36591                           	opt callstack 4
 36592                           
 36593                           ; BSR set to: 57
 36594                           ;incstack = 0
 36595  01C53C  EE14  F15E         	lfsr	1,___inthi_sp
 36596                           
 36597                           ;mcc_generated_files/dma1.c: 163:  PIR2bits.DMA1ORIF = 0;
 36598  01C540  0139               	movlb	57	; () banked
 36599  01C542  95A2               	bcf	162,2,b	;volatile
 36600                           
 36601                           ; BSR set to: 57
 36602  01C544  0011               	retfie		f
 36603  01C546                     __end_of_DMA1_DMAOR_ISR:
 36604                           	opt callstack 0
 36605                           
 36606                           ;
 36607                           ; Interrupt Vector Table @ 0x8
 36608                           ;
 36609                           
 36610                           	psect	ivt0x8
 36611  000008                     __pivt0x8:
 36612                           	opt callstack 0
 36613  000008                     ivt0x8_base:
 36614                           	opt callstack 0
 36615                           
 36616                           ; Vector 0 : SWINT
 36617  000008  7162               	dw	_Default_ISR shr (0+2)
 36618                           
 36619                           ; Vector 1 : HLVD
 36620  00000A  7162               	dw	_Default_ISR shr (0+2)
 36621                           
 36622                           ; Vector 2 : OSF
 36623  00000C  7162               	dw	_Default_ISR shr (0+2)
 36624                           
 36625                           ; Vector 3 : CSW
 36626  00000E  7162               	dw	_Default_ISR shr (0+2)
 36627                           
 36628                           ; Vector 4 : NVM
 36629  000010  7162               	dw	_Default_ISR shr (0+2)
 36630                           
 36631                           ; Vector 5 : SCAN
 36632  000012  7162               	dw	_Default_ISR shr (0+2)
 36633                           
 36634                           ; Vector 6 : CRC
 36635  000014  7162               	dw	_Default_ISR shr (0+2)
 36636                           
 36637                           ; Vector 7 : IOC
 36638  000016  7162               	dw	_Default_ISR shr (0+2)
 36639                           
 36640                           ; Vector 8 : INT0
 36641  000018  7140               	dw	_INT0_ISR shr (0+2)
 36642                           
 36643                           ; Vector 9 : ZCD
 36644  00001A  7162               	dw	_Default_ISR shr (0+2)
 36645                           
 36646                           ; Vector 10 : AD
 36647  00001C  6FB3               	dw	_ADCC_ISR shr (0+2)
 36648                           
 36649                           ; Vector 11 : ADT
 36650  00001E  6CBA               	dw	_ADCC_ThresholdISR shr (0+2)
 36651                           
 36652                           ; Vector 12 : CMP1
 36653  000020  7162               	dw	_Default_ISR shr (0+2)
 36654                           
 36655                           ; Vector 13 : SMT1
 36656  000022  7162               	dw	_Default_ISR shr (0+2)
 36657                           
 36658                           ; Vector 14 : SMT1PRA
 36659  000024  7162               	dw	_Default_ISR shr (0+2)
 36660                           
 36661                           ; Vector 15 : SMT1PRW
 36662  000026  7162               	dw	_Default_ISR shr (0+2)
 36663                           
 36664                           ; Vector 16 : DMA1SCNT
 36665  000028  711C               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 36666                           
 36667                           ; Vector 17 : DMA1DCNT
 36668  00002A  7149               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 36669                           
 36670                           ; Vector 18 : DMA1OR
 36671  00002C  714F               	dw	_DMA1_DMAOR_ISR shr (0+2)
 36672                           
 36673                           ; Vector 19 : DMA1A
 36674  00002E  714C               	dw	_DMA1_DMAA_ISR shr (0+2)
 36675                           
 36676                           ; Vector 20 : SPI1RX
 36677  000030  7162               	dw	_Default_ISR shr (0+2)
 36678                           
 36679                           ; Vector 21 : SPI1TX
 36680  000032  7162               	dw	_Default_ISR shr (0+2)
 36681                           
 36682                           ; Vector 22 : SPI1
 36683  000034  7162               	dw	_Default_ISR shr (0+2)
 36684                           
 36685                           ; Vector 23 : I2C1RX
 36686  000036  7162               	dw	_Default_ISR shr (0+2)
 36687                           
 36688                           ; Vector 24 : I2C1TX
 36689  000038  7162               	dw	_Default_ISR shr (0+2)
 36690                           
 36691                           ; Vector 25 : I2C1
 36692  00003A  7162               	dw	_Default_ISR shr (0+2)
 36693                           
 36694                           ; Vector 26 : I2C1E
 36695  00003C  7162               	dw	_Default_ISR shr (0+2)
 36696                           
 36697                           ; Vector 27 : U1RX
 36698  00003E  704C               	dw	_UART1_rx_vect_isr shr (0+2)
 36699                           
 36700                           ; Vector 28 : U1TX
 36701  000040  7162               	dw	_Default_ISR shr (0+2)
 36702                           
 36703                           ; Vector 29 : U1E
 36704  000042  7162               	dw	_Default_ISR shr (0+2)
 36705                           
 36706                           ; Vector 30 : U1
 36707  000044  7162               	dw	_Default_ISR shr (0+2)
 36708                           
 36709                           ; Vector 31 : TMR0
 36710  000046  7162               	dw	_Default_ISR shr (0+2)
 36711                           
 36712                           ; Vector 32 : TMR1
 36713  000048  7162               	dw	_Default_ISR shr (0+2)
 36714                           
 36715                           ; Vector 33 : TMR1G
 36716  00004A  7162               	dw	_Default_ISR shr (0+2)
 36717                           
 36718                           ; Vector 34 : TMR2
 36719  00004C  7162               	dw	_Default_ISR shr (0+2)
 36720                           
 36721                           ; Vector 35 : CCP1
 36722  00004E  7162               	dw	_Default_ISR shr (0+2)
 36723                           
 36724                           ; Vector 36 : Undefined
 36725  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 36726                           
 36727                           ; Vector 37 : NCO1
 36728  000052  7162               	dw	_Default_ISR shr (0+2)
 36729                           
 36730                           ; Vector 38 : CWG1
 36731  000054  7162               	dw	_Default_ISR shr (0+2)
 36732                           
 36733                           ; Vector 39 : CLC1
 36734  000056  7162               	dw	_Default_ISR shr (0+2)
 36735                           
 36736                           ; Vector 40 : INT1
 36737  000058  6EE3               	dw	_INT1_ISR shr (0+2)
 36738                           
 36739                           ; Vector 41 : CMP2
 36740  00005A  7162               	dw	_Default_ISR shr (0+2)
 36741                           
 36742                           ; Vector 42 : DMA2SCNT
 36743  00005C  7162               	dw	_Default_ISR shr (0+2)
 36744                           
 36745                           ; Vector 43 : DMA2DCNT
 36746  00005E  7162               	dw	_Default_ISR shr (0+2)
 36747                           
 36748                           ; Vector 44 : DMA2OR
 36749  000060  7162               	dw	_Default_ISR shr (0+2)
 36750                           
 36751                           ; Vector 45 : DMA2A
 36752  000062  7162               	dw	_Default_ISR shr (0+2)
 36753                           
 36754                           ; Vector 46 : I2C2RX
 36755  000064  7162               	dw	_Default_ISR shr (0+2)
 36756                           
 36757                           ; Vector 47 : I2C2TX
 36758  000066  7162               	dw	_Default_ISR shr (0+2)
 36759                           
 36760                           ; Vector 48 : I2C2
 36761  000068  7162               	dw	_Default_ISR shr (0+2)
 36762                           
 36763                           ; Vector 49 : I2C2E
 36764  00006A  7162               	dw	_Default_ISR shr (0+2)
 36765                           
 36766                           ; Vector 50 : U2RX
 36767  00006C  7060               	dw	_UART2_rx_vect_isr shr (0+2)
 36768                           
 36769                           ; Vector 51 : U2TX
 36770  00006E  7056               	dw	_UART2_tx_vect_isr shr (0+2)
 36771                           
 36772                           ; Vector 52 : U2E
 36773  000070  7162               	dw	_Default_ISR shr (0+2)
 36774                           
 36775                           ; Vector 53 : U2
 36776  000072  7162               	dw	_Default_ISR shr (0+2)
 36777                           
 36778                           ; Vector 54 : TMR3
 36779  000074  64D7               	dw	_TMR3_ISR shr (0+2)
 36780                           
 36781                           ; Vector 55 : TMR3G
 36782  000076  7162               	dw	_Default_ISR shr (0+2)
 36783                           
 36784                           ; Vector 56 : TMR4
 36785  000078  7162               	dw	_Default_ISR shr (0+2)
 36786                           
 36787                           ; Vector 57 : CCP2
 36788  00007A  7162               	dw	_Default_ISR shr (0+2)
 36789                           
 36790                           ; Vector 58 : Undefined
 36791  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 36792                           
 36793                           ; Vector 59 : CWG2
 36794  00007E  7162               	dw	_Default_ISR shr (0+2)
 36795                           
 36796                           ; Vector 60 : CLC2
 36797  000080  7162               	dw	_Default_ISR shr (0+2)
 36798                           
 36799                           ; Vector 61 : INT2
 36800  000082  7162               	dw	_Default_ISR shr (0+2)
 36801                           
 36802                           ; Vector 62 : Undefined
 36803  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 36804                           
 36805                           ; Vector 63 : Undefined
 36806  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 36807                           
 36808                           ; Vector 64 : Undefined
 36809  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 36810                           
 36811                           ; Vector 65 : Undefined
 36812  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 36813                           
 36814                           ; Vector 66 : Undefined
 36815  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 36816                           
 36817                           ; Vector 67 : Undefined
 36818  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 36819                           
 36820                           ; Vector 68 : Undefined
 36821  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 36822                           
 36823                           ; Vector 69 : Undefined
 36824  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 36825                           
 36826                           ; Vector 70 : TMR5
 36827  000094  687A               	dw	_TMR5_ISR shr (0+2)
 36828                           
 36829                           ; Vector 71 : TMR5G
 36830  000096  7162               	dw	_Default_ISR shr (0+2)
 36831                           
 36832                           ; Vector 72 : TMR6
 36833  000098  70F4               	dw	_TMR6_ISR shr (0+2)
 36834                           
 36835                           ; Vector 73 : CCP3
 36836  00009A  7162               	dw	_Default_ISR shr (0+2)
 36837                           
 36838                           ; Vector 74 : CWG3
 36839  00009C  7162               	dw	_Default_ISR shr (0+2)
 36840                           
 36841                           ; Vector 75 : CLC3
 36842  00009E  7162               	dw	_Default_ISR shr (0+2)
 36843                           
 36844                           ; Vector 76 : Undefined
 36845  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 36846                           
 36847                           ; Vector 77 : Undefined
 36848  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 36849                           
 36850                           ; Vector 78 : Undefined
 36851  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 36852                           
 36853                           ; Vector 79 : Undefined
 36854  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 36855                           
 36856                           ; Vector 80 : CCP4
 36857  0000A8  7162               	dw	_Default_ISR shr (0+2)
 36858                           
 36859                           ; Vector 81 : CLC4
 36860  0000AA  7162               	dw	_Default_ISR shr (0+2)
 36861  0000AC                     ivt0x8_undefint:
 36862                           	opt callstack 0
 36863  0000AC  00FF               	reset	
 36864                           
 36865                           	psect	text184
 36866  000000                     __ptext184:
 36867                           	opt callstack 0
 36868                           
 36869                           	psect	rparam
 36870  0000                     
 36871                           	psect	temp
 36872  000001                     btemp:
 36873                           	opt callstack 0
 36874  000001                     	ds	32
 36875  0000                     wtemp0	set	btemp
 36876  0000                     wtemp1	set	btemp+2
 36877  0000                     wtemp2	set	btemp+4
 36878  0000                     wtemp3	set	btemp+6
 36879  0000                     wtemp4	set	btemp+8
 36880  0000                     wtemp5	set	btemp+10
 36881  0000                     wtemp8	set	btemp+1
 36882  0000                     ttemp0	set	btemp
 36883  0000                     ttemp1	set	btemp+3
 36884  0000                     ttemp2	set	btemp+6
 36885  0000                     ttemp3	set	btemp+9
 36886  0000                     ttemp5	set	btemp+1
 36887  0000                     ttemp6	set	btemp+4
 36888  0000                     ttemp7	set	btemp+8
 36889  0000                     ltemp0	set	btemp
 36890  0000                     ltemp1	set	btemp+4
 36891  0000                     ltemp2	set	btemp+8
 36892  0000                     lltemp0	set	btemp
 36893  0000                     lltemp1	set	btemp+8
 36894  0000                     lltemp2	set	btemp+16
 36895  0000                     lltemp3	set	btemp+24
 36896                           tosu	equ	0x3FFF
 36897                           tosh	equ	0x3FFE
 36898                           tosl	equ	0x3FFD
 36899                           stkptr	equ	0x3FFC
 36900                           pclatu	equ	0x3FFB
 36901                           pclath	equ	0x3FFA
 36902                           pcl	equ	0x3FF9
 36903                           tblptru	equ	0x3FF8
 36904                           tblptrh	equ	0x3FF7
 36905                           tblptrl	equ	0x3FF6
 36906                           tablat	equ	0x3FF5
 36907                           prodh	equ	0x3FF4
 36908                           prodl	equ	0x3FF3
 36909                           indf0	equ	0x3FEF
 36910                           postinc0	equ	0x3FEE
 36911                           postdec0	equ	0x3FED
 36912                           preinc0	equ	0x3FEC
 36913                           plusw0	equ	0x3FEB
 36914                           fsr0h	equ	0x3FEA
 36915                           fsr0l	equ	0x3FE9
 36916                           wreg	equ	0x3FE8
 36917                           indf1	equ	0x3FE7
 36918                           postinc1	equ	0x3FE6
 36919                           postdec1	equ	0x3FE5
 36920                           preinc1	equ	0x3FE4
 36921                           plusw1	equ	0x3FE3
 36922                           fsr1h	equ	0x3FE2
 36923                           fsr1l	equ	0x3FE1
 36924                           bsr	equ	0x3FE0
 36925                           indf2	equ	0x3FDF
 36926                           postinc2	equ	0x3FDE
 36927                           postdec2	equ	0x3FDD
 36928                           preinc2	equ	0x3FDC
 36929                           plusw2	equ	0x3FDB
 36930                           fsr2h	equ	0x3FDA
 36931                           fsr2l	equ	0x3FD9
 36932                           status	equ	0x3FD8


Data Sizes:
    Strings     1064
    Constant    492
    Data        1070
    BSS         1305
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     25      39
    BANK0           160     25     158
    BANK1           256      0     251
    BANK2           256      0     231
    BANK3           256      0     198
    BANK4           256      0     255
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_101(CODE[1]), STR_63(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_98(CODE[3]), STR_94(CODE[3]), STR_89(CODE[3]), STR_84(CODE[3]), 
		 -> STR_79(CODE[3]), STR_75(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_98(CODE[3]), STR_94(CODE[3]), STR_89(CODE[3]), STR_84(CODE[3]), 
		 -> STR_79(CODE[3]), STR_75(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 121
		 -> ct(STACK[3]), STR_64(CODE[121]), STR_62(CODE[3]), STR_61(CODE[3]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[19]), STR_54(CODE[24]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[15]), STR_50(CODE[10]), STR_49(CODE[10]), 
		 -> STR_48(CODE[19]), STR_47(CODE[19]), STR_44(CODE[3]), STR_43(CODE[3]), 
		 -> STR_42(CODE[22]), STR_41(CODE[22]), STR_40(CODE[22]), STR_39(CODE[23]), 
		 -> STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[23]), STR_35(CODE[23]), 
		 -> STR_34(CODE[23]), STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), 
		 -> STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), 
		 -> STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[22]), STR_23(CODE[22]), 
		 -> STR_22(CODE[22]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), 
		 -> STR_14(CODE[21]), STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[26]), STR_8(CODE[21]), STR_7(CODE[21]), 
		 -> STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), 
		 -> STR_1(CODE[21]), 

    l	PTR const unsigned char  size(2) Largest target is 121
		 -> ct(STACK[3]), STR_64(CODE[121]), STR_62(CODE[3]), STR_61(CODE[3]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[19]), STR_54(CODE[24]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[15]), STR_50(CODE[10]), STR_49(CODE[10]), 
		 -> STR_48(CODE[19]), STR_47(CODE[19]), STR_44(CODE[3]), STR_43(CODE[3]), 
		 -> STR_42(CODE[22]), STR_41(CODE[22]), STR_40(CODE[22]), STR_39(CODE[23]), 
		 -> STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[23]), STR_35(CODE[23]), 
		 -> STR_34(CODE[23]), STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), 
		 -> STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), 
		 -> STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[22]), STR_23(CODE[22]), 
		 -> STR_22(CODE[22]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), 
		 -> STR_14(CODE[21]), STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[26]), STR_8(CODE[21]), STR_7(CODE[21]), 
		 -> STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), 
		 -> STR_1(CODE[21]), 

    s	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> spin(CODE[120]), STR_46(CODE[9]), STR_45(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[5]), 
		 -> V(BANK1[191]), 

    a	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> spin(CODE[120]), STR_46(CODE[9]), STR_45(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[5]), 
		 -> V(BANK1[191]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_70(CODE[4]), STR_69(CODE[4]), STR_66(CODE[4]), STR_65(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_70(CODE[4]), STR_69(CODE[4]), STR_66(CODE[4]), STR_65(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_44(CODE[3]), STR_43(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 121
		 -> STR_64(CODE[121]), STR_62(CODE[3]), STR_61(CODE[3]), STR_60(CODE[19]), 
		 -> STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), STR_56(CODE[19]), 
		 -> STR_55(CODE[19]), STR_54(CODE[24]), STR_53(CODE[15]), STR_52(CODE[15]), 
		 -> STR_51(CODE[15]), STR_50(CODE[10]), STR_49(CODE[10]), STR_48(CODE[19]), 
		 -> STR_47(CODE[19]), STR_42(CODE[22]), STR_41(CODE[22]), STR_40(CODE[22]), 
		 -> STR_39(CODE[23]), STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[23]), 
		 -> STR_35(CODE[23]), STR_34(CODE[23]), STR_33(CODE[22]), STR_32(CODE[22]), 
		 -> STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), 
		 -> STR_27(CODE[22]), STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[22]), 
		 -> STR_23(CODE[22]), STR_22(CODE[22]), STR_21(CODE[17]), STR_20(CODE[16]), 
		 -> STR_19(CODE[16]), STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), 
		 -> STR_15(CODE[21]), STR_14(CODE[21]), STR_13(CODE[21]), STR_12(CODE[21]), 
		 -> STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[26]), STR_8(CODE[21]), 
		 -> STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    s	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[191]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[191]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S6296_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[191]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[191]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR const unsigned char  size(2) Largest target is 121
		 -> STR_64(CODE[121]), STR_62(CODE[3]), STR_61(CODE[3]), STR_60(CODE[19]), 
		 -> STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), STR_56(CODE[19]), 
		 -> STR_55(CODE[19]), STR_54(CODE[24]), STR_53(CODE[15]), STR_52(CODE[15]), 
		 -> STR_51(CODE[15]), STR_50(CODE[10]), STR_49(CODE[10]), STR_48(CODE[19]), 
		 -> STR_47(CODE[19]), STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[22]), 
		 -> STR_41(CODE[22]), STR_40(CODE[22]), STR_39(CODE[23]), STR_38(CODE[23]), 
		 -> STR_37(CODE[23]), STR_36(CODE[23]), STR_35(CODE[23]), STR_34(CODE[23]), 
		 -> STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), 
		 -> STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), STR_26(CODE[22]), 
		 -> STR_25(CODE[22]), STR_24(CODE[22]), STR_23(CODE[22]), STR_22(CODE[22]), 
		 -> STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[26]), 
		 -> STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[22]), STR_10(CODE[22]), 
		 -> STR_9(CODE[26]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    f1p	PTR  size(2) Largest target is 299
		 -> C(BIGRAM[299]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 121
		 -> STR_64(CODE[121]), STR_62(CODE[3]), STR_61(CODE[3]), STR_60(CODE[19]), 
		 -> STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), STR_56(CODE[19]), 
		 -> STR_55(CODE[19]), STR_54(CODE[24]), STR_53(CODE[15]), STR_52(CODE[15]), 
		 -> STR_51(CODE[15]), STR_50(CODE[10]), STR_49(CODE[10]), STR_48(CODE[19]), 
		 -> STR_47(CODE[19]), STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[22]), 
		 -> STR_41(CODE[22]), STR_40(CODE[22]), STR_39(CODE[23]), STR_38(CODE[23]), 
		 -> STR_37(CODE[23]), STR_36(CODE[23]), STR_35(CODE[23]), STR_34(CODE[23]), 
		 -> STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), 
		 -> STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), STR_26(CODE[22]), 
		 -> STR_25(CODE[22]), STR_24(CODE[22]), STR_23(CODE[22]), STR_22(CODE[22]), 
		 -> STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[26]), 
		 -> STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[22]), STR_10(CODE[22]), 
		 -> STR_9(CODE[26]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    cfmt	PTR unsigned char  size(2) Largest target is 121
		 -> STR_64(CODE[121]), STR_62(CODE[3]), STR_61(CODE[3]), STR_60(CODE[19]), 
		 -> STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), STR_56(CODE[19]), 
		 -> STR_55(CODE[19]), STR_54(CODE[24]), STR_53(CODE[15]), STR_52(CODE[15]), 
		 -> STR_51(CODE[15]), STR_50(CODE[10]), STR_49(CODE[10]), STR_48(CODE[19]), 
		 -> STR_47(CODE[19]), STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[22]), 
		 -> STR_41(CODE[22]), STR_40(CODE[22]), STR_39(CODE[23]), STR_38(CODE[23]), 
		 -> STR_37(CODE[23]), STR_36(CODE[23]), STR_35(CODE[23]), STR_34(CODE[23]), 
		 -> STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), 
		 -> STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), STR_26(CODE[22]), 
		 -> STR_25(CODE[22]), STR_24(CODE[22]), STR_23(CODE[22]), STR_22(CODE[22]), 
		 -> STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[26]), 
		 -> STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[22]), STR_10(CODE[22]), 
		 -> STR_9(CODE[26]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_46(CODE[9]), STR_45(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), STR_3(CODE[5]), 
		 -> V(BANK1[191]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_46(CODE[9]), STR_45(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), STR_3(CODE[5]), 
		 -> V(BANK1[191]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_46(CODE[9]), 
		 -> STR_45(CODE[12]), D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), 
		 -> STR_3(CODE[5]), V(BANK1[191]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    log_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    h	PTR struct H_data size(2) Largest target is 7
		 -> H(BANK1[7]), 

    h	PTR struct H_data size(2) Largest target is 7
		 -> H(BANK1[7]), 

    h	PTR struct H_data size(2) Largest target is 7
		 -> H(BANK1[7]), 

    sp__hid_input	PTR struct H_data size(2) Largest target is 7
		 -> H(BANK1[7]), 

    h	PTR struct H_data size(2) Largest target is 7
		 -> H(BANK1[7]), 

    S4759tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_46(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_45(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    sp__port_data_dma_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK1[191]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK1[191]), 

    sp__hid_display	PTR struct H_data size(2) Largest target is 7
		 -> H(BANK1[7]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1995spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1995spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0  481379
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                            ___fladd
                             ___flge
                            ___fltol
                    _calc_model_data
                      _calc_ror_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                    _conv_raw_result
                   _convert_adc_data
                _eaDogM_WriteCommand
                          _esr_check
                              _fabsf
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                      _init_port_dma
                          _lp_filter
                      _mode_lamp_dim
                            _set_dac
                          _set_dac_a
                          _set_dac_b
                   _set_display_info
                 _set_load_relay_one
                 _set_load_relay_two
                          _set_vterm
                           _spinners
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                         _update_lcd
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _spinners                                             3     1      2     290
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _set_dac_b                                            4     0      4    1600
                    _convert_dac_raw
 ---------------------------------------------------------------------------------
 (1) _set_dac_a                                            4     0      4    1600
                    _convert_dac_raw
 ---------------------------------------------------------------------------------
 (2) _convert_dac_raw                                      4     0      4    1578
                            ___fldiv
                             ___flge
                            ___fltol
 ---------------------------------------------------------------------------------
 (1) _set_dac                                              0     0      0      44
                  _SPI1_Exchange8bit
                    _dac_spi_control
 ---------------------------------------------------------------------------------
 (2) _dac_spi_control                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _init_port_dma                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1356
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                      _send_lcd_data
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_data                                        1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0   10397
           _TMR3_SetInterruptHandler
                       _Volts_to_SOC
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _conv_raw_result
 ---------------------------------------------------------------------------------
 (2) _Volts_to_SOC                                         7     3      4     136
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          2     0      2     647
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            2     0      2     175
                         _get_switch
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _esr_check                                            1     0      1   10561
                         _StartTimer
                          _TimerDone
                            ___fldiv
                            ___flsub
                    _conv_raw_result
                              _fabsf
                 _set_load_relay_one
                 _set_load_relay_two
                  _update_adc_result
 ---------------------------------------------------------------------------------
 (2) _update_adc_result                                    0     0      0     132
                         _StartTimer
                          _TimerDone
                     _check_adc_scan
                     _clear_adc_scan
                     _start_adc_scan
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (29) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (29) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_two                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_one                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   31221
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   12957
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     2     0      2      62
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  248792
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0  124143
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (18) _sprintf                                            96    10     86   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   94094
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              5     1      4   93830
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
                  _send_lcd_data_dma
                      _wait_lcd_done
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   31190
                  _send_lcd_data_dma
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _send_lcd_data_dma                                    1     0      1   31115
                             _printf
                     _ringBufS_flush
                          _start_lcd
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   31298
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   29912
                           _vfprintf
 ---------------------------------------------------------------------------------
 (19) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (20) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (21) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (22) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (23) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (22) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (22) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (21) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (21) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (21) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (21) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (22) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (22) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (22) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (22) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (22) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (22) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (22) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (22) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (21) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (22) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (22) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (22) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (21) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (22) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (23) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (24) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (25) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (26) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (21) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (22) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (21) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (18) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   2     0      2      93
 ---------------------------------------------------------------------------------
 (1) _calc_ror_data                                        0     0      0    9380
                             ___flge
                            ___flsub
                    _conv_raw_result
                              _fabsf
 ---------------------------------------------------------------------------------
 (18) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (19) _conv_raw_result                                     2     0      2    7144
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (20) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (20) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (20) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      22
        _UART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _INT1_ISR                                            4     4      0     204
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (16) _INT1_CallBack                                       0     0      0     204
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (17) _switch_handler                                      2     2      0     204
 ---------------------------------------------------------------------------------
 (17) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _TMR5_ISR                                           15    15      0    7483
                                             10 COMRAM    15    15      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (16) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (16) _TMR5_CallBack                                       0     0      0    7393
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (17) _TMR5_DefaultInterruptHandler                        0     0      0    7393
                     _check_day_time
 ---------------------------------------------------------------------------------
 (18) _check_day_time                                      4     4      0    7393
                             ___flge
                    _conv_raw_result
               _get_ac_charger_relay
               _set_ac_charger_relay
 ---------------------------------------------------------------------------------
 (19) _set_ac_charger_relay                                1     0      1      22
 ---------------------------------------------------------------------------------
 (18) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _conv_raw_result                                     2     0      2    7144
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (20) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (20) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (20) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _TMR3_ISR                                           25    25      0   35586
                                              0 BANK0     25    25      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (16) _TMR3_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (16) _TMR3_CallBack                                       0     0      0   35496
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (17) _calc_bsoc                                           6     6      0   35496
                         _StartTimer
                          ___asfladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                              _fabsf
               _get_ac_charger_relay
                  _port_data_dma_ptr
                 _send_port_data_dma
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _sprintf                                            96    10     86   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (19) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (20) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (21) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (22) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (23) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (22) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (22) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (21) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (21) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (21) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (21) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (22) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (22) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (22) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (22) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (22) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (22) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (21) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (22) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (22) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (22) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (21) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (22) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (23) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (24) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (25) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (26) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (21) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (22) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (21) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (18) _send_port_data_dma                                  2     0      2      45
 ---------------------------------------------------------------------------------
 (18) _port_data_dma_ptr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (18) ___asfladd                                           6     0      6    2028
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (18) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (17) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (28) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (29) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (28) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (28) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (28) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (29) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (29) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (28) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (28) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (29) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 27
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   ___fladd
   ___flge
   ___fltol
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _calc_ror_data
     ___flge
     ___flsub
       ___fladd
     _conv_raw_result
       ___fladd
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _conv_raw_result
     ___fladd
     ___fldiv
     ___flmul
     ___flsub
       ___fladd
     ___xxtofl
     _get_raw_result
     _nanf
   _convert_adc_data
     _conv_raw_result
       ___fladd
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _send_lcd_data_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
   _esr_check
     _StartTimer
     _TimerDone
     ___fldiv
     ___flsub
       ___fladd
     _conv_raw_result
       ___fladd
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
     _set_load_relay_one
     _set_load_relay_two
     _update_adc_result
       _StartTimer
       _TimerDone
       _check_adc_scan
       _clear_adc_scan
       _start_adc_scan
         _ADCC_DischargeSampleCapacitor
         _ADCC_SetADIInterruptHandler
         _ADCC_SetADTIInterruptHandler
         _ADCC_StartConversion
   _fabsf
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
     _Volts_to_SOC
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _conv_raw_result
       ___fladd
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_data
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _init_port_dma
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_dac
     _SPI1_Exchange8bit
     _dac_spi_control
   _set_dac_a
     _convert_dac_raw
       ___fldiv
       ___flge
       ___fltol
   _set_dac_b
     _convert_dac_raw
       ___fldiv
       ___flge
       ___fltol
   _set_display_info
     _TimerDone
   _set_load_relay_one
   _set_load_relay_two
   _set_vterm
   _spinners
     _strlen
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
       _send_lcd_data_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
       _wdtdelay
     _wait_lcd_done
       _wdtdelay
   _wait_lcd_done
     _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
       _check_day_time
         ___flge
         _conv_raw_result
           ___fladd
           ___fldiv
           ___flmul
           ___flsub
             ___fladd
           ___xxtofl
           _get_raw_result
           _nanf
         _get_ac_charger_relay
         _set_ac_charger_relay
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       _StartTimer
       ___asfladd
         ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___fltol
       _fabsf
       _get_ac_charger_relay
       _port_data_dma_ptr
       _send_port_data_dma
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _strlen
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     50D      69       15.8%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      FF      13       99.6%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C6      11       77.3%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      E7       9       90.2%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FB       7       98.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     19      9E       5       98.8%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F     19      27       1       61.9%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     46C      58        0.0%
DATA                 0      0     979       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Jan 17 21:28:56 2020

                     _SPI1_Exchange8bit C304                __end_of_set_display_info C37C  
                                     _C 06FF                                       _D 082A  
                                     _H 01C6                                       _P 01EF  
                                     _R 00AF                                       _S 0254  
                                     _T FABB                                       _V 0107  
      __end_of_TMR5_SetInterruptHandler C066            __end_of_start_switch_handler C2E4  
                           __CFG_CP$OFF 000000                 __size_of_ringBufS_flush 0092  
                                    _bp FBC3                  __end_of_FVR_Initialize C56E  
                        _check_day_time 8A4A                             __CFG_LVP$ON 000000  
                                   l169 C456                                     l807 C312  
                                   l673 BF1E                                     _GIE 01FE97  
                                   _abs B93A                                     _pad 9BEC  
               __size_of_PMD_Initialize 0014                         _TMR2_Initialize C402  
                                   prod 003FF3                                     tosl 003FFD  
                                   wreg 003FE8                           _INT0_CallBack C238  
                     _update_adc_result BBCA                           __CFG_BBEN$OFF 000000  
                 __size_of_Volts_to_SOC 00BA                           _INT1_CallBack C1CC  
                          __CFG_ZCD$OFF 000000                                    l1012 BB46  
                                  l1200 BB86                                    l2112 3D9A  
                                  l2033 A54A                                    l2042 8888  
                                  l2108 3A94                                    l2213 9C48  
                                  l1342 12A2                                    l3007 4D8A  
                                  l1360 1902                                    l2233 5900  
                                  l2313 0B1A                                    l1602 AA50  
                                  l2154 7440                                    l3019 4C1A  
                       _timer3ReloadVal 009E                                    l3052 5304  
                                  l1621 BCC2                                    l1606 AE0C  
                                  l1358 18FE                                    l3151 8D76  
                                  l2351 752E                                    l3128 86A8  
                                  l1384 238C                                    l1368 19A2  
                                  l1378 1BA6                                    l1379 1DCE  
                                  l2372 6858                                    l2269 123A  
                                  l2437 336E                                    l1477 B5A4  
                                  l3190 7BEC                                    l1815 581C  
                                  l3159 B97A                                    l3088 45CE  
                                  l1680 BC20                                    l1737 C378  
                                  l2298 066A                                    l1690 84AA  
                                  l1907 8A40                                    l3259 9ACA  
                                  l2387 6132                                    l2740 9350  
                                  l2733 927C                                    l3541 B02C  
                                  l3526 8292                    _ADCC_StartConversion C484  
                                  l1855 B19C                                    l2729 A6D8  
                                  l1697 9E0C                                    l1689 834E  
                                  l3554 AFA8                                    l1954 9F2E  
                                  l1971 8BD8                                    l1967 8BE0  
                                  l2767 91EE                                    l8003 4A7E  
                                  l8005 4A90                                    l8013 4ACC  
                                  l8025 4BA4                                    l8009 4A9A  
                                  l8043 4C3C                                    l8035 4BFE  
                                  l8027 4BCA                                    l8045 4C4E  
                                  l8063 4C88                                    l8311 78D0  
                                  l8215 B01C                                    l8049 4C5A  
                                  l8091 4D3A                                    l8075 4CE6  
                                  l8059 4C82                                    l8411 4FC6  
                                  l8331 7E9A                                    l8243 66E4  
                                  l8085 4D12                                    l8405 4F8C  
                                  l8173 B96A                                    l8253 67EA  
                                  l8245 6734                                    l8229 65C6  
                                  l8191 8D18                                    l8271 AF98  
                                  l8097 4D6A                                    l8089 4D2A  
                                  l8505 52D8                                    l8249 677C  
                                  l8611 43C2                                    l8531 3E4A  
                                  l8523 3E04                                    l8507 52E8  
                                  l8419 4FE0                                    l8347 7FCE  
                                  l8339 7F22                                    l8187 8D14  
                                  l8621 4404                                    l8541 3ED2  
                                  l8533 3E7A                                    l7901 46B4  
                                  l8453 513E                                    l8445 510C  
                                  l8437 50A6                                    l8429 5070  
                                  l8373 4E2A                                    l9501 7A5E  
                                  l8293 77B8                                    l8197 8D6E  
                                  l8631 444E                                    l8551 3F48  
                                  l8463 5180                                    l8439 50B8  
                                  l8447 5110                                    l8367 4DEA  
                                  l9511 7B40                                    l9503 7A76  
                                  l8287 7764                                    l8711 95BE  
                                  l8617 43DE                                    l8529 3E44  
                                  l7913 471E                                    l8473 51CA  
                                  l8393 4F08                                    l8377 4E40  
                                  l9521 7BDC                                    l9505 7A9A  
                                  l8635 4454                                    l8547 3F12  
                                  l7931 47C6                                    l7923 4774  
                                  l7907 46EC                                    l8459 515A  
                                  l8387 4EC8                                    l8379 4E70  
                                  l9507 7AD8                                    l8299 77FE  
                                  l8731 9AF4                                    l8645 44C8  
                                  l8549 3F18                                    l7925 47A4  
                                  l8493 5280                                    l8477 51D0  
                                  l8397 4F1E                                    l7861 AC6E  
                                  l8663 457C                                    l8655 4538  
                                  l8559 3F6A                                    l7919 475E  
                                  l8487 5244                                    l8399 4F4E  
                                  l7863 AC90                                    l8719 95F2  
                                  l8735 9B06                                    l8807 B7F2  
                                  l8665 4596                                    l8649 450E  
                                  l7961 4904                                    l8905 B690  
                                  l8841 9186                                    l8833 915A  
                                  l8817 90D8                                    l9537 8104  
                                  l7971 4976                                    l8499 52B0  
                                  l9803 8564                                    l8691 94F8  
                                  l8739 9B1E                                    l8843 919C  
                                  l8835 9176                                    l9539 8170  
                                  l7981 49B2                                    l8781 923A  
                                  l9805 8572                                    l9901 57FC  
                                  l9485 799C                                    l8685 94E2  
                                  l8757 9BD2                                    l8749 9B9E  
                                  l8773 A6D6                                    l8765 A660  
                                  l7975 4996                                    l7895 466E  
                                  l8791 9318                                    l9815 85D4  
                                  l9807 8588                                    l9495 7A32  
                                  l9487 79BE                                    l7977 49A8  
                                  l7985 49E2                                    l7889 462E  
                                  l9817 85F2                                    l9809 85A6  
                                  l8697 9518                                    l8769 A6A2  
                                  l8857 8F54                                    l8881 9646  
                                  l7899 4684                                    l8787 92CA  
                                  l9827 8626                                    l9819 8608  
                                  l9837 8688                                    l9853 5340  
                                  l8869 9026                                    l8799 934E  
                                  l9863 5492                                    l9847 5310  
                                  l9919 BF96                                    STR_1 FF1E  
                                  STR_2 FF09                                    l8889 96F2  
                                  STR_3 FFD2                                    STR_4 FECA  
                                  l9795 84F8                                    l9875 55D2  
                                  l9867 55A0                                    STR_5 FEA0  
                                  STR_6 FEA0                                    l9893 57EA  
                                  STR_7 FEA0                                    STR_8 FEB5  
                                  l9887 574E                                    l9879 566E  
                                  STR_9 FC84                                    _LATA 003FBA  
                                  _LATB 003FBB                                    _LATC 003FBC  
                                  _LATD 003FBD                                    _LATE 003FBE  
                                  _LATF 003FBF                                    _T2PR 003FAB  
                                  u6200 655E                                    u6130 8D66  
                                  u6210 65AA                                    _T6PR 003F93  
                                  u7020 44A2                                    u6140 8D68  
                                  u6300 B9FE                                    _PMD0 0039C0  
                                  u6125 8D48                                    u6205 6554  
                                  _PMD1 0039C1                                    u7030 44DC  
                                  u6070 B94E                                    u7110 95DE  
                                  u6310 BA00                                    _PMD2 0039C2  
                                  _PMD3 0039C3                                    u7040 4522  
                                  u6400 77B4                                    u6080 8C98  
                                  u5520 BE34                                    u6320 AF56  
                                  _PMD4 0039C4                                    u7025 4492  
                                  _PMD5 0039C5                                    u6250 668A  
                                  u5530 BE36                                    u6170 AFDA  
                                  u6330 AF58                                    _PMD6 0039C6  
                                  u6411 77BE                                    u6235 65E4  
                                  _PMD7 0039C7                                    u6420 77F8  
                                  u6500 7E94                                    u7220 A6D2  
                                  u7300 90CC                                    u6236 65EA  
                                  u6180 AFDC                                    u6085 8C8E  
                                  u6237 65F8                                    u5630 492A  
                                  u6350 BE64                                    u6430 782A  
                                  u7310 9106                                    u6270 6762  
                                  u6255 6680                                    u5640 494A  
                                  u6360 BE66                                    u6520 7EEA  
                                  u7160 9B4A                                    u7400 8F4E  
                                  u5641 4944                                    u5490 ACBE  
                                  u6450 7908                                    u6530 7F1C  
                                  u7090 9544                                    u7410 8F80  
                                  u7315 90FC                                    u6275 6758  
                                  u7500 B66C                                    u6380 775E  
                                  u6540 7F4E                                    u7180 9BBE  
                                  u5830 4C60                                    u5750 4AC2  
                                  u7510 B68C                                    u6470 795A  
                                  u7430 905E                                    u5920 4CF6  
                                  u5680 49DA                                    u6800 521E  
                                  u6720 5138                                    u9120 861C  
                                  u6560 8006                                    u7280 B7EE  
                                  u7360 91A4                                    u5497 ACB0  
                                  u5850 4C7A                                    u5690 49FA  
                                  u5658 494C                                    u6810 5258  
                                  u7290 90B8                                    u7450 9640  
                                  u5755 4AB2                                    u6820 5294  
                                  u9204 537C                                    u6580 8058  
                                  u7380 91CE                                    u7460 9672  
                                  u5685 49CA                                    u6805 520E  
                                  u9205 5376                                    u6910 3F58  
                                  u5790 4BEC                                    u7295 90AE  
                                  u7391 8F14                                    u6760 51C2  
                                  u9224 55BA                                    u7480 972A  
                                  u5960 BE04                                    u9225 55B4  
                                  u5890 4CD6                                    u8610 7A2E  
                                  u5970 BE06                                    u9500 B360  
                                  u9244 5688                                    u9164 532A  
                                  u6925 40EC                                    u9245 5682  
                                  u9165 5324                                    u9270 56B2  
                                  u8630 7B86                                    u6935 41B4  
                                  u5895 4CC6                                    u9264 56AA  
                                  u9184 535A                                    u8640 7B88  
                                  u8720 8238                                    u6945 437C  
                                  u9265 56A4                                    u9185 5354  
                                  u8730 8266                                    u6980 4446  
                                  u9620 88A4                                    u9525 B394  
                                  u9445 BA3A                                    u8725 8232  
                                  u9526 B396                                    u9518 B362  
                                  u8727 8224                                    u8680 819E  
                                  u8737 8258                                    _PLLR 01CEE0  
                                  u8687 8190                                    u9575 C4B0  
                                  u9760 C28C                                    u9576 C4B2  
                                  u9585 C4A0                                    u9586 C4A2  
                                  u9766 C28E                                    _WPUA 003A41  
                                  _WPUB 003A51                                    _WPUC 003A61  
                                  _WPUD 003A71                                    _WPUE 003A81  
                                  _WPUF 003A91                        __end_of_ADCC_ISR BEF8  
                         __CFG_FCMEN$ON 000000                                    _dbuf 0297  
                                  _cp_h FBD3                                    _cp_l FBCF  
                                  _atoi 7982                                    _ctoa AEA6  
                                  _main 1244                                    _dtoa 5822  
                                  _nanf B47E                                    _seed 01F3  
                                  _prec 003C                                    _nout 009A  
                                  _spin FB4B                                    fsr0h 003FEA  
                                  fsr1h 003FE2                                    indf0 003FEF  
                                  fsr2h 003FDA                                    fsr0l 003FE9  
                                  indf1 003FE7                                    indf2 003FDF  
                                  fsr1l 003FE1                                    fsr2l 003FD9  
                                  _stoa 7444                                    btemp 0001  
                                  _utoa 6814                                    _xtoa 60EE  
                __end_of_check_adc_scan C556                           ___fpclassifyf 8BEA  
                                  prodh 003FF4                                    prodl 003FF3  
                                  start 00AE                         _timer5ReloadVal 00A2  
             __end_of_SPI1_Exchange8bit C322               __size_of_clear_hid_pflags 0046  
                       _TMR3_Initialize B8AC             __size_of_set_load_relay_one 0010  
           __size_of_set_load_relay_two 0010                           __CFG_CSWEN$ON 000000  
                     _UART1_rx_vect_isr C130                            ___param_bank 000000  
                __end_of_check_day_time 8BEA                      ?_UART1_rx_vect_isr 0021  
                      __end_of_INT0_ISR C50E                        __end_of_INT1_ISR BBCA  
        __size_of_OSCILLATOR_Initialize 0016                __end_of_ringBufS_put_dma AA58  
         __end_of_OSCILLATOR_Initialize C45C                                   l10007 8B14  
                                 l10019 8B86                                   l10037 BCCC  
                                 l11101 9F4E                                   l10129 B6CC  
                                 l11211 A7A2                                   l11131 7198  
                                 l11107 A000                                   l11133 719E  
                                 l11215 A7E0                                   l11143 71DA  
                                 l10095 BEB0                                   l12121 7040  
                                 l13001 AA5C                                   l11129 7188  
                                 l10523 B72A                                   l12115 6FD6  
                                 l13003 AA64                                   l11155 722C  
                                 l11139 71CE                                   l11413 B07A  
                                 l11093 8EE0                                   l12141 9C18  
                                 l12213 593A                                   l12205 58F0  
                                 l12109 6F18                                   l13005 AA6E  
                                 l13013 AA84                                   l11149 7204  
                                 l10519 B6F8                                   l11407 B06A  
                                 l13103 3522                                   l12151 9C8E  
                                 l12303 0258                                   l13007 AA7C  
                                 l13015 AAB0                                   l11175 72AC  
                                 l11167 7286                                   l11159 7238  
                                 l10633 BC36                                   l12145 9C40  
                                 l12217 5958                                   l12161 A3F2  
                                 l12313 02FC                                   l12321 032A  
                                 l12129 70EE                                   l10705 B172  
                                 l10713 A046                                   l13115 3690  
                                 l13107 358E                                   l11259 60E0  
                                 l12155 9CD8                                   l12147 9C52  
                                 l12251 5C58                                   l12227 5B6A  
                                 l13125 38BC                                   l12077 99E0  
                                 l12093 AD38                                   l12181 AEF0  
                                 l12333 0406                                   l13037 9D24  
                                 l11197 7406                                   l10717 A0A8  
                                 l13143 3AC6                                   l13135 39FC  
                                 l13119 36E4                                   l10743 9764  
                                 l10591 88F2                                   l10583 88C6  
                                 l12247 5C1C                                   l12511 0FF0  
                                 l12431 0B12                                   l12423 0A48  
                                 l12351 0554                                   l12335 0470  
                                 l13303 831E                                   l11199 7430  
                                 l13129 3936                                   l10745 9774  
                                 l12089 ACFA                                   l12521 1092  
                                 l12433 0B34                                   l12409 0926  
                                 l12329 0396                                   l12265 00AC  
                                 l12601 7686                                   l13155 3D92  
                                 l13139 3AA4                                   l10771 9868  
                                 l10763 97EE                                   l10747 9782  
                                 l10755 978A                                   l10595 8906  
                                 l12179 AEC4                                   l12531 10E2  
                                 l12371 05F6                                   l12363 0594  
                                 l12355 057C                                   l12339 04D2  
                                 l10675 BBEA                                   l10757 97B6  
                                 l12509 0FD6                                   l12373 0602  
                                 l12357 058E                                   l12277 00F0  
                                 l12285 0146                                   l12605 76C2  
                                 l13317 8446                                   l13077 A4E4  
                                 l13237 86C6                                   PRLOCK 0039EF  
                                 l13095 3462                                   l12447 0C32  
                                 l12295 01EA                                   l12703 6374  
                                 l13423 146E                                   l10937 C2BE  
                                 l12393 06F0                                   l12297 0216  
                                 l13249 877A                                   l10873 A6F4  
                                 l13513 198E                                   l13505 1968  
                                 l13099 34B6                                   l12547 119A  
                                 l12459 0CBA                                   l12467 0D24  
                                 l12475 0D90                                   l12483 0EA2  
                                 l12299 022C                                   l12627 68A4  
                                 l12619 6848                                   l13259 8852  
                                 l10699 B160                                   l13523 19B2  
                                 l13371 12AA                                   l10949 BF1A  
                                 l13277 B208                                   l12389 06B8  
                                 l12637 6A9A                                   l12821 29BC  
                                 l10877 A770                                   l13613 233C  
                                 l13605 2306                                   l13373 12BC  
                                 l13365 1284                                   l10975 BB2E  
                                 l12495 0F3A                                   l12399 077A  
                                 l12591 75D0                                   l12583 7564  
                                 l12567 74B0                                   l12719 645E  
                                 l12671 6198                                   l13607 231E  
                                 l13551 204E                                   l13535 1AB2  
                                 l13367 128C                                   l10993 BB6E  
                                 l12665 615C                                   l12841 2BCE  
                                 l12833 2B16                                   l12817 2968  
                                 l12809 287C                                   l12761 24FE  
                                 l13617 2362                                   l13561 21E2  
                                 l13481 17B0                                   l12587 75A0  
                                 l12659 6122                                   l12923 329C  
                                 l13627 23B8                                   l13547 1FEE  
                                 l13563 220E                                   l13491 1906  
                                 l12597 765A                                   l12933 32FA  
                                 l12909 3164                                   l12845 2C02  
                                 l12781 266A                                   l12757 24AE  
                                 l13493 1934                                   l13469 16D6  
                                 l12695 62EE                                   l12679 61F8  
                                 l12783 2680                                   l12759 24E8  
                                 l12929 32F6                                   l12865 2D62  
                                 l13577 2264                                   l12875 2E10  
                                 l12779 2630                                   l12939 331A  
                                 l12885 2F32                                   l12957 AB58  
                                 l13589 22B6                                   l12895 2FE8  
                                 l12799 27E4                                   l13599 22F4  
                                 l12977 A92E                                   l12979 A970  
                       __end_of___aodiv 7982                            _Volts_to_SOC A6E2  
                                 _ADCAP 003EF5                                   _ADACT 003EFE  
                       __end_of___fladd 4D94                                   _ADCLK 003EFF  
                       __end_of___aomod 807C                                   _ADPCH 003EF1  
                       __end_of___fldiv 530E                                   _ADREF 003EFD  
                       __end_of___awdiv 960C                         __end_of___flneg B81C  
                                 STR_10 FD56                                   STR_11 FE32  
                                 STR_12 FEDF                                   STR_21 FF83  
                                 STR_13 FEF4                                   STR_14 FF48  
                                 STR_30 FE5E                                   STR_22 FE1C  
                                 STR_15 FF33                                   STR_23 FE06  
                                 STR_31 FD6C                                   STR_40 FE8A  
                                 STR_24 FDF0                                   STR_32 FD82  
                                 STR_16 FD40                                   STR_41 FE8A  
                                 STR_25 FDDA                                   STR_33 FD98  
                                 STR_17 FC50                           __CFG_WDTE$OFF 000000  
                                 STR_50 FFBF                                   STR_42 FE8A  
                                 STR_26 FDC4                                   STR_34 FCE4  
                                 STR_18 FC6A                                   STR_43 FFFC  
                                 STR_51 FFA4                                   STR_19 FF94  
                                 STR_27 FDAE                                   STR_35 FD29  
                                 STR_52 FFA4                                   STR_44 FFF9  
                                 STR_28 FE74                                   STR_36 FCCD  
                       __end_of___awmod 9BEC                                   STR_53 FFA4  
                                 STR_45 FFB3                                   STR_29 FE48  
                                 STR_37 FCB6                                   STR_70 FFE3  
                                 STR_46 FFC9                                   STR_38 FCFB  
                                 STR_54 FC9E                                   STR_63 FC4F  
                                 STR_47 FF5D                                   STR_39 FD12  
                                 STR_48 FF5D                                   STR_56 FF70  
                                 STR_64 FBD7                                   _ADRPT 003EEC  
                                 STR_73 FFEA                                   STR_65 FFD7  
                                 STR_49 FFBF                                   STR_82 FFED  
                                 STR_66 FFDF                                   STR_75 FFEA  
                                 STR_84 FFED                                   STR_92 FFF6  
                                 STR_77 FFF0                                   STR_69 FFDB  
                                 STR_94 FFF6                                   STR_79 FFF0  
                                 STR_87 FFF3                                   STR_96 FFE7  
                       __end_of___flmul 45D8                                   STR_89 FFF3  
                                 STR_98 FFE7                         __end_of___flsub B9C6  
                       __end_of___fltol 91F8                                   u11100 58C4  
                                 u11020 A46C                                   u11120 58D6  
                                 u10400 AC0E                                   u10401 AC08  
                                 u11210 5BF2                                   u12010 62A4  
                                 u11027 A45E                                   u11140 5926  
                                 u12020 62A6                                   u11150 5B7E  
                                 u11070 5852                                   u11080 5854  
                                 u11400 0562                                   u11320 02A6  
                                 u12040 6370                                   u12200 26CA  
                                 u11161 5BAE                                   u11170 5BC4  
                                 u11330 02A8                                   u11250 00DA  
                                 u12050 6390                                   u12210 26F0  
                                 u10418 AC10                                   u11171 5BC2  
                       __end_of___lodiv 9086                                   u11180 5BD8  
                                 u12140 2546                                   u10380 ABC6  
                                 u12061 63C0                                   u12045 6352  
                                 u10381 ABC0                                   u11190 5BDC  
                                 u11430 05C6                                   u12070 63D6  
                                 u12310 2CBC                                   u12150 2548  
                                 u12071 63D4                                   u11280 0194  
                                 u12080 63EA                                   u12400 31EC  
                                 u12320 2CBE                                   u12160 256E  
                                 u11370 050E                                   u11290 0196  
                                 u12090 63EE                                   _U1P1H 003DED  
                                 u11700 10B8                                   u11540 0A18  
                                 u12260 28D0                                   u12420 AB38  
                                 u12500 A526                                   _U1P2H 003DEF  
                                 u10910 9A50                                   u11470 0648  
                                 u12190 26C8                                   u10398 ABC8  
                                 _U1P1L 003DEC                                   _U1P3H 003DF1  
                                 _T3CLK 003FA9                                   u11720 116E  
                                 u11640 0EE4                                   u11800 75C6  
                                 u12280 2A44                                   _T2CON 003FAC  
                                 _U1P2L 003DEE                                   u11730 1170  
                                 u11810 760C                                   _U1P3L 003DF0  
                                 u11900 6AF2                                   u12380 303C  
                                 u11901 6AF0                                   u11910 6B06  
                                 u12518 A528                                   u12470 A4C0  
                                 _U2P1L 003DD4                                   u11840 76E8  
                                 u11920 6B0A                                   _T3CON 003FA6  
                                 _U2P2L 003DD6                                   u11817 75FE  
                                 u10890 99D4                                   u10970 7162  
                                 _U2P3L 003DD8                                   u11860 682E  
                                 u11940 6108                                   _T5CLK 003F9D  
                                 u12488 A4C2                                   u12840 1588  
                       __end_of___lomod 974C                                   u11970 61F0  
                                 u11891 6ADC                                   u11980 6244  
                                 u12780 8496                                   u12860 17DE  
                                 _T2HLT 003FAD                                   u11990 6246  
                                 u12790 8498                                   u12960 2254  
                                 _T5CON 003F9A                                   u12970 226C  
                                 u12980 227E                                   u12966 2256  
                                 u12976 226E                                   _T6CON 003F94  
                                 u12986 2280                          __CFG_DEBUG$OFF 000000  
                                 _T6HLT 003F95              _ADCC_ADTI_InterruptHandler 0085  
                                 _T2TMR 003FAA                                   _U1UIR 003DF8  
                                 _T2RST 003FAF                                   _U1RXB 003DE8  
                                 _U2UIR 003DE0                                   _U2RXB 003DD0  
                                 _U2TXB 003DD2                                   _T6TMR 003F92  
                                 _T6RST 003F97                     ??_UART1_rx_vect_isr 0026  
                                 _ISRPR 0039F1                                   _OSCEN 0039DD  
                                 _TMR3H 003FA5                                   _TMR5H 003F99  
                                 _TMR3L 003FA4                                   _TMR5L 003F98  
             __end_of_update_adc_result BC04                                   _TRISA 003FC2  
                                 _TRISB 003FC3                                   _TRISC 003FC4  
                                 _TRISD 003FC5                                   _TRISE 003FC6  
                                 _TRISF 003FC7                             _Default_ISR C588  
               __size_of_clear_adc_scan 0006       __size_of_TMR3_SetInterruptHandler 0028  
     __size_of_TMR6_SetInterruptHandler 0028                           __CFG_WRTB$OFF 000000  
                      __end_of_TMR3_ISR 94BE                           __CFG_WRTC$OFF 000000  
                         __CFG_WRTD$OFF 000000                        __end_of_TMR5_ISR A2CA  
                          _DMA1CON0bits 003BFC                        __end_of_TMR6_ISR C3EA  
                          _DMA1CON1bits 003BFD              __size_of_send_lcd_data_dma 004A  
                                 _fabsf A854                                   _flags 003E  
              __size_of_calc_model_data 044C                            _DMA2CON0bits 003BDC  
                          _DMA2CON1bits 003BDD            __end_of_get_ac_charger_relay C500  
                                 _fputc 99B0              __size_of_send_lcd_cmd_long 0040  
                       __end_of_isalpha BA0A                                   _fputs ACEA  
                       __end_of_isdigit BE70                         __end_of_ivln2_h FBCF  
                    __CFG_MCLRE$EXTMCLR 000000                                   _srand BCE0  
                                 _width 003A                                   _putch C3B6  
          __end_of_set_ac_charger_relay C4D6                         __end_of_islower BE10  
                       __end_of_isspace B6A0                _INT1_SetInterruptHandler C08E  
                       __end_of_set_dac AC48                         __end_of_isupper BE40  
                                 pclath 003FFA                                   tablat 003FF5  
                                 ltemp0 0001                                   ltemp1 0005  
                                 ltemp2 0009                __size_of_DMA1_Initialize 006A  
                                 plusw1 003FE3                                   plusw2 003FDB  
                                 ttemp0 0001                                   ttemp1 0004  
                                 ttemp2 0007                                   ttemp3 000A  
                                 ttemp5 0002                                   ttemp6 0005  
                                 ttemp7 0009                                   status 003FD8  
   __end_of_UART1_SetRxInterruptHandler C016             _UART1_SetRxInterruptHandler BFEE  
                                 wtemp0 0001                                   wtemp1 0003  
                                 wtemp2 0005                                   wtemp3 0007  
                                 wtemp4 0009                                   wtemp5 000B  
                                 wtemp8 0002                         __end_of_sprintf 9F1A  
                       __end_of_tolower B036                         __end_of_strncmp 829C  
                       __end_of_toupper AFB2               __size_of_DMA1_DMADCNT_ISR 000A  
             __end_of_UART1_rx_vect_isr C158                __size_of_SPI1_Initialize 0016  
                       _TMR5_Initialize B864                   __end_of_ringBufS_init BF76  
                       __initialization A2CA                       _UART2_rx_vect_isr C180  
                          __end_of_cp_h FBD7                            __end_of_cp_l FBD3  
                          __end_of_atoi 7BF6                            __end_of_ctoa AF2E  
                          __end_of_main 23CC                            __end_of_dtoa 5CA2  
                          __end_of_nanf B4E0                            __end_of_spin FBC3  
                          __end_of_stoa 7702                            __end_of_utoa 6B54  
                          __end_of_xtoa 64A8                          __CFG_SAFEN$OFF 000000  
                    ?_UART2_rx_vect_isr 0021                 __end_of_TMR2_Initialize C41A  
                 __end_of_send_lcd_data C1CC                __size_of_DMA2_Initialize 005A  
            __end_of_check_enter_button B212                _TMR5_SetInterruptHandler C03E  
                         __activetblptr 000003               __size_of_DMA1_DMASCNT_ISR 0014  
                 _TMR3_InterruptHandler 007C                       _port_data_dma_ptr C518  
                    esr_check@esr_state 00A4                     ??_UART2_rx_vect_isr 0026  
                                INTCON0 003FD2    __size_of_UART2_SetRxInterruptHandler 0028  
                        __CFG_MVECEN$ON 000000                         _TMR6_Initialize BF24  
                       _PWM8_Initialize C430                        _UART1_Initialize B81C  
                     _UART2_tx_vect_isr C158                      _UART2_Transmit_ISR BEF8  
                                _ADACCU 003EEA                                  _ADACQH 003EF4  
                                _ADACQL 003EF3                                  _ADCON0 003EF8  
                                _ADCON1 003EF9                                  _ADCON2 003EFA  
                                _ADCON3 003EFB                          _start_adc_scan B3B8  
                                _ADLTHH 003EDF                                  _ADLTHL 003EDE  
                                _ADPREH 003EF7                                  _ADPREL 003EF6  
                                _DMA1PR 0039F3                                  _DMA2PR 0039F4  
                                _ADSTAT 003EFC                                  _ADUTHH 003EE1  
                                _ADUTHL 003EE0                      _PWM8_LoadDutyValue BA0A  
                                _ANSELA 003A40                                  _ANSELB 003A50  
                                _ANSELC 003A60                                  _ANSELD 003A70  
                                _ANSELE 003A80                                  _ANSELF 003A90  
                    ?_UART2_tx_vect_isr 0021                                  _U1CON0 003DF2  
                                _U1CON1 003DF3                                  _U1CON2 003DF4  
                                _T3GATE 003FA8                                  _U1BRGH 003DF6  
                                _U1FIFO 003DF7                                  _T3GCON 003FA7  
                                _U2CON0 003DDA                                  _U2CON1 003DDB  
                                _U1BRGL 003DF5                                  _U2CON2 003DDC  
                                _U2BRGH 003DDE                                  _U2FIFO 003DDF  
                                _U2BRGL 003DDD                                  _T5GATE 003F9C  
                                _T5GCON 003F9B                                  _MAINPR 0039F2  
                                _RC3PPS 003A13                                  _RD1PPS 003A19  
                                _RB6PPS 003A0E                                  i1l1029 A27A  
                                i1l1217 9426                    _start_switch_handler C2C4  
                                _RC5PPS 003A15                                  _ODCONA 003A42  
                                _ODCONB 003A52                                  _ODCONC 003A62  
                                _RC6PPS 003A16                                  _ODCOND 003A72  
                                _ODCONE 003A82                                  _ODCONF 003A92  
               __end_of_TMR3_Initialize B8F4                          __CFG_WDTCCS$SC 000000  
                                _FVRCON 003EC1                        _mode_lamp_bright C4E4  
                                _SCANPR 0039F7                                  _IVTADH 00389E  
                                _IVTADL 00389D                                  _IVTADU 00389F  
          __size_of_eaDogM_WriteCommand 000E                                  _OSCFRQ 0039DF  
                                u930_25 C4D0                                  u930_26 C4D2  
                                u935_20 8AA0                                  u956_20 BC44  
                  __size_of_hid_display 01DC                                  u956_26 BC46  
                                u949_20 C4FC                                  u982_24 985E  
                                u982_25 985A                                  u978_20 977E  
                                u977_28 976A                                  u978_21 9778  
                      __end_of___xxtofl 86B2   __end_of_ADCC_DischargeSampleCapacitor C54E  
__size_of_ADCC_DischargeSampleCapacitor 0008           _ADCC_DischargeSampleCapacitor C546  
              __end_of_send_lcd_cmd_dma C340                         _TMR3_WriteTimer BB4C  
                   ??_UART2_tx_vect_isr 0026               __end_of_UART2_rx_vect_isr C1A8  
            __size_of_SPI1_Exchange8bit 001E                  __size_of_DMA1_DMAA_ISR 000A  
                        __CFG_XINST$OFF 000000                       _CLKREF_Initialize C50E  
                      _UART2_Initialize B4E0                                  _WaitMs BCAA  
                       _conv_raw_result 530E                            _CCPTMRS1bits 003F5F  
  __size_of_ADCC_SetADIInterruptHandler 0028                                  ___flge 91F8  
                                ___fleq A61E                       _ADCC_ThresholdISR B2E8  
                        __CFG_STVREN$ON 000000                          _ringBufS_flush AD82  
                                _efgtoa 0000                                  _floorf 64A8  
                     dac_spi_control@S0 0042                       dac_spi_control@S1 00A8  
                     dac_spi_control@S2 00A7                       dac_spi_control@SB 00A5  
                     dac_spi_control@SC 00A6                      ?_ADCC_ThresholdISR 0021  
                                _memset 6E80                    __size_of_help_button 0038  
                                clear_0 A33C                                  clear_1 A350  
                                clear_2 A362                                  clear_3 A36E  
                                clear_4 A37A                                  clear_5 A386  
                                clear_6 A392               __end_of_port_data_dma_ptr C522  
                                _printf B41C                      _eaDogM_WriteString AB00  
                                _strcpy A3AA                               ?_ADCC_ISR 0021  
                                _strlen AC48                      __size_of_TimerDone 0028  
                          __pdataBIGRAM 04FF                         _ADCC_Initialize B27C  
                        _PMD_Initialize C45C              __size_of_update_adc_result 003A  
             __end_of_UART2_tx_vect_isr C180                                  lltemp0 0001  
                                lltemp1 0009                                  lltemp2 0011  
                                lltemp3 0019                     ??_ADCC_ThresholdISR 0021  
                __end_of_start_adc_scan B41C                            __mediumconst F9EA  
                                preinc2 003FDC                  __size_of_init_port_dma 0030  
                                tblptrh 003FF7                                  tblptrl 003FF6  
                                tblptru 003FF8                        __end_of_wdtdelay B5F4  
                      __end_of_spinners A010                        __end_of_vfprintf A9AE  
                            _StartTimer BACC                      __size_of___asfladd 0078  
         __size_of_INTERRUPT_Initialize 0066                 __end_of_TMR5_Initialize B8AC  
                     _SYSTEM_Initialize B78A                              __accesstop 0060  
               __end_of__initialization A3A4                               ?_INT0_ISR 0021  
                             ?_INT1_ISR 0021                    __end_of_display_help C566  
                  __end_of_display_info C55E               __end_of_CLKREF_Initialize C518  
                         ___rparam_used 000001              __size_of_UART1_rx_vect_isr 0028  
                       _TMR5_WriteTimer BB0C                   _set_temp_display_help C4B6  
                      _clear_hid_pflags B8F4                   __end_of_TMR3_CallBack C238  
             __end_of_ADCC_ThresholdISR B352                      __size_of_calc_bsoc 0A36  
                __end_of_ringBufS_flush AE14                          __pcstackCOMRAM 0021  
                            ___inthi_sp 115E                              ___intlo_sp 18AF  
                          __pidataBANK0 BC74                            __pidataBANK1 A550  
           __size_of_send_port_data_dma 0052                           __end_of_fabsf A902  
                             ?_TMR3_ISR 0021                               ?_TMR5_ISR 0021  
                             ?_TMR6_ISR 0021                          ivt0x8_undefint 00AC  
                         __end_of_fputc 9AD4                           __end_of_fputs AD82  
                  _get_ac_charger_relay C4F2                           __end_of_srand BD14  
                 __end_of_TMR5_CallBack C214                           __end_of_putch C3D0  
                  _set_ac_charger_relay C4C6                 __end_of_PWM8_Initialize C446  
               __end_of_TMR6_Initialize BF4E                       _adc_int_t_handler B036  
                __end_of_PMD_Initialize C470                              __end_of_bp FBCB  
                            ??_ADCC_ISR 0021                   __end_of_TMR6_CallBack C280  
           __size_of_EXT_INT_Initialize 0034                calc_bsoc@log_update_wait 0040  
                __size_of_calc_ror_data 0186                           _DMA1_DMAA_ISR C530  
                 TMR3_ISR@CountCallBack 009C                          _clear_adc_scan C56E  
                    __size_of_hid_input 00D2                  __size_of_mode_lamp_dim 0018  
              _UART2_RxInterruptHandler 0091               __end_of_SYSTEM_Initialize B7D4  
                       __CFG_PR1WAY$OFF 000000                         __CFG_IVT1WAY$ON 000000  
               __end_of_TMR3_WriteTimer BB8C                              __pbssBANK0 0060  
                            __pbssBANK1 01CD                              __pbssBANK2 0200  
                            __pbssBANK3 0300                              __pbssBANK4 0400  
                            _check_help 829C                 __end_of_conv_raw_result 5822  
                    __size_of_esr_check 02D8                   _INT0_InterruptHandler 0097  
                            ??_INT0_ISR 0021                              ??_INT1_ISR 0027  
                     __end_of_TimerDone BF9E                        _DMA1_DMADCNT_ISR C524  
                       _convert_dac_raw A010                      __size_of_init_bsoc 0246  
            __size_of_UART2_rx_vect_isr 0028                                 IVTBASEH 003FD6  
                               IVTBASEL 003FD5                                 IVTBASEU 003FD7  
                    __size_of_lp_filter 01BC                           _init_port_dma BDB0  
                 __end_of_wait_lcd_done C3B6        __end_of_TMR3_SetInterruptHandler C08E  
                       __CFG_PPS1WAY$ON 000000        __end_of_TMR6_SetInterruptHandler C03E  
                            ??_TMR3_ISR 00E5                 __end_of_ADCC_Initialize B2E6  
                            ??_TMR5_ISR 002B               __end_of_adc_int_t_handler B0B4  
                            ??_TMR6_ISR 0026                       __end_of___asfladd B12C  
                               _ADFLTRH 003EE7                                 _ADFLTRL 003EE6  
                               _DMA1DSA 003BF0                                 _DMA2DSA 003BD0  
                               _DMA1DSZ 003BEE                                 _DMA2DSZ 003BCE  
                               _DMA1SSA 003BF9                                 _DMA2SSA 003BD9  
                    __size_of_set_dac_a 0034                      __size_of_set_dac_b 0034  
  __end_of_ADCC_SetADTIInterruptHandler C106   __size_of_ADCC_SetADTIInterruptHandler 0028  
          _ADCC_SetADTIInterruptHandler C0DE                                 _DMA1SSZ 003BF7  
                               _DMA2SSZ 003BD7              __size_of_port_data_dma_ptr 000A  
                               _ADSTPTH 003EE5                                 _ADSTPTL 003EE4  
                     _UART1_Receive_ISR C2A2                                 _CLKRCLK 003CE6  
                               _CLKRCON 003CE5                  __end_of_clear_adc_scan C574  
                               u1015_48 C26C                                 u1007_48 C248  
                               u1009_28 C1DC                                 u1018_28 C200  
                               u1051_44 B09A                                 u1051_45 B094  
                        ?_DMA1_DMAA_ISR 0021                        _DMA1_DMASCNT_ISR C470  
                               _U1ERRIE 003DFA                      __size_of_set_vterm 001E  
                               _U1ERRIR 003DF9                                 u1260_20 39EC  
                               _U2ERRIE 003DE2                                 u1262_20 3AB6  
                               _U2ERRIR 003DE1                                 u1267_28 C224  
                               _INT0PPS 003AC0                     __CFG_PWRTS$PWRT_OFF 000000  
                               _INT1PPS 003AC1                            ?_Default_ISR 0021  
            __size_of_UART2_tx_vect_isr 0028                                 _U1RXPPS 003AE5  
                               _U2RXPPS 003AE8                         _dac_spi_control B12C  
                               _OSCCON1 0039D9                                 _OSCCON3 0039DB  
                               _IVTLOCK 003FD4                      __size_of_vfpfcnvrt 0FAC  
                               _SPI1CLK 003D1C                                 _SPI1RXB 003D10  
                     __end_of_calc_bsoc 3DAE                                 _SPI1TXB 003D11  
                               _OSCTUNE 0039DE                                 _PWM8DCH 003F61  
                               _PWM8DCL 003F60                                 _PWM8CON 003F62  
                               _SLRCONA 003A43                                 _SLRCONB 003A53  
                               _SLRCONC 003A63                                 _SLRCOND 003A73  
                               _SLRCONE 003A83                                 _SLRCONF 003A93  
                            _get_switch BE9E                      __size_of_start_lcd 0006  
               __end_of_TMR5_WriteTimer BB4C                 __size_of_switch_handler 0136  
                    __size_of_stop_bsoc 0006              __end_of_set_load_relay_one C4B6  
            __end_of_set_load_relay_two C4A6       __size_of_INT0_SetInterruptHandler 0028  
            __size_of_CLKREF_Initialize 000A                           _calc_ror_data 8D80  
               __size_of_DMA1_DMAOR_ISR 000A                                 __Hparam 0000  
            __size_of_ADCC_ThresholdISR 006A                           _mode_lamp_dim C3EA  
                               __Lparam 0000                __end_of_UART1_Initialize B864  
                     __end_of_hid_input A550                         __size_of_WaitMs 0036  
                       __size_of___flge 0162                         __size_of___fleq 00C4  
                               ___aodiv 7702                                 ___fladd 45D8  
                               ___aomod 7E3C                                 ___fldiv 4D94  
                               ___awdiv 94BE                                 ___flneg B7D4  
                               ___awmod 9AD4                                 ___flmul 3DAE  
                               ___flsub B980                                 ___fltol 9086  
                               ___lodiv 8F06                                 ___lomod 960C  
             __end_of_UART1_Receive_ISR C2C4                         __size_of_efgtoa 1244  
                       __size_of_floorf 036C                    __end_of_init_display A1E6  
                               __pcinit A2CA                __end_of_mode_lamp_bright C4F2  
                       __size_of_memset 02EC                __size_of_adc_int_handler 0002  
                   _eaDogM_WriteCommand C4D6                                 __ramtop 2000  
                               __ptext0 1244                                 __ptext1 B540  
                               __ptext2 C2C4                                 __ptext3 BCE0  
                               __ptext4 9F1A                                 __ptext5 BD14  
                               __ptext6 BD48                                 __ptext7 A010  
                               __ptext8 ABA6                                 __ptext9 B12C  
                     __end_of_esr_check 7444                       _UART2_Receive_ISR C2E4  
                       __size_of_printf 0062                         __CFG_WRTAPP$OFF 000000  
                       __size_of_strcpy 00D4                         __size_of_strlen 00A2  
                 _OSCILLATOR_Initialize C446                            __size_of_abs 0046  
                          __size_of_pad 0114                       __end_of_init_bsoc 7E3C  
                               _isalpha B9C6                                 _isdigit BE40  
                               us648999 796C                                 us744999 9070  
                               _ivln2_h FBCB                                 us659999 806A  
                               us749999 973C                               _T3CONbits 003FA6  
                               _mode_sw 00A9                       __end_of_lp_filter 8A4A  
                               _islower BDE0                                 _isspace B64E  
                       __CFG_WRTSAF$OFF 000000                               _T5CONbits 003F9A  
                               _set_dac ABA6                __end_of_UART2_Initialize B540  
                               _isupper BE10              __size_of_SYSTEM_Initialize 004A  
                               _sprintf 9E10                                 _tolower AFB2  
                 __size_of_display_help 0008                                 _utctime 01EB  
               __end_of_convert_dac_raw A0FC                   __size_of_display_info 0008  
                               _strncmp 807C                                 _toupper AF2E  
                  end_of_initialization A3A4               __size_of_convert_adc_data 00B8  
                    _check_enter_button B1A0                       __end_of_set_dac_a BD7C  
                     __end_of_set_dac_b BD48                               i1u1280_20 941C  
   __end_of_UART2_SetRxInterruptHandler BFEE             _UART2_SetRxInterruptHandler BFC6  
                             i2u1060_48 C16C                               i2u1062_48 C194  
                             i2u1054_48 BEE4                               i2u1056_48 B31E  
                             i2u1056_49 B332                               i2u1058_48 C144  
               check_day_time@day_delay 0041                       __end_of_set_vterm C35E  
                     __end_of_vfpfcnvrt 3378                               _SPI1TCNTL 003D12  
                               postdec0 003FED                                 postdec1 003FE5  
                               postdec2 003FDD                                 postinc0 003FEE  
                               postinc1 003FE6                                 postinc2 003FDE  
            __size_of_adc_int_t_handler 007E                     __size_of_StartTimer 0040  
                     __end_of_start_lcd C580               __end_of_UART2_Receive_ISR C304  
                        wdtdelay@dcount 0078                 __end_of_dac_spi_control B1A0  
                 __CFG_WDTCPS$WDTCPS_31 000000                         ??_DMA1_DMAA_ISR 0027  
                 _INT1_InterruptHandler 0094                               _PORTBbits 003FCB  
                     __end_of_stop_bsoc C586                _TMR3_SetInterruptHandler C066  
                             _PORTFbits 003FCF                _TMR6_SetInterruptHandler C016  
                          _display_help C55E                   _TMR5_InterruptHandler 007F  
                          _display_info C556    __size_of_UART2_SetTxInterruptHandler 0028  
              __end_of_clear_hid_pflags B93A                       __size_of_ADCC_ISR 002C  
   __end_of_ADCC_SetADIInterruptHandler C12E             _ADCC_SetADIInterruptHandler C106  
                            _update_lcd 9D00                         _calc_model_data 5CA2  
                __size_of_ringBufS_init 0028                        __CFG_FEXTOSC$ECH 000000  
                            _static_soc B540                         _DMA1_Initialize B212  
                            _start_bsoc C280                  __size_of_send_lcd_data 0024  
                       _SPI1_Initialize C41A                   __end_of_get_vterm_ptr BE9E  
                     __size_of_INT0_ISR 000E                       __size_of_INT1_ISR 003E  
                        __end_of_WaitMs BCE0            __end_of_INTERRUPT_Initialize B3B8  
                            _vterm_dump 9882                          __end_of___flge 935A  
                        __end_of___fleq A6E2    __end_of_INT0_DefaultInterruptHandler C594  
 __size_of_INT0_DefaultInterruptHandler 0002            _INT0_DefaultInterruptHandler C592  
            __size_of_UART1_Receive_ISR 0022                         _DMA2_Initialize B5F4  
                         __pidataBIGRAM 6B54                          __end_of_efgtoa 1244  
                     __size_of_TMR3_ISR 0162                       __size_of_TMR5_ISR 00E2  
                     __size_of_TMR6_ISR 001A                     __size_of_check_help 0212  
                        __end_of_floorf 6814             __size_of_UART2_Transmit_ISR 002C  
                            floorf@F524 01E7                          __end_of_memset 716C  
                        __end_of_printf B47E                __end_of_DMA1_DMADCNT_ISR C52E  
           __size_of_PWM8_LoadDutyValue 0042                   __end_of_INT0_CallBack C25C  
                        __end_of_strcpy A47E                          __end_of_strlen ACEA  
                   start_initialization A2CA    __end_of_TMR5_DefaultInterruptHandler BC74  
 __size_of_TMR5_DefaultInterruptHandler 0038            _TMR5_DefaultInterruptHandler BC3C  
       __size_of_PIN_MANAGER_Initialize 0092                             __end_of_abs B980  
                 __end_of_INT1_CallBack C1F0               __size_of_set_display_info 001E  
                           __end_of_pad 9D00                    __size_of_Default_ISR 0006  
                  __end_of_send_lcd_cmd BACC                          _switch_handler 974C  
         __size_of_ADCC_StartConversion 0012                              ivt0x8_base 0008  
                         _uart1RxBuffer 01D9                   __end_of___fpclassifyf 8D80  
                         _uart2RxBuffer 0400                __end_of_DMA1_DMASCNT_ISR C484  
                         _uart2TxBuffer 0300                          _DMA1_DMAOR_ISR C53C  
                   __end_of_hid_display 888E              __end_of_send_port_data_dma B6F2  
                      __CFG_LPBOREN$OFF 000000                   __size_of_init_display 00EA  
           __size_of_eaDogM_WriteString 00A6                               _TimerDone BF76  
                         _ringBufS_init BF4E                             __pdataBANK0 00AF  
                           __pdataBANK1 0100              __size_of_UART2_Receive_ISR 0020  
                   __size_of_get_switch 002C              __end_of_EXT_INT_Initialize BDB0  
               __end_of_calc_model_data 60EE                           _send_lcd_data C1A8  
                   __end_of_help_button BC3C         __end_of_eaDogM_WriteStringAtPos AB00  
                   __end_of_BVSOC_TABLE FABB                               ___asfladd B0B4  
                  calc_model_data@bcror 0070                             __pbssBIGRAM 082A  
               __end_of_DMA1_Initialize B27C                    calc_model_data@bvror 0074  
                           __pbssCOMRAM 003A        __end_of_INT0_SetInterruptHandler C0DE  
                         __pcstackBANK0 00E5                __size_of_TMR2_Initialize 0018  
                __size_of_TMR3_CallBack 0024                  __end_of_switch_handler 9882  
                     __size_of___xxtofl 0204                 __end_of_SPI1_Initialize C430  
              _UART1_RxInterruptHandler 008B                _UART2_TxInterruptHandler 008E  
                             __end_of_T FB4B                        _convert_adc_data A79C  
                             _calc_bsoc 3378               __size_of_ringBufS_put_dma 00AA  
                          _init_display A0FC                  __end_of_DMA1_DMAOR_ISR C546  
                __size_of_TMR5_CallBack 0024                   _TMR6_InterruptHandler 0082  
                    calc_ror_data@bcror 0068                  __size_of_TMR6_CallBack 0024  
               __end_of_DMA2_Initialize B64E                      calc_ror_data@bvror 006C  
                _PIN_MANAGER_Initialize AE14                __size_of_TMR3_Initialize 0048  
                  __end_of_wait_lcd_set C57A                           __pmediumconst F9EA  
                             __ptext100 A854                               __ptext101 530E  
                             __ptext110 888E                               __ptext102 B47E  
                             __ptext111 B980                               __ptext103 C37C  
                             __ptext120 BF24                               __ptext112 45D8  
                             __ptext104 84AE                               __ptext121 C016  
                             __ptext113 3DAE                               __ptext105 4D94  
                             __ptext130 AE14                               __ptext122 B864  
                             __ptext114 B78A                               __ptext106 91F8  
                             __ptext131 C446                               __ptext123 C03E  
                             __ptext115 B4E0                               __ptext107 5CA2  
                             __ptext140 B27C                               __ptext132 B352  
                             __ptext124 B8AC                               __ptext116 BF9E  
                             __ptext108 C580                               __ptext141 C0DE  
                             __ptext133 C566                               __ptext125 C066  
                             __ptext117 BFC6                               __ptext109 C280  
                             __ptext150 BC3C                               __ptext142 C106  
                             __ptext134 BD7C                               __ptext126 C402  
                             __ptext118 B81C                               __ptext151 8A4A  
                             __ptext143 BB8C                               __ptext135 C08E  
                             __ptext127 C41A                               __ptext119 BFEE  
                             __ptext160 C518                               __ptext152 C4C6  
                             __ptext144 C1CC                               __ptext136 C0B6  
                             __ptext128 C430                               __ptext161 B0B4  
                             __ptext153 C4F2                               __ptext145 C58E  
                             __ptext137 B5F4                               __ptext129 C45C  
                             __ptext170 B2E8                               __ptext162 C500  
                             __ptext154 935C                               __ptext146 974C  
                             __ptext138 B212                               __ptext171 C130  
                             __ptext163 C238                               __ptext155 BB4C  
                             __ptext147 A1E8                               __ptext139 C50E  
                             __ptext180 C470                               __ptext172 C2A2  
                             __ptext164 C592                               __ptext156 C214  
                             __ptext148 BB0C                               __ptext181 C524  
                             __ptext173 C158                               __ptext165 C588  
                             __ptext157 C590                               __ptext149 C1F0  
                             __ptext182 C530                               __ptext174 BEF8  
                             __ptext166 BECC                               __ptext158 3378  
                             __ptext183 C53C                               __ptext175 C180  
                             __ptext167 B036                               __ptext159 B6A0  
                             __ptext184 0000                               __ptext176 C2E4  
                             __ptext168 C594                               __ptext177 C3D0  
                             __ptext169 C596                               __ptext178 C25C  
                             __ptext179 B6F2                               _hid_input A47E  
                    __end_of_StartTimer BB0C                      _set_load_relay_one C4A6  
                    _set_load_relay_two C496                       __size_of_wdtdelay 005A  
                     __size_of_spinners 00F6                       __size_of_vfprintf 00AC  
                              _ADCC_ISR BECC                  __CFG_BBSIZE$BBSIZE_512 000000  
                             fabsf@F463 0060                                _DMA1CON0 003BFC  
                              _DMA1CON1 003BFD                                _DMA1AIRQ 003BFE  
                              _DMA2CON0 003BDC                                _DMA2CON1 003BDD  
                              _DMA2AIRQ 003BDE                                _DMA1SIRQ 003BFF  
                              _DMA2SIRQ 003BDF                               _esr_check 716C  
               __size_of_get_raw_result 001E                          __size_of_fabsf 00AE  
                             _init_bsoc 7BF6                  __size_of_wait_lcd_done 001C  
                        __size_of_fputc 0124                                _T2CLKCON 003FAE  
                        __size_of_fputs 0098                               _lp_filter 888E  
                           _hid_display 86B2                          __size_of_srand 0034  
                        __size_of_putch 001A                    _INTERRUPT_Initialize B352  
                              _T6CLKCON 003F96           __size_of_start_switch_handler 0020  
                       ?_DMA1_DMAOR_ISR 0021                                _INT0_ISR C500  
                              _INT1_ISR BB8C                                _LATCbits 003FBC  
                              _LATDbits 003FBD                                _LATEbits 003FBE  
                              _LATFbits 003FBF       __size_of_INT1_SetInterruptHandler 0028  
                              _IPR1bits 003981                                _IPR2bits 003982  
                              _PIE1bits 003991                                _IPR3bits 003983  
                              _PIE2bits 003992                                _IPR5bits 003985  
                              _PIE3bits 003993                               _tickCount 027D  
                              _IPR6bits 003986                                _PIE5bits 003995  
                              _IPR8bits 003988                                _PIE6bits 003996  
                              _IPR9bits 003989                                _PIE8bits 003998  
                   __CFG_BORV$VBOR_2P45 000000                                _PIE9bits 003999  
                          _SPI1CON0bits 003D14                               _set_dac_a BD48  
                             _set_dac_b BD14                               _ring_buf1 0383  
                             _ring_buf2 0340                                _PIR1bits 0039A1  
                              _PIR2bits 0039A2                                _SPI1BAUD 003D19  
                              _PIR4bits 0039A4                                _SPI1CON0 003D14  
                              _SPI1CON1 003D15                                _SPI1CON2 003D16  
                         _TMR3_CallBack C214                                _PIR5bits 0039A5  
                              _PIR6bits 0039A6                                _PIR8bits 0039A8  
                              _PIR9bits 0039A9                __size_of_TMR5_Initialize 0048  
                             _set_vterm C340                     __size_of_update_lcd 0110  
                           _help_button BC04                                _TMR3_ISR 935C  
                           _BVSOC_TABLE F9EB                                _TMR5_ISR A1E8  
                              _TMR6_ISR C3D0                               _port_data 04FF  
                   __size_of_static_soc 005A                               _vfpfcnvrt 23CC  
                          _SPI1INTFbits 003D1A                     __size_of_start_bsoc 0022  
                         _TMR5_CallBack C1F0                              _ADCON0bits 003EF8  
                    __end_of_check_help 84AE                               _start_lcd C57A  
               __size_of_FVR_Initialize 0008               __size_of_send_lcd_cmd_dma 001E  
                         _TMR6_CallBack C25C                   __size_of_send_lcd_cmd 0040  
     __size_of_TMR5_SetInterruptHandler 0028                               _stop_bsoc C580  
                      _set_display_info C35E                __size_of_PWM8_Initialize 0016  
              __size_of_TMR6_Initialize 002A                             _INTCON0bits 003FD2  
                             copy_data0 A2DE                               copy_data1 A304  
                             copy_data2 A326                _INT0_SetInterruptHandler C0B6  
                   __size_of_vterm_dump 012E     __end_of_UART2_SetTxInterruptHandler BFC6  
           _UART2_SetTxInterruptHandler BF9E                            _uart1RxCount 00AD  
                          _uart2RxCount 00AA                                __Hrparam 0000  
      __size_of_eaDogM_WriteStringAtPos 00A8                 __CFG_RSTOSC$EXTOSC_4PLL 000000  
              __size_of_TMR3_WriteTimer 0040                                __Lrparam 0000  
               __size_of_check_adc_scan 0008                      __CFG_BOREN$SBORDIS 000000  
              __size_of_conv_raw_result 0514                           _wait_lcd_done C39A  
                          _send_lcd_cmd BA8C                        __size_of___aodiv 0280  
                      __size_of___fladd 07BC           __size_of_get_ac_charger_relay 000E  
                      __size_of___aomod 0240                         _adc_int_handler C596  
                      __size_of___fldiv 057A                        __size_of___awdiv 014E  
                      __size_of___flneg 0048                        __size_of___awmod 0118  
                      __size_of___flmul 082A                        __size_of___flsub 0046  
                      __size_of___fltol 0172                        __size_of___lodiv 0180  
                      __size_of___lomod 0140           __size_of_set_ac_charger_relay 0010  
                    __end_of_get_switch BECA                 __size_of_check_day_time 01A0  
                 __end_of_DMA1_DMAA_ISR C53A                      ___fpclassifyf@F463 0064  
  __size_of_UART1_SetRxInterruptHandler 0028                         lp_filter@smooth 0200  
                              ___xxtofl 84AE                       ?_DMA1_DMADCNT_ISR 0021  
           __size_of_check_enter_button 0072                __size_of_ADCC_Initialize 006A  
           __end_of_eaDogM_WriteCommand C4E4                        __size_of_isalpha 0044  
                      __size_of_isdigit 0030                                __pivt0x8 0008  
                      __size_of_islower 0030                        __size_of_isspace 0052  
                    ??_DMA1_DMADCNT_ISR 0027                        __size_of_set_dac 00A2  
                              __ptext10 BDB0                                __ptext11 A0FC  
                              __ptext20 A47E                                __ptext12 C1A8  
                              __ptext21 BE9E                                __ptext13 BA4C  
                              __ptext30 C4A6                                __ptext22 716C  
                              __ptext14 BA8C                                __ptext31 C4D6  
                              __ptext23 BBCA                                __ptext15 C304  
                              __ptext40 AA58                                __ptext32 A79C  
                              __ptext24 B3B8                                __ptext16 BF4E  
                              __ptext41 C322                                __ptext33 B8F4  
                              __ptext25 C484                                __ptext17 7BF6  
                              __ptext50 B41C                                __ptext42 C39A  
                              __ptext34 829C                                __ptext26 C546  
                              __ptext18 A6E2                                __ptext51 A902  
                              __ptext43 B59A                                __ptext35 9882  
                              __ptext27 C56E                                __ptext19 86B2  
                              __ptext60 807C                                __ptext52 23CC  
                              __ptext44 B740                                __ptext36 9E10  
                              __ptext28 C54E                                __ptext61 7444  
                              __ptext53 60EE                                __ptext45 AB00  
                              __ptext37 BE70                                __ptext29 C496  
                              __ptext70 A61E                                __ptext62 0000  
                              __ptext54 AF2E                                __ptext46 C574  
                              __ptext38 BCAA                                __ptext71 9AD4  
                              __ptext63 AFB2                                __ptext55 BDE0  
                              __ptext47 C57A                                __ptext39 9D00  
                              __ptext80 ACEA                                __ptext72 94BE  
                              __ptext64 BE10                                __ptext56 B9C6  
                              __ptext48 AD82                                __ptext81 99B0  
                              __ptext73 5822                                __ptext65 A3AA  
                              __ptext57 6814                                __ptext49 6E80  
                              __ptext90 C3EA                                __ptext82 C3B6  
                              __ptext74 B93A                                __ptext66 64A8  
                              __ptext58 960C                                __ptext91 C4E4  
                              __ptext83 A9AE                                __ptext75 7E3C  
                              __ptext67 8BEA                                __ptext59 8F06  
                              __ptext92 BA0A                                __ptext84 7982  
                              __ptext76 7702                                __ptext68 9086  
                              __ptext93 BC04                                __ptext85 B64E  
                              __ptext77 AEA6                                __ptext69 B7D4  
                              __ptext94 BF76                                __ptext86 BE40  
                              __ptext78 9BEC                                __ptext95 BACC  
                              __ptext87 C340                                __ptext79 AC48  
                              __ptext96 C556                                __ptext88 C4B6  
                              __ptext97 C55E                                __ptext89 C35E  
                              __ptext98 B1A0                                __ptext99 8D80  
                      __size_of_isupper 0030                                us1106999 583C  
                      __size_of_sprintf 010A                        __size_of_tolower 0084  
                              us1175999 7456                                us1187999 687A  
                              us1196999 616E                        __size_of_strncmp 0220  
                      __size_of_toupper 0084                        _ringBufS_put_dma A9AE  
                  __end_of_Volts_to_SOC A79C                           __size_of_atoi 0274  
                         __size_of_ctoa 0088                           __size_of_main 1188  
                         __size_of_dtoa 0480                           __size_of_nanf 0062  
                 __size_of_wait_lcd_set 0006                           __size_of_stoa 02BE  
                         __size_of_utoa 0340                           __size_of_xtoa 03BA  
                   dac_spi_control@init 0043                    __CFG_WDTCWS$WDTCWS_7 000000  
                     ?_DMA1_DMASCNT_ISR 0021                   __end_of_init_port_dma BDE0  
                           _IVTLOCKbits 003FD4                __size_of_TMR5_WriteTimer 0040  
             _ADCC_ADI_InterruptHandler 0088                               stoa@F1166 0100  
                    ??_DMA1_DMASCNT_ISR 0027            __end_of_ADCC_StartConversion C496  
                              _spi_link 01CD                                _wdtdelay B59A  
            __end_of_UART2_Transmit_ISR BF24                                _spinners 9F1A  
                              _vfprintf A902                __end_of_convert_adc_data A854  
            __end_of_PWM8_LoadDutyValue BA4C    __end_of_TMR3_DefaultInterruptHandler C592  
 __size_of_TMR3_DefaultInterruptHandler 0002            _TMR3_DefaultInterruptHandler C590  
  __end_of_INT1_DefaultInterruptHandler C590   __size_of_INT1_DefaultInterruptHandler 0002  
          _INT1_DefaultInterruptHandler C58E                      _send_port_data_dma B6A0  
                         ??_Default_ISR 0021                             _uart1RxHead 0047  
                __size_of_get_vterm_ptr 002E                             _uart2RxHead 0044  
                           _uart1RxTail 00AE                          _get_raw_result C37C  
                           _uart2TxHead 00AC                             _uart2RxTail 00AB  
                             spinners@s 01E1                             _uart2TxTail 0046  
                          _wait_lcd_set C574                      _EXT_INT_Initialize BD7C  
  __end_of_TMR6_DefaultInterruptHandler B740   __size_of_TMR6_DefaultInterruptHandler 004E  
          _TMR6_DefaultInterruptHandler B6F2                       _send_lcd_data_dma B740  
  __end_of_ADCC_DefaultInterruptHandler C596   __size_of_ADCC_DefaultInterruptHandler 0002  
          _ADCC_DefaultInterruptHandler C594                                intlevel1 0000  
                              intlevel2 0000                       _send_lcd_cmd_long BA4C  
        __size_of_set_temp_display_help 0010           __end_of_set_temp_display_help C4C6  
                 __end_of_calc_ror_data 8F06                       __CFG_CLKOUTEN$OFF 000000  
            __end_of_eaDogM_WriteString ABA6                   __end_of_mode_lamp_dim C402  
               __end_of_adc_int_handler C598                __size_of_convert_dac_raw 00EC  
                __size_of_INT0_CallBack 0024                              _SPI1SCKPPS 003ADE  
                            _SPI1SDIPPS 003ADF                  __size_of_INT1_CallBack 0024  
                    __end_of_update_lcd 9E10                  _uart2TxBufferRemaining 0045  
                    __end_of_static_soc B59A                      __end_of_start_bsoc C2A2  
                        _FVR_Initialize C566                  __end_of_get_raw_result C39A  
                      _send_lcd_cmd_dma C322                  __size_of___fpclassifyf 0196  
                 TMR5_ISR@CountCallBack 00A0        __end_of_INT1_SetInterruptHandler C0B6  
             __size_of_UART1_Initialize 0048                __size_of_dac_spi_control 0074  
             __end_of_send_lcd_data_dma B78A                        ??_DMA1_DMAOR_ISR 0027  
             __end_of_send_lcd_cmd_long BA8C                 __size_of_start_adc_scan 0064  
                   __end_of_Default_ISR C58E          __end_of_PIN_MANAGER_Initialize AEA6  
             __size_of_mode_lamp_bright 000E                      __end_of_vterm_dump 99B0  
               _eaDogM_WriteStringAtPos AA58                           _get_vterm_ptr BE70  
                        _check_adc_scan C54E               __size_of_UART2_Initialize 0060  
