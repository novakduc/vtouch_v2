

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Nov 23 22:05:24 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	text0,global,reloc=2,class=CODE,delta=1
    26                           	psect	text1,global,reloc=2,class=CODE,delta=1
    27                           	psect	text2,global,reloc=2,class=CODE,delta=1
    28                           	psect	text3,global,reloc=2,class=CODE,delta=1
    29                           	psect	text4,global,reloc=2,class=CODE,delta=1
    30                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text6,global,reloc=2,class=CODE,delta=1
    32                           	psect	text7,global,reloc=2,class=CODE,delta=1
    33                           	psect	text8,global,reloc=2,class=CODE,delta=1
    34                           	psect	text9,global,reloc=2,class=CODE,delta=1
    35                           	psect	text10,global,reloc=2,class=CODE,delta=1
    36                           	psect	text11,global,reloc=2,class=CODE,delta=1
    37                           	psect	text12,global,reloc=2,class=CODE,delta=1
    38                           	psect	text13,global,reloc=2,class=CODE,delta=1
    39                           	psect	text14,global,reloc=2,class=CODE,delta=1
    40                           	psect	text15,global,reloc=2,class=CODE,delta=1
    41                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text17,global,reloc=2,class=CODE,delta=1
    43                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text19,global,reloc=2,class=CODE,delta=1
    45                           	psect	text20,global,reloc=2,class=CODE,delta=1
    46                           	psect	text21,global,reloc=2,class=CODE,delta=1
    47                           	psect	text22,global,reloc=2,class=CODE,delta=1
    48                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text24,global,reloc=2,class=CODE,delta=1
    50                           	psect	text25,global,reloc=2,class=CODE,delta=1
    51                           	psect	text26,global,reloc=2,class=CODE,delta=1
    52                           	psect	text27,global,reloc=2,class=CODE,delta=1
    53                           	psect	text28,global,reloc=2,class=CODE,delta=1
    54                           	psect	text29,global,reloc=2,class=CODE,delta=1
    55                           	psect	text30,global,reloc=2,class=CODE,delta=1
    56                           	psect	text31,global,reloc=2,class=CODE,delta=1
    57                           	psect	text32,global,reloc=2,class=CODE,delta=1
    58                           	psect	text33,global,reloc=2,class=CODE,delta=1
    59                           	psect	text34,global,reloc=2,class=CODE,delta=1
    60                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text37,global,reloc=2,class=CODE,delta=1
    63                           	psect	text38,global,reloc=2,class=CODE,delta=1
    64                           	psect	text39,global,reloc=2,class=CODE,delta=1
    65                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text44,global,reloc=2,class=CODE,delta=1
    70                           	psect	text45,global,reloc=2,class=CODE,delta=1
    71                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    80                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    83                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    84                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    85                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    86                           	psect	text61,global,reloc=2,class=CODE,delta=1
    87                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    88                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    89                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    90                           	psect	text65,global,reloc=2,class=CODE,delta=1
    91                           	psect	text66,global,reloc=2,class=CODE,delta=1
    92                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    93                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    94                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    95                           	psect	text70,global,reloc=2,class=CODE,delta=1
    96                           	psect	text71,global,reloc=2,class=CODE,delta=1
    97                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    99                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
   100                           	psect	text75,global,reloc=2,class=CODE,delta=1
   101                           	psect	text76,global,reloc=2,class=CODE,delta=1
   102                           	psect	text77,global,reloc=2,class=CODE,delta=1
   103                           	psect	text78,global,reloc=2,class=CODE,delta=1
   104                           	psect	text79,global,reloc=2,class=CODE,delta=1
   105                           	psect	text80,global,reloc=2,class=CODE,delta=1
   106                           	psect	text81,global,reloc=2,class=CODE,delta=1
   107                           	psect	text82,global,reloc=2,class=CODE,delta=1
   108                           	psect	text83,global,reloc=2,class=CODE,delta=1
   109                           	psect	text84,global,reloc=2,class=CODE,delta=1,inline
   110                           	psect	text85,global,reloc=2,class=CODE,delta=1,inline
   111                           	psect	text86,global,reloc=2,class=CODE,delta=1
   112                           	psect	text87,global,reloc=2,class=CODE,delta=1
   113                           	psect	text88,global,reloc=2,class=CODE,delta=1
   114                           	psect	text89,global,reloc=2,class=CODE,delta=1
   115                           	psect	text90,global,reloc=2,class=CODE,delta=1
   116                           	psect	text91,global,reloc=2,class=CODE,delta=1
   117                           	psect	text92,global,reloc=2,class=CODE,delta=1
   118                           	psect	text93,global,reloc=2,class=CODE,delta=1
   119                           	psect	text94,global,reloc=2,class=CODE,delta=1
   120                           	psect	text95,global,reloc=2,class=CODE,delta=1
   121                           	psect	text96,global,reloc=2,class=CODE,delta=1
   122                           	psect	text97,global,reloc=2,class=CODE,delta=1
   123                           	psect	text98,global,reloc=2,class=CODE,delta=1
   124                           	psect	text99,global,reloc=2,class=CODE,delta=1
   125                           	psect	text100,global,reloc=2,class=CODE,delta=1
   126                           	psect	text101,global,reloc=2,class=CODE,delta=1
   127                           	psect	text102,global,reloc=2,class=CODE,delta=1
   128                           	psect	text103,global,reloc=2,class=CODE,delta=1
   129                           	psect	text104,global,reloc=2,class=CODE,delta=1
   130                           	psect	text105,global,reloc=2,class=CODE,delta=1
   131                           	psect	text106,global,reloc=2,class=CODE,delta=1
   132                           	psect	text107,global,reloc=2,class=CODE,delta=1
   133                           	psect	text108,global,reloc=2,class=CODE,delta=1
   134                           	psect	text109,global,reloc=2,class=CODE,delta=1
   135                           	psect	text110,global,reloc=2,class=CODE,delta=1
   136                           	psect	text111,global,reloc=2,class=CODE,delta=1
   137                           	psect	text112,global,reloc=2,class=CODE,delta=1
   138                           	psect	text113,global,reloc=2,class=CODE,delta=1
   139                           	psect	text114,global,reloc=2,class=CODE,delta=1
   140                           	psect	text115,global,reloc=4,class=CODE,delta=1
   141                           	psect	text116,global,reloc=2,class=CODE,delta=1
   142                           	psect	text117,global,reloc=2,class=CODE,delta=1
   143                           	psect	text118,global,reloc=2,class=CODE,delta=1
   144                           	psect	text119,global,reloc=4,class=CODE,delta=1
   145                           	psect	text120,global,reloc=2,class=CODE,delta=1
   146                           	psect	text121,global,reloc=2,class=CODE,delta=1
   147                           	psect	text122,global,reloc=2,class=CODE,delta=1
   148                           	psect	text123,global,reloc=4,class=CODE,delta=1
   149                           	psect	text124,global,reloc=2,class=CODE,delta=1
   150                           	psect	text125,global,reloc=2,class=CODE,delta=1
   151                           	psect	text126,global,reloc=4,class=CODE,delta=1
   152                           	psect	text127,global,reloc=4,class=CODE,delta=1
   153                           	psect	text128,global,reloc=2,class=CODE,delta=1
   154                           	psect	text129,global,reloc=2,class=CODE,delta=1
   155                           	psect	text130,global,reloc=2,class=CODE,delta=1
   156                           	psect	text131,global,reloc=4,class=CODE,delta=1
   157                           	psect	text132,global,reloc=4,class=CODE,delta=1
   158                           	psect	text133,global,reloc=2,class=CODE,delta=1
   159                           	psect	text134,global,reloc=4,class=CODE,delta=1
   160                           	psect	text135,global,reloc=2,class=CODE,delta=1
   161                           	psect	text136,global,reloc=4,class=CODE,delta=1
   162                           	psect	text137,global,reloc=2,class=CODE,delta=1
   163                           	psect	text138,global,reloc=4,class=CODE,delta=1
   164                           	psect	text139,global,reloc=2,class=CODE,delta=1
   165                           	psect	text140,global,reloc=4,class=CODE,delta=1
   166                           	psect	text141,global,reloc=2,class=CODE,delta=1
   167                           	psect	text142,global,reloc=2,class=CODE,delta=1
   168                           	psect	text143,global,reloc=4,class=CODE,delta=1
   169                           	psect	text144,global,reloc=4,class=CODE,delta=1
   170                           	psect	text145,global,reloc=4,class=CODE,delta=1
   171                           	psect	text146,global,reloc=4,class=CODE,delta=1
   172                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   173                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   174                           	psect	text147,global,reloc=4,class=CODE,delta=1
   175                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   176                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   177  0000                     
   178                           ; Version 2.10
   179                           ; Generated 31/07/2019 GMT
   180                           ; 
   181                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   182                           ; All rights reserved.
   183                           ; 
   184                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   185                           ; 
   186                           ; Redistribution and use in source and binary forms, with or without modification, are
   187                           ; permitted provided that the following conditions are met:
   188                           ; 
   189                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   190                           ;        conditions and the following disclaimer.
   191                           ; 
   192                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   193                           ;        of conditions and the following disclaimer in the documentation and/or other
   194                           ;        materials provided with the distribution.
   195                           ; 
   196                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   197                           ;        software without specific prior written permission.
   198                           ; 
   199                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   200                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   201                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   202                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   203                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   204                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   205                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   206                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   207                           ; 
   208                           ; 
   209                           ; Code-generator required, PIC18F57K42 Definitions
   210                           ; 
   211                           ; SFR Addresses
   212  0000                     
   213 ;;_mode	offset	0
   214 ;;_channel	offset=-1 (param)
   215 ;;_s	offset=-2 (param)
   216 ;;_cmd	offset=-1 (param)
   217 ;;_cmd	offset=-1 (param)
   218 ;;_data	offset=-1 (param)
   219 ;;__this	offset=-2 (param)
   220 ;;_i	offset=-1 (param)
   221 ;;_cmd	offset=-1 (param)
   222 ;;_i	offset	0
   223 ;;_lp_speed	offset	0
   224 ;;_new	offset=-4 (param)
   225 ;;_bn	offset=-5 (param)
   226 ;;_slow	offset=-6 (param)
   227 ;;_chan	offset=-1 (param)
   228 ;;_to_what	offset=-2 (param)
   229 ;;_u	offset	0
   230 ;;_s	offset=-2 (param)
   231 ;;_index	offset=-1 (param)
   232 ;;_arg	offset	0
   233 ;;_exp	offset	4
   234 ;;_sign	offset=-1 (param)
   235 ;;_val	offset=-5 (param)
   236 ;;_flipper	offset=-1 (param)
   237 ;;_f	offset	0
   238 ;;_ap	offset	6
   239 ;;_s	offset=-3 (param)
   240 ;;_fmt	offset=-5 (param)
   241 ;;_line	offset=-1 (param)
   242 ;;_vterm	offset=-2 (param)
   243 ;;_numMilliseconds	offset=-2 (param)
   244 ;;_vterm	offset=-1 (param)
   245 ;;_r	offset=-1 (param)
   246 ;;_c	offset=-2 (param)
   247 ;;_strPtr	offset=-4 (param)
   248 ;;_strPtr	offset=-1 (param)
   249 ;;_delay	offset=-4 (param)
   250 ;;_strPtr	offset=-2 (param)
   251 ;;__this	offset=-2 (param)
   252 ;;_clearBuffer	offset=-3 (param)
   253 ;;_s	offset	0
   254 ;;_k	offset	2
   255 ;;_dest	offset=-2 (param)
   256 ;;_c	offset=-4 (param)
   257 ;;_n	offset=-6 (param)
   258 ;;_ap	offset	0
   259 ;;_fmt	offset=-3 (param)
   260 ;;_cfmt	offset	0
   261 ;;_fp	offset=-2 (param)
   262 ;;_fmt	offset=-4 (param)
   263 ;;_ap	offset=-6 (param)
   264 ;;_vfpfcnvrt$4425	offset	0
   265 ;;_vfpfcnvrt$4431	offset	2
   266 ;;_vfpfcnvrt$4424	offset	4
   267 ;;_llu	offset	6
   268 ;;_ll	offset	14
   269 ;;_f	offset	22
   270 ;;_ct	offset	26
   271 ;;_cp	offset	29
   272 ;;_c	offset	31
   273 ;;_fp	offset=-2 (param)
   274 ;;_fmt	offset=-4 (param)
   275 ;;_ap	offset=-6 (param)
   276 ;;_xtoa$4410	offset	0
   277 ;;_xtoa$4409	offset	2
   278 ;;_n	offset	4
   279 ;;_c	offset	12
   280 ;;_i	offset	14
   281 ;;_w	offset	16
   282 ;;_p	offset	18
   283 ;;_fp	offset=-2 (param)
   284 ;;_d	offset=-10 (param)
   285 ;;_x	offset=-11 (param)
   286 ;;_toupper$5070	offset	0
   287 ;;_c	offset=-2 (param)
   288 ;;_c	offset=-2 (param)
   289 ;;_c	offset=-2 (param)
   290 ;;_r	offset	0
   291 ;;_l	offset	2
   292 ;;__l	offset=-2 (param)
   293 ;;__r	offset=-4 (param)
   294 ;;_n	offset=-6 (param)
   295 ;;_nuls	offset	0
   296 ;;_l	offset	7
   297 ;;_p	offset	9
   298 ;;_cp	offset	11
   299 ;;_w	offset	13
   300 ;;_i	offset	15
   301 ;;_fp	offset=-2 (param)
   302 ;;_s	offset=-4 (param)
   303 ;;_efgtoa$4389	offset	0
   304 ;;_efgtoa$4388	offset	2
   305 ;;_efgtoa$4387	offset	4
   306 ;;_efgtoa$4383	offset	6
   307 ;;_efgtoa$4379	offset	8
   308 ;;_efgtoa$4378	offset	10
   309 ;;_u	offset	12
   310 ;;_g	offset	16
   311 ;;_l	offset	20
   312 ;;_h	offset	24
   313 ;;_ou	offset	28
   314 ;;_n	offset	32
   315 ;;_e	offset	34
   316 ;;_i	offset	36
   317 ;;_w	offset	38
   318 ;;_p	offset	40
   319 ;;_sign	offset	42
   320 ;;_d	offset	44
   321 ;;_ne	offset	46
   322 ;;_m	offset	48
   323 ;;_pp	offset	50
   324 ;;_t	offset	52
   325 ;;_mode	offset	54
   326 ;;_nmode	offset	55
   327 ;;_fp	offset=-2 (param)
   328 ;;_f	offset=-6 (param)
   329 ;;_c	offset=-7 (param)
   330 ;;_tolower$5055	offset	0
   331 ;;_c	offset=-2 (param)
   332 ;;_c	offset=-2 (param)
   333 ;;_d	offset	0
   334 ;;_s	offset	2
   335 ;;_dest	offset=-2 (param)
   336 ;;_src	offset=-4 (param)
   337 ;;_u	offset	0
   338 ;;_m	offset	4
   339 ;;_e	offset	8
   340 ;;_x	offset=-4 (param)
   341 ;;_u	offset	0
   342 ;;_e	offset	4
   343 ;;_x	offset=-4 (param)
   344 ;;_exp1	offset	0
   345 ;;_sign1	offset	1
   346 ;;_f1	offset=-4 (param)
   347 ;;_b	offset=-4 (param)
   348 ;;_a	offset=-8 (param)
   349 ;;_grs	offset	0
   350 ;;_bexp	offset	1
   351 ;;_aexp	offset	2
   352 ;;_signs	offset	3
   353 ;;_b	offset=-4 (param)
   354 ;;_a	offset=-8 (param)
   355 ;;_f1	offset=-4 (param)
   356 ;;_prod	offset	0
   357 ;;_grs	offset	4
   358 ;;_temp	offset	8
   359 ;;_bexp	offset	10
   360 ;;_aexp	offset	11
   361 ;;_sign	offset	12
   362 ;;_b	offset=-4 (param)
   363 ;;_a	offset=-8 (param)
   364 ;;_ff1	offset=-4 (param)
   365 ;;_ff2	offset=-8 (param)
   366 ;;_ff1	offset=-4 (param)
   367 ;;_ff2	offset=-8 (param)
   368 ;;_grs	offset	0
   369 ;;_rem	offset	4
   370 ;;_new_exp	offset	8
   371 ;;_aexp	offset	10
   372 ;;_bexp	offset	11
   373 ;;_sign	offset	12
   374 ;;_b	offset=-4 (param)
   375 ;;_a	offset=-8 (param)
   376 ;;_sign	offset	0
   377 ;;_counter	offset	1
   378 ;;_dividend	offset=-2 (param)
   379 ;;_divisor	offset=-4 (param)
   380 ;;_quotient	offset	0
   381 ;;_sign	offset	2
   382 ;;_counter	offset	3
   383 ;;_dividend	offset=-2 (param)
   384 ;;_divisor	offset=-4 (param)
   385 ;;_dtoa$4355	offset	0
   386 ;;_n	offset	2
   387 ;;_i	offset	10
   388 ;;_s	offset	12
   389 ;;_w	offset	14
   390 ;;_p	offset	16
   391 ;;_fp	offset=-2 (param)
   392 ;;_d	offset=-10 (param)
   393 ;;_a	offset=-2 (param)
   394 ;;_sign	offset	0
   395 ;;_counter	offset	1
   396 ;;_dividend	offset=-8 (param)
   397 ;;_divisor	offset=-16 (param)
   398 ;;_quotient	offset	0
   399 ;;_sign	offset	8
   400 ;;_counter	offset	9
   401 ;;_dividend	offset=-8 (param)
   402 ;;_divisor	offset=-16 (param)
   403 ;;_w	offset	0
   404 ;;_fp	offset=-2 (param)
   405 ;;_c	offset=-3 (param)
   406 ;;_w	offset	0
   407 ;;_i	offset	2
   408 ;;_fp	offset=-2 (param)
   409 ;;_buf	offset=-4 (param)
   410 ;;_p	offset=-6 (param)
   411 ;;_a	offset	0
   412 ;;_s	offset=-2 (param)
   413 ;;_i	offset	0
   414 ;;_c	offset	2
   415 ;;_s	offset=-2 (param)
   416 ;;_fp	offset=-4 (param)
   417 ;;_c	offset=-2 (param)
   418 ;;_fp	offset=-4 (param)
   419 ;;_c	offset=-1 (param)
   420 ;;__this	offset=-2 (param)
   421 ;;_c	offset=-3 (param)
   422 ;;_atoi$4908	offset	0
   423 ;;_atoi$4906	offset	2
   424 ;;_atoi$4907	offset	4
   425 ;;_n	offset	5
   426 ;;_neg	offset	7
   427 ;;_s	offset=-2 (param)
   428 ;;_isspace$4946	offset	0
   429 ;;_c	offset=-2 (param)
   430 ;;_c	offset=-2 (param)
   431 ;;_vterm	offset=-1 (param)
   432 ;;_new_response_info	offset=-1 (param)
   433 ;;_new_response_info	offset=-1 (param)
   434 ;;_level	offset=-2 (param)
   435 ;;_dutyValue	offset=-2 (param)
   436 ;;_timer	offset=-1 (param)
   437 ;;_timer	offset=-1 (param)
   438 ;;_count	offset=-3 (param)
   439 ;;_InterruptHandler	offset=-3 (param)
   440 ;;_InterruptHandler	offset=-3 (param)
   441 ;;_InterruptHandler	offset=-3 (param)
   442 ;;_InterruptHandler	offset=-3 (param)
   443 ;;_InterruptHandler	offset=-3 (param)
   444 ;;_InterruptHandler	offset=-3 (param)
   445 ;;_state	offset	0
   446 ;;_InterruptHandler	offset=-3 (param)
   447 ;;_InterruptHandler	offset=-3 (param)
   448 ;;_InterruptHandler	offset=-3 (param)
   449 ;;_InterruptHandler	offset=-3 (param)
   450 ;;_i	offset	0
   451 ;;_sw_value	offset	1
   452 ;;_timerVal	offset=-2 (param)
   453 ;;_channel	offset=-1 (param)
   454 ;;_i	offset	0
   455                           
   456                           	psect	idataBANK0
   457  017EFE                     __pidataBANK0:
   458                           	opt callstack 0
   459                           
   460                           ;initializer for _R
   461  017EFE  0000               	dw	0
   462  017F00  0000               	dw	0
   463  017F02  0000               	dw	0
   464  017F04  0000               	dw	0
   465  017F06  0000               	dw	0
   466  017F08  0000               	dw	0
   467  017F0A  0000               	dw	0
   468  017F0C  0000               	dw	0
   469  017F0E  0000               	dw	0
   470  017F10  0000               	dw	0
   471  017F12  0000               	dw	0
   472  017F14  0000               	dw	0
   473  017F16  0000               	dw	0
   474  017F18  0000               	dw	0
   475  017F1A  0000               	dw	0
   476  017F1C  0000               	dw	0
   477  017F1E  0F5B               	dw	3931
   478  017F20  0F88               	dw	3976
   479  017F22  00                 	db	0
   480  017F23  0000               	dw	0
   481  017F25  00                 	db	0
   482                           
   483                           ;initializer for stoa@F1166
   484  017F26  28                 	db	40
   485  017F27  6E                 	db	110
   486  017F28  75                 	db	117
   487  017F29  6C                 	db	108
   488  017F2A  6C                 	db	108
   489  017F2B  29                 	db	41
   490  017F2C  00                 	db	0
   491                           
   492                           	psect	idataBANK1
   493  016DA0                     __pidataBANK1:
   494                           	opt callstack 0
   495                           
   496                           ;initializer for _V
   497  016DA0  00                 	db	0
   498  016DA1  00                 	db	0
   499  016DA2  00                 	db	0
   500  016DA3  00                 	db	0
   501  016DA4  00                 	db	0
   502  016DA5  00                 	db	0
   503  016DA6  00                 	db	0
   504  016DA7  00                 	db	0
   505  016DA8  00                 	db	0
   506  016DA9  00                 	db	0
   507  016DAA  00                 	db	0
   508  016DAB  00                 	db	0
   509  016DAC  00                 	db	0
   510  016DAD  00                 	db	0
   511  016DAE  00                 	db	0
   512  016DAF  00                 	db	0
   513  016DB0  00                 	db	0
   514  016DB1  00                 	db	0
   515  016DB2  00                 	db	0
   516  016DB3  00                 	db	0
   517  016DB4  00                 	db	0
   518  016DB5  00                 	db	0
   519  016DB6  00                 	db	0
   520  016DB7  00                 	db	0
   521  016DB8  00                 	db	0
   522  016DB9  00                 	db	0
   523  016DBA  00                 	db	0
   524  016DBB  00                 	db	0
   525  016DBC  00                 	db	0
   526  016DBD  00                 	db	0
   527  016DBE  00                 	db	0
   528  016DBF  00                 	db	0
   529  016DC0  00                 	db	0
   530  016DC1  00                 	db	0
   531  016DC2  00                 	db	0
   532  016DC3  00                 	db	0
   533  016DC4  00                 	db	0
   534  016DC5  00                 	db	0
   535  016DC6  00                 	db	0
   536  016DC7  00                 	db	0
   537  016DC8  00                 	db	0
   538  016DC9  00                 	db	0
   539  016DCA  00                 	db	0
   540  016DCB  00                 	db	0
   541  016DCC  00                 	db	0
   542  016DCD  00                 	db	0
   543  016DCE  00                 	db	0
   544  016DCF  00                 	db	0
   545  016DD0  00                 	db	0
   546  016DD1  00                 	db	0
   547  016DD2  00                 	db	0
   548  016DD3  00                 	db	0
   549  016DD4  00                 	db	0
   550  016DD5  00                 	db	0
   551  016DD6  00                 	db	0
   552  016DD7  00                 	db	0
   553  016DD8  00                 	db	0
   554  016DD9  00                 	db	0
   555  016DDA  00                 	db	0
   556  016DDB  00                 	db	0
   557  016DDC  00                 	db	0
   558  016DDD  00                 	db	0
   559  016DDE  00                 	db	0
   560  016DDF  00                 	db	0
   561  016DE0  00                 	db	0
   562  016DE1  00                 	db	0
   563  016DE2  00                 	db	0
   564  016DE3  00                 	db	0
   565  016DE4  00                 	db	0
   566  016DE5  00                 	db	0
   567  016DE6  00                 	db	0
   568  016DE7  00                 	db	0
   569  016DE8  00                 	db	0
   570  016DE9  00                 	db	0
   571  016DEA  00                 	db	0
   572  016DEB  00                 	db	0
   573  016DEC  00                 	db	0
   574  016DED  00                 	db	0
   575  016DEE  00                 	db	0
   576  016DEF  00                 	db	0
   577  016DF0  00                 	db	0
   578  016DF1  00                 	db	0
   579  016DF2  00                 	db	0
   580  016DF3  00                 	db	0
   581  016DF4  00                 	db	0
   582  016DF5  00                 	db	0
   583  016DF6  00                 	db	0
   584  016DF7  00                 	db	0
   585  016DF8  00                 	db	0
   586  016DF9  00                 	db	0
   587  016DFA  00                 	db	0
   588  016DFB  00                 	db	0
   589  016DFC  00                 	db	0
   590  016DFD  00                 	db	0
   591  016DFE  00                 	db	0
   592  016DFF  00                 	db	0
   593  016E00  00                 	db	0
   594  016E01  00                 	db	0
   595  016E02  00                 	db	0
   596  016E03  00                 	db	0
   597  016E04  00                 	db	0
   598  016E05  00                 	db	0
   599  016E06  00                 	db	0
   600  016E07  00                 	db	0
   601  016E08  00                 	db	0
   602  016E09  00                 	db	0
   603  016E0A  00                 	db	0
   604  016E0B  00                 	db	0
   605  016E0C  00                 	db	0
   606  016E0D  00                 	db	0
   607  016E0E  00                 	db	0
   608  016E0F  00                 	db	0
   609  016E10  00                 	db	0
   610  016E11  00                 	db	0
   611  016E12  00                 	db	0
   612  016E13  00                 	db	0
   613  016E14  00                 	db	0
   614  016E15  00                 	db	0
   615  016E16  00                 	db	0
   616  016E17  00                 	db	0
   617  016E18  00                 	db	0
   618  016E19  00                 	db	0
   619  016E1A  00                 	db	0
   620  016E1B  00                 	db	0
   621  016E1C  00                 	db	0
   622  016E1D  00                 	db	0
   623  016E1E  00                 	db	0
   624  016E1F  00                 	db	0
   625  016E20  00                 	db	0
   626  016E21  0000               	dw	0
   627  016E23  0000               	dw	0
   628  016E25  0000               	dw	0
   629  016E27  0000               	dw	0
   630  016E29  00                 	db	0
   631  016E2A  00                 	db	0
   632  016E2B  00                 	db	0
   633  016E2C  00                 	db	0
   634  016E2D  00                 	db	0
   635  016E2E  00                 	db	0
   636  016E2F  0000               	dw	0
   637  016E31  0000               	dw	0
   638  016E33  0000               	dw	0
   639  016E35  0000               	dw	0
   640  016E37  0000               	dw	0
   641  016E39  0000               	dw	0
   642  016E3B  00                 	db	0
   643  016E3C  00                 	db	0
   644  016E3D  00                 	db	0
   645  016E3E  00                 	db	0
   646  016E3F  00                 	db	0
   647  016E40  00                 	db	0
   648  016E41  00                 	db	0
   649  016E42  00                 	db	0
   650  016E43  00                 	db	0
   651  016E44  00                 	db	0
   652  016E45  0000               	dw	0
   653  016E47  0000               	dw	0
   654  016E49  2D                 	db	45
   655  016E4A  00                 	db	0
   656  016E4B  0000               	dw	0
   657  016E4D  0000               	dw	0
   658  016E4F  0000               	dw	0
   659  016E51  0000               	dw	0
   660  016E53  0000               	dw	0
   661  016E55  0000               	dw	0
   662  016E57  0000               	dw	0
   663  016E59  0000               	dw	0
   664                           
   665                           	psect	idataBANK2
   666  01856E                     __pidataBANK2:
   667                           	opt callstack 0
   668                           
   669                           ;initializer for _port_data
   670  01856E  FF                 	db	255
   671  01856F  00                 	db	0
   672  018570  FF                 	db	255
   673  018571  00                 	db	0
   674  018572  FF                 	db	255
   675  018573  00                 	db	0
   676  018574  FF                 	db	255
   677  018575  00                 	db	0
   678  018576  FF                 	db	255
   679  018577  00                 	db	0
   680  018578  FF                 	db	255
   681  018579  00                 	db	0
   682  01857A  FF                 	db	255
   683  01857B  00                 	db	0
   684  01857C  FF                 	db	255
   685  01857D  00                 	db	0
   686                           
   687                           	psect	mediumconst
   688  00FE5E                     __pmediumconst:
   689                           	opt callstack 0
   690  00FE5E  00                 	db	0
   691  00FE5F                     _T:
   692                           	opt callstack 0
   693  00FE5F  63                 	db	99
   694  00FE60  6F                 	db	111
   695  00FE61  6D                 	db	109
   696  00FE62  6D                 	db	109
   697  00FE63  61                 	db	97
   698  00FE64  6E                 	db	110
   699  00FE65  64                 	db	100
   700  00FE66  73                 	db	115
   701  00FE67  20                 	db	32
   702  00FE68  31                 	db	49
   703  00FE69  00                 	db	0
   704  00FE6A  00                 	db	0
   705  00FE6B  00                 	db	0
   706  00FE6C  00                 	db	0
   707  00FE6D  00                 	db	0
   708  00FE6E  00                 	db	0
   709  00FE6F  00                 	db	0
   710  00FE70  00                 	db	0
   711  00FE71  64                 	db	100
   712  00FE72  69                 	db	105
   713  00FE73  73                 	db	115
   714  00FE74  70                 	db	112
   715  00FE75  6C                 	db	108
   716  00FE76  61                 	db	97
   717  00FE77  79                 	db	121
   718  00FE78  73                 	db	115
   719  00FE79  20                 	db	32
   720  00FE7A  31                 	db	49
   721  00FE7B  00                 	db	0
   722  00FE7C  00                 	db	0
   723  00FE7D  00                 	db	0
   724  00FE7E  00                 	db	0
   725  00FE7F  00                 	db	0
   726  00FE80  00                 	db	0
   727  00FE81  00                 	db	0
   728  00FE82  00                 	db	0
   729  00FE83  63                 	db	99
   730  00FE84  6F                 	db	111
   731  00FE85  6D                 	db	109
   732  00FE86  6D                 	db	109
   733  00FE87  61                 	db	97
   734  00FE88  6E                 	db	110
   735  00FE89  64                 	db	100
   736  00FE8A  73                 	db	115
   737  00FE8B  20                 	db	32
   738  00FE8C  32                 	db	50
   739  00FE8D  00                 	db	0
   740  00FE8E  00                 	db	0
   741  00FE8F  00                 	db	0
   742  00FE90  00                 	db	0
   743  00FE91  00                 	db	0
   744  00FE92  00                 	db	0
   745  00FE93  00                 	db	0
   746  00FE94  00                 	db	0
   747  00FE95  64                 	db	100
   748  00FE96  69                 	db	105
   749  00FE97  73                 	db	115
   750  00FE98  70                 	db	112
   751  00FE99  6C                 	db	108
   752  00FE9A  61                 	db	97
   753  00FE9B  79                 	db	121
   754  00FE9C  73                 	db	115
   755  00FE9D  20                 	db	32
   756  00FE9E  32                 	db	50
   757  00FE9F  00                 	db	0
   758  00FEA0  00                 	db	0
   759  00FEA1  00                 	db	0
   760  00FEA2  00                 	db	0
   761  00FEA3  00                 	db	0
   762  00FEA4  00                 	db	0
   763  00FEA5  00                 	db	0
   764  00FEA6  00                 	db	0
   765  00FEA7  63                 	db	99
   766  00FEA8  6F                 	db	111
   767  00FEA9  6D                 	db	109
   768  00FEAA  6D                 	db	109
   769  00FEAB  61                 	db	97
   770  00FEAC  6E                 	db	110
   771  00FEAD  64                 	db	100
   772  00FEAE  73                 	db	115
   773  00FEAF  20                 	db	32
   774  00FEB0  33                 	db	51
   775  00FEB1  00                 	db	0
   776  00FEB2  00                 	db	0
   777  00FEB3  00                 	db	0
   778  00FEB4  00                 	db	0
   779  00FEB5  00                 	db	0
   780  00FEB6  00                 	db	0
   781  00FEB7  00                 	db	0
   782  00FEB8  00                 	db	0
   783  00FEB9  64                 	db	100
   784  00FEBA  69                 	db	105
   785  00FEBB  73                 	db	115
   786  00FEBC  70                 	db	112
   787  00FEBD  6C                 	db	108
   788  00FEBE  61                 	db	97
   789  00FEBF  79                 	db	121
   790  00FEC0  73                 	db	115
   791  00FEC1  20                 	db	32
   792  00FEC2  33                 	db	51
   793  00FEC3  00                 	db	0
   794  00FEC4  00                 	db	0
   795  00FEC5  00                 	db	0
   796  00FEC6  00                 	db	0
   797  00FEC7  00                 	db	0
   798  00FEC8  00                 	db	0
   799  00FEC9  00                 	db	0
   800  00FECA  00                 	db	0
   801  00FECB  63                 	db	99
   802  00FECC  6F                 	db	111
   803  00FECD  6D                 	db	109
   804  00FECE  6D                 	db	109
   805  00FECF  61                 	db	97
   806  00FED0  6E                 	db	110
   807  00FED1  64                 	db	100
   808  00FED2  73                 	db	115
   809  00FED3  20                 	db	32
   810  00FED4  34                 	db	52
   811  00FED5  00                 	db	0
   812  00FED6  00                 	db	0
   813  00FED7  00                 	db	0
   814  00FED8  00                 	db	0
   815  00FED9  00                 	db	0
   816  00FEDA  00                 	db	0
   817  00FEDB  00                 	db	0
   818  00FEDC  00                 	db	0
   819  00FEDD  64                 	db	100
   820  00FEDE  69                 	db	105
   821  00FEDF  73                 	db	115
   822  00FEE0  70                 	db	112
   823  00FEE1  6C                 	db	108
   824  00FEE2  61                 	db	97
   825  00FEE3  79                 	db	121
   826  00FEE4  73                 	db	115
   827  00FEE5  20                 	db	32
   828  00FEE6  34                 	db	52
   829  00FEE7  00                 	db	0
   830  00FEE8  00                 	db	0
   831  00FEE9  00                 	db	0
   832  00FEEA  00                 	db	0
   833  00FEEB  00                 	db	0
   834  00FEEC  00                 	db	0
   835  00FEED  00                 	db	0
   836  00FEEE  00                 	db	0
   837  00FEEF                     __end_of_T:
   838                           	opt callstack 0
   839  0000                     _IVTADL	set	14493
   840  0000                     _IVTADH	set	14494
   841  0000                     _IVTADU	set	14495
   842  0000                     _PIR4bits	set	14756
   843  0000                     _PIE8bits	set	14744
   844  0000                     _PIR8bits	set	14760
   845  0000                     _SCANPR	set	14839
   846  0000                     _DMA2PR	set	14836
   847  0000                     _DMA1PR	set	14835
   848  0000                     _MAINPR	set	14834
   849  0000                     _ISRPR	set	14833
   850  0000                     _PIE2bits	set	14738
   851  0000                     _PIR2bits	set	14754
   852  0000                     _PIE9bits	set	14745
   853  0000                     _PIR9bits	set	14761
   854  0000                     _PIE6bits	set	14742
   855  0000                     _PIE3bits	set	14739
   856  0000                     _PMD7	set	14791
   857  0000                     _PMD6	set	14790
   858  0000                     _PMD5	set	14789
   859  0000                     _PMD4	set	14788
   860  0000                     _PMD3	set	14787
   861  0000                     _PMD2	set	14786
   862  0000                     _PMD1	set	14785
   863  0000                     _PMD0	set	14784
   864  0000                     _OSCTUNE	set	14814
   865  0000                     _OSCFRQ	set	14815
   866  0000                     _OSCEN	set	14813
   867  0000                     _OSCCON3	set	14811
   868  0000                     _OSCCON1	set	14809
   869  0000                     _IPR8bits	set	14728
   870  0000                     _IPR9bits	set	14729
   871  0000                     _IPR5bits	set	14725
   872  0000                     _IPR1bits	set	14721
   873  0000                     _IPR3bits	set	14723
   874  0000                     _IPR6bits	set	14726
   875  0000                     _IPR2bits	set	14722
   876  0000                     _PIE5bits	set	14741
   877  0000                     _PIE1bits	set	14737
   878  0000                     _PIR5bits	set	14757
   879  0000                     _PIR1bits	set	14753
   880  0000                     _PLLR	set	118496
   881  0000                     _SPI1SDIPPS	set	15071
   882  0000                     _U1RXPPS	set	15077
   883  0000                     _RC6PPS	set	14870
   884  0000                     _RC5PPS	set	14869
   885  0000                     _INT1PPS	set	15041
   886  0000                     _RD1PPS	set	14873
   887  0000                     _INT0PPS	set	15040
   888  0000                     _RC3PPS	set	14867
   889  0000                     _RB6PPS	set	14862
   890  0000                     _SPI1SCKPPS	set	15070
   891  0000                     _U2RXPPS	set	15080
   892  0000                     _SLRCONF	set	14995
   893  0000                     _SLRCONE	set	14979
   894  0000                     _SLRCOND	set	14963
   895  0000                     _SLRCONC	set	14947
   896  0000                     _SLRCONB	set	14931
   897  0000                     _SLRCONA	set	14915
   898  0000                     _ODCOND	set	14962
   899  0000                     _ODCONC	set	14946
   900  0000                     _ODCONB	set	14930
   901  0000                     _ODCONA	set	14914
   902  0000                     _ODCONF	set	14994
   903  0000                     _ODCONE	set	14978
   904  0000                     _WPUC	set	14945
   905  0000                     _WPUA	set	14913
   906  0000                     _WPUB	set	14929
   907  0000                     _WPUE	set	14977
   908  0000                     _WPUF	set	14993
   909  0000                     _WPUD	set	14961
   910  0000                     _ANSELA	set	14912
   911  0000                     _ANSELF	set	14992
   912  0000                     _ANSELE	set	14976
   913  0000                     _ANSELB	set	14928
   914  0000                     _ANSELC	set	14944
   915  0000                     _ANSELD	set	14960
   916  0000                     _DMA2SSA	set	15321
   917  0000                     _DMA1SSA	set	15353
   918  0000                     _DMA2DSZ	set	15310
   919  0000                     _DMA2SSZ	set	15319
   920  0000                     _DMA2DSA	set	15312
   921  0000                     _DMA1DSZ	set	15342
   922  0000                     _DMA1SSZ	set	15351
   923  0000                     _DMA1DSA	set	15344
   924  0000                     _DMA1CON0bits	set	15356
   925  0000                     _DMA1CON1bits	set	15357
   926  0000                     _DMA2CON0	set	15324
   927  0000                     _DMA2AIRQ	set	15326
   928  0000                     _DMA2SIRQ	set	15327
   929  0000                     _DMA2CON1	set	15325
   930  0000                     _DMA1CON0	set	15356
   931  0000                     _DMA1AIRQ	set	15358
   932  0000                     _DMA1SIRQ	set	15359
   933  0000                     _DMA1CON1	set	15357
   934  0000                     _CLKRCON	set	15589
   935  0000                     _CLKRCLK	set	15590
   936  0000                     _SPI1INTFbits	set	15642
   937  0000                     _SPI1RXB	set	15632
   938  0000                     _SPI1TXB	set	15633
   939  0000                     _SPI1TCNTL	set	15634
   940  0000                     _SPI1CON0	set	15636
   941  0000                     _SPI1CLK	set	15644
   942  0000                     _SPI1BAUD	set	15641
   943  0000                     _SPI1CON2	set	15638
   944  0000                     _SPI1CON1	set	15637
   945  0000                     _U2RXB	set	15824
   946  0000                     _U2TXB	set	15826
   947  0000                     _U2ERRIE	set	15842
   948  0000                     _U2ERRIR	set	15841
   949  0000                     _U2UIR	set	15840
   950  0000                     _U2FIFO	set	15839
   951  0000                     _U2BRGH	set	15838
   952  0000                     _U2BRGL	set	15837
   953  0000                     _U2CON2	set	15836
   954  0000                     _U2CON1	set	15835
   955  0000                     _U2CON0	set	15834
   956  0000                     _U2P3L	set	15832
   957  0000                     _U2P2L	set	15830
   958  0000                     _U2P1L	set	15828
   959  0000                     _U1RXB	set	15848
   960  0000                     _U1TXB	set	15850
   961  0000                     _U1ERRIE	set	15866
   962  0000                     _U1ERRIR	set	15865
   963  0000                     _U1UIR	set	15864
   964  0000                     _U1FIFO	set	15863
   965  0000                     _U1BRGH	set	15862
   966  0000                     _U1BRGL	set	15861
   967  0000                     _U1CON2	set	15860
   968  0000                     _U1CON1	set	15859
   969  0000                     _U1CON0	set	15858
   970  0000                     _U1P3H	set	15857
   971  0000                     _U1P3L	set	15856
   972  0000                     _U1P2H	set	15855
   973  0000                     _U1P2L	set	15854
   974  0000                     _U1P1H	set	15853
   975  0000                     _U1P1L	set	15852
   976  0000                     _FVRCON	set	16065
   977  0000                     _ADFLTRL	set	16102
   978  0000                     _ADFLTRH	set	16103
   979  0000                     _ADCON0bits	set	16120
   980  0000                     _ADCON0	set	16120
   981  0000                     _ADCLK	set	16127
   982  0000                     _ADACT	set	16126
   983  0000                     _ADREF	set	16125
   984  0000                     _ADSTAT	set	16124
   985  0000                     _ADCON3	set	16123
   986  0000                     _ADCON2	set	16122
   987  0000                     _ADCON1	set	16121
   988  0000                     _ADPREH	set	16119
   989  0000                     _ADPREL	set	16118
   990  0000                     _ADCAP	set	16117
   991  0000                     _ADACQH	set	16116
   992  0000                     _ADACQL	set	16115
   993  0000                     _ADPCH	set	16113
   994  0000                     _ADRPT	set	16108
   995  0000                     _ADACCU	set	16106
   996  0000                     _ADSTPTH	set	16101
   997  0000                     _ADSTPTL	set	16100
   998  0000                     _ADUTHH	set	16097
   999  0000                     _ADUTHL	set	16096
  1000  0000                     _ADLTHH	set	16095
  1001  0000                     _ADLTHL	set	16094
  1002  0000                     _CCPTMRS1bits	set	16223
  1003  0000                     _PORTFbits	set	16335
  1004  0000                     _LATCbits	set	16316
  1005  0000                     _LATDbits	set	16317
  1006  0000                     _PORTBbits	set	16331
  1007  0000                     _T2CON	set	16300
  1008  0000                     _T2TMR	set	16298
  1009  0000                     _T2PR	set	16299
  1010  0000                     _T2RST	set	16303
  1011  0000                     _T2HLT	set	16301
  1012  0000                     _T2CLKCON	set	16302
  1013  0000                     _PWM8DCL	set	16224
  1014  0000                     _PWM8DCH	set	16225
  1015  0000                     _PWM8CON	set	16226
  1016  0000                     _LATEbits	set	16318
  1017  0000                     _T5CONbits	set	16282
  1018  0000                     _T5CON	set	16282
  1019  0000                     _TMR5L	set	16280
  1020  0000                     _TMR5H	set	16281
  1021  0000                     _T5CLK	set	16285
  1022  0000                     _T5GATE	set	16284
  1023  0000                     _T5GCON	set	16283
  1024  0000                     _T6CON	set	16276
  1025  0000                     _T6TMR	set	16274
  1026  0000                     _T6PR	set	16275
  1027  0000                     _T6RST	set	16279
  1028  0000                     _T6HLT	set	16277
  1029  0000                     _T6CLKCON	set	16278
  1030  0000                     _TRISD	set	16325
  1031  0000                     _TRISC	set	16324
  1032  0000                     _TRISB	set	16323
  1033  0000                     _TRISA	set	16322
  1034  0000                     _TRISF	set	16327
  1035  0000                     _TRISE	set	16326
  1036  0000                     _LATC	set	16316
  1037  0000                     _LATB	set	16315
  1038  0000                     _LATF	set	16319
  1039  0000                     _LATA	set	16314
  1040  0000                     _LATD	set	16317
  1041  0000                     _LATE	set	16318
  1042  0000                     _IVTLOCKbits	set	16340
  1043  0000                     _IVTLOCK	set	16340
  1044  0000                     _INTCON0bits	set	16338
  1045  0000                     _GIE	set	130711
  1046  00FEEF                     
  1047                           ; BSR set to: 57
  1048  00FEEF  20                 	db	32
  1049  00FEF0  4D                 	db	77	;'M'
  1050  00FEF1  65                 	db	101	;'e'
  1051  00FEF2  73                 	db	115	;'s'
  1052  00FEF3  67                 	db	103	;'g'
  1053  00FEF4  20                 	db	32
  1054  00FEF5  25                 	db	37
  1055  00FEF6  64                 	db	100	;'d'
  1056  00FEF7  20                 	db	32
  1057  00FEF8  53                 	db	83	;'S'
  1058  00FEF9  74                 	db	116	;'t'
  1059  00FEFA  61                 	db	97	;'a'
  1060  00FEFB  63                 	db	99	;'c'
  1061  00FEFC  6B                 	db	107	;'k'
  1062  00FEFD  20                 	db	32
  1063  00FEFE  25                 	db	37
  1064  00FEFF  64                 	db	100	;'d'
  1065  00FF00  20                 	db	32
  1066  00FF01  20                 	db	32
  1067  00FF02  20                 	db	32
  1068  00FF03  20                 	db	32
  1069  00FF04  20                 	db	32
  1070  00FF05  20                 	db	32
  1071  00FF06  00                 	db	0
  1072  00FF07                     STR_27:
  1073                           
  1074                           ; BSR set to: 57
  1075  00FF07  20                 	db	32
  1076  00FF08  20                 	db	32
  1077  00FF09  20                 	db	32
  1078  00FF0A  20                 	db	32
  1079  00FF0B  20                 	db	32
  1080  00FF0C  20                 	db	32
  1081  00FF0D  20                 	db	32
  1082  00FF0E  20                 	db	32
  1083  00FF0F  20                 	db	32
  1084  00FF10  20                 	db	32
  1085  00FF11  20                 	db	32
  1086  00FF12  20                 	db	32
  1087  00FF13  20                 	db	32
  1088  00FF14  20                 	db	32
  1089  00FF15  20                 	db	32
  1090  00FF16  20                 	db	32
  1091  00FF17  20                 	db	32
  1092  00FF18  20                 	db	32
  1093  00FF19  00                 	db	0
  1094  00FF1A                     STR_17:
  1095                           
  1096                           ; BSR set to: 57
  1097  00FF1A  48                 	db	72	;'H'
  1098  00FF1B  45                 	db	69	;'E'
  1099  00FF1C  4C                 	db	76	;'L'
  1100  00FF1D  50                 	db	80	;'P'
  1101  00FF1E  20                 	db	32
  1102  00FF1F  25                 	db	37
  1103  00FF20  73                 	db	115	;'s'
  1104  00FF21  20                 	db	32
  1105  00FF22  20                 	db	32
  1106  00FF23  20                 	db	32
  1107  00FF24  20                 	db	32
  1108  00FF25  20                 	db	32
  1109  00FF26  20                 	db	32
  1110  00FF27  20                 	db	32
  1111  00FF28  20                 	db	32
  1112  00FF29  20                 	db	32
  1113  00FF2A  20                 	db	32
  1114  00FF2B  20                 	db	32
  1115  00FF2C  00                 	db	0
  1116  00FF2D                     
  1117                           ; BSR set to: 57
  1118  00FF2D  44                 	db	68	;'D'
  1119  00FF2E  49                 	db	73	;'I'
  1120  00FF2F  53                 	db	83	;'S'
  1121  00FF30  50                 	db	80	;'P'
  1122  00FF31  4C                 	db	76	;'L'
  1123  00FF32  41                 	db	65	;'A'
  1124  00FF33  59                 	db	89	;'Y'
  1125  00FF34  20                 	db	32
  1126  00FF35  25                 	db	37
  1127  00FF36  73                 	db	115	;'s'
  1128  00FF37  20                 	db	32
  1129  00FF38  20                 	db	32
  1130  00FF39  20                 	db	32
  1131  00FF3A  20                 	db	32
  1132  00FF3B  20                 	db	32
  1133  00FF3C  20                 	db	32
  1134  00FF3D  20                 	db	32
  1135  00FF3E  20                 	db	32
  1136  00FF3F  00                 	db	0
  1137  00FF40                     STR_8:
  1138                           
  1139                           ; BSR set to: 57
  1140  00FF40  20                 	db	32
  1141  00FF41  56                 	db	86	;'V'
  1142  00FF42  54                 	db	84	;'T'
  1143  00FF43  45                 	db	69	;'E'
  1144  00FF44  52                 	db	82	;'R'
  1145  00FF45  4D                 	db	77	;'M'
  1146  00FF46  20                 	db	32
  1147  00FF47  23                 	db	35
  1148  00FF48  32                 	db	50	;'2'
  1149  00FF49  20                 	db	32
  1150  00FF4A  20                 	db	32
  1151  00FF4B  20                 	db	32
  1152  00FF4C  20                 	db	32
  1153  00FF4D  20                 	db	32
  1154  00FF4E  20                 	db	32
  1155  00FF4F  20                 	db	32
  1156  00FF50  00                 	db	0
  1157  00FF51                     STR_4:
  1158                           
  1159                           ; BSR set to: 57
  1160  00FF51  20                 	db	32
  1161  00FF52  4E                 	db	78	;'N'
  1162  00FF53  53                 	db	83	;'S'
  1163  00FF54  41                 	db	65	;'A'
  1164  00FF55  53                 	db	83	;'S'
  1165  00FF56  50                 	db	80	;'P'
  1166  00FF57  4F                 	db	79	;'O'
  1167  00FF58  4F                 	db	79	;'O'
  1168  00FF59  4B                 	db	75	;'K'
  1169  00FF5A  20                 	db	32
  1170  00FF5B  20                 	db	32
  1171  00FF5C  20                 	db	32
  1172  00FF5D  20                 	db	32
  1173  00FF5E  20                 	db	32
  1174  00FF5F  20                 	db	32
  1175  00FF60  20                 	db	32
  1176  00FF61  00                 	db	0
  1177  00FF62                     STR_1:
  1178                           
  1179                           ; BSR set to: 57
  1180  00FF62  20                 	db	32
  1181  00FF63  4D                 	db	77	;'M'
  1182  00FF64  42                 	db	66	;'B'
  1183  00FF65  4D                 	db	77	;'M'
  1184  00FF66  43                 	db	67	;'C'
  1185  00FF67  20                 	db	32
  1186  00FF68  53                 	db	83	;'S'
  1187  00FF69  4F                 	db	79	;'O'
  1188  00FF6A  4C                 	db	76	;'L'
  1189  00FF6B  41                 	db	65	;'A'
  1190  00FF6C  52                 	db	82	;'R'
  1191  00FF6D  4D                 	db	77	;'M'
  1192  00FF6E  4F                 	db	79	;'O'
  1193  00FF6F  4E                 	db	78	;'N'
  1194  00FF70  20                 	db	32
  1195  00FF71  20                 	db	32
  1196  00FF72  00                 	db	0
  1197  00FF73                     STR_5:
  1198                           
  1199                           ; BSR set to: 57
  1200  00FF73  20                 	db	32
  1201  00FF74  53                 	db	83	;'S'
  1202  00FF75  45                 	db	69	;'E'
  1203  00FF76  51                 	db	81	;'Q'
  1204  00FF77  55                 	db	85	;'U'
  1205  00FF78  45                 	db	69	;'E'
  1206  00FF79  4E                 	db	78	;'N'
  1207  00FF7A  43                 	db	67	;'C'
  1208  00FF7B  45                 	db	69	;'E'
  1209  00FF7C  20                 	db	32
  1210  00FF7D  54                 	db	84	;'T'
  1211  00FF7E  45                 	db	69	;'E'
  1212  00FF7F  53                 	db	83	;'S'
  1213  00FF80  54                 	db	84	;'T'
  1214  00FF81  20                 	db	32
  1215  00FF82  20                 	db	32
  1216  00FF83  00                 	db	0
  1217  00FF84                     STR_11:
  1218                           
  1219                           ; BSR set to: 57
  1220  00FF84  25                 	db	37
  1221  00FF85  64                 	db	100	;'d'
  1222  00FF86  20                 	db	32
  1223  00FF87  25                 	db	37
  1224  00FF88  32                 	db	50	;'2'
  1225  00FF89  2E                 	db	46
  1226  00FF8A  34                 	db	52	;'4'
  1227  00FF8B  66                 	db	102	;'f'
  1228  00FF8C  2C                 	db	44
  1229  00FF8D  20                 	db	32
  1230  00FF8E  25                 	db	37
  1231  00FF8F  64                 	db	100	;'d'
  1232  00FF90  20                 	db	32
  1233  00FF91  20                 	db	32
  1234  00FF92  20                 	db	32
  1235  00FF93  23                 	db	35
  1236  00FF94  00                 	db	0
  1237  00FF95                     STR_21:
  1238                           
  1239                           ; BSR set to: 57
  1240  00FF95  76                 	db	118	;'v'
  1241  00FF96  74                 	db	116	;'t'
  1242  00FF97  65                 	db	101	;'e'
  1243  00FF98  72                 	db	114	;'r'
  1244  00FF99  6D                 	db	109	;'m'
  1245  00FF9A  20                 	db	32
  1246  00FF9B  25                 	db	37
  1247  00FF9C  78                 	db	120	;'x'
  1248  00FF9D  3A                 	db	58	;':'
  1249  00FF9E  25                 	db	37
  1250  00FF9F  78                 	db	120	;'x'
  1251  00FFA0  20                 	db	32
  1252  00FFA1  20                 	db	32
  1253  00FFA2  20                 	db	32
  1254  00FFA3  00                 	db	0
  1255  00FFA4                     STR_2:
  1256                           
  1257                           ; BSR set to: 57
  1258  00FFA4  20                 	db	32
  1259  00FFA5  56                 	db	86	;'V'
  1260  00FFA6  65                 	db	101	;'e'
  1261  00FFA7  72                 	db	114	;'r'
  1262  00FFA8  73                 	db	115	;'s'
  1263  00FFA9  69                 	db	105	;'i'
  1264  00FFAA  6F                 	db	111	;'o'
  1265  00FFAB  6E                 	db	110	;'n'
  1266  00FFAC  20                 	db	32
  1267  00FFAD  25                 	db	37
  1268  00FFAE  73                 	db	115	;'s'
  1269  00FFAF  20                 	db	32
  1270  00FFB0  20                 	db	32
  1271  00FFB1  20                 	db	32
  1272  00FFB2  00                 	db	0
  1273  00FFB3                     STR_9:
  1274                           
  1275                           ; BSR set to: 57
  1276  00FFB3  25                 	db	37
  1277  00FFB4  64                 	db	100	;'d'
  1278  00FFB5  20                 	db	32
  1279  00FFB6  25                 	db	37
  1280  00FFB7  32                 	db	50	;'2'
  1281  00FFB8  2E                 	db	46
  1282  00FFB9  34                 	db	52	;'4'
  1283  00FFBA  66                 	db	102	;'f'
  1284  00FFBB  20                 	db	32
  1285  00FFBC  20                 	db	32
  1286  00FFBD  20                 	db	32
  1287  00FFBE  25                 	db	37
  1288  00FFBF  64                 	db	100	;'d'
  1289  00FFC0  00                 	db	0
  1290  00FFC1                     STR_15:
  1291                           
  1292                           ; BSR set to: 57
  1293  00FFC1  4E                 	db	78	;'N'
  1294  00FFC2  6F                 	db	111	;'o'
  1295  00FFC3  76                 	db	118	;'v'
  1296  00FFC4  20                 	db	32
  1297  00FFC5  32                 	db	50	;'2'
  1298  00FFC6  33                 	db	51	;'3'
  1299  00FFC7  20                 	db	32
  1300  00FFC8  32                 	db	50	;'2'
  1301  00FFC9  30                 	db	48	;'0'
  1302  00FFCA  31                 	db	49	;'1'
  1303  00FFCB  39                 	db	57	;'9'
  1304  00FFCC  00                 	db	0
  1305  00FFCD                     STR_19:
  1306                           
  1307                           ; BSR set to: 57
  1308  00FFCD  25                 	db	37
  1309  00FFCE  73                 	db	115	;'s'
  1310  00FFCF  20                 	db	32
  1311  00FFD0  20                 	db	32
  1312  00FFD1  20                 	db	32
  1313  00FFD2  20                 	db	32
  1314  00FFD3  20                 	db	32
  1315  00FFD4  20                 	db	32
  1316  00FFD5  20                 	db	32
  1317  00FFD6  00                 	db	0
  1318  00FFD7                     STR_16:
  1319                           
  1320                           ; BSR set to: 57
  1321  00FFD7  31                 	db	49	;'1'
  1322  00FFD8  34                 	db	52	;'4'
  1323  00FFD9  3A                 	db	58	;':'
  1324  00FFDA  30                 	db	48	;'0'
  1325  00FFDB  31                 	db	49	;'1'
  1326  00FFDC  3A                 	db	58	;':'
  1327  00FFDD  31                 	db	49	;'1'
  1328  00FFDE  31                 	db	49	;'1'
  1329  00FFDF  00                 	db	0
  1330  00FFE0                     STR_3:
  1331                           
  1332                           ; BSR set to: 57
  1333  00FFE0  30                 	db	48	;'0'
  1334  00FFE1  2E                 	db	46
  1335  00FFE2  39                 	db	57	;'9'
  1336  00FFE3  36                 	db	54	;'6'
  1337  00FFE4  00                 	db	0
  1338  00FFE5                     STR_34:
  1339                           
  1340                           ; BSR set to: 57
  1341  00FFE5  49                 	db	73	;'I'
  1342  00FFE6  4E                 	db	78	;'N'
  1343  00FFE7  46                 	db	70	;'F'
  1344  00FFE8  00                 	db	0
  1345  00FFE9                     STR_38:
  1346                           
  1347                           ; BSR set to: 57
  1348  00FFE9  4E                 	db	78	;'N'
  1349  00FFEA  41                 	db	65	;'A'
  1350  00FFEB  4E                 	db	78	;'N'
  1351  00FFEC  00                 	db	0
  1352  00FFED                     STR_35:
  1353                           
  1354                           ; BSR set to: 57
  1355  00FFED  69                 	db	105	;'i'
  1356  00FFEE  6E                 	db	110	;'n'
  1357  00FFEF  66                 	db	102	;'f'
  1358  00FFF0  00                 	db	0
  1359  00FFF1                     STR_39:
  1360                           
  1361                           ; BSR set to: 57
  1362  00FFF1  6E                 	db	110	;'n'
  1363  00FFF2  61                 	db	97	;'a'
  1364  00FFF3  6E                 	db	110	;'n'
  1365  00FFF4  00                 	db	0
  1366  00FFF5                     STR_42:
  1367                           
  1368                           ; BSR set to: 57
  1369  00FFF5  6C                 	db	108	;'l'
  1370  00FFF6  66                 	db	102	;'f'
  1371  00FFF7  00                 	db	0
  1372  00FFF8                     STR_13:
  1373                           
  1374                           ; BSR set to: 57
  1375  00FFF8  25                 	db	37
  1376  00FFF9  63                 	db	99	;'c'
  1377  00FFFA  00                 	db	0
  1378  00FFFB                     STR_12:
  1379                           
  1380                           ; BSR set to: 57
  1381  00FFFB  25                 	db	37
  1382  00FFFC  73                 	db	115	;'s'
  1383  00FFFD  00                 	db	0
  1384  0000                     
  1385                           ; #config settings
  1386  00FFFE  00                 	db	0	; dummy byte at the end
  1387  0000                     
  1388                           	psect	cinit
  1389  016A2A                     __pcinit:
  1390                           	opt callstack 0
  1391  016A2A                     start_initialization:
  1392                           	opt callstack 0
  1393  016A2A                     __initialization:
  1394                           	opt callstack 0
  1395                           
  1396                           ; Initialize objects allocated to BANK2 (16 bytes)
  1397                           ; load TBLPTR registers with __pidataBANK2
  1398  016A2A  0E6E               	movlw	low __pidataBANK2
  1399  016A2C  6EF6               	movwf	tblptrl,c
  1400  016A2E  0E85               	movlw	high __pidataBANK2
  1401  016A30  6EF7               	movwf	tblptrh,c
  1402  016A32  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  1403  016A34  6EF8               	movwf	tblptru,c
  1404  016A36  EE00  F290         	lfsr	0,__pdataBANK2
  1405  016A3A  EE20 F010          	lfsr	2,16
  1406  016A3E                     copy_data0:
  1407  016A3E  0009               	tblrd		*+
  1408  016A40  006F FFD7 FFEE     	movff	tablat,postinc0
  1409  016A46  50DD               	movf	postdec2,w,c
  1410  016A48  50D9               	movf	fsr2l,w,c
  1411  016A4A  E1F9               	bnz	copy_data0
  1412                           
  1413                           ; Initialize objects allocated to BANK1 (187 bytes)
  1414                           ; load TBLPTR registers with __pidataBANK1
  1415  016A4C  0EA0               	movlw	low __pidataBANK1
  1416  016A4E  6EF6               	movwf	tblptrl,c
  1417  016A50  0E6D               	movlw	high __pidataBANK1
  1418  016A52  6EF7               	movwf	tblptrh,c
  1419  016A54  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  1420  016A56  6EF8               	movwf	tblptru,c
  1421  016A58  EE00  F100         	lfsr	0,__pdataBANK1
  1422  016A5C  EE20 F0BB          	lfsr	2,187
  1423  016A60                     copy_data1:
  1424  016A60  0009               	tblrd		*+
  1425  016A62  006F FFD7 FFEE     	movff	tablat,postinc0
  1426  016A68  50DD               	movf	postdec2,w,c
  1427  016A6A  50D9               	movf	fsr2l,w,c
  1428  016A6C  E1F9               	bnz	copy_data1
  1429                           
  1430                           ; Initialize objects allocated to BANK0 (47 bytes)
  1431                           ; load TBLPTR registers with __pidataBANK0
  1432  016A6E  0EFE               	movlw	low __pidataBANK0
  1433  016A70  6EF6               	movwf	tblptrl,c
  1434  016A72  0E7E               	movlw	high __pidataBANK0
  1435  016A74  6EF7               	movwf	tblptrh,c
  1436  016A76  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  1437  016A78  6EF8               	movwf	tblptru,c
  1438  016A7A  EE00  F0C7         	lfsr	0,__pdataBANK0
  1439  016A7E  EE20 F02F          	lfsr	2,47
  1440  016A82                     copy_data2:
  1441  016A82  0009               	tblrd		*+
  1442  016A84  006F FFD7 FFEE     	movff	tablat,postinc0
  1443  016A8A  50DD               	movf	postdec2,w,c
  1444  016A8C  50D9               	movf	fsr2l,w,c
  1445  016A8E  E1F9               	bnz	copy_data2
  1446                           
  1447                           ; Clear objects allocated to BANK7 (255 bytes)
  1448  016A90  EE01  F300         	lfsr	0,__pbssBANK7
  1449  016A94  EE20 F0FF          	lfsr	2,255
  1450  016A98                     clear_0:
  1451  016A98  6AEE               	clrf	postinc0,c
  1452  016A9A  50DD               	movf	postdec2,w,c
  1453  016A9C  50D9               	movf	fsr2l,w,c
  1454  016A9E  E1FC               	bnz	clear_0
  1455  016AA0  50DA               	movf	fsr2h,w,c
  1456  016AA2  E1FA               	bnz	clear_0
  1457                           
  1458                           ; Clear objects allocated to BANK6 (255 bytes)
  1459  016AA4  EE01  F200         	lfsr	0,__pbssBANK6
  1460  016AA8  EE20 F0FF          	lfsr	2,255
  1461  016AAC                     clear_1:
  1462  016AAC  6AEE               	clrf	postinc0,c
  1463  016AAE  50DD               	movf	postdec2,w,c
  1464  016AB0  50D9               	movf	fsr2l,w,c
  1465  016AB2  E1FC               	bnz	clear_1
  1466  016AB4  50DA               	movf	fsr2h,w,c
  1467  016AB6  E1FA               	bnz	clear_1
  1468                           
  1469                           ; Clear objects allocated to BANK5 (218 bytes)
  1470  016AB8  EE01  F100         	lfsr	0,__pbssBANK5
  1471  016ABC  0EDA               	movlw	218
  1472  016ABE                     clear_2:
  1473  016ABE  6AEE               	clrf	postinc0,c
  1474  016AC0  06E8               	decf	wreg,f,c
  1475  016AC2  E1FD               	bnz	clear_2
  1476                           
  1477                           ; Clear objects allocated to BANK4 (134 bytes)
  1478  016AC4  EE01  F000         	lfsr	0,__pbssBANK4
  1479  016AC8  0E86               	movlw	134
  1480  016ACA                     clear_3:
  1481  016ACA  6AEE               	clrf	postinc0,c
  1482  016ACC  06E8               	decf	wreg,f,c
  1483  016ACE  E1FD               	bnz	clear_3
  1484                           
  1485                           ; Clear objects allocated to BANK3 (236 bytes)
  1486  016AD0  EE00  F300         	lfsr	0,__pbssBANK3
  1487  016AD4  0EEC               	movlw	236
  1488  016AD6                     clear_4:
  1489  016AD6  6AEE               	clrf	postinc0,c
  1490  016AD8  06E8               	decf	wreg,f,c
  1491  016ADA  E1FD               	bnz	clear_4
  1492                           
  1493                           ; Clear objects allocated to BANK2 (144 bytes)
  1494  016ADC  EE00  F200         	lfsr	0,__pbssBANK2
  1495  016AE0  0E90               	movlw	144
  1496  016AE2                     clear_5:
  1497  016AE2  6AEE               	clrf	postinc0,c
  1498  016AE4  06E8               	decf	wreg,f,c
  1499  016AE6  E1FD               	bnz	clear_5
  1500                           
  1501                           ; Clear objects allocated to BANK1 (8 bytes)
  1502  016AE8  EE00  F1BB         	lfsr	0,__pbssBANK1
  1503  016AEC  0E08               	movlw	8
  1504  016AEE                     clear_6:
  1505  016AEE  6AEE               	clrf	postinc0,c
  1506  016AF0  06E8               	decf	wreg,f,c
  1507  016AF2  E1FD               	bnz	clear_6
  1508                           
  1509                           ; Clear objects allocated to BANK0 (103 bytes)
  1510  016AF4  EE00  F060         	lfsr	0,__pbssBANK0
  1511  016AF8  0E67               	movlw	103
  1512  016AFA                     clear_7:
  1513  016AFA  6AEE               	clrf	postinc0,c
  1514  016AFC  06E8               	decf	wreg,f,c
  1515  016AFE  E1FD               	bnz	clear_7
  1516                           
  1517                           ; Clear objects allocated to COMRAM (49 bytes)
  1518  016B00  EE00  F001         	lfsr	0,__pbssCOMRAM
  1519  016B04  0E31               	movlw	49
  1520  016B06                     clear_8:
  1521  016B06  6AEE               	clrf	postinc0,c
  1522  016B08  06E8               	decf	wreg,f,c
  1523  016B0A  E1FD               	bnz	clear_8
  1524                           
  1525                           ;
  1526                           ; Setup IVTBASE
  1527                           ;
  1528  016B0C  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1529  016B0E  6ED5               	movwf	213,c
  1530  016B10  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1531  016B12  6ED6               	movwf	214,c
  1532  016B14  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1533  016B16  6ED7               	movwf	215,c
  1534  016B18                     end_of_initialization:
  1535                           	opt callstack 0
  1536  016B18                     __end_of__initialization:
  1537                           	opt callstack 0
  1538  016B18  0100               	movlb	0
  1539  016B1A  EF74  F09E         	goto	_main	;jump to C main() function
  1540                           
  1541                           	psect	bssCOMRAM
  1542  000001                     __pbssCOMRAM:
  1543                           	opt callstack 0
  1544  000001                     _ADCC_ADTI_InterruptHandler:
  1545                           	opt callstack 0
  1546  000001                     	ds	3
  1547  000004                     _ADCC_ADI_InterruptHandler:
  1548                           	opt callstack 0
  1549  000004                     	ds	3
  1550  000007                     _UART1_TxInterruptHandler:
  1551                           	opt callstack 0
  1552  000007                     	ds	3
  1553  00000A                     _UART1_RxInterruptHandler:
  1554                           	opt callstack 0
  1555  00000A                     	ds	3
  1556  00000D                     _UART2_TxInterruptHandler:
  1557                           	opt callstack 0
  1558  00000D                     	ds	3
  1559  000010                     _UART2_RxInterruptHandler:
  1560                           	opt callstack 0
  1561  000010                     	ds	3
  1562  000013                     _INT1_InterruptHandler:
  1563                           	opt callstack 0
  1564  000013                     	ds	3
  1565  000016                     _INT0_InterruptHandler:
  1566                           	opt callstack 0
  1567  000016                     	ds	3
  1568  000019                     _nout:
  1569                           	opt callstack 0
  1570  000019                     	ds	2
  1571  00001B                     _width:
  1572                           	opt callstack 0
  1573  00001B                     	ds	2
  1574  00001D                     _prec:
  1575                           	opt callstack 0
  1576  00001D                     	ds	2
  1577  00001F                     _flags:
  1578                           	opt callstack 0
  1579  00001F                     	ds	2
  1580  000021                     TMR5_ISR@CountCallBack:
  1581                           	opt callstack 0
  1582  000021                     	ds	2
  1583  000023                     _timer5ReloadVal:
  1584                           	opt callstack 0
  1585  000023                     	ds	2
  1586  000025                     _mode_sw:
  1587                           	opt callstack 0
  1588  000025                     	ds	1
  1589  000026                     _uart2RxCount:
  1590                           	opt callstack 0
  1591  000026                     	ds	1
  1592  000027                     _uart2RxTail:
  1593                           	opt callstack 0
  1594  000027                     	ds	1
  1595  000028                     _uart2RxHead:
  1596                           	opt callstack 0
  1597  000028                     	ds	1
  1598  000029                     _uart2TxBufferRemaining:
  1599                           	opt callstack 0
  1600  000029                     	ds	1
  1601  00002A                     _uart2TxTail:
  1602                           	opt callstack 0
  1603  00002A                     	ds	1
  1604  00002B                     _uart2TxHead:
  1605                           	opt callstack 0
  1606  00002B                     	ds	1
  1607  00002C                     _uart1RxCount:
  1608                           	opt callstack 0
  1609  00002C                     	ds	1
  1610  00002D                     _uart1RxTail:
  1611                           	opt callstack 0
  1612  00002D                     	ds	1
  1613  00002E                     _uart1RxHead:
  1614                           	opt callstack 0
  1615  00002E                     	ds	1
  1616  00002F                     _uart1TxBufferRemaining:
  1617                           	opt callstack 0
  1618  00002F                     	ds	1
  1619  000030                     _uart1TxTail:
  1620                           	opt callstack 0
  1621  000030                     	ds	1
  1622  000031                     _uart1TxHead:
  1623                           	opt callstack 0
  1624  000031                     	ds	1
  1625                           
  1626                           	psect	bssBANK0
  1627  000060                     __pbssBANK0:
  1628                           	opt callstack 0
  1629  000060                     _S:
  1630                           	opt callstack 0
  1631  000060                     	ds	41
  1632  000089                     _tickCount:
  1633                           	opt callstack 0
  1634  000089                     	ds	24
  1635  0000A1                     _spi_link:
  1636                           	opt callstack 0
  1637  0000A1                     	ds	12
  1638  0000AD                     floorf@F524:
  1639                           	opt callstack 0
  1640  0000AD                     	ds	4
  1641  0000B1                     ___fpclassifyf@F463:
  1642                           	opt callstack 0
  1643  0000B1                     	ds	4
  1644  0000B5                     _utctime:
  1645                           	opt callstack 0
  1646  0000B5                     	ds	4
  1647  0000B9                     wdtdelay@dcount:
  1648                           	opt callstack 0
  1649  0000B9                     	ds	4
  1650  0000BD                     _P:
  1651                           	opt callstack 0
  1652  0000BD                     	ds	4
  1653  0000C1                     _TMR5_InterruptHandler:
  1654                           	opt callstack 0
  1655  0000C1                     	ds	3
  1656  0000C4                     _TMR6_InterruptHandler:
  1657                           	opt callstack 0
  1658  0000C4                     	ds	3
  1659                           
  1660                           	psect	dataBANK0
  1661  0000C7                     __pdataBANK0:
  1662                           	opt callstack 0
  1663  0000C7                     _R:
  1664                           	opt callstack 0
  1665  0000C7                     	ds	40
  1666  0000EF                     stoa@F1166:
  1667                           	opt callstack 0
  1668  0000EF                     	ds	7
  1669                           
  1670                           	psect	bssBANK1
  1671  0001BB                     __pbssBANK1:
  1672                           	opt callstack 0
  1673  0001BB                     _seed:
  1674                           	opt callstack 0
  1675  0001BB                     	ds	8
  1676                           
  1677                           	psect	dataBANK1
  1678  000100                     __pdataBANK1:
  1679                           	opt callstack 0
  1680  000100                     _V:
  1681                           	opt callstack 0
  1682  000100                     	ds	187
  1683                           
  1684                           	psect	bssBANK2
  1685  000200                     __pbssBANK2:
  1686                           	opt callstack 0
  1687  000200                     lp_filter@smooth:
  1688                           	opt callstack 0
  1689  000200                     	ds	64
  1690  000240                     _dbuf:
  1691                           	opt callstack 0
  1692  000240                     	ds	80
  1693                           
  1694                           	psect	dataBANK2
  1695  000290                     __pdataBANK2:
  1696                           	opt callstack 0
  1697  000290                     _port_data:
  1698                           	opt callstack 0
  1699  000290                     	ds	16
  1700                           
  1701                           	psect	bssBANK3
  1702  000300                     __pbssBANK3:
  1703                           	opt callstack 0
  1704  000300                     _C:
  1705                           	opt callstack 0
  1706  000300                     	ds	108
  1707  00036C                     _uart2TxBuffer:
  1708                           	opt callstack 0
  1709  00036C                     	ds	64
  1710  0003AC                     _uart1TxBuffer:
  1711                           	opt callstack 0
  1712  0003AC                     	ds	64
  1713                           
  1714                           	psect	bssBANK4
  1715  000400                     __pbssBANK4:
  1716                           	opt callstack 0
  1717  000400                     _ring_buf2:
  1718                           	opt callstack 0
  1719  000400                     	ds	67
  1720  000443                     _ring_buf1:
  1721                           	opt callstack 0
  1722  000443                     	ds	67
  1723                           
  1724                           	psect	bssBANK5
  1725  000500                     __pbssBANK5:
  1726                           	opt callstack 0
  1727  000500                     _D:
  1728                           	opt callstack 0
  1729  000500                     	ds	218
  1730                           
  1731                           	psect	bssBANK6
  1732  000600                     __pbssBANK6:
  1733                           	opt callstack 0
  1734  000600                     _uart1RxBuffer:
  1735                           	opt callstack 0
  1736  000600                     	ds	255
  1737                           
  1738                           	psect	bssBANK7
  1739  000700                     __pbssBANK7:
  1740                           	opt callstack 0
  1741  000700                     _uart2RxBuffer:
  1742                           	opt callstack 0
  1743  000700                     	ds	255
  1744                           
  1745                           	psect	cstackBANK1
  1746  0001C3                     __pcstackBANK1:
  1747                           	opt callstack 0
  1748  0001C3                     ??_TMR5_ISR:
  1749                           
  1750                           ; 1 bytes @ 0x0
  1751  0001C3                     	ds	4
  1752                           
  1753                           	psect	cstackBANK0
  1754  0000F6                     __pcstackBANK0:
  1755                           	opt callstack 0
  1756  0000F6                     ??_INT1_ISR:
  1757                           
  1758                           ; 1 bytes @ 0x0
  1759  0000F6                     	ds	4
  1760                           
  1761                           	psect	cstackCOMRAM
  1762  000052                     __pcstackCOMRAM:
  1763                           	opt callstack 0
  1764  000052                     ??_ADCC_ThresholdISR:
  1765  000052                     
  1766                           ; 1 bytes @ 0x0
  1767  000052                     	ds	5
  1768  000057                     ??_TMR6_ISR:
  1769                           
  1770                           ; 1 bytes @ 0x5
  1771  000057                     	ds	1
  1772  000058                     
  1773                           ; 1 bytes @ 0x6
  1774 ;;
  1775 ;;Main: autosize = 1, tempsize = 0, incstack = 0, save=0
  1776 ;;
  1777 ;; *************** function _main *****************
  1778 ;; Defined at:
  1779 ;;		line 158 in file "main.c"
  1780 ;; Parameters:    Size  Location     Type
  1781 ;;		None
  1782 ;; Auto vars:     Size  Location     Type
  1783 ;;  mode            1  [STACK] enum E17005
  1784 ;; Return value:  Size  Location     Type
  1785 ;;                  1  [STACK] void 
  1786 ;; Registers used:
  1787 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  1788 ;; Tracked objects:
  1789 ;;		On entry : 0/0
  1790 ;;		On exit  : 1/1
  1791 ;;		Unchanged: 0/0
  1792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1797 ;;Total ram usage:        0 bytes
  1798 ;; Hardware stack levels required when called:   19
  1799 ;; This function calls:
  1800 ;;		_SYSTEM_Initialize
  1801 ;;		_StartTimer
  1802 ;;		_TimerDone
  1803 ;;		_WaitMs
  1804 ;;		_check_adc_scan
  1805 ;;		_check_help
  1806 ;;		_check_switches
  1807 ;;		_clear_adc_scan
  1808 ;;		_convert_adc_data
  1809 ;;		_eaDogM_WriteCommand
  1810 ;;		_get_raw_result
  1811 ;;		_get_switch
  1812 ;;		_get_vterm_ptr
  1813 ;;		_init_display
  1814 ;;		_mode_lamp_dim
  1815 ;;		_set_display_info
  1816 ;;		_set_vterm
  1817 ;;		_sprintf
  1818 ;;		_srand
  1819 ;;		_start_adc_scan
  1820 ;;		_start_switch_handler
  1821 ;;		_update_lcd
  1822 ;; This function is called by:
  1823 ;;		Startup code after reset
  1824 ;; This function uses a reentrant model
  1825 ;;
  1826                           
  1827                           	psect	text0
  1828  013CE8                     __ptext0:
  1829                           	opt callstack 0
  1830  013CE8                     _main:
  1831                           	opt callstack 0
  1832                           
  1833                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1834  013CE8  52E6               	movf	postinc1,f,c
  1835                           
  1836                           ;main.c: 160:  UI_STATES mode;;main.c: 163:  SYSTEM_Initialize();
  1837                           
  1838                           ;incstack = 0
  1839  013CEA  ECA7  F0BD         	call	_SYSTEM_Initialize	;wreg free
  1840                           
  1841                           ; BSR set to: 60
  1842                           ;main.c: 166:  (INTCON0bits.GIEH = 1);
  1843  013CEE  8ED2               	bsf	210,7,c	;volatile
  1844                           
  1845                           ; BSR set to: 60
  1846                           ;main.c: 169:  (INTCON0bits.GIEL = 1);
  1847  013CF0  8CD2               	bsf	210,6,c	;volatile
  1848                           
  1849                           ; BSR set to: 60
  1850                           ;main.c: 171:  V.ui_state = UI_STATE_INIT;
  1851  013CF2  0101               	movlb	1	; () banked
  1852  013CF4  6B00               	clrf	_V& (0+255),b	;volatile
  1853                           
  1854                           ; BSR set to: 1
  1855                           ;main.c: 176:  WaitMs(300);
  1856  013CF6  0E2C               	movlw	44
  1857  013CF8  6EE6               	movwf	postinc1,c
  1858  013CFA  0E01               	movlw	1
  1859  013CFC  6EE6               	movwf	postinc1,c
  1860  013CFE  ECCD  F0BE         	call	_WaitMs	;wreg free
  1861                           
  1862                           ;main.c: 177:  if (PORTBbits.RB0) {
  1863  013D02  A0CB               	btfss	203,0,c	;volatile
  1864  013D04  D004               	goto	l11961
  1865                           
  1866                           ;main.c: 178:   mode = UI_STATE_HOST;
  1867                           ;stkvar	_mode @ sp[(-1)+0]
  1868  013D06  0EFF               	movlw	-1
  1869  013D08  6AE3               	clrf	plusw1,c
  1870  013D0A  2AE3               	incf	plusw1,f,c
  1871                           
  1872                           ;main.c: 179:  } else {
  1873  013D0C  D004               	goto	l11963
  1874  013D0E                     l11961:
  1875                           
  1876                           ;main.c: 180:   mode = UI_STATE_LOG;
  1877                           ;stkvar	_mode @ sp[(-1)+0]
  1878  013D0E  0EFF               	movlw	-1
  1879  013D10  6AE3               	clrf	plusw1,c
  1880  013D12  80E3               	bsf	plusw1,0,c
  1881  013D14  82E3               	bsf	plusw1,1,c	;indir
  1882  013D16                     l11963:
  1883                           
  1884                           ;main.c: 183:  if (mode == UI_STATE_HOST) {
  1885                           ;stkvar	_mode @ sp[(-1)+0]
  1886  013D16  0EFF               	movlw	-1
  1887  013D18  04E3               	decf	plusw1,w,c
  1888  013D1A  A4D8               	btfss	status,2,c
  1889  013D1C  D007               	goto	l1248
  1890                           
  1891                           ;main.c: 184:   do { LATDbits.LATD0 = 1; } while(0);
  1892  013D1E  80BD               	bsf	189,0,c	;volatile
  1893                           
  1894                           ;main.c: 185:   V.mode_pwm = 70;
  1895  013D20  0E00               	movlw	0
  1896  013D22  0101               	movlb	1	; () banked
  1897  013D24  6F96               	movwf	(_V+150)& (0+255),b	;volatile
  1898  013D26  0E46               	movlw	70
  1899  013D28  6F95               	movwf	(_V+149)& (0+255),b	;volatile
  1900                           
  1901                           ;main.c: 186:  } else {
  1902  013D2A  D004               	goto	l11967
  1903  013D2C                     l1248:
  1904  013D2C  90BD               	bcf	189,0,c	;volatile
  1905                           
  1906                           ;main.c: 188:   V.mode_pwm = 0;
  1907  013D2E  0101               	movlb	1	; () banked
  1908  013D30  6B95               	clrf	(_V+149)& (0+255),b	;volatile
  1909  013D32  6B96               	clrf	(_V+150)& (0+255),b	;volatile
  1910  013D34                     l11967:
  1911                           
  1912                           ; BSR set to: 1
  1913                           ;main.c: 190:  mode_lamp_dim(V.mode_pwm);
  1914  013D34  0060  F657  FFE6   	movff	_V+149,postinc1
  1915  013D3A  0060  F65B  FFE6   	movff	_V+150,postinc1
  1916  013D40  EC6B  F0C2         	call	_mode_lamp_dim	;wreg free
  1917  013D44  D0D0               	goto	l12011
  1918  013D46                     l11969:
  1919                           
  1920                           ; BSR set to: 1
  1921                           ;main.c: 201:    init_display();
  1922  013D46  EC8F  F0B5         	call	_init_display	;wreg free
  1923                           
  1924                           ; BSR set to: 61
  1925                           ;main.c: 202:    eaDogM_WriteCommand(0b00001100);
  1926  013D4A  0E0C               	movlw	12
  1927  013D4C  6EE6               	movwf	postinc1,c
  1928  013D4E  ECC7  F0C2         	call	_eaDogM_WriteCommand	;wreg free
  1929                           
  1930                           ; BSR set to: 0
  1931                           ;main.c: 204:    V.ui_state = mode;
  1932                           ;stkvar	_mode @ sp[(-1)+0]
  1933  013D52  0EFF               	movlw	-1
  1934  013D54  006F FF8C  F100    	movff	plusw1,_V	;volatile
  1935                           
  1936                           ; BSR set to: 0
  1937                           ;main.c: 205:    srand(1957);
  1938  013D5A  0EA5               	movlw	165
  1939  013D5C  6EE6               	movwf	postinc1,c
  1940  013D5E  0E07               	movlw	7
  1941  013D60  6EE6               	movwf	postinc1,c
  1942  013D62  EC03  F0BF         	call	_srand	;wreg free
  1943                           
  1944                           ; BSR set to: 1
  1945                           ;main.c: 206:    set_vterm(0);
  1946  013D66  0E00               	movlw	0
  1947  013D68  6EE6               	movwf	postinc1,c
  1948  013D6A  EC42  F0C2         	call	_set_vterm	;wreg free
  1949                           
  1950                           ; BSR set to: 5
  1951                           ;main.c: 207:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON  ");
  1952  013D6E  0E62               	movlw	low STR_1
  1953  013D70  6EE6               	movwf	postinc1,c
  1954  013D72  0EFF               	movlw	high STR_1
  1955  013D74  6EE6               	movwf	postinc1,c
  1956  013D76  0E00               	movlw	0
  1957  013D78  6EE6               	movwf	postinc1,c
  1958  013D7A  0E00               	movlw	0
  1959  013D7C  6EE6               	movwf	postinc1,c
  1960  013D7E  EC97  F0BF         	call	_get_vterm_ptr	;wreg free
  1961  013D82  0060  F0CB  FFE6   	movff	btemp,postinc1
  1962  013D88  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  1963  013D8E  0E04               	movlw	4
  1964  013D90  6EE6               	movwf	postinc1,c
  1965  013D92  EC90  F0B4         	call	_sprintf	;wreg free
  1966                           
  1967                           ;main.c: 208:    sprintf(get_vterm_ptr(1, 0), " Version %s   ", "0.96");
  1968  013D96  0EE0               	movlw	low STR_3
  1969  013D98  6EE6               	movwf	postinc1,c
  1970  013D9A  0EFF               	movlw	high STR_3
  1971  013D9C  6EE6               	movwf	postinc1,c
  1972  013D9E  0EA4               	movlw	low STR_2
  1973  013DA0  6EE6               	movwf	postinc1,c
  1974  013DA2  0EFF               	movlw	high STR_2
  1975  013DA4  6EE6               	movwf	postinc1,c
  1976  013DA6  0E00               	movlw	0
  1977  013DA8  6EE6               	movwf	postinc1,c
  1978  013DAA  0E01               	movlw	1
  1979  013DAC  6EE6               	movwf	postinc1,c
  1980  013DAE  EC97  F0BF         	call	_get_vterm_ptr	;wreg free
  1981  013DB2  0060  F0CB  FFE6   	movff	btemp,postinc1
  1982  013DB8  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  1983  013DBE  0E06               	movlw	6
  1984  013DC0  6EE6               	movwf	postinc1,c
  1985  013DC2  EC90  F0B4         	call	_sprintf	;wreg free
  1986                           
  1987                           ;main.c: 209:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK       ");
  1988  013DC6  0E51               	movlw	low STR_4
  1989  013DC8  6EE6               	movwf	postinc1,c
  1990  013DCA  0EFF               	movlw	high STR_4
  1991  013DCC  6EE6               	movwf	postinc1,c
  1992  013DCE  0E00               	movlw	0
  1993  013DD0  6EE6               	movwf	postinc1,c
  1994  013DD2  0E02               	movlw	2
  1995  013DD4  6EE6               	movwf	postinc1,c
  1996  013DD6  EC97  F0BF         	call	_get_vterm_ptr	;wreg free
  1997  013DDA  0060  F0CB  FFE6   	movff	btemp,postinc1
  1998  013DE0  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  1999  013DE6  0E04               	movlw	4
  2000  013DE8  6EE6               	movwf	postinc1,c
  2001  013DEA  EC90  F0B4         	call	_sprintf	;wreg free
  2002                           
  2003                           ;main.c: 210:    sprintf(get_vterm_ptr(0, 2), " SEQUENCE TEST  ");
  2004  013DEE  0E73               	movlw	low STR_5
  2005  013DF0  6EE6               	movwf	postinc1,c
  2006  013DF2  0EFF               	movlw	high STR_5
  2007  013DF4  6EE6               	movwf	postinc1,c
  2008  013DF6  0E02               	movlw	2
  2009  013DF8  6EE6               	movwf	postinc1,c
  2010  013DFA  0E00               	movlw	0
  2011  013DFC  6EE6               	movwf	postinc1,c
  2012  013DFE  EC97  F0BF         	call	_get_vterm_ptr	;wreg free
  2013  013E02  0060  F0CB  FFE6   	movff	btemp,postinc1
  2014  013E08  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2015  013E0E  0E04               	movlw	4
  2016  013E10  6EE6               	movwf	postinc1,c
  2017  013E12  EC90  F0B4         	call	_sprintf	;wreg free
  2018                           
  2019                           ;main.c: 211:    sprintf(get_vterm_ptr(1, 2), " Version %s   ", "0.96");
  2020  013E16  0EE0               	movlw	low STR_3
  2021  013E18  6EE6               	movwf	postinc1,c
  2022  013E1A  0EFF               	movlw	high STR_3
  2023  013E1C  6EE6               	movwf	postinc1,c
  2024  013E1E  0EA4               	movlw	low STR_2
  2025  013E20  6EE6               	movwf	postinc1,c
  2026  013E22  0EFF               	movlw	high STR_2
  2027  013E24  6EE6               	movwf	postinc1,c
  2028  013E26  0E02               	movlw	2
  2029  013E28  6EE6               	movwf	postinc1,c
  2030  013E2A  0E01               	movlw	1
  2031  013E2C  6EE6               	movwf	postinc1,c
  2032  013E2E  EC97  F0BF         	call	_get_vterm_ptr	;wreg free
  2033  013E32  0060  F0CB  FFE6   	movff	btemp,postinc1
  2034  013E38  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2035  013E3E  0E06               	movlw	6
  2036  013E40  6EE6               	movwf	postinc1,c
  2037  013E42  EC90  F0B4         	call	_sprintf	;wreg free
  2038                           
  2039                           ;main.c: 212:    sprintf(get_vterm_ptr(2, 2), " VTERM #2       ");
  2040  013E46  0E40               	movlw	low STR_8
  2041  013E48  6EE6               	movwf	postinc1,c
  2042  013E4A  0EFF               	movlw	high STR_8
  2043  013E4C  6EE6               	movwf	postinc1,c
  2044  013E4E  0E02               	movlw	2
  2045  013E50  6EE6               	movwf	postinc1,c
  2046  013E52  0E02               	movlw	2
  2047  013E54  6EE6               	movwf	postinc1,c
  2048  013E56  EC97  F0BF         	call	_get_vterm_ptr	;wreg free
  2049  013E5A  0060  F0CB  FFE6   	movff	btemp,postinc1
  2050  013E60  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2051  013E66  0E04               	movlw	4
  2052  013E68  6EE6               	movwf	postinc1,c
  2053  013E6A  EC90  F0B4         	call	_sprintf	;wreg free
  2054                           
  2055                           ;main.c: 213:    update_lcd(0);
  2056  013E6E  0E00               	movlw	0
  2057  013E70  6EE6               	movwf	postinc1,c
  2058  013E72  EC09  F0B4         	call	_update_lcd	;wreg free
  2059                           
  2060                           ;main.c: 214:    WaitMs(3000);
  2061  013E76  0EB8               	movlw	184
  2062  013E78  6EE6               	movwf	postinc1,c
  2063  013E7A  0E0B               	movlw	11
  2064  013E7C  6EE6               	movwf	postinc1,c
  2065  013E7E  ECCD  F0BE         	call	_WaitMs	;wreg free
  2066                           
  2067                           ;main.c: 215:    StartTimer(TMR_DISPLAY, 250);
  2068  013E82  0EFA               	movlw	250
  2069  013E84  6EE6               	movwf	postinc1,c
  2070  013E86  0E00               	movlw	0
  2071  013E88  6EE6               	movwf	postinc1,c
  2072  013E8A  0E0A               	movlw	10
  2073  013E8C  6EE6               	movwf	postinc1,c
  2074  013E8E  EC93  F0BE         	call	_StartTimer	;wreg free
  2075                           
  2076                           ;main.c: 216:    StartTimer(TMR_ADC, 500);
  2077  013E92  0EF4               	movlw	244
  2078  013E94  6EE6               	movwf	postinc1,c
  2079  013E96  0E01               	movlw	1
  2080  013E98  6EE6               	movwf	postinc1,c
  2081  013E9A  0E01               	movlw	1
  2082  013E9C  6EE6               	movwf	postinc1,c
  2083  013E9E  EC93  F0BE         	call	_StartTimer	;wreg free
  2084                           
  2085                           ;main.c: 217:    StartTimer(TMR_INFO, 3000);
  2086  013EA2  0EB8               	movlw	184
  2087  013EA4  6EE6               	movwf	postinc1,c
  2088  013EA6  0E0B               	movlw	11
  2089  013EA8  6EE6               	movwf	postinc1,c
  2090  013EAA  0E07               	movlw	7
  2091  013EAC  6EE6               	movwf	postinc1,c
  2092  013EAE  EC93  F0BE         	call	_StartTimer	;wreg free
  2093                           
  2094                           ;main.c: 218:    StartTimer(TMR_FLIPPER, 1500);
  2095  013EB2  0EDC               	movlw	220
  2096  013EB4  6EE6               	movwf	postinc1,c
  2097  013EB6  0E05               	movlw	5
  2098  013EB8  6EE6               	movwf	postinc1,c
  2099  013EBA  0E0B               	movlw	11
  2100  013EBC  6EE6               	movwf	postinc1,c
  2101  013EBE  EC93  F0BE         	call	_StartTimer	;wreg free
  2102                           
  2103                           ;main.c: 219:    StartTimer(TMR_HELPDIS, 3000);
  2104  013EC2  0EB8               	movlw	184
  2105  013EC4  6EE6               	movwf	postinc1,c
  2106  013EC6  0E0B               	movlw	11
  2107  013EC8  6EE6               	movwf	postinc1,c
  2108  013ECA  0E09               	movlw	9
  2109  013ECC  6EE6               	movwf	postinc1,c
  2110  013ECE  EC93  F0BE         	call	_StartTimer	;wreg free
  2111                           
  2112                           ;main.c: 221:    start_adc_scan();
  2113  013ED2  EC6F  F0BB         	call	_start_adc_scan	;wreg free
  2114                           
  2115                           ;main.c: 222:    start_switch_handler();
  2116  013ED6  ECD9  F0C1         	call	_start_switch_handler	;wreg free
  2117                           
  2118                           ;main.c: 224:    break;
  2119  013EDA  D01C               	goto	l12013
  2120  013EDC                     l1256:
  2121                           
  2122                           ; BSR set to: 1
  2123                           ;main.c: 230:    P.SYSTEM_STABLE = 1;
  2124  013EDC  0100               	movlb	0	; () banked
  2125  013EDE  81BE               	bsf	(_P+1)& (0+255),0,b	;volatile
  2126                           
  2127                           ;main.c: 231:    break;
  2128  013EE0  D019               	goto	l12013
  2129  013EE2                     l1258:
  2130                           
  2131                           ; BSR set to: 1
  2132                           ;main.c: 234:    V.ui_state = UI_STATE_INIT;
  2133  013EE2  6B00               	clrf	_V& (0+255),b	;volatile
  2134                           
  2135                           ;main.c: 235:    break;
  2136  013EE4  D017               	goto	l12013
  2137  013EE6                     l12011:
  2138  013EE6  0101               	movlb	1	; () banked
  2139  013EE8  5100               	movf	_V& (0+255),w,b	;volatile
  2140  013EEA  6E3C               	movwf	(btemp+10)^0,c
  2141  013EEC  6A3D               	clrf	(btemp+11)^0,c
  2142                           
  2143                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2144                           ; Switch size 1, requested type "simple"
  2145                           ; Number of cases is 1, Range of values is 0 to 0
  2146                           ; switch strategies available:
  2147                           ; Name         Instructions Cycles
  2148                           ; simple_byte            4     3 (average)
  2149                           ;	Chosen strategy is simple_byte
  2150  013EEE  503D               	movf	(btemp+11)^0,w,c
  2151  013EF0  0A00               	xorlw	0	; case 0
  2152  013EF2  A4D8               	btfss	status,2,c
  2153  013EF4  D7F6               	goto	l1258
  2154                           
  2155                           ; BSR set to: 1
  2156                           ; Switch size 1, requested type "simple"
  2157                           ; Number of cases is 5, Range of values is 0 to 5
  2158                           ; switch strategies available:
  2159                           ; Name         Instructions Cycles
  2160                           ; simple_byte           16     9 (average)
  2161                           ;	Chosen strategy is simple_byte
  2162  013EF6  503C               	movf	(btemp+10)^0,w,c
  2163  013EF8  0A00               	xorlw	0	; case 0
  2164  013EFA  B4D8               	btfsc	status,2,c
  2165  013EFC  D724               	goto	l11969
  2166  013EFE  0A01               	xorlw	1	; case 1
  2167  013F00  B4D8               	btfsc	status,2,c
  2168  013F02  D008               	goto	l12013
  2169  013F04  0A02               	xorlw	2	; case 3
  2170  013F06  B4D8               	btfsc	status,2,c
  2171  013F08  D005               	goto	l12013
  2172  013F0A  0A07               	xorlw	7	; case 4
  2173  013F0C  B4D8               	btfsc	status,2,c
  2174  013F0E  D7E6               	goto	l1256
  2175  013F10  0A01               	xorlw	1	; case 5
  2176  013F12  D7E7               	goto	l1258
  2177  013F14                     l12013:
  2178                           
  2179                           ;main.c: 238:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  2180  013F14  0E01               	movlw	1
  2181  013F16  6EE6               	movwf	postinc1,c
  2182  013F18  EC81  F0C1         	call	_TimerDone	;wreg free
  2183  013F1C  5032               	movf	btemp^0,w,c
  2184  013F1E  B4D8               	btfsc	status,2,c
  2185  013F20  D013               	goto	l12025
  2186  013F22  EC0B  F0C3         	call	_check_adc_scan	;wreg free
  2187  013F26  5032               	movf	btemp^0,w,c
  2188  013F28  B4D8               	btfsc	status,2,c
  2189  013F2A  D00E               	goto	l12025
  2190                           
  2191                           ;main.c: 242:    convert_adc_data();
  2192  013F2C  EC60  F0BA         	call	_convert_adc_data	;wreg free
  2193                           
  2194                           ;main.c: 246:    clear_adc_scan();
  2195  013F30  EC13  F0C3         	call	_clear_adc_scan	;wreg free
  2196                           
  2197                           ; BSR set to: 0
  2198                           ;main.c: 247:    start_adc_scan();
  2199  013F34  EC6F  F0BB         	call	_start_adc_scan	;wreg free
  2200                           
  2201                           ;main.c: 248:    StartTimer(TMR_ADC, 500);
  2202  013F38  0EF4               	movlw	244
  2203  013F3A  6EE6               	movwf	postinc1,c
  2204  013F3C  0E01               	movlw	1
  2205  013F3E  6EE6               	movwf	postinc1,c
  2206  013F40  0E01               	movlw	1
  2207  013F42  6EE6               	movwf	postinc1,c
  2208  013F44  EC93  F0BE         	call	_StartTimer	;wreg free
  2209  013F48                     l12025:
  2210                           
  2211                           ;main.c: 255:   if (TimerDone(TMR_DISPLAY)) {
  2212                           
  2213                           ;main.c: 251:   if (V.ticks) {
  2214  013F48  0E0A               	movlw	10
  2215  013F4A  6EE6               	movwf	postinc1,c
  2216  013F4C  EC81  F0C1         	call	_TimerDone	;wreg free
  2217  013F50  5032               	movf	btemp^0,w,c
  2218  013F52  B4D8               	btfsc	status,2,c
  2219  013F54  D0AB               	goto	l12043
  2220                           
  2221                           ;main.c: 256:    if (TimerDone(TMR_HELPDIS)) {
  2222  013F56  0E09               	movlw	9
  2223  013F58  6EE6               	movwf	postinc1,c
  2224  013F5A  EC81  F0C1         	call	_TimerDone	;wreg free
  2225  013F5E  5032               	movf	btemp^0,w,c
  2226  013F60  B4D8               	btfsc	status,2,c
  2227  013F62  D004               	goto	l12033
  2228                           
  2229                           ;main.c: 257:     set_display_info(DIS_STR);
  2230  013F64  0E00               	movlw	0
  2231  013F66  6EE6               	movwf	postinc1,c
  2232  013F68  EC07  F0C2         	call	_set_display_info	;wreg free
  2233  013F6C                     l12033:
  2234                           
  2235                           ;main.c: 259:    sprintf(get_vterm_ptr(0, 0), "%d %2.4f   %d", get_raw_result(C_BATT), C
      +                          .calc[C_BATT], get_switch(SSELECT));
  2236  013F6C  0E02               	movlw	2
  2237  013F6E  6EE6               	movwf	postinc1,c
  2238  013F70  EC41  F0C0         	call	_get_switch	;wreg free
  2239  013F74  5032               	movf	btemp^0,w,c
  2240  013F76  6EE6               	movwf	postinc1,c
  2241  013F78  0E00               	movlw	0
  2242  013F7A  6EE6               	movwf	postinc1,c
  2243  013F7C  0060  FC03  FFE6   	movff	_C,postinc1
  2244  013F82  0060  FC07  FFE6   	movff	_C+1,postinc1
  2245  013F88  0060  FC0B  FFE6   	movff	_C+2,postinc1
  2246  013F8E  0060  FC0F  FFE6   	movff	_C+3,postinc1
  2247  013F94  0E00               	movlw	0
  2248  013F96  6EE6               	movwf	postinc1,c
  2249  013F98  ECF8  F0C1         	call	_get_raw_result	;wreg free
  2250  013F9C  0060  F0CB  FFE6   	movff	btemp,postinc1
  2251  013FA2  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2252  013FA8  0EB3               	movlw	low STR_9
  2253  013FAA  6EE6               	movwf	postinc1,c
  2254  013FAC  0EFF               	movlw	high STR_9
  2255  013FAE  6EE6               	movwf	postinc1,c
  2256  013FB0  0E00               	movlw	0
  2257  013FB2  6EE6               	movwf	postinc1,c
  2258  013FB4  0E00               	movlw	0
  2259  013FB6  6EE6               	movwf	postinc1,c
  2260  013FB8  EC97  F0BF         	call	_get_vterm_ptr	;wreg free
  2261  013FBC  0060  F0CB  FFE6   	movff	btemp,postinc1
  2262  013FC2  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2263  013FC8  0E0C               	movlw	12
  2264  013FCA  6EE6               	movwf	postinc1,c
  2265  013FCC  EC90  F0B4         	call	_sprintf	;wreg free
  2266                           
  2267                           ;main.c: 260:    sprintf(get_vterm_ptr(1, 0), "%d %2.4f   %d", get_raw_result(C_PV), C.c
      +                          alc[C_PV], get_switch(SENTER));
  2268  013FD0  0E03               	movlw	3
  2269  013FD2  6EE6               	movwf	postinc1,c
  2270  013FD4  EC41  F0C0         	call	_get_switch	;wreg free
  2271  013FD8  5032               	movf	btemp^0,w,c
  2272  013FDA  6EE6               	movwf	postinc1,c
  2273  013FDC  0E00               	movlw	0
  2274  013FDE  6EE6               	movwf	postinc1,c
  2275  013FE0  0060  FC13  FFE6   	movff	_C+4,postinc1
  2276  013FE6  0060  FC17  FFE6   	movff	_C+5,postinc1
  2277  013FEC  0060  FC1B  FFE6   	movff	_C+6,postinc1
  2278  013FF2  0060  FC1F  FFE6   	movff	_C+7,postinc1
  2279  013FF8  0E01               	movlw	1
  2280  013FFA  6EE6               	movwf	postinc1,c
  2281  013FFC  ECF8  F0C1         	call	_get_raw_result	;wreg free
  2282  014000  0060  F0CB  FFE6   	movff	btemp,postinc1
  2283  014006  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2284  01400C  0EB3               	movlw	low STR_9
  2285  01400E  6EE6               	movwf	postinc1,c
  2286  014010  0EFF               	movlw	high STR_9
  2287  014012  6EE6               	movwf	postinc1,c
  2288  014014  0E00               	movlw	0
  2289  014016  6EE6               	movwf	postinc1,c
  2290  014018  0E01               	movlw	1
  2291  01401A  6EE6               	movwf	postinc1,c
  2292  01401C  EC97  F0BF         	call	_get_vterm_ptr	;wreg free
  2293  014020  0060  F0CB  FFE6   	movff	btemp,postinc1
  2294  014026  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2295  01402C  0E0C               	movlw	12
  2296  01402E  6EE6               	movwf	postinc1,c
  2297  014030  EC90  F0B4         	call	_sprintf	;wreg free
  2298                           
  2299                           ;main.c: 262:    sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d   #", get_raw_result(V_CC), 
      +                          C.calc[V_CC], check_switches());
  2300  014034  ECFF  F0C2         	call	_check_switches	;wreg free
  2301  014038  5032               	movf	btemp^0,w,c
  2302  01403A  6EE6               	movwf	postinc1,c
  2303  01403C  0E00               	movlw	0
  2304  01403E  6EE6               	movwf	postinc1,c
  2305  014040  0060  FC23  FFE6   	movff	_C+8,postinc1
  2306  014046  0060  FC27  FFE6   	movff	_C+9,postinc1
  2307  01404C  0060  FC2B  FFE6   	movff	_C+10,postinc1
  2308  014052  0060  FC2F  FFE6   	movff	_C+11,postinc1
  2309  014058  0E02               	movlw	2
  2310  01405A  6EE6               	movwf	postinc1,c
  2311  01405C  ECF8  F0C1         	call	_get_raw_result	;wreg free
  2312  014060  0060  F0CB  FFE6   	movff	btemp,postinc1
  2313  014066  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2314  01406C  0E84               	movlw	low STR_11
  2315  01406E  6EE6               	movwf	postinc1,c
  2316  014070  0EFF               	movlw	high STR_11
  2317  014072  6EE6               	movwf	postinc1,c
  2318  014074  0E00               	movlw	0
  2319  014076  6EE6               	movwf	postinc1,c
  2320  014078  0E02               	movlw	2
  2321  01407A  6EE6               	movwf	postinc1,c
  2322  01407C  EC97  F0BF         	call	_get_vterm_ptr	;wreg free
  2323  014080  0060  F0CB  FFE6   	movff	btemp,postinc1
  2324  014086  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2325  01408C  0E0C               	movlw	12
  2326  01408E  6EE6               	movwf	postinc1,c
  2327  014090  EC90  F0B4         	call	_sprintf	;wreg free
  2328                           
  2329                           ;main.c: 263:    StartTimer(TMR_DISPLAY, 250);
  2330  014094  0EFA               	movlw	250
  2331  014096  6EE6               	movwf	postinc1,c
  2332  014098  0E00               	movlw	0
  2333  01409A  6EE6               	movwf	postinc1,c
  2334  01409C  0E0A               	movlw	10
  2335  01409E  6EE6               	movwf	postinc1,c
  2336  0140A0  EC93  F0BE         	call	_StartTimer	;wreg free
  2337                           
  2338                           ;main.c: 264:    update_lcd(0);
  2339  0140A4  0E00               	movlw	0
  2340  0140A6  6EE6               	movwf	postinc1,c
  2341  0140A8  EC09  F0B4         	call	_update_lcd	;wreg free
  2342  0140AC                     l12043:
  2343                           
  2344                           ;main.c: 270:   check_help(V.flipper);
  2345  0140AC  0101               	movlb	1	; () banked
  2346  0140AE  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  2347  0140B0  6EE6               	movwf	postinc1,c
  2348  0140B2  EC7B  F0AA         	call	_check_help	;wreg free
  2349                           
  2350                           ;main.c: 275:   if (V.set_sequ) {
  2351  0140B6  0101               	movlb	1	; () banked
  2352  0140B8  A19B               	btfss	(_V+155)& (0+255),0,b	;volatile
  2353  0140BA  D715               	goto	l12011
  2354                           
  2355                           ; BSR set to: 1
  2356                           ;main.c: 276:    if (TimerDone(TMR_INFO)) {
  2357  0140BC  0E07               	movlw	7
  2358  0140BE  6EE6               	movwf	postinc1,c
  2359  0140C0  EC81  F0C1         	call	_TimerDone	;wreg free
  2360  0140C4  5032               	movf	btemp^0,w,c
  2361  0140C6  B4D8               	btfsc	status,2,c
  2362  0140C8  D00B               	goto	l12055
  2363                           
  2364                           ;main.c: 277:     V.set_sequ = 0;
  2365  0140CA  0101               	movlb	1	; () banked
  2366  0140CC  919B               	bcf	(_V+155)& (0+255),0,b	;volatile
  2367                           
  2368                           ; BSR set to: 1
  2369                           ;main.c: 278:     set_vterm(0);
  2370  0140CE  0E00               	movlw	0
  2371  0140D0  6EE6               	movwf	postinc1,c
  2372  0140D2  EC42  F0C2         	call	_set_vterm	;wreg free
  2373                           
  2374                           ; BSR set to: 5
  2375                           ;main.c: 279:     update_lcd(0);
  2376  0140D6  0E00               	movlw	0
  2377  0140D8  6EE6               	movwf	postinc1,c
  2378  0140DA  EC09  F0B4         	call	_update_lcd	;wreg free
  2379                           
  2380                           ;main.c: 280:    } else {
  2381  0140DE  D703               	goto	l12011
  2382  0140E0                     l12055:
  2383                           
  2384                           ;main.c: 281:     set_vterm(2);
  2385  0140E0  0E02               	movlw	2
  2386  0140E2  6EE6               	movwf	postinc1,c
  2387  0140E4  EC42  F0C2         	call	_set_vterm	;wreg free
  2388                           
  2389                           ; BSR set to: 5
  2390                           ;main.c: 282:     update_lcd(2);
  2391  0140E8  0E02               	movlw	2
  2392  0140EA  6EE6               	movwf	postinc1,c
  2393  0140EC  EC09  F0B4         	call	_update_lcd	;wreg free
  2394  0140F0  D6FA               	goto	l12011
  2395  0140F2                     __end_of_main:
  2396                           	opt callstack 0
  2397                           
  2398 ;; *************** function _start_switch_handler *****************
  2399 ;; Defined at:
  2400 ;;		line 119 in file "dio.c"
  2401 ;; Parameters:    Size  Location     Type
  2402 ;;		None
  2403 ;; Auto vars:     Size  Location     Type
  2404 ;;		None
  2405 ;; Return value:  Size  Location     Type
  2406 ;;                  1  [STACK] void 
  2407 ;; Registers used:
  2408 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  2409 ;; Tracked objects:
  2410 ;;		On entry : 1/4
  2411 ;;		On exit  : 3F/39
  2412 ;;		Unchanged: 0/0
  2413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2417 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2418 ;;Total ram usage:        0 bytes
  2419 ;; Hardware stack levels used:    1
  2420 ;; Hardware stack levels required when called:    7
  2421 ;; This function calls:
  2422 ;;		_INT1_SetInterruptHandler
  2423 ;; This function is called by:
  2424 ;;		_main
  2425 ;; This function uses a reentrant model
  2426 ;;
  2427                           
  2428                           	psect	text1
  2429  0183B2                     __ptext1:
  2430                           	opt callstack 0
  2431  0183B2                     _start_switch_handler:
  2432                           	opt callstack 23
  2433                           
  2434                           ;dio.c: 121:  (PIE5bits.INT1IE = 0);
  2435                           
  2436                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2437                           ;incstack = 0
  2438  0183B2  0139               	movlb	57	; () banked
  2439  0183B4  9195               	bcf	149,0,b	;volatile
  2440                           
  2441                           ; BSR set to: 57
  2442                           ;dio.c: 122:  INT1_SetInterruptHandler(switch_handler);
  2443  0183B6  0E4C               	movlw	low _switch_handler
  2444  0183B8  6EE6               	movwf	postinc1,c
  2445  0183BA  0E62               	movlw	high _switch_handler
  2446  0183BC  6EE6               	movwf	postinc1,c
  2447  0183BE  0E01               	movlw	low (_switch_handler shr (0+16))
  2448  0183C0  6EE6               	movwf	postinc1,c
  2449  0183C2  ECCD  F0C0         	call	_INT1_SetInterruptHandler	;wreg free
  2450                           
  2451                           ;dio.c: 123:  S.button[SNULL].sw = SW_INVALID;
  2452  0183C6  0E02               	movlw	2
  2453  0183C8  0100               	movlb	0	; () banked
  2454  0183CA  6F83               	movwf	(_S+35)& (0+255),b	;volatile
  2455                           
  2456                           ; BSR set to: 0
  2457                           ;dio.c: 124:  (PIE5bits.INT1IE = 1);
  2458  0183CC  0139               	movlb	57	; () banked
  2459  0183CE  8195               	bsf	149,0,b	;volatile
  2460                           
  2461                           ; BSR set to: 57
  2462                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  2463  0183D0  0012               	return		;funcret
  2464  0183D2                     __end_of_start_switch_handler:
  2465                           	opt callstack 0
  2466                           
  2467 ;; *************** function _start_adc_scan *****************
  2468 ;; Defined at:
  2469 ;;		line 33 in file "daq.c"
  2470 ;; Parameters:    Size  Location     Type
  2471 ;;		None
  2472 ;; Auto vars:     Size  Location     Type
  2473 ;;		None
  2474 ;; Return value:  Size  Location     Type
  2475 ;;                  1  [STACK] _Bool 
  2476 ;; Registers used:
  2477 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  2478 ;; Tracked objects:
  2479 ;;		On entry : 0/5
  2480 ;;		On exit  : 1/0
  2481 ;;		Unchanged: 0/0
  2482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2487 ;;Total ram usage:        0 bytes
  2488 ;; Hardware stack levels used:    1
  2489 ;; Hardware stack levels required when called:    7
  2490 ;; This function calls:
  2491 ;;		_ADCC_DischargeSampleCapacitor
  2492 ;;		_ADCC_SetADIInterruptHandler
  2493 ;;		_ADCC_SetADTIInterruptHandler
  2494 ;;		_ADCC_StartConversion
  2495 ;; This function is called by:
  2496 ;;		_main
  2497 ;; This function uses a reentrant model
  2498 ;;
  2499                           
  2500                           	psect	text2
  2501  0176DE                     __ptext2:
  2502                           	opt callstack 0
  2503  0176DE                     _start_adc_scan:
  2504                           	opt callstack 23
  2505                           
  2506                           ;daq.c: 35:  if (R.done)
  2507                           
  2508                           ; BSR set to: 57
  2509                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2510                           ;incstack = 0
  2511  0176DE  0100               	movlb	0	; () banked
  2512  0176E0  51EE               	movf	(_R+39)& (0+255),w,b	;volatile
  2513  0176E2  A4D8               	btfss	status,2,c
  2514  0176E4  0012               	return	
  2515                           
  2516                           ; BSR set to: 0
  2517                           ;daq.c: 38:  R.scan_index = 0;
  2518  0176E6  6BEB               	clrf	(_R+36)& (0+255),b	;volatile
  2519                           
  2520                           ; BSR set to: 0
  2521                           ;daq.c: 39:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  2522  0176E8  013A               	movlb	58	; () banked
  2523  0176EA  5140               	movf	64,w,b	;volatile
  2524  0176EC  006E F940  F032    	movff	14928,btemp	;volatile
  2525  0176F2  6A33               	clrf	(btemp+1)^0,c
  2526  0176F4  0060  F0C8  F033   	movff	btemp,btemp+1
  2527  0176FA  6A32               	clrf	btemp^0,c
  2528  0176FC  2632               	addwf	btemp^0,f,c
  2529  0176FE  0E00               	movlw	0
  2530  017700  2233               	addwfc	(btemp+1)^0,f,c
  2531  017702  0E77               	movlw	119
  2532  017704  1432               	andwf	btemp^0,w,c
  2533  017706  0100               	movlb	0	; () banked
  2534  017708  6FEC               	movwf	(_R+37)& (0+255),b	;volatile
  2535  01770A  0E3C               	movlw	60
  2536  01770C  1433               	andwf	(btemp+1)^0,w,c
  2537  01770E  6FED               	movwf	(_R+38)& (0+255),b	;volatile
  2538                           
  2539                           ; BSR set to: 0
  2540                           ;daq.c: 40:  ADCC_SetADIInterruptHandler(adc_int_handler);
  2541  017710  0E44               	movlw	low _adc_int_handler
  2542  017712  6EE6               	movwf	postinc1,c
  2543  017714  0E86               	movlw	high _adc_int_handler
  2544  017716  6EE6               	movwf	postinc1,c
  2545  017718  0E01               	movlw	low (_adc_int_handler shr (0+16))
  2546  01771A  6EE6               	movwf	postinc1,c
  2547  01771C  EC09  F0C1         	call	_ADCC_SetADIInterruptHandler	;wreg free
  2548                           
  2549                           ;daq.c: 41:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  2550  017720  0E42               	movlw	low _adc_int_t_handler
  2551  017722  6EE6               	movwf	postinc1,c
  2552  017724  0E74               	movlw	high _adc_int_t_handler
  2553  017726  6EE6               	movwf	postinc1,c
  2554  017728  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  2555  01772A  6EE6               	movwf	postinc1,c
  2556  01772C  ECF5  F0C0         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  2557                           
  2558                           ;daq.c: 42:  ADCC_DischargeSampleCapacitor();
  2559  017730  ECFB  F0C2         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  2560                           
  2561                           ; BSR set to: 62
  2562                           ;daq.c: 43:  ADCC_StartConversion(R.scan_index & 0xf);
  2563  017734  0100               	movlb	0	; () banked
  2564  017736  51EB               	movf	(_R+36)& (0+255),w,b	;volatile
  2565  017738  0B0F               	andlw	15
  2566  01773A  6EE6               	movwf	postinc1,c
  2567  01773C  ECAE  F0C2         	call	_ADCC_StartConversion	;wreg free
  2568                           
  2569                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  2570  017740  0012               	return		;funcret
  2571  017742                     __end_of_start_adc_scan:
  2572                           	opt callstack 0
  2573                           
  2574 ;; *************** function _ADCC_StartConversion *****************
  2575 ;; Defined at:
  2576 ;;		line 128 in file "mcc_generated_files/adcc.c"
  2577 ;; Parameters:    Size  Location     Type
  2578 ;;  channel         1  [STACK] enum E16136
  2579 ;; Auto vars:     Size  Location     Type
  2580 ;;		None
  2581 ;; Return value:  Size  Location     Type
  2582 ;;                  1  [STACK] void 
  2583 ;; Registers used:
  2584 ;;		fsr1l, fsr1h
  2585 ;; Tracked objects:
  2586 ;;		On entry : 3F/0
  2587 ;;		On exit  : 3F/3E
  2588 ;;		Unchanged: 0/0
  2589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2593 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2594 ;;Total ram usage:        0 bytes
  2595 ;; Hardware stack levels used:    1
  2596 ;; Hardware stack levels required when called:    6
  2597 ;; This function calls:
  2598 ;;		Nothing
  2599 ;; This function is called by:
  2600 ;;		_start_adc_scan
  2601 ;;		_adc_int_t_handler
  2602 ;; This function uses a reentrant model
  2603 ;;
  2604                           
  2605                           	psect	text3
  2606  01855C                     __ptext3:
  2607                           	opt callstack 0
  2608  01855C                     _ADCC_StartConversion:
  2609                           	opt callstack 6
  2610                           
  2611                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  2612                           ;stkvar	_channel @ sp[(0)+-1]
  2613                           
  2614                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2615                           ;incstack = 0
  2616  01855C  0EFF               	movlw	-1
  2617  01855E  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  2618                           
  2619                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  2620  018564  013E               	movlb	62	; () banked
  2621  018566  8FF8               	bsf	248,7,b	;volatile
  2622                           
  2623                           ; BSR set to: 62
  2624                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  2625  018568  81F8               	bsf	248,0,b	;volatile
  2626                           
  2627                           ; BSR set to: 62
  2628                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  2629  01856A  52E5               	movf	postdec1,f,c
  2630  01856C  0012               	return		;funcret
  2631  01856E                     __end_of_ADCC_StartConversion:
  2632                           	opt callstack 0
  2633                           
  2634 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  2635 ;; Defined at:
  2636 ;;		line 189 in file "mcc_generated_files/adcc.c"
  2637 ;; Parameters:    Size  Location     Type
  2638 ;;		None
  2639 ;; Auto vars:     Size  Location     Type
  2640 ;;		None
  2641 ;; Return value:  Size  Location     Type
  2642 ;;                  1  [STACK] void 
  2643 ;; Registers used:
  2644 ;;		wreg, status,2
  2645 ;; Tracked objects:
  2646 ;;		On entry : 0/0
  2647 ;;		On exit  : 3F/3E
  2648 ;;		Unchanged: 0/0
  2649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2653 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2654 ;;Total ram usage:        0 bytes
  2655 ;; Hardware stack levels used:    1
  2656 ;; Hardware stack levels required when called:    6
  2657 ;; This function calls:
  2658 ;;		Nothing
  2659 ;; This function is called by:
  2660 ;;		_start_adc_scan
  2661 ;;		_adc_int_t_handler
  2662 ;; This function uses a reentrant model
  2663 ;;
  2664                           
  2665                           	psect	text4
  2666  0185F6                     __ptext4:
  2667                           	opt callstack 0
  2668  0185F6                     _ADCC_DischargeSampleCapacitor:
  2669                           	opt callstack 6
  2670                           
  2671                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
  2672                           
  2673                           ; BSR set to: 62
  2674                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2675                           ;incstack = 0
  2676  0185F6  0E3B               	movlw	59
  2677  0185F8  013E               	movlb	62	; () banked
  2678  0185FA  6FF1               	movwf	241,b	;volatile
  2679                           
  2680                           ; BSR set to: 62
  2681                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
  2682  0185FC  0012               	return		;funcret
  2683  0185FE                     __end_of_ADCC_DischargeSampleCapacitor:
  2684                           	opt callstack 0
  2685                           
  2686 ;; *************** function _srand *****************
  2687 ;; Defined at:
  2688 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  2689 ;; Parameters:    Size  Location     Type
  2690 ;;  s               2  [STACK] unsigned int 
  2691 ;; Auto vars:     Size  Location     Type
  2692 ;;		None
  2693 ;; Return value:  Size  Location     Type
  2694 ;;                  1  [STACK] void 
  2695 ;; Registers used:
  2696 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  2697 ;; Tracked objects:
  2698 ;;		On entry : 3F/0
  2699 ;;		On exit  : 3F/1
  2700 ;;		Unchanged: 0/0
  2701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2705 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2706 ;;Total ram usage:        0 bytes
  2707 ;; Hardware stack levels used:    1
  2708 ;; Hardware stack levels required when called:    6
  2709 ;; This function calls:
  2710 ;;		Nothing
  2711 ;; This function is called by:
  2712 ;;		_main
  2713 ;; This function uses a reentrant model
  2714 ;;
  2715                           
  2716                           	psect	text5
  2717  017E06                     __ptext5:
  2718                           	opt callstack 0
  2719  017E06                     _srand:
  2720                           	opt callstack 24
  2721                           
  2722                           ;stkvar	_s @ sp[(0)+-2]
  2723                           
  2724                           ; BSR set to: 62
  2725                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2726                           ;incstack = 0
  2727  017E06  0EFE               	movlw	-2
  2728  017E08  50E3               	movf	plusw1,w,c
  2729  017E0A  0FFF               	addlw	255
  2730  017E0C  6E3C               	movwf	(btemp+10)^0,c
  2731  017E0E  0EFF               	movlw	-1
  2732  017E10  006F FF8C  F03D    	movff	plusw1,btemp+11
  2733  017E16  0EFF               	movlw	255
  2734  017E18  223D               	addwfc	(btemp+11)^0,f,c
  2735  017E1A  0060  F0F0  F1BB   	movff	btemp+10,_seed
  2736  017E20  0060  F0F4  F1BC   	movff	btemp+11,_seed+1
  2737  017E26  0101               	movlb	1	; () banked
  2738  017E28  6BBD               	clrf	(_seed+2)& (0+255),b
  2739  017E2A  6BBE               	clrf	(_seed+3)& (0+255),b
  2740  017E2C  6BBF               	clrf	(_seed+4)& (0+255),b
  2741  017E2E  6BC0               	clrf	(_seed+5)& (0+255),b
  2742  017E30  6BC1               	clrf	(_seed+6)& (0+255),b
  2743  017E32  6BC2               	clrf	(_seed+7)& (0+255),b
  2744                           
  2745                           ; BSR set to: 1
  2746                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  2747  017E34  52E5               	movf	postdec1,f,c
  2748  017E36  52E5               	movf	postdec1,f,c
  2749  017E38  0012               	return		;funcret
  2750  017E3A                     __end_of_srand:
  2751                           	opt callstack 0
  2752                           
  2753 ;; *************** function _init_display *****************
  2754 ;; Defined at:
  2755 ;;		line 37 in file "eadog.c"
  2756 ;; Parameters:    Size  Location     Type
  2757 ;;		None
  2758 ;; Auto vars:     Size  Location     Type
  2759 ;;		None
  2760 ;; Return value:  Size  Location     Type
  2761 ;;                  1  [STACK] void 
  2762 ;; Registers used:
  2763 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  2764 ;; Tracked objects:
  2765 ;;		On entry : 0/1
  2766 ;;		On exit  : 3F/3D
  2767 ;;		Unchanged: 0/0
  2768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2773 ;;Total ram usage:        0 bytes
  2774 ;; Hardware stack levels used:    1
  2775 ;; Hardware stack levels required when called:    8
  2776 ;; This function calls:
  2777 ;;		_ringBufS_init
  2778 ;;		_send_lcd_cmd
  2779 ;;		_send_lcd_cmd_long
  2780 ;;		_wdtdelay
  2781 ;; This function is called by:
  2782 ;;		_main
  2783 ;; This function uses a reentrant model
  2784 ;;
  2785                           
  2786                           	psect	text6
  2787  016B1E                     __ptext6:
  2788                           	opt callstack 0
  2789  016B1E                     _init_display:
  2790                           	opt callstack 22
  2791                           
  2792                           ;eadog.c: 39:  spi_link.tx1a = &ring_buf1;
  2793                           
  2794                           ; BSR set to: 1
  2795                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2796                           ;incstack = 0
  2797  016B1E  0E43               	movlw	low _ring_buf1
  2798  016B20  0100               	movlb	0	; () banked
  2799  016B22  6FA7               	movwf	(_spi_link+6)& (0+255),b	;volatile
  2800  016B24  0E04               	movlw	high _ring_buf1
  2801  016B26  6FA8               	movwf	(_spi_link+7)& (0+255),b	;volatile
  2802                           
  2803                           ;eadog.c: 40:  spi_link.tx1b = &ring_buf2;
  2804  016B28  0E00               	movlw	low _ring_buf2
  2805  016B2A  6FA5               	movwf	(_spi_link+4)& (0+255),b	;volatile
  2806  016B2C  0E04               	movlw	high _ring_buf2
  2807  016B2E  6FA6               	movwf	(_spi_link+5)& (0+255),b	;volatile
  2808                           
  2809                           ; BSR set to: 0
  2810                           ;eadog.c: 41:  ringBufS_init(spi_link.tx1a);
  2811  016B30  0060  F29F  FFE6   	movff	_spi_link+6,postinc1
  2812  016B36  0060  F2A3  FFE6   	movff	_spi_link+7,postinc1
  2813  016B3C  EC2D  F0C0         	call	_ringBufS_init	;wreg free
  2814                           
  2815                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1b);
  2816  016B40  0060  F297  FFE6   	movff	_spi_link+4,postinc1
  2817  016B46  0060  F29B  FFE6   	movff	_spi_link+5,postinc1
  2818  016B4C  EC2D  F0C0         	call	_ringBufS_init	;wreg free
  2819                           
  2820                           ;eadog.c: 44:  LATEbits.LATE2 = 1;
  2821  016B50  84BE               	bsf	190,2,c	;volatile
  2822  016B52  84BC               	bsf	188,2,c	;volatile
  2823                           
  2824                           ;eadog.c: 46:  wdtdelay(350000);
  2825  016B54  0E30               	movlw	48
  2826  016B56  6EE6               	movwf	postinc1,c
  2827  016B58  0E57               	movlw	87
  2828  016B5A  6EE6               	movwf	postinc1,c
  2829  016B5C  0E05               	movlw	5
  2830  016B5E  6EE6               	movwf	postinc1,c
  2831  016B60  0E00               	movlw	0
  2832  016B62  6EE6               	movwf	postinc1,c
  2833  016B64  EC64  F0BC         	call	_wdtdelay	;wreg free
  2834                           
  2835                           ; BSR set to: 0
  2836                           ;eadog.c: 47:  send_lcd_cmd(0x39);
  2837  016B68  0E39               	movlw	57
  2838  016B6A  6EE6               	movwf	postinc1,c
  2839  016B6C  EC19  F0C0         	call	_send_lcd_cmd	;wreg free
  2840                           
  2841                           ; BSR set to: 0
  2842                           ;eadog.c: 48:  send_lcd_cmd(0x1d);
  2843  016B70  0E1D               	movlw	29
  2844  016B72  6EE6               	movwf	postinc1,c
  2845  016B74  EC19  F0C0         	call	_send_lcd_cmd	;wreg free
  2846                           
  2847                           ; BSR set to: 0
  2848                           ;eadog.c: 49:  send_lcd_cmd(0x50);
  2849  016B78  0E50               	movlw	80
  2850  016B7A  6EE6               	movwf	postinc1,c
  2851  016B7C  EC19  F0C0         	call	_send_lcd_cmd	;wreg free
  2852                           
  2853                           ; BSR set to: 0
  2854                           ;eadog.c: 50:  send_lcd_cmd(0x6c);
  2855  016B80  0E6C               	movlw	108
  2856  016B82  6EE6               	movwf	postinc1,c
  2857  016B84  EC19  F0C0         	call	_send_lcd_cmd	;wreg free
  2858                           
  2859                           ; BSR set to: 0
  2860                           ;eadog.c: 51:  send_lcd_cmd(0x76);
  2861  016B88  0E76               	movlw	118
  2862  016B8A  6EE6               	movwf	postinc1,c
  2863  016B8C  EC19  F0C0         	call	_send_lcd_cmd	;wreg free
  2864                           
  2865                           ; BSR set to: 0
  2866                           ;eadog.c: 52:  send_lcd_cmd_long(0x38);
  2867  016B90  0E38               	movlw	56
  2868  016B92  6EE6               	movwf	postinc1,c
  2869  016B94  EC05  F0C0         	call	_send_lcd_cmd_long	;wreg free
  2870                           
  2871                           ; BSR set to: 0
  2872                           ;eadog.c: 53:  send_lcd_cmd(0x0f);
  2873  016B98  0E0F               	movlw	15
  2874  016B9A  6EE6               	movwf	postinc1,c
  2875  016B9C  EC19  F0C0         	call	_send_lcd_cmd	;wreg free
  2876                           
  2877                           ; BSR set to: 0
  2878                           ;eadog.c: 54:  send_lcd_cmd_long(0x01);
  2879  016BA0  0E01               	movlw	1
  2880  016BA2  6EE6               	movwf	postinc1,c
  2881  016BA4  EC05  F0C0         	call	_send_lcd_cmd_long	;wreg free
  2882                           
  2883                           ; BSR set to: 0
  2884                           ;eadog.c: 55:  send_lcd_cmd(0x02);
  2885  016BA8  0E02               	movlw	2
  2886  016BAA  6EE6               	movwf	postinc1,c
  2887  016BAC  EC19  F0C0         	call	_send_lcd_cmd	;wreg free
  2888                           
  2889                           ; BSR set to: 0
  2890                           ;eadog.c: 56:  send_lcd_cmd(0x06);
  2891  016BB0  0E06               	movlw	6
  2892  016BB2  6EE6               	movwf	postinc1,c
  2893  016BB4  EC19  F0C0         	call	_send_lcd_cmd	;wreg free
  2894                           
  2895                           ; BSR set to: 0
  2896                           ;eadog.c: 57:  wdtdelay(30);
  2897  016BB8  0E1E               	movlw	30
  2898  016BBA  6EE6               	movwf	postinc1,c
  2899  016BBC  0E00               	movlw	0
  2900  016BBE  6EE6               	movwf	postinc1,c
  2901  016BC0  0E00               	movlw	0
  2902  016BC2  6EE6               	movwf	postinc1,c
  2903  016BC4  0E00               	movlw	0
  2904  016BC6  6EE6               	movwf	postinc1,c
  2905  016BC8  EC64  F0BC         	call	_wdtdelay	;wreg free
  2906                           
  2907                           ; BSR set to: 0
  2908                           ;eadog.c: 58:  SPI1CON2 = 0x02;
  2909  016BCC  0E02               	movlw	2
  2910  016BCE  013D               	movlb	61	; () banked
  2911  016BD0  6F16               	movwf	22,b	;volatile
  2912                           
  2913                           ; BSR set to: 61
  2914                           ;eadog.c: 59:  SPI1CON1 = 0x40;
  2915  016BD2  0E40               	movlw	64
  2916  016BD4  6F15               	movwf	21,b	;volatile
  2917                           
  2918                           ; BSR set to: 61
  2919                           ;eadog.c: 60:  SPI1CON0 = 0x83;
  2920  016BD6  0E83               	movlw	131
  2921  016BD8  6F14               	movwf	20,b	;volatile
  2922                           
  2923                           ; BSR set to: 61
  2924                           ;eadog.c: 61:  SPI1INTFbits.SPI1TXUIF = 0;
  2925  016BDA  931A               	bcf	26,1,b	;volatile
  2926                           
  2927                           ; BSR set to: 61
  2928                           ;eadog.c: 62:  DMA1CON1bits.DMODE = 0;
  2929  016BDC  0E3F               	movlw	-193
  2930  016BDE  013B               	movlb	59	; () banked
  2931  016BE0  17FD               	andwf	253,f,b	;volatile
  2932                           
  2933                           ; BSR set to: 59
  2934                           ;eadog.c: 63:  DMA1CON1bits.DSTP = 0;
  2935  016BE2  9BFD               	bcf	253,5,b	;volatile
  2936                           
  2937                           ; BSR set to: 59
  2938                           ;eadog.c: 64:  DMA1CON1bits.SMODE = 1;
  2939  016BE4  51FD               	movf	253,w,b	;volatile
  2940  016BE6  0BF9               	andlw	-7
  2941  016BE8  0902               	iorlw	2
  2942  016BEA  6FFD               	movwf	253,b	;volatile
  2943                           
  2944                           ; BSR set to: 59
  2945                           ;eadog.c: 65:  DMA1CON1bits.SMR = 0;
  2946  016BEC  0EE7               	movlw	-25
  2947  016BEE  17FD               	andwf	253,f,b	;volatile
  2948                           
  2949                           ; BSR set to: 59
  2950                           ;eadog.c: 66:  DMA1CON1bits.SSTP = 1;
  2951  016BF0  81FD               	bsf	253,0,b	;volatile
  2952                           
  2953                           ; BSR set to: 59
  2954                           ;eadog.c: 67:  DMA1SSA = (uint32_t) & ring_buf1;
  2955  016BF2  0E43               	movlw	low _ring_buf1
  2956  016BF4  6FF9               	movwf	249,b	;volatile
  2957  016BF6  0E04               	movlw	high _ring_buf1
  2958  016BF8  6FFA               	movwf	250,b	;volatile
  2959  016BFA  0E00               	movlw	low (_ring_buf1 shr (0+16))
  2960  016BFC  6FFB               	movwf	251,b	;volatile
  2961                           
  2962                           ; BSR set to: 59
  2963                           ;eadog.c: 68:  DMA1CON0bits.DGO = 0;
  2964  016BFE  9BFC               	bcf	252,5,b	;volatile
  2965                           
  2966                           ; BSR set to: 59
  2967                           ;eadog.c: 69:  SPI1INTFbits.SPI1TXUIF = 1;
  2968  016C00  013D               	movlb	61	; () banked
  2969  016C02  831A               	bsf	26,1,b	;volatile
  2970                           
  2971                           ; BSR set to: 61
  2972                           ;eadog.c: 70:  LATEbits.LATE2 = 0;
  2973  016C04  94BE               	bcf	190,2,c	;volatile
  2974                           
  2975                           ; BSR set to: 61
  2976                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  2977  016C06  0012               	return		;funcret
  2978  016C08                     __end_of_init_display:
  2979                           	opt callstack 0
  2980                           
  2981 ;; *************** function _send_lcd_cmd_long *****************
  2982 ;; Defined at:
  2983 ;;		line 114 in file "eadog.c"
  2984 ;; Parameters:    Size  Location     Type
  2985 ;;  cmd             1  [STACK] const unsigned char 
  2986 ;; Auto vars:     Size  Location     Type
  2987 ;;		None
  2988 ;; Return value:  Size  Location     Type
  2989 ;;                  1  [STACK] void 
  2990 ;; Registers used:
  2991 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  2992 ;; Tracked objects:
  2993 ;;		On entry : 3F/0
  2994 ;;		On exit  : 3F/0
  2995 ;;		Unchanged: 0/0
  2996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3001 ;;Total ram usage:        0 bytes
  3002 ;; Hardware stack levels used:    1
  3003 ;; Hardware stack levels required when called:    7
  3004 ;; This function calls:
  3005 ;;		_SPI1_Exchange8bit
  3006 ;;		_wdtdelay
  3007 ;; This function is called by:
  3008 ;;		_init_display
  3009 ;; This function uses a reentrant model
  3010 ;;
  3011                           
  3012                           	psect	text7
  3013  01800A                     __ptext7:
  3014                           	opt callstack 0
  3015  01800A                     _send_lcd_cmd_long:
  3016                           	opt callstack 22
  3017                           
  3018                           ; BSR set to: 61
  3019                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3020                           ;incstack = 0
  3021                           ;eadog.c: 114: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 115: {;eadog.c:
      +                           116:  do { LATCbits.LATC1 = 0; } while(0);
  3022  01800A  92BC               	bcf	188,1,c	;volatile
  3023                           
  3024                           ;eadog.c: 117:  do { LATCbits.LATC2 = 0; } while(0);
  3025  01800C  94BC               	bcf	188,2,c	;volatile
  3026                           
  3027                           ;eadog.c: 118:  SPI1_Exchange8bit(cmd);
  3028                           ;stkvar	_cmd @ sp[(0)+-1]
  3029  01800E  0EFF               	movlw	-1
  3030  018010  50E3               	movf	plusw1,w,c
  3031  018012  6EE6               	movwf	postinc1,c
  3032  018014  ECE9  F0C1         	call	_SPI1_Exchange8bit	;wreg free
  3033                           
  3034                           ; BSR set to: 57
  3035                           ;eadog.c: 119:  wdtdelay(800);
  3036  018018  0E20               	movlw	32
  3037  01801A  6EE6               	movwf	postinc1,c
  3038  01801C  0E03               	movlw	3
  3039  01801E  6EE6               	movwf	postinc1,c
  3040  018020  0E00               	movlw	0
  3041  018022  6EE6               	movwf	postinc1,c
  3042  018024  0E00               	movlw	0
  3043  018026  6EE6               	movwf	postinc1,c
  3044  018028  EC64  F0BC         	call	_wdtdelay	;wreg free
  3045                           
  3046                           ; BSR set to: 0
  3047  01802C  82BC               	bsf	188,1,c	;volatile
  3048                           
  3049                           ; BSR set to: 0
  3050                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  3051  01802E  52E5               	movf	postdec1,f,c
  3052  018030  0012               	return		;funcret
  3053  018032                     __end_of_send_lcd_cmd_long:
  3054                           	opt callstack 0
  3055                           
  3056 ;; *************** function _send_lcd_cmd *****************
  3057 ;; Defined at:
  3058 ;;		line 102 in file "eadog.c"
  3059 ;; Parameters:    Size  Location     Type
  3060 ;;  cmd             1  [STACK] const unsigned char 
  3061 ;; Auto vars:     Size  Location     Type
  3062 ;;		None
  3063 ;; Return value:  Size  Location     Type
  3064 ;;                  1  [STACK] void 
  3065 ;; Registers used:
  3066 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  3067 ;; Tracked objects:
  3068 ;;		On entry : 3F/0
  3069 ;;		On exit  : 3F/0
  3070 ;;		Unchanged: 0/0
  3071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3075 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3076 ;;Total ram usage:        0 bytes
  3077 ;; Hardware stack levels used:    1
  3078 ;; Hardware stack levels required when called:    7
  3079 ;; This function calls:
  3080 ;;		_SPI1_Exchange8bit
  3081 ;;		_wdtdelay
  3082 ;; This function is called by:
  3083 ;;		_init_display
  3084 ;; This function uses a reentrant model
  3085 ;;
  3086                           
  3087                           	psect	text8
  3088  018032                     __ptext8:
  3089                           	opt callstack 0
  3090  018032                     _send_lcd_cmd:
  3091                           	opt callstack 22
  3092                           
  3093                           ; BSR set to: 0
  3094                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3095                           ;incstack = 0
  3096                           ;eadog.c: 102: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 103: {;eadog.c: 104:
      +                            do { LATCbits.LATC1 = 0; } while(0);
  3097  018032  92BC               	bcf	188,1,c	;volatile
  3098                           
  3099                           ;eadog.c: 105:  do { LATCbits.LATC2 = 0; } while(0);
  3100  018034  94BC               	bcf	188,2,c	;volatile
  3101                           
  3102                           ;eadog.c: 106:  SPI1_Exchange8bit(cmd);
  3103                           ;stkvar	_cmd @ sp[(0)+-1]
  3104  018036  0EFF               	movlw	-1
  3105  018038  50E3               	movf	plusw1,w,c
  3106  01803A  6EE6               	movwf	postinc1,c
  3107  01803C  ECE9  F0C1         	call	_SPI1_Exchange8bit	;wreg free
  3108                           
  3109                           ; BSR set to: 57
  3110                           ;eadog.c: 107:  wdtdelay(30);
  3111  018040  0E1E               	movlw	30
  3112  018042  6EE6               	movwf	postinc1,c
  3113  018044  0E00               	movlw	0
  3114  018046  6EE6               	movwf	postinc1,c
  3115  018048  0E00               	movlw	0
  3116  01804A  6EE6               	movwf	postinc1,c
  3117  01804C  0E00               	movlw	0
  3118  01804E  6EE6               	movwf	postinc1,c
  3119  018050  EC64  F0BC         	call	_wdtdelay	;wreg free
  3120                           
  3121                           ; BSR set to: 0
  3122  018054  82BC               	bsf	188,1,c	;volatile
  3123                           
  3124                           ; BSR set to: 0
  3125                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  3126  018056  52E5               	movf	postdec1,f,c
  3127  018058  0012               	return		;funcret
  3128  01805A                     __end_of_send_lcd_cmd:
  3129                           	opt callstack 0
  3130                           
  3131 ;; *************** function _SPI1_Exchange8bit *****************
  3132 ;; Defined at:
  3133 ;;		line 79 in file "mcc_generated_files/spi1.c"
  3134 ;; Parameters:    Size  Location     Type
  3135 ;;  data            1  [STACK] unsigned char 
  3136 ;; Auto vars:     Size  Location     Type
  3137 ;;		None
  3138 ;; Return value:  Size  Location     Type
  3139 ;;                  1  [STACK] unsigned char 
  3140 ;; Registers used:
  3141 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  3142 ;; Tracked objects:
  3143 ;;		On entry : 0/0
  3144 ;;		On exit  : 3F/39
  3145 ;;		Unchanged: 0/0
  3146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3151 ;;Total ram usage:        0 bytes
  3152 ;; Hardware stack levels used:    1
  3153 ;; Hardware stack levels required when called:    6
  3154 ;; This function calls:
  3155 ;;		Nothing
  3156 ;; This function is called by:
  3157 ;;		_send_lcd_cmd
  3158 ;;		_send_lcd_cmd_long
  3159 ;; This function uses a reentrant model
  3160 ;;
  3161                           
  3162                           	psect	text9
  3163  0183D2                     __ptext9:
  3164                           	opt callstack 0
  3165  0183D2                     _SPI1_Exchange8bit:
  3166                           	opt callstack 22
  3167                           
  3168                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  3169                           
  3170                           ; BSR set to: 0
  3171                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3172                           ;incstack = 0
  3173  0183D2  0E01               	movlw	1
  3174  0183D4  013D               	movlb	61	; () banked
  3175  0183D6  6F12               	movwf	18,b	;volatile
  3176                           
  3177                           ; BSR set to: 61
  3178                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  3179                           ;stkvar	_data @ sp[(0)+-1]
  3180  0183D8  0EFF               	movlw	-1
  3181  0183DA  006F FF8F FD11     	movff	plusw1,15633	;volatile
  3182  0183E0                     l835:
  3183                           
  3184                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  3185  0183E0  0139               	movlb	57	; () banked
  3186  0183E2  A9A2               	btfss	162,4,b	;volatile
  3187  0183E4  D7FD               	goto	l835
  3188                           
  3189                           ; BSR set to: 57
  3190                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  3191  0183E6  006F F440  F032    	movff	15632,btemp	;volatile
  3192                           
  3193                           ; BSR set to: 57
  3194                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  3195  0183EC  52E5               	movf	postdec1,f,c
  3196  0183EE  0012               	return		;funcret
  3197  0183F0                     __end_of_SPI1_Exchange8bit:
  3198                           	opt callstack 0
  3199                           
  3200 ;; *************** function _ringBufS_init *****************
  3201 ;; Defined at:
  3202 ;;		line 22 in file "ringbufs.c"
  3203 ;; Parameters:    Size  Location     Type
  3204 ;;  _this           2  [STACK] PTR volatile struct ring
  3205 ;;		 -> ring_buf2(67), ring_buf1(67), 
  3206 ;; Auto vars:     Size  Location     Type
  3207 ;;		None
  3208 ;; Return value:  Size  Location     Type
  3209 ;;                  1  [STACK] void 
  3210 ;; Registers used:
  3211 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  3212 ;; Tracked objects:
  3213 ;;		On entry : 0/0
  3214 ;;		On exit  : 0/0
  3215 ;;		Unchanged: 0/0
  3216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3221 ;;Total ram usage:        0 bytes
  3222 ;; Hardware stack levels used:    1
  3223 ;; Hardware stack levels required when called:    7
  3224 ;; This function calls:
  3225 ;;		_memset
  3226 ;; This function is called by:
  3227 ;;		_init_display
  3228 ;; This function uses a reentrant model
  3229 ;;
  3230                           
  3231                           	psect	text10
  3232  01805A                     __ptext10:
  3233                           	opt callstack 0
  3234  01805A                     _ringBufS_init:
  3235                           	opt callstack 22
  3236                           
  3237                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  3238                           
  3239                           ; BSR set to: 57
  3240                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3241                           ;incstack = 0
  3242  01805A  0E43               	movlw	67
  3243  01805C  6EE6               	movwf	postinc1,c
  3244  01805E  0E00               	movlw	0
  3245  018060  6EE6               	movwf	postinc1,c
  3246  018062  0E00               	movlw	0
  3247  018064  6EE6               	movwf	postinc1,c
  3248  018066  0E00               	movlw	0
  3249  018068  6EE6               	movwf	postinc1,c
  3250                           
  3251                           ;stkvar	__this @ sp[(-4)+-2]
  3252  01806A  0EFA               	movlw	-6
  3253  01806C  006F FF8F FFE6     	movff	plusw1,postinc1
  3254  018072  006F FF8F FFE6     	movff	plusw1,postinc1
  3255  018078  EC0C  F0A4         	call	_memset	;wreg free
  3256                           
  3257                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  3258  01807C  52E5               	movf	postdec1,f,c
  3259  01807E  52E5               	movf	postdec1,f,c
  3260  018080  0012               	return		;funcret
  3261  018082                     __end_of_ringBufS_init:
  3262                           	opt callstack 0
  3263                           
  3264 ;; *************** function _get_switch *****************
  3265 ;; Defined at:
  3266 ;;		line 18 in file "dio.c"
  3267 ;; Parameters:    Size  Location     Type
  3268 ;;  i               1  [STACK] unsigned char 
  3269 ;; Auto vars:     Size  Location     Type
  3270 ;;		None
  3271 ;; Return value:  Size  Location     Type
  3272 ;;                  1  [STACK] enum E17013
  3273 ;; Registers used:
  3274 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  3275 ;; Tracked objects:
  3276 ;;		On entry : 0/39
  3277 ;;		On exit  : 0/0
  3278 ;;		Unchanged: 0/0
  3279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3283 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3284 ;;Total ram usage:        0 bytes
  3285 ;; Hardware stack levels used:    1
  3286 ;; Hardware stack levels required when called:    6
  3287 ;; This function calls:
  3288 ;;		Nothing
  3289 ;; This function is called by:
  3290 ;;		_main
  3291 ;; This function uses a reentrant model
  3292 ;;
  3293                           
  3294                           	psect	text11
  3295  018082                     __ptext11:
  3296                           	opt callstack 0
  3297  018082                     _get_switch:
  3298                           	opt callstack 24
  3299                           
  3300                           ;dio.c: 18: SW_STATES get_switch(uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 4)
  3301                           ;stkvar	_i @ sp[(0)+-1]
  3302                           
  3303                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3304                           ;incstack = 0
  3305  018082  0EFF               	movlw	-1
  3306  018084  006F FF8C  F032    	movff	plusw1,btemp
  3307  01808A  0E03               	movlw	3
  3308  01808C  6432               	cpfsgt	btemp^0,c
  3309  01808E  D002               	goto	l11857
  3310                           
  3311                           ;dio.c: 21:   return SW_OFF;
  3312  018090  0E00               	movlw	0
  3313  018092  D008               	goto	L1
  3314  018094                     l11857:
  3315                           
  3316                           ;dio.c: 23:  return S.button[i].sw;
  3317                           ;stkvar	_i @ sp[(0)+-1]
  3318  018094  0EFF               	movlw	-1
  3319  018096  50E3               	movf	plusw1,w,c
  3320  018098  0D05               	mullw	5
  3321  01809A  50F3               	movf	243,w,c
  3322  01809C  0F60               	addlw	low _S
  3323  01809E  6ED9               	movwf	fsr2l,c
  3324  0180A0  6ADA               	clrf	fsr2h,c
  3325  0180A2  50DF               	movf	indf2,w,c
  3326  0180A4                     L1:
  3327  0180A4  6E32               	movwf	btemp^0,c
  3328                           
  3329                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  3330  0180A6  52E5               	movf	postdec1,f,c
  3331  0180A8  0012               	return		;funcret
  3332  0180AA                     __end_of_get_switch:
  3333                           	opt callstack 0
  3334                           
  3335 ;; *************** function _eaDogM_WriteCommand *****************
  3336 ;; Defined at:
  3337 ;;		line 160 in file "eadog.c"
  3338 ;; Parameters:    Size  Location     Type
  3339 ;;  cmd             1  [STACK] const unsigned char 
  3340 ;; Auto vars:     Size  Location     Type
  3341 ;;		None
  3342 ;; Return value:  Size  Location     Type
  3343 ;;                  1  [STACK] void 
  3344 ;; Registers used:
  3345 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  3346 ;; Tracked objects:
  3347 ;;		On entry : 3F/3D
  3348 ;;		On exit  : 3F/0
  3349 ;;		Unchanged: 0/0
  3350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3354 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3355 ;;Total ram usage:        0 bytes
  3356 ;; Hardware stack levels used:    1
  3357 ;; Hardware stack levels required when called:   16
  3358 ;; This function calls:
  3359 ;;		_send_lcd_cmd_dma
  3360 ;; This function is called by:
  3361 ;;		_main
  3362 ;; This function uses a reentrant model
  3363 ;;
  3364                           
  3365                           	psect	text12
  3366  01858E                     __ptext12:
  3367                           	opt callstack 0
  3368  01858E                     _eaDogM_WriteCommand:
  3369                           	opt callstack 14
  3370                           
  3371                           ;eadog.c: 160: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 161: {;eadog.c: 162:
      +                            send_lcd_cmd_dma(cmd);
  3372                           ;stkvar	_cmd @ sp[(0)+-1]
  3373                           
  3374                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3375                           ;incstack = 0
  3376  01858E  0EFF               	movlw	-1
  3377  018590  50E3               	movf	plusw1,w,c
  3378  018592  6EE6               	movwf	postinc1,c
  3379  018594  ECEB  F0BC         	call	_send_lcd_cmd_dma	;wreg free
  3380                           
  3381                           ; BSR set to: 0
  3382                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  3383  018598  52E5               	movf	postdec1,f,c
  3384  01859A  0012               	return		;funcret
  3385  01859C                     __end_of_eaDogM_WriteCommand:
  3386                           	opt callstack 0
  3387                           
  3388 ;; *************** function _convert_adc_data *****************
  3389 ;; Defined at:
  3390 ;;		line 38 in file "mbmc.c"
  3391 ;; Parameters:    Size  Location     Type
  3392 ;;		None
  3393 ;; Auto vars:     Size  Location     Type
  3394 ;;  i               1  [STACK] unsigned char 
  3395 ;; Return value:  Size  Location     Type
  3396 ;;                  1  [STACK] void 
  3397 ;; Registers used:
  3398 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  3399 ;; Tracked objects:
  3400 ;;		On entry : 0/39
  3401 ;;		On exit  : 0/0
  3402 ;;		Unchanged: 0/0
  3403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3407 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3408 ;;Total ram usage:        0 bytes
  3409 ;; Hardware stack levels used:    1
  3410 ;; Hardware stack levels required when called:    9
  3411 ;; This function calls:
  3412 ;;		_conv_raw_result
  3413 ;;		_lp_filter
  3414 ;; This function is called by:
  3415 ;;		_main
  3416 ;; This function uses a reentrant model
  3417 ;;
  3418                           
  3419                           	psect	text13
  3420  0174C0                     __ptext13:
  3421                           	opt callstack 0
  3422  0174C0                     _convert_adc_data:
  3423                           	opt callstack 0
  3424                           
  3425                           ; BSR set to: 0
  3426                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3427  0174C0  52E6               	movf	postinc1,f,c
  3428                           
  3429                           ;mbmc.c: 40:  uint8_t i = 0;
  3430                           ;stkvar	_i @ sp[(-1)+0]
  3431                           
  3432                           ;incstack = 0
  3433  0174C2  0EFF               	movlw	-1
  3434  0174C4  6AE3               	clrf	plusw1,c
  3435  0174C6                     l11845:
  3436                           
  3437                           ;mbmc.c: 44:   C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
  3438  0174C6  0E01               	movlw	1
  3439  0174C8  6EE6               	movwf	postinc1,c
  3440                           
  3441                           ;stkvar	_i @ sp[(-2)+0]
  3442  0174CA  0EFE               	movlw	-2
  3443  0174CC  50E3               	movf	plusw1,w,c
  3444  0174CE  6EE6               	movwf	postinc1,c
  3445  0174D0  0E01               	movlw	1
  3446  0174D2  6EE6               	movwf	postinc1,c
  3447                           
  3448                           ;stkvar	_i @ sp[(-4)+0]
  3449  0174D4  0EFC               	movlw	-4
  3450  0174D6  50E3               	movf	plusw1,w,c
  3451  0174D8  6EE6               	movwf	postinc1,c
  3452  0174DA  ECB4  F096         	call	_conv_raw_result	;wreg free
  3453  0174DE  0060  F0CB  FFE6   	movff	btemp,postinc1
  3454  0174E4  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3455  0174EA  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3456  0174F0  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3457  0174F6  EC6A  F0AD         	call	_lp_filter	;wreg free
  3458                           
  3459                           ;stkvar	_i @ sp[(-1)+0]
  3460  0174FA  0EFF               	movlw	-1
  3461  0174FC  50E3               	movf	plusw1,w,c
  3462  0174FE  0D04               	mullw	4
  3463  017500  0E00               	movlw	low _C
  3464  017502  24F3               	addwf	243,w,c
  3465  017504  6ED9               	movwf	fsr2l,c
  3466  017506  0E03               	movlw	high _C
  3467  017508  20F4               	addwfc	prodh,w,c
  3468  01750A  6EDA               	movwf	fsr2h,c
  3469  01750C  0060  F0CB  FFDE   	movff	btemp,postinc2
  3470  017512  0060  F0CF  FFDE   	movff	btemp+1,postinc2
  3471  017518  0060  F0D3  FFDE   	movff	btemp+2,postinc2
  3472  01751E  0060  F0D7  FFDE   	movff	btemp+3,postinc2
  3473                           
  3474                           ;mbmc.c: 48:  } while (++i < 16);
  3475                           ;stkvar	_i @ sp[(-1)+0]
  3476  017524  0EFF               	movlw	-1
  3477  017526  2AE3               	incf	plusw1,f,c
  3478  017528  0EFF               	movlw	-1
  3479  01752A  006F FF8C  F032    	movff	plusw1,btemp
  3480  017530  0E0F               	movlw	15
  3481  017532  6432               	cpfsgt	btemp^0,c
  3482  017534  D7C8               	goto	l11845
  3483                           
  3484                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  3485  017536  52E5               	movf	postdec1,f,c
  3486  017538  0012               	return		;funcret
  3487  01753A                     __end_of_convert_adc_data:
  3488                           	opt callstack 0
  3489                           
  3490 ;; *************** function _lp_filter *****************
  3491 ;; Defined at:
  3492 ;;		line 16 in file "mbmc.c"
  3493 ;; Parameters:    Size  Location     Type
  3494 ;;  new             4  [STACK] const float 
  3495 ;;  bn              1  [STACK] const unsigned char 
  3496 ;;  slow            1  [STACK] const char 
  3497 ;; Auto vars:     Size  Location     Type
  3498 ;;  lp_speed        4  [STACK] float 
  3499 ;; Return value:  Size  Location     Type
  3500 ;;                  4  [STACK] float 
  3501 ;; Registers used:
  3502 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  3503 ;; Tracked objects:
  3504 ;;		On entry : 0/39
  3505 ;;		On exit  : 0/0
  3506 ;;		Unchanged: 0/0
  3507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3511 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3512 ;;Total ram usage:        0 bytes
  3513 ;; Hardware stack levels used:    1
  3514 ;; Hardware stack levels required when called:    8
  3515 ;; This function calls:
  3516 ;;		___fladd
  3517 ;;		___flmul
  3518 ;;		___flsub
  3519 ;; This function is called by:
  3520 ;;		_convert_adc_data
  3521 ;; This function uses a reentrant model
  3522 ;;
  3523                           
  3524                           	psect	text14
  3525  015AD4                     __ptext14:
  3526                           	opt callstack 0
  3527  015AD4                     _lp_filter:
  3528                           	opt callstack 0
  3529                           
  3530                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3531  015AD4  52E6               	movf	postinc1,f,c
  3532  015AD6  52E6               	movf	postinc1,f,c
  3533  015AD8  52E6               	movf	postinc1,f,c
  3534  015ADA  52E6               	movf	postinc1,f,c
  3535                           
  3536                           ;mbmc.c: 16: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 17: {;mbmc.c: 18:  static float smooth[16];;mbmc.c: 19:  float lp_speed;;mbmc.c: 21: 
      +                           if (bn >= 16)
  3537                           ;stkvar	_bn @ sp[(-4)+-5]
  3538                           
  3539                           ;incstack = 0
  3540  015ADC  0EF7               	movlw	-9
  3541  015ADE  006F FF8C  F032    	movff	plusw1,btemp
  3542  015AE4  0E0F               	movlw	15
  3543  015AE6  6432               	cpfsgt	btemp^0,c
  3544  015AE8  D011               	goto	l11699
  3545  015AEA                     u12480:
  3546                           
  3547                           ;mbmc.c: 22:   return new;
  3548                           ;stkvar	_new @ sp[(-4)+-4]
  3549  015AEA  0EF8               	movlw	-8
  3550  015AEC  006F FF8C  F032    	movff	plusw1,btemp
  3551  015AF2  0EF9               	movlw	-7
  3552  015AF4  006F FF8C  F033    	movff	plusw1,btemp+1
  3553  015AFA  0EFA               	movlw	-6
  3554  015AFC  006F FF8C  F034    	movff	plusw1,btemp+2
  3555  015B02  0EFB               	movlw	-5
  3556  015B04  006F FF8C  F035    	movff	plusw1,btemp+3
  3557  015B0A  D0BF               	goto	l1693
  3558  015B0C                     l11699:
  3559                           
  3560                           ;mbmc.c: 24:  if (slow == (-1)) {
  3561                           ;stkvar	_slow @ sp[(-4)+-6]
  3562  015B0C  0EF6               	movlw	-10
  3563  015B0E  28E3               	incf	plusw1,w,c
  3564  015B10  A4D8               	btfss	status,2,c
  3565  015B12  D012               	goto	l11707
  3566                           
  3567                           ;mbmc.c: 25:   smooth[bn] = 0.0;
  3568                           ;stkvar	_bn @ sp[(-4)+-5]
  3569  015B14  0EF7               	movlw	-9
  3570  015B16  50E3               	movf	plusw1,w,c
  3571  015B18  0D04               	mullw	4
  3572  015B1A  0E00               	movlw	low lp_filter@smooth
  3573  015B1C  24F3               	addwf	243,w,c
  3574  015B1E  6ED9               	movwf	fsr2l,c
  3575  015B20  0E02               	movlw	high lp_filter@smooth
  3576  015B22  20F4               	addwfc	prodh,w,c
  3577  015B24  6EDA               	movwf	fsr2h,c
  3578  015B26  0E00               	movlw	0
  3579  015B28  6EDE               	movwf	postinc2,c
  3580  015B2A  0E00               	movlw	0
  3581  015B2C  6EDE               	movwf	postinc2,c
  3582  015B2E  0E00               	movlw	0
  3583  015B30  6EDE               	movwf	postinc2,c
  3584  015B32  0E00               	movlw	0
  3585  015B34  6EDD               	movwf	postdec2,c
  3586  015B36  D7D9               	goto	u12480
  3587  015B38                     l11707:
  3588                           
  3589                           ;mbmc.c: 29:  if (slow) {
  3590                           ;stkvar	_slow @ sp[(-4)+-6]
  3591  015B38  0EF6               	movlw	-10
  3592  015B3A  50E3               	movf	plusw1,w,c
  3593  015B3C  B4D8               	btfsc	status,2,c
  3594  015B3E  D008               	goto	l11711
  3595                           
  3596                           ;mbmc.c: 30:   lp_speed = 0.066;
  3597  015B40  0E02               	movlw	2
  3598  015B42  6E3A               	movwf	(btemp+8)^0,c
  3599  015B44  0E2B               	movlw	43
  3600  015B46  6E3B               	movwf	(btemp+9)^0,c
  3601  015B48  0E87               	movlw	135
  3602  015B4A  6E3C               	movwf	(btemp+10)^0,c
  3603  015B4C  0E3D               	movlw	61
  3604  015B4E  D007               	goto	L2
  3605  015B50                     l11711:
  3606                           
  3607                           ;mbmc.c: 32:   lp_speed = 0.125;
  3608  015B50  0E00               	movlw	0
  3609  015B52  6E3A               	movwf	(btemp+8)^0,c
  3610  015B54  0E00               	movlw	0
  3611  015B56  6E3B               	movwf	(btemp+9)^0,c
  3612  015B58  0E00               	movlw	0
  3613  015B5A  6E3C               	movwf	(btemp+10)^0,c
  3614  015B5C  0E3E               	movlw	62
  3615  015B5E                     L2:
  3616  015B5E  6E3D               	movwf	(btemp+11)^0,c
  3617                           
  3618                           ;stkvar	_lp_speed @ sp[(-4)+0]
  3619  015B60  0EFC               	movlw	-4
  3620  015B62  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  3621  015B68  0EFD               	movlw	-3
  3622  015B6A  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  3623  015B70  0EFE               	movlw	-2
  3624  015B72  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  3625  015B78  0EFF               	movlw	-1
  3626  015B7A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  3627                           
  3628                           ;mbmc.c: 35:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
  3629                           ;stkvar	_bn @ sp[(-4)+-5]
  3630  015B80  0EF7               	movlw	-9
  3631  015B82  50E3               	movf	plusw1,w,c
  3632  015B84  0D04               	mullw	4
  3633  015B86  0E00               	movlw	low lp_filter@smooth
  3634  015B88  24F3               	addwf	243,w,c
  3635  015B8A  6ED9               	movwf	fsr2l,c
  3636  015B8C  0E02               	movlw	high lp_filter@smooth
  3637  015B8E  20F4               	addwfc	prodh,w,c
  3638  015B90  6EDA               	movwf	fsr2h,c
  3639  015B92  006F FF7B FFE6     	movff	postinc2,postinc1
  3640  015B98  006F FF7B FFE6     	movff	postinc2,postinc1
  3641  015B9E  006F FF7B FFE6     	movff	postinc2,postinc1
  3642  015BA4  006F FF7B FFE6     	movff	postinc2,postinc1
  3643                           
  3644                           ;stkvar	_lp_speed @ sp[(-8)+0]
  3645  015BAA  0EF8               	movlw	-8
  3646  015BAC  006F FF8F FFE6     	movff	plusw1,postinc1
  3647  015BB2  006F FF8F FFE6     	movff	plusw1,postinc1
  3648  015BB8  006F FF8F FFE6     	movff	plusw1,postinc1
  3649  015BBE  006F FF8F FFE6     	movff	plusw1,postinc1
  3650                           
  3651                           ;stkvar	_bn @ sp[(-12)+-5]
  3652  015BC4  0EEF               	movlw	-17
  3653  015BC6  50E3               	movf	plusw1,w,c
  3654  015BC8  0D04               	mullw	4
  3655  015BCA  0E00               	movlw	low lp_filter@smooth
  3656  015BCC  24F3               	addwf	243,w,c
  3657  015BCE  6ED9               	movwf	fsr2l,c
  3658  015BD0  0E02               	movlw	high lp_filter@smooth
  3659  015BD2  20F4               	addwfc	prodh,w,c
  3660  015BD4  6EDA               	movwf	fsr2h,c
  3661  015BD6  006F FF7B FFE6     	movff	postinc2,postinc1
  3662  015BDC  006F FF7B FFE6     	movff	postinc2,postinc1
  3663  015BE2  006F FF7B FFE6     	movff	postinc2,postinc1
  3664  015BE8  006F FF7B FFE6     	movff	postinc2,postinc1
  3665                           
  3666                           ;stkvar	_new @ sp[(-16)+-4]
  3667  015BEE  0EEC               	movlw	-20
  3668  015BF0  006F FF8F FFE6     	movff	plusw1,postinc1
  3669  015BF6  006F FF8F FFE6     	movff	plusw1,postinc1
  3670  015BFC  006F FF8F FFE6     	movff	plusw1,postinc1
  3671  015C02  006F FF8F FFE6     	movff	plusw1,postinc1
  3672  015C08  EC61  F0BD         	call	___flsub	;wreg free
  3673  015C0C  0060  F0CB  FFE6   	movff	btemp,postinc1
  3674  015C12  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3675  015C18  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3676  015C1E  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3677  015C24  ECC1  F08E         	call	___flmul	;wreg free
  3678  015C28  0060  F0CB  FFE6   	movff	btemp,postinc1
  3679  015C2E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3680  015C34  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3681  015C3A  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3682  015C40  ECD6  F092         	call	___fladd	;wreg free
  3683                           
  3684                           ;stkvar	_bn @ sp[(-4)+-5]
  3685  015C44  0EF7               	movlw	-9
  3686  015C46  50E3               	movf	plusw1,w,c
  3687  015C48  0D04               	mullw	4
  3688  015C4A  0E00               	movlw	low lp_filter@smooth
  3689  015C4C  24F3               	addwf	243,w,c
  3690  015C4E  6ED9               	movwf	fsr2l,c
  3691  015C50  0E02               	movlw	high lp_filter@smooth
  3692  015C52  20F4               	addwfc	prodh,w,c
  3693  015C54  6EDA               	movwf	fsr2h,c
  3694  015C56  0060  F0CB  FFDE   	movff	btemp,postinc2
  3695  015C5C  0060  F0CF  FFDE   	movff	btemp+1,postinc2
  3696  015C62  0060  F0D3  FFDE   	movff	btemp+2,postinc2
  3697  015C68  0060  F0D7  FFDD   	movff	btemp+3,postdec2
  3698  015C6E  52DD               	movf	postdec2,f,c
  3699  015C70  52DD               	movf	postdec2,f,c
  3700  015C72  006F FF78  F032    	movff	postinc2,btemp
  3701  015C78  006F FF78  F033    	movff	postinc2,btemp+1
  3702  015C7E  006F FF78  F034    	movff	postinc2,btemp+2
  3703  015C84  006F FF78  F035    	movff	postinc2,btemp+3
  3704  015C8A                     l1693:
  3705                           
  3706                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
  3707  015C8A  0EF6               	movlw	246
  3708  015C8C  26E1               	addwf	fsr1l,f,c
  3709  015C8E  0EFF               	movlw	255
  3710  015C90  22E2               	addwfc	fsr1h,f,c
  3711  015C92  0012               	return		;funcret
  3712  015C94                     __end_of_lp_filter:
  3713                           	opt callstack 0
  3714                           
  3715 ;; *************** function _conv_raw_result *****************
  3716 ;; Defined at:
  3717 ;;		line 80 in file "daq.c"
  3718 ;; Parameters:    Size  Location     Type
  3719 ;;  chan            1  [STACK] const enum E16136
  3720 ;;  to_what         1  [STACK] const enum E16198
  3721 ;; Auto vars:     Size  Location     Type
  3722 ;;		None
  3723 ;; Return value:  Size  Location     Type
  3724 ;;                  4  [STACK] float 
  3725 ;; Registers used:
  3726 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  3727 ;; Tracked objects:
  3728 ;;		On entry : 0/39
  3729 ;;		On exit  : 0/0
  3730 ;;		Unchanged: 0/0
  3731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3735 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3736 ;;Total ram usage:        0 bytes
  3737 ;; Hardware stack levels used:    1
  3738 ;; Hardware stack levels required when called:    8
  3739 ;; This function calls:
  3740 ;;		___fldiv
  3741 ;;		___flmul
  3742 ;;		___flsub
  3743 ;;		___xxtofl
  3744 ;;		_get_raw_result
  3745 ;;		_nanf
  3746 ;; This function is called by:
  3747 ;;		_convert_adc_data
  3748 ;; This function uses a reentrant model
  3749 ;;
  3750                           
  3751                           	psect	text15
  3752  012D68                     __ptext15:
  3753                           	opt callstack 0
  3754  012D68                     _conv_raw_result:
  3755                           	opt callstack 21
  3756                           
  3757                           ;daq.c: 80: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);d
      +                          aq.c: 81: {;daq.c: 82:  if (!(0b0011110001110111 >> chan & 0x1))
  3758                           ;stkvar	_chan @ sp[(0)+-1]
  3759                           
  3760                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3761                           ;incstack = 0
  3762  012D68  0EFF               	movlw	-1
  3763  012D6A  006F FF8C  F03D    	movff	plusw1,btemp+11
  3764  012D70  0E77               	movlw	119
  3765  012D72  6E3A               	movwf	(btemp+8)^0,c
  3766  012D74  0E3C               	movlw	60
  3767  012D76  6E3B               	movwf	(btemp+9)^0,c
  3768  012D78  2A3D               	incf	(btemp+11)^0,f,c
  3769  012D7A  D003               	goto	u12364
  3770  012D7C                     u12365:
  3771  012D7C  343B               	rlcf	(btemp+9)^0,w,c
  3772  012D7E  323B               	rrcf	(btemp+9)^0,f,c
  3773  012D80  323A               	rrcf	(btemp+8)^0,f,c
  3774  012D82                     u12364:
  3775  012D82  2E3D               	decfsz	(btemp+11)^0,f,c
  3776  012D84  D7FB               	goto	u12365
  3777  012D86  B03A               	btfsc	(btemp+8)^0,0,c
  3778  012D88  D29F               	goto	l11683
  3779                           
  3780                           ;daq.c: 83:   return nanf("");
  3781  012D8A  0E19               	movlw	low (STR_27+18)
  3782  012D8C  6EE6               	movwf	postinc1,c
  3783  012D8E  0EFF               	movlw	high (STR_27+18)
  3784  012D90  6EE6               	movwf	postinc1,c
  3785  012D92  ECD3  F0BB         	call	_nanf	;wreg free
  3786  012D96  D2A8               	goto	l1654
  3787  012D98                     l11635:
  3788                           
  3789                           ;daq.c: 87:   if (0b0000000000000011 >> chan & 0x1) {
  3790                           ;stkvar	_chan @ sp[(0)+-1]
  3791  012D98  0EFF               	movlw	-1
  3792  012D9A  006F FF8C  F03D    	movff	plusw1,btemp+11
  3793  012DA0  0E03               	movlw	3
  3794  012DA2  6E3A               	movwf	(btemp+8)^0,c
  3795  012DA4  0E00               	movlw	0
  3796  012DA6  6E3B               	movwf	(btemp+9)^0,c
  3797  012DA8  2A3D               	incf	(btemp+11)^0,f,c
  3798  012DAA  D003               	goto	u12384
  3799  012DAC                     u12385:
  3800  012DAC  343B               	rlcf	(btemp+9)^0,w,c
  3801  012DAE  323B               	rrcf	(btemp+9)^0,f,c
  3802  012DB0  323A               	rrcf	(btemp+8)^0,f,c
  3803  012DB2                     u12384:
  3804  012DB2  2E3D               	decfsz	(btemp+11)^0,f,c
  3805  012DB4  D7FB               	goto	u12385
  3806  012DB6  A03A               	btfss	(btemp+8)^0,0,c
  3807  012DB8  D117               	goto	l11649
  3808                           
  3809                           ;daq.c: 88:    if (0b0000000000000001 >> chan & 0x1) {
  3810                           ;stkvar	_chan @ sp[(0)+-1]
  3811  012DBA  0EFF               	movlw	-1
  3812  012DBC  006F FF8C  F03D    	movff	plusw1,btemp+11
  3813  012DC2  0E01               	movlw	1
  3814  012DC4  6E3A               	movwf	(btemp+8)^0,c
  3815  012DC6  0E00               	movlw	0
  3816  012DC8  6E3B               	movwf	(btemp+9)^0,c
  3817  012DCA  2A3D               	incf	(btemp+11)^0,f,c
  3818  012DCC  D003               	goto	u12404
  3819  012DCE                     u12405:
  3820  012DCE  343B               	rlcf	(btemp+9)^0,w,c
  3821  012DD0  323B               	rrcf	(btemp+9)^0,f,c
  3822  012DD2  323A               	rrcf	(btemp+8)^0,f,c
  3823  012DD4                     u12404:
  3824  012DD4  2E3D               	decfsz	(btemp+11)^0,f,c
  3825  012DD6  D7FB               	goto	u12405
  3826  012DD8  A03A               	btfss	(btemp+8)^0,0,c
  3827  012DDA  D083               	goto	l11645
  3828                           
  3829                           ;daq.c: 89:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[0]) * 143.85/
      +                          1000.0;
  3830  012DDC  0E00               	movlw	0
  3831  012DDE  6EE6               	movwf	postinc1,c
  3832  012DE0  0E00               	movlw	0
  3833  012DE2  6EE6               	movwf	postinc1,c
  3834  012DE4  0E7A               	movlw	122
  3835  012DE6  6EE6               	movwf	postinc1,c
  3836  012DE8  0E44               	movlw	68
  3837  012DEA  6EE6               	movwf	postinc1,c
  3838  012DEC  0E9A               	movlw	154
  3839  012DEE  6EE6               	movwf	postinc1,c
  3840  012DF0  0ED9               	movlw	217
  3841  012DF2  6EE6               	movwf	postinc1,c
  3842  012DF4  0E0F               	movlw	15
  3843  012DF6  6EE6               	movwf	postinc1,c
  3844  012DF8  0E43               	movlw	67
  3845  012DFA  6EE6               	movwf	postinc1,c
  3846  012DFC  0060  F39C  F03A   	movff	_R+32,btemp+8	;volatile
  3847  012E02  0060  F3A0  F03B   	movff	_R+33,btemp+9	;volatile
  3848  012E08  0E00               	movlw	0
  3849  012E0A  BE3B               	btfsc	(btemp+9)^0,7,c
  3850  012E0C  0EFF               	movlw	255
  3851  012E0E  6E3C               	movwf	(btemp+10)^0,c
  3852  012E10  6E3D               	movwf	(btemp+11)^0,c
  3853  012E12  0060  F0EB  FFE6   	movff	btemp+8,postinc1
  3854  012E18  0060  F0EF  FFE6   	movff	btemp+9,postinc1
  3855  012E1E  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  3856  012E24  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  3857  012E2A  0E01               	movlw	1
  3858  012E2C  6EE6               	movwf	postinc1,c
  3859  012E2E  EC84  F0AB         	call	___xxtofl	;wreg free
  3860  012E32  0060  F0CB  FFE6   	movff	btemp,postinc1
  3861  012E38  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3862  012E3E  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3863  012E44  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3864                           
  3865                           ;stkvar	_chan @ sp[(-12)+-1]
  3866  012E4A  0EF3               	movlw	-13
  3867  012E4C  50E3               	movf	plusw1,w,c
  3868  012E4E  6EE6               	movwf	postinc1,c
  3869  012E50  ECF8  F0C1         	call	_get_raw_result	;wreg free
  3870  012E54  0060  F0C8  F03C   	movff	btemp,btemp+10
  3871  012E5A  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  3872  012E60  503C               	movf	(btemp+10)^0,w,c
  3873  012E62  6E36               	movwf	(btemp+4)^0,c
  3874  012E64  503D               	movf	(btemp+11)^0,w,c
  3875  012E66  6E37               	movwf	(btemp+5)^0,c
  3876  012E68  6A38               	clrf	(btemp+6)^0,c
  3877  012E6A  6A39               	clrf	(btemp+7)^0,c
  3878  012E6C  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  3879  012E72  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  3880  012E78  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  3881  012E7E  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  3882  012E84  0E00               	movlw	0
  3883  012E86  6EE6               	movwf	postinc1,c
  3884  012E88  EC84  F0AB         	call	___xxtofl	;wreg free
  3885  012E8C  0060  F0CB  FFE6   	movff	btemp,postinc1
  3886  012E92  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3887  012E98  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3888  012E9E  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3889  012EA4  EC61  F0BD         	call	___flsub	;wreg free
  3890  012EA8  0060  F0CB  FFE6   	movff	btemp,postinc1
  3891  012EAE  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3892  012EB4  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3893  012EBA  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3894  012EC0  ECC1  F08E         	call	___flmul	;wreg free
  3895  012EC4  0060  F0CB  FFE6   	movff	btemp,postinc1
  3896  012ECA  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3897  012ED0  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3898  012ED6  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3899  012EDC  EC77  F099         	call	___fldiv	;wreg free
  3900  012EE0  D203               	goto	l1654
  3901  012EE2                     l11645:
  3902                           
  3903                           ;daq.c: 91:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[1]) * 60.1/10
      +                          00.0;
  3904  012EE2  0E00               	movlw	0
  3905  012EE4  6EE6               	movwf	postinc1,c
  3906  012EE6  0E00               	movlw	0
  3907  012EE8  6EE6               	movwf	postinc1,c
  3908  012EEA  0E7A               	movlw	122
  3909  012EEC  6EE6               	movwf	postinc1,c
  3910  012EEE  0E44               	movlw	68
  3911  012EF0  6EE6               	movwf	postinc1,c
  3912  012EF2  0E66               	movlw	102
  3913  012EF4  6EE6               	movwf	postinc1,c
  3914  012EF6  0E66               	movlw	102
  3915  012EF8  6EE6               	movwf	postinc1,c
  3916  012EFA  0E70               	movlw	112
  3917  012EFC  6EE6               	movwf	postinc1,c
  3918  012EFE  0E42               	movlw	66
  3919  012F00  6EE6               	movwf	postinc1,c
  3920  012F02  0060  F3A4  F03A   	movff	_R+34,btemp+8	;volatile
  3921  012F08  0060  F3A8  F03B   	movff	_R+35,btemp+9	;volatile
  3922  012F0E  0E00               	movlw	0
  3923  012F10  BE3B               	btfsc	(btemp+9)^0,7,c
  3924  012F12  0EFF               	movlw	255
  3925  012F14  6E3C               	movwf	(btemp+10)^0,c
  3926  012F16  6E3D               	movwf	(btemp+11)^0,c
  3927  012F18  0060  F0EB  FFE6   	movff	btemp+8,postinc1
  3928  012F1E  0060  F0EF  FFE6   	movff	btemp+9,postinc1
  3929  012F24  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  3930  012F2A  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  3931  012F30  0E01               	movlw	1
  3932  012F32  6EE6               	movwf	postinc1,c
  3933  012F34  EC84  F0AB         	call	___xxtofl	;wreg free
  3934  012F38  0060  F0CB  FFE6   	movff	btemp,postinc1
  3935  012F3E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3936  012F44  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3937  012F4A  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3938                           
  3939                           ;stkvar	_chan @ sp[(-12)+-1]
  3940  012F50  0EF3               	movlw	-13
  3941  012F52  50E3               	movf	plusw1,w,c
  3942  012F54  6EE6               	movwf	postinc1,c
  3943  012F56  ECF8  F0C1         	call	_get_raw_result	;wreg free
  3944  012F5A  0060  F0C8  F03C   	movff	btemp,btemp+10
  3945  012F60  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  3946  012F66  503C               	movf	(btemp+10)^0,w,c
  3947  012F68  6E36               	movwf	(btemp+4)^0,c
  3948  012F6A  503D               	movf	(btemp+11)^0,w,c
  3949  012F6C  6E37               	movwf	(btemp+5)^0,c
  3950  012F6E  6A38               	clrf	(btemp+6)^0,c
  3951  012F70  6A39               	clrf	(btemp+7)^0,c
  3952  012F72  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  3953  012F78  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  3954  012F7E  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  3955  012F84  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  3956  012F8A  0E00               	movlw	0
  3957  012F8C  6EE6               	movwf	postinc1,c
  3958  012F8E  EC84  F0AB         	call	___xxtofl	;wreg free
  3959  012F92  0060  F0CB  FFE6   	movff	btemp,postinc1
  3960  012F98  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3961  012F9E  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3962  012FA4  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3963  012FAA  EC61  F0BD         	call	___flsub	;wreg free
  3964  012FAE  0060  F0CB  FFE6   	movff	btemp,postinc1
  3965  012FB4  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3966  012FBA  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3967  012FC0  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3968  012FC6  ECC1  F08E         	call	___flmul	;wreg free
  3969  012FCA  0060  F0CB  FFE6   	movff	btemp,postinc1
  3970  012FD0  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3971  012FD6  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3972  012FDC  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3973  012FE2  EC77  F099         	call	___fldiv	;wreg free
  3974  012FE6  D180               	goto	l1654
  3975  012FE8                     l11649:
  3976                           
  3977                           ;daq.c: 94:    if (0b0000100000000000 >> chan & 0x1) {
  3978                           ;stkvar	_chan @ sp[(0)+-1]
  3979  012FE8  0EFF               	movlw	-1
  3980  012FEA  006F FF8C  F03D    	movff	plusw1,btemp+11
  3981  012FF0  0E00               	movlw	0
  3982  012FF2  6E3A               	movwf	(btemp+8)^0,c
  3983  012FF4  0E08               	movlw	8
  3984  012FF6  6E3B               	movwf	(btemp+9)^0,c
  3985  012FF8  2A3D               	incf	(btemp+11)^0,f,c
  3986  012FFA  D003               	goto	u12424
  3987  012FFC                     u12425:
  3988  012FFC  343B               	rlcf	(btemp+9)^0,w,c
  3989  012FFE  323B               	rrcf	(btemp+9)^0,f,c
  3990  013000  323A               	rrcf	(btemp+8)^0,f,c
  3991  013002                     u12424:
  3992  013002  2E3D               	decfsz	(btemp+11)^0,f,c
  3993  013004  D7FB               	goto	u12425
  3994  013006  A03A               	btfss	(btemp+8)^0,0,c
  3995  013008  D008               	goto	l11657
  3996                           
  3997                           ;daq.c: 95:     return 25.0;
  3998  01300A  0E00               	movlw	0
  3999  01300C  6E32               	movwf	btemp^0,c
  4000  01300E  0E00               	movlw	0
  4001  013010  6E33               	movwf	(btemp+1)^0,c
  4002  013012  0EC8               	movlw	200
  4003  013014  6E34               	movwf	(btemp+2)^0,c
  4004  013016  0E41               	movlw	65
  4005  013018  D155               	goto	L3
  4006  01301A                     l11657:
  4007                           
  4008                           ;daq.c: 97:     return((float) get_raw_result(chan) * 8.250825/2.0) / 1000.0;
  4009  01301A  0E00               	movlw	0
  4010  01301C  6EE6               	movwf	postinc1,c
  4011  01301E  0E00               	movlw	0
  4012  013020  6EE6               	movwf	postinc1,c
  4013  013022  0E7A               	movlw	122
  4014  013024  6EE6               	movwf	postinc1,c
  4015  013026  0E44               	movlw	68
  4016  013028  6EE6               	movwf	postinc1,c
  4017  01302A  0E00               	movlw	0
  4018  01302C  6EE6               	movwf	postinc1,c
  4019  01302E  0E00               	movlw	0
  4020  013030  6EE6               	movwf	postinc1,c
  4021  013032  0E00               	movlw	0
  4022  013034  6EE6               	movwf	postinc1,c
  4023  013036  0E40               	movlw	64
  4024  013038  6EE6               	movwf	postinc1,c
  4025  01303A  0E61               	movlw	97
  4026  01303C  6EE6               	movwf	postinc1,c
  4027  01303E  0E03               	movlw	3
  4028  013040  6EE6               	movwf	postinc1,c
  4029  013042  0E04               	movlw	4
  4030  013044  6EE6               	movwf	postinc1,c
  4031  013046  0E41               	movlw	65
  4032  013048  6EE6               	movwf	postinc1,c
  4033                           
  4034                           ;stkvar	_chan @ sp[(-12)+-1]
  4035  01304A  0EF3               	movlw	-13
  4036  01304C  50E3               	movf	plusw1,w,c
  4037  01304E  6EE6               	movwf	postinc1,c
  4038  013050  ECF8  F0C1         	call	_get_raw_result	;wreg free
  4039  013054  0060  F0C8  F03C   	movff	btemp,btemp+10
  4040  01305A  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  4041  013060  503C               	movf	(btemp+10)^0,w,c
  4042  013062  6E36               	movwf	(btemp+4)^0,c
  4043  013064  503D               	movf	(btemp+11)^0,w,c
  4044  013066  6E37               	movwf	(btemp+5)^0,c
  4045  013068  6A38               	clrf	(btemp+6)^0,c
  4046  01306A  6A39               	clrf	(btemp+7)^0,c
  4047  01306C  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  4048  013072  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  4049  013078  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  4050  01307E  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  4051  013084  0E00               	movlw	0
  4052  013086  6EE6               	movwf	postinc1,c
  4053  013088  EC84  F0AB         	call	___xxtofl	;wreg free
  4054  01308C  0060  F0CB  FFE6   	movff	btemp,postinc1
  4055  013092  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4056  013098  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4057  01309E  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4058  0130A4  ECC1  F08E         	call	___flmul	;wreg free
  4059  0130A8  0060  F0CB  FFE6   	movff	btemp,postinc1
  4060  0130AE  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4061  0130B4  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4062  0130BA  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4063  0130C0  EC77  F099         	call	___fldiv	;wreg free
  4064  0130C4  0060  F0CB  FFE6   	movff	btemp,postinc1
  4065  0130CA  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4066  0130D0  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4067  0130D6  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4068  0130DC  EC77  F099         	call	___fldiv	;wreg free
  4069  0130E0  D103               	goto	l1654
  4070  0130E2                     l11661:
  4071                           
  4072                           ;daq.c: 102:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
  4073                           ;stkvar	_chan @ sp[(0)+-1]
  4074  0130E2  0EFF               	movlw	-1
  4075  0130E4  006F FF8C  F03D    	movff	plusw1,btemp+11
  4076  0130EA  0E03               	movlw	3
  4077  0130EC  6E3A               	movwf	(btemp+8)^0,c
  4078  0130EE  0E00               	movlw	0
  4079  0130F0  6E3B               	movwf	(btemp+9)^0,c
  4080  0130F2  2A3D               	incf	(btemp+11)^0,f,c
  4081  0130F4  D003               	goto	u12444
  4082  0130F6                     u12445:
  4083  0130F6  343B               	rlcf	(btemp+9)^0,w,c
  4084  0130F8  323B               	rrcf	(btemp+9)^0,f,c
  4085  0130FA  323A               	rrcf	(btemp+8)^0,f,c
  4086  0130FC                     u12444:
  4087  0130FC  2E3D               	decfsz	(btemp+11)^0,f,c
  4088  0130FE  D7FB               	goto	u12445
  4089  013100  B03A               	btfsc	(btemp+8)^0,0,c
  4090  013102  D011               	goto	u12470
  4091                           
  4092                           ;stkvar	_chan @ sp[(0)+-1]
  4093  013104  0EFF               	movlw	-1
  4094  013106  006F FF8C  F03D    	movff	plusw1,btemp+11
  4095  01310C  0E00               	movlw	0
  4096  01310E  6E3A               	movwf	(btemp+8)^0,c
  4097  013110  0E08               	movlw	8
  4098  013112  6E3B               	movwf	(btemp+9)^0,c
  4099  013114  2A3D               	incf	(btemp+11)^0,f,c
  4100  013116  D003               	goto	u12464
  4101  013118                     u12465:
  4102  013118  343B               	rlcf	(btemp+9)^0,w,c
  4103  01311A  323B               	rrcf	(btemp+9)^0,f,c
  4104  01311C  323A               	rrcf	(btemp+8)^0,f,c
  4105  01311E                     u12464:
  4106  01311E  2E3D               	decfsz	(btemp+11)^0,f,c
  4107  013120  D7FB               	goto	u12465
  4108  013122  A03A               	btfss	(btemp+8)^0,0,c
  4109  013124  D064               	goto	l11669
  4110  013126                     u12470:
  4111                           
  4112                           ;daq.c: 103:    return((float) get_raw_result(chan) * 1.25/2.0) / 1000.0;
  4113  013126  0E00               	movlw	0
  4114  013128  6EE6               	movwf	postinc1,c
  4115  01312A  0E00               	movlw	0
  4116  01312C  6EE6               	movwf	postinc1,c
  4117  01312E  0E7A               	movlw	122
  4118  013130  6EE6               	movwf	postinc1,c
  4119  013132  0E44               	movlw	68
  4120  013134  6EE6               	movwf	postinc1,c
  4121  013136  0E00               	movlw	0
  4122  013138  6EE6               	movwf	postinc1,c
  4123  01313A  0E00               	movlw	0
  4124  01313C  6EE6               	movwf	postinc1,c
  4125  01313E  0E00               	movlw	0
  4126  013140  6EE6               	movwf	postinc1,c
  4127  013142  0E40               	movlw	64
  4128  013144  6EE6               	movwf	postinc1,c
  4129  013146  0E00               	movlw	0
  4130  013148  6EE6               	movwf	postinc1,c
  4131  01314A  0E00               	movlw	0
  4132  01314C  6EE6               	movwf	postinc1,c
  4133  01314E  0EA0               	movlw	160
  4134  013150  6EE6               	movwf	postinc1,c
  4135  013152  0E3F               	movlw	63
  4136  013154  6EE6               	movwf	postinc1,c
  4137                           
  4138                           ;stkvar	_chan @ sp[(-12)+-1]
  4139  013156  0EF3               	movlw	-13
  4140  013158  50E3               	movf	plusw1,w,c
  4141  01315A  6EE6               	movwf	postinc1,c
  4142  01315C  ECF8  F0C1         	call	_get_raw_result	;wreg free
  4143  013160  0060  F0C8  F03C   	movff	btemp,btemp+10
  4144  013166  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  4145  01316C  503C               	movf	(btemp+10)^0,w,c
  4146  01316E  6E36               	movwf	(btemp+4)^0,c
  4147  013170  503D               	movf	(btemp+11)^0,w,c
  4148  013172  6E37               	movwf	(btemp+5)^0,c
  4149  013174  6A38               	clrf	(btemp+6)^0,c
  4150  013176  6A39               	clrf	(btemp+7)^0,c
  4151  013178  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  4152  01317E  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  4153  013184  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  4154  01318A  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  4155  013190  0E00               	movlw	0
  4156  013192  6EE6               	movwf	postinc1,c
  4157  013194  EC84  F0AB         	call	___xxtofl	;wreg free
  4158  013198  0060  F0CB  FFE6   	movff	btemp,postinc1
  4159  01319E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4160  0131A4  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4161  0131AA  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4162  0131B0  ECC1  F08E         	call	___flmul	;wreg free
  4163  0131B4  0060  F0CB  FFE6   	movff	btemp,postinc1
  4164  0131BA  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4165  0131C0  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4166  0131C6  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4167  0131CC  EC77  F099         	call	___fldiv	;wreg free
  4168  0131D0  0060  F0CB  FFE6   	movff	btemp,postinc1
  4169  0131D6  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4170  0131DC  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4171  0131E2  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4172  0131E8  EC77  F099         	call	___fldiv	;wreg free
  4173  0131EC  D07D               	goto	l1654
  4174  0131EE                     l11669:
  4175                           
  4176                           ;daq.c: 105:   return((float) get_raw_result(chan) * 8.250825/2.0) / 1000.0;
  4177  0131EE  0E00               	movlw	0
  4178  0131F0  6EE6               	movwf	postinc1,c
  4179  0131F2  0E00               	movlw	0
  4180  0131F4  6EE6               	movwf	postinc1,c
  4181  0131F6  0E7A               	movlw	122
  4182  0131F8  6EE6               	movwf	postinc1,c
  4183  0131FA  0E44               	movlw	68
  4184  0131FC  6EE6               	movwf	postinc1,c
  4185  0131FE  0E00               	movlw	0
  4186  013200  6EE6               	movwf	postinc1,c
  4187  013202  0E00               	movlw	0
  4188  013204  6EE6               	movwf	postinc1,c
  4189  013206  0E00               	movlw	0
  4190  013208  6EE6               	movwf	postinc1,c
  4191  01320A  0E40               	movlw	64
  4192  01320C  6EE6               	movwf	postinc1,c
  4193  01320E  0E61               	movlw	97
  4194  013210  6EE6               	movwf	postinc1,c
  4195  013212  0E03               	movlw	3
  4196  013214  6EE6               	movwf	postinc1,c
  4197  013216  0E04               	movlw	4
  4198  013218  6EE6               	movwf	postinc1,c
  4199  01321A  0E41               	movlw	65
  4200  01321C  6EE6               	movwf	postinc1,c
  4201                           
  4202                           ;stkvar	_chan @ sp[(-12)+-1]
  4203  01321E  0EF3               	movlw	-13
  4204  013220  50E3               	movf	plusw1,w,c
  4205  013222  6EE6               	movwf	postinc1,c
  4206  013224  ECF8  F0C1         	call	_get_raw_result	;wreg free
  4207  013228  0060  F0C8  F03C   	movff	btemp,btemp+10
  4208  01322E  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  4209  013234  503C               	movf	(btemp+10)^0,w,c
  4210  013236  6E36               	movwf	(btemp+4)^0,c
  4211  013238  503D               	movf	(btemp+11)^0,w,c
  4212  01323A  6E37               	movwf	(btemp+5)^0,c
  4213  01323C  6A38               	clrf	(btemp+6)^0,c
  4214  01323E  6A39               	clrf	(btemp+7)^0,c
  4215  013240  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  4216  013246  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  4217  01324C  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  4218  013252  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  4219  013258  0E00               	movlw	0
  4220  01325A  6EE6               	movwf	postinc1,c
  4221  01325C  EC84  F0AB         	call	___xxtofl	;wreg free
  4222  013260  0060  F0CB  FFE6   	movff	btemp,postinc1
  4223  013266  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4224  01326C  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4225  013272  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4226  013278  ECC1  F08E         	call	___flmul	;wreg free
  4227  01327C  0060  F0CB  FFE6   	movff	btemp,postinc1
  4228  013282  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4229  013288  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4230  01328E  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4231  013294  EC77  F099         	call	___fldiv	;wreg free
  4232  013298  0060  F0CB  FFE6   	movff	btemp,postinc1
  4233  01329E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4234  0132A4  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4235  0132AA  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4236  0132B0  EC77  F099         	call	___fldiv	;wreg free
  4237  0132B4  D019               	goto	l1654
  4238  0132B6                     l11675:
  4239                           
  4240                           ;daq.c: 108:   return 0.0;
  4241  0132B6  0E00               	movlw	0
  4242  0132B8  6E32               	movwf	btemp^0,c
  4243  0132BA  0E00               	movlw	0
  4244  0132BC  6E33               	movwf	(btemp+1)^0,c
  4245  0132BE  0E00               	movlw	0
  4246  0132C0  6E34               	movwf	(btemp+2)^0,c
  4247  0132C2  0E00               	movlw	0
  4248  0132C4                     L3:
  4249  0132C4  6E35               	movwf	(btemp+3)^0,c
  4250  0132C6  D010               	goto	l1654
  4251  0132C8                     l11683:
  4252                           
  4253                           ;stkvar	_to_what @ sp[(0)+-2]
  4254  0132C8  0EFE               	movlw	-2
  4255  0132CA  50E3               	movf	plusw1,w,c
  4256  0132CC  6E3C               	movwf	(btemp+10)^0,c
  4257  0132CE  6A3D               	clrf	(btemp+11)^0,c
  4258                           
  4259                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4260                           ; Switch size 1, requested type "simple"
  4261                           ; Number of cases is 1, Range of values is 0 to 0
  4262                           ; switch strategies available:
  4263                           ; Name         Instructions Cycles
  4264                           ; simple_byte            4     3 (average)
  4265                           ;	Chosen strategy is simple_byte
  4266  0132D0  503D               	movf	(btemp+11)^0,w,c
  4267  0132D2  0A00               	xorlw	0	; case 0
  4268  0132D4  A4D8               	btfss	status,2,c
  4269  0132D6  D7EF               	goto	l11675
  4270                           
  4271                           ; Switch size 1, requested type "simple"
  4272                           ; Number of cases is 2, Range of values is 0 to 1
  4273                           ; switch strategies available:
  4274                           ; Name         Instructions Cycles
  4275                           ; simple_byte            7     4 (average)
  4276                           ;	Chosen strategy is simple_byte
  4277  0132D8  503C               	movf	(btemp+10)^0,w,c
  4278  0132DA  0A00               	xorlw	0	; case 0
  4279  0132DC  B4D8               	btfsc	status,2,c
  4280  0132DE  D55C               	goto	l11635
  4281  0132E0  0A01               	xorlw	1	; case 1
  4282  0132E2  B4D8               	btfsc	status,2,c
  4283  0132E4  D6FE               	goto	l11661
  4284  0132E6  D7E7               	goto	l11675
  4285  0132E8                     l1654:
  4286                           
  4287                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  4288  0132E8  52E5               	movf	postdec1,f,c
  4289  0132EA  52E5               	movf	postdec1,f,c
  4290  0132EC  0012               	return		;funcret
  4291  0132EE                     __end_of_conv_raw_result:
  4292                           	opt callstack 0
  4293                           
  4294 ;; *************** function _nanf *****************
  4295 ;; Defined at:
  4296 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
  4297 ;; Parameters:    Size  Location     Type
  4298 ;;  s               2  [STACK] PTR const unsigned char 
  4299 ;;		 -> STR_33(1), 
  4300 ;; Auto vars:     Size  Location     Type
  4301 ;;  u               4  [STACK] struct .
  4302 ;; Return value:  Size  Location     Type
  4303 ;;                  4  [STACK] float 
  4304 ;; Registers used:
  4305 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
  4306 ;; Tracked objects:
  4307 ;;		On entry : 0/39
  4308 ;;		On exit  : 0/0
  4309 ;;		Unchanged: 0/0
  4310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4315 ;;Total ram usage:        0 bytes
  4316 ;; Hardware stack levels used:    1
  4317 ;; Hardware stack levels required when called:    6
  4318 ;; This function calls:
  4319 ;;		Nothing
  4320 ;; This function is called by:
  4321 ;;		_conv_raw_result
  4322 ;; This function uses a reentrant model
  4323 ;;
  4324                           
  4325                           	psect	text16
  4326  0177A6                     __ptext16:
  4327                           	opt callstack 0
  4328  0177A6                     _nanf:
  4329                           	opt callstack 0
  4330                           
  4331                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4332  0177A6  52E6               	movf	postinc1,f,c
  4333  0177A8  52E6               	movf	postinc1,f,c
  4334  0177AA  52E6               	movf	postinc1,f,c
  4335  0177AC  52E6               	movf	postinc1,f,c
  4336                           
  4337                           ;incstack = 0
  4338  0177AE  0EFF               	movlw	255
  4339  0177B0  6E3A               	movwf	(btemp+8)^0,c
  4340  0177B2  0EFF               	movlw	255
  4341  0177B4  6E3B               	movwf	(btemp+9)^0,c
  4342  0177B6  0EFF               	movlw	255
  4343  0177B8  6E3C               	movwf	(btemp+10)^0,c
  4344  0177BA  0E7F               	movlw	127
  4345  0177BC  6E3D               	movwf	(btemp+11)^0,c
  4346                           
  4347                           ;stkvar	_u @ sp[(-4)+0]
  4348  0177BE  0EFC               	movlw	-4
  4349  0177C0  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  4350  0177C6  0EFD               	movlw	-3
  4351  0177C8  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  4352  0177CE  0EFE               	movlw	-2
  4353  0177D0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  4354  0177D6  0EFF               	movlw	-1
  4355  0177D8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  4356                           
  4357                           ;stkvar	_u @ sp[(-4)+0]
  4358  0177DE  0EFC               	movlw	-4
  4359  0177E0  006F FF8C  F032    	movff	plusw1,btemp
  4360  0177E6  0EFD               	movlw	-3
  4361  0177E8  006F FF8C  F033    	movff	plusw1,btemp+1
  4362  0177EE  0EFE               	movlw	-2
  4363  0177F0  006F FF8C  F034    	movff	plusw1,btemp+2
  4364  0177F6  0EFF               	movlw	-1
  4365  0177F8  006F FF8C  F035    	movff	plusw1,btemp+3
  4366                           
  4367                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
  4368  0177FE  0EFA               	movlw	250
  4369  017800  26E1               	addwf	fsr1l,f,c
  4370  017802  0EFF               	movlw	255
  4371  017804  22E2               	addwfc	fsr1h,f,c
  4372  017806  0012               	return		;funcret
  4373  017808                     __end_of_nanf:
  4374                           	opt callstack 0
  4375                           
  4376 ;; *************** function _get_raw_result *****************
  4377 ;; Defined at:
  4378 ;;		line 72 in file "daq.c"
  4379 ;; Parameters:    Size  Location     Type
  4380 ;;  index           1  [STACK] const enum E16136
  4381 ;; Auto vars:     Size  Location     Type
  4382 ;;		None
  4383 ;; Return value:  Size  Location     Type
  4384 ;;                  2  [STACK] unsigned short 
  4385 ;; Registers used:
  4386 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
  4387 ;; Tracked objects:
  4388 ;;		On entry : 0/39
  4389 ;;		On exit  : 0/0
  4390 ;;		Unchanged: 0/0
  4391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4395 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4396 ;;Total ram usage:        0 bytes
  4397 ;; Hardware stack levels used:    1
  4398 ;; Hardware stack levels required when called:    6
  4399 ;; This function calls:
  4400 ;;		Nothing
  4401 ;; This function is called by:
  4402 ;;		_main
  4403 ;;		_conv_raw_result
  4404 ;; This function uses a reentrant model
  4405 ;;
  4406                           
  4407                           	psect	text17
  4408  0183F0                     __ptext17:
  4409                           	opt callstack 0
  4410  0183F0                     _get_raw_result:
  4411                           	opt callstack 24
  4412                           
  4413                           ;daq.c: 72: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 73: {;daq.c: 
      +                          74:  return R.raw_adc[index];
  4414                           ;stkvar	_index @ sp[(0)+-1]
  4415                           
  4416                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4417                           ;incstack = 0
  4418  0183F0  0EFF               	movlw	-1
  4419  0183F2  50E3               	movf	plusw1,w,c
  4420  0183F4  0D02               	mullw	2
  4421  0183F6  50F3               	movf	243,w,c
  4422  0183F8  0FC7               	addlw	low _R
  4423  0183FA  6ED9               	movwf	fsr2l,c
  4424  0183FC  6ADA               	clrf	fsr2h,c
  4425  0183FE  006F FF78  F032    	movff	postinc2,btemp
  4426  018404  006F FF74  F033    	movff	postdec2,btemp+1
  4427                           
  4428                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
  4429  01840A  52E5               	movf	postdec1,f,c
  4430  01840C  0012               	return		;funcret
  4431  01840E                     __end_of_get_raw_result:
  4432                           	opt callstack 0
  4433                           
  4434 ;; *************** function ___xxtofl *****************
  4435 ;; Defined at:
  4436 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
  4437 ;; Parameters:    Size  Location     Type
  4438 ;;  sign            1  [STACK] unsigned char 
  4439 ;;  val             4  [STACK] long 
  4440 ;; Auto vars:     Size  Location     Type
  4441 ;;  arg             4  [STACK] unsigned long 
  4442 ;;  exp             1  [STACK] unsigned char 
  4443 ;; Return value:  Size  Location     Type
  4444 ;;                  4  [STACK] unsigned char 
  4445 ;; Registers used:
  4446 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
  4447 ;; Tracked objects:
  4448 ;;		On entry : 0/39
  4449 ;;		On exit  : 0/0
  4450 ;;		Unchanged: 0/0
  4451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4456 ;;Total ram usage:        0 bytes
  4457 ;; Hardware stack levels used:    1
  4458 ;; Hardware stack levels required when called:    6
  4459 ;; This function calls:
  4460 ;;		Nothing
  4461 ;; This function is called by:
  4462 ;;		_conv_raw_result
  4463 ;; This function uses a reentrant model
  4464 ;;
  4465                           
  4466                           	psect	text18
  4467  015708                     __ptext18:
  4468                           	opt callstack 0
  4469  015708                     ___xxtofl:
  4470                           	opt callstack 0
  4471                           
  4472                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4473  015708  0E05               	movlw	5
  4474  01570A  26E1               	addwf	fsr1l,f,c
  4475  01570C  0E00               	movlw	0
  4476  01570E  22E2               	addwfc	fsr1h,f,c
  4477                           
  4478                           ;stkvar	_sign @ sp[(-5)+-1]
  4479                           
  4480                           ;incstack = 0
  4481  015710  0EFA               	movlw	-6
  4482  015712  50E3               	movf	plusw1,w,c
  4483  015714  B4D8               	btfsc	status,2,c
  4484  015716  D01D               	goto	l11127
  4485                           
  4486                           ;stkvar	_val @ sp[(-5)+-5]
  4487  015718  0EF9               	movlw	-7
  4488  01571A  AEE3               	btfss	plusw1,7,c
  4489  01571C  D01A               	goto	l11127
  4490                           
  4491                           ;stkvar	_val @ sp[(-5)+-5]
  4492  01571E  0EF6               	movlw	-10
  4493  015720  006F FF8C  F03A    	movff	plusw1,btemp+8
  4494  015726  0EF7               	movlw	-9
  4495  015728  006F FF8C  F03B    	movff	plusw1,btemp+9
  4496  01572E  0EF8               	movlw	-8
  4497  015730  006F FF8C  F03C    	movff	plusw1,btemp+10
  4498  015736  0EF9               	movlw	-7
  4499  015738  006F FF8C  F03D    	movff	plusw1,btemp+11
  4500  01573E  1E3A               	comf	(btemp+8)^0,f,c
  4501  015740  1E3B               	comf	(btemp+9)^0,f,c
  4502  015742  1E3C               	comf	(btemp+10)^0,f,c
  4503  015744  1E3D               	comf	(btemp+11)^0,f,c
  4504  015746  2A3A               	incf	(btemp+8)^0,f,c
  4505  015748  0E00               	movlw	0
  4506  01574A  223B               	addwfc	(btemp+9)^0,f,c
  4507  01574C  223C               	addwfc	(btemp+10)^0,f,c
  4508  01574E  223D               	addwfc	(btemp+11)^0,f,c
  4509  015750  D010               	goto	L4
  4510  015752                     l11127:
  4511                           
  4512                           ;stkvar	_val @ sp[(-5)+-5]
  4513  015752  0EF6               	movlw	-10
  4514  015754  006F FF8C  F03A    	movff	plusw1,btemp+8
  4515  01575A  0EF7               	movlw	-9
  4516  01575C  006F FF8C  F03B    	movff	plusw1,btemp+9
  4517  015762  0EF8               	movlw	-8
  4518  015764  006F FF8C  F03C    	movff	plusw1,btemp+10
  4519  01576A  0EF9               	movlw	-7
  4520  01576C  006F FF8C  F03D    	movff	plusw1,btemp+11
  4521  015772                     L4:
  4522                           
  4523                           ;stkvar	_arg @ sp[(-5)+0]
  4524  015772  0EFB               	movlw	-5
  4525  015774  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  4526  01577A  0EFC               	movlw	-4
  4527  01577C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  4528  015782  0EFD               	movlw	-3
  4529  015784  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  4530  01578A  0EFE               	movlw	-2
  4531  01578C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  4532                           
  4533                           ;stkvar	_val @ sp[(-5)+-5]
  4534  015792  0EF6               	movlw	-10
  4535  015794  50E3               	movf	plusw1,w,c
  4536  015796  E113               	bnz	l11135
  4537  015798  0EF7               	movlw	-9
  4538  01579A  50E3               	movf	plusw1,w,c
  4539  01579C  E110               	bnz	l11135
  4540  01579E  0EF8               	movlw	-8
  4541  0157A0  50E3               	movf	plusw1,w,c
  4542  0157A2  E10D               	bnz	l11135
  4543  0157A4  0EF9               	movlw	-7
  4544  0157A6  50E3               	movf	plusw1,w,c
  4545  0157A8  A4D8               	btfss	status,2,c
  4546  0157AA  D009               	goto	l11135
  4547  0157AC  0E00               	movlw	0
  4548  0157AE  6E32               	movwf	btemp^0,c
  4549  0157B0  0E00               	movlw	0
  4550  0157B2  6E33               	movwf	(btemp+1)^0,c
  4551  0157B4  0E00               	movlw	0
  4552  0157B6  6E34               	movwf	(btemp+2)^0,c
  4553  0157B8  0E00               	movlw	0
  4554  0157BA  6E35               	movwf	(btemp+3)^0,c
  4555  0157BC  D0A2               	goto	l2700
  4556  0157BE                     l11135:
  4557  0157BE  0E96               	movlw	150
  4558  0157C0  6E3D               	movwf	(btemp+11)^0,c
  4559                           
  4560                           ;stkvar	_exp @ sp[(-5)+4]
  4561  0157C2  0EFF               	movlw	-1
  4562  0157C4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  4563  0157CA  D00B               	goto	l11139
  4564  0157CC                     l11137:
  4565                           
  4566                           ;stkvar	_exp @ sp[(-5)+4]
  4567  0157CC  0EFF               	movlw	-1
  4568  0157CE  2AE3               	incf	plusw1,f,c
  4569                           
  4570                           ;stkvar	_arg @ sp[(-5)+0]
  4571  0157D0  90D8               	bcf	status,0,c
  4572  0157D2  0EFE               	movlw	-2
  4573  0157D4  32E3               	rrcf	plusw1,f,c
  4574  0157D6  0EFD               	movlw	-3
  4575  0157D8  32E3               	rrcf	plusw1,f,c
  4576  0157DA  0EFC               	movlw	-4
  4577  0157DC  32E3               	rrcf	plusw1,f,c
  4578  0157DE  0EFB               	movlw	-5
  4579  0157E0  32E3               	rrcf	plusw1,f,c
  4580  0157E2                     l11139:
  4581                           
  4582                           ;stkvar	_arg @ sp[(-5)+0]
  4583  0157E2  50E1               	movf	fsr1l,w,c
  4584  0157E4  0FFB               	addlw	-5
  4585  0157E6  6ED9               	movwf	fsr2l,c
  4586  0157E8  50E2               	movf	fsr1h,w,c
  4587  0157EA  6EDA               	movwf	fsr2h,c
  4588  0157EC  0EFF               	movlw	255
  4589  0157EE  22DA               	addwfc	fsr2h,f,c
  4590  0157F0  52DE               	movf	postinc2,f,c
  4591  0157F2  52DE               	movf	postinc2,f,c
  4592  0157F4  52DE               	movf	postinc2,f,c
  4593  0157F6  0EFE               	movlw	254
  4594  0157F8  14DD               	andwf	postdec2,w,c
  4595  0157FA  B4D8               	btfsc	status,2,c
  4596  0157FC  D018               	goto	l11147
  4597  0157FE  D7E6               	goto	l11137
  4598  015800                     l11141:
  4599                           
  4600                           ;stkvar	_exp @ sp[(-5)+4]
  4601  015800  0EFF               	movlw	-1
  4602  015802  2AE3               	incf	plusw1,f,c
  4603                           
  4604                           ;stkvar	_arg @ sp[(-5)+0]
  4605  015804  50E1               	movf	fsr1l,w,c
  4606  015806  0FFB               	addlw	-5
  4607  015808  6ED9               	movwf	fsr2l,c
  4608  01580A  50E2               	movf	fsr1h,w,c
  4609  01580C  6EDA               	movwf	fsr2h,c
  4610  01580E  0EFF               	movlw	255
  4611  015810  22DA               	addwfc	fsr2h,f,c
  4612  015812  2ADE               	incf	postinc2,f,c
  4613  015814  0E00               	movlw	0
  4614  015816  22DE               	addwfc	postinc2,f,c
  4615  015818  22DE               	addwfc	postinc2,f,c
  4616  01581A  22DE               	addwfc	postinc2,f,c
  4617                           
  4618                           ;stkvar	_arg @ sp[(-5)+0]
  4619  01581C  90D8               	bcf	status,0,c
  4620  01581E  0EFE               	movlw	-2
  4621  015820  32E3               	rrcf	plusw1,f,c
  4622  015822  0EFD               	movlw	-3
  4623  015824  32E3               	rrcf	plusw1,f,c
  4624  015826  0EFC               	movlw	-4
  4625  015828  32E3               	rrcf	plusw1,f,c
  4626  01582A  0EFB               	movlw	-5
  4627  01582C  32E3               	rrcf	plusw1,f,c
  4628  01582E                     l11147:
  4629                           
  4630                           ;stkvar	_arg @ sp[(-5)+0]
  4631  01582E  50E1               	movf	fsr1l,w,c
  4632  015830  0FFB               	addlw	-5
  4633  015832  6ED9               	movwf	fsr2l,c
  4634  015834  50E2               	movf	fsr1h,w,c
  4635  015836  6EDA               	movwf	fsr2h,c
  4636  015838  0EFF               	movlw	255
  4637  01583A  22DA               	addwfc	fsr2h,f,c
  4638  01583C  52DE               	movf	postinc2,f,c
  4639  01583E  52DE               	movf	postinc2,f,c
  4640  015840  52DE               	movf	postinc2,f,c
  4641  015842  0EFF               	movlw	255
  4642  015844  14DD               	andwf	postdec2,w,c
  4643  015846  B4D8               	btfsc	status,2,c
  4644  015848  D00C               	goto	l11151
  4645  01584A  D7DA               	goto	l11141
  4646  01584C                     l11149:
  4647                           
  4648                           ;stkvar	_exp @ sp[(-5)+4]
  4649  01584C  0EFF               	movlw	-1
  4650  01584E  06E3               	decf	plusw1,f,c
  4651                           
  4652                           ;stkvar	_arg @ sp[(-5)+0]
  4653  015850  90D8               	bcf	status,0,c
  4654  015852  0EFB               	movlw	-5
  4655  015854  36E3               	rlcf	plusw1,f,c
  4656  015856  0EFC               	movlw	-4
  4657  015858  36E3               	rlcf	plusw1,f,c
  4658  01585A  0EFD               	movlw	-3
  4659  01585C  36E3               	rlcf	plusw1,f,c
  4660  01585E  0EFE               	movlw	-2
  4661  015860  36E3               	rlcf	plusw1,f,c
  4662  015862                     l11151:
  4663                           
  4664                           ;stkvar	_arg @ sp[(-5)+0]
  4665  015862  0EFD               	movlw	-3
  4666  015864  BEE3               	btfsc	plusw1,7,c
  4667  015866  D007               	goto	u12220
  4668                           
  4669                           ;stkvar	_exp @ sp[(-5)+4]
  4670  015868  0EFF               	movlw	-1
  4671  01586A  006F FF8C  F032    	movff	plusw1,btemp
  4672  015870  0E02               	movlw	2
  4673  015872  6032               	cpfslt	btemp^0,c
  4674  015874  D7EB               	goto	l11149
  4675  015876                     u12220:
  4676                           
  4677                           ;stkvar	_exp @ sp[(-5)+4]
  4678  015876  0EFF               	movlw	-1
  4679  015878  B0E3               	btfsc	plusw1,0,c
  4680  01587A  D002               	goto	l11159
  4681                           
  4682                           ;stkvar	_arg @ sp[(-5)+0]
  4683  01587C  0EFD               	movlw	-3
  4684  01587E  9EE3               	bcf	plusw1,7,c
  4685  015880                     l11159:
  4686                           
  4687                           ;stkvar	_exp @ sp[(-5)+4]
  4688  015880  50E1               	movf	fsr1l,w,c
  4689  015882  0FFF               	addlw	-1
  4690  015884  6ED9               	movwf	fsr2l,c
  4691  015886  50E2               	movf	fsr1h,w,c
  4692  015888  6EDA               	movwf	fsr2h,c
  4693  01588A  0EFF               	movlw	255
  4694  01588C  22DA               	addwfc	fsr2h,f,c
  4695  01588E  90D8               	bcf	status,0,c
  4696  015890  32DF               	rrcf	indf2,f,c
  4697                           
  4698                           ;stkvar	_exp @ sp[(-5)+4]
  4699  015892  0EFF               	movlw	-1
  4700  015894  006F FF8C  F03D    	movff	plusw1,btemp+11
  4701  01589A  0060  F0F4  F036   	movff	btemp+11,btemp+4
  4702  0158A0  6A37               	clrf	(btemp+5)^0,c
  4703  0158A2  6A38               	clrf	(btemp+6)^0,c
  4704  0158A4  6A39               	clrf	(btemp+7)^0,c
  4705  0158A6  0060  F0D8  F039   	movff	btemp+4,btemp+7
  4706  0158AC  6A38               	clrf	(btemp+6)^0,c
  4707  0158AE  6A37               	clrf	(btemp+5)^0,c
  4708  0158B0  6A36               	clrf	(btemp+4)^0,c
  4709                           
  4710                           ;stkvar	_arg @ sp[(-5)+0]
  4711  0158B2  50E1               	movf	fsr1l,w,c
  4712  0158B4  0FFB               	addlw	-5
  4713  0158B6  6ED9               	movwf	fsr2l,c
  4714  0158B8  50E2               	movf	fsr1h,w,c
  4715  0158BA  6EDA               	movwf	fsr2h,c
  4716  0158BC  0EFF               	movlw	255
  4717  0158BE  22DA               	addwfc	fsr2h,f,c
  4718  0158C0  5036               	movf	(btemp+4)^0,w,c
  4719  0158C2  12DE               	iorwf	postinc2,f,c
  4720  0158C4  5037               	movf	(btemp+5)^0,w,c
  4721  0158C6  12DE               	iorwf	postinc2,f,c
  4722  0158C8  5038               	movf	(btemp+6)^0,w,c
  4723  0158CA  12DE               	iorwf	postinc2,f,c
  4724  0158CC  5039               	movf	(btemp+7)^0,w,c
  4725  0158CE  12DE               	iorwf	postinc2,f,c
  4726                           
  4727                           ;stkvar	_sign @ sp[(-5)+-1]
  4728  0158D0  0EFA               	movlw	-6
  4729  0158D2  50E3               	movf	plusw1,w,c
  4730  0158D4  B4D8               	btfsc	status,2,c
  4731  0158D6  D005               	goto	l11169
  4732                           
  4733                           ;stkvar	_val @ sp[(-5)+-5]
  4734  0158D8  0EF9               	movlw	-7
  4735  0158DA  AEE3               	btfss	plusw1,7,c
  4736  0158DC  D002               	goto	l11169
  4737                           
  4738                           ;stkvar	_arg @ sp[(-5)+0]
  4739  0158DE  0EFE               	movlw	-2
  4740  0158E0  8EE3               	bsf	plusw1,7,c
  4741  0158E2                     l11169:
  4742                           
  4743                           ;stkvar	_arg @ sp[(-5)+0]
  4744  0158E2  0EFB               	movlw	-5
  4745  0158E4  006F FF8C  F032    	movff	plusw1,btemp
  4746  0158EA  0EFC               	movlw	-4
  4747  0158EC  006F FF8C  F033    	movff	plusw1,btemp+1
  4748  0158F2  0EFD               	movlw	-3
  4749  0158F4  006F FF8C  F034    	movff	plusw1,btemp+2
  4750  0158FA  0EFE               	movlw	-2
  4751  0158FC  006F FF8C  F035    	movff	plusw1,btemp+3
  4752  015902                     l2700:
  4753                           
  4754                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
  4755  015902  0EF6               	movlw	246
  4756  015904  26E1               	addwf	fsr1l,f,c
  4757  015906  0EFF               	movlw	255
  4758  015908  22E2               	addwfc	fsr1h,f,c
  4759  01590A  0012               	return		;funcret
  4760  01590C                     __end_of___xxtofl:
  4761                           	opt callstack 0
  4762                           
  4763 ;; *************** function _clear_adc_scan *****************
  4764 ;; Defined at:
  4765 ;;		line 64 in file "daq.c"
  4766 ;; Parameters:    Size  Location     Type
  4767 ;;		None
  4768 ;; Auto vars:     Size  Location     Type
  4769 ;;		None
  4770 ;; Return value:  Size  Location     Type
  4771 ;;                  1  [STACK] void 
  4772 ;; Registers used:
  4773 ;;		None
  4774 ;; Tracked objects:
  4775 ;;		On entry : 0/39
  4776 ;;		On exit  : 3F/0
  4777 ;;		Unchanged: 0/0
  4778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4783 ;;Total ram usage:        0 bytes
  4784 ;; Hardware stack levels used:    1
  4785 ;; Hardware stack levels required when called:    6
  4786 ;; This function calls:
  4787 ;;		Nothing
  4788 ;; This function is called by:
  4789 ;;		_main
  4790 ;; This function uses a reentrant model
  4791 ;;
  4792                           
  4793                           	psect	text19
  4794  018626                     __ptext19:
  4795                           	opt callstack 0
  4796  018626                     _clear_adc_scan:
  4797                           	opt callstack 24
  4798                           
  4799                           ;daq.c: 66:  R.done = 0;
  4800                           
  4801                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4802                           ;incstack = 0
  4803  018626  0100               	movlb	0	; () banked
  4804  018628  6BEE               	clrf	(_R+39)& (0+255),b	;volatile
  4805                           
  4806                           ; BSR set to: 0
  4807                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  4808  01862A  0012               	return		;funcret
  4809  01862C                     __end_of_clear_adc_scan:
  4810                           	opt callstack 0
  4811                           
  4812 ;; *************** function _check_switches *****************
  4813 ;; Defined at:
  4814 ;;		line 41 in file "dio.c"
  4815 ;; Parameters:    Size  Location     Type
  4816 ;;		None
  4817 ;; Auto vars:     Size  Location     Type
  4818 ;;		None
  4819 ;; Return value:  Size  Location     Type
  4820 ;;                  1  [STACK] unsigned char 
  4821 ;; Registers used:
  4822 ;;		btemp
  4823 ;; Tracked objects:
  4824 ;;		On entry : 0/39
  4825 ;;		On exit  : 0/0
  4826 ;;		Unchanged: 0/0
  4827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4832 ;;Total ram usage:        0 bytes
  4833 ;; Hardware stack levels used:    1
  4834 ;; Hardware stack levels required when called:    6
  4835 ;; This function calls:
  4836 ;;		Nothing
  4837 ;; This function is called by:
  4838 ;;		_main
  4839 ;; This function uses a reentrant model
  4840 ;;
  4841                           
  4842                           	psect	text20
  4843  0185FE                     __ptext20:
  4844                           	opt callstack 0
  4845  0185FE                     _check_switches:
  4846                           	opt callstack 24
  4847                           
  4848                           ;dio.c: 43:  return S.sw_bitmap;
  4849                           
  4850                           ; BSR set to: 0
  4851                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4852                           ;incstack = 0
  4853  0185FE  0060  F220  F032   	movff	_S+40,btemp	;volatile
  4854                           
  4855                           ; _check_switches: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  4856  018604  0012               	return		;funcret
  4857  018606                     __end_of_check_switches:
  4858                           	opt callstack 0
  4859                           
  4860 ;; *************** function _check_help *****************
  4861 ;; Defined at:
  4862 ;;		line 40 in file "mconfig.c"
  4863 ;; Parameters:    Size  Location     Type
  4864 ;;  flipper         1  [STACK] const _Bool 
  4865 ;; Auto vars:     Size  Location     Type
  4866 ;;		None
  4867 ;; Return value:  Size  Location     Type
  4868 ;;                  1  [STACK] void 
  4869 ;; Registers used:
  4870 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  4871 ;; Tracked objects:
  4872 ;;		On entry : 3F/1
  4873 ;;		On exit  : 0/0
  4874 ;;		Unchanged: 0/0
  4875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4880 ;;Total ram usage:        0 bytes
  4881 ;; Hardware stack levels used:    1
  4882 ;; Hardware stack levels required when called:   18
  4883 ;; This function calls:
  4884 ;;		_StartTimer
  4885 ;;		_TimerDone
  4886 ;;		_display_help
  4887 ;;		_display_info
  4888 ;;		_get_vterm_ptr
  4889 ;;		_help_button
  4890 ;;		_mode_lamp_bright
  4891 ;;		_mode_lamp_dim
  4892 ;;		_set_display_info
  4893 ;;		_set_temp_display_help
  4894 ;;		_set_vterm
  4895 ;;		_sprintf
  4896 ;;		_update_lcd
  4897 ;;		_vterm_dump
  4898 ;; This function is called by:
  4899 ;;		_main
  4900 ;; This function uses a reentrant model
  4901 ;;
  4902                           
  4903                           	psect	text21
  4904  0154F6                     __ptext21:
  4905                           	opt callstack 0
  4906  0154F6                     _check_help:
  4907                           	opt callstack 12
  4908                           
  4909                           ;mconfig.c: 40: void check_help(const _Bool flipper);mconfig.c: 41: {;mconfig.c: 45:  if
      +                           (help_button() && display_info() != DIS_HELP) {
  4910                           
  4911                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4912                           ;incstack = 0
  4913  0154F6  ECB1  F0BE         	call	_help_button	;wreg free
  4914  0154FA  5032               	movf	btemp^0,w,c
  4915  0154FC  B4D8               	btfsc	status,2,c
  4916  0154FE  D0D0               	goto	l11897
  4917  015500  EC03  F0C3         	call	_display_info	;wreg free
  4918  015504  0432               	decf	btemp^0,w,c
  4919  015506  B4D8               	btfsc	status,2,c
  4920  015508  D0CB               	goto	l11897
  4921                           
  4922                           ;mconfig.c: 46:   StartTimer(TMR_FLIPPER, 1500);
  4923  01550A  0EDC               	movlw	220
  4924  01550C  6EE6               	movwf	postinc1,c
  4925  01550E  0E05               	movlw	5
  4926  015510  6EE6               	movwf	postinc1,c
  4927  015512  0E0B               	movlw	11
  4928  015514  6EE6               	movwf	postinc1,c
  4929  015516  EC93  F0BE         	call	_StartTimer	;wreg free
  4930                           
  4931                           ;mconfig.c: 47:   if (V.debug)
  4932  01551A  0101               	movlb	1	; () banked
  4933  01551C  B39B               	btfsc	(_V+155)& (0+255),1,b	;volatile
  4934                           
  4935                           ; BSR set to: 1
  4936                           ;mconfig.c: 48:    vterm_dump();
  4937  01551E  ECCA  F0B1         	call	_vterm_dump	;wreg free
  4938                           
  4939                           ;mconfig.c: 50:   set_vterm(1);
  4940  015522  0E01               	movlw	1
  4941  015524  6EE6               	movwf	postinc1,c
  4942  015526  EC42  F0C2         	call	_set_vterm	;wreg free
  4943                           
  4944                           ; BSR set to: 5
  4945                           ;mconfig.c: 51:   set_temp_display_help(display_info());
  4946  01552A  EC03  F0C3         	call	_display_info	;wreg free
  4947  01552E  5032               	movf	btemp^0,w,c
  4948  015530  6EE6               	movwf	postinc1,c
  4949  015532  ECBF  F0C2         	call	_set_temp_display_help	;wreg free
  4950                           
  4951                           ; BSR set to: 1
  4952                           ;mconfig.c: 52:   set_display_info(DIS_HELP);
  4953  015536  0E01               	movlw	1
  4954  015538  6EE6               	movwf	postinc1,c
  4955  01553A  EC07  F0C2         	call	_set_display_info	;wreg free
  4956                           
  4957                           ;mconfig.c: 53:   if (flipper) {
  4958                           ;stkvar	_flipper @ sp[(0)+-1]
  4959  01553E  0EFF               	movlw	-1
  4960  015540  50E3               	movf	plusw1,w,c
  4961  015542  B4D8               	btfsc	status,2,c
  4962  015544  D019               	goto	l11885
  4963                           
  4964                           ;mconfig.c: 54:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  4965  015546  0EC1               	movlw	low STR_15
  4966  015548  6EE6               	movwf	postinc1,c
  4967  01554A  0EFF               	movlw	high STR_15
  4968  01554C  6EE6               	movwf	postinc1,c
  4969  01554E  0E1A               	movlw	low STR_17
  4970  015550  6EE6               	movwf	postinc1,c
  4971  015552  0EFF               	movlw	high STR_17
  4972  015554  6EE6               	movwf	postinc1,c
  4973  015556  0E01               	movlw	1
  4974  015558  6EE6               	movwf	postinc1,c
  4975  01555A  0E00               	movlw	0
  4976  01555C  6EE6               	movwf	postinc1,c
  4977  01555E  EC97  F0BF         	call	_get_vterm_ptr	;wreg free
  4978  015562  0060  F0CB  FFE6   	movff	btemp,postinc1
  4979  015568  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4980  01556E  0E06               	movlw	6
  4981  015570  6EE6               	movwf	postinc1,c
  4982  015572  EC90  F0B4         	call	_sprintf	;wreg free
  4983                           
  4984                           ;mconfig.c: 55:   } else {
  4985  015576  D018               	goto	l1560
  4986  015578                     l11885:
  4987                           
  4988                           ;mconfig.c: 56:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  4989  015578  0ED7               	movlw	low STR_16
  4990  01557A  6EE6               	movwf	postinc1,c
  4991  01557C  0EFF               	movlw	high STR_16
  4992  01557E  6EE6               	movwf	postinc1,c
  4993  015580  0E1A               	movlw	low STR_17
  4994  015582  6EE6               	movwf	postinc1,c
  4995  015584  0EFF               	movlw	high STR_17
  4996  015586  6EE6               	movwf	postinc1,c
  4997  015588  0E01               	movlw	1
  4998  01558A  6EE6               	movwf	postinc1,c
  4999  01558C  0E00               	movlw	0
  5000  01558E  6EE6               	movwf	postinc1,c
  5001  015590  EC97  F0BF         	call	_get_vterm_ptr	;wreg free
  5002  015594  0060  F0CB  FFE6   	movff	btemp,postinc1
  5003  01559A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5004  0155A0  0E06               	movlw	6
  5005  0155A2  6EE6               	movwf	postinc1,c
  5006  0155A4  EC90  F0B4         	call	_sprintf	;wreg free
  5007  0155A8                     l1560:
  5008                           
  5009                           ;mconfig.c: 58:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  5010  0155A8  0101               	movlb	1	; () banked
  5011  0155AA  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  5012  0155AC  32E8               	rrcf	wreg,f,c
  5013  0155AE  32E8               	rrcf	wreg,f,c
  5014  0155B0  0B03               	andlw	3
  5015  0155B2  0D24               	mullw	36
  5016  0155B4  0E12               	movlw	18
  5017  0155B6  26F3               	addwf	243,f,c
  5018  0155B8  0E00               	movlw	0
  5019  0155BA  22F4               	addwfc	244,f,c
  5020  0155BC  0E5F               	movlw	low _T
  5021  0155BE  6E3C               	movwf	(btemp+10)^0,c
  5022  0155C0  0EFE               	movlw	high _T
  5023  0155C2  6E3D               	movwf	(btemp+11)^0,c
  5024  0155C4  50F3               	movf	243,w,c
  5025  0155C6  263C               	addwf	(btemp+10)^0,f,c
  5026  0155C8  50F4               	movf	244,w,c
  5027  0155CA  223D               	addwfc	(btemp+11)^0,f,c
  5028  0155CC  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  5029  0155D2  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  5030  0155D8  0ECD               	movlw	low STR_19
  5031  0155DA  6EE6               	movwf	postinc1,c
  5032  0155DC  0EFF               	movlw	high STR_19
  5033  0155DE  6EE6               	movwf	postinc1,c
  5034  0155E0  0E01               	movlw	1
  5035  0155E2  6EE6               	movwf	postinc1,c
  5036  0155E4  0E01               	movlw	1
  5037  0155E6  6EE6               	movwf	postinc1,c
  5038  0155E8  EC97  F0BF         	call	_get_vterm_ptr	;wreg free
  5039  0155EC  0060  F0CB  FFE6   	movff	btemp,postinc1
  5040  0155F2  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5041  0155F8  0E06               	movlw	6
  5042  0155FA  6EE6               	movwf	postinc1,c
  5043  0155FC  EC90  F0B4         	call	_sprintf	;wreg free
  5044                           
  5045                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  5046  015600  0101               	movlb	1	; () banked
  5047  015602  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  5048  015604  32E8               	rrcf	wreg,f,c
  5049  015606  32E8               	rrcf	wreg,f,c
  5050  015608  0B03               	andlw	3
  5051  01560A  0D24               	mullw	36
  5052  01560C  0E5F               	movlw	low _T
  5053  01560E  6E3C               	movwf	(btemp+10)^0,c
  5054  015610  0EFE               	movlw	high _T
  5055  015612  6E3D               	movwf	(btemp+11)^0,c
  5056  015614  50F3               	movf	243,w,c
  5057  015616  263C               	addwf	(btemp+10)^0,f,c
  5058  015618  50F4               	movf	244,w,c
  5059  01561A  223D               	addwfc	(btemp+11)^0,f,c
  5060  01561C  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  5061  015622  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  5062  015628  0ECD               	movlw	low STR_19
  5063  01562A  6EE6               	movwf	postinc1,c
  5064  01562C  0EFF               	movlw	high STR_19
  5065  01562E  6EE6               	movwf	postinc1,c
  5066  015630  0E01               	movlw	1
  5067  015632  6EE6               	movwf	postinc1,c
  5068  015634  0E02               	movlw	2
  5069  015636  6EE6               	movwf	postinc1,c
  5070  015638  EC97  F0BF         	call	_get_vterm_ptr	;wreg free
  5071  01563C  0060  F0CB  FFE6   	movff	btemp,postinc1
  5072  015642  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5073  015648  0E06               	movlw	6
  5074  01564A  6EE6               	movwf	postinc1,c
  5075  01564C  EC90  F0B4         	call	_sprintf	;wreg free
  5076                           
  5077                           ;mconfig.c: 60:   V.help_id++;
  5078  015650  EE20  F19B         	lfsr	2,_V+155	;volatile
  5079  015654  38DF               	swapf	223,w,c
  5080  015656  6E3D               	movwf	(btemp+11)^0,c
  5081  015658  323D               	rrcf	(btemp+11)^0,f,c
  5082  01565A  303D               	rrcf	(btemp+11)^0,w,c
  5083  01565C  0B03               	andlw	3
  5084  01565E  6E3D               	movwf	(btemp+11)^0,c
  5085  015660  2A3D               	incf	(btemp+11)^0,f,c
  5086  015662  3A3D               	swapf	(btemp+11)^0,f,c
  5087  015664  363D               	rlcf	(btemp+11)^0,f,c
  5088  015666  363D               	rlcf	(btemp+11)^0,f,c
  5089  015668  50DF               	movf	223,w,c
  5090  01566A  183D               	xorwf	(btemp+11)^0,w,c
  5091  01566C  0B3F               	andlw	-193
  5092  01566E  183D               	xorwf	(btemp+11)^0,w,c
  5093  015670  6EDF               	movwf	223,c
  5094                           
  5095                           ;mconfig.c: 61:   StartTimer(TMR_HELPDIS, 3000);
  5096  015672  0EB8               	movlw	184
  5097  015674  6EE6               	movwf	postinc1,c
  5098  015676  0E0B               	movlw	11
  5099  015678  6EE6               	movwf	postinc1,c
  5100  01567A  0E09               	movlw	9
  5101  01567C  6EE6               	movwf	postinc1,c
  5102  01567E  EC93  F0BE         	call	_StartTimer	;wreg free
  5103                           
  5104                           ;mconfig.c: 62:   StartTimer(TMR_INFO, 3000);
  5105  015682  0EB8               	movlw	184
  5106  015684  6EE6               	movwf	postinc1,c
  5107  015686  0E0B               	movlw	11
  5108  015688  6EE6               	movwf	postinc1,c
  5109  01568A  0E07               	movlw	7
  5110  01568C  6EE6               	movwf	postinc1,c
  5111  01568E  EC93  F0BE         	call	_StartTimer	;wreg free
  5112                           
  5113                           ;mconfig.c: 63:   mode_lamp_bright();
  5114  015692  ECCE  F0C2         	call	_mode_lamp_bright	;wreg free
  5115                           
  5116                           ;mconfig.c: 64:   update_lcd(1);
  5117  015696  0E01               	movlw	1
  5118  015698  6EE6               	movwf	postinc1,c
  5119  01569A  EC09  F0B4         	call	_update_lcd	;wreg free
  5120                           
  5121                           ;mconfig.c: 65:  } else {
  5122  01569E  D032               	goto	l1564
  5123  0156A0                     l11897:
  5124                           
  5125                           ;mconfig.c: 66:   if (TimerDone(TMR_HELPDIS)) {
  5126  0156A0  0E09               	movlw	9
  5127  0156A2  6EE6               	movwf	postinc1,c
  5128  0156A4  EC81  F0C1         	call	_TimerDone	;wreg free
  5129  0156A8  5032               	movf	btemp^0,w,c
  5130  0156AA  B4D8               	btfsc	status,2,c
  5131  0156AC  D02B               	goto	l1564
  5132                           
  5133                           ;mconfig.c: 67:    set_vterm(0);
  5134  0156AE  0E00               	movlw	0
  5135  0156B0  6EE6               	movwf	postinc1,c
  5136  0156B2  EC42  F0C2         	call	_set_vterm	;wreg free
  5137                           
  5138                           ; BSR set to: 5
  5139                           ;mconfig.c: 68:    V.help = 0;
  5140  0156B6  0101               	movlb	1	; () banked
  5141  0156B8  959B               	bcf	(_V+155)& (0+255),2,b	;volatile
  5142                           
  5143                           ; BSR set to: 1
  5144                           ;mconfig.c: 69:    set_display_info(display_help());
  5145  0156BA  EC07  F0C3         	call	_display_help	;wreg free
  5146  0156BE  5032               	movf	btemp^0,w,c
  5147  0156C0  6EE6               	movwf	postinc1,c
  5148  0156C2  EC07  F0C2         	call	_set_display_info	;wreg free
  5149                           
  5150                           ;mconfig.c: 70:    mode_lamp_dim(V.mode_pwm);
  5151  0156C6  0060  F657  FFE6   	movff	_V+149,postinc1
  5152  0156CC  0060  F65B  FFE6   	movff	_V+150,postinc1
  5153  0156D2  EC6B  F0C2         	call	_mode_lamp_dim	;wreg free
  5154                           
  5155                           ;mconfig.c: 71:    if (TimerDone(TMR_FLIPPER)) {
  5156  0156D6  0E0B               	movlw	11
  5157  0156D8  6EE6               	movwf	postinc1,c
  5158  0156DA  EC81  F0C1         	call	_TimerDone	;wreg free
  5159  0156DE  5032               	movf	btemp^0,w,c
  5160  0156E0  B4D8               	btfsc	status,2,c
  5161  0156E2  D010               	goto	l1564
  5162                           
  5163                           ;mconfig.c: 72:     V.flipper = !V.flipper;
  5164  0156E4  0101               	movlb	1	; () banked
  5165  0156E6  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  5166  0156E8  A4D8               	btfss	status,2,c
  5167  0156EA  D002               	goto	u12600
  5168  0156EC  0E01               	movlw	1
  5169  0156EE  D001               	goto	u12610
  5170  0156F0                     u12600:
  5171  0156F0  0E00               	movlw	0
  5172  0156F2                     u12610:
  5173  0156F2  6FAA               	movwf	(_V+170)& (0+255),b	;volatile
  5174                           
  5175                           ; BSR set to: 1
  5176                           ;mconfig.c: 73:     StartTimer(TMR_FLIPPER, 1500);
  5177  0156F4  0EDC               	movlw	220
  5178  0156F6  6EE6               	movwf	postinc1,c
  5179  0156F8  0E05               	movlw	5
  5180  0156FA  6EE6               	movwf	postinc1,c
  5181  0156FC  0E0B               	movlw	11
  5182  0156FE  6EE6               	movwf	postinc1,c
  5183  015700  EC93  F0BE         	call	_StartTimer	;wreg free
  5184  015704                     l1564:
  5185                           
  5186                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  5187  015704  52E5               	movf	postdec1,f,c
  5188  015706  0012               	return		;funcret
  5189  015708                     __end_of_check_help:
  5190                           	opt callstack 0
  5191                           
  5192 ;; *************** function _vterm_dump *****************
  5193 ;; Defined at:
  5194 ;;		line 118 in file "mconfig.c"
  5195 ;; Parameters:    Size  Location     Type
  5196 ;;		None
  5197 ;; Auto vars:     Size  Location     Type
  5198 ;;		None
  5199 ;; Return value:  Size  Location     Type
  5200 ;;                  1  [STACK] void 
  5201 ;; Registers used:
  5202 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5203 ;; Tracked objects:
  5204 ;;		On entry : 3F/1
  5205 ;;		On exit  : 0/0
  5206 ;;		Unchanged: 0/0
  5207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5211 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5212 ;;Total ram usage:        0 bytes
  5213 ;; Hardware stack levels used:    1
  5214 ;; Hardware stack levels required when called:   17
  5215 ;; This function calls:
  5216 ;;		_WaitMs
  5217 ;;		_eaDogM_WriteStringAtPos
  5218 ;;		_get_vterm_ptr
  5219 ;;		_sprintf
  5220 ;;		_wait_lcd_done
  5221 ;; This function is called by:
  5222 ;;		_check_help
  5223 ;; This function uses a reentrant model
  5224 ;;
  5225                           
  5226                           	psect	text22
  5227  016394                     __ptext22:
  5228                           	opt callstack 0
  5229  016394                     _vterm_dump:
  5230                           	opt callstack 12
  5231                           
  5232                           ;mconfig.c: 120:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  5233                           
  5234                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5235                           ;incstack = 0
  5236  016394  0E01               	movlw	1
  5237  016396  6EE6               	movwf	postinc1,c
  5238  016398  0E00               	movlw	0
  5239  01639A  6EE6               	movwf	postinc1,c
  5240  01639C  EC97  F0BF         	call	_get_vterm_ptr	;wreg free
  5241  0163A0  0060  F0CB  FFE6   	movff	btemp,postinc1
  5242  0163A6  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5243  0163AC  0E00               	movlw	0
  5244  0163AE  6EE6               	movwf	postinc1,c
  5245  0163B0  0E00               	movlw	0
  5246  0163B2  6EE6               	movwf	postinc1,c
  5247  0163B4  EC97  F0BF         	call	_get_vterm_ptr	;wreg free
  5248  0163B8  0060  F0CB  FFE6   	movff	btemp,postinc1
  5249  0163BE  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5250  0163C4  0E95               	movlw	low STR_21
  5251  0163C6  6EE6               	movwf	postinc1,c
  5252  0163C8  0EFF               	movlw	high STR_21
  5253  0163CA  6EE6               	movwf	postinc1,c
  5254  0163CC  0E01               	movlw	low (_V+1)
  5255  0163CE  6EE6               	movwf	postinc1,c
  5256  0163D0  0E01               	movlw	high (_V+1)
  5257  0163D2  6EE6               	movwf	postinc1,c
  5258  0163D4  0E08               	movlw	8
  5259  0163D6  6EE6               	movwf	postinc1,c
  5260  0163D8  EC90  F0B4         	call	_sprintf	;wreg free
  5261                           
  5262                           ;mconfig.c: 121:  wait_lcd_done();
  5263  0163DC  EC34  F0C2         	call	_wait_lcd_done	;wreg free
  5264                           
  5265                           ; BSR set to: 0
  5266                           ;mconfig.c: 122:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  5267  0163E0  0E01               	movlw	low (_V+1)
  5268  0163E2  6EE6               	movwf	postinc1,c
  5269  0163E4  0E01               	movlw	high (_V+1)
  5270  0163E6  6EE6               	movwf	postinc1,c
  5271  0163E8  0E00               	movlw	0
  5272  0163EA  6EE6               	movwf	postinc1,c
  5273  0163EC  0E00               	movlw	0
  5274  0163EE  6EE6               	movwf	postinc1,c
  5275  0163F0  ECE8  F0BE         	call	_eaDogM_WriteStringAtPos	;wreg free
  5276                           
  5277                           ; BSR set to: 59
  5278                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  5279  0163F4  0E01               	movlw	1
  5280  0163F6  6EE6               	movwf	postinc1,c
  5281  0163F8  0E01               	movlw	1
  5282  0163FA  6EE6               	movwf	postinc1,c
  5283  0163FC  EC97  F0BF         	call	_get_vterm_ptr	;wreg free
  5284  016400  0060  F0CB  FFE6   	movff	btemp,postinc1
  5285  016406  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5286  01640C  0E00               	movlw	0
  5287  01640E  6EE6               	movwf	postinc1,c
  5288  016410  0E01               	movlw	1
  5289  016412  6EE6               	movwf	postinc1,c
  5290  016414  EC97  F0BF         	call	_get_vterm_ptr	;wreg free
  5291  016418  0060  F0CB  FFE6   	movff	btemp,postinc1
  5292  01641E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5293  016424  0E95               	movlw	low STR_21
  5294  016426  6EE6               	movwf	postinc1,c
  5295  016428  0EFF               	movlw	high STR_21
  5296  01642A  6EE6               	movwf	postinc1,c
  5297  01642C  0E01               	movlw	low (_V+1)
  5298  01642E  6EE6               	movwf	postinc1,c
  5299  016430  0E01               	movlw	high (_V+1)
  5300  016432  6EE6               	movwf	postinc1,c
  5301  016434  0E08               	movlw	8
  5302  016436  6EE6               	movwf	postinc1,c
  5303  016438  EC90  F0B4         	call	_sprintf	;wreg free
  5304                           
  5305                           ;mconfig.c: 124:  wait_lcd_done();
  5306  01643C  EC34  F0C2         	call	_wait_lcd_done	;wreg free
  5307                           
  5308                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  5309  016440  0E01               	movlw	low (_V+1)
  5310  016442  6EE6               	movwf	postinc1,c
  5311  016444  0E01               	movlw	high (_V+1)
  5312  016446  6EE6               	movwf	postinc1,c
  5313  016448  0E00               	movlw	0
  5314  01644A  6EE6               	movwf	postinc1,c
  5315  01644C  0E01               	movlw	1
  5316  01644E  6EE6               	movwf	postinc1,c
  5317  016450  ECE8  F0BE         	call	_eaDogM_WriteStringAtPos	;wreg free
  5318                           
  5319                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  5320  016454  0E01               	movlw	1
  5321  016456  6EE6               	movwf	postinc1,c
  5322  016458  0E02               	movlw	2
  5323  01645A  6EE6               	movwf	postinc1,c
  5324  01645C  EC97  F0BF         	call	_get_vterm_ptr	;wreg free
  5325  016460  0060  F0CB  FFE6   	movff	btemp,postinc1
  5326  016466  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5327  01646C  0E00               	movlw	0
  5328  01646E  6EE6               	movwf	postinc1,c
  5329  016470  0E02               	movlw	2
  5330  016472  6EE6               	movwf	postinc1,c
  5331  016474  EC97  F0BF         	call	_get_vterm_ptr	;wreg free
  5332  016478  0060  F0CB  FFE6   	movff	btemp,postinc1
  5333  01647E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5334  016484  0E95               	movlw	low STR_21
  5335  016486  6EE6               	movwf	postinc1,c
  5336  016488  0EFF               	movlw	high STR_21
  5337  01648A  6EE6               	movwf	postinc1,c
  5338  01648C  0E01               	movlw	low (_V+1)
  5339  01648E  6EE6               	movwf	postinc1,c
  5340  016490  0E01               	movlw	high (_V+1)
  5341  016492  6EE6               	movwf	postinc1,c
  5342  016494  0E08               	movlw	8
  5343  016496  6EE6               	movwf	postinc1,c
  5344  016498  EC90  F0B4         	call	_sprintf	;wreg free
  5345                           
  5346                           ;mconfig.c: 127:  wait_lcd_done();
  5347  01649C  EC34  F0C2         	call	_wait_lcd_done	;wreg free
  5348                           
  5349                           ; BSR set to: 0
  5350                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  5351  0164A0  0E01               	movlw	low (_V+1)
  5352  0164A2  6EE6               	movwf	postinc1,c
  5353  0164A4  0E01               	movlw	high (_V+1)
  5354  0164A6  6EE6               	movwf	postinc1,c
  5355  0164A8  0E00               	movlw	0
  5356  0164AA  6EE6               	movwf	postinc1,c
  5357  0164AC  0E02               	movlw	2
  5358  0164AE  6EE6               	movwf	postinc1,c
  5359  0164B0  ECE8  F0BE         	call	_eaDogM_WriteStringAtPos	;wreg free
  5360                           
  5361                           ; BSR set to: 59
  5362                           ;mconfig.c: 129:  WaitMs(3000);
  5363  0164B4  0EB8               	movlw	184
  5364  0164B6  6EE6               	movwf	postinc1,c
  5365  0164B8  0E0B               	movlw	11
  5366  0164BA  6EE6               	movwf	postinc1,c
  5367  0164BC  ECCD  F0BE         	call	_WaitMs	;wreg free
  5368                           
  5369                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  5370  0164C0  0012               	return		;funcret
  5371  0164C2                     __end_of_vterm_dump:
  5372                           	opt callstack 0
  5373                           
  5374 ;; *************** function _sprintf *****************
  5375 ;; Defined at:
  5376 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  5377 ;; Parameters:    Size  Location     Type
  5378 ;;  s               2  [STACK] PTR unsigned char 
  5379 ;;		 -> D.lcd(216), D(218), V(187), 
  5380 ;;  fmt             2  [STACK] PTR const unsigned char 
  5381 ;;		 -> STR_32(3), STR_31(3), STR_30(19), STR_29(19), 
  5382 ;;		 -> STR_28(19), STR_27(19), STR_26(19), STR_25(19), 
  5383 ;;		 -> STR_24(24), STR_23(15), STR_22(15), STR_21(15), 
  5384 ;;		 -> STR_20(10), STR_19(10), STR_18(19), STR_17(19), 
  5385 ;;		 -> STR_11(17), STR_10(14), STR_9(14), STR_8(17), 
  5386 ;;		 -> STR_6(15), STR_5(17), STR_4(17), STR_2(15), 
  5387 ;;		 -> STR_1(17), 
  5388 ;; Auto vars:     Size  Location     Type
  5389 ;;  f               6  [STACK] struct _IO_FILE
  5390 ;;  ap              2  [STACK] PTR void [1]
  5391 ;;		 -> ?_printf(2), ?_sprintf(2), 
  5392 ;;  ret             2    0        int 
  5393 ;; Return value:  Size  Location     Type
  5394 ;;                  2  [STACK] int 
  5395 ;; Registers used:
  5396 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5397 ;; Tracked objects:
  5398 ;;		On entry : 0/5
  5399 ;;		On exit  : 0/0
  5400 ;;		Unchanged: 0/0
  5401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5405 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5406 ;;Total ram usage:        0 bytes
  5407 ;; Hardware stack levels used:    1
  5408 ;; Hardware stack levels required when called:   14
  5409 ;; This function calls:
  5410 ;;		_vfprintf
  5411 ;; This function is called by:
  5412 ;;		_main
  5413 ;;		_check_help
  5414 ;;		_vterm_dump
  5415 ;; This function uses a reentrant model
  5416 ;;
  5417                           
  5418                           	psect	text23
  5419  016920                     __ptext23:
  5420                           	opt callstack 0
  5421  016920                     _sprintf:
  5422                           	opt callstack 0
  5423                           
  5424                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  5425  016920  0E08               	movlw	8
  5426  016922  26E1               	addwf	fsr1l,f,c
  5427  016924  0E00               	movlw	0
  5428  016926  22E2               	addwfc	fsr1h,f,c
  5429                           
  5430                           ;incstack = 0
  5431  016928  0EFE               	movlw	254
  5432  01692A  6E3C               	movwf	(btemp+10)^0,c
  5433  01692C  0EFF               	movlw	255
  5434  01692E  6E3D               	movwf	(btemp+11)^0,c
  5435                           
  5436                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  5437  016930  0EF5               	movlw	245
  5438  016932  24E1               	addwf	fsr1l,w,c
  5439  016934  6E3A               	movwf	(btemp+8)^0,c
  5440  016936  0EFF               	movlw	255
  5441  016938  20E2               	addwfc	fsr1h,w,c
  5442  01693A  6E3B               	movwf	(btemp+9)^0,c
  5443  01693C  503C               	movf	(btemp+10)^0,w,c
  5444  01693E  263A               	addwf	(btemp+8)^0,f,c
  5445  016940  503D               	movf	(btemp+11)^0,w,c
  5446  016942  223B               	addwfc	(btemp+9)^0,f,c
  5447                           
  5448                           ;stkvar	_ap @ sp[(-8)+6]
  5449  016944  0EFF               	movlw	-1
  5450  016946  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  5451  01694C  0EFE               	movlw	-2
  5452  01694E  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  5453                           
  5454                           ;stkvar	_s @ sp[(-8)+-3]
  5455  016954  0EF5               	movlw	-11
  5456  016956  006F FF8C  F03C    	movff	plusw1,btemp+10
  5457  01695C  0EF6               	movlw	-10
  5458  01695E  006F FF8C  F03D    	movff	plusw1,btemp+11
  5459                           
  5460                           ;stkvar	_f @ sp[(-8)+0]
  5461  016964  0EF9               	movlw	-7
  5462  016966  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  5463  01696C  0EF8               	movlw	-8
  5464  01696E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  5465                           
  5466                           ;stkvar	_f @ sp[(-8)+0]
  5467  016974  0EFA               	movlw	250
  5468  016976  24E1               	addwf	fsr1l,w,c
  5469  016978  6ED9               	movwf	fsr2l,c
  5470  01697A  0EFF               	movlw	255
  5471  01697C  20E2               	addwfc	fsr1h,w,c
  5472  01697E  6EDA               	movwf	fsr2h,c
  5473  016980  0E00               	movlw	0
  5474  016982  6EDE               	movwf	postinc2,c
  5475  016984  0E00               	movlw	0
  5476  016986  6EDD               	movwf	postdec2,c
  5477                           
  5478                           ;stkvar	_f @ sp[(-8)+0]
  5479  016988  0EFC               	movlw	252
  5480  01698A  24E1               	addwf	fsr1l,w,c
  5481  01698C  6ED9               	movwf	fsr2l,c
  5482  01698E  0EFF               	movlw	255
  5483  016990  20E2               	addwfc	fsr1h,w,c
  5484  016992  6EDA               	movwf	fsr2h,c
  5485  016994  0E00               	movlw	0
  5486  016996  6EDE               	movwf	postinc2,c
  5487  016998  0E00               	movlw	0
  5488  01699A  6EDD               	movwf	postdec2,c
  5489                           
  5490                           ;stkvar	_ap @ sp[(-8)+6]
  5491  01699C  0EFE               	movlw	254
  5492  01699E  24E1               	addwf	fsr1l,w,c
  5493  0169A0  6E32               	movwf	btemp^0,c
  5494  0169A2  0EFF               	movlw	255
  5495  0169A4  20E2               	addwfc	fsr1h,w,c
  5496  0169A6  6E33               	movwf	(btemp+1)^0,c
  5497  0169A8  0060  F0CB  FFE6   	movff	btemp,postinc1
  5498  0169AE  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5499                           
  5500                           ;stkvar	_fmt @ sp[(-10)+-5]
  5501  0169B4  0EF1               	movlw	-15
  5502  0169B6  006F FF8F FFE6     	movff	plusw1,postinc1
  5503  0169BC  006F FF8F FFE6     	movff	plusw1,postinc1
  5504                           
  5505                           ;stkvar	_f @ sp[(-12)+0]
  5506  0169C2  0EF4               	movlw	244
  5507  0169C4  24E1               	addwf	fsr1l,w,c
  5508  0169C6  6E32               	movwf	btemp^0,c
  5509  0169C8  0EFF               	movlw	255
  5510  0169CA  20E2               	addwfc	fsr1h,w,c
  5511  0169CC  6E33               	movwf	(btemp+1)^0,c
  5512  0169CE  0060  F0CB  FFE6   	movff	btemp,postinc1
  5513  0169D4  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5514  0169DA  EC83  F0B7         	call	_vfprintf	;wreg free
  5515                           
  5516                           ;stkvar	_f @ sp[(-8)+0]
  5517  0169DE  0EFA               	movlw	250
  5518  0169E0  24E1               	addwf	fsr1l,w,c
  5519  0169E2  6ED9               	movwf	fsr2l,c
  5520  0169E4  0EFF               	movlw	255
  5521  0169E6  20E2               	addwfc	fsr1h,w,c
  5522  0169E8  6EDA               	movwf	fsr2h,c
  5523  0169EA  006F FF78  F03C    	movff	postinc2,btemp+10
  5524  0169F0  006F FF74  F03D    	movff	postdec2,btemp+11
  5525                           
  5526                           ;stkvar	_s @ sp[(-8)+-3]
  5527  0169F6  0EF5               	movlw	-11
  5528  0169F8  006F FF8C  F03A    	movff	plusw1,btemp+8
  5529  0169FE  0EF6               	movlw	-10
  5530  016A00  006F FF8C  F03B    	movff	plusw1,btemp+9
  5531  016A06  503C               	movf	(btemp+10)^0,w,c
  5532  016A08  243A               	addwf	(btemp+8)^0,w,c
  5533  016A0A  6ED9               	movwf	fsr2l,c
  5534  016A0C  503D               	movf	(btemp+11)^0,w,c
  5535  016A0E  203B               	addwfc	(btemp+9)^0,w,c
  5536  016A10  6EDA               	movwf	fsr2h,c
  5537  016A12  0E00               	movlw	0
  5538  016A14  6EDF               	movwf	indf2,c
  5539                           
  5540                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, args
      +                          ize = 4, vargsize = 0
  5541  016A16  0EF8               	movlw	248
  5542  016A18  26E1               	addwf	fsr1l,f,c
  5543  016A1A  0EFF               	movlw	255
  5544  016A1C  22E2               	addwfc	fsr1h,f,c
  5545  016A1E  52E5               	movf	postdec1,f,c
  5546  016A20  50E7               	movf	indf1,w,c
  5547  016A22  5EE1               	subwf	fsr1l,f,c
  5548  016A24  0E00               	movlw	0
  5549  016A26  5AE2               	subwfb	fsr1h,f,c
  5550  016A28  0012               	return		;funcret
  5551  016A2A                     __end_of_sprintf:
  5552                           	opt callstack 0
  5553                           
  5554 ;; *************** function _get_vterm_ptr *****************
  5555 ;; Defined at:
  5556 ;;		line 113 in file "mconfig.c"
  5557 ;; Parameters:    Size  Location     Type
  5558 ;;  line            1  [STACK] const unsigned char 
  5559 ;;  vterm           1  [STACK] const unsigned char 
  5560 ;; Auto vars:     Size  Location     Type
  5561 ;;		None
  5562 ;; Return value:  Size  Location     Type
  5563 ;;                  2  [STACK] PTR unsigned char 
  5564 ;; Registers used:
  5565 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
  5566 ;; Tracked objects:
  5567 ;;		On entry : 0/5
  5568 ;;		On exit  : 0/0
  5569 ;;		Unchanged: 0/0
  5570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5575 ;;Total ram usage:        0 bytes
  5576 ;; Hardware stack levels used:    1
  5577 ;; Hardware stack levels required when called:    6
  5578 ;; This function calls:
  5579 ;;		Nothing
  5580 ;; This function is called by:
  5581 ;;		_main
  5582 ;;		_check_help
  5583 ;;		_vterm_dump
  5584 ;; This function uses a reentrant model
  5585 ;;
  5586                           
  5587                           	psect	text24
  5588  017F2E                     __ptext24:
  5589                           	opt callstack 0
  5590  017F2E                     _get_vterm_ptr:
  5591                           	opt callstack 24
  5592                           
  5593                           ;mconfig.c: 113: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 114: {;mconfig.c: 115:  return D.lcd[vterm & 0x03][line & 0x03];
  5594                           ;stkvar	_vterm @ sp[(0)+-2]
  5595                           
  5596                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5597                           ;incstack = 0
  5598  017F2E  0EFE               	movlw	-2
  5599  017F30  50E3               	movf	plusw1,w,c
  5600  017F32  0B03               	andlw	3
  5601  017F34  0D36               	mullw	54
  5602  017F36  0E00               	movlw	low _D
  5603  017F38  6E32               	movwf	btemp^0,c
  5604  017F3A  0E05               	movlw	high _D
  5605  017F3C  6E33               	movwf	(btemp+1)^0,c
  5606  017F3E  50F3               	movf	243,w,c
  5607  017F40  2632               	addwf	btemp^0,f,c
  5608  017F42  50F4               	movf	244,w,c
  5609  017F44  2233               	addwfc	(btemp+1)^0,f,c
  5610                           
  5611                           ;stkvar	_line @ sp[(0)+-1]
  5612  017F46  0EFF               	movlw	-1
  5613  017F48  50E3               	movf	plusw1,w,c
  5614  017F4A  0B03               	andlw	3
  5615  017F4C  0D12               	mullw	18
  5616  017F4E  50F3               	movf	243,w,c
  5617  017F50  2632               	addwf	btemp^0,f,c
  5618  017F52  50F4               	movf	244,w,c
  5619  017F54  2233               	addwfc	(btemp+1)^0,f,c
  5620                           
  5621                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  5622  017F56  52E5               	movf	postdec1,f,c
  5623  017F58  52E5               	movf	postdec1,f,c
  5624  017F5A  0012               	return		;funcret
  5625  017F5C                     __end_of_get_vterm_ptr:
  5626                           	opt callstack 0
  5627                           
  5628 ;; *************** function _WaitMs *****************
  5629 ;; Defined at:
  5630 ;;		line 32 in file "timers.c"
  5631 ;; Parameters:    Size  Location     Type
  5632 ;;  numMilliseco    2  [STACK] const unsigned short 
  5633 ;; Auto vars:     Size  Location     Type
  5634 ;;		None
  5635 ;; Return value:  Size  Location     Type
  5636 ;;                  1  [STACK] void 
  5637 ;; Registers used:
  5638 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  5639 ;; Tracked objects:
  5640 ;;		On entry : 1/1
  5641 ;;		On exit  : 0/0
  5642 ;;		Unchanged: 0/0
  5643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5647 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5648 ;;Total ram usage:        0 bytes
  5649 ;; Hardware stack levels used:    1
  5650 ;; Hardware stack levels required when called:    7
  5651 ;; This function calls:
  5652 ;;		_StartTimer
  5653 ;;		_TimerDone
  5654 ;; This function is called by:
  5655 ;;		_main
  5656 ;;		_vterm_dump
  5657 ;; This function uses a reentrant model
  5658 ;;
  5659                           
  5660                           	psect	text25
  5661  017D9A                     __ptext25:
  5662                           	opt callstack 0
  5663  017D9A                     _WaitMs:
  5664                           	opt callstack 21
  5665                           
  5666                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  5667                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  5668                           
  5669                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5670                           ;incstack = 0
  5671  017D9A  0EFE               	movlw	-2
  5672  017D9C  006F FF8F FFE6     	movff	plusw1,postinc1
  5673  017DA2  006F FF8F FFE6     	movff	plusw1,postinc1
  5674  017DA8  0E00               	movlw	0
  5675  017DAA  6EE6               	movwf	postinc1,c
  5676  017DAC  EC93  F0BE         	call	_StartTimer	;wreg free
  5677                           
  5678                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  5679  017DB0  D005               	goto	l11089
  5680  017DB2                     l1490:
  5681                           
  5682                           ;timers.c: 36:   __nop();
  5683  017DB2  F000               	nop	
  5684                           
  5685                           ;timers.c: 37:   __nop();
  5686  017DB4  F000               	nop	
  5687                           
  5688                           ;timers.c: 38:   __nop();
  5689  017DB6  F000               	nop	
  5690                           
  5691                           ;timers.c: 39:   __nop();
  5692  017DB8  F000               	nop	
  5693  017DBA  0004               	clrwdt		;# 
  5694  017DBC                     l11089:
  5695                           
  5696                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  5697  017DBC  0E00               	movlw	0
  5698  017DBE  6EE6               	movwf	postinc1,c
  5699  017DC0  EC81  F0C1         	call	_TimerDone	;wreg free
  5700  017DC4  5032               	movf	btemp^0,w,c
  5701  017DC6  B4D8               	btfsc	status,2,c
  5702  017DC8  D7F4               	goto	l1490
  5703                           
  5704                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  5705  017DCA  52E5               	movf	postdec1,f,c
  5706  017DCC  52E5               	movf	postdec1,f,c
  5707  017DCE  0012               	return		;funcret
  5708  017DD0                     __end_of_WaitMs:
  5709                           	opt callstack 0
  5710                           
  5711 ;; *************** function _update_lcd *****************
  5712 ;; Defined at:
  5713 ;;		line 82 in file "mconfig.c"
  5714 ;; Parameters:    Size  Location     Type
  5715 ;;  vterm           1  [STACK] unsigned char 
  5716 ;; Auto vars:     Size  Location     Type
  5717 ;;		None
  5718 ;; Return value:  Size  Location     Type
  5719 ;;                  1  [STACK] unsigned char 
  5720 ;; Registers used:
  5721 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5722 ;; Tracked objects:
  5723 ;;		On entry : 0/5
  5724 ;;		On exit  : 1/1
  5725 ;;		Unchanged: 0/0
  5726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5731 ;;Total ram usage:        0 bytes
  5732 ;; Hardware stack levels used:    1
  5733 ;; Hardware stack levels required when called:   17
  5734 ;; This function calls:
  5735 ;;		_eaDogM_WriteStringAtPos
  5736 ;;		_wait_lcd_done
  5737 ;; This function is called by:
  5738 ;;		_main
  5739 ;;		_check_help
  5740 ;; This function uses a reentrant model
  5741 ;;
  5742                           
  5743                           	psect	text26
  5744  016812                     __ptext26:
  5745                           	opt callstack 0
  5746  016812                     _update_lcd:
  5747                           	opt callstack 13
  5748                           
  5749                           ;mconfig.c: 82: uint8_t update_lcd(uint8_t vterm);mconfig.c: 83: {;mconfig.c: 84:  vterm
      +                           = vterm & 0x03;
  5750                           ;stkvar	_vterm @ sp[(0)+-1]
  5751                           
  5752                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5753                           ;incstack = 0
  5754  016812  0EFF               	movlw	-1
  5755  016814  006F FF8C  F032    	movff	plusw1,btemp
  5756  01681A  0E03               	movlw	3
  5757  01681C  1632               	andwf	btemp^0,f,c
  5758  01681E  0EFF               	movlw	-1
  5759  016820  0060  F0CB  FFE3   	movff	btemp,plusw1
  5760                           
  5761                           ;mconfig.c: 86:  if (D.vterm >= 1 && vterm == 0)
  5762  016826  0105               	movlb	5	; () banked
  5763  016828  A1D8               	btfss	(_D+216)& (0+255),0,b
  5764  01682A  D004               	goto	l11543
  5765                           
  5766                           ; BSR set to: 5
  5767                           ;stkvar	_vterm @ sp[(0)+-1]
  5768  01682C  0EFF               	movlw	-1
  5769  01682E  50E3               	movf	plusw1,w,c
  5770  016830  B4D8               	btfsc	status,2,c
  5771  016832  D074               	goto	l1568
  5772  016834                     l11543:
  5773                           
  5774                           ; BSR set to: 5
  5775                           ;mconfig.c: 89:  D.lcd[vterm][0][16] = 0;
  5776                           ;stkvar	_vterm @ sp[(0)+-1]
  5777  016834  0EFF               	movlw	-1
  5778  016836  50E3               	movf	plusw1,w,c
  5779  016838  0D36               	mullw	54
  5780  01683A  0E10               	movlw	low (_D+16)
  5781  01683C  24F3               	addwf	243,w,c
  5782  01683E  6ED9               	movwf	fsr2l,c
  5783  016840  0E05               	movlw	high (_D+16)
  5784  016842  20F4               	addwfc	prodh,w,c
  5785  016844  6EDA               	movwf	fsr2h,c
  5786  016846  0E00               	movlw	0
  5787  016848  6EDF               	movwf	indf2,c
  5788                           
  5789                           ;mconfig.c: 90:  D.lcd[vterm][1][16] = 0;
  5790                           ;stkvar	_vterm @ sp[(0)+-1]
  5791  01684A  0EFF               	movlw	-1
  5792  01684C  50E3               	movf	plusw1,w,c
  5793  01684E  0D36               	mullw	54
  5794  016850  0E22               	movlw	low (_D+34)
  5795  016852  24F3               	addwf	243,w,c
  5796  016854  6ED9               	movwf	fsr2l,c
  5797  016856  0E05               	movlw	high (_D+34)
  5798  016858  20F4               	addwfc	prodh,w,c
  5799  01685A  6EDA               	movwf	fsr2h,c
  5800  01685C  0E00               	movlw	0
  5801  01685E  6EDF               	movwf	indf2,c
  5802                           
  5803                           ;mconfig.c: 91:  D.lcd[vterm][2][16] = 0;
  5804                           ;stkvar	_vterm @ sp[(0)+-1]
  5805  016860  0EFF               	movlw	-1
  5806  016862  50E3               	movf	plusw1,w,c
  5807  016864  0D36               	mullw	54
  5808  016866  0E34               	movlw	low (_D+52)
  5809  016868  24F3               	addwf	243,w,c
  5810  01686A  6ED9               	movwf	fsr2l,c
  5811  01686C  0E05               	movlw	high (_D+52)
  5812  01686E  20F4               	addwfc	prodh,w,c
  5813  016870  6EDA               	movwf	fsr2h,c
  5814  016872  0E00               	movlw	0
  5815  016874  6EDF               	movwf	indf2,c
  5816                           
  5817                           ; BSR set to: 5
  5818                           ;mconfig.c: 92:  wait_lcd_done();
  5819  016876  EC34  F0C2         	call	_wait_lcd_done	;wreg free
  5820                           
  5821                           ; BSR set to: 0
  5822                           ;mconfig.c: 93:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
  5823                           ;stkvar	_vterm @ sp[(0)+-1]
  5824  01687A  0EFF               	movlw	-1
  5825  01687C  50E3               	movf	plusw1,w,c
  5826  01687E  0D36               	mullw	54
  5827  016880  0E00               	movlw	low _D
  5828  016882  6E3C               	movwf	(btemp+10)^0,c
  5829  016884  0E05               	movlw	high _D
  5830  016886  6E3D               	movwf	(btemp+11)^0,c
  5831  016888  50F3               	movf	243,w,c
  5832  01688A  263C               	addwf	(btemp+10)^0,f,c
  5833  01688C  50F4               	movf	244,w,c
  5834  01688E  223D               	addwfc	(btemp+11)^0,f,c
  5835  016890  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  5836  016896  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  5837  01689C  0E00               	movlw	0
  5838  01689E  6EE6               	movwf	postinc1,c
  5839  0168A0  0E00               	movlw	0
  5840  0168A2  6EE6               	movwf	postinc1,c
  5841  0168A4  ECE8  F0BE         	call	_eaDogM_WriteStringAtPos	;wreg free
  5842                           
  5843                           ; BSR set to: 59
  5844                           ;mconfig.c: 94:  wait_lcd_done();
  5845  0168A8  EC34  F0C2         	call	_wait_lcd_done	;wreg free
  5846                           
  5847                           ; BSR set to: 0
  5848                           ;mconfig.c: 95:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
  5849                           ;stkvar	_vterm @ sp[(0)+-1]
  5850  0168AC  0EFF               	movlw	-1
  5851  0168AE  50E3               	movf	plusw1,w,c
  5852  0168B0  0D36               	mullw	54
  5853  0168B2  0E00               	movlw	low _D
  5854  0168B4  6E3C               	movwf	(btemp+10)^0,c
  5855  0168B6  0E05               	movlw	high _D
  5856  0168B8  6E3D               	movwf	(btemp+11)^0,c
  5857  0168BA  0E12               	movlw	18
  5858  0168BC  263C               	addwf	(btemp+10)^0,f,c
  5859  0168BE  0E00               	movlw	0
  5860  0168C0  223D               	addwfc	(btemp+11)^0,f,c
  5861  0168C2  50F3               	movf	243,w,c
  5862  0168C4  263C               	addwf	(btemp+10)^0,f,c
  5863  0168C6  50F4               	movf	244,w,c
  5864  0168C8  223D               	addwfc	(btemp+11)^0,f,c
  5865  0168CA  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  5866  0168D0  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  5867  0168D6  0E00               	movlw	0
  5868  0168D8  6EE6               	movwf	postinc1,c
  5869  0168DA  0E01               	movlw	1
  5870  0168DC  6EE6               	movwf	postinc1,c
  5871  0168DE  ECE8  F0BE         	call	_eaDogM_WriteStringAtPos	;wreg free
  5872                           
  5873                           ; BSR set to: 59
  5874                           ;mconfig.c: 96:  wait_lcd_done();
  5875  0168E2  EC34  F0C2         	call	_wait_lcd_done	;wreg free
  5876                           
  5877                           ; BSR set to: 0
  5878                           ;mconfig.c: 97:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
  5879                           ;stkvar	_vterm @ sp[(0)+-1]
  5880  0168E6  0EFF               	movlw	-1
  5881  0168E8  50E3               	movf	plusw1,w,c
  5882  0168EA  0D36               	mullw	54
  5883  0168EC  0E00               	movlw	low _D
  5884  0168EE  6E3C               	movwf	(btemp+10)^0,c
  5885  0168F0  0E05               	movlw	high _D
  5886  0168F2  6E3D               	movwf	(btemp+11)^0,c
  5887  0168F4  0E24               	movlw	36
  5888  0168F6  263C               	addwf	(btemp+10)^0,f,c
  5889  0168F8  0E00               	movlw	0
  5890  0168FA  223D               	addwfc	(btemp+11)^0,f,c
  5891  0168FC  50F3               	movf	243,w,c
  5892  0168FE  263C               	addwf	(btemp+10)^0,f,c
  5893  016900  50F4               	movf	244,w,c
  5894  016902  223D               	addwfc	(btemp+11)^0,f,c
  5895  016904  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  5896  01690A  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  5897  016910  0E00               	movlw	0
  5898  016912  6EE6               	movwf	postinc1,c
  5899  016914  0E02               	movlw	2
  5900  016916  6EE6               	movwf	postinc1,c
  5901  016918  ECE8  F0BE         	call	_eaDogM_WriteStringAtPos	;wreg free
  5902  01691C                     l1568:
  5903                           
  5904                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  5905  01691C  52E5               	movf	postdec1,f,c
  5906  01691E  0012               	return		;funcret
  5907  016920                     __end_of_update_lcd:
  5908                           	opt callstack 0
  5909                           
  5910 ;; *************** function _eaDogM_WriteStringAtPos *****************
  5911 ;; Defined at:
  5912 ;;		line 252 in file "eadog.c"
  5913 ;; Parameters:    Size  Location     Type
  5914 ;;  r               1  [STACK] const unsigned char 
  5915 ;;  c               1  [STACK] const unsigned char 
  5916 ;;  strPtr          2  [STACK] PTR unsigned char 
  5917 ;;		 -> D.lcd(216), D(218), V(187), 
  5918 ;; Auto vars:     Size  Location     Type
  5919 ;;		None
  5920 ;; Return value:  Size  Location     Type
  5921 ;;                  1  [STACK] void 
  5922 ;; Registers used:
  5923 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5924 ;; Tracked objects:
  5925 ;;		On entry : 3F/0
  5926 ;;		On exit  : 3F/3B
  5927 ;;		Unchanged: 0/0
  5928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5932 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5933 ;;Total ram usage:        0 bytes
  5934 ;; Hardware stack levels used:    1
  5935 ;; Hardware stack levels required when called:   16
  5936 ;; This function calls:
  5937 ;;		_eaDogM_WriteString
  5938 ;;		_send_lcd_cmd_dma
  5939 ;; This function is called by:
  5940 ;;		_update_lcd
  5941 ;;		_vterm_dump
  5942 ;; This function uses a reentrant model
  5943 ;;
  5944                           
  5945                           	psect	text27
  5946  017DD0                     __ptext27:
  5947                           	opt callstack 0
  5948  017DD0                     _eaDogM_WriteStringAtPos:
  5949                           	opt callstack 13
  5950                           
  5951                           ;eadog.c: 252: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 253: {;eadog.c: 254:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  5952                           ;stkvar	_c @ sp[(0)+-2]
  5953                           
  5954                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5955                           ;incstack = 0
  5956  017DD0  0EFE               	movlw	-2
  5957  017DD2  006F FF8C  F03D    	movff	plusw1,btemp+11
  5958                           
  5959                           ;stkvar	_r @ sp[(0)+-1]
  5960  017DD8  0EFF               	movlw	-1
  5961  017DDA  50E3               	movf	plusw1,w,c
  5962  017DDC  0D10               	mullw	16
  5963  017DDE  50F3               	movf	243,w,c
  5964  017DE0  243D               	addwf	(btemp+11)^0,w,c
  5965  017DE2  0F80               	addlw	128
  5966  017DE4  6EE6               	movwf	postinc1,c
  5967  017DE6  ECEB  F0BC         	call	_send_lcd_cmd_dma	;wreg free
  5968                           
  5969                           ;eadog.c: 255:  eaDogM_WriteString(strPtr);
  5970                           ;stkvar	_strPtr @ sp[(0)+-4]
  5971  017DEA  0EFC               	movlw	-4
  5972  017DEC  006F FF8F FFE6     	movff	plusw1,postinc1
  5973  017DF2  006F FF8F FFE6     	movff	plusw1,postinc1
  5974  017DF8  ECD7  F0B7         	call	_eaDogM_WriteString	;wreg free
  5975                           
  5976                           ; BSR set to: 59
  5977                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
  5978  017DFC  52E5               	movf	postdec1,f,c
  5979  017DFE  52E5               	movf	postdec1,f,c
  5980  017E00  52E5               	movf	postdec1,f,c
  5981  017E02  52E5               	movf	postdec1,f,c
  5982  017E04  0012               	return		;funcret
  5983  017E06                     __end_of_eaDogM_WriteStringAtPos:
  5984                           	opt callstack 0
  5985                           
  5986 ;; *************** function _send_lcd_cmd_dma *****************
  5987 ;; Defined at:
  5988 ;;		line 205 in file "eadog.c"
  5989 ;; Parameters:    Size  Location     Type
  5990 ;;  strPtr          1  [STACK] unsigned char 
  5991 ;; Auto vars:     Size  Location     Type
  5992 ;;		None
  5993 ;; Return value:  Size  Location     Type
  5994 ;;                  1  [STACK] void 
  5995 ;; Registers used:
  5996 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5997 ;; Tracked objects:
  5998 ;;		On entry : 0/3D
  5999 ;;		On exit  : 3F/0
  6000 ;;		Unchanged: 0/0
  6001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6005 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6006 ;;Total ram usage:        0 bytes
  6007 ;; Hardware stack levels used:    1
  6008 ;; Hardware stack levels required when called:   15
  6009 ;; This function calls:
  6010 ;;		_printf
  6011 ;;		_ringBufS_flush
  6012 ;;		_start_lcd
  6013 ;;		_wait_lcd_done
  6014 ;;		_wait_lcd_set
  6015 ;; This function is called by:
  6016 ;;		_eaDogM_WriteCommand
  6017 ;;		_eaDogM_WriteStringAtPos
  6018 ;; This function uses a reentrant model
  6019 ;;
  6020                           
  6021                           	psect	text28
  6022  0179D6                     __ptext28:
  6023                           	opt callstack 0
  6024  0179D6                     _send_lcd_cmd_dma:
  6025                           	opt callstack 13
  6026                           
  6027                           ;eadog.c: 205: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 206: {;eadog.c: 208:  wait
      +                          _lcd_set();
  6028                           
  6029                           ; BSR set to: 59
  6030                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6031                           ;incstack = 0
  6032  0179D6  EC16  F0C3         	call	_wait_lcd_set	;wreg free
  6033                           
  6034                           ; BSR set to: 0
  6035                           ;eadog.c: 210:  ringBufS_flush(spi_link.tx1a, 0);
  6036  0179DA  0E00               	movlw	0
  6037  0179DC  6EE6               	movwf	postinc1,c
  6038  0179DE  0060  F29F  FFE6   	movff	_spi_link+6,postinc1
  6039  0179E4  0060  F2A3  FFE6   	movff	_spi_link+7,postinc1
  6040  0179EA  ECC7  F0B8         	call	_ringBufS_flush	;wreg free
  6041  0179EE  92BC               	bcf	188,1,c	;volatile
  6042  0179F0  94BC               	bcf	188,2,c	;volatile
  6043                           
  6044                           ;eadog.c: 213:  DMA1CON0bits.EN = 0;
  6045  0179F2  013B               	movlb	59	; () banked
  6046  0179F4  9FFC               	bcf	252,7,b	;volatile
  6047                           
  6048                           ; BSR set to: 59
  6049                           ;eadog.c: 214:  DMA1SSZ = 1;
  6050  0179F6  0E00               	movlw	0
  6051  0179F8  6FF8               	movwf	248,b	;volatile
  6052  0179FA  0E01               	movlw	1
  6053  0179FC  6FF7               	movwf	247,b	;volatile
  6054                           
  6055                           ; BSR set to: 59
  6056                           ;eadog.c: 215:  DMA1CON0bits.EN = 1;
  6057  0179FE  8FFC               	bsf	252,7,b	;volatile
  6058                           
  6059                           ; BSR set to: 59
  6060                           ;eadog.c: 216:  printf("%c", strPtr);
  6061                           ;stkvar	_strPtr @ sp[(0)+-1]
  6062  017A00  0EFF               	movlw	-1
  6063  017A02  50E3               	movf	plusw1,w,c
  6064  017A04  6EE6               	movwf	postinc1,c
  6065  017A06  0E00               	movlw	0
  6066  017A08  6EE6               	movwf	postinc1,c
  6067  017A0A  0EF8               	movlw	low STR_13
  6068  017A0C  6EE6               	movwf	postinc1,c
  6069  017A0E  0EFF               	movlw	high STR_13
  6070  017A10  6EE6               	movwf	postinc1,c
  6071  017A12  0E04               	movlw	4
  6072  017A14  6EE6               	movwf	postinc1,c
  6073  017A16  EC04  F0BC         	call	_printf	;wreg free
  6074                           
  6075                           ;eadog.c: 217:  start_lcd();
  6076  017A1A  EC19  F0C3         	call	_start_lcd	;wreg free
  6077                           
  6078                           ; BSR set to: 59
  6079                           ;eadog.c: 218:  wait_lcd_done();
  6080  017A1E  EC34  F0C2         	call	_wait_lcd_done	;wreg free
  6081                           
  6082                           ; BSR set to: 0
  6083  017A22  82BC               	bsf	188,1,c	;volatile
  6084                           
  6085                           ; BSR set to: 0
  6086                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  6087  017A24  52E5               	movf	postdec1,f,c
  6088  017A26  0012               	return		;funcret
  6089  017A28                     __end_of_send_lcd_cmd_dma:
  6090                           	opt callstack 0
  6091                           
  6092 ;; *************** function _wait_lcd_done *****************
  6093 ;; Defined at:
  6094 ;;		line 141 in file "eadog.c"
  6095 ;; Parameters:    Size  Location     Type
  6096 ;;		None
  6097 ;; Auto vars:     Size  Location     Type
  6098 ;;		None
  6099 ;; Return value:  Size  Location     Type
  6100 ;;                  1  [STACK] void 
  6101 ;; Registers used:
  6102 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6103 ;; Tracked objects:
  6104 ;;		On entry : 0/1
  6105 ;;		On exit  : 3F/0
  6106 ;;		Unchanged: 0/0
  6107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6112 ;;Total ram usage:        0 bytes
  6113 ;; Hardware stack levels used:    1
  6114 ;; Hardware stack levels required when called:    7
  6115 ;; This function calls:
  6116 ;;		_wdtdelay
  6117 ;; This function is called by:
  6118 ;;		_send_lcd_cmd_dma
  6119 ;;		_update_lcd
  6120 ;;		_vterm_dump
  6121 ;; This function uses a reentrant model
  6122 ;;
  6123                           
  6124                           	psect	text29
  6125  018468                     __ptext29:
  6126                           	opt callstack 0
  6127  018468                     _wait_lcd_done:
  6128                           	opt callstack 22
  6129                           
  6130                           ;eadog.c: 143:  while (spi_link.LCD_DATA);
  6131                           
  6132                           ; BSR set to: 0
  6133                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6134                           ;incstack = 0
  6135  018468  0100               	movlb	0	; () banked
  6136  01846A  B7A1               	btfsc	_spi_link& (0+255),3,b	;volatile
  6137  01846C  D7FD               	goto	_wait_lcd_done
  6138                           
  6139                           ; BSR set to: 0
  6140                           ;eadog.c: 144:  wdtdelay(50);
  6141  01846E  0E32               	movlw	50
  6142  018470  6EE6               	movwf	postinc1,c
  6143  018472  0E00               	movlw	0
  6144  018474  6EE6               	movwf	postinc1,c
  6145  018476  0E00               	movlw	0
  6146  018478  6EE6               	movwf	postinc1,c
  6147  01847A  0E00               	movlw	0
  6148  01847C  6EE6               	movwf	postinc1,c
  6149  01847E  EC64  F0BC         	call	_wdtdelay	;wreg free
  6150                           
  6151                           ; BSR set to: 0
  6152                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  6153  018482  0012               	return		;funcret
  6154  018484                     __end_of_wait_lcd_done:
  6155                           	opt callstack 0
  6156                           
  6157 ;; *************** function _wdtdelay *****************
  6158 ;; Defined at:
  6159 ;;		line 22 in file "eadog.c"
  6160 ;; Parameters:    Size  Location     Type
  6161 ;;  delay           4  [STACK] const unsigned long 
  6162 ;; Auto vars:     Size  Location     Type
  6163 ;;		None
  6164 ;; Return value:  Size  Location     Type
  6165 ;;                  1  [STACK] void 
  6166 ;; Registers used:
  6167 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6168 ;; Tracked objects:
  6169 ;;		On entry : 0/0
  6170 ;;		On exit  : 3F/0
  6171 ;;		Unchanged: 0/0
  6172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6177 ;;Total ram usage:        0 bytes
  6178 ;; Hardware stack levels used:    1
  6179 ;; Hardware stack levels required when called:    6
  6180 ;; This function calls:
  6181 ;;		Nothing
  6182 ;; This function is called by:
  6183 ;;		_init_display
  6184 ;;		_send_lcd_cmd
  6185 ;;		_send_lcd_cmd_long
  6186 ;;		_wait_lcd_done
  6187 ;; This function uses a reentrant model
  6188 ;;
  6189                           
  6190                           	psect	text30
  6191  0178C8                     __ptext30:
  6192                           	opt callstack 0
  6193  0178C8                     _wdtdelay:
  6194                           	opt callstack 22
  6195                           
  6196                           ;eadog.c: 22: void wdtdelay(const uint32_t delay);eadog.c: 23: {;eadog.c: 24:  static ui
      +                          nt32_t dcount;;eadog.c: 26:  for (dcount = 0; dcount <= delay; dcount++) {
  6197                           
  6198                           ; BSR set to: 0
  6199                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6200                           ;incstack = 0
  6201  0178C8  0100               	movlb	0	; () banked
  6202  0178CA  6BB9               	clrf	wdtdelay@dcount& (0+255),b
  6203  0178CC  6BBA               	clrf	(wdtdelay@dcount+1)& (0+255),b
  6204  0178CE  6BBB               	clrf	(wdtdelay@dcount+2)& (0+255),b
  6205  0178D0  6BBC               	clrf	(wdtdelay@dcount+3)& (0+255),b
  6206  0178D2                     l1335:
  6207                           
  6208                           ; BSR set to: 0
  6209                           ;eadog.c: 27:   __nop();
  6210  0178D2  F000               	nop	
  6211  0178D4  0004               	clrwdt		;# 
  6212                           
  6213                           ;eadog.c: 29:  };
  6214  0178D6  0E01               	movlw	1
  6215  0178D8  0100               	movlb	0	; () banked
  6216  0178DA  27B9               	addwf	wdtdelay@dcount& (0+255),f,b
  6217  0178DC  0E00               	movlw	0
  6218  0178DE  23BA               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  6219  0178E0  23BB               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  6220  0178E2  23BC               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  6221                           
  6222                           ; BSR set to: 0
  6223                           ;stkvar	_delay @ sp[(0)+-4]
  6224  0178E4  0EFC               	movlw	-4
  6225  0178E6  006F FF8C  F032    	movff	plusw1,btemp
  6226  0178EC  51B9               	movf	wdtdelay@dcount& (0+255),w,b
  6227  0178EE  5C32               	subwf	btemp^0,w,c
  6228  0178F0  0EFD               	movlw	-3
  6229  0178F2  006F FF8C  F032    	movff	plusw1,btemp
  6230  0178F8  51BA               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  6231  0178FA  5832               	subwfb	btemp^0,w,c
  6232  0178FC  0EFE               	movlw	-2
  6233  0178FE  006F FF8C  F032    	movff	plusw1,btemp
  6234  017904  51BB               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  6235  017906  5832               	subwfb	btemp^0,w,c
  6236  017908  0EFF               	movlw	-1
  6237  01790A  006F FF8C  F032    	movff	plusw1,btemp
  6238  017910  51BC               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  6239  017912  5832               	subwfb	btemp^0,w,c
  6240  017914  B0D8               	btfsc	status,0,c
  6241  017916  D7DD               	goto	l1335
  6242                           
  6243                           ; BSR set to: 0
  6244                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  6245  017918  52E5               	movf	postdec1,f,c
  6246  01791A  52E5               	movf	postdec1,f,c
  6247  01791C  52E5               	movf	postdec1,f,c
  6248  01791E  52E5               	movf	postdec1,f,c
  6249  017920  0012               	return		;funcret
  6250  017922                     __end_of_wdtdelay:
  6251                           	opt callstack 0
  6252                           
  6253 ;; *************** function _eaDogM_WriteString *****************
  6254 ;; Defined at:
  6255 ;;		line 184 in file "eadog.c"
  6256 ;; Parameters:    Size  Location     Type
  6257 ;;  strPtr          2  [STACK] PTR unsigned char 
  6258 ;;		 -> D.lcd(216), D(218), V(187), 
  6259 ;; Auto vars:     Size  Location     Type
  6260 ;;		None
  6261 ;; Return value:  Size  Location     Type
  6262 ;;                  1  [STACK] void 
  6263 ;; Registers used:
  6264 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6265 ;; Tracked objects:
  6266 ;;		On entry : 3F/0
  6267 ;;		On exit  : 3F/3B
  6268 ;;		Unchanged: 0/0
  6269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6274 ;;Total ram usage:        0 bytes
  6275 ;; Hardware stack levels used:    1
  6276 ;; Hardware stack levels required when called:   15
  6277 ;; This function calls:
  6278 ;;		_printf
  6279 ;;		_ringBufS_flush
  6280 ;;		_start_lcd
  6281 ;;		_strlen
  6282 ;;		_wait_lcd_set
  6283 ;; This function is called by:
  6284 ;;		_eaDogM_WriteStringAtPos
  6285 ;; This function uses a reentrant model
  6286 ;;
  6287                           
  6288                           	psect	text31
  6289  016FAE                     __ptext31:
  6290                           	opt callstack 0
  6291  016FAE                     _eaDogM_WriteString:
  6292                           	opt callstack 13
  6293                           
  6294                           ;eadog.c: 184: void eaDogM_WriteString(char *strPtr);eadog.c: 185: {;eadog.c: 187:  wait
      +                          _lcd_set();
  6295                           
  6296                           ; BSR set to: 0
  6297                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6298                           ;incstack = 0
  6299  016FAE  EC16  F0C3         	call	_wait_lcd_set	;wreg free
  6300                           
  6301                           ; BSR set to: 0
  6302                           ;eadog.c: 189:  ringBufS_flush(spi_link.tx1a, 0);
  6303  016FB2  0E00               	movlw	0
  6304  016FB4  6EE6               	movwf	postinc1,c
  6305  016FB6  0060  F29F  FFE6   	movff	_spi_link+6,postinc1
  6306  016FBC  0060  F2A3  FFE6   	movff	_spi_link+7,postinc1
  6307  016FC2  ECC7  F0B8         	call	_ringBufS_flush	;wreg free
  6308  016FC6  94BC               	bcf	188,2,c	;volatile
  6309                           
  6310                           ;eadog.c: 191:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  6311                           ;stkvar	_strPtr @ sp[(0)+-2]
  6312  016FC8  0EFE               	movlw	-2
  6313  016FCA  006F FF8F FFE6     	movff	plusw1,postinc1
  6314  016FD0  006F FF8F FFE6     	movff	plusw1,postinc1
  6315  016FD6  EC2A  F0B8         	call	_strlen	;wreg free
  6316  016FDA  5033               	movf	(btemp+1)^0,w,c
  6317  016FDC  E104               	bnz	u12120
  6318  016FDE  0E41               	movlw	65
  6319  016FE0  5C32               	subwf	btemp^0,w,c
  6320  016FE2  A0D8               	btfss	status,0,c
  6321  016FE4  D010               	goto	l11045
  6322  016FE6                     u12120:
  6323                           
  6324                           ;stkvar	_strPtr @ sp[(0)+-2]
  6325  016FE6  0EFE               	movlw	-2
  6326  016FE8  006F FF8C  F03C    	movff	plusw1,btemp+10
  6327  016FEE  0EFF               	movlw	-1
  6328  016FF0  006F FF8C  F03D    	movff	plusw1,btemp+11
  6329  016FF6  0E40               	movlw	64
  6330  016FF8  243C               	addwf	(btemp+10)^0,w,c
  6331  016FFA  6ED9               	movwf	fsr2l,c
  6332  016FFC  0E00               	movlw	0
  6333  016FFE  203D               	addwfc	(btemp+11)^0,w,c
  6334  017000  6EDA               	movwf	fsr2h,c
  6335  017002  0E00               	movlw	0
  6336  017004  6EDF               	movwf	indf2,c
  6337  017006                     l11045:
  6338                           
  6339                           ;eadog.c: 192:  DMA1CON0bits.EN = 0;
  6340  017006  013B               	movlb	59	; () banked
  6341  017008  9FFC               	bcf	252,7,b	;volatile
  6342                           
  6343                           ; BSR set to: 59
  6344                           ;eadog.c: 193:  DMA1SSZ = strlen(strPtr);
  6345                           ;stkvar	_strPtr @ sp[(0)+-2]
  6346  01700A  0EFE               	movlw	-2
  6347  01700C  006F FF8F FFE6     	movff	plusw1,postinc1
  6348  017012  006F FF8F FFE6     	movff	plusw1,postinc1
  6349  017018  EC2A  F0B8         	call	_strlen	;wreg free
  6350  01701C  0060  F0CB  FBF7   	movff	btemp,15351	;volatile
  6351  017022  0060  F0CF  FBF8   	movff	btemp+1,15352	;volatile
  6352                           
  6353                           ;eadog.c: 194:  DMA1CON0bits.EN = 1;
  6354  017028  013B               	movlb	59	; () banked
  6355  01702A  8FFC               	bsf	252,7,b	;volatile
  6356                           
  6357                           ; BSR set to: 59
  6358                           ;eadog.c: 195:  printf("%s", strPtr);
  6359                           ;stkvar	_strPtr @ sp[(0)+-2]
  6360  01702C  0EFE               	movlw	-2
  6361  01702E  006F FF8F FFE6     	movff	plusw1,postinc1
  6362  017034  006F FF8F FFE6     	movff	plusw1,postinc1
  6363  01703A  0EFB               	movlw	low STR_12
  6364  01703C  6EE6               	movwf	postinc1,c
  6365  01703E  0EFF               	movlw	high STR_12
  6366  017040  6EE6               	movwf	postinc1,c
  6367  017042  0E04               	movlw	4
  6368  017044  6EE6               	movwf	postinc1,c
  6369  017046  EC04  F0BC         	call	_printf	;wreg free
  6370                           
  6371                           ;eadog.c: 196:  start_lcd();
  6372  01704A  EC19  F0C3         	call	_start_lcd	;wreg free
  6373                           
  6374                           ; BSR set to: 59
  6375                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
  6376  01704E  52E5               	movf	postdec1,f,c
  6377  017050  52E5               	movf	postdec1,f,c
  6378  017052  0012               	return		;funcret
  6379  017054                     __end_of_eaDogM_WriteString:
  6380                           	opt callstack 0
  6381                           
  6382 ;; *************** function _wait_lcd_set *****************
  6383 ;; Defined at:
  6384 ;;		line 131 in file "eadog.c"
  6385 ;; Parameters:    Size  Location     Type
  6386 ;;		None
  6387 ;; Auto vars:     Size  Location     Type
  6388 ;;		None
  6389 ;; Return value:  Size  Location     Type
  6390 ;;                  1  [STACK] void 
  6391 ;; Registers used:
  6392 ;;		None
  6393 ;; Tracked objects:
  6394 ;;		On entry : 0/3D
  6395 ;;		On exit  : 3F/0
  6396 ;;		Unchanged: 0/0
  6397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6401 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6402 ;;Total ram usage:        0 bytes
  6403 ;; Hardware stack levels used:    1
  6404 ;; Hardware stack levels required when called:    6
  6405 ;; This function calls:
  6406 ;;		Nothing
  6407 ;; This function is called by:
  6408 ;;		_eaDogM_WriteString
  6409 ;;		_send_lcd_cmd_dma
  6410 ;; This function uses a reentrant model
  6411 ;;
  6412                           
  6413                           	psect	text32
  6414  01862C                     __ptext32:
  6415                           	opt callstack 0
  6416  01862C                     _wait_lcd_set:
  6417                           	opt callstack 21
  6418                           
  6419                           ;eadog.c: 133:  spi_link.LCD_DATA = 1;
  6420                           
  6421                           ; BSR set to: 59
  6422                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6423                           ;incstack = 0
  6424  01862C  0100               	movlb	0	; () banked
  6425  01862E  87A1               	bsf	_spi_link& (0+255),3,b	;volatile
  6426                           
  6427                           ; BSR set to: 0
  6428                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  6429  018630  0012               	return		;funcret
  6430  018632                     __end_of_wait_lcd_set:
  6431                           	opt callstack 0
  6432                           
  6433 ;; *************** function _start_lcd *****************
  6434 ;; Defined at:
  6435 ;;		line 126 in file "eadog.c"
  6436 ;; Parameters:    Size  Location     Type
  6437 ;;		None
  6438 ;; Auto vars:     Size  Location     Type
  6439 ;;		None
  6440 ;; Return value:  Size  Location     Type
  6441 ;;                  1  [STACK] void 
  6442 ;; Registers used:
  6443 ;;		None
  6444 ;; Tracked objects:
  6445 ;;		On entry : 0/3B
  6446 ;;		On exit  : 3F/3B
  6447 ;;		Unchanged: 0/0
  6448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6453 ;;Total ram usage:        0 bytes
  6454 ;; Hardware stack levels used:    1
  6455 ;; Hardware stack levels required when called:    6
  6456 ;; This function calls:
  6457 ;;		Nothing
  6458 ;; This function is called by:
  6459 ;;		_eaDogM_WriteString
  6460 ;;		_send_lcd_cmd_dma
  6461 ;; This function uses a reentrant model
  6462 ;;
  6463                           
  6464                           	psect	text33
  6465  018632                     __ptext33:
  6466                           	opt callstack 0
  6467  018632                     _start_lcd:
  6468                           	opt callstack 21
  6469                           
  6470                           ;eadog.c: 128:  DMA1CON0bits.DMA1SIRQEN = 1;
  6471                           
  6472                           ; BSR set to: 0
  6473                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6474                           ;incstack = 0
  6475  018632  013B               	movlb	59	; () banked
  6476  018634  8DFC               	bsf	252,6,b	;volatile
  6477                           
  6478                           ; BSR set to: 59
  6479                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  6480  018636  0012               	return		;funcret
  6481  018638                     __end_of_start_lcd:
  6482                           	opt callstack 0
  6483                           
  6484 ;; *************** function _ringBufS_flush *****************
  6485 ;; Defined at:
  6486 ;;		line 76 in file "ringbufs.c"
  6487 ;; Parameters:    Size  Location     Type
  6488 ;;  _this           2  [STACK] PTR struct ringBufS_t
  6489 ;;		 -> ring_buf1(67), 
  6490 ;;  clearBuffer     1  [STACK] const char 
  6491 ;; Auto vars:     Size  Location     Type
  6492 ;;		None
  6493 ;; Return value:  Size  Location     Type
  6494 ;;                  1  [STACK] void 
  6495 ;; Registers used:
  6496 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6497 ;; Tracked objects:
  6498 ;;		On entry : 3F/0
  6499 ;;		On exit  : 0/0
  6500 ;;		Unchanged: 0/0
  6501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6505 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6506 ;;Total ram usage:        0 bytes
  6507 ;; Hardware stack levels used:    1
  6508 ;; Hardware stack levels required when called:    7
  6509 ;; This function calls:
  6510 ;;		_memset
  6511 ;; This function is called by:
  6512 ;;		_eaDogM_WriteString
  6513 ;;		_send_lcd_cmd_dma
  6514 ;; This function uses a reentrant model
  6515 ;;
  6516                           
  6517                           	psect	text34
  6518  01718E                     __ptext34:
  6519                           	opt callstack 0
  6520  01718E                     _ringBufS_flush:
  6521                           	opt callstack 20
  6522                           
  6523                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  6524                           ;stkvar	__this @ sp[(0)+-2]
  6525                           
  6526                           ; BSR set to: 59
  6527                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6528                           ;incstack = 0
  6529  01718E  0EFE               	movlw	-2
  6530  017190  006F FF8C  F03C    	movff	plusw1,btemp+10
  6531  017196  0EFF               	movlw	-1
  6532  017198  006F FF8C  F03D    	movff	plusw1,btemp+11
  6533  01719E  0E42               	movlw	66
  6534  0171A0  243C               	addwf	(btemp+10)^0,w,c
  6535  0171A2  6ED9               	movwf	fsr2l,c
  6536  0171A4  0E00               	movlw	0
  6537  0171A6  203D               	addwfc	(btemp+11)^0,w,c
  6538  0171A8  6EDA               	movwf	fsr2h,c
  6539  0171AA  0E00               	movlw	0
  6540  0171AC  6EDF               	movwf	indf2,c
  6541                           
  6542                           ;ringbufs.c: 79:  _this->head = 0;
  6543                           ;stkvar	__this @ sp[(0)+-2]
  6544  0171AE  0EFE               	movlw	-2
  6545  0171B0  006F FF8C  F03C    	movff	plusw1,btemp+10
  6546  0171B6  0EFF               	movlw	-1
  6547  0171B8  006F FF8C  F03D    	movff	plusw1,btemp+11
  6548  0171BE  0E40               	movlw	64
  6549  0171C0  243C               	addwf	(btemp+10)^0,w,c
  6550  0171C2  6ED9               	movwf	fsr2l,c
  6551  0171C4  0E00               	movlw	0
  6552  0171C6  203D               	addwfc	(btemp+11)^0,w,c
  6553  0171C8  6EDA               	movwf	fsr2h,c
  6554  0171CA  0E00               	movlw	0
  6555  0171CC  6EDF               	movwf	indf2,c
  6556                           
  6557                           ;ringbufs.c: 80:  _this->tail = 0;
  6558                           ;stkvar	__this @ sp[(0)+-2]
  6559  0171CE  0EFE               	movlw	-2
  6560  0171D0  006F FF8C  F03C    	movff	plusw1,btemp+10
  6561  0171D6  0EFF               	movlw	-1
  6562  0171D8  006F FF8C  F03D    	movff	plusw1,btemp+11
  6563  0171DE  0E41               	movlw	65
  6564  0171E0  243C               	addwf	(btemp+10)^0,w,c
  6565  0171E2  6ED9               	movwf	fsr2l,c
  6566  0171E4  0E00               	movlw	0
  6567  0171E6  203D               	addwfc	(btemp+11)^0,w,c
  6568  0171E8  6EDA               	movwf	fsr2h,c
  6569  0171EA  0E00               	movlw	0
  6570  0171EC  6EDF               	movwf	indf2,c
  6571                           
  6572                           ;ringbufs.c: 81:  if (clearBuffer) {
  6573                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  6574  0171EE  0EFD               	movlw	-3
  6575  0171F0  50E3               	movf	plusw1,w,c
  6576  0171F2  B4D8               	btfsc	status,2,c
  6577  0171F4  D011               	goto	l1475
  6578                           
  6579                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  6580  0171F6  0E40               	movlw	64
  6581  0171F8  6EE6               	movwf	postinc1,c
  6582  0171FA  0E00               	movlw	0
  6583  0171FC  6EE6               	movwf	postinc1,c
  6584  0171FE  0E00               	movlw	0
  6585  017200  6EE6               	movwf	postinc1,c
  6586  017202  0E00               	movlw	0
  6587  017204  6EE6               	movwf	postinc1,c
  6588                           
  6589                           ;stkvar	__this @ sp[(-4)+-2]
  6590  017206  0EFA               	movlw	-6
  6591  017208  006F FF8F FFE6     	movff	plusw1,postinc1
  6592  01720E  006F FF8F FFE6     	movff	plusw1,postinc1
  6593  017214  EC0C  F0A4         	call	_memset	;wreg free
  6594  017218                     l1475:
  6595                           
  6596                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  6597  017218  52E5               	movf	postdec1,f,c
  6598  01721A  52E5               	movf	postdec1,f,c
  6599  01721C  52E5               	movf	postdec1,f,c
  6600  01721E  0012               	return		;funcret
  6601  017220                     __end_of_ringBufS_flush:
  6602                           	opt callstack 0
  6603                           
  6604 ;; *************** function _memset *****************
  6605 ;; Defined at:
  6606 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
  6607 ;; Parameters:    Size  Location     Type
  6608 ;;  dest            2  [STACK] PTR void 
  6609 ;;		 -> ring_buf2(67), ring_buf1(67), 
  6610 ;;  c               2  [STACK] int 
  6611 ;;  n               2  [STACK] unsigned int 
  6612 ;; Auto vars:     Size  Location     Type
  6613 ;;  s               2  [STACK] PTR unsigned char 
  6614 ;;		 -> ring_buf2(67), ring_buf1(67), 
  6615 ;;  k               2  [STACK] unsigned int 
  6616 ;; Return value:  Size  Location     Type
  6617 ;;                  2  [STACK] PTR void 
  6618 ;; Registers used:
  6619 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6620 ;; Tracked objects:
  6621 ;;		On entry : 0/0
  6622 ;;		On exit  : 0/0
  6623 ;;		Unchanged: 0/0
  6624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6629 ;;Total ram usage:        0 bytes
  6630 ;; Hardware stack levels used:    1
  6631 ;; Hardware stack levels required when called:    6
  6632 ;; This function calls:
  6633 ;;		Nothing
  6634 ;; This function is called by:
  6635 ;;		_ringBufS_init
  6636 ;;		_ringBufS_flush
  6637 ;; This function uses a reentrant model
  6638 ;;
  6639                           
  6640                           	psect	text35
  6641  014818                     __ptext35:
  6642                           	opt callstack 0
  6643  014818                     _memset:
  6644                           	opt callstack 0
  6645                           
  6646                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6647  014818  52E6               	movf	postinc1,f,c
  6648  01481A  52E6               	movf	postinc1,f,c
  6649  01481C  52E6               	movf	postinc1,f,c
  6650  01481E  52E6               	movf	postinc1,f,c
  6651                           
  6652                           ;stkvar	_dest @ sp[(-4)+-2]
  6653                           
  6654                           ;incstack = 0
  6655  014820  0EFA               	movlw	-6
  6656  014822  006F FF8C  F03C    	movff	plusw1,btemp+10
  6657  014828  0EFB               	movlw	-5
  6658  01482A  006F FF8C  F03D    	movff	plusw1,btemp+11
  6659                           
  6660                           ;stkvar	_s @ sp[(-4)+0]
  6661  014830  0EFD               	movlw	-3
  6662  014832  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  6663  014838  0EFC               	movlw	-4
  6664  01483A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  6665                           
  6666                           ;stkvar	_n @ sp[(-4)+-6]
  6667  014840  0EF6               	movlw	-10
  6668  014842  006F FF8C  F032    	movff	plusw1,btemp
  6669  014848  0EF7               	movlw	-9
  6670  01484A  50E3               	movf	plusw1,w,c
  6671  01484C  1032               	iorwf	btemp^0,w,c
  6672  01484E  B4D8               	btfsc	status,2,c
  6673  014850  D154               	goto	u12070
  6674                           
  6675                           ;stkvar	_c @ sp[(-4)+-4]
  6676                           ;stkvar	_s @ sp[(-4)+0]
  6677  014852  0EFC               	movlw	-4
  6678  014854  006F FF8F FFD9     	movff	plusw1,fsr2l
  6679  01485A  0EFD               	movlw	-3
  6680  01485C  006F FF8F FFDA     	movff	plusw1,fsr2h
  6681  014862  0EF8               	movlw	-8
  6682  014864  006F FF8F FFDF     	movff	plusw1,indf2
  6683                           
  6684                           ;stkvar	_c @ sp[(-4)+-4]
  6685                           ;stkvar	_n @ sp[(-4)+-6]
  6686                           ;stkvar	_s @ sp[(-4)+0]
  6687  01486A  0EFC               	movlw	-4
  6688  01486C  006F FF8C  F03C    	movff	plusw1,btemp+10
  6689  014872  0EFD               	movlw	-3
  6690  014874  006F FF8C  F03D    	movff	plusw1,btemp+11
  6691  01487A  0EF6               	movlw	-10
  6692  01487C  50E3               	movf	plusw1,w,c
  6693  01487E  263C               	addwf	(btemp+10)^0,f,c
  6694  014880  0EF7               	movlw	-9
  6695  014882  50E3               	movf	plusw1,w,c
  6696  014884  223D               	addwfc	(btemp+11)^0,f,c
  6697  014886  0EFF               	movlw	255
  6698  014888  243C               	addwf	(btemp+10)^0,w,c
  6699  01488A  6ED9               	movwf	fsr2l,c
  6700  01488C  0EFF               	movlw	255
  6701  01488E  203D               	addwfc	(btemp+11)^0,w,c
  6702  014890  6EDA               	movwf	fsr2h,c
  6703  014892  0EF8               	movlw	-8
  6704  014894  006F FF8F FFDF     	movff	plusw1,indf2
  6705                           
  6706                           ;stkvar	_n @ sp[(-4)+-6]
  6707  01489A  0EF7               	movlw	-9
  6708  01489C  50E3               	movf	plusw1,w,c
  6709  01489E  E108               	bnz	l10939
  6710  0148A0  0EF6               	movlw	-10
  6711  0148A2  006F FF8C  F032    	movff	plusw1,btemp
  6712  0148A8  0E03               	movlw	3
  6713  0148AA  5E32               	subwf	btemp^0,f,c
  6714  0148AC  A0D8               	btfss	status,0,c
  6715  0148AE  D125               	goto	u12070
  6716  0148B0                     l10939:
  6717                           
  6718                           ;stkvar	_c @ sp[(-4)+-4]
  6719                           ;stkvar	_s @ sp[(-4)+0]
  6720  0148B0  0EFC               	movlw	-4
  6721  0148B2  006F FF8C  F03C    	movff	plusw1,btemp+10
  6722  0148B8  0EFD               	movlw	-3
  6723  0148BA  006F FF8C  F03D    	movff	plusw1,btemp+11
  6724  0148C0  0E01               	movlw	1
  6725  0148C2  243C               	addwf	(btemp+10)^0,w,c
  6726  0148C4  6ED9               	movwf	fsr2l,c
  6727  0148C6  0E00               	movlw	0
  6728  0148C8  203D               	addwfc	(btemp+11)^0,w,c
  6729  0148CA  6EDA               	movwf	fsr2h,c
  6730  0148CC  0EF8               	movlw	-8
  6731  0148CE  006F FF8F FFDF     	movff	plusw1,indf2
  6732                           
  6733                           ;stkvar	_c @ sp[(-4)+-4]
  6734                           ;stkvar	_s @ sp[(-4)+0]
  6735  0148D4  0EFC               	movlw	-4
  6736  0148D6  006F FF8C  F03C    	movff	plusw1,btemp+10
  6737  0148DC  0EFD               	movlw	-3
  6738  0148DE  006F FF8C  F03D    	movff	plusw1,btemp+11
  6739  0148E4  0E02               	movlw	2
  6740  0148E6  243C               	addwf	(btemp+10)^0,w,c
  6741  0148E8  6ED9               	movwf	fsr2l,c
  6742  0148EA  0E00               	movlw	0
  6743  0148EC  203D               	addwfc	(btemp+11)^0,w,c
  6744  0148EE  6EDA               	movwf	fsr2h,c
  6745  0148F0  0EF8               	movlw	-8
  6746  0148F2  006F FF8F FFDF     	movff	plusw1,indf2
  6747                           
  6748                           ;stkvar	_c @ sp[(-4)+-4]
  6749                           ;stkvar	_n @ sp[(-4)+-6]
  6750                           ;stkvar	_s @ sp[(-4)+0]
  6751  0148F8  0EFC               	movlw	-4
  6752  0148FA  006F FF8C  F03C    	movff	plusw1,btemp+10
  6753  014900  0EFD               	movlw	-3
  6754  014902  006F FF8C  F03D    	movff	plusw1,btemp+11
  6755  014908  0EF6               	movlw	-10
  6756  01490A  50E3               	movf	plusw1,w,c
  6757  01490C  263C               	addwf	(btemp+10)^0,f,c
  6758  01490E  0EF7               	movlw	-9
  6759  014910  50E3               	movf	plusw1,w,c
  6760  014912  223D               	addwfc	(btemp+11)^0,f,c
  6761  014914  0EFE               	movlw	254
  6762  014916  243C               	addwf	(btemp+10)^0,w,c
  6763  014918  6ED9               	movwf	fsr2l,c
  6764  01491A  0EFF               	movlw	255
  6765  01491C  203D               	addwfc	(btemp+11)^0,w,c
  6766  01491E  6EDA               	movwf	fsr2h,c
  6767  014920  0EF8               	movlw	-8
  6768  014922  006F FF8F FFDF     	movff	plusw1,indf2
  6769                           
  6770                           ;stkvar	_c @ sp[(-4)+-4]
  6771                           ;stkvar	_n @ sp[(-4)+-6]
  6772                           ;stkvar	_s @ sp[(-4)+0]
  6773  014928  0EFC               	movlw	-4
  6774  01492A  006F FF8C  F03C    	movff	plusw1,btemp+10
  6775  014930  0EFD               	movlw	-3
  6776  014932  006F FF8C  F03D    	movff	plusw1,btemp+11
  6777  014938  0EF6               	movlw	-10
  6778  01493A  50E3               	movf	plusw1,w,c
  6779  01493C  263C               	addwf	(btemp+10)^0,f,c
  6780  01493E  0EF7               	movlw	-9
  6781  014940  50E3               	movf	plusw1,w,c
  6782  014942  223D               	addwfc	(btemp+11)^0,f,c
  6783  014944  0EFD               	movlw	253
  6784  014946  243C               	addwf	(btemp+10)^0,w,c
  6785  014948  6ED9               	movwf	fsr2l,c
  6786  01494A  0EFF               	movlw	255
  6787  01494C  203D               	addwfc	(btemp+11)^0,w,c
  6788  01494E  6EDA               	movwf	fsr2h,c
  6789  014950  0EF8               	movlw	-8
  6790  014952  006F FF8F FFDF     	movff	plusw1,indf2
  6791                           
  6792                           ;stkvar	_n @ sp[(-4)+-6]
  6793  014958  0EF7               	movlw	-9
  6794  01495A  50E3               	movf	plusw1,w,c
  6795  01495C  E108               	bnz	l10945
  6796  01495E  0EF6               	movlw	-10
  6797  014960  006F FF8C  F032    	movff	plusw1,btemp
  6798  014966  0E07               	movlw	7
  6799  014968  5E32               	subwf	btemp^0,f,c
  6800  01496A  A0D8               	btfss	status,0,c
  6801  01496C  D0C6               	goto	u12070
  6802  01496E                     l10945:
  6803                           
  6804                           ;stkvar	_c @ sp[(-4)+-4]
  6805                           ;stkvar	_s @ sp[(-4)+0]
  6806  01496E  0EFC               	movlw	-4
  6807  014970  006F FF8C  F03C    	movff	plusw1,btemp+10
  6808  014976  0EFD               	movlw	-3
  6809  014978  006F FF8C  F03D    	movff	plusw1,btemp+11
  6810  01497E  0E03               	movlw	3
  6811  014980  243C               	addwf	(btemp+10)^0,w,c
  6812  014982  6ED9               	movwf	fsr2l,c
  6813  014984  0E00               	movlw	0
  6814  014986  203D               	addwfc	(btemp+11)^0,w,c
  6815  014988  6EDA               	movwf	fsr2h,c
  6816  01498A  0EF8               	movlw	-8
  6817  01498C  006F FF8F FFDF     	movff	plusw1,indf2
  6818                           
  6819                           ;stkvar	_c @ sp[(-4)+-4]
  6820                           ;stkvar	_n @ sp[(-4)+-6]
  6821                           ;stkvar	_s @ sp[(-4)+0]
  6822  014992  0EFC               	movlw	-4
  6823  014994  006F FF8C  F03C    	movff	plusw1,btemp+10
  6824  01499A  0EFD               	movlw	-3
  6825  01499C  006F FF8C  F03D    	movff	plusw1,btemp+11
  6826  0149A2  0EF6               	movlw	-10
  6827  0149A4  50E3               	movf	plusw1,w,c
  6828  0149A6  263C               	addwf	(btemp+10)^0,f,c
  6829  0149A8  0EF7               	movlw	-9
  6830  0149AA  50E3               	movf	plusw1,w,c
  6831  0149AC  223D               	addwfc	(btemp+11)^0,f,c
  6832  0149AE  0EFC               	movlw	252
  6833  0149B0  243C               	addwf	(btemp+10)^0,w,c
  6834  0149B2  6ED9               	movwf	fsr2l,c
  6835  0149B4  0EFF               	movlw	255
  6836  0149B6  203D               	addwfc	(btemp+11)^0,w,c
  6837  0149B8  6EDA               	movwf	fsr2h,c
  6838  0149BA  0EF8               	movlw	-8
  6839  0149BC  006F FF8F FFDF     	movff	plusw1,indf2
  6840                           
  6841                           ;stkvar	_n @ sp[(-4)+-6]
  6842  0149C2  0EF7               	movlw	-9
  6843  0149C4  50E3               	movf	plusw1,w,c
  6844  0149C6  E108               	bnz	l10951
  6845  0149C8  0EF6               	movlw	-10
  6846  0149CA  006F FF8C  F032    	movff	plusw1,btemp
  6847  0149D0  0E09               	movlw	9
  6848  0149D2  5E32               	subwf	btemp^0,f,c
  6849  0149D4  A0D8               	btfss	status,0,c
  6850  0149D6  D091               	goto	u12070
  6851  0149D8                     l10951:
  6852                           
  6853                           ;stkvar	_s @ sp[(-4)+0]
  6854  0149D8  0EFC               	movlw	-4
  6855  0149DA  006F FF8C  F03C    	movff	plusw1,btemp+10
  6856  0149E0  1E3C               	comf	(btemp+10)^0,f,c
  6857  0149E2  0EFD               	movlw	-3
  6858  0149E4  006F FF8C  F03D    	movff	plusw1,btemp+11
  6859  0149EA  1E3D               	comf	(btemp+11)^0,f,c
  6860  0149EC  2A3C               	incf	(btemp+10)^0,f,c
  6861  0149EE  B4D8               	btfsc	status,2,c
  6862  0149F0  2A3D               	incf	(btemp+11)^0,f,c
  6863  0149F2  0E03               	movlw	3
  6864  0149F4  163C               	andwf	(btemp+10)^0,f,c
  6865  0149F6  0E00               	movlw	0
  6866  0149F8  163D               	andwf	(btemp+11)^0,f,c
  6867                           
  6868                           ;stkvar	_k @ sp[(-4)+2]
  6869  0149FA  0EFE               	movlw	-2
  6870  0149FC  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  6871  014A02  0EFF               	movlw	-1
  6872  014A04  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  6873                           
  6874                           ;stkvar	_k @ sp[(-4)+2]
  6875                           ;stkvar	_s @ sp[(-4)+0]
  6876  014A0A  0EFC               	movlw	-4
  6877  014A0C  50E3               	movf	plusw1,w,c
  6878  014A0E  6E32               	movwf	btemp^0,c
  6879  014A10  0EFE               	movlw	-2
  6880  014A12  50E3               	movf	plusw1,w,c
  6881  014A14  2632               	addwf	btemp^0,f,c
  6882  014A16  0EFC               	movlw	-4
  6883  014A18  0060  F0CB  FFE3   	movff	btemp,plusw1
  6884  014A1E  0EFD               	movlw	-3
  6885  014A20  50E3               	movf	plusw1,w,c
  6886  014A22  6E32               	movwf	btemp^0,c
  6887  014A24  0EFF               	movlw	-1
  6888  014A26  50E3               	movf	plusw1,w,c
  6889  014A28  2232               	addwfc	btemp^0,f,c
  6890  014A2A  0EFD               	movlw	-3
  6891  014A2C  0060  F0CB  FFE3   	movff	btemp,plusw1
  6892                           
  6893                           ;stkvar	_k @ sp[(-4)+2]
  6894                           ;stkvar	_n @ sp[(-4)+-6]
  6895  014A32  0EF6               	movlw	-10
  6896  014A34  50E3               	movf	plusw1,w,c
  6897  014A36  6E32               	movwf	btemp^0,c
  6898  014A38  0EFE               	movlw	-2
  6899  014A3A  50E3               	movf	plusw1,w,c
  6900  014A3C  5E32               	subwf	btemp^0,f,c
  6901  014A3E  0EF6               	movlw	-10
  6902  014A40  0060  F0CB  FFE3   	movff	btemp,plusw1
  6903  014A46  0EF7               	movlw	-9
  6904  014A48  50E3               	movf	plusw1,w,c
  6905  014A4A  6E32               	movwf	btemp^0,c
  6906  014A4C  0EFF               	movlw	-1
  6907  014A4E  50E3               	movf	plusw1,w,c
  6908  014A50  5A32               	subwfb	btemp^0,f,c
  6909  014A52  0EF7               	movlw	-9
  6910  014A54  0060  F0CB  FFE3   	movff	btemp,plusw1
  6911  014A5A  0EFC               	movlw	252
  6912  014A5C  6E3C               	movwf	(btemp+10)^0,c
  6913  014A5E  0EFF               	movlw	255
  6914  014A60  6E3D               	movwf	(btemp+11)^0,c
  6915                           
  6916                           ;stkvar	_n @ sp[(-4)+-6]
  6917  014A62  0EF6               	movlw	-10
  6918  014A64  006F FF8C  F032    	movff	plusw1,btemp
  6919  014A6A  503C               	movf	(btemp+10)^0,w,c
  6920  014A6C  1632               	andwf	btemp^0,f,c
  6921  014A6E  0EF6               	movlw	-10
  6922  014A70  0060  F0CB  FFE3   	movff	btemp,plusw1
  6923  014A76  0EF7               	movlw	-9
  6924  014A78  006F FF8C  F032    	movff	plusw1,btemp
  6925  014A7E  503D               	movf	(btemp+11)^0,w,c
  6926  014A80  1632               	andwf	btemp^0,f,c
  6927  014A82  0EF7               	movlw	-9
  6928  014A84  D02E               	goto	L5
  6929  014A86                     l10959:
  6930                           
  6931                           ;stkvar	_c @ sp[(-4)+-4]
  6932                           ;stkvar	_s @ sp[(-4)+0]
  6933  014A86  0EFC               	movlw	-4
  6934  014A88  006F FF8F FFD9     	movff	plusw1,fsr2l
  6935  014A8E  0EFD               	movlw	-3
  6936  014A90  006F FF8F FFDA     	movff	plusw1,fsr2h
  6937  014A96  0EF8               	movlw	-8
  6938  014A98  006F FF8F FFDF     	movff	plusw1,indf2
  6939                           
  6940                           ;stkvar	_n @ sp[(-4)+-6]
  6941  014A9E  0EF6               	movlw	-10
  6942  014AA0  006F FF8C  F032    	movff	plusw1,btemp
  6943  014AA6  0E01               	movlw	1
  6944  014AA8  5E32               	subwf	btemp^0,f,c
  6945  014AAA  0EF6               	movlw	-10
  6946  014AAC  0060  F0CB  FFE3   	movff	btemp,plusw1
  6947  014AB2  0EF7               	movlw	-9
  6948  014AB4  006F FF8C  F032    	movff	plusw1,btemp
  6949  014ABA  0E00               	movlw	0
  6950  014ABC  5A32               	subwfb	btemp^0,f,c
  6951  014ABE  0EF7               	movlw	-9
  6952  014AC0  0060  F0CB  FFE3   	movff	btemp,plusw1
  6953                           
  6954                           ;stkvar	_s @ sp[(-4)+0]
  6955  014AC6  0EFC               	movlw	-4
  6956  014AC8  50E3               	movf	plusw1,w,c
  6957  014ACA  0F01               	addlw	1
  6958  014ACC  6E32               	movwf	btemp^0,c
  6959  014ACE  0EFC               	movlw	-4
  6960  014AD0  0060  F0CB  FFE3   	movff	btemp,plusw1
  6961  014AD6  6A32               	clrf	btemp^0,c
  6962  014AD8  0EFD               	movlw	-3
  6963  014ADA  50E3               	movf	plusw1,w,c
  6964  014ADC  2032               	addwfc	btemp^0,w,c
  6965  014ADE  6E32               	movwf	btemp^0,c
  6966  014AE0  0EFD               	movlw	-3
  6967  014AE2                     L5:
  6968  014AE2  0060  F0CB  FFE3   	movff	btemp,plusw1
  6969                           
  6970                           ;stkvar	_n @ sp[(-4)+-6]
  6971  014AE8  0EF6               	movlw	-10
  6972  014AEA  006F FF8C  F032    	movff	plusw1,btemp
  6973  014AF0  0EF7               	movlw	-9
  6974  014AF2  50E3               	movf	plusw1,w,c
  6975  014AF4  1032               	iorwf	btemp^0,w,c
  6976  014AF6  A4D8               	btfss	status,2,c
  6977  014AF8  D7C6               	goto	l10959
  6978  014AFA                     u12070:
  6979                           
  6980                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  6981  014AFA  0EF6               	movlw	246
  6982  014AFC  26E1               	addwf	fsr1l,f,c
  6983  014AFE  0EFF               	movlw	255
  6984  014B00  22E2               	addwfc	fsr1h,f,c
  6985  014B02  0012               	return		;funcret
  6986  014B04                     __end_of_memset:
  6987                           	opt callstack 0
  6988                           
  6989 ;; *************** function _printf *****************
  6990 ;; Defined at:
  6991 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
  6992 ;; Parameters:    Size  Location     Type
  6993 ;;  fmt             2  [STACK] PTR const unsigned char 
  6994 ;;		 -> STR_14(3), STR_13(3), STR_12(3), 
  6995 ;; Auto vars:     Size  Location     Type
  6996 ;;  ap              2  [STACK] PTR void [1]
  6997 ;;		 -> ?_printf(2), ?_sprintf(2), 
  6998 ;;  ret             2    0        int 
  6999 ;; Return value:  Size  Location     Type
  7000 ;;                  2  [STACK] int 
  7001 ;; Registers used:
  7002 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7003 ;; Tracked objects:
  7004 ;;		On entry : 3F/3B
  7005 ;;		On exit  : 0/0
  7006 ;;		Unchanged: 0/0
  7007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7011 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7012 ;;Total ram usage:        0 bytes
  7013 ;; Hardware stack levels used:    1
  7014 ;; Hardware stack levels required when called:   14
  7015 ;; This function calls:
  7016 ;;		_vfprintf
  7017 ;; This function is called by:
  7018 ;;		_eaDogM_WriteString
  7019 ;;		_send_lcd_cmd_dma
  7020 ;; This function uses a reentrant model
  7021 ;;
  7022                           
  7023                           	psect	text36
  7024  017808                     __ptext36:
  7025                           	opt callstack 0
  7026  017808                     _printf:
  7027                           	opt callstack 0
  7028                           
  7029                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7030  017808  52E6               	movf	postinc1,f,c
  7031  01780A  52E6               	movf	postinc1,f,c
  7032                           
  7033                           ;stkvar	?_printf @ sp[(-2)+-3]
  7034                           
  7035                           ;incstack = 0
  7036  01780C  0EFB               	movlw	251
  7037  01780E  24E1               	addwf	fsr1l,w,c
  7038  017810  6E3C               	movwf	(btemp+10)^0,c
  7039  017812  0EFF               	movlw	255
  7040  017814  20E2               	addwfc	fsr1h,w,c
  7041  017816  6E3D               	movwf	(btemp+11)^0,c
  7042                           
  7043                           ;stkvar	_ap @ sp[(-2)+0]
  7044  017818  0EFF               	movlw	-1
  7045  01781A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7046  017820  0EFE               	movlw	-2
  7047  017822  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7048                           
  7049                           ;stkvar	_ap @ sp[(-2)+0]
  7050  017828  0EFE               	movlw	254
  7051  01782A  24E1               	addwf	fsr1l,w,c
  7052  01782C  6E32               	movwf	btemp^0,c
  7053  01782E  0EFF               	movlw	255
  7054  017830  20E2               	addwfc	fsr1h,w,c
  7055  017832  6E33               	movwf	(btemp+1)^0,c
  7056  017834  0060  F0CB  FFE6   	movff	btemp,postinc1
  7057  01783A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  7058                           
  7059                           ;stkvar	_fmt @ sp[(-4)+-3]
  7060  017840  0EF9               	movlw	-7
  7061  017842  006F FF8F FFE6     	movff	plusw1,postinc1
  7062  017848  006F FF8F FFE6     	movff	plusw1,postinc1
  7063  01784E  0E00               	movlw	0
  7064  017850  6EE6               	movwf	postinc1,c
  7065  017852  0E00               	movlw	0
  7066  017854  6EE6               	movwf	postinc1,c
  7067  017856  EC83  F0B7         	call	_vfprintf	;wreg free
  7068                           
  7069                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
  7070  01785A  52E5               	movf	postdec1,f,c
  7071  01785C  52E5               	movf	postdec1,f,c
  7072  01785E  52E5               	movf	postdec1,f,c
  7073  017860  50E7               	movf	indf1,w,c
  7074  017862  5EE1               	subwf	fsr1l,f,c
  7075  017864  0E00               	movlw	0
  7076  017866  5AE2               	subwfb	fsr1h,f,c
  7077  017868  0012               	return		;funcret
  7078  01786A                     __end_of_printf:
  7079                           	opt callstack 0
  7080                           
  7081 ;; *************** function _vfprintf *****************
  7082 ;; Defined at:
  7083 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  7084 ;; Parameters:    Size  Location     Type
  7085 ;;  fp              2  [STACK] PTR struct _IO_FILE
  7086 ;;		 -> f(6), NULL(0), 
  7087 ;;  fmt             2  [STACK] PTR const unsigned char 
  7088 ;;		 -> STR_32(3), STR_31(3), STR_30(19), STR_29(19), 
  7089 ;;		 -> STR_28(19), STR_27(19), STR_26(19), STR_25(19), 
  7090 ;;		 -> STR_24(24), STR_23(15), STR_22(15), STR_21(15), 
  7091 ;;		 -> STR_20(10), STR_19(10), STR_18(19), STR_17(19), 
  7092 ;;		 -> STR_14(3), STR_13(3), STR_12(3), STR_11(17), 
  7093 ;;		 -> STR_10(14), STR_9(14), STR_8(17), STR_6(15), 
  7094 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
  7095 ;;  ap              2  [STACK] PTR PTR void 
  7096 ;;		 -> ap(2), ap(2), 
  7097 ;; Auto vars:     Size  Location     Type
  7098 ;;  cfmt            2  [STACK] PTR unsigned char 
  7099 ;;		 -> STR_32(3), STR_31(3), STR_30(19), STR_29(19), 
  7100 ;;		 -> STR_28(19), STR_27(19), STR_26(19), STR_25(19), 
  7101 ;;		 -> STR_24(24), STR_23(15), STR_22(15), STR_21(15), 
  7102 ;;		 -> STR_20(10), STR_19(10), STR_18(19), STR_17(19), 
  7103 ;;		 -> STR_14(3), STR_13(3), STR_12(3), STR_11(17), 
  7104 ;;		 -> STR_10(14), STR_9(14), STR_8(17), STR_6(15), 
  7105 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
  7106 ;; Return value:  Size  Location     Type
  7107 ;;                  2  [STACK] int 
  7108 ;; Registers used:
  7109 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7110 ;; Tracked objects:
  7111 ;;		On entry : 0/5
  7112 ;;		On exit  : 0/0
  7113 ;;		Unchanged: 0/0
  7114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7118 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7119 ;;Total ram usage:        0 bytes
  7120 ;; Hardware stack levels used:    1
  7121 ;; Hardware stack levels required when called:   13
  7122 ;; This function calls:
  7123 ;;		_vfpfcnvrt
  7124 ;; This function is called by:
  7125 ;;		_sprintf
  7126 ;;		_printf
  7127 ;; This function uses a reentrant model
  7128 ;;
  7129                           
  7130                           	psect	text37
  7131  016F06                     __ptext37:
  7132                           	opt callstack 0
  7133  016F06                     _vfprintf:
  7134                           	opt callstack 0
  7135                           
  7136                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7137  016F06  52E6               	movf	postinc1,f,c
  7138  016F08  52E6               	movf	postinc1,f,c
  7139                           
  7140                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  7141                           ;stkvar	_fmt @ sp[(-2)+-4]
  7142                           
  7143                           ;incstack = 0
  7144  016F0A  0EFA               	movlw	-6
  7145  016F0C  006F FF8C  F03C    	movff	plusw1,btemp+10
  7146  016F12  0EFB               	movlw	-5
  7147  016F14  006F FF8C  F03D    	movff	plusw1,btemp+11
  7148                           
  7149                           ;stkvar	_cfmt @ sp[(-2)+0]
  7150  016F1A  0EFF               	movlw	-1
  7151  016F1C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7152  016F22  0EFE               	movlw	-2
  7153  016F24  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7154                           
  7155                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  7156  016F2A  6A19               	clrf	_nout^0,c
  7157  016F2C  6A1A               	clrf	(_nout+1)^0,c
  7158                           
  7159                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  7160  016F2E  D020               	goto	l10973
  7161  016F30                     l10971:
  7162                           
  7163                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  7164                           ;stkvar	_ap @ sp[(-2)+-6]
  7165  016F30  0EF8               	movlw	-8
  7166  016F32  006F FF8F FFE6     	movff	plusw1,postinc1
  7167  016F38  006F FF8F FFE6     	movff	plusw1,postinc1
  7168                           
  7169                           ;stkvar	_cfmt @ sp[(-4)+0]
  7170  016F3E  0EFC               	movlw	252
  7171  016F40  24E1               	addwf	fsr1l,w,c
  7172  016F42  6E32               	movwf	btemp^0,c
  7173  016F44  0EFF               	movlw	255
  7174  016F46  20E2               	addwfc	fsr1h,w,c
  7175  016F48  6E33               	movwf	(btemp+1)^0,c
  7176  016F4A  0060  F0CB  FFE6   	movff	btemp,postinc1
  7177  016F50  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  7178                           
  7179                           ;stkvar	_fp @ sp[(-6)+-2]
  7180  016F56  0EF8               	movlw	-8
  7181  016F58  006F FF8F FFE6     	movff	plusw1,postinc1
  7182  016F5E  006F FF8F FFE6     	movff	plusw1,postinc1
  7183  016F64  EC22  F089         	call	_vfpfcnvrt	;wreg free
  7184  016F68  5032               	movf	btemp^0,w,c
  7185  016F6A  2619               	addwf	_nout^0,f,c
  7186  016F6C  5033               	movf	(btemp+1)^0,w,c
  7187  016F6E  221A               	addwfc	(_nout+1)^0,f,c
  7188  016F70                     l10973:
  7189                           
  7190                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  7191                           ;stkvar	_cfmt @ sp[(-2)+0]
  7192  016F70  50E1               	movf	fsr1l,w,c
  7193  016F72  0FFE               	addlw	-2
  7194  016F74  6ED9               	movwf	fsr2l,c
  7195  016F76  50E2               	movf	fsr1h,w,c
  7196  016F78  6EDA               	movwf	fsr2h,c
  7197  016F7A  0EFF               	movlw	255
  7198  016F7C  22DA               	addwfc	fsr2h,f,c
  7199  016F7E  006F FF7B FFF6     	movff	postinc2,tblptrl
  7200  016F84  006F FF77 FFF7     	movff	postdec2,tblptrh
  7201  016F8A                     	if	0	;tblptru may be non-zero
  7202  016F8A                     	endif
  7203  016F8A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7204  016F8A  0E00               	movlw	low (__mediumconst shr (0+16))
  7205  016F8C  6EF8               	movwf	tblptru,c
  7206  016F8E                     	endif
  7207  016F8E  0008               	tblrd		*
  7208  016F90  50F5               	movf	tablat,w,c
  7209  016F92  0900               	iorlw	0
  7210  016F94  A4D8               	btfss	status,2,c
  7211  016F96  D7CC               	goto	l10971
  7212                           
  7213                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  7214  016F98  0060  F064  F032   	movff	_nout,btemp
  7215  016F9E  0060  F068  F033   	movff	_nout+1,btemp+1
  7216                           
  7217                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
  7218  016FA4  0EF8               	movlw	248
  7219  016FA6  26E1               	addwf	fsr1l,f,c
  7220  016FA8  0EFF               	movlw	255
  7221  016FAA  22E2               	addwfc	fsr1h,f,c
  7222  016FAC  0012               	return		;funcret
  7223  016FAE                     __end_of_vfprintf:
  7224                           	opt callstack 0
  7225                           
  7226 ;; *************** function _vfpfcnvrt *****************
  7227 ;; Defined at:
  7228 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  7229 ;; Parameters:    Size  Location     Type
  7230 ;;  fp              2  [STACK] PTR struct _IO_FILE
  7231 ;;		 -> f(6), NULL(0), 
  7232 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  7233 ;;		 -> cfmt(2), 
  7234 ;;  ap              2  [STACK] PTR PTR void 
  7235 ;;		 -> ap(2), ap(2), 
  7236 ;; Auto vars:     Size  Location     Type
  7237 ;;  llu             8  [STACK] unsigned long long 
  7238 ;;  ll              8  [STACK] long long 
  7239 ;;  f               4  [STACK] long long 
  7240 ;;  ct              3  [STACK] unsigned char [3]
  7241 ;;  vp              3    0        PTR void 
  7242 ;;  cp              2  [STACK] PTR unsigned char 
  7243 ;;		 -> ?_printf(2), ?_sprintf(2), STR_16(9), STR_15(12), 
  7244 ;;		 -> D.lcd(216), D(218), T(144), STR_7(5), 
  7245 ;;		 -> STR_3(5), V(187), 
  7246 ;;  i               2    0        int 
  7247 ;;  done            2    0        int 
  7248 ;;  c               1  [STACK] unsigned char 
  7249 ;; Return value:  Size  Location     Type
  7250 ;;                  2  [STACK] int 
  7251 ;; Registers used:
  7252 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7253 ;; Tracked objects:
  7254 ;;		On entry : 0/5
  7255 ;;		On exit  : 0/0
  7256 ;;		Unchanged: 0/0
  7257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7262 ;;Total ram usage:        0 bytes
  7263 ;; Hardware stack levels used:    1
  7264 ;; Hardware stack levels required when called:   12
  7265 ;; This function calls:
  7266 ;;		_atoi
  7267 ;;		_ctoa
  7268 ;;		_dtoa
  7269 ;;		_efgtoa
  7270 ;;		_fputc
  7271 ;;		_isdigit
  7272 ;;		_isupper
  7273 ;;		_stoa
  7274 ;;		_strncmp
  7275 ;;		_tolower
  7276 ;;		_xtoa
  7277 ;; This function is called by:
  7278 ;;		_vfprintf
  7279 ;; This function uses a reentrant model
  7280 ;;
  7281                           
  7282                           	psect	text38
  7283  011244                     __ptext38:
  7284                           	opt callstack 0
  7285  011244                     _vfpfcnvrt:
  7286                           	opt callstack 0
  7287                           
  7288                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  7289  011244  0E20               	movlw	32
  7290  011246  26E1               	addwf	fsr1l,f,c
  7291  011248  0E00               	movlw	0
  7292  01124A  22E2               	addwfc	fsr1h,f,c
  7293                           
  7294                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  7295                           ;stkvar	_fmt @ sp[(-32)+-4]
  7296                           
  7297                           ;incstack = 0
  7298  01124C  0EDC               	movlw	-36
  7299  01124E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7300  011254  0EDD               	movlw	-35
  7301  011256  006F FF8F FFDA     	movff	plusw1,fsr2h
  7302  01125C  006F FF7B FFF6     	movff	postinc2,tblptrl
  7303  011262  006F FF77 FFF7     	movff	postdec2,tblptrh
  7304  011268                     	if	0	;tblptru may be non-zero
  7305  011268                     	endif
  7306  011268                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7307  011268  0E00               	movlw	low (__mediumconst shr (0+16))
  7308  01126A  6EF8               	movwf	tblptru,c
  7309  01126C                     	endif
  7310  01126C  0008               	tblrd		*
  7311  01126E  50F5               	movf	tablat,w,c
  7312  011270  0A25               	xorlw	37
  7313  011272  A4D8               	btfss	status,2,c
  7314  011274  EF92  F08E         	goto	l10907
  7315                           
  7316                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  7317                           ;stkvar	_fmt @ sp[(-32)+-4]
  7318  011278  0EDC               	movlw	-36
  7319  01127A  006F FF8F FFD9     	movff	plusw1,fsr2l
  7320  011280  0EDD               	movlw	-35
  7321  011282  006F FF8F FFDA     	movff	plusw1,fsr2h
  7322  011288  2ADE               	incf	postinc2,f,c
  7323  01128A  0E00               	movlw	0
  7324  01128C  22DD               	addwfc	postdec2,f,c
  7325                           
  7326                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  7327  01128E  6A1B               	clrf	_width^0,c
  7328  011290  6A1C               	clrf	(_width+1)^0,c
  7329  011292  6A1F               	clrf	_flags^0,c
  7330  011294  6A20               	clrf	(_flags+1)^0,c
  7331                           
  7332                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  7333  011296  681D               	setf	_prec^0,c
  7334  011298  681E               	setf	(_prec+1)^0,c
  7335                           
  7336                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  7337                           ;stkvar	_fmt @ sp[(-32)+-4]
  7338  01129A  0EDC               	movlw	-36
  7339  01129C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7340  0112A2  0EDD               	movlw	-35
  7341  0112A4  006F FF8F FFDA     	movff	plusw1,fsr2h
  7342  0112AA  006F FF7B FFF6     	movff	postinc2,tblptrl
  7343  0112B0  006F FF77 FFF7     	movff	postdec2,tblptrh
  7344  0112B6                     	if	0	;tblptru may be non-zero
  7345  0112B6                     	endif
  7346  0112B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7347  0112B6  0E00               	movlw	low (__mediumconst shr (0+16))
  7348  0112B8  6EF8               	movwf	tblptru,c
  7349  0112BA                     	endif
  7350  0112BA  0008               	tblrd		*
  7351  0112BC  50F5               	movf	tablat,w,c
  7352  0112BE  0A2A               	xorlw	42
  7353  0112C0  A4D8               	btfss	status,2,c
  7354  0112C2  D031               	goto	l10771
  7355                           
  7356                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  7357                           ;stkvar	_fmt @ sp[(-32)+-4]
  7358  0112C4  0EDC               	movlw	-36
  7359  0112C6  006F FF8F FFD9     	movff	plusw1,fsr2l
  7360  0112CC  0EDD               	movlw	-35
  7361  0112CE  006F FF8F FFDA     	movff	plusw1,fsr2h
  7362  0112D4  2ADE               	incf	postinc2,f,c
  7363  0112D6  0E00               	movlw	0
  7364  0112D8  22DD               	addwfc	postdec2,f,c
  7365                           
  7366                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  7367                           ;stkvar	_ap @ sp[(-32)+-6]
  7368  0112DA  0EDA               	movlw	-38
  7369  0112DC  006F FF8F FFD9     	movff	plusw1,fsr2l
  7370  0112E2  0EDB               	movlw	-37
  7371  0112E4  006F FF8F FFDA     	movff	plusw1,fsr2h
  7372  0112EA  0E02               	movlw	2
  7373  0112EC  5EDE               	subwf	postinc2,f,c
  7374  0112EE  0E00               	movlw	0
  7375  0112F0  5ADD               	subwfb	postdec2,f,c
  7376  0112F2  006F FF78  F03C    	movff	postinc2,btemp+10
  7377  0112F8  006F FF74  F03D    	movff	postdec2,btemp+11
  7378  0112FE  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  7379  011304  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  7380  01130A  006F FF78  F01B    	movff	postinc2,_width
  7381  011310  006F FF74  F01C    	movff	postdec2,_width+1
  7382                           
  7383                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  7384  011316  AE1C               	btfss	(_width+1)^0,7,c
  7385  011318  D066               	goto	u11820
  7386                           
  7387                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
  7388  01131A  801F               	bsf	_flags^0,0,c
  7389                           
  7390                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
  7391  01131C  6C1B               	negf	_width^0,c
  7392  01131E  1E1C               	comf	(_width+1)^0,f,c
  7393  011320  B0D8               	btfsc	status,0,c
  7394  011322  2A1C               	incf	(_width+1)^0,f,c
  7395  011324  D060               	goto	u11820
  7396  011326                     l10771:
  7397                           
  7398                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
  7399                           ;stkvar	_fmt @ sp[(-32)+-4]
  7400  011326  0EDC               	movlw	-36
  7401  011328  006F FF8F FFD9     	movff	plusw1,fsr2l
  7402  01132E  0EDD               	movlw	-35
  7403  011330  006F FF8F FFDA     	movff	plusw1,fsr2h
  7404  011336  006F FF78  F03C    	movff	postinc2,btemp+10
  7405  01133C  006F FF74  F03D    	movff	postdec2,btemp+11
  7406  011342  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  7407  011348  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  7408  01134E  EC21  F0A8         	call	_atoi	;wreg free
  7409  011352  0060  F0C8  F01B   	movff	btemp,_width
  7410  011358  0060  F0CC  F01C   	movff	btemp+1,_width+1
  7411                           
  7412                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7413  01135E  D00B               	goto	l10775
  7414  011360                     l10773:
  7415                           
  7416                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
  7417                           ;stkvar	_fmt @ sp[(-32)+-4]
  7418  011360  0EDC               	movlw	-36
  7419  011362  006F FF8F FFD9     	movff	plusw1,fsr2l
  7420  011368  0EDD               	movlw	-35
  7421  01136A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7422  011370  2ADE               	incf	postinc2,f,c
  7423  011372  0E00               	movlw	0
  7424  011374  22DD               	addwfc	postdec2,f,c
  7425  011376                     l10775:
  7426  011376  0ED0               	movlw	208
  7427  011378  6E3C               	movwf	(btemp+10)^0,c
  7428  01137A  0EFF               	movlw	255
  7429  01137C  6E3D               	movwf	(btemp+11)^0,c
  7430                           
  7431                           ;stkvar	_fmt @ sp[(-32)+-4]
  7432  01137E  0EDC               	movlw	-36
  7433  011380  006F FF8F FFD9     	movff	plusw1,fsr2l
  7434  011386  0EDD               	movlw	-35
  7435  011388  006F FF8F FFDA     	movff	plusw1,fsr2h
  7436  01138E  006F FF7B FFF6     	movff	postinc2,tblptrl
  7437  011394  006F FF77 FFF7     	movff	postdec2,tblptrh
  7438  01139A                     	if	0	;tblptru may be non-zero
  7439  01139A                     	endif
  7440  01139A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7441  01139A  0E00               	movlw	low (__mediumconst shr (0+16))
  7442  01139C  6EF8               	movwf	tblptru,c
  7443  01139E                     	endif
  7444  01139E  0008               	tblrd		*
  7445  0113A0  50F5               	movf	tablat,w,c
  7446  0113A2  6E3A               	movwf	(btemp+8)^0,c
  7447  0113A4  6A3B               	clrf	(btemp+9)^0,c
  7448  0113A6  503C               	movf	(btemp+10)^0,w,c
  7449  0113A8  263A               	addwf	(btemp+8)^0,f,c
  7450  0113AA  503D               	movf	(btemp+11)^0,w,c
  7451  0113AC  223B               	addwfc	(btemp+9)^0,f,c
  7452  0113AE  503B               	movf	(btemp+9)^0,w,c
  7453  0113B0  E106               	bnz	u11800
  7454  0113B2  0E0A               	movlw	10
  7455  0113B4  5C3A               	subwf	(btemp+8)^0,w,c
  7456  0113B6  B0D8               	btfsc	status,0,c
  7457  0113B8  D002               	goto	u11800
  7458  0113BA  0E01               	movlw	1
  7459  0113BC  D001               	goto	u11810
  7460  0113BE                     u11800:
  7461  0113BE  0E00               	movlw	0
  7462  0113C0                     u11810:
  7463  0113C0  6E3C               	movwf	(btemp+10)^0,c
  7464  0113C2  6A3D               	clrf	(btemp+11)^0,c
  7465                           
  7466                           ;stkvar	_vfpfcnvrt$4424 @ sp[(-32)+4]
  7467  0113C4  0EE4               	movlw	-28
  7468  0113C6  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7469  0113CC  0EE5               	movlw	-27
  7470  0113CE  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7471                           
  7472                           ;stkvar	_vfpfcnvrt$4424 @ sp[(-32)+4]
  7473  0113D4  0EE4               	movlw	-28
  7474  0113D6  006F FF8C  F032    	movff	plusw1,btemp
  7475  0113DC  0EE5               	movlw	-27
  7476  0113DE  50E3               	movf	plusw1,w,c
  7477  0113E0  1032               	iorwf	btemp^0,w,c
  7478  0113E2  A4D8               	btfss	status,2,c
  7479  0113E4  D7BD               	goto	l10773
  7480  0113E6                     u11820:
  7481                           
  7482                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
  7483                           ;stkvar	_fmt @ sp[(-32)+-4]
  7484  0113E6  0EDC               	movlw	-36
  7485  0113E8  006F FF8F FFD9     	movff	plusw1,fsr2l
  7486  0113EE  0EDD               	movlw	-35
  7487  0113F0  006F FF8F FFDA     	movff	plusw1,fsr2h
  7488  0113F6  006F FF7B FFF6     	movff	postinc2,tblptrl
  7489  0113FC  006F FF77 FFF7     	movff	postdec2,tblptrh
  7490  011402                     	if	0	;tblptru may be non-zero
  7491  011402                     	endif
  7492  011402                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7493  011402  0E00               	movlw	low (__mediumconst shr (0+16))
  7494  011404  6EF8               	movwf	tblptru,c
  7495  011406                     	endif
  7496  011406  0008               	tblrd		*
  7497  011408  50F5               	movf	tablat,w,c
  7498  01140A  0A2E               	xorlw	46
  7499  01140C  A4D8               	btfss	status,2,c
  7500  01140E  D0AC               	goto	u11870
  7501                           
  7502                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
  7503  011410  6A1D               	clrf	_prec^0,c
  7504  011412  6A1E               	clrf	(_prec+1)^0,c
  7505                           
  7506                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
  7507                           ;stkvar	_fmt @ sp[(-32)+-4]
  7508  011414  0EDC               	movlw	-36
  7509  011416  006F FF8F FFD9     	movff	plusw1,fsr2l
  7510  01141C  0EDD               	movlw	-35
  7511  01141E  006F FF8F FFDA     	movff	plusw1,fsr2h
  7512  011424  2ADE               	incf	postinc2,f,c
  7513  011426  0E00               	movlw	0
  7514  011428  22DD               	addwfc	postdec2,f,c
  7515                           
  7516                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
  7517                           ;stkvar	_fmt @ sp[(-32)+-4]
  7518  01142A  0EDC               	movlw	-36
  7519  01142C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7520  011432  0EDD               	movlw	-35
  7521  011434  006F FF8F FFDA     	movff	plusw1,fsr2h
  7522  01143A  006F FF7B FFF6     	movff	postinc2,tblptrl
  7523  011440  006F FF77 FFF7     	movff	postdec2,tblptrh
  7524  011446                     	if	0	;tblptru may be non-zero
  7525  011446                     	endif
  7526  011446                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7527  011446  0E00               	movlw	low (__mediumconst shr (0+16))
  7528  011448  6EF8               	movwf	tblptru,c
  7529  01144A                     	endif
  7530  01144A  0008               	tblrd		*
  7531  01144C  50F5               	movf	tablat,w,c
  7532  01144E  0A2A               	xorlw	42
  7533  011450  A4D8               	btfss	status,2,c
  7534  011452  D02A               	goto	l10793
  7535                           
  7536                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
  7537                           ;stkvar	_fmt @ sp[(-32)+-4]
  7538  011454  0EDC               	movlw	-36
  7539  011456  006F FF8F FFD9     	movff	plusw1,fsr2l
  7540  01145C  0EDD               	movlw	-35
  7541  01145E  006F FF8F FFDA     	movff	plusw1,fsr2h
  7542  011464  2ADE               	incf	postinc2,f,c
  7543  011466  0E00               	movlw	0
  7544  011468  22DD               	addwfc	postdec2,f,c
  7545                           
  7546                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
  7547                           ;stkvar	_ap @ sp[(-32)+-6]
  7548  01146A  0EDA               	movlw	-38
  7549  01146C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7550  011472  0EDB               	movlw	-37
  7551  011474  006F FF8F FFDA     	movff	plusw1,fsr2h
  7552  01147A  0E02               	movlw	2
  7553  01147C  5EDE               	subwf	postinc2,f,c
  7554  01147E  0E00               	movlw	0
  7555  011480  5ADD               	subwfb	postdec2,f,c
  7556  011482  006F FF78  F03C    	movff	postinc2,btemp+10
  7557  011488  006F FF74  F03D    	movff	postdec2,btemp+11
  7558  01148E  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  7559  011494  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  7560  01149A  006F FF78  F01D    	movff	postinc2,_prec
  7561  0114A0  006F FF74  F01E    	movff	postdec2,_prec+1
  7562                           
  7563                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
  7564  0114A6  D060               	goto	u11870
  7565  0114A8                     l10793:
  7566                           
  7567                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
  7568                           ;stkvar	_fmt @ sp[(-32)+-4]
  7569  0114A8  0EDC               	movlw	-36
  7570  0114AA  006F FF8F FFD9     	movff	plusw1,fsr2l
  7571  0114B0  0EDD               	movlw	-35
  7572  0114B2  006F FF8F FFDA     	movff	plusw1,fsr2h
  7573  0114B8  006F FF78  F03C    	movff	postinc2,btemp+10
  7574  0114BE  006F FF74  F03D    	movff	postdec2,btemp+11
  7575  0114C4  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  7576  0114CA  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  7577  0114D0  EC21  F0A8         	call	_atoi	;wreg free
  7578  0114D4  0060  F0C8  F01D   	movff	btemp,_prec
  7579  0114DA  0060  F0CC  F01E   	movff	btemp+1,_prec+1
  7580                           
  7581                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7582  0114E0  D00B               	goto	l10797
  7583  0114E2                     l10795:
  7584                           
  7585                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
  7586                           ;stkvar	_fmt @ sp[(-32)+-4]
  7587  0114E2  0EDC               	movlw	-36
  7588  0114E4  006F FF8F FFD9     	movff	plusw1,fsr2l
  7589  0114EA  0EDD               	movlw	-35
  7590  0114EC  006F FF8F FFDA     	movff	plusw1,fsr2h
  7591  0114F2  2ADE               	incf	postinc2,f,c
  7592  0114F4  0E00               	movlw	0
  7593  0114F6  22DD               	addwfc	postdec2,f,c
  7594  0114F8                     l10797:
  7595  0114F8  0ED0               	movlw	208
  7596  0114FA  6E3C               	movwf	(btemp+10)^0,c
  7597  0114FC  0EFF               	movlw	255
  7598  0114FE  6E3D               	movwf	(btemp+11)^0,c
  7599                           
  7600                           ;stkvar	_fmt @ sp[(-32)+-4]
  7601  011500  0EDC               	movlw	-36
  7602  011502  006F FF8F FFD9     	movff	plusw1,fsr2l
  7603  011508  0EDD               	movlw	-35
  7604  01150A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7605  011510  006F FF7B FFF6     	movff	postinc2,tblptrl
  7606  011516  006F FF77 FFF7     	movff	postdec2,tblptrh
  7607  01151C                     	if	0	;tblptru may be non-zero
  7608  01151C                     	endif
  7609  01151C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7610  01151C  0E00               	movlw	low (__mediumconst shr (0+16))
  7611  01151E  6EF8               	movwf	tblptru,c
  7612  011520                     	endif
  7613  011520  0008               	tblrd		*
  7614  011522  50F5               	movf	tablat,w,c
  7615  011524  6E3A               	movwf	(btemp+8)^0,c
  7616  011526  6A3B               	clrf	(btemp+9)^0,c
  7617  011528  503C               	movf	(btemp+10)^0,w,c
  7618  01152A  263A               	addwf	(btemp+8)^0,f,c
  7619  01152C  503D               	movf	(btemp+11)^0,w,c
  7620  01152E  223B               	addwfc	(btemp+9)^0,f,c
  7621  011530  503B               	movf	(btemp+9)^0,w,c
  7622  011532  E106               	bnz	u11850
  7623  011534  0E0A               	movlw	10
  7624  011536  5C3A               	subwf	(btemp+8)^0,w,c
  7625  011538  B0D8               	btfsc	status,0,c
  7626  01153A  D002               	goto	u11850
  7627  01153C  0E01               	movlw	1
  7628  01153E  D001               	goto	u11860
  7629  011540                     u11850:
  7630  011540  0E00               	movlw	0
  7631  011542                     u11860:
  7632  011542  6E3C               	movwf	(btemp+10)^0,c
  7633  011544  6A3D               	clrf	(btemp+11)^0,c
  7634                           
  7635                           ;stkvar	_vfpfcnvrt$4425 @ sp[(-32)+0]
  7636  011546  0EE0               	movlw	-32
  7637  011548  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7638  01154E  0EE1               	movlw	-31
  7639  011550  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7640                           
  7641                           ;stkvar	_vfpfcnvrt$4425 @ sp[(-32)+0]
  7642  011556  0EE0               	movlw	-32
  7643  011558  006F FF8C  F032    	movff	plusw1,btemp
  7644  01155E  0EE1               	movlw	-31
  7645  011560  50E3               	movf	plusw1,w,c
  7646  011562  1032               	iorwf	btemp^0,w,c
  7647  011564  A4D8               	btfss	status,2,c
  7648  011566  D7BD               	goto	l10795
  7649  011568                     u11870:
  7650                           
  7651                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
  7652                           ;stkvar	_fmt @ sp[(-32)+-4]
  7653  011568  0EDC               	movlw	-36
  7654  01156A  006F FF8F FFD9     	movff	plusw1,fsr2l
  7655  011570  0EDD               	movlw	-35
  7656  011572  006F FF8F FFDA     	movff	plusw1,fsr2h
  7657  011578  006F FF7B FFF6     	movff	postinc2,tblptrl
  7658  01157E  006F FF77 FFF7     	movff	postdec2,tblptrh
  7659  011584                     	if	0	;tblptru may be non-zero
  7660  011584                     	endif
  7661  011584                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7662  011584  0E00               	movlw	low (__mediumconst shr (0+16))
  7663  011586  6EF8               	movwf	tblptru,c
  7664  011588                     	endif
  7665  011588  0008               	tblrd		*
  7666  01158A  50F5               	movf	tablat,w,c
  7667  01158C  6EE6               	movwf	postinc1,c
  7668  01158E  0E00               	movlw	0
  7669  011590  6EE6               	movwf	postinc1,c
  7670  011592  ECDF  F0B9         	call	_tolower	;wreg free
  7671                           
  7672                           ;stkvar	_ct @ sp[(-32)+26]
  7673  011596  0EFA               	movlw	-6
  7674  011598  0060  F0CB  FFE3   	movff	btemp,plusw1
  7675                           
  7676                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
  7677                           ;stkvar	_ct @ sp[(-32)+26]
  7678  01159E  0EFA               	movlw	-6
  7679  0115A0  50E3               	movf	plusw1,w,c
  7680  0115A2  B4D8               	btfsc	status,2,c
  7681  0115A4  D05B               	goto	l10813
  7682                           
  7683                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
  7684                           ;stkvar	_ct @ sp[(-32)+26]
  7685  0115A6  0EFB               	movlw	251
  7686  0115A8  24E1               	addwf	fsr1l,w,c
  7687  0115AA  6ED9               	movwf	fsr2l,c
  7688  0115AC  0EFF               	movlw	255
  7689  0115AE  20E2               	addwfc	fsr1h,w,c
  7690  0115B0  6EDA               	movwf	fsr2h,c
  7691                           
  7692                           ;stkvar	_fmt @ sp[(-32)+-4]
  7693  0115B2  0EDC               	movlw	-36
  7694  0115B4  006F FF8F FFE9     	movff	plusw1,fsr0l
  7695  0115BA  0EDD               	movlw	-35
  7696  0115BC  006F FF8F FFEA     	movff	plusw1,fsr0h
  7697  0115C2  006F FFB8  F03C    	movff	postinc0,btemp+10
  7698  0115C8  006F FFB4  F03D    	movff	postdec0,btemp+11
  7699  0115CE  0E01               	movlw	1
  7700  0115D0  263C               	addwf	(btemp+10)^0,f,c
  7701  0115D2  0E00               	movlw	0
  7702  0115D4  223D               	addwfc	(btemp+11)^0,f,c
  7703  0115D6  0060  F0F3  FFF6   	movff	btemp+10,tblptrl
  7704  0115DC  0060  F0F7  FFF7   	movff	btemp+11,tblptrh
  7705  0115E2                     	if	0	;tblptru may be non-zero
  7706  0115E2                     	endif
  7707  0115E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7708  0115E2  0E00               	movlw	low (__mediumconst shr (0+16))
  7709  0115E4  6EF8               	movwf	tblptru,c
  7710  0115E6                     	endif
  7711  0115E6  0008               	tblrd		*
  7712  0115E8  50F5               	movf	tablat,w,c
  7713  0115EA  6EE6               	movwf	postinc1,c
  7714  0115EC  0E00               	movlw	0
  7715  0115EE  6EE6               	movwf	postinc1,c
  7716  0115F0  ECDF  F0B9         	call	_tolower	;wreg free
  7717  0115F4  5032               	movf	btemp^0,w,c
  7718  0115F6  6EDF               	movwf	indf2,c
  7719                           
  7720                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
  7721                           ;stkvar	_ct @ sp[(-32)+26]
  7722  0115F8  0EFB               	movlw	251
  7723  0115FA  24E1               	addwf	fsr1l,w,c
  7724  0115FC  6ED9               	movwf	fsr2l,c
  7725  0115FE  0EFF               	movlw	255
  7726  011600  20E2               	addwfc	fsr1h,w,c
  7727  011602  6EDA               	movwf	fsr2h,c
  7728  011604  50DF               	movf	indf2,w,c
  7729  011606  B4D8               	btfsc	status,2,c
  7730  011608  D029               	goto	l10813
  7731                           
  7732                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
  7733                           ;stkvar	_ct @ sp[(-32)+26]
  7734  01160A  0EFC               	movlw	252
  7735  01160C  24E1               	addwf	fsr1l,w,c
  7736  01160E  6ED9               	movwf	fsr2l,c
  7737  011610  0EFF               	movlw	255
  7738  011612  20E2               	addwfc	fsr1h,w,c
  7739  011614  6EDA               	movwf	fsr2h,c
  7740                           
  7741                           ;stkvar	_fmt @ sp[(-32)+-4]
  7742  011616  0EDC               	movlw	-36
  7743  011618  006F FF8F FFE9     	movff	plusw1,fsr0l
  7744  01161E  0EDD               	movlw	-35
  7745  011620  006F FF8F FFEA     	movff	plusw1,fsr0h
  7746  011626  006F FFB8  F03C    	movff	postinc0,btemp+10
  7747  01162C  006F FFB4  F03D    	movff	postdec0,btemp+11
  7748  011632  0E02               	movlw	2
  7749  011634  263C               	addwf	(btemp+10)^0,f,c
  7750  011636  0E00               	movlw	0
  7751  011638  223D               	addwfc	(btemp+11)^0,f,c
  7752  01163A  0060  F0F3  FFF6   	movff	btemp+10,tblptrl
  7753  011640  0060  F0F7  FFF7   	movff	btemp+11,tblptrh
  7754  011646                     	if	0	;tblptru may be non-zero
  7755  011646                     	endif
  7756  011646                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7757  011646  0E00               	movlw	low (__mediumconst shr (0+16))
  7758  011648  6EF8               	movwf	tblptru,c
  7759  01164A                     	endif
  7760  01164A  0008               	tblrd		*
  7761  01164C  50F5               	movf	tablat,w,c
  7762  01164E  6EE6               	movwf	postinc1,c
  7763  011650  0E00               	movlw	0
  7764  011652  6EE6               	movwf	postinc1,c
  7765  011654  ECDF  F0B9         	call	_tolower	;wreg free
  7766  011658  5032               	movf	btemp^0,w,c
  7767  01165A  6EDF               	movwf	indf2,c
  7768  01165C                     l10813:
  7769                           
  7770                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  7771                           ;stkvar	_fmt @ sp[(-32)+-4]
  7772  01165C  0EDC               	movlw	-36
  7773  01165E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7774  011664  0EDD               	movlw	-35
  7775  011666  006F FF8F FFDA     	movff	plusw1,fsr2h
  7776  01166C  006F FF7B FFF6     	movff	postinc2,tblptrl
  7777  011672  006F FF77 FFF7     	movff	postdec2,tblptrh
  7778  011678                     	if	0	;tblptru may be non-zero
  7779  011678                     	endif
  7780  011678                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7781  011678  0E00               	movlw	low (__mediumconst shr (0+16))
  7782  01167A  6EF8               	movwf	tblptru,c
  7783  01167C                     	endif
  7784  01167C  0008               	tblrd		*
  7785  01167E  50F5               	movf	tablat,w,c
  7786  011680  0A63               	xorlw	99
  7787  011682  A4D8               	btfss	status,2,c
  7788  011684  D036               	goto	l10823
  7789                           
  7790                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  7791                           ;stkvar	_fmt @ sp[(-32)+-4]
  7792  011686  0EDC               	movlw	-36
  7793  011688  006F FF8F FFD9     	movff	plusw1,fsr2l
  7794  01168E  0EDD               	movlw	-35
  7795  011690  006F FF8F FFDA     	movff	plusw1,fsr2h
  7796  011696  2ADE               	incf	postinc2,f,c
  7797  011698  0E00               	movlw	0
  7798  01169A  22DD               	addwfc	postdec2,f,c
  7799                           
  7800                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  7801                           ;stkvar	_ap @ sp[(-32)+-6]
  7802  01169C  0EDA               	movlw	-38
  7803  01169E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7804  0116A4  0EDB               	movlw	-37
  7805  0116A6  006F FF8F FFDA     	movff	plusw1,fsr2h
  7806  0116AC  0E02               	movlw	2
  7807  0116AE  5EDE               	subwf	postinc2,f,c
  7808  0116B0  0E00               	movlw	0
  7809  0116B2  5ADD               	subwfb	postdec2,f,c
  7810  0116B4  006F FF78  F03C    	movff	postinc2,btemp+10
  7811  0116BA  006F FF74  F03D    	movff	postdec2,btemp+11
  7812  0116C0  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  7813  0116C6  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  7814  0116CC  50DF               	movf	indf2,w,c
  7815  0116CE  6E3D               	movwf	(btemp+11)^0,c
  7816                           
  7817                           ;stkvar	_c @ sp[(-32)+31]
  7818  0116D0  0EFF               	movlw	-1
  7819  0116D2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7820                           
  7821                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  7822                           ;stkvar	_c @ sp[(-32)+31]
  7823  0116D8  0EFF               	movlw	-1
  7824  0116DA  50E3               	movf	plusw1,w,c
  7825  0116DC  6EE6               	movwf	postinc1,c
  7826                           
  7827                           ;stkvar	_fp @ sp[(-33)+-2]
  7828  0116DE  0EDD               	movlw	-35
  7829  0116E0  006F FF8F FFE6     	movff	plusw1,postinc1
  7830  0116E6  006F FF8F FFE6     	movff	plusw1,postinc1
  7831  0116EC  EC59  F0B9         	call	_ctoa	;wreg free
  7832  0116F0  D343               	goto	l2017
  7833  0116F2                     l10823:
  7834                           
  7835                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  7836                           ;stkvar	_fmt @ sp[(-32)+-4]
  7837  0116F2  0EDC               	movlw	-36
  7838  0116F4  006F FF8F FFD9     	movff	plusw1,fsr2l
  7839  0116FA  0EDD               	movlw	-35
  7840  0116FC  006F FF8F FFDA     	movff	plusw1,fsr2h
  7841  011702  006F FF7B FFF6     	movff	postinc2,tblptrl
  7842  011708  006F FF77 FFF7     	movff	postdec2,tblptrh
  7843  01170E                     	if	0	;tblptru may be non-zero
  7844  01170E                     	endif
  7845  01170E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7846  01170E  0E00               	movlw	low (__mediumconst shr (0+16))
  7847  011710  6EF8               	movwf	tblptru,c
  7848  011712                     	endif
  7849  011712  0008               	tblrd		*
  7850  011714  50F5               	movf	tablat,w,c
  7851  011716  0A64               	xorlw	100
  7852  011718  B4D8               	btfsc	status,2,c
  7853  01171A  D015               	goto	u11920
  7854                           
  7855                           ;stkvar	_fmt @ sp[(-32)+-4]
  7856  01171C  0EDC               	movlw	-36
  7857  01171E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7858  011724  0EDD               	movlw	-35
  7859  011726  006F FF8F FFDA     	movff	plusw1,fsr2h
  7860  01172C  006F FF7B FFF6     	movff	postinc2,tblptrl
  7861  011732  006F FF77 FFF7     	movff	postdec2,tblptrh
  7862  011738                     	if	0	;tblptru may be non-zero
  7863  011738                     	endif
  7864  011738                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7865  011738  0E00               	movlw	low (__mediumconst shr (0+16))
  7866  01173A  6EF8               	movwf	tblptru,c
  7867  01173C                     	endif
  7868  01173C  0008               	tblrd		*
  7869  01173E  50F5               	movf	tablat,w,c
  7870  011740  0A69               	xorlw	105
  7871  011742  A4D8               	btfss	status,2,c
  7872  011744  D075               	goto	l10835
  7873  011746                     u11920:
  7874                           
  7875                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  7876                           ;stkvar	_fmt @ sp[(-32)+-4]
  7877  011746  0EDC               	movlw	-36
  7878  011748  006F FF8F FFD9     	movff	plusw1,fsr2l
  7879  01174E  0EDD               	movlw	-35
  7880  011750  006F FF8F FFDA     	movff	plusw1,fsr2h
  7881  011756  2ADE               	incf	postinc2,f,c
  7882  011758  0E00               	movlw	0
  7883  01175A  22DD               	addwfc	postdec2,f,c
  7884                           
  7885                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  7886                           ;stkvar	_ap @ sp[(-32)+-6]
  7887  01175C  0EDA               	movlw	-38
  7888  01175E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7889  011764  0EDB               	movlw	-37
  7890  011766  006F FF8F FFDA     	movff	plusw1,fsr2h
  7891  01176C  0E02               	movlw	2
  7892  01176E  5EDE               	subwf	postinc2,f,c
  7893  011770  0E00               	movlw	0
  7894  011772  5ADD               	subwfb	postdec2,f,c
  7895  011774  006F FF78  F03C    	movff	postinc2,btemp+10
  7896  01177A  006F FF74  F03D    	movff	postdec2,btemp+11
  7897  011780  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  7898  011786  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  7899  01178C  006F FF78  F03C    	movff	postinc2,btemp+10
  7900  011792  006F FF74  F03D    	movff	postdec2,btemp+11
  7901                           
  7902                           ;stkvar	_ll @ sp[(-32)+14]
  7903  011798  0EEE               	movlw	-18
  7904  01179A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7905  0117A0  0EEF               	movlw	-17
  7906  0117A2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7907  0117A8  6A32               	clrf	btemp^0,c
  7908  0117AA  BEE3               	btfsc	plusw1,7,c
  7909  0117AC  6832               	setf	btemp^0,c
  7910  0117AE  0EF0               	movlw	-16
  7911  0117B0  0060  F0CB  FFE3   	movff	btemp,plusw1
  7912  0117B6  0EF1               	movlw	-15
  7913  0117B8  0060  F0CB  FFE3   	movff	btemp,plusw1
  7914  0117BE  0EF2               	movlw	-14
  7915  0117C0  0060  F0CB  FFE3   	movff	btemp,plusw1
  7916  0117C6  0EF3               	movlw	-13
  7917  0117C8  0060  F0CB  FFE3   	movff	btemp,plusw1
  7918  0117CE  0EF4               	movlw	-12
  7919  0117D0  0060  F0CB  FFE3   	movff	btemp,plusw1
  7920  0117D6  0EF5               	movlw	-11
  7921  0117D8  0060  F0CB  FFE3   	movff	btemp,plusw1
  7922                           
  7923                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  7924                           ;stkvar	_ll @ sp[(-32)+14]
  7925  0117DE  50E1               	movf	fsr1l,w,c
  7926  0117E0  0FEE               	addlw	-18
  7927  0117E2  6ED9               	movwf	fsr2l,c
  7928  0117E4  50E2               	movf	fsr1h,w,c
  7929  0117E6  6EDA               	movwf	fsr2h,c
  7930  0117E8  0EFF               	movlw	255
  7931  0117EA  22DA               	addwfc	fsr2h,f,c
  7932  0117EC  006F FF7B FFE6     	movff	postinc2,postinc1
  7933  0117F2  006F FF7B FFE6     	movff	postinc2,postinc1
  7934  0117F8  006F FF7B FFE6     	movff	postinc2,postinc1
  7935  0117FE  006F FF7B FFE6     	movff	postinc2,postinc1
  7936  011804  006F FF7B FFE6     	movff	postinc2,postinc1
  7937  01180A  006F FF7B FFE6     	movff	postinc2,postinc1
  7938  011810  006F FF7B FFE6     	movff	postinc2,postinc1
  7939  011816  006F FF7B FFE6     	movff	postinc2,postinc1
  7940                           
  7941                           ;stkvar	_fp @ sp[(-40)+-2]
  7942  01181C  0ED6               	movlw	-42
  7943  01181E  006F FF8F FFE6     	movff	plusw1,postinc1
  7944  011824  006F FF8F FFE6     	movff	plusw1,postinc1
  7945  01182A  EC34  F09C         	call	_dtoa	;wreg free
  7946  01182E  D2A4               	goto	l2017
  7947  011830                     l10835:
  7948                           
  7949                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
  7950                           ;stkvar	_ct @ sp[(-32)+26]
  7951  011830  0EFA               	movlw	-6
  7952  011832  006F FF8C  F032    	movff	plusw1,btemp
  7953  011838  0E66               	movlw	102
  7954  01183A  1832               	xorwf	btemp^0,w,c
  7955  01183C  A4D8               	btfss	status,2,c
  7956  01183E  D06E               	goto	l10847
  7957                           
  7958                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
  7959                           ;stkvar	_fmt @ sp[(-32)+-4]
  7960  011840  0EDC               	movlw	-36
  7961  011842  006F FF8F FFD9     	movff	plusw1,fsr2l
  7962  011848  0EDD               	movlw	-35
  7963  01184A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7964  011850  006F FF7B FFF6     	movff	postinc2,tblptrl
  7965  011856  006F FF77 FFF7     	movff	postdec2,tblptrh
  7966  01185C                     	if	0	;tblptru may be non-zero
  7967  01185C                     	endif
  7968  01185C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7969  01185C  0E00               	movlw	low (__mediumconst shr (0+16))
  7970  01185E  6EF8               	movwf	tblptru,c
  7971  011860                     	endif
  7972                           
  7973                           ;stkvar	_c @ sp[(-32)+31]
  7974  011860  0008               	tblrd		*
  7975  011862  0EFF               	movlw	-1
  7976  011864  006F FFD7 FFE3     	movff	tablat,plusw1
  7977                           
  7978                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
  7979                           ;stkvar	_fmt @ sp[(-32)+-4]
  7980  01186A  0EDC               	movlw	-36
  7981  01186C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7982  011872  0EDD               	movlw	-35
  7983  011874  006F FF8F FFDA     	movff	plusw1,fsr2h
  7984  01187A  2ADE               	incf	postinc2,f,c
  7985  01187C  0E00               	movlw	0
  7986  01187E  22DD               	addwfc	postdec2,f,c
  7987                           
  7988                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
  7989                           ;stkvar	_ap @ sp[(-32)+-6]
  7990  011880  0EDA               	movlw	-38
  7991  011882  006F FF8F FFD9     	movff	plusw1,fsr2l
  7992  011888  0EDB               	movlw	-37
  7993  01188A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7994  011890  0E04               	movlw	4
  7995  011892  5EDE               	subwf	postinc2,f,c
  7996  011894  0E00               	movlw	0
  7997  011896  5ADD               	subwfb	postdec2,f,c
  7998  011898  006F FF78  F03C    	movff	postinc2,btemp+10
  7999  01189E  006F FF74  F03D    	movff	postdec2,btemp+11
  8000  0118A4  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8001  0118AA  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8002  0118B0  006F FF78  F03A    	movff	postinc2,btemp+8
  8003  0118B6  006F FF78  F03B    	movff	postinc2,btemp+9
  8004  0118BC  006F FF78  F03C    	movff	postinc2,btemp+10
  8005  0118C2  006F FF78  F03D    	movff	postinc2,btemp+11
  8006                           
  8007                           ;stkvar	_f @ sp[(-32)+22]
  8008  0118C8  0EF6               	movlw	-10
  8009  0118CA  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  8010  0118D0  0EF7               	movlw	-9
  8011  0118D2  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  8012  0118D8  0EF8               	movlw	-8
  8013  0118DA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8014  0118E0  0EF9               	movlw	-7
  8015  0118E2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8016  0118E8                     l10843:
  8017                           
  8018                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
  8019                           ;stkvar	_c @ sp[(-32)+31]
  8020  0118E8  0EFF               	movlw	-1
  8021  0118EA  50E3               	movf	plusw1,w,c
  8022  0118EC  6EE6               	movwf	postinc1,c
  8023                           
  8024                           ;stkvar	_f @ sp[(-33)+22]
  8025  0118EE  0EF5               	movlw	-11
  8026  0118F0  006F FF8F FFE6     	movff	plusw1,postinc1
  8027  0118F6  006F FF8F FFE6     	movff	plusw1,postinc1
  8028  0118FC  006F FF8F FFE6     	movff	plusw1,postinc1
  8029  011902  006F FF8F FFE6     	movff	plusw1,postinc1
  8030                           
  8031                           ;stkvar	_fp @ sp[(-37)+-2]
  8032  011908  0ED9               	movlw	-39
  8033  01190A  006F FF8F FFE6     	movff	plusw1,postinc1
  8034  011910  006F FF8F FFE6     	movff	plusw1,postinc1
  8035  011916  EC00  F080         	call	_efgtoa	;wreg free
  8036  01191A  D22E               	goto	l2017
  8037  01191C                     l10847:
  8038                           
  8039                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  8040  01191C  0E02               	movlw	2
  8041  01191E  6EE6               	movwf	postinc1,c
  8042  011920  0E00               	movlw	0
  8043  011922  6EE6               	movwf	postinc1,c
  8044  011924  0EF5               	movlw	low STR_42
  8045  011926  6EE6               	movwf	postinc1,c
  8046  011928  0EFF               	movlw	high STR_42
  8047  01192A  6EE6               	movwf	postinc1,c
  8048                           
  8049                           ;stkvar	_ct @ sp[(-36)+26]
  8050  01192C  0EF6               	movlw	246
  8051  01192E  24E1               	addwf	fsr1l,w,c
  8052  011930  6E32               	movwf	btemp^0,c
  8053  011932  0EFF               	movlw	255
  8054  011934  20E2               	addwfc	fsr1h,w,c
  8055  011936  6E33               	movwf	(btemp+1)^0,c
  8056  011938  0060  F0CB  FFE6   	movff	btemp,postinc1
  8057  01193E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  8058  011944  EC86  F0AC         	call	_strncmp	;wreg free
  8059  011948  5032               	movf	btemp^0,w,c
  8060  01194A  1033               	iorwf	(btemp+1)^0,w,c
  8061  01194C  A4D8               	btfss	status,2,c
  8062  01194E  D096               	goto	l10867
  8063                           
  8064                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  8065                           ;stkvar	_fmt @ sp[(-32)+-4]
  8066  011950  0EDC               	movlw	-36
  8067  011952  006F FF8F FFD9     	movff	plusw1,fsr2l
  8068  011958  0EDD               	movlw	-35
  8069  01195A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8070  011960  006F FF78  F03C    	movff	postinc2,btemp+10
  8071  011966  006F FF74  F03D    	movff	postdec2,btemp+11
  8072  01196C  0E01               	movlw	1
  8073  01196E  263C               	addwf	(btemp+10)^0,f,c
  8074  011970  0E00               	movlw	0
  8075  011972  223D               	addwfc	(btemp+11)^0,f,c
  8076  011974  0060  F0F3  FFF6   	movff	btemp+10,tblptrl
  8077  01197A  0060  F0F7  FFF7   	movff	btemp+11,tblptrh
  8078  011980                     	if	0	;tblptru may be non-zero
  8079  011980                     	endif
  8080  011980                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8081  011980  0E00               	movlw	low (__mediumconst shr (0+16))
  8082  011982  6EF8               	movwf	tblptru,c
  8083  011984                     	endif
  8084                           
  8085                           ;stkvar	_c @ sp[(-32)+31]
  8086  011984  0008               	tblrd		*
  8087  011986  0EFF               	movlw	-1
  8088  011988  006F FFD7 FFE3     	movff	tablat,plusw1
  8089  01198E  0EBF               	movlw	191
  8090  011990  6E3C               	movwf	(btemp+10)^0,c
  8091  011992  0EFF               	movlw	255
  8092  011994  6E3D               	movwf	(btemp+11)^0,c
  8093                           
  8094                           ;stkvar	_fmt @ sp[(-32)+-4]
  8095  011996  0EDC               	movlw	-36
  8096  011998  006F FF8F FFD9     	movff	plusw1,fsr2l
  8097  01199E  0EDD               	movlw	-35
  8098  0119A0  006F FF8F FFDA     	movff	plusw1,fsr2h
  8099  0119A6  006F FF7B FFF6     	movff	postinc2,tblptrl
  8100  0119AC  006F FF77 FFF7     	movff	postdec2,tblptrh
  8101  0119B2                     	if	0	;tblptru may be non-zero
  8102  0119B2                     	endif
  8103  0119B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8104  0119B2  0E00               	movlw	low (__mediumconst shr (0+16))
  8105  0119B4  6EF8               	movwf	tblptru,c
  8106  0119B6                     	endif
  8107  0119B6  0008               	tblrd		*
  8108  0119B8  50F5               	movf	tablat,w,c
  8109  0119BA  6E3A               	movwf	(btemp+8)^0,c
  8110  0119BC  6A3B               	clrf	(btemp+9)^0,c
  8111  0119BE  503C               	movf	(btemp+10)^0,w,c
  8112  0119C0  263A               	addwf	(btemp+8)^0,f,c
  8113  0119C2  503D               	movf	(btemp+11)^0,w,c
  8114  0119C4  223B               	addwfc	(btemp+9)^0,f,c
  8115  0119C6  503B               	movf	(btemp+9)^0,w,c
  8116  0119C8  E106               	bnz	u11950
  8117  0119CA  0E1A               	movlw	26
  8118  0119CC  5C3A               	subwf	(btemp+8)^0,w,c
  8119  0119CE  B0D8               	btfsc	status,0,c
  8120  0119D0  D002               	goto	u11950
  8121  0119D2  0E01               	movlw	1
  8122  0119D4  D001               	goto	u11960
  8123  0119D6                     u11950:
  8124  0119D6  0E00               	movlw	0
  8125  0119D8                     u11960:
  8126  0119D8  6E3C               	movwf	(btemp+10)^0,c
  8127  0119DA  6A3D               	clrf	(btemp+11)^0,c
  8128                           
  8129                           ;stkvar	_vfpfcnvrt$4431 @ sp[(-32)+2]
  8130  0119DC  0EE2               	movlw	-30
  8131  0119DE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8132  0119E4  0EE3               	movlw	-29
  8133  0119E6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8134                           
  8135                           ;stkvar	_vfpfcnvrt$4431 @ sp[(-32)+2]
  8136  0119EC  0EE2               	movlw	-30
  8137  0119EE  006F FF8C  F032    	movff	plusw1,btemp
  8138  0119F4  0EE3               	movlw	-29
  8139  0119F6  50E3               	movf	plusw1,w,c
  8140  0119F8  1032               	iorwf	btemp^0,w,c
  8141                           
  8142                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
  8143                           ;stkvar	_ap @ sp[(-32)+-6]
  8144                           
  8145                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
  8146                           
  8147                           ;stkvar	_f @ sp[(-32)+22]
  8148                           
  8149                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
  8150                           ;stkvar	_ap @ sp[(-32)+-6]
  8151  0119FA  0EDA               	movlw	-38
  8152  0119FC  006F FF8F FFD9     	movff	plusw1,fsr2l
  8153  011A02  0EDB               	movlw	-37
  8154  011A04  006F FF8F FFDA     	movff	plusw1,fsr2h
  8155  011A0A  0E04               	movlw	4
  8156  011A0C  5EDE               	subwf	postinc2,f,c
  8157  011A0E  0E00               	movlw	0
  8158  011A10  5ADD               	subwfb	postdec2,f,c
  8159  011A12  006F FF78  F03C    	movff	postinc2,btemp+10
  8160  011A18  006F FF74  F03D    	movff	postdec2,btemp+11
  8161  011A1E  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8162  011A24  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8163  011A2A  006F FF78  F03A    	movff	postinc2,btemp+8
  8164  011A30  006F FF78  F03B    	movff	postinc2,btemp+9
  8165  011A36  006F FF78  F03C    	movff	postinc2,btemp+10
  8166  011A3C  006F FF78  F03D    	movff	postinc2,btemp+11
  8167                           
  8168                           ;stkvar	_f @ sp[(-32)+22]
  8169  011A42  0EF6               	movlw	-10
  8170  011A44  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  8171  011A4A  0EF7               	movlw	-9
  8172  011A4C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  8173  011A52  0EF8               	movlw	-8
  8174  011A54  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8175  011A5A  0EF9               	movlw	-7
  8176  011A5C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8177                           
  8178                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
  8179                           ;stkvar	_fmt @ sp[(-32)+-4]
  8180  011A62  0EDC               	movlw	-36
  8181  011A64  006F FF8F FFD9     	movff	plusw1,fsr2l
  8182  011A6A  0EDD               	movlw	-35
  8183  011A6C  006F FF8F FFDA     	movff	plusw1,fsr2h
  8184  011A72  0E02               	movlw	2
  8185  011A74  26DE               	addwf	postinc2,f,c
  8186  011A76  0E00               	movlw	0
  8187  011A78  22DD               	addwfc	postdec2,f,c
  8188  011A7A  D736               	goto	l10843
  8189  011A7C                     l10867:
  8190                           
  8191                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  8192                           ;stkvar	_fmt @ sp[(-32)+-4]
  8193  011A7C  0EDC               	movlw	-36
  8194  011A7E  006F FF8F FFD9     	movff	plusw1,fsr2l
  8195  011A84  0EDD               	movlw	-35
  8196  011A86  006F FF8F FFDA     	movff	plusw1,fsr2h
  8197  011A8C  006F FF7B FFF6     	movff	postinc2,tblptrl
  8198  011A92  006F FF77 FFF7     	movff	postdec2,tblptrh
  8199  011A98                     	if	0	;tblptru may be non-zero
  8200  011A98                     	endif
  8201  011A98                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8202  011A98  0E00               	movlw	low (__mediumconst shr (0+16))
  8203  011A9A  6EF8               	movwf	tblptru,c
  8204  011A9C                     	endif
  8205  011A9C  0008               	tblrd		*
  8206  011A9E  50F5               	movf	tablat,w,c
  8207  011AA0  0A73               	xorlw	115
  8208  011AA2  A4D8               	btfss	status,2,c
  8209  011AA4  D042               	goto	l10877
  8210                           
  8211                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  8212                           ;stkvar	_fmt @ sp[(-32)+-4]
  8213  011AA6  0EDC               	movlw	-36
  8214  011AA8  006F FF8F FFD9     	movff	plusw1,fsr2l
  8215  011AAE  0EDD               	movlw	-35
  8216  011AB0  006F FF8F FFDA     	movff	plusw1,fsr2h
  8217  011AB6  2ADE               	incf	postinc2,f,c
  8218  011AB8  0E00               	movlw	0
  8219  011ABA  22DD               	addwfc	postdec2,f,c
  8220                           
  8221                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  8222                           ;stkvar	_ap @ sp[(-32)+-6]
  8223  011ABC  0EDA               	movlw	-38
  8224  011ABE  006F FF8F FFD9     	movff	plusw1,fsr2l
  8225  011AC4  0EDB               	movlw	-37
  8226  011AC6  006F FF8F FFDA     	movff	plusw1,fsr2h
  8227  011ACC  0E02               	movlw	2
  8228  011ACE  5EDE               	subwf	postinc2,f,c
  8229  011AD0  0E00               	movlw	0
  8230  011AD2  5ADD               	subwfb	postdec2,f,c
  8231  011AD4  006F FF78  F03C    	movff	postinc2,btemp+10
  8232  011ADA  006F FF74  F03D    	movff	postdec2,btemp+11
  8233  011AE0  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8234  011AE6  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8235  011AEC  006F FF78  F03C    	movff	postinc2,btemp+10
  8236  011AF2  006F FF74  F03D    	movff	postdec2,btemp+11
  8237                           
  8238                           ;stkvar	_cp @ sp[(-32)+29]
  8239  011AF8  0EFE               	movlw	-2
  8240  011AFA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8241  011B00  0EFD               	movlw	-3
  8242  011B02  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8243                           
  8244                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  8245                           ;stkvar	_cp @ sp[(-32)+29]
  8246  011B08  0EFD               	movlw	-3
  8247  011B0A  006F FF8F FFE6     	movff	plusw1,postinc1
  8248  011B10  006F FF8F FFE6     	movff	plusw1,postinc1
  8249                           
  8250                           ;stkvar	_fp @ sp[(-34)+-2]
  8251  011B16  0EDC               	movlw	-36
  8252  011B18  006F FF8F FFE6     	movff	plusw1,postinc1
  8253  011B1E  006F FF8F FFE6     	movff	plusw1,postinc1
  8254  011B24  EC82  F0A5         	call	_stoa	;wreg free
  8255  011B28  D127               	goto	l2017
  8256  011B2A                     l10877:
  8257                           
  8258                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
  8259                           ;stkvar	_fmt @ sp[(-32)+-4]
  8260  011B2A  0EDC               	movlw	-36
  8261  011B2C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8262  011B32  0EDD               	movlw	-35
  8263  011B34  006F FF8F FFDA     	movff	plusw1,fsr2h
  8264  011B3A  006F FF7B FFF6     	movff	postinc2,tblptrl
  8265  011B40  006F FF77 FFF7     	movff	postdec2,tblptrh
  8266  011B46                     	if	0	;tblptru may be non-zero
  8267  011B46                     	endif
  8268  011B46                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8269  011B46  0E00               	movlw	low (__mediumconst shr (0+16))
  8270  011B48  6EF8               	movwf	tblptru,c
  8271  011B4A                     	endif
  8272  011B4A  0008               	tblrd		*
  8273  011B4C  50F5               	movf	tablat,w,c
  8274  011B4E  0A78               	xorlw	120
  8275  011B50  B4D8               	btfsc	status,2,c
  8276  011B52  D015               	goto	u12000
  8277                           
  8278                           ;stkvar	_fmt @ sp[(-32)+-4]
  8279  011B54  0EDC               	movlw	-36
  8280  011B56  006F FF8F FFD9     	movff	plusw1,fsr2l
  8281  011B5C  0EDD               	movlw	-35
  8282  011B5E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8283  011B64  006F FF7B FFF6     	movff	postinc2,tblptrl
  8284  011B6A  006F FF77 FFF7     	movff	postdec2,tblptrh
  8285  011B70                     	if	0	;tblptru may be non-zero
  8286  011B70                     	endif
  8287  011B70                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8288  011B70  0E00               	movlw	low (__mediumconst shr (0+16))
  8289  011B72  6EF8               	movwf	tblptru,c
  8290  011B74                     	endif
  8291  011B74  0008               	tblrd		*
  8292  011B76  50F5               	movf	tablat,w,c
  8293  011B78  0A58               	xorlw	88
  8294  011B7A  A4D8               	btfss	status,2,c
  8295  011B7C  D094               	goto	l10891
  8296  011B7E                     u12000:
  8297                           
  8298                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
  8299                           ;stkvar	_fmt @ sp[(-32)+-4]
  8300  011B7E  0EDC               	movlw	-36
  8301  011B80  006F FF8F FFD9     	movff	plusw1,fsr2l
  8302  011B86  0EDD               	movlw	-35
  8303  011B88  006F FF8F FFDA     	movff	plusw1,fsr2h
  8304  011B8E  006F FF7B FFF6     	movff	postinc2,tblptrl
  8305  011B94  006F FF77 FFF7     	movff	postdec2,tblptrh
  8306  011B9A                     	if	0	;tblptru may be non-zero
  8307  011B9A                     	endif
  8308  011B9A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8309  011B9A  0E00               	movlw	low (__mediumconst shr (0+16))
  8310  011B9C  6EF8               	movwf	tblptru,c
  8311  011B9E                     	endif
  8312                           
  8313                           ;stkvar	_c @ sp[(-32)+31]
  8314  011B9E  0008               	tblrd		*
  8315  011BA0  0EFF               	movlw	-1
  8316  011BA2  006F FFD7 FFE3     	movff	tablat,plusw1
  8317                           
  8318                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
  8319                           ;stkvar	_fmt @ sp[(-32)+-4]
  8320  011BA8  0EDC               	movlw	-36
  8321  011BAA  006F FF8F FFD9     	movff	plusw1,fsr2l
  8322  011BB0  0EDD               	movlw	-35
  8323  011BB2  006F FF8F FFDA     	movff	plusw1,fsr2h
  8324  011BB8  2ADE               	incf	postinc2,f,c
  8325  011BBA  0E00               	movlw	0
  8326  011BBC  22DD               	addwfc	postdec2,f,c
  8327                           
  8328                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  8329                           ;stkvar	_ap @ sp[(-32)+-6]
  8330  011BBE  0EDA               	movlw	-38
  8331  011BC0  006F FF8F FFD9     	movff	plusw1,fsr2l
  8332  011BC6  0EDB               	movlw	-37
  8333  011BC8  006F FF8F FFDA     	movff	plusw1,fsr2h
  8334  011BCE  0E02               	movlw	2
  8335  011BD0  5EDE               	subwf	postinc2,f,c
  8336  011BD2  0E00               	movlw	0
  8337  011BD4  5ADD               	subwfb	postdec2,f,c
  8338  011BD6  006F FF78  F03C    	movff	postinc2,btemp+10
  8339  011BDC  006F FF74  F03D    	movff	postdec2,btemp+11
  8340  011BE2  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8341  011BE8  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8342  011BEE  006F FF78  F03C    	movff	postinc2,btemp+10
  8343  011BF4  006F FF74  F03D    	movff	postdec2,btemp+11
  8344  011BFA  503C               	movf	(btemp+10)^0,w,c
  8345  011BFC  6E42               	movwf	(btemp+16)^0,c
  8346  011BFE  503D               	movf	(btemp+11)^0,w,c
  8347  011C00  6E43               	movwf	(btemp+17)^0,c
  8348  011C02  6A44               	clrf	(btemp+18)^0,c
  8349  011C04  6A45               	clrf	(btemp+19)^0,c
  8350  011C06  6A46               	clrf	(btemp+20)^0,c
  8351  011C08  6A47               	clrf	(btemp+21)^0,c
  8352  011C0A  6A48               	clrf	(btemp+22)^0,c
  8353  011C0C  6A49               	clrf	(btemp+23)^0,c
  8354                           
  8355                           ;stkvar	_llu @ sp[(-32)+6]
  8356  011C0E  0EE6               	movlw	-26
  8357  011C10  0060  F10B  FFE3   	movff	btemp+16,plusw1
  8358  011C16  0EE7               	movlw	-25
  8359  011C18  0060  F10F  FFE3   	movff	btemp+17,plusw1
  8360  011C1E  0EE8               	movlw	-24
  8361  011C20  0060  F113  FFE3   	movff	btemp+18,plusw1
  8362  011C26  0EE9               	movlw	-23
  8363  011C28  0060  F117  FFE3   	movff	btemp+19,plusw1
  8364  011C2E  0EEA               	movlw	-22
  8365  011C30  0060  F11B  FFE3   	movff	btemp+20,plusw1
  8366  011C36  0EEB               	movlw	-21
  8367  011C38  0060  F11F  FFE3   	movff	btemp+21,plusw1
  8368  011C3E  0EEC               	movlw	-20
  8369  011C40  0060  F123  FFE3   	movff	btemp+22,plusw1
  8370  011C46  0EED               	movlw	-19
  8371  011C48  0060  F127  FFE3   	movff	btemp+23,plusw1
  8372                           
  8373                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
  8374                           ;stkvar	_c @ sp[(-32)+31]
  8375  011C4E  0EFF               	movlw	-1
  8376  011C50  50E3               	movf	plusw1,w,c
  8377  011C52  6EE6               	movwf	postinc1,c
  8378                           
  8379                           ;stkvar	_llu @ sp[(-33)+6]
  8380  011C54  50E1               	movf	fsr1l,w,c
  8381  011C56  0FE5               	addlw	-27
  8382  011C58  6ED9               	movwf	fsr2l,c
  8383  011C5A  50E2               	movf	fsr1h,w,c
  8384  011C5C  6EDA               	movwf	fsr2h,c
  8385  011C5E  0EFF               	movlw	255
  8386  011C60  22DA               	addwfc	fsr2h,f,c
  8387  011C62  006F FF7B FFE6     	movff	postinc2,postinc1
  8388  011C68  006F FF7B FFE6     	movff	postinc2,postinc1
  8389  011C6E  006F FF7B FFE6     	movff	postinc2,postinc1
  8390  011C74  006F FF7B FFE6     	movff	postinc2,postinc1
  8391  011C7A  006F FF7B FFE6     	movff	postinc2,postinc1
  8392  011C80  006F FF7B FFE6     	movff	postinc2,postinc1
  8393  011C86  006F FF7B FFE6     	movff	postinc2,postinc1
  8394  011C8C  006F FF7B FFE6     	movff	postinc2,postinc1
  8395                           
  8396                           ;stkvar	_fp @ sp[(-41)+-2]
  8397  011C92  0ED5               	movlw	-43
  8398  011C94  006F FF8F FFE6     	movff	plusw1,postinc1
  8399  011C9A  006F FF8F FFE6     	movff	plusw1,postinc1
  8400  011CA0  EC79  F0A0         	call	_xtoa	;wreg free
  8401  011CA4  D069               	goto	l2017
  8402  011CA6                     l10891:
  8403                           
  8404                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  8405                           ;stkvar	_fmt @ sp[(-32)+-4]
  8406  011CA6  0EDC               	movlw	-36
  8407  011CA8  006F FF8F FFD9     	movff	plusw1,fsr2l
  8408  011CAE  0EDD               	movlw	-35
  8409  011CB0  006F FF8F FFDA     	movff	plusw1,fsr2h
  8410  011CB6  006F FF7B FFF6     	movff	postinc2,tblptrl
  8411  011CBC  006F FF77 FFF7     	movff	postdec2,tblptrh
  8412  011CC2                     	if	0	;tblptru may be non-zero
  8413  011CC2                     	endif
  8414  011CC2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8415  011CC2  0E00               	movlw	low (__mediumconst shr (0+16))
  8416  011CC4  6EF8               	movwf	tblptru,c
  8417  011CC6                     	endif
  8418  011CC6  0008               	tblrd		*
  8419  011CC8  50F5               	movf	tablat,w,c
  8420  011CCA  0A25               	xorlw	37
  8421  011CCC  A4D8               	btfss	status,2,c
  8422  011CCE  D01A               	goto	l10901
  8423                           
  8424                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  8425                           ;stkvar	_fmt @ sp[(-32)+-4]
  8426  011CD0  0EDC               	movlw	-36
  8427  011CD2  006F FF8F FFD9     	movff	plusw1,fsr2l
  8428  011CD8  0EDD               	movlw	-35
  8429  011CDA  006F FF8F FFDA     	movff	plusw1,fsr2h
  8430  011CE0  2ADE               	incf	postinc2,f,c
  8431  011CE2  0E00               	movlw	0
  8432  011CE4  22DD               	addwfc	postdec2,f,c
  8433                           
  8434                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  8435                           ;stkvar	_fp @ sp[(-32)+-2]
  8436  011CE6  0EDE               	movlw	-34
  8437  011CE8  006F FF8F FFE6     	movff	plusw1,postinc1
  8438  011CEE  006F FF8F FFE6     	movff	plusw1,postinc1
  8439  011CF4  0E25               	movlw	37
  8440  011CF6  6EE6               	movwf	postinc1,c
  8441  011CF8  0E00               	movlw	0
  8442  011CFA  6EE6               	movwf	postinc1,c
  8443  011CFC  EC61  F0B2         	call	_fputc	;wreg free
  8444  011D00                     l10897:
  8445                           
  8446                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  8447  011D00  0E01               	movlw	1
  8448  011D02  D00C               	goto	L6
  8449  011D04                     l10901:
  8450                           
  8451                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  8452                           ;stkvar	_fmt @ sp[(-32)+-4]
  8453  011D04  0EDC               	movlw	-36
  8454  011D06  006F FF8F FFD9     	movff	plusw1,fsr2l
  8455  011D0C  0EDD               	movlw	-35
  8456  011D0E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8457  011D14  2ADE               	incf	postinc2,f,c
  8458  011D16  0E00               	movlw	0
  8459  011D18  22DD               	addwfc	postdec2,f,c
  8460                           
  8461                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  8462  011D1A  0E00               	movlw	0
  8463  011D1C                     L6:
  8464  011D1C  6E32               	movwf	btemp^0,c
  8465  011D1E  0E00               	movlw	0
  8466  011D20  6E33               	movwf	(btemp+1)^0,c
  8467  011D22  D02A               	goto	l2017
  8468  011D24                     l10907:
  8469                           
  8470                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  8471                           ;stkvar	_fp @ sp[(-32)+-2]
  8472  011D24  0EDE               	movlw	-34
  8473  011D26  006F FF8F FFE6     	movff	plusw1,postinc1
  8474  011D2C  006F FF8F FFE6     	movff	plusw1,postinc1
  8475                           
  8476                           ;stkvar	_fmt @ sp[(-34)+-4]
  8477  011D32  0EDA               	movlw	-38
  8478  011D34  006F FF8F FFD9     	movff	plusw1,fsr2l
  8479  011D3A  0EDB               	movlw	-37
  8480  011D3C  006F FF8F FFDA     	movff	plusw1,fsr2h
  8481  011D42  006F FF7B FFF6     	movff	postinc2,tblptrl
  8482  011D48  006F FF77 FFF7     	movff	postdec2,tblptrh
  8483  011D4E                     	if	0	;tblptru may be non-zero
  8484  011D4E                     	endif
  8485  011D4E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8486  011D4E  0E00               	movlw	low (__mediumconst shr (0+16))
  8487  011D50  6EF8               	movwf	tblptru,c
  8488  011D52                     	endif
  8489  011D52  0008               	tblrd		*
  8490  011D54  50F5               	movf	tablat,w,c
  8491  011D56  6EE6               	movwf	postinc1,c
  8492  011D58  0E00               	movlw	0
  8493  011D5A  6EE6               	movwf	postinc1,c
  8494  011D5C  EC61  F0B2         	call	_fputc	;wreg free
  8495                           
  8496                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  8497                           ;stkvar	_fmt @ sp[(-32)+-4]
  8498  011D60  0EDC               	movlw	-36
  8499  011D62  006F FF8F FFD9     	movff	plusw1,fsr2l
  8500  011D68  0EDD               	movlw	-35
  8501  011D6A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8502  011D70  2ADE               	incf	postinc2,f,c
  8503  011D72  0E00               	movlw	0
  8504  011D74  22DD               	addwfc	postdec2,f,c
  8505  011D76  D7C4               	goto	l10897
  8506  011D78                     l2017:
  8507                           
  8508                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
  8509  011D78  0EDA               	movlw	218
  8510  011D7A  26E1               	addwf	fsr1l,f,c
  8511  011D7C  0EFF               	movlw	255
  8512  011D7E  22E2               	addwfc	fsr1h,f,c
  8513  011D80  0012               	return		;funcret
  8514  011D82                     __end_of_vfpfcnvrt:
  8515                           	opt callstack 0
  8516                           
  8517 ;; *************** function _xtoa *****************
  8518 ;; Defined at:
  8519 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  8520 ;; Parameters:    Size  Location     Type
  8521 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8522 ;;		 -> f(6), NULL(0), 
  8523 ;;  d               8  [STACK] unsigned long long 
  8524 ;;  x               1  [STACK] unsigned char 
  8525 ;; Auto vars:     Size  Location     Type
  8526 ;;  n               8  [STACK] unsigned long long 
  8527 ;;  c               2  [STACK] int 
  8528 ;;  i               2  [STACK] int 
  8529 ;;  w               2  [STACK] int 
  8530 ;;  p               2  [STACK] int 
  8531 ;; Return value:  Size  Location     Type
  8532 ;;                  2  [STACK] int 
  8533 ;; Registers used:
  8534 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  8535 ;; Tracked objects:
  8536 ;;		On entry : 0/5
  8537 ;;		On exit  : 0/0
  8538 ;;		Unchanged: 0/0
  8539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8544 ;;Total ram usage:        0 bytes
  8545 ;; Hardware stack levels used:    1
  8546 ;; Hardware stack levels required when called:   11
  8547 ;; This function calls:
  8548 ;;		_isalpha
  8549 ;;		_isupper
  8550 ;;		_pad
  8551 ;;		_toupper
  8552 ;; This function is called by:
  8553 ;;		_vfpfcnvrt
  8554 ;; This function uses a reentrant model
  8555 ;;
  8556                           
  8557                           	psect	text39
  8558  0140F2                     __ptext39:
  8559                           	opt callstack 0
  8560  0140F2                     _xtoa:
  8561                           	opt callstack 0
  8562                           
  8563                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
  8564  0140F2  0E14               	movlw	20
  8565  0140F4  26E1               	addwf	fsr1l,f,c
  8566  0140F6  0E00               	movlw	0
  8567  0140F8  22E2               	addwfc	fsr1h,f,c
  8568                           
  8569                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
  8570                           
  8571                           ;incstack = 0
  8572  0140FA  AE1E               	btfss	(_prec+1)^0,7,c
  8573                           
  8574                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
  8575  0140FC  921F               	bcf	_flags^0,1,c
  8576                           
  8577                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
  8578  0140FE  BE1E               	btfsc	(_prec+1)^0,7,c
  8579  014100  D005               	goto	u11480
  8580  014102  501E               	movf	(_prec+1)^0,w,c
  8581  014104  E110               	bnz	l10621
  8582  014106  041D               	decf	_prec^0,w,c
  8583  014108  B0D8               	btfsc	status,0,c
  8584  01410A  D00D               	goto	l10621
  8585  01410C                     u11480:
  8586  01410C  0E01               	movlw	1
  8587  01410E  6E3C               	movwf	(btemp+10)^0,c
  8588  014110  0E00               	movlw	0
  8589  014112  6E3D               	movwf	(btemp+11)^0,c
  8590                           
  8591                           ;stkvar	_p @ sp[(-20)+18]
  8592  014114  0EFE               	movlw	-2
  8593  014116  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8594  01411C  0EFF               	movlw	-1
  8595  01411E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8596  014124  D008               	goto	l1967
  8597  014126                     l10621:
  8598                           
  8599                           ;stkvar	_p @ sp[(-20)+18]
  8600  014126  0EFE               	movlw	-2
  8601  014128  0060  F077  FFE3   	movff	_prec,plusw1
  8602  01412E  0EFF               	movlw	-1
  8603  014130  0060  F07B  FFE3   	movff	_prec+1,plusw1
  8604  014136                     l1967:
  8605                           
  8606                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
  8607                           ;stkvar	_w @ sp[(-20)+16]
  8608  014136  0EFC               	movlw	-4
  8609  014138  0060  F06F  FFE3   	movff	_width,plusw1
  8610  01413E  0EFD               	movlw	-3
  8611  014140  0060  F073  FFE3   	movff	_width+1,plusw1
  8612                           
  8613                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
  8614  014146  A81F               	btfss	_flags^0,4,c
  8615  014148  D00B               	goto	l10627
  8616                           
  8617                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
  8618                           ;stkvar	_w @ sp[(-20)+16]
  8619  01414A  50E1               	movf	fsr1l,w,c
  8620  01414C  0FFC               	addlw	-4
  8621  01414E  6ED9               	movwf	fsr2l,c
  8622  014150  50E2               	movf	fsr1h,w,c
  8623  014152  6EDA               	movwf	fsr2h,c
  8624  014154  0EFF               	movlw	255
  8625  014156  22DA               	addwfc	fsr2h,f,c
  8626  014158  0EFE               	movlw	254
  8627  01415A  26DE               	addwf	postinc2,f,c
  8628  01415C  0EFF               	movlw	255
  8629  01415E  22DD               	addwfc	postdec2,f,c
  8630  014160                     l10627:
  8631                           
  8632                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
  8633                           ;stkvar	_d @ sp[(-20)+-10]
  8634  014160  0EE2               	movlw	226
  8635  014162  24E1               	addwf	fsr1l,w,c
  8636  014164  6ED9               	movwf	fsr2l,c
  8637  014166  0EFF               	movlw	255
  8638  014168  20E2               	addwfc	fsr1h,w,c
  8639  01416A  6EDA               	movwf	fsr2h,c
  8640                           
  8641                           ;stkvar	_n @ sp[(-20)+4]
  8642  01416C  0E08               	movlw	8
  8643  01416E  6E32               	movwf	btemp^0,c
  8644  014170  0EF0               	movlw	-16
  8645  014172                     us1150999:
  8646  014172  006F FF7B FFE3     	movff	postinc2,plusw1
  8647  014178  28E8               	incf	wreg,w,c
  8648  01417A  2E32               	decfsz	btemp^0,f,c
  8649  01417C  D7FA               	bra	us1150999
  8650                           
  8651                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
  8652  01417E  0E4F               	movlw	79
  8653  014180  6E3C               	movwf	(btemp+10)^0,c
  8654  014182  0E00               	movlw	0
  8655  014184  6E3D               	movwf	(btemp+11)^0,c
  8656                           
  8657                           ;stkvar	_i @ sp[(-20)+14]
  8658  014186  0EFA               	movlw	-6
  8659  014188  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8660  01418E  0EFB               	movlw	-5
  8661  014190  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8662                           
  8663                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
  8664  014196  0102               	movlb	2	; () banked
  8665  014198  6B8F               	clrf	(_dbuf+79)& (0+255),b
  8666                           
  8667                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8668  01419A  D0EE               	goto	l10665
  8669  01419C                     l10633:
  8670                           
  8671                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
  8672                           ;stkvar	_i @ sp[(-20)+14]
  8673  01419C  50E1               	movf	fsr1l,w,c
  8674  01419E  0FFA               	addlw	-6
  8675  0141A0  6ED9               	movwf	fsr2l,c
  8676  0141A2  50E2               	movf	fsr1h,w,c
  8677  0141A4  6EDA               	movwf	fsr2h,c
  8678  0141A6  0EFF               	movlw	255
  8679  0141A8  22DA               	addwfc	fsr2h,f,c
  8680  0141AA  06DE               	decf	postinc2,f,c
  8681  0141AC  0E00               	movlw	0
  8682  0141AE  5ADD               	subwfb	postdec2,f,c
  8683                           
  8684                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
  8685                           ;stkvar	_n @ sp[(-20)+4]
  8686  0141B0  0EF0               	movlw	-16
  8687  0141B2  006F FF8C  F03C    	movff	plusw1,btemp+10
  8688  0141B8  0EF1               	movlw	-15
  8689  0141BA  006F FF8C  F03D    	movff	plusw1,btemp+11
  8690  0141C0  0E0F               	movlw	15
  8691  0141C2  163C               	andwf	(btemp+10)^0,f,c
  8692  0141C4  0E00               	movlw	0
  8693  0141C6  163D               	andwf	(btemp+11)^0,f,c
  8694                           
  8695                           ;stkvar	_c @ sp[(-20)+12]
  8696  0141C8  0EF8               	movlw	-8
  8697  0141CA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8698  0141D0  0EF9               	movlw	-7
  8699  0141D2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8700                           
  8701                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
  8702                           ;stkvar	_c @ sp[(-20)+12]
  8703  0141D8  0EF9               	movlw	-7
  8704  0141DA  BEE3               	btfsc	plusw1,7,c
  8705  0141DC  D00F               	goto	l10641
  8706  0141DE  0EF9               	movlw	-7
  8707  0141E0  50E3               	movf	plusw1,w,c
  8708  0141E2  E108               	bnz	u11510
  8709  0141E4  0EF8               	movlw	-8
  8710  0141E6  006F FF8C  F032    	movff	plusw1,btemp
  8711  0141EC  0E0A               	movlw	10
  8712  0141EE  5E32               	subwf	btemp^0,f,c
  8713  0141F0  A0D8               	btfss	status,0,c
  8714  0141F2  D004               	goto	l10641
  8715  0141F4                     u11510:
  8716                           
  8717                           ;stkvar	_c @ sp[(-20)+12]
  8718  0141F4  0EF8               	movlw	-8
  8719  0141F6  50E3               	movf	plusw1,w,c
  8720  0141F8  0F57               	addlw	87
  8721  0141FA  D003               	goto	L7
  8722  0141FC                     l10641:
  8723                           
  8724                           ;stkvar	_c @ sp[(-20)+12]
  8725  0141FC  0EF8               	movlw	-8
  8726  0141FE  50E3               	movf	plusw1,w,c
  8727  014200  0F30               	addlw	48
  8728  014202                     L7:
  8729  014202  6E3C               	movwf	(btemp+10)^0,c
  8730  014204  0EF9               	movlw	-7
  8731  014206  006F FF8C  F03D    	movff	plusw1,btemp+11
  8732  01420C  0E00               	movlw	0
  8733  01420E  223D               	addwfc	(btemp+11)^0,f,c
  8734                           
  8735                           ;stkvar	_c @ sp[(-20)+12]
  8736  014210  0EF8               	movlw	-8
  8737  014212  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8738  014218  0EF9               	movlw	-7
  8739  01421A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8740  014220  0EBF               	movlw	191
  8741  014222  6E3C               	movwf	(btemp+10)^0,c
  8742  014224  0EFF               	movlw	255
  8743  014226  6E3D               	movwf	(btemp+11)^0,c
  8744                           
  8745                           ;stkvar	_x @ sp[(-20)+-11]
  8746  014228  0EE1               	movlw	-31
  8747  01422A  50E3               	movf	plusw1,w,c
  8748  01422C  6E3A               	movwf	(btemp+8)^0,c
  8749  01422E  6A3B               	clrf	(btemp+9)^0,c
  8750  014230  503C               	movf	(btemp+10)^0,w,c
  8751  014232  263A               	addwf	(btemp+8)^0,f,c
  8752  014234  503D               	movf	(btemp+11)^0,w,c
  8753  014236  223B               	addwfc	(btemp+9)^0,f,c
  8754  014238  503B               	movf	(btemp+9)^0,w,c
  8755  01423A  E106               	bnz	u11520
  8756  01423C  0E1A               	movlw	26
  8757  01423E  5C3A               	subwf	(btemp+8)^0,w,c
  8758  014240  B0D8               	btfsc	status,0,c
  8759  014242  D002               	goto	u11520
  8760  014244  0E01               	movlw	1
  8761  014246  D001               	goto	u11530
  8762  014248                     u11520:
  8763  014248  0E00               	movlw	0
  8764  01424A                     u11530:
  8765  01424A  6E3C               	movwf	(btemp+10)^0,c
  8766  01424C  6A3D               	clrf	(btemp+11)^0,c
  8767                           
  8768                           ;stkvar	_xtoa$4409 @ sp[(-20)+2]
  8769  01424E  0EEE               	movlw	-18
  8770  014250  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8771  014256  0EEF               	movlw	-17
  8772  014258  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8773                           
  8774                           ;stkvar	_xtoa$4409 @ sp[(-20)+2]
  8775  01425E  0EEE               	movlw	-18
  8776  014260  006F FF8C  F032    	movff	plusw1,btemp
  8777  014266  0EEF               	movlw	-17
  8778  014268  50E3               	movf	plusw1,w,c
  8779  01426A  1032               	iorwf	btemp^0,w,c
  8780  01426C  B4D8               	btfsc	status,2,c
  8781  01426E  D041               	goto	l10657
  8782  014270  0E9F               	movlw	159
  8783  014272  6E3C               	movwf	(btemp+10)^0,c
  8784  014274  0EFF               	movlw	255
  8785  014276  6E3D               	movwf	(btemp+11)^0,c
  8786                           
  8787                           ;stkvar	_c @ sp[(-20)+12]
  8788  014278  0EF8               	movlw	-8
  8789  01427A  006F FF8C  F03A    	movff	plusw1,btemp+8
  8790  014280  0EF9               	movlw	-7
  8791  014282  006F FF8C  F03B    	movff	plusw1,btemp+9
  8792  014288  0E20               	movlw	32
  8793  01428A  123A               	iorwf	(btemp+8)^0,f,c
  8794  01428C  0E00               	movlw	0
  8795  01428E  123B               	iorwf	(btemp+9)^0,f,c
  8796  014290  503C               	movf	(btemp+10)^0,w,c
  8797  014292  263A               	addwf	(btemp+8)^0,f,c
  8798  014294  503D               	movf	(btemp+11)^0,w,c
  8799  014296  223B               	addwfc	(btemp+9)^0,f,c
  8800  014298  503B               	movf	(btemp+9)^0,w,c
  8801  01429A  E106               	bnz	u11550
  8802  01429C  0E1A               	movlw	26
  8803  01429E  5C3A               	subwf	(btemp+8)^0,w,c
  8804  0142A0  B0D8               	btfsc	status,0,c
  8805  0142A2  D002               	goto	u11550
  8806  0142A4  0E01               	movlw	1
  8807  0142A6  D001               	goto	u11560
  8808  0142A8                     u11550:
  8809  0142A8  0E00               	movlw	0
  8810  0142AA                     u11560:
  8811  0142AA  6E3C               	movwf	(btemp+10)^0,c
  8812  0142AC  6A3D               	clrf	(btemp+11)^0,c
  8813                           
  8814                           ;stkvar	_xtoa$4410 @ sp[(-20)+0]
  8815  0142AE  0EEC               	movlw	-20
  8816  0142B0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8817  0142B6  0EED               	movlw	-19
  8818  0142B8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8819                           
  8820                           ;stkvar	_xtoa$4410 @ sp[(-20)+0]
  8821  0142BE  0EEC               	movlw	-20
  8822  0142C0  006F FF8C  F032    	movff	plusw1,btemp
  8823  0142C6  0EED               	movlw	-19
  8824  0142C8  50E3               	movf	plusw1,w,c
  8825  0142CA  1032               	iorwf	btemp^0,w,c
  8826  0142CC  B4D8               	btfsc	status,2,c
  8827  0142CE  D011               	goto	l10657
  8828                           
  8829                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
  8830                           ;stkvar	_c @ sp[(-20)+12]
  8831  0142D0  0EF8               	movlw	-8
  8832  0142D2  006F FF8F FFE6     	movff	plusw1,postinc1
  8833  0142D8  006F FF8F FFE6     	movff	plusw1,postinc1
  8834  0142DE  EC9D  F0B9         	call	_toupper	;wreg free
  8835                           
  8836                           ;stkvar	_c @ sp[(-20)+12]
  8837  0142E2  0EF8               	movlw	-8
  8838  0142E4  0060  F0CB  FFE3   	movff	btemp,plusw1
  8839  0142EA  0EF9               	movlw	-7
  8840  0142EC  0060  F0CF  FFE3   	movff	btemp+1,plusw1
  8841  0142F2                     l10657:
  8842                           
  8843                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
  8844                           ;stkvar	_c @ sp[(-20)+12]
  8845                           ;stkvar	_i @ sp[(-20)+14]
  8846  0142F2  0EFA               	movlw	-6
  8847  0142F4  006F FF8C  F03C    	movff	plusw1,btemp+10
  8848  0142FA  0EFB               	movlw	-5
  8849  0142FC  006F FF8C  F03D    	movff	plusw1,btemp+11
  8850  014302  0E40               	movlw	low _dbuf
  8851  014304  243C               	addwf	(btemp+10)^0,w,c
  8852  014306  6ED9               	movwf	fsr2l,c
  8853  014308  0E02               	movlw	high _dbuf
  8854  01430A  203D               	addwfc	(btemp+11)^0,w,c
  8855  01430C  6EDA               	movwf	fsr2h,c
  8856  01430E  0EF8               	movlw	-8
  8857  014310  006F FF8F FFDF     	movff	plusw1,indf2
  8858                           
  8859                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
  8860                           ;stkvar	_p @ sp[(-20)+18]
  8861  014316  50E1               	movf	fsr1l,w,c
  8862  014318  0FFE               	addlw	-2
  8863  01431A  6ED9               	movwf	fsr2l,c
  8864  01431C  50E2               	movf	fsr1h,w,c
  8865  01431E  6EDA               	movwf	fsr2h,c
  8866  014320  0EFF               	movlw	255
  8867  014322  22DA               	addwfc	fsr2h,f,c
  8868  014324  06DE               	decf	postinc2,f,c
  8869  014326  0E00               	movlw	0
  8870  014328  5ADD               	subwfb	postdec2,f,c
  8871                           
  8872                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
  8873                           ;stkvar	_w @ sp[(-20)+16]
  8874  01432A  50E1               	movf	fsr1l,w,c
  8875  01432C  0FFC               	addlw	-4
  8876  01432E  6ED9               	movwf	fsr2l,c
  8877  014330  50E2               	movf	fsr1h,w,c
  8878  014332  6EDA               	movwf	fsr2h,c
  8879  014334  0EFF               	movlw	255
  8880  014336  22DA               	addwfc	fsr2h,f,c
  8881  014338  06DE               	decf	postinc2,f,c
  8882  01433A  0E00               	movlw	0
  8883  01433C  5ADD               	subwfb	postdec2,f,c
  8884                           
  8885                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
  8886  01433E  0E04               	movlw	4
  8887  014340  6E3D               	movwf	(btemp+11)^0,c
  8888                           
  8889                           ;stkvar	_n @ sp[(-20)+4]
  8890  014342  50E1               	movf	fsr1l,w,c
  8891  014344  0FF0               	addlw	-16
  8892  014346  6ED9               	movwf	fsr2l,c
  8893  014348  50E2               	movf	fsr1h,w,c
  8894  01434A  6EDA               	movwf	fsr2h,c
  8895  01434C  0EFF               	movlw	255
  8896  01434E  22DA               	addwfc	fsr2h,f,c
  8897  014350  283D               	incf	(btemp+11)^0,w,c
  8898  014352  52DE               	movf	postinc2,f,c
  8899  014354  D00F               	goto	u11580
  8900  014356                     u11585:
  8901  014356  52DE               	movf	postinc2,f,c
  8902  014358  52DE               	movf	postinc2,f,c
  8903  01435A  52DE               	movf	postinc2,f,c
  8904  01435C  52DE               	movf	postinc2,f,c
  8905  01435E  52DE               	movf	postinc2,f,c
  8906  014360  52DE               	movf	postinc2,f,c
  8907  014362  90D8               	bcf	status,0,c
  8908  014364  32DD               	rrcf	postdec2,f,c
  8909  014366  32DD               	rrcf	postdec2,f,c
  8910  014368  32DD               	rrcf	postdec2,f,c
  8911  01436A  32DD               	rrcf	postdec2,f,c
  8912  01436C  32DD               	rrcf	postdec2,f,c
  8913  01436E  32DD               	rrcf	postdec2,f,c
  8914  014370  32DD               	rrcf	postdec2,f,c
  8915  014372  32DE               	rrcf	postinc2,f,c
  8916  014374                     u11580:
  8917  014374  2EE8               	decfsz	wreg,f,c
  8918  014376  D7EF               	goto	u11585
  8919  014378                     l10665:
  8920                           
  8921                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8922                           ;stkvar	_i @ sp[(-20)+14]
  8923  014378  0EFB               	movlw	-5
  8924  01437A  BEE3               	btfsc	plusw1,7,c
  8925  01437C  D03A               	goto	u11630
  8926  01437E  0EFB               	movlw	-5
  8927  014380  50E3               	movf	plusw1,w,c
  8928  014382  E108               	bnz	u11590
  8929  014384  0EFA               	movlw	-6
  8930  014386  006F FF8C  F032    	movff	plusw1,btemp
  8931  01438C  0E02               	movlw	2
  8932  01438E  5E32               	subwf	btemp^0,f,c
  8933  014390  A0D8               	btfss	status,0,c
  8934  014392  D02F               	goto	u11630
  8935  014394                     u11590:
  8936                           
  8937                           ;stkvar	_n @ sp[(-20)+4]
  8938  014394  0EF0               	movlw	-16
  8939  014396  50E3               	movf	plusw1,w,c
  8940  014398  E115               	bnz	u11601
  8941  01439A  0EF1               	movlw	-15
  8942  01439C  50E3               	movf	plusw1,w,c
  8943  01439E  E112               	bnz	u11601
  8944  0143A0  0EF2               	movlw	-14
  8945  0143A2  50E3               	movf	plusw1,w,c
  8946  0143A4  E10F               	bnz	u11601
  8947  0143A6  0EF3               	movlw	-13
  8948  0143A8  50E3               	movf	plusw1,w,c
  8949  0143AA  E10C               	bnz	u11601
  8950  0143AC  0EF4               	movlw	-12
  8951  0143AE  50E3               	movf	plusw1,w,c
  8952  0143B0  E109               	bnz	u11601
  8953  0143B2  0EF5               	movlw	-11
  8954  0143B4  50E3               	movf	plusw1,w,c
  8955  0143B6  E106               	bnz	u11601
  8956  0143B8  0EF6               	movlw	-10
  8957  0143BA  50E3               	movf	plusw1,w,c
  8958  0143BC  E103               	bnz	u11601
  8959  0143BE  0EF7               	movlw	-9
  8960  0143C0  50E3               	movf	plusw1,w,c
  8961  0143C2  A4D8               	btfss	status,2,c
  8962  0143C4                     u11601:
  8963  0143C4  D6EB               	goto	l10633
  8964                           
  8965                           ;stkvar	_p @ sp[(-20)+18]
  8966  0143C6  0EFF               	movlw	-1
  8967  0143C8  BEE3               	btfsc	plusw1,7,c
  8968  0143CA  D007               	goto	u11610
  8969  0143CC  0EFF               	movlw	-1
  8970  0143CE  50E3               	movf	plusw1,w,c
  8971  0143D0  E103               	bnz	u11611
  8972  0143D2  0EFE               	movlw	-2
  8973  0143D4  04E3               	decf	plusw1,w,c
  8974  0143D6  B0D8               	btfsc	status,0,c
  8975  0143D8                     u11611:
  8976  0143D8  D6E1               	goto	l10633
  8977  0143DA                     u11610:
  8978                           
  8979                           ;stkvar	_w @ sp[(-20)+16]
  8980  0143DA  0EFD               	movlw	-3
  8981  0143DC  BEE3               	btfsc	plusw1,7,c
  8982  0143DE  D009               	goto	u11630
  8983  0143E0  0EFD               	movlw	-3
  8984  0143E2  50E3               	movf	plusw1,w,c
  8985  0143E4  E104               	bnz	u11620
  8986  0143E6  0EFC               	movlw	-4
  8987  0143E8  04E3               	decf	plusw1,w,c
  8988  0143EA  A0D8               	btfss	status,0,c
  8989  0143EC  D002               	goto	u11630
  8990  0143EE                     u11620:
  8991  0143EE  B21F               	btfsc	_flags^0,1,c
  8992  0143F0  D6D5               	goto	l10633
  8993  0143F2                     u11630:
  8994                           
  8995                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
  8996  0143F2  A81F               	btfss	_flags^0,4,c
  8997  0143F4  D036               	goto	l10681
  8998                           
  8999                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
  9000                           ;stkvar	_i @ sp[(-20)+14]
  9001  0143F6  50E1               	movf	fsr1l,w,c
  9002  0143F8  0FFA               	addlw	-6
  9003  0143FA  6ED9               	movwf	fsr2l,c
  9004  0143FC  50E2               	movf	fsr1h,w,c
  9005  0143FE  6EDA               	movwf	fsr2h,c
  9006  014400  0EFF               	movlw	255
  9007  014402  22DA               	addwfc	fsr2h,f,c
  9008  014404  06DE               	decf	postinc2,f,c
  9009  014406  0E00               	movlw	0
  9010  014408  5ADD               	subwfb	postdec2,f,c
  9011                           
  9012                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
  9013                           ;stkvar	_x @ sp[(-20)+-11]
  9014                           ;stkvar	_i @ sp[(-20)+14]
  9015  01440A  0EFA               	movlw	-6
  9016  01440C  006F FF8C  F03C    	movff	plusw1,btemp+10
  9017  014412  0EFB               	movlw	-5
  9018  014414  006F FF8C  F03D    	movff	plusw1,btemp+11
  9019  01441A  0E40               	movlw	low _dbuf
  9020  01441C  243C               	addwf	(btemp+10)^0,w,c
  9021  01441E  6ED9               	movwf	fsr2l,c
  9022  014420  0E02               	movlw	high _dbuf
  9023  014422  203D               	addwfc	(btemp+11)^0,w,c
  9024  014424  6EDA               	movwf	fsr2h,c
  9025  014426  0EE1               	movlw	-31
  9026  014428  006F FF8F FFDF     	movff	plusw1,indf2
  9027                           
  9028                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
  9029                           ;stkvar	_i @ sp[(-20)+14]
  9030  01442E  50E1               	movf	fsr1l,w,c
  9031  014430  0FFA               	addlw	-6
  9032  014432  6ED9               	movwf	fsr2l,c
  9033  014434  50E2               	movf	fsr1h,w,c
  9034  014436  6EDA               	movwf	fsr2h,c
  9035  014438  0EFF               	movlw	255
  9036  01443A  22DA               	addwfc	fsr2h,f,c
  9037  01443C  06DE               	decf	postinc2,f,c
  9038  01443E  0E00               	movlw	0
  9039  014440  5ADD               	subwfb	postdec2,f,c
  9040                           
  9041                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
  9042                           ;stkvar	_i @ sp[(-20)+14]
  9043  014442  0EFA               	movlw	-6
  9044  014444  006F FF8C  F03C    	movff	plusw1,btemp+10
  9045  01444A  0EFB               	movlw	-5
  9046  01444C  006F FF8C  F03D    	movff	plusw1,btemp+11
  9047  014452  0E40               	movlw	low _dbuf
  9048  014454  243C               	addwf	(btemp+10)^0,w,c
  9049  014456  6ED9               	movwf	fsr2l,c
  9050  014458  0E02               	movlw	high _dbuf
  9051  01445A  203D               	addwfc	(btemp+11)^0,w,c
  9052  01445C  6EDA               	movwf	fsr2h,c
  9053  01445E  0E30               	movlw	48
  9054  014460  6EDF               	movwf	indf2,c
  9055  014462                     l10681:
  9056                           
  9057                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
  9058                           ;stkvar	_w @ sp[(-20)+16]
  9059  014462  0EFC               	movlw	-4
  9060  014464  006F FF8F FFE6     	movff	plusw1,postinc1
  9061  01446A  006F FF8F FFE6     	movff	plusw1,postinc1
  9062                           
  9063                           ;stkvar	_i @ sp[(-22)+14]
  9064  014470  0E40               	movlw	low _dbuf
  9065  014472  6E3C               	movwf	(btemp+10)^0,c
  9066  014474  0E02               	movlw	high _dbuf
  9067  014476  6E3D               	movwf	(btemp+11)^0,c
  9068  014478  0EF8               	movlw	-8
  9069  01447A  50E3               	movf	plusw1,w,c
  9070  01447C  263C               	addwf	(btemp+10)^0,f,c
  9071  01447E  0EF9               	movlw	-7
  9072  014480  50E3               	movf	plusw1,w,c
  9073  014482  223D               	addwfc	(btemp+11)^0,f,c
  9074  014484  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  9075  01448A  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  9076                           
  9077                           ;stkvar	_fp @ sp[(-24)+-2]
  9078  014490  0EE6               	movlw	-26
  9079  014492  006F FF8F FFE6     	movff	plusw1,postinc1
  9080  014498  006F FF8F FFE6     	movff	plusw1,postinc1
  9081  01449E  EC7F  F0B3         	call	_pad	;wreg free
  9082                           
  9083                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
  9084  0144A2  0EE1               	movlw	225
  9085  0144A4  26E1               	addwf	fsr1l,f,c
  9086  0144A6  0EFF               	movlw	255
  9087  0144A8  22E2               	addwfc	fsr1h,f,c
  9088  0144AA  0012               	return		;funcret
  9089  0144AC                     __end_of_xtoa:
  9090                           	opt callstack 0
  9091                           
  9092 ;; *************** function _toupper *****************
  9093 ;; Defined at:
  9094 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
  9095 ;; Parameters:    Size  Location     Type
  9096 ;;  c               2  [STACK] int 
  9097 ;; Auto vars:     Size  Location     Type
  9098 ;;		None
  9099 ;; Return value:  Size  Location     Type
  9100 ;;                  2  [STACK] int 
  9101 ;; Registers used:
  9102 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
  9103 ;; Tracked objects:
  9104 ;;		On entry : 0/2
  9105 ;;		On exit  : 0/0
  9106 ;;		Unchanged: 0/0
  9107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9112 ;;Total ram usage:        0 bytes
  9113 ;; Hardware stack levels used:    1
  9114 ;; Hardware stack levels required when called:    7
  9115 ;; This function calls:
  9116 ;;		_islower
  9117 ;; This function is called by:
  9118 ;;		_xtoa
  9119 ;; This function uses a reentrant model
  9120 ;;
  9121                           
  9122                           	psect	text40
  9123  01733A                     __ptext40:
  9124                           	opt callstack 0
  9125  01733A                     _toupper:
  9126                           	opt callstack 0
  9127                           
  9128                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9129  01733A  52E6               	movf	postinc1,f,c
  9130  01733C  52E6               	movf	postinc1,f,c
  9131                           
  9132                           ;stkvar	_c @ sp[(-2)+-2]
  9133                           
  9134                           ;incstack = 0
  9135  01733E  0EFC               	movlw	-4
  9136  017340  50E3               	movf	plusw1,w,c
  9137  017342  0F9F               	addlw	159
  9138  017344  6E3C               	movwf	(btemp+10)^0,c
  9139  017346  0EFD               	movlw	-3
  9140  017348  006F FF8C  F03D    	movff	plusw1,btemp+11
  9141  01734E  0EFF               	movlw	255
  9142  017350  223D               	addwfc	(btemp+11)^0,f,c
  9143  017352  503D               	movf	(btemp+11)^0,w,c
  9144  017354  E106               	bnz	u9580
  9145  017356  0E1A               	movlw	26
  9146  017358  5C3C               	subwf	(btemp+10)^0,w,c
  9147  01735A  B0D8               	btfsc	status,0,c
  9148  01735C  D002               	goto	u9580
  9149  01735E  0E01               	movlw	1
  9150  017360  D001               	goto	u9590
  9151  017362                     u9580:
  9152  017362  0E00               	movlw	0
  9153  017364                     u9590:
  9154  017364  6E3C               	movwf	(btemp+10)^0,c
  9155  017366  6A3D               	clrf	(btemp+11)^0,c
  9156                           
  9157                           ;stkvar	_toupper$5070 @ sp[(-2)+0]
  9158  017368  0EFE               	movlw	-2
  9159  01736A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9160  017370  0EFF               	movlw	-1
  9161  017372  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9162                           
  9163                           ;stkvar	_toupper$5070 @ sp[(-2)+0]
  9164  017378  0EFE               	movlw	-2
  9165  01737A  006F FF8C  F032    	movff	plusw1,btemp
  9166  017380  0EFF               	movlw	-1
  9167  017382  50E3               	movf	plusw1,w,c
  9168  017384  1032               	iorwf	btemp^0,w,c
  9169  017386  B4D8               	btfsc	status,2,c
  9170  017388  D00D               	goto	l9583
  9171                           
  9172                           ;stkvar	_c @ sp[(-2)+-2]
  9173  01738A  0EFC               	movlw	-4
  9174  01738C  006F FF8C  F032    	movff	plusw1,btemp
  9175  017392  0EFD               	movlw	-3
  9176  017394  006F FF8C  F033    	movff	plusw1,btemp+1
  9177  01739A  0E5F               	movlw	95
  9178  01739C  1632               	andwf	btemp^0,f,c
  9179  01739E  0E00               	movlw	0
  9180  0173A0  1633               	andwf	(btemp+1)^0,f,c
  9181  0173A2  D008               	goto	l2900
  9182  0173A4                     l9583:
  9183                           
  9184                           ;stkvar	_c @ sp[(-2)+-2]
  9185  0173A4  0EFC               	movlw	-4
  9186  0173A6  006F FF8C  F032    	movff	plusw1,btemp
  9187  0173AC  0EFD               	movlw	-3
  9188  0173AE  006F FF8C  F033    	movff	plusw1,btemp+1
  9189  0173B4                     l2900:
  9190                           
  9191                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  9192  0173B4  52E5               	movf	postdec1,f,c
  9193  0173B6  52E5               	movf	postdec1,f,c
  9194  0173B8  52E5               	movf	postdec1,f,c
  9195  0173BA  52E5               	movf	postdec1,f,c
  9196  0173BC  0012               	return		;funcret
  9197  0173BE                     __end_of_toupper:
  9198                           	opt callstack 0
  9199                           
  9200 ;; *************** function _islower *****************
  9201 ;; Defined at:
  9202 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
  9203 ;; Parameters:    Size  Location     Type
  9204 ;;  c               2  [STACK] int 
  9205 ;; Auto vars:     Size  Location     Type
  9206 ;;		None
  9207 ;; Return value:  Size  Location     Type
  9208 ;;                  2  [STACK] int 
  9209 ;; Registers used:
  9210 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
  9211 ;; Tracked objects:
  9212 ;;		On entry : 0/0
  9213 ;;		On exit  : 0/0
  9214 ;;		Unchanged: 0/0
  9215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9220 ;;Total ram usage:        0 bytes
  9221 ;; Hardware stack levels used:    1
  9222 ;; Hardware stack levels required when called:    6
  9223 ;; This function calls:
  9224 ;;		Nothing
  9225 ;; This function is called by:
  9226 ;;		_toupper
  9227 ;; This function uses a reentrant model
  9228 ;;
  9229                           
  9230                           	psect	text41
  9231  017E6E                     __ptext41:
  9232                           	opt callstack 0
  9233  017E6E                     _islower:
  9234                           	opt callstack 16
  9235                           
  9236                           ;stkvar	_c @ sp[(0)+-2]
  9237                           
  9238                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9239                           ;incstack = 0
  9240  017E6E  0EFE               	movlw	-2
  9241  017E70  50E3               	movf	plusw1,w,c
  9242  017E72  0F9F               	addlw	159
  9243  017E74  6E3C               	movwf	(btemp+10)^0,c
  9244  017E76  0EFF               	movlw	-1
  9245  017E78  006F FF8C  F03D    	movff	plusw1,btemp+11
  9246  017E7E  0EFF               	movlw	255
  9247  017E80  223D               	addwfc	(btemp+11)^0,f,c
  9248  017E82  503D               	movf	(btemp+11)^0,w,c
  9249  017E84  E106               	bnz	u9270
  9250  017E86  0E1A               	movlw	26
  9251  017E88  5C3C               	subwf	(btemp+10)^0,w,c
  9252  017E8A  B0D8               	btfsc	status,0,c
  9253  017E8C  D002               	goto	u9270
  9254  017E8E  0E01               	movlw	1
  9255  017E90  D001               	goto	u9280
  9256  017E92                     u9270:
  9257  017E92  0E00               	movlw	0
  9258  017E94                     u9280:
  9259  017E94  6E32               	movwf	btemp^0,c
  9260  017E96  6A33               	clrf	(btemp+1)^0,c
  9261                           
  9262                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  9263  017E98  52E5               	movf	postdec1,f,c
  9264  017E9A  52E5               	movf	postdec1,f,c
  9265  017E9C  0012               	return		;funcret
  9266  017E9E                     __end_of_islower:
  9267                           	opt callstack 0
  9268                           
  9269 ;; *************** function _isalpha *****************
  9270 ;; Defined at:
  9271 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
  9272 ;; Parameters:    Size  Location     Type
  9273 ;;  c               2  [STACK] int 
  9274 ;; Auto vars:     Size  Location     Type
  9275 ;;		None
  9276 ;; Return value:  Size  Location     Type
  9277 ;;                  2  [STACK] int 
  9278 ;; Registers used:
  9279 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
  9280 ;; Tracked objects:
  9281 ;;		On entry : 0/0
  9282 ;;		On exit  : 0/0
  9283 ;;		Unchanged: 0/0
  9284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9289 ;;Total ram usage:        0 bytes
  9290 ;; Hardware stack levels used:    1
  9291 ;; Hardware stack levels required when called:    6
  9292 ;; This function calls:
  9293 ;;		Nothing
  9294 ;; This function is called by:
  9295 ;;		_xtoa
  9296 ;; This function uses a reentrant model
  9297 ;;
  9298                           
  9299                           	psect	text42
  9300  017C20                     __ptext42:
  9301                           	opt callstack 0
  9302  017C20                     _isalpha:
  9303                           	opt callstack 17
  9304                           
  9305                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9306                           ;incstack = 0
  9307  017C20  0E9F               	movlw	159
  9308  017C22  6E3C               	movwf	(btemp+10)^0,c
  9309  017C24  0EFF               	movlw	255
  9310  017C26  6E3D               	movwf	(btemp+11)^0,c
  9311                           
  9312                           ;stkvar	_c @ sp[(0)+-2]
  9313  017C28  0EFE               	movlw	-2
  9314  017C2A  006F FF8C  F03A    	movff	plusw1,btemp+8
  9315  017C30  0EFF               	movlw	-1
  9316  017C32  006F FF8C  F03B    	movff	plusw1,btemp+9
  9317  017C38  0E20               	movlw	32
  9318  017C3A  123A               	iorwf	(btemp+8)^0,f,c
  9319  017C3C  0E00               	movlw	0
  9320  017C3E  123B               	iorwf	(btemp+9)^0,f,c
  9321  017C40  503C               	movf	(btemp+10)^0,w,c
  9322  017C42  263A               	addwf	(btemp+8)^0,f,c
  9323  017C44  503D               	movf	(btemp+11)^0,w,c
  9324  017C46  223B               	addwfc	(btemp+9)^0,f,c
  9325  017C48  503B               	movf	(btemp+9)^0,w,c
  9326  017C4A  E106               	bnz	u9560
  9327  017C4C  0E1A               	movlw	26
  9328  017C4E  5C3A               	subwf	(btemp+8)^0,w,c
  9329  017C50  B0D8               	btfsc	status,0,c
  9330  017C52  D002               	goto	u9560
  9331  017C54  0E01               	movlw	1
  9332  017C56  D001               	goto	u9570
  9333  017C58                     u9560:
  9334  017C58  0E00               	movlw	0
  9335  017C5A                     u9570:
  9336  017C5A  6E32               	movwf	btemp^0,c
  9337  017C5C  6A33               	clrf	(btemp+1)^0,c
  9338                           
  9339                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  9340  017C5E  52E5               	movf	postdec1,f,c
  9341  017C60  52E5               	movf	postdec1,f,c
  9342  017C62  0012               	return		;funcret
  9343  017C64                     __end_of_isalpha:
  9344                           	opt callstack 0
  9345                           
  9346 ;; *************** function _strncmp *****************
  9347 ;; Defined at:
  9348 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
  9349 ;; Parameters:    Size  Location     Type
  9350 ;;  _l              2  [STACK] PTR const unsigned char 
  9351 ;;		 -> ct(3), 
  9352 ;;  _r              2  [STACK] PTR const unsigned char 
  9353 ;;		 -> STR_44(3), 
  9354 ;;  n               2  [STACK] unsigned int 
  9355 ;; Auto vars:     Size  Location     Type
  9356 ;;  r               2  [STACK] PTR const unsigned char 
  9357 ;;		 -> STR_44(3), 
  9358 ;;  l               2  [STACK] PTR const unsigned char 
  9359 ;;		 -> ct(3), 
  9360 ;; Return value:  Size  Location     Type
  9361 ;;                  2  [STACK] int 
  9362 ;; Registers used:
  9363 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru,
      + prodl
  9364 ;; Tracked objects:
  9365 ;;		On entry : 0/5
  9366 ;;		On exit  : 0/0
  9367 ;;		Unchanged: 0/0
  9368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9372 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9373 ;;Total ram usage:        0 bytes
  9374 ;; Hardware stack levels used:    1
  9375 ;; Hardware stack levels required when called:    6
  9376 ;; This function calls:
  9377 ;;		Nothing
  9378 ;; This function is called by:
  9379 ;;		_vfpfcnvrt
  9380 ;; This function uses a reentrant model
  9381 ;;
  9382                           
  9383                           	psect	text43
  9384  01590C                     __ptext43:
  9385                           	opt callstack 0
  9386  01590C                     _strncmp:
  9387                           	opt callstack 0
  9388                           
  9389                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9390  01590C  52E6               	movf	postinc1,f,c
  9391  01590E  52E6               	movf	postinc1,f,c
  9392  015910  52E6               	movf	postinc1,f,c
  9393  015912  52E6               	movf	postinc1,f,c
  9394                           
  9395                           ;stkvar	__l @ sp[(-4)+-2]
  9396                           
  9397                           ;incstack = 0
  9398  015914  0EFA               	movlw	-6
  9399  015916  006F FF8C  F03C    	movff	plusw1,btemp+10
  9400  01591C  0EFB               	movlw	-5
  9401  01591E  006F FF8C  F03D    	movff	plusw1,btemp+11
  9402                           
  9403                           ;stkvar	_l @ sp[(-4)+2]
  9404  015924  0EFF               	movlw	-1
  9405  015926  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9406  01592C  0EFE               	movlw	-2
  9407  01592E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9408                           
  9409                           ;stkvar	__r @ sp[(-4)+-4]
  9410  015934  0EF8               	movlw	-8
  9411  015936  006F FF8C  F03C    	movff	plusw1,btemp+10
  9412  01593C  0EF9               	movlw	-7
  9413  01593E  006F FF8C  F03D    	movff	plusw1,btemp+11
  9414                           
  9415                           ;stkvar	_r @ sp[(-4)+0]
  9416  015944  0EFD               	movlw	-3
  9417  015946  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9418  01594C  0EFC               	movlw	-4
  9419  01594E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9420                           
  9421                           ;stkvar	_n @ sp[(-4)+-6]
  9422  015954  0EF6               	movlw	-10
  9423  015956  006F FF8C  F032    	movff	plusw1,btemp
  9424  01595C  0E01               	movlw	1
  9425  01595E  5E32               	subwf	btemp^0,f,c
  9426  015960  0EF6               	movlw	-10
  9427  015962  0060  F0CB  FFE3   	movff	btemp,plusw1
  9428  015968  0EF7               	movlw	-9
  9429  01596A  006F FF8C  F032    	movff	plusw1,btemp
  9430  015970  0E00               	movlw	0
  9431  015972  5A32               	subwfb	btemp^0,f,c
  9432  015974  0EF7               	movlw	-9
  9433  015976  0060  F0CB  FFE3   	movff	btemp,plusw1
  9434  01597C  0EF6               	movlw	-10
  9435  01597E  28E3               	incf	plusw1,w,c
  9436  015980  E13F               	bnz	l10741
  9437  015982  0EF7               	movlw	-9
  9438  015984  28E3               	incf	plusw1,w,c
  9439  015986  A4D8               	btfss	status,2,c
  9440  015988  D03B               	goto	l10741
  9441  01598A  0E00               	movlw	0
  9442  01598C  6E32               	movwf	btemp^0,c
  9443  01598E  0E00               	movlw	0
  9444  015990  6E33               	movwf	(btemp+1)^0,c
  9445  015992  D09B               	goto	l2872
  9446  015994                     l10739:
  9447                           
  9448                           ;stkvar	_l @ sp[(-4)+2]
  9449  015994  0EFE               	movlw	-2
  9450  015996  50E3               	movf	plusw1,w,c
  9451  015998  0F01               	addlw	1
  9452  01599A  6E32               	movwf	btemp^0,c
  9453  01599C  0EFE               	movlw	-2
  9454  01599E  0060  F0CB  FFE3   	movff	btemp,plusw1
  9455  0159A4  6A32               	clrf	btemp^0,c
  9456  0159A6  0EFF               	movlw	-1
  9457  0159A8  50E3               	movf	plusw1,w,c
  9458  0159AA  2032               	addwfc	btemp^0,w,c
  9459  0159AC  6E32               	movwf	btemp^0,c
  9460  0159AE  0EFF               	movlw	-1
  9461  0159B0  0060  F0CB  FFE3   	movff	btemp,plusw1
  9462                           
  9463                           ;stkvar	_r @ sp[(-4)+0]
  9464  0159B6  0EFC               	movlw	-4
  9465  0159B8  50E3               	movf	plusw1,w,c
  9466  0159BA  0F01               	addlw	1
  9467  0159BC  6E32               	movwf	btemp^0,c
  9468  0159BE  0EFC               	movlw	-4
  9469  0159C0  0060  F0CB  FFE3   	movff	btemp,plusw1
  9470  0159C6  6A32               	clrf	btemp^0,c
  9471  0159C8  0EFD               	movlw	-3
  9472  0159CA  50E3               	movf	plusw1,w,c
  9473  0159CC  2032               	addwfc	btemp^0,w,c
  9474  0159CE  6E32               	movwf	btemp^0,c
  9475  0159D0  0EFD               	movlw	-3
  9476  0159D2  0060  F0CB  FFE3   	movff	btemp,plusw1
  9477                           
  9478                           ;stkvar	_n @ sp[(-4)+-6]
  9479  0159D8  0EF6               	movlw	-10
  9480  0159DA  006F FF8C  F032    	movff	plusw1,btemp
  9481  0159E0  0E01               	movlw	1
  9482  0159E2  5E32               	subwf	btemp^0,f,c
  9483  0159E4  0EF6               	movlw	-10
  9484  0159E6  0060  F0CB  FFE3   	movff	btemp,plusw1
  9485  0159EC  0EF7               	movlw	-9
  9486  0159EE  006F FF8C  F032    	movff	plusw1,btemp
  9487  0159F4  0E00               	movlw	0
  9488  0159F6  5A32               	subwfb	btemp^0,f,c
  9489  0159F8  0EF7               	movlw	-9
  9490  0159FA  0060  F0CB  FFE3   	movff	btemp,plusw1
  9491  015A00                     l10741:
  9492                           
  9493                           ;stkvar	_l @ sp[(-4)+2]
  9494  015A00  0EFE               	movlw	-2
  9495  015A02  006F FF8F FFD9     	movff	plusw1,fsr2l
  9496  015A08  0EFF               	movlw	-1
  9497  015A0A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9498  015A10  50DF               	movf	indf2,w,c
  9499  015A12  B4D8               	btfsc	status,2,c
  9500  015A14  D03B               	goto	u11760
  9501                           
  9502                           ;stkvar	_r @ sp[(-4)+0]
  9503  015A16  50E1               	movf	fsr1l,w,c
  9504  015A18  0FFC               	addlw	-4
  9505  015A1A  6ED9               	movwf	fsr2l,c
  9506  015A1C  50E2               	movf	fsr1h,w,c
  9507  015A1E  6EDA               	movwf	fsr2h,c
  9508  015A20  0EFF               	movlw	255
  9509  015A22  22DA               	addwfc	fsr2h,f,c
  9510  015A24  006F FF7B FFF6     	movff	postinc2,tblptrl
  9511  015A2A  006F FF77 FFF7     	movff	postdec2,tblptrh
  9512  015A30                     	if	0	;tblptru may be non-zero
  9513  015A30                     	endif
  9514  015A30                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9515  015A30  0E00               	movlw	low (__mediumconst shr (0+16))
  9516  015A32  6EF8               	movwf	tblptru,c
  9517  015A34                     	endif
  9518  015A34  0008               	tblrd		*
  9519  015A36  50F5               	movf	tablat,w,c
  9520  015A38  0900               	iorlw	0
  9521  015A3A  B4D8               	btfsc	status,2,c
  9522  015A3C  D027               	goto	u11760
  9523                           
  9524                           ;stkvar	_n @ sp[(-4)+-6]
  9525  015A3E  0EF6               	movlw	-10
  9526  015A40  006F FF8C  F032    	movff	plusw1,btemp
  9527  015A46  0EF7               	movlw	-9
  9528  015A48  50E3               	movf	plusw1,w,c
  9529  015A4A  1032               	iorwf	btemp^0,w,c
  9530  015A4C  B4D8               	btfsc	status,2,c
  9531  015A4E  D01E               	goto	u11760
  9532                           
  9533                           ;stkvar	_l @ sp[(-4)+2]
  9534  015A50  0EFE               	movlw	-2
  9535  015A52  006F FF8F FFD9     	movff	plusw1,fsr2l
  9536  015A58  0EFF               	movlw	-1
  9537  015A5A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9538  015A60  50DF               	movf	indf2,w,c
  9539  015A62  6E3D               	movwf	(btemp+11)^0,c
  9540                           
  9541                           ;stkvar	_r @ sp[(-4)+0]
  9542  015A64  50E1               	movf	fsr1l,w,c
  9543  015A66  0FFC               	addlw	-4
  9544  015A68  6ED9               	movwf	fsr2l,c
  9545  015A6A  50E2               	movf	fsr1h,w,c
  9546  015A6C  6EDA               	movwf	fsr2h,c
  9547  015A6E  0EFF               	movlw	255
  9548  015A70  22DA               	addwfc	fsr2h,f,c
  9549  015A72  006F FF7B FFF6     	movff	postinc2,tblptrl
  9550  015A78  006F FF77 FFF7     	movff	postdec2,tblptrh
  9551  015A7E                     	if	0	;tblptru may be non-zero
  9552  015A7E                     	endif
  9553  015A7E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9554  015A7E  0E00               	movlw	low (__mediumconst shr (0+16))
  9555  015A80  6EF8               	movwf	tblptru,c
  9556  015A82                     	endif
  9557  015A82  0008               	tblrd		*
  9558  015A84  50F5               	movf	tablat,w,c
  9559  015A86  183D               	xorwf	(btemp+11)^0,w,c
  9560  015A88  B4D8               	btfsc	status,2,c
  9561  015A8A  D784               	goto	l10739
  9562  015A8C                     u11760:
  9563                           
  9564                           ;stkvar	_l @ sp[(-4)+2]
  9565  015A8C  0EFE               	movlw	-2
  9566  015A8E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9567  015A94  0EFF               	movlw	-1
  9568  015A96  006F FF8F FFDA     	movff	plusw1,fsr2h
  9569  015A9C  50DF               	movf	indf2,w,c
  9570  015A9E  6E32               	movwf	btemp^0,c
  9571  015AA0  6A33               	clrf	(btemp+1)^0,c
  9572                           
  9573                           ;stkvar	_r @ sp[(-4)+0]
  9574  015AA2  50E1               	movf	fsr1l,w,c
  9575  015AA4  0FFC               	addlw	-4
  9576  015AA6  6ED9               	movwf	fsr2l,c
  9577  015AA8  50E2               	movf	fsr1h,w,c
  9578  015AAA  6EDA               	movwf	fsr2h,c
  9579  015AAC  0EFF               	movlw	255
  9580  015AAE  22DA               	addwfc	fsr2h,f,c
  9581  015AB0  006F FF7B FFF6     	movff	postinc2,tblptrl
  9582  015AB6  006F FF77 FFF7     	movff	postdec2,tblptrh
  9583  015ABC                     	if	0	;tblptru may be non-zero
  9584  015ABC                     	endif
  9585  015ABC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9586  015ABC  0E00               	movlw	low (__mediumconst shr (0+16))
  9587  015ABE  6EF8               	movwf	tblptru,c
  9588  015AC0                     	endif
  9589  015AC0  0008               	tblrd		*
  9590  015AC2  50F5               	movf	tablat,w,c
  9591  015AC4  5E32               	subwf	btemp^0,f,c
  9592  015AC6  0E00               	movlw	0
  9593  015AC8  5A33               	subwfb	(btemp+1)^0,f,c
  9594  015ACA                     l2872:
  9595                           
  9596                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
  9597  015ACA  0EF6               	movlw	246
  9598  015ACC  26E1               	addwf	fsr1l,f,c
  9599  015ACE  0EFF               	movlw	255
  9600  015AD0  22E2               	addwfc	fsr1h,f,c
  9601  015AD2  0012               	return		;funcret
  9602  015AD4                     __end_of_strncmp:
  9603                           	opt callstack 0
  9604                           
  9605 ;; *************** function _stoa *****************
  9606 ;; Defined at:
  9607 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  9608 ;; Parameters:    Size  Location     Type
  9609 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9610 ;;		 -> f(6), NULL(0), 
  9611 ;;  s               2  [STACK] PTR unsigned char 
  9612 ;;		 -> ?_printf(2), ?_sprintf(2), STR_16(9), STR_15(12), 
  9613 ;;		 -> D.lcd(216), D(218), T(144), STR_7(5), 
  9614 ;;		 -> STR_3(5), V(187), 
  9615 ;; Auto vars:     Size  Location     Type
  9616 ;;  nuls            7  [STACK] unsigned char [7]
  9617 ;;  l               2  [STACK] int 
  9618 ;;  p               2  [STACK] int 
  9619 ;;  cp              2  [STACK] PTR unsigned char 
  9620 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_16(9), 
  9621 ;;		 -> STR_15(12), D.lcd(216), D(218), T(144), 
  9622 ;;		 -> STR_7(5), STR_3(5), V(187), 
  9623 ;;  w               2  [STACK] int 
  9624 ;;  i               2  [STACK] int 
  9625 ;; Return value:  Size  Location     Type
  9626 ;;                  2  [STACK] int 
  9627 ;; Registers used:
  9628 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  9629 ;; Tracked objects:
  9630 ;;		On entry : 0/5
  9631 ;;		On exit  : 0/0
  9632 ;;		Unchanged: 0/0
  9633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9637 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9638 ;;Total ram usage:        0 bytes
  9639 ;; Hardware stack levels used:    1
  9640 ;; Hardware stack levels required when called:    9
  9641 ;; This function calls:
  9642 ;;		_fputc
  9643 ;;		_strlen
  9644 ;; This function is called by:
  9645 ;;		_vfpfcnvrt
  9646 ;; This function uses a reentrant model
  9647 ;;
  9648                           
  9649                           	psect	text44
  9650  014B04                     __ptext44:
  9651                           	opt callstack 0
  9652  014B04                     _stoa:
  9653                           	opt callstack 0
  9654                           
  9655                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  9656  014B04  0E11               	movlw	17
  9657  014B06  26E1               	addwf	fsr1l,f,c
  9658  014B08  0E00               	movlw	0
  9659  014B0A  22E2               	addwfc	fsr1h,f,c
  9660                           
  9661                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
  9662                           
  9663                           ;incstack = 0
  9664  014B0C  EE20  F0EF         	lfsr	2,stoa@F1166
  9665                           
  9666                           ;stkvar	_nuls @ sp[(-17)+0]
  9667  014B10  0E07               	movlw	7
  9668  014B12  6E32               	movwf	btemp^0,c
  9669  014B14  0EEF               	movlw	-17
  9670  014B16                     us1137999:
  9671  014B16  006F FF7B FFE3     	movff	postinc2,plusw1
  9672  014B1C  28E8               	incf	wreg,w,c
  9673  014B1E  2E32               	decfsz	btemp^0,f,c
  9674  014B20  D7FA               	bra	us1137999
  9675                           
  9676                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
  9677                           ;stkvar	_s @ sp[(-17)+-4]
  9678  014B22  0EEB               	movlw	-21
  9679  014B24  006F FF8C  F03C    	movff	plusw1,btemp+10
  9680  014B2A  0EEC               	movlw	-20
  9681  014B2C  006F FF8C  F03D    	movff	plusw1,btemp+11
  9682                           
  9683                           ;stkvar	_cp @ sp[(-17)+11]
  9684  014B32  0EFB               	movlw	-5
  9685  014B34  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9686  014B3A  0EFA               	movlw	-6
  9687  014B3C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9688                           
  9689                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
  9690                           ;stkvar	_cp @ sp[(-17)+11]
  9691  014B42  0EFA               	movlw	-6
  9692  014B44  006F FF8C  F032    	movff	plusw1,btemp
  9693  014B4A  0EFB               	movlw	-5
  9694  014B4C  50E3               	movf	plusw1,w,c
  9695  014B4E  1032               	iorwf	btemp^0,w,c
  9696  014B50  A4D8               	btfss	status,2,c
  9697  014B52  D00E               	goto	l10569
  9698                           
  9699                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
  9700                           ;stkvar	_nuls @ sp[(-17)+0]
  9701  014B54  0EEF               	movlw	239
  9702  014B56  24E1               	addwf	fsr1l,w,c
  9703  014B58  6E3C               	movwf	(btemp+10)^0,c
  9704  014B5A  0EFF               	movlw	255
  9705  014B5C  20E2               	addwfc	fsr1h,w,c
  9706  014B5E  6E3D               	movwf	(btemp+11)^0,c
  9707                           
  9708                           ;stkvar	_cp @ sp[(-17)+11]
  9709  014B60  0EFB               	movlw	-5
  9710  014B62  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9711  014B68  0EFA               	movlw	-6
  9712  014B6A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9713  014B70                     l10569:
  9714                           
  9715                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
  9716                           ;stkvar	_cp @ sp[(-17)+11]
  9717  014B70  0EFA               	movlw	-6
  9718  014B72  006F FF8F FFE6     	movff	plusw1,postinc1
  9719  014B78  006F FF8F FFE6     	movff	plusw1,postinc1
  9720  014B7E  EC2A  F0B8         	call	_strlen	;wreg free
  9721                           
  9722                           ;stkvar	_l @ sp[(-17)+7]
  9723  014B82  0EF6               	movlw	-10
  9724  014B84  0060  F0CB  FFE3   	movff	btemp,plusw1
  9725  014B8A  0EF7               	movlw	-9
  9726  014B8C  0060  F0CF  FFE3   	movff	btemp+1,plusw1
  9727                           
  9728                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
  9729                           ;stkvar	_p @ sp[(-17)+9]
  9730  014B92  0EF8               	movlw	-8
  9731  014B94  0060  F077  FFE3   	movff	_prec,plusw1
  9732  014B9A  0EF9               	movlw	-7
  9733  014B9C  0060  F07B  FFE3   	movff	_prec+1,plusw1
  9734                           
  9735                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
  9736                           ;stkvar	_p @ sp[(-17)+9]
  9737  014BA2  0EF9               	movlw	-7
  9738  014BA4  BEE3               	btfsc	plusw1,7,c
  9739  014BA6  D023               	goto	l1946
  9740                           
  9741                           ;stkvar	_l @ sp[(-17)+7]
  9742                           ;stkvar	_p @ sp[(-17)+9]
  9743  014BA8  50E1               	movf	fsr1l,w,c
  9744  014BAA  0FF8               	addlw	-8
  9745  014BAC  6ED9               	movwf	fsr2l,c
  9746  014BAE  50E2               	movf	fsr1h,w,c
  9747  014BB0  6EDA               	movwf	fsr2h,c
  9748  014BB2  0EFF               	movlw	255
  9749  014BB4  22DA               	addwfc	fsr2h,f,c
  9750  014BB6  0EF6               	movlw	-10
  9751  014BB8  50E3               	movf	plusw1,w,c
  9752  014BBA  5CDE               	subwf	postinc2,w,c
  9753  014BBC  50DE               	movf	postinc2,w,c
  9754  014BBE  0A80               	xorlw	128
  9755  014BC0  6E32               	movwf	btemp^0,c
  9756  014BC2  0EF7               	movlw	-9
  9757  014BC4  50E3               	movf	plusw1,w,c
  9758  014BC6  0A80               	xorlw	128
  9759  014BC8  5832               	subwfb	btemp^0,w,c
  9760  014BCA  B0D8               	btfsc	status,0,c
  9761  014BCC  D010               	goto	l1946
  9762                           
  9763                           ;stkvar	_p @ sp[(-17)+9]
  9764                           ;stkvar	_l @ sp[(-17)+7]
  9765  014BCE  0EF8               	movlw	-8
  9766  014BD0  006F FF8C  F032    	movff	plusw1,btemp
  9767  014BD6  0EF6               	movlw	-10
  9768  014BD8  0060  F0CB  FFE3   	movff	btemp,plusw1
  9769  014BDE  0EF9               	movlw	-7
  9770  014BE0  006F FF8C  F032    	movff	plusw1,btemp
  9771  014BE6  0EF7               	movlw	-9
  9772  014BE8  0060  F0CB  FFE3   	movff	btemp,plusw1
  9773  014BEE                     l1946:
  9774                           
  9775                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
  9776                           ;stkvar	_l @ sp[(-17)+7]
  9777                           ;stkvar	_p @ sp[(-17)+9]
  9778  014BEE  0EF6               	movlw	-10
  9779  014BF0  006F FF8C  F032    	movff	plusw1,btemp
  9780  014BF6  0EF8               	movlw	-8
  9781  014BF8  0060  F0CB  FFE3   	movff	btemp,plusw1
  9782  014BFE  0EF7               	movlw	-9
  9783  014C00  006F FF8C  F032    	movff	plusw1,btemp
  9784  014C06  0EF9               	movlw	-7
  9785  014C08  0060  F0CB  FFE3   	movff	btemp,plusw1
  9786                           
  9787                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
  9788                           ;stkvar	_w @ sp[(-17)+13]
  9789  014C0E  0EFC               	movlw	-4
  9790  014C10  0060  F06F  FFE3   	movff	_width,plusw1
  9791  014C16  0EFD               	movlw	-3
  9792  014C18  0060  F073  FFE3   	movff	_width+1,plusw1
  9793                           
  9794                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
  9795  014C1E  A01F               	btfss	_flags^0,0,c
  9796  014C20  D01F               	goto	l10589
  9797  014C22  D031               	goto	u11420
  9798  014C24                     l10585:
  9799                           
  9800                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
  9801                           ;stkvar	_fp @ sp[(-17)+-2]
  9802  014C24  0EED               	movlw	-19
  9803  014C26  006F FF8F FFE6     	movff	plusw1,postinc1
  9804  014C2C  006F FF8F FFE6     	movff	plusw1,postinc1
  9805  014C32  0E20               	movlw	32
  9806  014C34  6EE6               	movwf	postinc1,c
  9807  014C36  0E00               	movlw	0
  9808  014C38  6EE6               	movwf	postinc1,c
  9809  014C3A  EC61  F0B2         	call	_fputc	;wreg free
  9810                           
  9811                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
  9812                           ;stkvar	_l @ sp[(-17)+7]
  9813  014C3E  0EF6               	movlw	-10
  9814  014C40  50E3               	movf	plusw1,w,c
  9815  014C42  0F01               	addlw	1
  9816  014C44  6E32               	movwf	btemp^0,c
  9817  014C46  0EF6               	movlw	-10
  9818  014C48  0060  F0CB  FFE3   	movff	btemp,plusw1
  9819  014C4E  6A32               	clrf	btemp^0,c
  9820  014C50  0EF7               	movlw	-9
  9821  014C52  50E3               	movf	plusw1,w,c
  9822  014C54  2032               	addwfc	btemp^0,w,c
  9823  014C56  6E32               	movwf	btemp^0,c
  9824  014C58  0EF7               	movlw	-9
  9825  014C5A  0060  F0CB  FFE3   	movff	btemp,plusw1
  9826  014C60                     l10589:
  9827                           
  9828                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
  9829                           ;stkvar	_w @ sp[(-17)+13]
  9830                           ;stkvar	_l @ sp[(-17)+7]
  9831  014C60  50E1               	movf	fsr1l,w,c
  9832  014C62  0FF6               	addlw	-10
  9833  014C64  6ED9               	movwf	fsr2l,c
  9834  014C66  50E2               	movf	fsr1h,w,c
  9835  014C68  6EDA               	movwf	fsr2h,c
  9836  014C6A  0EFF               	movlw	255
  9837  014C6C  22DA               	addwfc	fsr2h,f,c
  9838  014C6E  0EFC               	movlw	-4
  9839  014C70  50E3               	movf	plusw1,w,c
  9840  014C72  5CDE               	subwf	postinc2,w,c
  9841  014C74  50DE               	movf	postinc2,w,c
  9842  014C76  0A80               	xorlw	128
  9843  014C78  6E32               	movwf	btemp^0,c
  9844  014C7A  0EFD               	movlw	-3
  9845  014C7C  50E3               	movf	plusw1,w,c
  9846  014C7E  0A80               	xorlw	128
  9847  014C80  5832               	subwfb	btemp^0,w,c
  9848  014C82  A0D8               	btfss	status,0,c
  9849  014C84  D7CF               	goto	l10585
  9850  014C86                     u11420:
  9851                           
  9852                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
  9853                           ;stkvar	_i @ sp[(-17)+15]
  9854  014C86  0EFE               	movlw	-2
  9855  014C88  6AE3               	clrf	plusw1,c
  9856  014C8A  0EFF               	movlw	-1
  9857  014C8C  6AE3               	clrf	plusw1,c
  9858                           
  9859                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  9860  014C8E  D045               	goto	l10599
  9861  014C90                     l10593:
  9862                           
  9863                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
  9864                           ;stkvar	_fp @ sp[(-17)+-2]
  9865  014C90  0EED               	movlw	-19
  9866  014C92  006F FF8F FFE6     	movff	plusw1,postinc1
  9867  014C98  006F FF8F FFE6     	movff	plusw1,postinc1
  9868                           
  9869                           ;stkvar	_cp @ sp[(-19)+11]
  9870  014C9E  0EF8               	movlw	-8
  9871  014CA0  006F FF8F FFF6     	movff	plusw1,tblptrl
  9872  014CA6  0EF9               	movlw	-7
  9873  014CA8  006F FF8F FFF7     	movff	plusw1,tblptrh
  9874  014CAE  0E00               	movlw	low (__mediumconst shr (0+16))
  9875  014CB0  6EF8               	movwf	tblptru,c
  9876  014CB2  0E1F               	movlw	(high __ramtop+-1)
  9877  014CB4  64F7               	cpfsgt	tblptrh,c
  9878  014CB6  D003               	bra	u11437
  9879  014CB8  0008               	tblrd		*
  9880  014CBA  50F5               	movf	tablat,w,c
  9881  014CBC  D007               	bra	u11430
  9882  014CBE                     u11437:
  9883  014CBE  006F FFDB FFE9     	movff	tblptrl,fsr0l
  9884  014CC4  006F FFDF FFEA     	movff	tblptrh,fsr0h
  9885  014CCA  50EF               	movf	indf0,w,c
  9886  014CCC                     u11430:
  9887  014CCC  6EE6               	movwf	postinc1,c
  9888  014CCE  0E00               	movlw	0
  9889  014CD0  6EE6               	movwf	postinc1,c
  9890  014CD2  EC61  F0B2         	call	_fputc	;wreg free
  9891                           
  9892                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
  9893                           ;stkvar	_cp @ sp[(-17)+11]
  9894  014CD6  0EFA               	movlw	-6
  9895  014CD8  50E3               	movf	plusw1,w,c
  9896  014CDA  0F01               	addlw	1
  9897  014CDC  6E32               	movwf	btemp^0,c
  9898  014CDE  0EFA               	movlw	-6
  9899  014CE0  0060  F0CB  FFE3   	movff	btemp,plusw1
  9900  014CE6  6A32               	clrf	btemp^0,c
  9901  014CE8  0EFB               	movlw	-5
  9902  014CEA  50E3               	movf	plusw1,w,c
  9903  014CEC  2032               	addwfc	btemp^0,w,c
  9904  014CEE  6E32               	movwf	btemp^0,c
  9905  014CF0  0EFB               	movlw	-5
  9906  014CF2  0060  F0CB  FFE3   	movff	btemp,plusw1
  9907                           
  9908                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
  9909                           ;stkvar	_i @ sp[(-17)+15]
  9910  014CF8  0EFE               	movlw	-2
  9911  014CFA  50E3               	movf	plusw1,w,c
  9912  014CFC  0F01               	addlw	1
  9913  014CFE  6E32               	movwf	btemp^0,c
  9914  014D00  0EFE               	movlw	-2
  9915  014D02  0060  F0CB  FFE3   	movff	btemp,plusw1
  9916  014D08  6A32               	clrf	btemp^0,c
  9917  014D0A  0EFF               	movlw	-1
  9918  014D0C  50E3               	movf	plusw1,w,c
  9919  014D0E  2032               	addwfc	btemp^0,w,c
  9920  014D10  6E32               	movwf	btemp^0,c
  9921  014D12  0EFF               	movlw	-1
  9922  014D14  0060  F0CB  FFE3   	movff	btemp,plusw1
  9923  014D1A                     l10599:
  9924                           
  9925                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  9926                           ;stkvar	_p @ sp[(-17)+9]
  9927                           ;stkvar	_i @ sp[(-17)+15]
  9928  014D1A  50E1               	movf	fsr1l,w,c
  9929  014D1C  0FFE               	addlw	-2
  9930  014D1E  6ED9               	movwf	fsr2l,c
  9931  014D20  50E2               	movf	fsr1h,w,c
  9932  014D22  6EDA               	movwf	fsr2h,c
  9933  014D24  0EFF               	movlw	255
  9934  014D26  22DA               	addwfc	fsr2h,f,c
  9935  014D28  0EF8               	movlw	-8
  9936  014D2A  50E3               	movf	plusw1,w,c
  9937  014D2C  5CDE               	subwf	postinc2,w,c
  9938  014D2E  50DE               	movf	postinc2,w,c
  9939  014D30  0A80               	xorlw	128
  9940  014D32  6E32               	movwf	btemp^0,c
  9941  014D34  0EF9               	movlw	-7
  9942  014D36  50E3               	movf	plusw1,w,c
  9943  014D38  0A80               	xorlw	128
  9944  014D3A  5832               	subwfb	btemp^0,w,c
  9945  014D3C  A0D8               	btfss	status,0,c
  9946  014D3E  D7A8               	goto	l10593
  9947                           
  9948                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
  9949  014D40  B01F               	btfsc	_flags^0,0,c
  9950  014D42  D01F               	goto	l10607
  9951  014D44  D031               	goto	u11460
  9952  014D46                     l10603:
  9953                           
  9954                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
  9955                           ;stkvar	_fp @ sp[(-17)+-2]
  9956  014D46  0EED               	movlw	-19
  9957  014D48  006F FF8F FFE6     	movff	plusw1,postinc1
  9958  014D4E  006F FF8F FFE6     	movff	plusw1,postinc1
  9959  014D54  0E20               	movlw	32
  9960  014D56  6EE6               	movwf	postinc1,c
  9961  014D58  0E00               	movlw	0
  9962  014D5A  6EE6               	movwf	postinc1,c
  9963  014D5C  EC61  F0B2         	call	_fputc	;wreg free
  9964                           
  9965                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
  9966                           ;stkvar	_l @ sp[(-17)+7]
  9967  014D60  0EF6               	movlw	-10
  9968  014D62  50E3               	movf	plusw1,w,c
  9969  014D64  0F01               	addlw	1
  9970  014D66  6E32               	movwf	btemp^0,c
  9971  014D68  0EF6               	movlw	-10
  9972  014D6A  0060  F0CB  FFE3   	movff	btemp,plusw1
  9973  014D70  6A32               	clrf	btemp^0,c
  9974  014D72  0EF7               	movlw	-9
  9975  014D74  50E3               	movf	plusw1,w,c
  9976  014D76  2032               	addwfc	btemp^0,w,c
  9977  014D78  6E32               	movwf	btemp^0,c
  9978  014D7A  0EF7               	movlw	-9
  9979  014D7C  0060  F0CB  FFE3   	movff	btemp,plusw1
  9980  014D82                     l10607:
  9981                           
  9982                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
  9983                           ;stkvar	_w @ sp[(-17)+13]
  9984                           ;stkvar	_l @ sp[(-17)+7]
  9985  014D82  50E1               	movf	fsr1l,w,c
  9986  014D84  0FF6               	addlw	-10
  9987  014D86  6ED9               	movwf	fsr2l,c
  9988  014D88  50E2               	movf	fsr1h,w,c
  9989  014D8A  6EDA               	movwf	fsr2h,c
  9990  014D8C  0EFF               	movlw	255
  9991  014D8E  22DA               	addwfc	fsr2h,f,c
  9992  014D90  0EFC               	movlw	-4
  9993  014D92  50E3               	movf	plusw1,w,c
  9994  014D94  5CDE               	subwf	postinc2,w,c
  9995  014D96  50DE               	movf	postinc2,w,c
  9996  014D98  0A80               	xorlw	128
  9997  014D9A  6E32               	movwf	btemp^0,c
  9998  014D9C  0EFD               	movlw	-3
  9999  014D9E  50E3               	movf	plusw1,w,c
 10000  014DA0  0A80               	xorlw	128
 10001  014DA2  5832               	subwfb	btemp^0,w,c
 10002  014DA4  A0D8               	btfss	status,0,c
 10003  014DA6  D7CF               	goto	l10603
 10004  014DA8                     u11460:
 10005                           
 10006                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 10007                           ;stkvar	_l @ sp[(-17)+7]
 10008  014DA8  0EF6               	movlw	-10
 10009  014DAA  006F FF8C  F032    	movff	plusw1,btemp
 10010  014DB0  0EF7               	movlw	-9
 10011  014DB2  006F FF8C  F033    	movff	plusw1,btemp+1
 10012                           
 10013                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 10014  014DB8  0EEB               	movlw	235
 10015  014DBA  26E1               	addwf	fsr1l,f,c
 10016  014DBC  0EFF               	movlw	255
 10017  014DBE  22E2               	addwfc	fsr1h,f,c
 10018  014DC0  0012               	return		;funcret
 10019  014DC2                     __end_of_stoa:
 10020                           	opt callstack 0
 10021                           
 10022 ;; *************** function _efgtoa *****************
 10023 ;; Defined at:
 10024 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 10025 ;; Parameters:    Size  Location     Type
 10026 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10027 ;;		 -> f(6), NULL(0), 
 10028 ;;  f               4  [STACK] PTR struct _IO_FILE
 10029 ;;  c               1  [STACK] unsigned char 
 10030 ;; Auto vars:     Size  Location     Type
 10031 ;;  u               4  [STACK] unsigned char 
 10032 ;;  g               4  [STACK] unsigned char 
 10033 ;;  l               4  [STACK] unsigned char 
 10034 ;;  h               4  [STACK] unsigned char 
 10035 ;;  ou              4  [STACK] unsigned char 
 10036 ;;  n               2  [STACK] int 
 10037 ;;  e               2  [STACK] int 
 10038 ;;  i               2  [STACK] int 
 10039 ;;  w               2  [STACK] int 
 10040 ;;  p               2  [STACK] int 
 10041 ;;  sign            2  [STACK] int 
 10042 ;;  d               2  [STACK] int 
 10043 ;;  ne              2  [STACK] int 
 10044 ;;  m               2  [STACK] int 
 10045 ;;  pp              2  [STACK] int 
 10046 ;;  t               2  [STACK] int 
 10047 ;;  mode            1  [STACK] unsigned char 
 10048 ;;  nmode           1  [STACK] unsigned char 
 10049 ;; Return value:  Size  Location     Type
 10050 ;;                  2  [STACK] int 
 10051 ;; Registers used:
 10052 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 10053 ;; Tracked objects:
 10054 ;;		On entry : 0/5
 10055 ;;		On exit  : 0/0
 10056 ;;		Unchanged: 0/0
 10057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10061 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10062 ;;Total ram usage:        0 bytes
 10063 ;; Hardware stack levels used:    1
 10064 ;; Hardware stack levels required when called:   11
 10065 ;; This function calls:
 10066 ;;		___awdiv
 10067 ;;		___awmod
 10068 ;;		___fladd
 10069 ;;		___fldiv
 10070 ;;		___fleq
 10071 ;;		___flge
 10072 ;;		___flmul
 10073 ;;		___flneg
 10074 ;;		___flsub
 10075 ;;		___fltol
 10076 ;;		___fpclassifyf
 10077 ;;		_floorf
 10078 ;;		_isupper
 10079 ;;		_pad
 10080 ;;		_strcpy
 10081 ;;		_tolower
 10082 ;; This function is called by:
 10083 ;;		_vfpfcnvrt
 10084 ;; This function uses a reentrant model
 10085 ;;
 10086                           
 10087                           	psect	text45
 10088  010000                     __ptext45:
 10089                           	opt callstack 0
 10090  010000                     _efgtoa:
 10091                           	opt callstack 0
 10092                           
 10093                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 10094  010000  0E38               	movlw	56
 10095  010002  26E1               	addwf	fsr1l,f,c
 10096  010004  0E00               	movlw	0
 10097  010006  22E2               	addwfc	fsr1h,f,c
 10098                           
 10099                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 10100                           ;stkvar	_sign @ sp[(-56)+42]
 10101                           
 10102                           ;incstack = 0
 10103  010008  0EF2               	movlw	-14
 10104  01000A  6AE3               	clrf	plusw1,c
 10105  01000C  0EF3               	movlw	-13
 10106  01000E  6AE3               	clrf	plusw1,c
 10107                           
 10108                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 10109                           ;stkvar	_f @ sp[(-56)+-6]
 10110  010010  0EC2               	movlw	-62
 10111  010012  006F FF8C  F03A    	movff	plusw1,btemp+8
 10112  010018  0EC3               	movlw	-61
 10113  01001A  006F FF8C  F03B    	movff	plusw1,btemp+9
 10114  010020  0EC4               	movlw	-60
 10115  010022  006F FF8C  F03C    	movff	plusw1,btemp+10
 10116  010028  0EC5               	movlw	-59
 10117  01002A  006F FF8C  F03D    	movff	plusw1,btemp+11
 10118                           
 10119                           ;stkvar	_g @ sp[(-56)+16]
 10120  010030  0ED8               	movlw	-40
 10121  010032  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 10122  010038  0ED9               	movlw	-39
 10123  01003A  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 10124  010040  0EDA               	movlw	-38
 10125  010042  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10126  010048  0EDB               	movlw	-37
 10127  01004A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10128                           
 10129                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 10130                           ;stkvar	_g @ sp[(-56)+16]
 10131  010050  0EDB               	movlw	-37
 10132  010052  AEE3               	btfss	plusw1,7,c
 10133  010054  D02B               	goto	l10267
 10134                           
 10135                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 10136  010056  0E01               	movlw	1
 10137  010058  6E3C               	movwf	(btemp+10)^0,c
 10138  01005A  0E00               	movlw	0
 10139  01005C  6E3D               	movwf	(btemp+11)^0,c
 10140                           
 10141                           ;stkvar	_sign @ sp[(-56)+42]
 10142  01005E  0EF2               	movlw	-14
 10143  010060  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10144  010066  0EF3               	movlw	-13
 10145  010068  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10146                           
 10147                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 10148                           ;stkvar	_g @ sp[(-56)+16]
 10149  01006E  0ED8               	movlw	-40
 10150  010070  006F FF8F FFE6     	movff	plusw1,postinc1
 10151  010076  006F FF8F FFE6     	movff	plusw1,postinc1
 10152  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
 10153  010082  006F FF8F FFE6     	movff	plusw1,postinc1
 10154  010088  EC3D  F0BD         	call	___flneg	;wreg free
 10155                           
 10156                           ;stkvar	_g @ sp[(-56)+16]
 10157  01008C  0ED8               	movlw	-40
 10158  01008E  0060  F0CB  FFE3   	movff	btemp,plusw1
 10159  010094  0ED9               	movlw	-39
 10160  010096  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 10161  01009C  0EDA               	movlw	-38
 10162  01009E  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 10163  0100A4  0EDB               	movlw	-37
 10164  0100A6  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 10165  0100AC                     l10267:
 10166                           
 10167                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 10168                           ;stkvar	_n @ sp[(-56)+32]
 10169  0100AC  0EE8               	movlw	-24
 10170  0100AE  6AE3               	clrf	plusw1,c
 10171  0100B0  0EE9               	movlw	-23
 10172  0100B2  6AE3               	clrf	plusw1,c
 10173                           
 10174                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 10175                           ;stkvar	_w @ sp[(-56)+38]
 10176  0100B4  0EEE               	movlw	-18
 10177  0100B6  0060  F06F  FFE3   	movff	_width,plusw1
 10178  0100BC  0EEF               	movlw	-17
 10179  0100BE  0060  F073  FFE3   	movff	_width+1,plusw1
 10180                           
 10181                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 10182                           ;stkvar	_sign @ sp[(-56)+42]
 10183  0100C4  0EF2               	movlw	-14
 10184  0100C6  006F FF8C  F032    	movff	plusw1,btemp
 10185  0100CC  0EF3               	movlw	-13
 10186  0100CE  50E3               	movf	plusw1,w,c
 10187  0100D0  1032               	iorwf	btemp^0,w,c
 10188  0100D2  A4D8               	btfss	status,2,c
 10189  0100D4  D002               	goto	u10870
 10190  0100D6  A41F               	btfss	_flags^0,2,c
 10191  0100D8  D036               	goto	l10287
 10192  0100DA                     u10870:
 10193                           
 10194                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 10195                           ;stkvar	_sign @ sp[(-56)+42]
 10196  0100DA  0EF2               	movlw	-14
 10197  0100DC  006F FF8C  F032    	movff	plusw1,btemp
 10198  0100E2  0EF3               	movlw	-13
 10199  0100E4  50E3               	movf	plusw1,w,c
 10200  0100E6  1032               	iorwf	btemp^0,w,c
 10201  0100E8  A4D8               	btfss	status,2,c
 10202  0100EA  D002               	goto	l10279
 10203  0100EC  0E2B               	movlw	43
 10204  0100EE  D001               	goto	L8
 10205  0100F0                     l10279:
 10206  0100F0  0E2D               	movlw	45
 10207  0100F2                     L8:
 10208  0100F2  6E3C               	movwf	(btemp+10)^0,c
 10209  0100F4  0E00               	movlw	0
 10210  0100F6  6E3D               	movwf	(btemp+11)^0,c
 10211                           
 10212                           ;stkvar	_efgtoa$4378 @ sp[(-56)+10]
 10213  0100F8  0ED2               	movlw	-46
 10214  0100FA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10215  010100  0ED3               	movlw	-45
 10216  010102  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10217                           
 10218                           ;stkvar	_efgtoa$4378 @ sp[(-56)+10]
 10219  010108  0ED2               	movlw	-46
 10220  01010A  006F FF8C  F240    	movff	plusw1,_dbuf
 10221                           
 10222                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 10223                           ;stkvar	_n @ sp[(-56)+32]
 10224  010110  0EE8               	movlw	-24
 10225  010112  50E3               	movf	plusw1,w,c
 10226  010114  0F01               	addlw	1
 10227  010116  6E32               	movwf	btemp^0,c
 10228  010118  0EE8               	movlw	-24
 10229  01011A  0060  F0CB  FFE3   	movff	btemp,plusw1
 10230  010120  6A32               	clrf	btemp^0,c
 10231  010122  0EE9               	movlw	-23
 10232  010124  50E3               	movf	plusw1,w,c
 10233  010126  2032               	addwfc	btemp^0,w,c
 10234  010128  6E32               	movwf	btemp^0,c
 10235  01012A  0EE9               	movlw	-23
 10236  01012C  0060  F0CB  FFE3   	movff	btemp,plusw1
 10237                           
 10238                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 10239                           ;stkvar	_w @ sp[(-56)+38]
 10240  010132  50E1               	movf	fsr1l,w,c
 10241  010134  0FEE               	addlw	-18
 10242  010136  6ED9               	movwf	fsr2l,c
 10243  010138  50E2               	movf	fsr1h,w,c
 10244  01013A  6EDA               	movwf	fsr2h,c
 10245  01013C  0EFF               	movlw	255
 10246  01013E  22DA               	addwfc	fsr2h,f,c
 10247  010140  06DE               	decf	postinc2,f,c
 10248  010142  0E00               	movlw	0
 10249  010144  5ADD               	subwfb	postdec2,f,c
 10250  010146                     l10287:
 10251                           
 10252                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 10253                           ;stkvar	_g @ sp[(-56)+16]
 10254  010146  0ED8               	movlw	-40
 10255  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 10256  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 10257  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 10258  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 10259  010160  EC4A  F0AE         	call	___fpclassifyf	;wreg free
 10260  010164  0432               	decf	btemp^0,w,c
 10261  010166  1033               	iorwf	(btemp+1)^0,w,c
 10262  010168  A4D8               	btfss	status,2,c
 10263  01016A  D076               	goto	l10305
 10264  01016C  0EBF               	movlw	191
 10265  01016E  6E3C               	movwf	(btemp+10)^0,c
 10266  010170  0EFF               	movlw	255
 10267  010172  6E3D               	movwf	(btemp+11)^0,c
 10268                           
 10269                           ;stkvar	_c @ sp[(-56)+-7]
 10270  010174  0EC1               	movlw	-63
 10271  010176  50E3               	movf	plusw1,w,c
 10272  010178  6E3A               	movwf	(btemp+8)^0,c
 10273  01017A  6A3B               	clrf	(btemp+9)^0,c
 10274  01017C  503C               	movf	(btemp+10)^0,w,c
 10275  01017E  263A               	addwf	(btemp+8)^0,f,c
 10276  010180  503D               	movf	(btemp+11)^0,w,c
 10277  010182  223B               	addwfc	(btemp+9)^0,f,c
 10278  010184  503B               	movf	(btemp+9)^0,w,c
 10279  010186  E106               	bnz	u10900
 10280  010188  0E1A               	movlw	26
 10281  01018A  5C3A               	subwf	(btemp+8)^0,w,c
 10282  01018C  B0D8               	btfsc	status,0,c
 10283  01018E  D002               	goto	u10900
 10284  010190  0E01               	movlw	1
 10285  010192  D001               	goto	u10910
 10286  010194                     u10900:
 10287  010194  0E00               	movlw	0
 10288  010196                     u10910:
 10289  010196  6E3C               	movwf	(btemp+10)^0,c
 10290  010198  6A3D               	clrf	(btemp+11)^0,c
 10291                           
 10292                           ;stkvar	_efgtoa$4379 @ sp[(-56)+8]
 10293  01019A  0ED0               	movlw	-48
 10294  01019C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10295  0101A2  0ED1               	movlw	-47
 10296  0101A4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10297                           
 10298                           ;stkvar	_efgtoa$4379 @ sp[(-56)+8]
 10299  0101AA  0ED0               	movlw	-48
 10300  0101AC  006F FF8C  F032    	movff	plusw1,btemp
 10301  0101B2  0ED1               	movlw	-47
 10302  0101B4  50E3               	movf	plusw1,w,c
 10303  0101B6  1032               	iorwf	btemp^0,w,c
 10304  0101B8  B4D8               	btfsc	status,2,c
 10305  0101BA  D017               	goto	l10297
 10306                           
 10307                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 10308  0101BC  0EE5               	movlw	low STR_34
 10309  0101BE  6EE6               	movwf	postinc1,c
 10310  0101C0  0EFF               	movlw	high STR_34
 10311  0101C2  6EE6               	movwf	postinc1,c
 10312                           
 10313                           ;stkvar	_n @ sp[(-58)+32]
 10314  0101C4  0E40               	movlw	low _dbuf
 10315  0101C6  6E3C               	movwf	(btemp+10)^0,c
 10316  0101C8  0E02               	movlw	high _dbuf
 10317  0101CA  6E3D               	movwf	(btemp+11)^0,c
 10318  0101CC  0EE6               	movlw	-26
 10319  0101CE  50E3               	movf	plusw1,w,c
 10320  0101D0  263C               	addwf	(btemp+10)^0,f,c
 10321  0101D2  0EE7               	movlw	-25
 10322  0101D4  50E3               	movf	plusw1,w,c
 10323  0101D6  223D               	addwfc	(btemp+11)^0,f,c
 10324  0101D8  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 10325  0101DE  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 10326  0101E4  EC04  F0B6         	call	_strcpy	;wreg free
 10327                           
 10328                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 10329  0101E8  D016               	goto	l10299
 10330  0101EA                     l10297:
 10331                           
 10332                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 10333  0101EA  0EED               	movlw	low STR_35
 10334  0101EC  6EE6               	movwf	postinc1,c
 10335  0101EE  0EFF               	movlw	high STR_35
 10336  0101F0  6EE6               	movwf	postinc1,c
 10337                           
 10338                           ;stkvar	_n @ sp[(-58)+32]
 10339  0101F2  0E40               	movlw	low _dbuf
 10340  0101F4  6E3C               	movwf	(btemp+10)^0,c
 10341  0101F6  0E02               	movlw	high _dbuf
 10342  0101F8  6E3D               	movwf	(btemp+11)^0,c
 10343  0101FA  0EE6               	movlw	-26
 10344  0101FC  50E3               	movf	plusw1,w,c
 10345  0101FE  263C               	addwf	(btemp+10)^0,f,c
 10346  010200  0EE7               	movlw	-25
 10347  010202  50E3               	movf	plusw1,w,c
 10348  010204  223D               	addwfc	(btemp+11)^0,f,c
 10349  010206  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 10350  01020C  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 10351  010212  EC04  F0B6         	call	_strcpy	;wreg free
 10352  010216                     l10299:
 10353                           
 10354                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 10355                           ;stkvar	_w @ sp[(-56)+38]
 10356  010216  50E1               	movf	fsr1l,w,c
 10357  010218  0FEE               	addlw	-18
 10358  01021A  6ED9               	movwf	fsr2l,c
 10359  01021C  50E2               	movf	fsr1h,w,c
 10360  01021E  6EDA               	movwf	fsr2h,c
 10361  010220  0EFF               	movlw	255
 10362  010222  22DA               	addwfc	fsr2h,f,c
 10363  010224  0EFD               	movlw	253
 10364  010226  26DE               	addwf	postinc2,f,c
 10365  010228  0EFF               	movlw	255
 10366  01022A  22DD               	addwfc	postdec2,f,c
 10367  01022C                     l10301:
 10368                           
 10369                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 10370                           ;stkvar	_w @ sp[(-56)+38]
 10371  01022C  0EEE               	movlw	-18
 10372  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 10373  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 10374  01023A  0E40               	movlw	low _dbuf
 10375  01023C  6EE6               	movwf	postinc1,c
 10376  01023E  0E02               	movlw	high _dbuf
 10377  010240  6EE6               	movwf	postinc1,c
 10378                           
 10379                           ;stkvar	_fp @ sp[(-60)+-2]
 10380  010242  0EC2               	movlw	-62
 10381  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 10382  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 10383  010250  EC7F  F0B3         	call	_pad	;wreg free
 10384  010254  EF1D  F089         	goto	l1864
 10385  010258                     l10305:
 10386                           
 10387                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 10388                           ;stkvar	_g @ sp[(-56)+16]
 10389  010258  0ED8               	movlw	-40
 10390  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 10391  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 10392  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 10393  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 10394  010272  EC4A  F0AE         	call	___fpclassifyf	;wreg free
 10395  010276  5032               	movf	btemp^0,w,c
 10396  010278  1033               	iorwf	(btemp+1)^0,w,c
 10397  01027A  A4D8               	btfss	status,2,c
 10398  01027C  D056               	goto	l10323
 10399  01027E  0EBF               	movlw	191
 10400  010280  6E3C               	movwf	(btemp+10)^0,c
 10401  010282  0EFF               	movlw	255
 10402  010284  6E3D               	movwf	(btemp+11)^0,c
 10403                           
 10404                           ;stkvar	_c @ sp[(-56)+-7]
 10405  010286  0EC1               	movlw	-63
 10406  010288  50E3               	movf	plusw1,w,c
 10407  01028A  6E3A               	movwf	(btemp+8)^0,c
 10408  01028C  6A3B               	clrf	(btemp+9)^0,c
 10409  01028E  503C               	movf	(btemp+10)^0,w,c
 10410  010290  263A               	addwf	(btemp+8)^0,f,c
 10411  010292  503D               	movf	(btemp+11)^0,w,c
 10412  010294  223B               	addwfc	(btemp+9)^0,f,c
 10413  010296  503B               	movf	(btemp+9)^0,w,c
 10414  010298  E106               	bnz	u10940
 10415  01029A  0E1A               	movlw	26
 10416  01029C  5C3A               	subwf	(btemp+8)^0,w,c
 10417  01029E  B0D8               	btfsc	status,0,c
 10418  0102A0  D002               	goto	u10940
 10419  0102A2  0E01               	movlw	1
 10420  0102A4  D001               	goto	u10950
 10421  0102A6                     u10940:
 10422  0102A6  0E00               	movlw	0
 10423  0102A8                     u10950:
 10424  0102A8  6E3C               	movwf	(btemp+10)^0,c
 10425  0102AA  6A3D               	clrf	(btemp+11)^0,c
 10426                           
 10427                           ;stkvar	_efgtoa$4383 @ sp[(-56)+6]
 10428  0102AC  0ECE               	movlw	-50
 10429  0102AE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10430  0102B4  0ECF               	movlw	-49
 10431  0102B6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10432                           
 10433                           ;stkvar	_efgtoa$4383 @ sp[(-56)+6]
 10434  0102BC  0ECE               	movlw	-50
 10435  0102BE  006F FF8C  F032    	movff	plusw1,btemp
 10436  0102C4  0ECF               	movlw	-49
 10437  0102C6  50E3               	movf	plusw1,w,c
 10438  0102C8  1032               	iorwf	btemp^0,w,c
 10439  0102CA  B4D8               	btfsc	status,2,c
 10440  0102CC  D017               	goto	l10315
 10441                           
 10442                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 10443  0102CE  0EE9               	movlw	low STR_38
 10444  0102D0  6EE6               	movwf	postinc1,c
 10445  0102D2  0EFF               	movlw	high STR_38
 10446  0102D4  6EE6               	movwf	postinc1,c
 10447                           
 10448                           ;stkvar	_n @ sp[(-58)+32]
 10449  0102D6  0E40               	movlw	low _dbuf
 10450  0102D8  6E3C               	movwf	(btemp+10)^0,c
 10451  0102DA  0E02               	movlw	high _dbuf
 10452  0102DC  6E3D               	movwf	(btemp+11)^0,c
 10453  0102DE  0EE6               	movlw	-26
 10454  0102E0  50E3               	movf	plusw1,w,c
 10455  0102E2  263C               	addwf	(btemp+10)^0,f,c
 10456  0102E4  0EE7               	movlw	-25
 10457  0102E6  50E3               	movf	plusw1,w,c
 10458  0102E8  223D               	addwfc	(btemp+11)^0,f,c
 10459  0102EA  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 10460  0102F0  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 10461  0102F6  EC04  F0B6         	call	_strcpy	;wreg free
 10462                           
 10463                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 10464  0102FA  D78D               	goto	l10299
 10465  0102FC                     l10315:
 10466                           
 10467                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 10468  0102FC  0EF1               	movlw	low STR_39
 10469  0102FE  6EE6               	movwf	postinc1,c
 10470  010300  0EFF               	movlw	high STR_39
 10471  010302  6EE6               	movwf	postinc1,c
 10472                           
 10473                           ;stkvar	_n @ sp[(-58)+32]
 10474  010304  0E40               	movlw	low _dbuf
 10475  010306  6E3C               	movwf	(btemp+10)^0,c
 10476  010308  0E02               	movlw	high _dbuf
 10477  01030A  6E3D               	movwf	(btemp+11)^0,c
 10478  01030C  0EE6               	movlw	-26
 10479  01030E  50E3               	movf	plusw1,w,c
 10480  010310  263C               	addwf	(btemp+10)^0,f,c
 10481  010312  0EE7               	movlw	-25
 10482  010314  50E3               	movf	plusw1,w,c
 10483  010316  223D               	addwfc	(btemp+11)^0,f,c
 10484  010318  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 10485  01031E  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 10486  010324  EC04  F0B6         	call	_strcpy	;wreg free
 10487  010328  D776               	goto	l10299
 10488  01032A                     l10323:
 10489                           
 10490                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 10491  01032A  0E00               	movlw	0
 10492  01032C  6E3A               	movwf	(btemp+8)^0,c
 10493  01032E  0E00               	movlw	0
 10494  010330  6E3B               	movwf	(btemp+9)^0,c
 10495  010332  0E80               	movlw	128
 10496  010334  6E3C               	movwf	(btemp+10)^0,c
 10497  010336  0E3F               	movlw	63
 10498  010338  6E3D               	movwf	(btemp+11)^0,c
 10499                           
 10500                           ;stkvar	_u @ sp[(-56)+12]
 10501  01033A  0ED4               	movlw	-44
 10502  01033C  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 10503  010342  0ED5               	movlw	-43
 10504  010344  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 10505  01034A  0ED6               	movlw	-42
 10506  01034C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10507  010352  0ED7               	movlw	-41
 10508  010354  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10509                           
 10510                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 10511                           ;stkvar	_e @ sp[(-56)+34]
 10512  01035A  0EEA               	movlw	-22
 10513  01035C  6AE3               	clrf	plusw1,c
 10514  01035E  0EEB               	movlw	-21
 10515  010360  6AE3               	clrf	plusw1,c
 10516                           
 10517                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 10518  010362  0E00               	movlw	0
 10519  010364  6EE6               	movwf	postinc1,c
 10520  010366  0E00               	movlw	0
 10521  010368  6EE6               	movwf	postinc1,c
 10522  01036A  0E00               	movlw	0
 10523  01036C  6EE6               	movwf	postinc1,c
 10524  01036E  0E00               	movlw	0
 10525  010370  6EE6               	movwf	postinc1,c
 10526                           
 10527                           ;stkvar	_g @ sp[(-60)+16]
 10528  010372  0ED4               	movlw	-44
 10529  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 10530  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 10531  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 10532  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 10533  01038C  EC6E  F0B6         	call	___fleq	;wreg free
 10534  010390  A032               	btfss	btemp& (0+255),0,c
 10535  010392  D039               	goto	l10335
 10536  010394  D0BC               	goto	u10990
 10537  010396                     l10331:
 10538                           
 10539                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 10540  010396  0E00               	movlw	0
 10541  010398  6EE6               	movwf	postinc1,c
 10542  01039A  0E00               	movlw	0
 10543  01039C  6EE6               	movwf	postinc1,c
 10544  01039E  0E20               	movlw	32
 10545  0103A0  6EE6               	movwf	postinc1,c
 10546  0103A2  0E41               	movlw	65
 10547  0103A4  6EE6               	movwf	postinc1,c
 10548                           
 10549                           ;stkvar	_u @ sp[(-60)+12]
 10550  0103A6  0ED0               	movlw	-48
 10551  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 10552  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 10553  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 10554  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 10555  0103C0  ECC1  F08E         	call	___flmul	;wreg free
 10556                           
 10557                           ;stkvar	_u @ sp[(-56)+12]
 10558  0103C4  0ED4               	movlw	-44
 10559  0103C6  0060  F0CB  FFE3   	movff	btemp,plusw1
 10560  0103CC  0ED5               	movlw	-43
 10561  0103CE  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 10562  0103D4  0ED6               	movlw	-42
 10563  0103D6  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 10564  0103DC  0ED7               	movlw	-41
 10565  0103DE  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 10566                           
 10567                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 10568                           ;stkvar	_e @ sp[(-56)+34]
 10569  0103E4  0EEA               	movlw	-22
 10570  0103E6  50E3               	movf	plusw1,w,c
 10571  0103E8  0F01               	addlw	1
 10572  0103EA  6E32               	movwf	btemp^0,c
 10573  0103EC  0EEA               	movlw	-22
 10574  0103EE  0060  F0CB  FFE3   	movff	btemp,plusw1
 10575  0103F4  6A32               	clrf	btemp^0,c
 10576  0103F6  0EEB               	movlw	-21
 10577  0103F8  50E3               	movf	plusw1,w,c
 10578  0103FA  2032               	addwfc	btemp^0,w,c
 10579  0103FC  6E32               	movwf	btemp^0,c
 10580  0103FE  0EEB               	movlw	-21
 10581  010400  0060  F0CB  FFE3   	movff	btemp,plusw1
 10582  010406                     l10335:
 10583                           
 10584                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 10585  010406  0E00               	movlw	0
 10586  010408  6EE6               	movwf	postinc1,c
 10587  01040A  0E00               	movlw	0
 10588  01040C  6EE6               	movwf	postinc1,c
 10589  01040E  0E20               	movlw	32
 10590  010410  6EE6               	movwf	postinc1,c
 10591  010412  0E41               	movlw	65
 10592  010414  6EE6               	movwf	postinc1,c
 10593                           
 10594                           ;stkvar	_u @ sp[(-60)+12]
 10595  010416  0ED0               	movlw	-48
 10596  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 10597  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 10598  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 10599  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 10600  010430  ECC1  F08E         	call	___flmul	;wreg free
 10601  010434  0060  F0CB  FFE6   	movff	btemp,postinc1
 10602  01043A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 10603  010440  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 10604  010446  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 10605                           
 10606                           ;stkvar	_g @ sp[(-60)+16]
 10607  01044C  0ED4               	movlw	-44
 10608  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 10609  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 10610  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 10611  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 10612  010466  ECCE  F0AF         	call	___flge	;wreg free
 10613  01046A  A032               	btfss	btemp& (0+255),0,c
 10614  01046C  D032               	goto	l10341
 10615  01046E  D793               	goto	l10331
 10616  010470                     l10337:
 10617                           
 10618                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 10619  010470  0E00               	movlw	0
 10620  010472  6EE6               	movwf	postinc1,c
 10621  010474  0E00               	movlw	0
 10622  010476  6EE6               	movwf	postinc1,c
 10623  010478  0E20               	movlw	32
 10624  01047A  6EE6               	movwf	postinc1,c
 10625  01047C  0E41               	movlw	65
 10626  01047E  6EE6               	movwf	postinc1,c
 10627                           
 10628                           ;stkvar	_u @ sp[(-60)+12]
 10629  010480  0ED0               	movlw	-48
 10630  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 10631  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 10632  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 10633  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 10634  01049A  EC77  F099         	call	___fldiv	;wreg free
 10635                           
 10636                           ;stkvar	_u @ sp[(-56)+12]
 10637  01049E  0ED4               	movlw	-44
 10638  0104A0  0060  F0CB  FFE3   	movff	btemp,plusw1
 10639  0104A6  0ED5               	movlw	-43
 10640  0104A8  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 10641  0104AE  0ED6               	movlw	-42
 10642  0104B0  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 10643  0104B6  0ED7               	movlw	-41
 10644  0104B8  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 10645                           
 10646                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 10647                           ;stkvar	_e @ sp[(-56)+34]
 10648  0104BE  50E1               	movf	fsr1l,w,c
 10649  0104C0  0FEA               	addlw	-22
 10650  0104C2  6ED9               	movwf	fsr2l,c
 10651  0104C4  50E2               	movf	fsr1h,w,c
 10652  0104C6  6EDA               	movwf	fsr2h,c
 10653  0104C8  0EFF               	movlw	255
 10654  0104CA  22DA               	addwfc	fsr2h,f,c
 10655  0104CC  06DE               	decf	postinc2,f,c
 10656  0104CE  0E00               	movlw	0
 10657  0104D0  5ADD               	subwfb	postdec2,f,c
 10658  0104D2                     l10341:
 10659                           
 10660                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 10661                           ;stkvar	_u @ sp[(-56)+12]
 10662  0104D2  0ED4               	movlw	-44
 10663  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 10664  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 10665  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 10666  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 10667                           
 10668                           ;stkvar	_g @ sp[(-60)+16]
 10669  0104EC  0ED4               	movlw	-44
 10670  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 10671  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 10672  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 10673  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 10674  010506  ECCE  F0AF         	call	___flge	;wreg free
 10675  01050A  A032               	btfss	btemp& (0+255),0,c
 10676  01050C  D7B1               	goto	l10337
 10677  01050E                     u10990:
 10678                           
 10679                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 10680                           ;stkvar	_c @ sp[(-56)+-7]
 10681  01050E  0EC1               	movlw	-63
 10682  010510  50E3               	movf	plusw1,w,c
 10683  010512  6EE6               	movwf	postinc1,c
 10684  010514  0E00               	movlw	0
 10685  010516  6EE6               	movwf	postinc1,c
 10686  010518  ECDF  F0B9         	call	_tolower	;wreg free
 10687                           
 10688                           ;stkvar	_mode @ sp[(-56)+54]
 10689  01051C  0EFE               	movlw	-2
 10690  01051E  0060  F0CB  FFE3   	movff	btemp,plusw1
 10691                           
 10692                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 10693                           ;stkvar	_mode @ sp[(-56)+54]
 10694                           ;stkvar	_nmode @ sp[(-56)+55]
 10695  010524  0EFE               	movlw	-2
 10696  010526  006F FF8C  F032    	movff	plusw1,btemp
 10697  01052C  0EFF               	movlw	-1
 10698  01052E  0060  F0CB  FFE3   	movff	btemp,plusw1
 10699                           
 10700                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 10701                           ;stkvar	_mode @ sp[(-56)+54]
 10702  010534  0EFE               	movlw	-2
 10703  010536  006F FF8C  F032    	movff	plusw1,btemp
 10704  01053C  0E67               	movlw	103
 10705  01053E  1832               	xorwf	btemp^0,w,c
 10706  010540  A4D8               	btfss	status,2,c
 10707  010542  D025               	goto	l10359
 10708                           
 10709                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 10710  010544  501D               	movf	_prec^0,w,c
 10711  010546  101E               	iorwf	(_prec+1)^0,w,c
 10712  010548  A4D8               	btfss	status,2,c
 10713  01054A  D004               	goto	l10353
 10714                           
 10715                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 10716  01054C  0E00               	movlw	0
 10717  01054E  6E1E               	movwf	(_prec+1)^0,c
 10718  010550  0E01               	movlw	1
 10719  010552  6E1D               	movwf	_prec^0,c
 10720  010554                     l10353:
 10721                           
 10722                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 10723  010554  BE1E               	btfsc	(_prec+1)^0,7,c
 10724  010556  D005               	goto	u11020
 10725  010558  501E               	movf	(_prec+1)^0,w,c
 10726  01055A  E110               	bnz	l10357
 10727  01055C  041D               	decf	_prec^0,w,c
 10728  01055E  B0D8               	btfsc	status,0,c
 10729  010560  D00D               	goto	l10357
 10730  010562                     u11020:
 10731  010562  0E06               	movlw	6
 10732  010564  6E3C               	movwf	(btemp+10)^0,c
 10733  010566  0E00               	movlw	0
 10734  010568  6E3D               	movwf	(btemp+11)^0,c
 10735                           
 10736                           ;stkvar	_p @ sp[(-56)+40]
 10737  01056A  0EF0               	movlw	-16
 10738  01056C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10739  010572  0EF1               	movlw	-15
 10740  010574  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10741  01057A  D00C               	goto	l10365
 10742  01057C                     l10357:
 10743                           
 10744                           ;stkvar	_p @ sp[(-56)+40]
 10745  01057C  0EF0               	movlw	-16
 10746  01057E  0060  F077  FFE3   	movff	_prec,plusw1
 10747  010584  0EF1               	movlw	-15
 10748  010586  0060  F07B  FFE3   	movff	_prec+1,plusw1
 10749  01058C  D003               	goto	l10365
 10750  01058E                     l10359:
 10751                           
 10752                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 10753  01058E  AE1E               	btfss	(_prec+1)^0,7,c
 10754  010590  D7F5               	goto	l10357
 10755  010592  D7E7               	goto	u11020
 10756  010594                     l10365:
 10757                           
 10758                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 10759                           ;stkvar	_mode @ sp[(-56)+54]
 10760  010594  0EFE               	movlw	-2
 10761  010596  006F FF8C  F032    	movff	plusw1,btemp
 10762  01059C  0E67               	movlw	103
 10763  01059E  1832               	xorwf	btemp^0,w,c
 10764  0105A0  A4D8               	btfss	status,2,c
 10765  0105A2  D02F               	goto	l10375
 10766                           
 10767                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 10768                           ;stkvar	_e @ sp[(-56)+34]
 10769  0105A4  0EEB               	movlw	-21
 10770  0105A6  AEE3               	btfss	plusw1,7,c
 10771  0105A8  D00E               	goto	u11050
 10772  0105AA  0EEA               	movlw	-22
 10773  0105AC  006F FF8C  F032    	movff	plusw1,btemp
 10774  0105B2  0EFC               	movlw	252
 10775  0105B4  5E32               	subwf	btemp^0,f,c
 10776  0105B6  0EEB               	movlw	-21
 10777  0105B8  006F FF8C  F032    	movff	plusw1,btemp
 10778  0105BE  0EFF               	movlw	255
 10779  0105C0  5A32               	subwfb	btemp^0,f,c
 10780  0105C2  A0D8               	btfss	status,0,c
 10781  0105C4  D018               	goto	l10373
 10782  0105C6                     u11050:
 10783                           
 10784                           ;stkvar	_e @ sp[(-56)+34]
 10785                           ;stkvar	_p @ sp[(-56)+40]
 10786  0105C6  0EF0               	movlw	-16
 10787  0105C8  50E3               	movf	plusw1,w,c
 10788  0105CA  0FFF               	addlw	255
 10789  0105CC  6E3C               	movwf	(btemp+10)^0,c
 10790  0105CE  0EF1               	movlw	-15
 10791  0105D0  006F FF8C  F03D    	movff	plusw1,btemp+11
 10792  0105D6  0EFF               	movlw	255
 10793  0105D8  223D               	addwfc	(btemp+11)^0,f,c
 10794  0105DA  0EEA               	movlw	-22
 10795  0105DC  50E3               	movf	plusw1,w,c
 10796  0105DE  5C3C               	subwf	(btemp+10)^0,w,c
 10797  0105E0  503D               	movf	(btemp+11)^0,w,c
 10798  0105E2  0A80               	xorlw	128
 10799  0105E4  6E32               	movwf	btemp^0,c
 10800  0105E6  0EEB               	movlw	-21
 10801  0105E8  50E3               	movf	plusw1,w,c
 10802  0105EA  0A80               	xorlw	128
 10803  0105EC  5832               	subwfb	btemp^0,w,c
 10804  0105EE  A0D8               	btfss	status,0,c
 10805  0105F0  D002               	goto	l10373
 10806                           
 10807                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 10808  0105F2  0E66               	movlw	102
 10809  0105F4  D001               	goto	L9
 10810  0105F6                     l10373:
 10811                           
 10812                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 10813  0105F6  0E65               	movlw	101
 10814  0105F8                     L9:
 10815  0105F8  6E3D               	movwf	(btemp+11)^0,c
 10816                           
 10817                           ;stkvar	_nmode @ sp[(-56)+55]
 10818  0105FA  0EFF               	movlw	-1
 10819  0105FC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10820  010602                     l10375:
 10821                           
 10822                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 10823                           ;stkvar	_p @ sp[(-56)+40]
 10824                           ;stkvar	_m @ sp[(-56)+48]
 10825  010602  0EF0               	movlw	-16
 10826  010604  006F FF8C  F032    	movff	plusw1,btemp
 10827  01060A  0EF8               	movlw	-8
 10828  01060C  0060  F0CB  FFE3   	movff	btemp,plusw1
 10829  010612  0EF1               	movlw	-15
 10830  010614  006F FF8C  F032    	movff	plusw1,btemp
 10831  01061A  0EF9               	movlw	-7
 10832  01061C  0060  F0CB  FFE3   	movff	btemp,plusw1
 10833                           
 10834                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 10835                           ;stkvar	_mode @ sp[(-56)+54]
 10836  010622  0EFE               	movlw	-2
 10837  010624  006F FF8C  F032    	movff	plusw1,btemp
 10838  01062A  0E67               	movlw	103
 10839  01062C  1832               	xorwf	btemp^0,w,c
 10840  01062E  A4D8               	btfss	status,2,c
 10841  010630  D00B               	goto	u11090
 10842                           
 10843                           ;stkvar	_nmode @ sp[(-56)+55]
 10844  010632  0EFF               	movlw	-1
 10845  010634  006F FF8C  F032    	movff	plusw1,btemp
 10846  01063A  0E66               	movlw	102
 10847  01063C  1832               	xorwf	btemp^0,w,c
 10848  01063E  A4D8               	btfss	status,2,c
 10849  010640  D014               	goto	l1893
 10850                           
 10851                           ;stkvar	_e @ sp[(-56)+34]
 10852  010642  0EEB               	movlw	-21
 10853  010644  AEE3               	btfss	plusw1,7,c
 10854  010646  D011               	goto	l1893
 10855  010648                     u11090:
 10856                           
 10857                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 10858                           ;stkvar	_m @ sp[(-56)+48]
 10859  010648  0EF8               	movlw	-8
 10860  01064A  50E3               	movf	plusw1,w,c
 10861  01064C  0F01               	addlw	1
 10862  01064E  6E32               	movwf	btemp^0,c
 10863  010650  0EF8               	movlw	-8
 10864  010652  0060  F0CB  FFE3   	movff	btemp,plusw1
 10865  010658  6A32               	clrf	btemp^0,c
 10866  01065A  0EF9               	movlw	-7
 10867  01065C  50E3               	movf	plusw1,w,c
 10868  01065E  2032               	addwfc	btemp^0,w,c
 10869  010660  6E32               	movwf	btemp^0,c
 10870  010662  0EF9               	movlw	-7
 10871  010664  0060  F0CB  FFE3   	movff	btemp,plusw1
 10872  01066A                     l1893:
 10873                           
 10874                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 10875                           ;stkvar	_nmode @ sp[(-56)+55]
 10876  01066A  0EFF               	movlw	-1
 10877  01066C  006F FF8C  F032    	movff	plusw1,btemp
 10878  010672  0E66               	movlw	102
 10879  010674  1832               	xorwf	btemp^0,w,c
 10880  010676  A4D8               	btfss	status,2,c
 10881  010678  D03B               	goto	l10395
 10882                           
 10883                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 10884                           ;stkvar	_e @ sp[(-56)+34]
 10885  01067A  0EEB               	movlw	-21
 10886  01067C  AEE3               	btfss	plusw1,7,c
 10887  01067E  D01C               	goto	l10391
 10888                           
 10889                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 10890  010680  0E00               	movlw	0
 10891  010682  6E3A               	movwf	(btemp+8)^0,c
 10892  010684  0E00               	movlw	0
 10893  010686  6E3B               	movwf	(btemp+9)^0,c
 10894  010688  0E80               	movlw	128
 10895  01068A  6E3C               	movwf	(btemp+10)^0,c
 10896  01068C  0E3F               	movlw	63
 10897  01068E  6E3D               	movwf	(btemp+11)^0,c
 10898                           
 10899                           ;stkvar	_u @ sp[(-56)+12]
 10900  010690  0ED4               	movlw	-44
 10901  010692  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 10902  010698  0ED5               	movlw	-43
 10903  01069A  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 10904  0106A0  0ED6               	movlw	-42
 10905  0106A2  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10906  0106A8  0ED7               	movlw	-41
 10907  0106AA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10908                           
 10909                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 10910                           ;stkvar	_e @ sp[(-56)+34]
 10911  0106B0  0EEA               	movlw	-22
 10912  0106B2  6AE3               	clrf	plusw1,c
 10913  0106B4  0EEB               	movlw	-21
 10914  0106B6  6AE3               	clrf	plusw1,c
 10915  0106B8                     l10391:
 10916                           
 10917                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 10918                           ;stkvar	_mode @ sp[(-56)+54]
 10919  0106B8  0EFE               	movlw	-2
 10920  0106BA  006F FF8C  F032    	movff	plusw1,btemp
 10921  0106C0  0E67               	movlw	103
 10922  0106C2  1832               	xorwf	btemp^0,w,c
 10923  0106C4  B4D8               	btfsc	status,2,c
 10924  0106C6  D014               	goto	l10395
 10925                           
 10926                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 10927                           ;stkvar	_e @ sp[(-56)+34]
 10928                           ;stkvar	_m @ sp[(-56)+48]
 10929  0106C8  0EF8               	movlw	-8
 10930  0106CA  50E3               	movf	plusw1,w,c
 10931  0106CC  6E32               	movwf	btemp^0,c
 10932  0106CE  0EEA               	movlw	-22
 10933  0106D0  50E3               	movf	plusw1,w,c
 10934  0106D2  2632               	addwf	btemp^0,f,c
 10935  0106D4  0EF8               	movlw	-8
 10936  0106D6  0060  F0CB  FFE3   	movff	btemp,plusw1
 10937  0106DC  0EF9               	movlw	-7
 10938  0106DE  50E3               	movf	plusw1,w,c
 10939  0106E0  6E32               	movwf	btemp^0,c
 10940  0106E2  0EEB               	movlw	-21
 10941  0106E4  50E3               	movf	plusw1,w,c
 10942  0106E6  2232               	addwfc	btemp^0,f,c
 10943  0106E8  0EF9               	movlw	-7
 10944  0106EA  0060  F0CB  FFE3   	movff	btemp,plusw1
 10945  0106F0                     l10395:
 10946                           
 10947                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 10948                           ;stkvar	_i @ sp[(-56)+36]
 10949  0106F0  0EEC               	movlw	-20
 10950  0106F2  6AE3               	clrf	plusw1,c
 10951  0106F4  0EED               	movlw	-19
 10952  0106F6  6AE3               	clrf	plusw1,c
 10953                           
 10954                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 10955                           ;stkvar	_g @ sp[(-56)+16]
 10956  0106F8  0ED8               	movlw	-40
 10957  0106FA  006F FF8C  F03A    	movff	plusw1,btemp+8
 10958  010700  0ED9               	movlw	-39
 10959  010702  006F FF8C  F03B    	movff	plusw1,btemp+9
 10960  010708  0EDA               	movlw	-38
 10961  01070A  006F FF8C  F03C    	movff	plusw1,btemp+10
 10962  010710  0EDB               	movlw	-37
 10963  010712  006F FF8C  F03D    	movff	plusw1,btemp+11
 10964                           
 10965                           ;stkvar	_h @ sp[(-56)+24]
 10966  010718  0EE0               	movlw	-32
 10967  01071A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 10968  010720  0EE1               	movlw	-31
 10969  010722  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 10970  010728  0EE2               	movlw	-30
 10971  01072A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10972  010730  0EE3               	movlw	-29
 10973  010732  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10974                           
 10975                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 10976                           ;stkvar	_u @ sp[(-56)+12]
 10977  010738  0ED4               	movlw	-44
 10978  01073A  006F FF8C  F03A    	movff	plusw1,btemp+8
 10979  010740  0ED5               	movlw	-43
 10980  010742  006F FF8C  F03B    	movff	plusw1,btemp+9
 10981  010748  0ED6               	movlw	-42
 10982  01074A  006F FF8C  F03C    	movff	plusw1,btemp+10
 10983  010750  0ED7               	movlw	-41
 10984  010752  006F FF8C  F03D    	movff	plusw1,btemp+11
 10985                           
 10986                           ;stkvar	_ou @ sp[(-56)+28]
 10987  010758  0EE4               	movlw	-28
 10988  01075A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 10989  010760  0EE5               	movlw	-27
 10990  010762  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 10991  010768  0EE6               	movlw	-26
 10992  01076A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10993  010770  0EE7               	movlw	-25
 10994  010772  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10995                           
 10996                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 10997  010778  D0D6               	goto	l10411
 10998  01077A                     l10401:
 10999                           
 11000                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 11001                           ;stkvar	_u @ sp[(-56)+12]
 11002  01077A  0ED4               	movlw	-44
 11003  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 11004  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 11005  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 11006  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 11007                           
 11008                           ;stkvar	_h @ sp[(-60)+24]
 11009  010794  0EDC               	movlw	-36
 11010  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 11011  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 11012  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 11013  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 11014  0107AE  EC77  F099         	call	___fldiv	;wreg free
 11015  0107B2  0060  F0CB  FFE6   	movff	btemp,postinc1
 11016  0107B8  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 11017  0107BE  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 11018  0107C4  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 11019  0107CA  EC56  F0A2         	call	_floorf	;wreg free
 11020                           
 11021                           ;stkvar	_l @ sp[(-56)+20]
 11022  0107CE  0EDC               	movlw	-36
 11023  0107D0  0060  F0CB  FFE3   	movff	btemp,plusw1
 11024  0107D6  0EDD               	movlw	-35
 11025  0107D8  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11026  0107DE  0EDE               	movlw	-34
 11027  0107E0  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11028  0107E6  0EDF               	movlw	-33
 11029  0107E8  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11030                           
 11031                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 11032                           ;stkvar	_l @ sp[(-56)+20]
 11033  0107EE  0EDC               	movlw	-36
 11034  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 11035  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 11036  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 11037  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 11038  010808  EC15  F0AF         	call	___fltol	;wreg free
 11039  01080C  0060  F0C8  F03C   	movff	btemp,btemp+10
 11040  010812  0060  F0CC  F03D   	movff	btemp+1,btemp+11
 11041                           
 11042                           ;stkvar	_d @ sp[(-56)+44]
 11043  010818  0EF4               	movlw	-12
 11044  01081A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11045  010820  0EF5               	movlw	-11
 11046  010822  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11047                           
 11048                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 11049                           ;stkvar	_u @ sp[(-56)+12]
 11050  010828  0ED4               	movlw	-44
 11051  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 11052  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 11053  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 11054  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 11055                           
 11056                           ;stkvar	_l @ sp[(-60)+20]
 11057  010842  0ED8               	movlw	-40
 11058  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 11059  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 11060  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 11061  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 11062  01085C  ECC1  F08E         	call	___flmul	;wreg free
 11063  010860  0060  F0CB  FFE6   	movff	btemp,postinc1
 11064  010866  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 11065  01086C  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 11066  010872  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 11067                           
 11068                           ;stkvar	_h @ sp[(-60)+24]
 11069  010878  0EDC               	movlw	-36
 11070  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 11071  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 11072  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 11073  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 11074  010892  EC61  F0BD         	call	___flsub	;wreg free
 11075                           
 11076                           ;stkvar	_h @ sp[(-56)+24]
 11077  010896  0EE0               	movlw	-32
 11078  010898  0060  F0CB  FFE3   	movff	btemp,plusw1
 11079  01089E  0EE1               	movlw	-31
 11080  0108A0  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11081  0108A6  0EE2               	movlw	-30
 11082  0108A8  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11083  0108AE  0EE3               	movlw	-29
 11084  0108B0  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11085                           
 11086                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 11087  0108B6  0E00               	movlw	0
 11088  0108B8  6EE6               	movwf	postinc1,c
 11089  0108BA  0E00               	movlw	0
 11090  0108BC  6EE6               	movwf	postinc1,c
 11091  0108BE  0E20               	movlw	32
 11092  0108C0  6EE6               	movwf	postinc1,c
 11093  0108C2  0E41               	movlw	65
 11094  0108C4  6EE6               	movwf	postinc1,c
 11095                           
 11096                           ;stkvar	_u @ sp[(-60)+12]
 11097  0108C6  0ED0               	movlw	-48
 11098  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 11099  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 11100  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 11101  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 11102  0108E0  EC77  F099         	call	___fldiv	;wreg free
 11103                           
 11104                           ;stkvar	_u @ sp[(-56)+12]
 11105  0108E4  0ED4               	movlw	-44
 11106  0108E6  0060  F0CB  FFE3   	movff	btemp,plusw1
 11107  0108EC  0ED5               	movlw	-43
 11108  0108EE  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11109  0108F4  0ED6               	movlw	-42
 11110  0108F6  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11111  0108FC  0ED7               	movlw	-41
 11112  0108FE  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11113                           
 11114                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 11115                           ;stkvar	_i @ sp[(-56)+36]
 11116  010904  0EEC               	movlw	-20
 11117  010906  50E3               	movf	plusw1,w,c
 11118  010908  0F01               	addlw	1
 11119  01090A  6E32               	movwf	btemp^0,c
 11120  01090C  0EEC               	movlw	-20
 11121  01090E  0060  F0CB  FFE3   	movff	btemp,plusw1
 11122  010914  6A32               	clrf	btemp^0,c
 11123  010916  0EED               	movlw	-19
 11124  010918  50E3               	movf	plusw1,w,c
 11125  01091A  2032               	addwfc	btemp^0,w,c
 11126  01091C  6E32               	movwf	btemp^0,c
 11127  01091E  0EED               	movlw	-19
 11128  010920  0060  F0CB  FFE3   	movff	btemp,plusw1
 11129  010926                     l10411:
 11130                           
 11131                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 11132                           ;stkvar	_m @ sp[(-56)+48]
 11133                           ;stkvar	_i @ sp[(-56)+36]
 11134  010926  50E1               	movf	fsr1l,w,c
 11135  010928  0FEC               	addlw	-20
 11136  01092A  6ED9               	movwf	fsr2l,c
 11137  01092C  50E2               	movf	fsr1h,w,c
 11138  01092E  6EDA               	movwf	fsr2h,c
 11139  010930  0EFF               	movlw	255
 11140  010932  22DA               	addwfc	fsr2h,f,c
 11141  010934  0EF8               	movlw	-8
 11142  010936  50E3               	movf	plusw1,w,c
 11143  010938  5CDE               	subwf	postinc2,w,c
 11144  01093A  50DE               	movf	postinc2,w,c
 11145  01093C  0A80               	xorlw	128
 11146  01093E  6E32               	movwf	btemp^0,c
 11147  010940  0EF9               	movlw	-7
 11148  010942  50E3               	movf	plusw1,w,c
 11149  010944  0A80               	xorlw	128
 11150  010946  5832               	subwfb	btemp^0,w,c
 11151  010948  A0D8               	btfss	status,0,c
 11152  01094A  D717               	goto	l10401
 11153                           
 11154                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 11155  01094C  0E00               	movlw	0
 11156  01094E  6EE6               	movwf	postinc1,c
 11157  010950  0E00               	movlw	0
 11158  010952  6EE6               	movwf	postinc1,c
 11159  010954  0EA0               	movlw	160
 11160  010956  6EE6               	movwf	postinc1,c
 11161  010958  0E40               	movlw	64
 11162  01095A  6EE6               	movwf	postinc1,c
 11163                           
 11164                           ;stkvar	_u @ sp[(-60)+12]
 11165  01095C  0ED0               	movlw	-48
 11166  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 11167  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 11168  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 11169  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 11170  010976  ECC1  F08E         	call	___flmul	;wreg free
 11171                           
 11172                           ;stkvar	_l @ sp[(-56)+20]
 11173  01097A  0EDC               	movlw	-36
 11174  01097C  0060  F0CB  FFE3   	movff	btemp,plusw1
 11175  010982  0EDD               	movlw	-35
 11176  010984  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11177  01098A  0EDE               	movlw	-34
 11178  01098C  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11179  010992  0EDF               	movlw	-33
 11180  010994  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11181                           
 11182                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 11183                           ;stkvar	_l @ sp[(-56)+20]
 11184  01099A  0EDC               	movlw	-36
 11185  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 11186  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 11187  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 11188  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 11189                           
 11190                           ;stkvar	_h @ sp[(-60)+24]
 11191  0109B4  0EDC               	movlw	-36
 11192  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 11193  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 11194  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 11195  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 11196  0109CE  ECCE  F0AF         	call	___flge	;wreg free
 11197  0109D2  A032               	btfss	btemp& (0+255),0,c
 11198  0109D4  D021               	goto	u11160
 11199                           
 11200                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 11201                           ;stkvar	_l @ sp[(-56)+20]
 11202                           
 11203                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 11204                           
 11205                           ;stkvar	_l @ sp[(-56)+20]
 11206                           
 11207                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 11208  0109D6  0EDC               	movlw	-36
 11209  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 11210  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 11211  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 11212  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 11213                           
 11214                           ;stkvar	_h @ sp[(-60)+24]
 11215  0109F0  0EDC               	movlw	-36
 11216  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 11217  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 11218  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 11219  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 11220  010A0A  EC6E  F0B6         	call	___fleq	;wreg free
 11221  010A0E  A032               	btfss	btemp& (0+255),0,c
 11222  010A10  D01B               	goto	l10425
 11223                           
 11224                           ;stkvar	_d @ sp[(-56)+44]
 11225  010A12  0EF4               	movlw	-12
 11226  010A14  B0E3               	btfsc	plusw1,0,c
 11227  010A16  D018               	goto	l10425
 11228  010A18                     u11160:
 11229                           
 11230                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 11231  010A18  0E00               	movlw	0
 11232  010A1A  6E3A               	movwf	(btemp+8)^0,c
 11233  010A1C  0E00               	movlw	0
 11234  010A1E  6E3B               	movwf	(btemp+9)^0,c
 11235  010A20  0E00               	movlw	0
 11236  010A22  6E3C               	movwf	(btemp+10)^0,c
 11237  010A24  0E00               	movlw	0
 11238  010A26  6E3D               	movwf	(btemp+11)^0,c
 11239                           
 11240                           ;stkvar	_l @ sp[(-56)+20]
 11241  010A28  0EDC               	movlw	-36
 11242  010A2A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 11243  010A30  0EDD               	movlw	-35
 11244  010A32  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 11245  010A38  0EDE               	movlw	-34
 11246  010A3A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11247  010A40  0EDF               	movlw	-33
 11248  010A42  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11249  010A48                     l10425:
 11250                           
 11251                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 11252                           ;stkvar	_l @ sp[(-56)+20]
 11253  010A48  0EDC               	movlw	-36
 11254  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 11255  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 11256  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 11257  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 11258                           
 11259                           ;stkvar	_g @ sp[(-60)+16]
 11260  010A62  0ED4               	movlw	-44
 11261  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 11262  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 11263  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 11264  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 11265  010A7C  ECD6  F092         	call	___fladd	;wreg free
 11266                           
 11267                           ;stkvar	_h @ sp[(-56)+24]
 11268  010A80  0EE0               	movlw	-32
 11269  010A82  0060  F0CB  FFE3   	movff	btemp,plusw1
 11270  010A88  0EE1               	movlw	-31
 11271  010A8A  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11272  010A90  0EE2               	movlw	-30
 11273  010A92  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11274  010A98  0EE3               	movlw	-29
 11275  010A9A  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11276                           
 11277                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 11278                           ;stkvar	_ou @ sp[(-56)+28]
 11279  010AA0  0EE4               	movlw	-28
 11280  010AA2  006F FF8C  F03A    	movff	plusw1,btemp+8
 11281  010AA8  0EE5               	movlw	-27
 11282  010AAA  006F FF8C  F03B    	movff	plusw1,btemp+9
 11283  010AB0  0EE6               	movlw	-26
 11284  010AB2  006F FF8C  F03C    	movff	plusw1,btemp+10
 11285  010AB8  0EE7               	movlw	-25
 11286  010ABA  006F FF8C  F03D    	movff	plusw1,btemp+11
 11287                           
 11288                           ;stkvar	_u @ sp[(-56)+12]
 11289  010AC0  0ED4               	movlw	-44
 11290  010AC2  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 11291  010AC8  0ED5               	movlw	-43
 11292  010ACA  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 11293  010AD0  0ED6               	movlw	-42
 11294  010AD2  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11295  010AD8  0ED7               	movlw	-41
 11296  010ADA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11297                           
 11298                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 11299                           ;stkvar	_nmode @ sp[(-56)+55]
 11300  010AE0  0EFF               	movlw	-1
 11301  010AE2  006F FF8C  F032    	movff	plusw1,btemp
 11302  010AE8  0E65               	movlw	101
 11303  010AEA  1832               	xorwf	btemp^0,w,c
 11304  010AEC  B4D8               	btfsc	status,2,c
 11305  010AEE  D011               	goto	l10433
 11306                           
 11307                           ;stkvar	_e @ sp[(-56)+34]
 11308                           ;stkvar	_ne @ sp[(-56)+46]
 11309  010AF0  0EEA               	movlw	-22
 11310  010AF2  006F FF8C  F032    	movff	plusw1,btemp
 11311  010AF8  0EF6               	movlw	-10
 11312  010AFA  0060  F0CB  FFE3   	movff	btemp,plusw1
 11313  010B00  0EEB               	movlw	-21
 11314  010B02  006F FF8C  F032    	movff	plusw1,btemp
 11315  010B08  0EF7               	movlw	-9
 11316  010B0A  0060  F0CB  FFE3   	movff	btemp,plusw1
 11317  010B10  D004               	goto	l1908
 11318  010B12                     l10433:
 11319                           
 11320                           ;stkvar	_ne @ sp[(-56)+46]
 11321  010B12  0EF6               	movlw	-10
 11322  010B14  6AE3               	clrf	plusw1,c
 11323  010B16  0EF7               	movlw	-9
 11324  010B18  6AE3               	clrf	plusw1,c
 11325  010B1A                     l1908:
 11326                           
 11327                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 11328                           ;stkvar	_pp @ sp[(-56)+50]
 11329  010B1A  0EFA               	movlw	-6
 11330  010B1C  6AE3               	clrf	plusw1,c
 11331  010B1E  0EFB               	movlw	-5
 11332  010B20  6AE3               	clrf	plusw1,c
 11333                           
 11334                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 11335                           ;stkvar	_t @ sp[(-56)+52]
 11336  010B22  0EFC               	movlw	-4
 11337  010B24  6AE3               	clrf	plusw1,c
 11338  010B26  0EFD               	movlw	-3
 11339  010B28  6AE3               	clrf	plusw1,c
 11340                           
 11341                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 11342                           ;stkvar	_i @ sp[(-56)+36]
 11343  010B2A  0EEC               	movlw	-20
 11344  010B2C  6AE3               	clrf	plusw1,c
 11345  010B2E  0EED               	movlw	-19
 11346  010B30  6AE3               	clrf	plusw1,c
 11347                           
 11348                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 11349  010B32  D1B7               	goto	l10485
 11350  010B34                     l10435:
 11351                           
 11352                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 11353                           ;stkvar	_u @ sp[(-56)+12]
 11354  010B34  0ED4               	movlw	-44
 11355  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 11356  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 11357  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 11358  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 11359                           
 11360                           ;stkvar	_h @ sp[(-60)+24]
 11361  010B4E  0EDC               	movlw	-36
 11362  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 11363  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 11364  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 11365  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 11366  010B68  EC77  F099         	call	___fldiv	;wreg free
 11367  010B6C  0060  F0CB  FFE6   	movff	btemp,postinc1
 11368  010B72  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 11369  010B78  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 11370  010B7E  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 11371  010B84  EC56  F0A2         	call	_floorf	;wreg free
 11372                           
 11373                           ;stkvar	_l @ sp[(-56)+20]
 11374  010B88  0EDC               	movlw	-36
 11375  010B8A  0060  F0CB  FFE3   	movff	btemp,plusw1
 11376  010B90  0EDD               	movlw	-35
 11377  010B92  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11378  010B98  0EDE               	movlw	-34
 11379  010B9A  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11380  010BA0  0EDF               	movlw	-33
 11381  010BA2  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11382                           
 11383                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 11384                           ;stkvar	_l @ sp[(-56)+20]
 11385  010BA8  0EDC               	movlw	-36
 11386  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 11387  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 11388  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 11389  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 11390  010BC2  EC15  F0AF         	call	___fltol	;wreg free
 11391  010BC6  0060  F0C8  F03C   	movff	btemp,btemp+10
 11392  010BCC  0060  F0CC  F03D   	movff	btemp+1,btemp+11
 11393                           
 11394                           ;stkvar	_d @ sp[(-56)+44]
 11395  010BD2  0EF4               	movlw	-12
 11396  010BD4  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11397  010BDA  0EF5               	movlw	-11
 11398  010BDC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11399                           
 11400                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 11401  010BE2  B81F               	btfsc	_flags^0,4,c
 11402  010BE4  D026               	goto	l10449
 11403                           
 11404                           ;stkvar	_d @ sp[(-56)+44]
 11405  010BE6  0EF4               	movlw	-12
 11406  010BE8  006F FF8C  F032    	movff	plusw1,btemp
 11407  010BEE  0EF5               	movlw	-11
 11408  010BF0  50E3               	movf	plusw1,w,c
 11409  010BF2  1032               	iorwf	btemp^0,w,c
 11410  010BF4  A4D8               	btfss	status,2,c
 11411  010BF6  D01D               	goto	l10449
 11412                           
 11413                           ;stkvar	_mode @ sp[(-56)+54]
 11414  010BF8  0EFE               	movlw	-2
 11415  010BFA  006F FF8C  F032    	movff	plusw1,btemp
 11416  010C00  0E67               	movlw	103
 11417  010C02  1832               	xorwf	btemp^0,w,c
 11418  010C04  A4D8               	btfss	status,2,c
 11419  010C06  D015               	goto	l10449
 11420                           
 11421                           ;stkvar	_ne @ sp[(-56)+46]
 11422  010C08  0EF7               	movlw	-9
 11423  010C0A  AEE3               	btfss	plusw1,7,c
 11424  010C0C  D012               	goto	l10449
 11425                           
 11426                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 11427                           ;stkvar	_t @ sp[(-56)+52]
 11428  010C0E  0EFC               	movlw	-4
 11429  010C10  50E3               	movf	plusw1,w,c
 11430  010C12  0F01               	addlw	1
 11431  010C14  6E32               	movwf	btemp^0,c
 11432  010C16  0EFC               	movlw	-4
 11433  010C18  0060  F0CB  FFE3   	movff	btemp,plusw1
 11434  010C1E  6A32               	clrf	btemp^0,c
 11435  010C20  0EFD               	movlw	-3
 11436  010C22  50E3               	movf	plusw1,w,c
 11437  010C24  2032               	addwfc	btemp^0,w,c
 11438  010C26  6E32               	movwf	btemp^0,c
 11439  010C28  0EFD               	movlw	-3
 11440  010C2A  0060  F0CB  FFE3   	movff	btemp,plusw1
 11441                           
 11442                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 11443  010C30  D0AF               	goto	l10477
 11444  010C32                     l10449:
 11445                           
 11446                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 11447                           ;stkvar	_pp @ sp[(-56)+50]
 11448  010C32  0EFA               	movlw	-6
 11449  010C34  006F FF8C  F032    	movff	plusw1,btemp
 11450  010C3A  0EFB               	movlw	-5
 11451  010C3C  50E3               	movf	plusw1,w,c
 11452  010C3E  1032               	iorwf	btemp^0,w,c
 11453  010C40  A4D8               	btfss	status,2,c
 11454  010C42  D070               	goto	l10469
 11455                           
 11456                           ;stkvar	_ne @ sp[(-56)+46]
 11457  010C44  0EF7               	movlw	-9
 11458  010C46  AEE3               	btfss	plusw1,7,c
 11459  010C48  D06D               	goto	l10469
 11460                           
 11461                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 11462                           ;stkvar	_n @ sp[(-56)+32]
 11463  010C4A  0EE8               	movlw	-24
 11464  010C4C  006F FF8C  F03C    	movff	plusw1,btemp+10
 11465  010C52  0EE9               	movlw	-23
 11466  010C54  006F FF8C  F03D    	movff	plusw1,btemp+11
 11467  010C5A  0E40               	movlw	low _dbuf
 11468  010C5C  243C               	addwf	(btemp+10)^0,w,c
 11469  010C5E  6ED9               	movwf	fsr2l,c
 11470  010C60  0E02               	movlw	high _dbuf
 11471  010C62  203D               	addwfc	(btemp+11)^0,w,c
 11472  010C64  6EDA               	movwf	fsr2h,c
 11473  010C66  0E2E               	movlw	46
 11474  010C68  6EDF               	movwf	indf2,c
 11475                           
 11476                           ;stkvar	_n @ sp[(-56)+32]
 11477  010C6A  0EE8               	movlw	-24
 11478  010C6C  50E3               	movf	plusw1,w,c
 11479  010C6E  0F01               	addlw	1
 11480  010C70  6E32               	movwf	btemp^0,c
 11481  010C72  0EE8               	movlw	-24
 11482  010C74  0060  F0CB  FFE3   	movff	btemp,plusw1
 11483  010C7A  6A32               	clrf	btemp^0,c
 11484  010C7C  0EE9               	movlw	-23
 11485  010C7E  50E3               	movf	plusw1,w,c
 11486  010C80  2032               	addwfc	btemp^0,w,c
 11487  010C82  6E32               	movwf	btemp^0,c
 11488  010C84  0EE9               	movlw	-23
 11489  010C86  0060  F0CB  FFE3   	movff	btemp,plusw1
 11490                           
 11491                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 11492                           ;stkvar	_w @ sp[(-56)+38]
 11493  010C8C  50E1               	movf	fsr1l,w,c
 11494  010C8E  0FEE               	addlw	-18
 11495  010C90  6ED9               	movwf	fsr2l,c
 11496  010C92  50E2               	movf	fsr1h,w,c
 11497  010C94  6EDA               	movwf	fsr2h,c
 11498  010C96  0EFF               	movlw	255
 11499  010C98  22DA               	addwfc	fsr2h,f,c
 11500  010C9A  06DE               	decf	postinc2,f,c
 11501  010C9C  0E00               	movlw	0
 11502  010C9E  5ADD               	subwfb	postdec2,f,c
 11503                           
 11504                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 11505  010CA0  0E01               	movlw	1
 11506  010CA2  6E3C               	movwf	(btemp+10)^0,c
 11507  010CA4  0E00               	movlw	0
 11508  010CA6  6E3D               	movwf	(btemp+11)^0,c
 11509                           
 11510                           ;stkvar	_pp @ sp[(-56)+50]
 11511  010CA8  0EFA               	movlw	-6
 11512  010CAA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11513  010CB0  0EFB               	movlw	-5
 11514  010CB2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11515  010CB8  D035               	goto	l10469
 11516  010CBA                     l10461:
 11517                           
 11518                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 11519                           ;stkvar	_n @ sp[(-56)+32]
 11520  010CBA  0EE8               	movlw	-24
 11521  010CBC  006F FF8C  F03C    	movff	plusw1,btemp+10
 11522  010CC2  0EE9               	movlw	-23
 11523  010CC4  006F FF8C  F03D    	movff	plusw1,btemp+11
 11524  010CCA  0E40               	movlw	low _dbuf
 11525  010CCC  243C               	addwf	(btemp+10)^0,w,c
 11526  010CCE  6ED9               	movwf	fsr2l,c
 11527  010CD0  0E02               	movlw	high _dbuf
 11528  010CD2  203D               	addwfc	(btemp+11)^0,w,c
 11529  010CD4  6EDA               	movwf	fsr2h,c
 11530  010CD6  0E30               	movlw	48
 11531  010CD8  6EDF               	movwf	indf2,c
 11532                           
 11533                           ;stkvar	_n @ sp[(-56)+32]
 11534  010CDA  0EE8               	movlw	-24
 11535  010CDC  50E3               	movf	plusw1,w,c
 11536  010CDE  0F01               	addlw	1
 11537  010CE0  6E32               	movwf	btemp^0,c
 11538  010CE2  0EE8               	movlw	-24
 11539  010CE4  0060  F0CB  FFE3   	movff	btemp,plusw1
 11540  010CEA  6A32               	clrf	btemp^0,c
 11541  010CEC  0EE9               	movlw	-23
 11542  010CEE  50E3               	movf	plusw1,w,c
 11543  010CF0  2032               	addwfc	btemp^0,w,c
 11544  010CF2  6E32               	movwf	btemp^0,c
 11545  010CF4  0EE9               	movlw	-23
 11546  010CF6  0060  F0CB  FFE3   	movff	btemp,plusw1
 11547                           
 11548                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 11549                           ;stkvar	_w @ sp[(-56)+38]
 11550  010CFC  50E1               	movf	fsr1l,w,c
 11551  010CFE  0FEE               	addlw	-18
 11552  010D00  6ED9               	movwf	fsr2l,c
 11553  010D02  50E2               	movf	fsr1h,w,c
 11554  010D04  6EDA               	movwf	fsr2h,c
 11555  010D06  0EFF               	movlw	255
 11556  010D08  22DA               	addwfc	fsr2h,f,c
 11557  010D0A  06DE               	decf	postinc2,f,c
 11558  010D0C  0E00               	movlw	0
 11559  010D0E  5ADD               	subwfb	postdec2,f,c
 11560                           
 11561                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 11562                           ;stkvar	_t @ sp[(-56)+52]
 11563  010D10  50E1               	movf	fsr1l,w,c
 11564  010D12  0FFC               	addlw	-4
 11565  010D14  6ED9               	movwf	fsr2l,c
 11566  010D16  50E2               	movf	fsr1h,w,c
 11567  010D18  6EDA               	movwf	fsr2h,c
 11568  010D1A  0EFF               	movlw	255
 11569  010D1C  22DA               	addwfc	fsr2h,f,c
 11570  010D1E  06DE               	decf	postinc2,f,c
 11571  010D20  0E00               	movlw	0
 11572  010D22  5ADD               	subwfb	postdec2,f,c
 11573  010D24                     l10469:
 11574                           
 11575                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 11576                           ;stkvar	_t @ sp[(-56)+52]
 11577  010D24  0EFC               	movlw	-4
 11578  010D26  006F FF8C  F032    	movff	plusw1,btemp
 11579  010D2C  0EFD               	movlw	-3
 11580  010D2E  50E3               	movf	plusw1,w,c
 11581  010D30  1032               	iorwf	btemp^0,w,c
 11582  010D32  A4D8               	btfss	status,2,c
 11583  010D34  D7C2               	goto	l10461
 11584                           
 11585                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 11586                           ;stkvar	_n @ sp[(-56)+32]
 11587  010D36  0EE8               	movlw	-24
 11588  010D38  006F FF8C  F03C    	movff	plusw1,btemp+10
 11589  010D3E  0EE9               	movlw	-23
 11590  010D40  006F FF8C  F03D    	movff	plusw1,btemp+11
 11591  010D46  0E40               	movlw	low _dbuf
 11592  010D48  243C               	addwf	(btemp+10)^0,w,c
 11593  010D4A  6ED9               	movwf	fsr2l,c
 11594  010D4C  0E02               	movlw	high _dbuf
 11595  010D4E  203D               	addwfc	(btemp+11)^0,w,c
 11596  010D50  6EDA               	movwf	fsr2h,c
 11597                           
 11598                           ;stkvar	_d @ sp[(-56)+44]
 11599  010D52  0EF4               	movlw	-12
 11600  010D54  50E3               	movf	plusw1,w,c
 11601  010D56  0F30               	addlw	48
 11602  010D58  6EDF               	movwf	indf2,c
 11603                           
 11604                           ;stkvar	_n @ sp[(-56)+32]
 11605  010D5A  0EE8               	movlw	-24
 11606  010D5C  50E3               	movf	plusw1,w,c
 11607  010D5E  0F01               	addlw	1
 11608  010D60  6E32               	movwf	btemp^0,c
 11609  010D62  0EE8               	movlw	-24
 11610  010D64  0060  F0CB  FFE3   	movff	btemp,plusw1
 11611  010D6A  6A32               	clrf	btemp^0,c
 11612  010D6C  0EE9               	movlw	-23
 11613  010D6E  50E3               	movf	plusw1,w,c
 11614  010D70  2032               	addwfc	btemp^0,w,c
 11615  010D72  6E32               	movwf	btemp^0,c
 11616  010D74  0EE9               	movlw	-23
 11617  010D76  0060  F0CB  FFE3   	movff	btemp,plusw1
 11618                           
 11619                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 11620                           ;stkvar	_w @ sp[(-56)+38]
 11621  010D7C  50E1               	movf	fsr1l,w,c
 11622  010D7E  0FEE               	addlw	-18
 11623  010D80  6ED9               	movwf	fsr2l,c
 11624  010D82  50E2               	movf	fsr1h,w,c
 11625  010D84  6EDA               	movwf	fsr2h,c
 11626  010D86  0EFF               	movlw	255
 11627  010D88  22DA               	addwfc	fsr2h,f,c
 11628  010D8A  06DE               	decf	postinc2,f,c
 11629  010D8C  0E00               	movlw	0
 11630  010D8E  5ADD               	subwfb	postdec2,f,c
 11631  010D90                     l10477:
 11632                           
 11633                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 11634                           ;stkvar	_u @ sp[(-56)+12]
 11635  010D90  0ED4               	movlw	-44
 11636  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 11637  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 11638  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 11639  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 11640                           
 11641                           ;stkvar	_l @ sp[(-60)+20]
 11642  010DAA  0ED8               	movlw	-40
 11643  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 11644  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 11645  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 11646  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 11647  010DC4  ECC1  F08E         	call	___flmul	;wreg free
 11648  010DC8  0060  F0CB  FFE6   	movff	btemp,postinc1
 11649  010DCE  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 11650  010DD4  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 11651  010DDA  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 11652                           
 11653                           ;stkvar	_h @ sp[(-60)+24]
 11654  010DE0  0EDC               	movlw	-36
 11655  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 11656  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 11657  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 11658  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 11659  010DFA  EC61  F0BD         	call	___flsub	;wreg free
 11660                           
 11661                           ;stkvar	_h @ sp[(-56)+24]
 11662  010DFE  0EE0               	movlw	-32
 11663  010E00  0060  F0CB  FFE3   	movff	btemp,plusw1
 11664  010E06  0EE1               	movlw	-31
 11665  010E08  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11666  010E0E  0EE2               	movlw	-30
 11667  010E10  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11668  010E16  0EE3               	movlw	-29
 11669  010E18  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11670                           
 11671                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 11672  010E1E  0E00               	movlw	0
 11673  010E20  6EE6               	movwf	postinc1,c
 11674  010E22  0E00               	movlw	0
 11675  010E24  6EE6               	movwf	postinc1,c
 11676  010E26  0E20               	movlw	32
 11677  010E28  6EE6               	movwf	postinc1,c
 11678  010E2A  0E41               	movlw	65
 11679  010E2C  6EE6               	movwf	postinc1,c
 11680                           
 11681                           ;stkvar	_u @ sp[(-60)+12]
 11682  010E2E  0ED0               	movlw	-48
 11683  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 11684  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 11685  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 11686  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 11687  010E48  EC77  F099         	call	___fldiv	;wreg free
 11688                           
 11689                           ;stkvar	_u @ sp[(-56)+12]
 11690  010E4C  0ED4               	movlw	-44
 11691  010E4E  0060  F0CB  FFE3   	movff	btemp,plusw1
 11692  010E54  0ED5               	movlw	-43
 11693  010E56  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11694  010E5C  0ED6               	movlw	-42
 11695  010E5E  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11696  010E64  0ED7               	movlw	-41
 11697  010E66  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11698                           
 11699                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 11700                           ;stkvar	_ne @ sp[(-56)+46]
 11701  010E6C  50E1               	movf	fsr1l,w,c
 11702  010E6E  0FF6               	addlw	-10
 11703  010E70  6ED9               	movwf	fsr2l,c
 11704  010E72  50E2               	movf	fsr1h,w,c
 11705  010E74  6EDA               	movwf	fsr2h,c
 11706  010E76  0EFF               	movlw	255
 11707  010E78  22DA               	addwfc	fsr2h,f,c
 11708  010E7A  06DE               	decf	postinc2,f,c
 11709  010E7C  0E00               	movlw	0
 11710  010E7E  5ADD               	subwfb	postdec2,f,c
 11711                           
 11712                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 11713                           ;stkvar	_i @ sp[(-56)+36]
 11714  010E80  0EEC               	movlw	-20
 11715  010E82  50E3               	movf	plusw1,w,c
 11716  010E84  0F01               	addlw	1
 11717  010E86  6E32               	movwf	btemp^0,c
 11718  010E88  0EEC               	movlw	-20
 11719  010E8A  0060  F0CB  FFE3   	movff	btemp,plusw1
 11720  010E90  6A32               	clrf	btemp^0,c
 11721  010E92  0EED               	movlw	-19
 11722  010E94  50E3               	movf	plusw1,w,c
 11723  010E96  2032               	addwfc	btemp^0,w,c
 11724  010E98  6E32               	movwf	btemp^0,c
 11725  010E9A  0EED               	movlw	-19
 11726  010E9C  0060  F0CB  FFE3   	movff	btemp,plusw1
 11727  010EA2                     l10485:
 11728                           
 11729                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 11730                           ;stkvar	_m @ sp[(-56)+48]
 11731                           ;stkvar	_i @ sp[(-56)+36]
 11732  010EA2  50E1               	movf	fsr1l,w,c
 11733  010EA4  0FEC               	addlw	-20
 11734  010EA6  6ED9               	movwf	fsr2l,c
 11735  010EA8  50E2               	movf	fsr1h,w,c
 11736  010EAA  6EDA               	movwf	fsr2h,c
 11737  010EAC  0EFF               	movlw	255
 11738  010EAE  22DA               	addwfc	fsr2h,f,c
 11739  010EB0  0EF8               	movlw	-8
 11740  010EB2  50E3               	movf	plusw1,w,c
 11741  010EB4  5CDE               	subwf	postinc2,w,c
 11742  010EB6  50DE               	movf	postinc2,w,c
 11743  010EB8  0A80               	xorlw	128
 11744  010EBA  6E32               	movwf	btemp^0,c
 11745  010EBC  0EF9               	movlw	-7
 11746  010EBE  50E3               	movf	plusw1,w,c
 11747  010EC0  0A80               	xorlw	128
 11748  010EC2  5832               	subwfb	btemp^0,w,c
 11749  010EC4  B0D8               	btfsc	status,0,c
 11750  010EC6  D00E               	goto	u11260
 11751                           
 11752                           ;stkvar	_n @ sp[(-56)+32]
 11753  010EC8  0EE9               	movlw	-23
 11754  010ECA  BEE3               	btfsc	plusw1,7,c
 11755  010ECC  D633               	goto	l10435
 11756  010ECE  0EE9               	movlw	-23
 11757  010ED0  50E3               	movf	plusw1,w,c
 11758  010ED2  E108               	bnz	u11260
 11759  010ED4  0EE8               	movlw	-24
 11760  010ED6  006F FF8C  F032    	movff	plusw1,btemp
 11761  010EDC  0E4B               	movlw	75
 11762  010EDE  5E32               	subwf	btemp^0,f,c
 11763  010EE0  A0D8               	btfss	status,0,c
 11764  010EE2  D628               	goto	l10435
 11765  010EE4                     u11260:
 11766                           
 11767                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 11768                           ;stkvar	_pp @ sp[(-56)+50]
 11769  010EE4  0EFA               	movlw	-6
 11770  010EE6  006F FF8C  F032    	movff	plusw1,btemp
 11771  010EEC  0EFB               	movlw	-5
 11772  010EEE  50E3               	movf	plusw1,w,c
 11773  010EF0  1032               	iorwf	btemp^0,w,c
 11774  010EF2  B4D8               	btfsc	status,2,c
 11775  010EF4  A81F               	btfss	_flags^0,4,c
 11776  010EF6  D021               	goto	l10497
 11777                           
 11778                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 11779                           ;stkvar	_n @ sp[(-56)+32]
 11780  010EF8  0EE8               	movlw	-24
 11781  010EFA  006F FF8C  F03C    	movff	plusw1,btemp+10
 11782  010F00  0EE9               	movlw	-23
 11783  010F02  006F FF8C  F03D    	movff	plusw1,btemp+11
 11784  010F08  0E40               	movlw	low _dbuf
 11785  010F0A  243C               	addwf	(btemp+10)^0,w,c
 11786  010F0C  6ED9               	movwf	fsr2l,c
 11787  010F0E  0E02               	movlw	high _dbuf
 11788  010F10  203D               	addwfc	(btemp+11)^0,w,c
 11789  010F12  6EDA               	movwf	fsr2h,c
 11790  010F14  0E2E               	movlw	46
 11791  010F16  6EDF               	movwf	indf2,c
 11792                           
 11793                           ;stkvar	_n @ sp[(-56)+32]
 11794  010F18  0EE8               	movlw	-24
 11795  010F1A  50E3               	movf	plusw1,w,c
 11796  010F1C  0F01               	addlw	1
 11797  010F1E  6E32               	movwf	btemp^0,c
 11798  010F20  0EE8               	movlw	-24
 11799  010F22  0060  F0CB  FFE3   	movff	btemp,plusw1
 11800  010F28  6A32               	clrf	btemp^0,c
 11801  010F2A  0EE9               	movlw	-23
 11802  010F2C  50E3               	movf	plusw1,w,c
 11803  010F2E  2032               	addwfc	btemp^0,w,c
 11804  010F30  6E32               	movwf	btemp^0,c
 11805  010F32  0EE9               	movlw	-23
 11806  010F34  0060  F0CB  FFE3   	movff	btemp,plusw1
 11807  010F3A                     l10497:
 11808                           
 11809                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 11810                           ;stkvar	_n @ sp[(-56)+32]
 11811  010F3A  0EE8               	movlw	-24
 11812  010F3C  006F FF8C  F03C    	movff	plusw1,btemp+10
 11813  010F42  0EE9               	movlw	-23
 11814  010F44  006F FF8C  F03D    	movff	plusw1,btemp+11
 11815  010F4A  0E40               	movlw	low _dbuf
 11816  010F4C  243C               	addwf	(btemp+10)^0,w,c
 11817  010F4E  6ED9               	movwf	fsr2l,c
 11818  010F50  0E02               	movlw	high _dbuf
 11819  010F52  203D               	addwfc	(btemp+11)^0,w,c
 11820  010F54  6EDA               	movwf	fsr2h,c
 11821  010F56  0E00               	movlw	0
 11822  010F58  6EDF               	movwf	indf2,c
 11823                           
 11824                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 11825                           ;stkvar	_nmode @ sp[(-56)+55]
 11826  010F5A  0EFF               	movlw	-1
 11827  010F5C  006F FF8C  F032    	movff	plusw1,btemp
 11828  010F62  0E65               	movlw	101
 11829  010F64  1832               	xorwf	btemp^0,w,c
 11830  010F66  A4D8               	btfss	status,2,c
 11831  010F68  EF16  F081         	goto	l10301
 11832                           
 11833                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 11834  010F6C  0E4F               	movlw	79
 11835  010F6E  6E3C               	movwf	(btemp+10)^0,c
 11836  010F70  0E00               	movlw	0
 11837  010F72  6E3D               	movwf	(btemp+11)^0,c
 11838                           
 11839                           ;stkvar	_i @ sp[(-56)+36]
 11840  010F74  0EEC               	movlw	-20
 11841  010F76  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11842  010F7C  0EED               	movlw	-19
 11843  010F7E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11844                           
 11845                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 11846                           ;stkvar	_i @ sp[(-56)+36]
 11847  010F84  0EEC               	movlw	-20
 11848  010F86  006F FF8C  F03C    	movff	plusw1,btemp+10
 11849  010F8C  0EED               	movlw	-19
 11850  010F8E  006F FF8C  F03D    	movff	plusw1,btemp+11
 11851  010F94  0E40               	movlw	low _dbuf
 11852  010F96  243C               	addwf	(btemp+10)^0,w,c
 11853  010F98  6ED9               	movwf	fsr2l,c
 11854  010F9A  0E02               	movlw	high _dbuf
 11855  010F9C  203D               	addwfc	(btemp+11)^0,w,c
 11856  010F9E  6EDA               	movwf	fsr2h,c
 11857  010FA0  0E00               	movlw	0
 11858  010FA2  6EDF               	movwf	indf2,c
 11859                           
 11860                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 11861                           ;stkvar	_sign @ sp[(-56)+42]
 11862  010FA4  0EF2               	movlw	-14
 11863  010FA6  6AE3               	clrf	plusw1,c
 11864  010FA8  0EF3               	movlw	-13
 11865  010FAA  6AE3               	clrf	plusw1,c
 11866                           
 11867                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 11868                           ;stkvar	_e @ sp[(-56)+34]
 11869  010FAC  0EEB               	movlw	-21
 11870  010FAE  AEE3               	btfss	plusw1,7,c
 11871  010FB0  D012               	goto	l10511
 11872                           
 11873                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 11874  010FB2  0E01               	movlw	1
 11875  010FB4  6E3C               	movwf	(btemp+10)^0,c
 11876  010FB6  0E00               	movlw	0
 11877  010FB8  6E3D               	movwf	(btemp+11)^0,c
 11878                           
 11879                           ;stkvar	_sign @ sp[(-56)+42]
 11880  010FBA  0EF2               	movlw	-14
 11881  010FBC  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11882  010FC2  0EF3               	movlw	-13
 11883  010FC4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11884                           
 11885                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 11886                           ;stkvar	_e @ sp[(-56)+34]
 11887                           ;stkvar	_e @ sp[(-56)+34]
 11888  010FCA  0EEA               	movlw	-22
 11889  010FCC  6CE3               	negf	plusw1,c
 11890  010FCE  0EEB               	movlw	-21
 11891  010FD0  1EE3               	comf	plusw1,f,c
 11892  010FD2  B0D8               	btfsc	status,0,c
 11893  010FD4  2AE3               	incf	plusw1,f,c
 11894  010FD6                     l10511:
 11895                           
 11896                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 11897  010FD6  0E02               	movlw	2
 11898  010FD8  6E3C               	movwf	(btemp+10)^0,c
 11899  010FDA  0E00               	movlw	0
 11900  010FDC  6E3D               	movwf	(btemp+11)^0,c
 11901                           
 11902                           ;stkvar	_p @ sp[(-56)+40]
 11903  010FDE  0EF0               	movlw	-16
 11904  010FE0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11905  010FE6  0EF1               	movlw	-15
 11906  010FE8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11907                           
 11908                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 11909  010FEE  D051               	goto	l10523
 11910  010FF0                     l10513:
 11911                           
 11912                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 11913                           ;stkvar	_i @ sp[(-56)+36]
 11914  010FF0  50E1               	movf	fsr1l,w,c
 11915  010FF2  0FEC               	addlw	-20
 11916  010FF4  6ED9               	movwf	fsr2l,c
 11917  010FF6  50E2               	movf	fsr1h,w,c
 11918  010FF8  6EDA               	movwf	fsr2h,c
 11919  010FFA  0EFF               	movlw	255
 11920  010FFC  22DA               	addwfc	fsr2h,f,c
 11921  010FFE  06DE               	decf	postinc2,f,c
 11922  011000  0E00               	movlw	0
 11923  011002  5ADD               	subwfb	postdec2,f,c
 11924                           
 11925                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 11926                           ;stkvar	_i @ sp[(-56)+36]
 11927  011004  0EEC               	movlw	-20
 11928  011006  006F FF8C  F03C    	movff	plusw1,btemp+10
 11929  01100C  0EED               	movlw	-19
 11930  01100E  006F FF8C  F03D    	movff	plusw1,btemp+11
 11931  011014  0E40               	movlw	low _dbuf
 11932  011016  243C               	addwf	(btemp+10)^0,w,c
 11933  011018  6ED9               	movwf	fsr2l,c
 11934  01101A  0E02               	movlw	high _dbuf
 11935  01101C  203D               	addwfc	(btemp+11)^0,w,c
 11936  01101E  6EDA               	movwf	fsr2h,c
 11937  011020  0E0A               	movlw	10
 11938  011022  6EE6               	movwf	postinc1,c
 11939  011024  0E00               	movlw	0
 11940  011026  6EE6               	movwf	postinc1,c
 11941                           
 11942                           ;stkvar	_e @ sp[(-58)+34]
 11943  011028  0EE8               	movlw	-24
 11944  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 11945  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 11946  011036  ECF3  F0B2         	call	___awmod	;wreg free
 11947  01103A  5032               	movf	btemp^0,w,c
 11948  01103C  0F30               	addlw	48
 11949  01103E  6EDF               	movwf	indf2,c
 11950                           
 11951                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 11952  011040  0E0A               	movlw	10
 11953  011042  6EE6               	movwf	postinc1,c
 11954  011044  0E00               	movlw	0
 11955  011046  6EE6               	movwf	postinc1,c
 11956                           
 11957                           ;stkvar	_e @ sp[(-58)+34]
 11958  011048  0EE8               	movlw	-24
 11959  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 11960  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 11961  011056  EC7F  F0B0         	call	___awdiv	;wreg free
 11962                           
 11963                           ;stkvar	_e @ sp[(-56)+34]
 11964  01105A  0EEA               	movlw	-22
 11965  01105C  0060  F0CB  FFE3   	movff	btemp,plusw1
 11966  011062  0EEB               	movlw	-21
 11967  011064  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11968                           
 11969                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 11970                           ;stkvar	_p @ sp[(-56)+40]
 11971  01106A  50E1               	movf	fsr1l,w,c
 11972  01106C  0FF0               	addlw	-16
 11973  01106E  6ED9               	movwf	fsr2l,c
 11974  011070  50E2               	movf	fsr1h,w,c
 11975  011072  6EDA               	movwf	fsr2h,c
 11976  011074  0EFF               	movlw	255
 11977  011076  22DA               	addwfc	fsr2h,f,c
 11978  011078  06DE               	decf	postinc2,f,c
 11979  01107A  0E00               	movlw	0
 11980  01107C  5ADD               	subwfb	postdec2,f,c
 11981                           
 11982                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 11983                           ;stkvar	_w @ sp[(-56)+38]
 11984  01107E  50E1               	movf	fsr1l,w,c
 11985  011080  0FEE               	addlw	-18
 11986  011082  6ED9               	movwf	fsr2l,c
 11987  011084  50E2               	movf	fsr1h,w,c
 11988  011086  6EDA               	movwf	fsr2h,c
 11989  011088  0EFF               	movlw	255
 11990  01108A  22DA               	addwfc	fsr2h,f,c
 11991  01108C  06DE               	decf	postinc2,f,c
 11992  01108E  0E00               	movlw	0
 11993  011090  5ADD               	subwfb	postdec2,f,c
 11994  011092                     l10523:
 11995                           
 11996                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 11997                           ;stkvar	_e @ sp[(-56)+34]
 11998  011092  0EEA               	movlw	-22
 11999  011094  006F FF8C  F032    	movff	plusw1,btemp
 12000  01109A  0EEB               	movlw	-21
 12001  01109C  50E3               	movf	plusw1,w,c
 12002  01109E  1032               	iorwf	btemp^0,w,c
 12003  0110A0  A4D8               	btfss	status,2,c
 12004  0110A2  D7A6               	goto	l10513
 12005                           
 12006                           ;stkvar	_p @ sp[(-56)+40]
 12007  0110A4  0EF1               	movlw	-15
 12008  0110A6  BEE3               	btfsc	plusw1,7,c
 12009  0110A8  D007               	goto	u11320
 12010  0110AA  0EF1               	movlw	-15
 12011  0110AC  50E3               	movf	plusw1,w,c
 12012  0110AE  E1A0               	bnz	l10513
 12013  0110B0  0EF0               	movlw	-16
 12014  0110B2  04E3               	decf	plusw1,w,c
 12015  0110B4  B0D8               	btfsc	status,0,c
 12016  0110B6  D79C               	goto	l10513
 12017  0110B8                     u11320:
 12018                           
 12019                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 12020                           ;stkvar	_i @ sp[(-56)+36]
 12021  0110B8  50E1               	movf	fsr1l,w,c
 12022  0110BA  0FEC               	addlw	-20
 12023  0110BC  6ED9               	movwf	fsr2l,c
 12024  0110BE  50E2               	movf	fsr1h,w,c
 12025  0110C0  6EDA               	movwf	fsr2h,c
 12026  0110C2  0EFF               	movlw	255
 12027  0110C4  22DA               	addwfc	fsr2h,f,c
 12028  0110C6  06DE               	decf	postinc2,f,c
 12029  0110C8  0E00               	movlw	0
 12030  0110CA  5ADD               	subwfb	postdec2,f,c
 12031                           
 12032                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 12033                           ;stkvar	_sign @ sp[(-56)+42]
 12034  0110CC  0EF2               	movlw	-14
 12035  0110CE  006F FF8C  F032    	movff	plusw1,btemp
 12036  0110D4  0EF3               	movlw	-13
 12037  0110D6  50E3               	movf	plusw1,w,c
 12038  0110D8  1032               	iorwf	btemp^0,w,c
 12039  0110DA  A4D8               	btfss	status,2,c
 12040  0110DC  D002               	goto	l10533
 12041  0110DE  0E2B               	movlw	43
 12042  0110E0  D001               	goto	L10
 12043  0110E2                     l10533:
 12044  0110E2  0E2D               	movlw	45
 12045  0110E4                     L10:
 12046  0110E4  6E3C               	movwf	(btemp+10)^0,c
 12047  0110E6  0E00               	movlw	0
 12048  0110E8  6E3D               	movwf	(btemp+11)^0,c
 12049                           
 12050                           ;stkvar	_efgtoa$4387 @ sp[(-56)+4]
 12051  0110EA  0ECC               	movlw	-52
 12052  0110EC  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12053  0110F2  0ECD               	movlw	-51
 12054  0110F4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12055                           
 12056                           ;stkvar	_efgtoa$4387 @ sp[(-56)+4]
 12057                           ;stkvar	_i @ sp[(-56)+36]
 12058  0110FA  0EEC               	movlw	-20
 12059  0110FC  006F FF8C  F03C    	movff	plusw1,btemp+10
 12060  011102  0EED               	movlw	-19
 12061  011104  006F FF8C  F03D    	movff	plusw1,btemp+11
 12062  01110A  0E40               	movlw	low _dbuf
 12063  01110C  243C               	addwf	(btemp+10)^0,w,c
 12064  01110E  6ED9               	movwf	fsr2l,c
 12065  011110  0E02               	movlw	high _dbuf
 12066  011112  203D               	addwfc	(btemp+11)^0,w,c
 12067  011114  6EDA               	movwf	fsr2h,c
 12068  011116  0ECC               	movlw	-52
 12069  011118  006F FF8F FFDF     	movff	plusw1,indf2
 12070                           
 12071                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 12072                           ;stkvar	_w @ sp[(-56)+38]
 12073  01111E  50E1               	movf	fsr1l,w,c
 12074  011120  0FEE               	addlw	-18
 12075  011122  6ED9               	movwf	fsr2l,c
 12076  011124  50E2               	movf	fsr1h,w,c
 12077  011126  6EDA               	movwf	fsr2h,c
 12078  011128  0EFF               	movlw	255
 12079  01112A  22DA               	addwfc	fsr2h,f,c
 12080  01112C  06DE               	decf	postinc2,f,c
 12081  01112E  0E00               	movlw	0
 12082  011130  5ADD               	subwfb	postdec2,f,c
 12083                           
 12084                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 12085                           ;stkvar	_i @ sp[(-56)+36]
 12086  011132  50E1               	movf	fsr1l,w,c
 12087  011134  0FEC               	addlw	-20
 12088  011136  6ED9               	movwf	fsr2l,c
 12089  011138  50E2               	movf	fsr1h,w,c
 12090  01113A  6EDA               	movwf	fsr2h,c
 12091  01113C  0EFF               	movlw	255
 12092  01113E  22DA               	addwfc	fsr2h,f,c
 12093  011140  06DE               	decf	postinc2,f,c
 12094  011142  0E00               	movlw	0
 12095  011144  5ADD               	subwfb	postdec2,f,c
 12096  011146  0EBF               	movlw	191
 12097  011148  6E3C               	movwf	(btemp+10)^0,c
 12098  01114A  0EFF               	movlw	255
 12099  01114C  6E3D               	movwf	(btemp+11)^0,c
 12100                           
 12101                           ;stkvar	_c @ sp[(-56)+-7]
 12102  01114E  0EC1               	movlw	-63
 12103  011150  50E3               	movf	plusw1,w,c
 12104  011152  6E3A               	movwf	(btemp+8)^0,c
 12105  011154  6A3B               	clrf	(btemp+9)^0,c
 12106  011156  503C               	movf	(btemp+10)^0,w,c
 12107  011158  263A               	addwf	(btemp+8)^0,f,c
 12108  01115A  503D               	movf	(btemp+11)^0,w,c
 12109  01115C  223B               	addwfc	(btemp+9)^0,f,c
 12110  01115E  503B               	movf	(btemp+9)^0,w,c
 12111  011160  E106               	bnz	u11340
 12112  011162  0E1A               	movlw	26
 12113  011164  5C3A               	subwf	(btemp+8)^0,w,c
 12114  011166  B0D8               	btfsc	status,0,c
 12115  011168  D002               	goto	u11340
 12116  01116A  0E01               	movlw	1
 12117  01116C  D001               	goto	u11350
 12118  01116E                     u11340:
 12119  01116E  0E00               	movlw	0
 12120  011170                     u11350:
 12121  011170  6E3C               	movwf	(btemp+10)^0,c
 12122  011172  6A3D               	clrf	(btemp+11)^0,c
 12123                           
 12124                           ;stkvar	_efgtoa$4389 @ sp[(-56)+0]
 12125  011174  0EC8               	movlw	-56
 12126  011176  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12127  01117C  0EC9               	movlw	-55
 12128  01117E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12129                           
 12130                           ;stkvar	_efgtoa$4389 @ sp[(-56)+0]
 12131  011184  0EC8               	movlw	-56
 12132  011186  006F FF8C  F032    	movff	plusw1,btemp
 12133  01118C  0EC9               	movlw	-55
 12134  01118E  50E3               	movf	plusw1,w,c
 12135  011190  1032               	iorwf	btemp^0,w,c
 12136  011192  A4D8               	btfss	status,2,c
 12137  011194  D002               	goto	l10549
 12138  011196  0E65               	movlw	101
 12139  011198  D001               	goto	L11
 12140  01119A                     l10549:
 12141  01119A  0E45               	movlw	69
 12142  01119C                     L11:
 12143  01119C  6E3C               	movwf	(btemp+10)^0,c
 12144  01119E  0E00               	movlw	0
 12145  0111A0  6E3D               	movwf	(btemp+11)^0,c
 12146                           
 12147                           ;stkvar	_efgtoa$4388 @ sp[(-56)+2]
 12148  0111A2  0ECA               	movlw	-54
 12149  0111A4  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12150  0111AA  0ECB               	movlw	-53
 12151  0111AC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12152                           
 12153                           ;stkvar	_efgtoa$4388 @ sp[(-56)+2]
 12154                           ;stkvar	_i @ sp[(-56)+36]
 12155  0111B2  0EEC               	movlw	-20
 12156  0111B4  006F FF8C  F03C    	movff	plusw1,btemp+10
 12157  0111BA  0EED               	movlw	-19
 12158  0111BC  006F FF8C  F03D    	movff	plusw1,btemp+11
 12159  0111C2  0E40               	movlw	low _dbuf
 12160  0111C4  243C               	addwf	(btemp+10)^0,w,c
 12161  0111C6  6ED9               	movwf	fsr2l,c
 12162  0111C8  0E02               	movlw	high _dbuf
 12163  0111CA  203D               	addwfc	(btemp+11)^0,w,c
 12164  0111CC  6EDA               	movwf	fsr2h,c
 12165  0111CE  0ECA               	movlw	-54
 12166  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 12167                           
 12168                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 12169                           ;stkvar	_w @ sp[(-56)+38]
 12170  0111D6  50E1               	movf	fsr1l,w,c
 12171  0111D8  0FEE               	addlw	-18
 12172  0111DA  6ED9               	movwf	fsr2l,c
 12173  0111DC  50E2               	movf	fsr1h,w,c
 12174  0111DE  6EDA               	movwf	fsr2h,c
 12175  0111E0  0EFF               	movlw	255
 12176  0111E2  22DA               	addwfc	fsr2h,f,c
 12177  0111E4  06DE               	decf	postinc2,f,c
 12178  0111E6  0E00               	movlw	0
 12179  0111E8  5ADD               	subwfb	postdec2,f,c
 12180                           
 12181                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 12182                           ;stkvar	_i @ sp[(-56)+36]
 12183  0111EA  0EEC               	movlw	-20
 12184  0111EC  006F FF8C  F03C    	movff	plusw1,btemp+10
 12185  0111F2  0EED               	movlw	-19
 12186  0111F4  006F FF8C  F03D    	movff	plusw1,btemp+11
 12187  0111FA  0E40               	movlw	low _dbuf
 12188  0111FC  243C               	addwf	(btemp+10)^0,w,c
 12189  0111FE  6E3A               	movwf	(btemp+8)^0,c
 12190  011200  0E02               	movlw	high _dbuf
 12191  011202  203D               	addwfc	(btemp+11)^0,w,c
 12192  011204  6E3B               	movwf	(btemp+9)^0,c
 12193  011206  0060  F0EB  FFE6   	movff	btemp+8,postinc1
 12194  01120C  0060  F0EF  FFE6   	movff	btemp+9,postinc1
 12195                           
 12196                           ;stkvar	_n @ sp[(-58)+32]
 12197  011212  0E40               	movlw	low _dbuf
 12198  011214  6E3C               	movwf	(btemp+10)^0,c
 12199  011216  0E02               	movlw	high _dbuf
 12200  011218  6E3D               	movwf	(btemp+11)^0,c
 12201  01121A  0EE6               	movlw	-26
 12202  01121C  50E3               	movf	plusw1,w,c
 12203  01121E  263C               	addwf	(btemp+10)^0,f,c
 12204  011220  0EE7               	movlw	-25
 12205  011222  50E3               	movf	plusw1,w,c
 12206  011224  223D               	addwfc	(btemp+11)^0,f,c
 12207  011226  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 12208  01122C  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 12209  011232  EC04  F0B6         	call	_strcpy	;wreg free
 12210  011236  EF16  F081         	goto	l10301
 12211  01123A                     l1864:
 12212                           
 12213                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 12214  01123A  0EC1               	movlw	193
 12215  01123C  26E1               	addwf	fsr1l,f,c
 12216  01123E  0EFF               	movlw	255
 12217  011240  22E2               	addwfc	fsr1h,f,c
 12218  011242  0012               	return		;funcret
 12219  011244                     __end_of_efgtoa:
 12220                           	opt callstack 0
 12221                           
 12222 ;; *************** function _tolower *****************
 12223 ;; Defined at:
 12224 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 12225 ;; Parameters:    Size  Location     Type
 12226 ;;  c               2  [STACK] int 
 12227 ;; Auto vars:     Size  Location     Type
 12228 ;;		None
 12229 ;; Return value:  Size  Location     Type
 12230 ;;                  2  [STACK] int 
 12231 ;; Registers used:
 12232 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 12233 ;; Tracked objects:
 12234 ;;		On entry : 0/5
 12235 ;;		On exit  : 0/0
 12236 ;;		Unchanged: 0/0
 12237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12242 ;;Total ram usage:        0 bytes
 12243 ;; Hardware stack levels used:    1
 12244 ;; Hardware stack levels required when called:    7
 12245 ;; This function calls:
 12246 ;;		_isupper
 12247 ;; This function is called by:
 12248 ;;		_efgtoa
 12249 ;;		_vfpfcnvrt
 12250 ;; This function uses a reentrant model
 12251 ;;
 12252                           
 12253                           	psect	text46
 12254  0173BE                     __ptext46:
 12255                           	opt callstack 0
 12256  0173BE                     _tolower:
 12257                           	opt callstack 0
 12258                           
 12259                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12260  0173BE  52E6               	movf	postinc1,f,c
 12261  0173C0  52E6               	movf	postinc1,f,c
 12262                           
 12263                           ;stkvar	_c @ sp[(-2)+-2]
 12264                           
 12265                           ;incstack = 0
 12266  0173C2  0EFC               	movlw	-4
 12267  0173C4  50E3               	movf	plusw1,w,c
 12268  0173C6  0FBF               	addlw	191
 12269  0173C8  6E3C               	movwf	(btemp+10)^0,c
 12270  0173CA  0EFD               	movlw	-3
 12271  0173CC  006F FF8C  F03D    	movff	plusw1,btemp+11
 12272  0173D2  0EFF               	movlw	255
 12273  0173D4  223D               	addwfc	(btemp+11)^0,f,c
 12274  0173D6  503D               	movf	(btemp+11)^0,w,c
 12275  0173D8  E106               	bnz	u9430
 12276  0173DA  0E1A               	movlw	26
 12277  0173DC  5C3C               	subwf	(btemp+10)^0,w,c
 12278  0173DE  B0D8               	btfsc	status,0,c
 12279  0173E0  D002               	goto	u9430
 12280  0173E2  0E01               	movlw	1
 12281  0173E4  D001               	goto	u9440
 12282  0173E6                     u9430:
 12283  0173E6  0E00               	movlw	0
 12284  0173E8                     u9440:
 12285  0173E8  6E3C               	movwf	(btemp+10)^0,c
 12286  0173EA  6A3D               	clrf	(btemp+11)^0,c
 12287                           
 12288                           ;stkvar	_tolower$5055 @ sp[(-2)+0]
 12289  0173EC  0EFE               	movlw	-2
 12290  0173EE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12291  0173F4  0EFF               	movlw	-1
 12292  0173F6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12293                           
 12294                           ;stkvar	_tolower$5055 @ sp[(-2)+0]
 12295  0173FC  0EFE               	movlw	-2
 12296  0173FE  006F FF8C  F032    	movff	plusw1,btemp
 12297  017404  0EFF               	movlw	-1
 12298  017406  50E3               	movf	plusw1,w,c
 12299  017408  1032               	iorwf	btemp^0,w,c
 12300  01740A  B4D8               	btfsc	status,2,c
 12301  01740C  D00D               	goto	l9527
 12302                           
 12303                           ;stkvar	_c @ sp[(-2)+-2]
 12304  01740E  0EFC               	movlw	-4
 12305  017410  006F FF8C  F032    	movff	plusw1,btemp
 12306  017416  0EFD               	movlw	-3
 12307  017418  006F FF8C  F033    	movff	plusw1,btemp+1
 12308  01741E  0E20               	movlw	32
 12309  017420  1232               	iorwf	btemp^0,f,c
 12310  017422  0E00               	movlw	0
 12311  017424  1233               	iorwf	(btemp+1)^0,f,c
 12312  017426  D008               	goto	l2887
 12313  017428                     l9527:
 12314                           
 12315                           ;stkvar	_c @ sp[(-2)+-2]
 12316  017428  0EFC               	movlw	-4
 12317  01742A  006F FF8C  F032    	movff	plusw1,btemp
 12318  017430  0EFD               	movlw	-3
 12319  017432  006F FF8C  F033    	movff	plusw1,btemp+1
 12320  017438                     l2887:
 12321                           
 12322                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 12323  017438  52E5               	movf	postdec1,f,c
 12324  01743A  52E5               	movf	postdec1,f,c
 12325  01743C  52E5               	movf	postdec1,f,c
 12326  01743E  52E5               	movf	postdec1,f,c
 12327  017440  0012               	return		;funcret
 12328  017442                     __end_of_tolower:
 12329                           	opt callstack 0
 12330                           
 12331 ;; *************** function _isupper *****************
 12332 ;; Defined at:
 12333 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 12334 ;; Parameters:    Size  Location     Type
 12335 ;;  c               2  [STACK] int 
 12336 ;; Auto vars:     Size  Location     Type
 12337 ;;		None
 12338 ;; Return value:  Size  Location     Type
 12339 ;;                  2  [STACK] int 
 12340 ;; Registers used:
 12341 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 12342 ;; Tracked objects:
 12343 ;;		On entry : 0/0
 12344 ;;		On exit  : 0/0
 12345 ;;		Unchanged: 0/0
 12346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12350 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12351 ;;Total ram usage:        0 bytes
 12352 ;; Hardware stack levels used:    1
 12353 ;; Hardware stack levels required when called:    6
 12354 ;; This function calls:
 12355 ;;		Nothing
 12356 ;; This function is called by:
 12357 ;;		_efgtoa
 12358 ;;		_xtoa
 12359 ;;		_vfpfcnvrt
 12360 ;;		_tolower
 12361 ;; This function uses a reentrant model
 12362 ;;
 12363                           
 12364                           	psect	text47
 12365  017E9E                     __ptext47:
 12366                           	opt callstack 0
 12367  017E9E                     _isupper:
 12368                           	opt callstack 17
 12369                           
 12370                           ;stkvar	_c @ sp[(0)+-2]
 12371                           
 12372                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12373                           ;incstack = 0
 12374  017E9E  0EFE               	movlw	-2
 12375  017EA0  50E3               	movf	plusw1,w,c
 12376  017EA2  0FBF               	addlw	191
 12377  017EA4  6E3C               	movwf	(btemp+10)^0,c
 12378  017EA6  0EFF               	movlw	-1
 12379  017EA8  006F FF8C  F03D    	movff	plusw1,btemp+11
 12380  017EAE  0EFF               	movlw	255
 12381  017EB0  223D               	addwfc	(btemp+11)^0,f,c
 12382  017EB2  503D               	movf	(btemp+11)^0,w,c
 12383  017EB4  E106               	bnz	u8830
 12384  017EB6  0E1A               	movlw	26
 12385  017EB8  5C3C               	subwf	(btemp+10)^0,w,c
 12386  017EBA  B0D8               	btfsc	status,0,c
 12387  017EBC  D002               	goto	u8830
 12388  017EBE  0E01               	movlw	1
 12389  017EC0  D001               	goto	u8840
 12390  017EC2                     u8830:
 12391  017EC2  0E00               	movlw	0
 12392  017EC4                     u8840:
 12393  017EC4  6E32               	movwf	btemp^0,c
 12394  017EC6  6A33               	clrf	(btemp+1)^0,c
 12395                           
 12396                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 12397  017EC8  52E5               	movf	postdec1,f,c
 12398  017ECA  52E5               	movf	postdec1,f,c
 12399  017ECC  0012               	return		;funcret
 12400  017ECE                     __end_of_isupper:
 12401                           	opt callstack 0
 12402                           
 12403 ;; *************** function _strcpy *****************
 12404 ;; Defined at:
 12405 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 12406 ;; Parameters:    Size  Location     Type
 12407 ;;  dest            2  [STACK] PTR unsigned char 
 12408 ;;		 -> dbuf(80), 
 12409 ;;  src             2  [STACK] PTR const unsigned char 
 12410 ;;		 -> STR_39(4), STR_38(4), STR_35(4), STR_34(4), 
 12411 ;;		 -> dbuf(80), 
 12412 ;; Auto vars:     Size  Location     Type
 12413 ;;  d               2  [STACK] PTR unsigned char 
 12414 ;;		 -> dbuf(80), 
 12415 ;;  s               2  [STACK] PTR const unsigned char 
 12416 ;;		 -> STR_39(4), STR_38(4), STR_35(4), STR_34(4), 
 12417 ;;		 -> dbuf(80), 
 12418 ;; Return value:  Size  Location     Type
 12419 ;;                  2  [STACK] PTR unsigned char 
 12420 ;; Registers used:
 12421 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 12422 ;; Tracked objects:
 12423 ;;		On entry : 0/5
 12424 ;;		On exit  : 0/0
 12425 ;;		Unchanged: 0/0
 12426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12430 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12431 ;;Total ram usage:        0 bytes
 12432 ;; Hardware stack levels used:    1
 12433 ;; Hardware stack levels required when called:    6
 12434 ;; This function calls:
 12435 ;;		Nothing
 12436 ;; This function is called by:
 12437 ;;		_efgtoa
 12438 ;; This function uses a reentrant model
 12439 ;;
 12440                           
 12441                           	psect	text48
 12442  016C08                     __ptext48:
 12443                           	opt callstack 0
 12444  016C08                     _strcpy:
 12445                           	opt callstack 0
 12446                           
 12447                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12448  016C08  52E6               	movf	postinc1,f,c
 12449  016C0A  52E6               	movf	postinc1,f,c
 12450  016C0C  52E6               	movf	postinc1,f,c
 12451  016C0E  52E6               	movf	postinc1,f,c
 12452                           
 12453                           ;stkvar	_src @ sp[(-4)+-4]
 12454                           
 12455                           ;incstack = 0
 12456  016C10  0EF8               	movlw	-8
 12457  016C12  006F FF8C  F03C    	movff	plusw1,btemp+10
 12458  016C18  0EF9               	movlw	-7
 12459  016C1A  006F FF8C  F03D    	movff	plusw1,btemp+11
 12460                           
 12461                           ;stkvar	_s @ sp[(-4)+2]
 12462  016C20  0EFF               	movlw	-1
 12463  016C22  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12464  016C28  0EFE               	movlw	-2
 12465  016C2A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12466                           
 12467                           ;stkvar	_dest @ sp[(-4)+-2]
 12468  016C30  0EFA               	movlw	-6
 12469  016C32  006F FF8C  F03C    	movff	plusw1,btemp+10
 12470  016C38  0EFB               	movlw	-5
 12471  016C3A  006F FF8C  F03D    	movff	plusw1,btemp+11
 12472                           
 12473                           ;stkvar	_d @ sp[(-4)+0]
 12474  016C40  0EFD               	movlw	-3
 12475  016C42  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12476  016C48  0EFC               	movlw	-4
 12477  016C4A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12478  016C50                     l9515:
 12479                           
 12480                           ;stkvar	_s @ sp[(-4)+2]
 12481  016C50  50E1               	movf	fsr1l,w,c
 12482  016C52  0FFE               	addlw	-2
 12483  016C54  6ED9               	movwf	fsr2l,c
 12484  016C56  50E2               	movf	fsr1h,w,c
 12485  016C58  6EDA               	movwf	fsr2h,c
 12486  016C5A  0EFF               	movlw	255
 12487  016C5C  22DA               	addwfc	fsr2h,f,c
 12488  016C5E  006F FF7C  F03C    	movff	indf2,btemp+10
 12489  016C64  0E01               	movlw	1
 12490  016C66  26DE               	addwf	postinc2,f,c
 12491  016C68  006F FF7C  F03D    	movff	indf2,btemp+11
 12492  016C6E  0E00               	movlw	0
 12493  016C70  22DD               	addwfc	postdec2,f,c
 12494  016C72  0060  F0F3  FFF6   	movff	btemp+10,tblptrl
 12495  016C78  0060  F0F7  FFF7   	movff	btemp+11,tblptrh
 12496  016C7E  0E00               	movlw	low (__mediumconst shr (0+16))
 12497  016C80  6EF8               	movwf	tblptru,c
 12498                           
 12499                           ;stkvar	_d @ sp[(-4)+0]
 12500  016C82  50E1               	movf	fsr1l,w,c
 12501  016C84  0FFC               	addlw	-4
 12502  016C86  6ED9               	movwf	fsr2l,c
 12503  016C88  50E2               	movf	fsr1h,w,c
 12504  016C8A  6EDA               	movwf	fsr2h,c
 12505  016C8C  0EFF               	movlw	255
 12506  016C8E  22DA               	addwfc	fsr2h,f,c
 12507  016C90  006F FF7C  F03C    	movff	indf2,btemp+10
 12508  016C96  0E01               	movlw	1
 12509  016C98  26DE               	addwf	postinc2,f,c
 12510  016C9A  006F FF7C  F03D    	movff	indf2,btemp+11
 12511  016CA0  0E00               	movlw	0
 12512  016CA2  22DD               	addwfc	postdec2,f,c
 12513  016CA4  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
 12514  016CAA  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
 12515  016CB0  0E1F               	movlw	(high __ramtop+-1)
 12516  016CB2  64F7               	cpfsgt	tblptrh,c
 12517  016CB4  D003               	bra	u9417
 12518  016CB6  0008               	tblrd		*
 12519  016CB8  50F5               	movf	tablat,w,c
 12520  016CBA  D007               	bra	u9410
 12521  016CBC                     u9417:
 12522  016CBC  006F FFDB FFE9     	movff	tblptrl,fsr0l
 12523  016CC2  006F FFDF FFEA     	movff	tblptrh,fsr0h
 12524  016CC8  50EF               	movf	indf0,w,c
 12525  016CCA                     u9410:
 12526  016CCA  6EDF               	movwf	indf2,c
 12527  016CCC  50DF               	movf	indf2,w,c
 12528  016CCE  A4D8               	btfss	status,2,c
 12529  016CD0  D7BF               	goto	l9515
 12530                           
 12531                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 12532  016CD2  0EF8               	movlw	248
 12533  016CD4  26E1               	addwf	fsr1l,f,c
 12534  016CD6  0EFF               	movlw	255
 12535  016CD8  22E2               	addwfc	fsr1h,f,c
 12536  016CDA  0012               	return		;funcret
 12537  016CDC                     __end_of_strcpy:
 12538                           	opt callstack 0
 12539                           
 12540 ;; *************** function _floorf *****************
 12541 ;; Defined at:
 12542 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 12543 ;; Parameters:    Size  Location     Type
 12544 ;;  x               4  [STACK] float 
 12545 ;; Auto vars:     Size  Location     Type
 12546 ;;  u               4  [STACK] struct .
 12547 ;;  m               4  [STACK] unsigned long 
 12548 ;;  e               2  [STACK] int 
 12549 ;; Return value:  Size  Location     Type
 12550 ;;                  4  [STACK] float 
 12551 ;; Registers used:
 12552 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 12553 ;; Tracked objects:
 12554 ;;		On entry : 0/5
 12555 ;;		On exit  : 0/0
 12556 ;;		Unchanged: 0/0
 12557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12562 ;;Total ram usage:        0 bytes
 12563 ;; Hardware stack levels used:    1
 12564 ;; Hardware stack levels required when called:    6
 12565 ;; This function calls:
 12566 ;;		Nothing
 12567 ;; This function is called by:
 12568 ;;		_efgtoa
 12569 ;; This function uses a reentrant model
 12570 ;;
 12571                           
 12572                           	psect	text49
 12573  0144AC                     __ptext49:
 12574                           	opt callstack 0
 12575  0144AC                     _floorf:
 12576                           	opt callstack 0
 12577                           
 12578                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 12579  0144AC  0E0A               	movlw	10
 12580  0144AE  26E1               	addwf	fsr1l,f,c
 12581  0144B0  0E00               	movlw	0
 12582  0144B2  22E2               	addwfc	fsr1h,f,c
 12583                           
 12584                           ;incstack = 0
 12585  0144B4  0060  F2B4  F03A   	movff	floorf@F524,btemp+8
 12586  0144BA  0060  F2B8  F03B   	movff	floorf@F524+1,btemp+9
 12587  0144C0  0060  F2BC  F03C   	movff	floorf@F524+2,btemp+10
 12588  0144C6  0060  F2C0  F03D   	movff	floorf@F524+3,btemp+11
 12589                           
 12590                           ;stkvar	_u @ sp[(-10)+0]
 12591  0144CC  0EF6               	movlw	-10
 12592  0144CE  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 12593  0144D4  0EF7               	movlw	-9
 12594  0144D6  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 12595  0144DC  0EF8               	movlw	-8
 12596  0144DE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12597  0144E4  0EF9               	movlw	-7
 12598  0144E6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12599                           
 12600                           ;stkvar	_x @ sp[(-10)+-4]
 12601  0144EC  0EF2               	movlw	-14
 12602  0144EE  006F FF8C  F03A    	movff	plusw1,btemp+8
 12603  0144F4  0EF3               	movlw	-13
 12604  0144F6  006F FF8C  F03B    	movff	plusw1,btemp+9
 12605  0144FC  0EF4               	movlw	-12
 12606  0144FE  006F FF8C  F03C    	movff	plusw1,btemp+10
 12607  014504  0EF5               	movlw	-11
 12608  014506  006F FF8C  F03D    	movff	plusw1,btemp+11
 12609                           
 12610                           ;stkvar	_u @ sp[(-10)+0]
 12611  01450C  0EF6               	movlw	-10
 12612  01450E  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 12613  014514  0EF7               	movlw	-9
 12614  014516  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 12615  01451C  0EF8               	movlw	-8
 12616  01451E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12617  014524  0EF9               	movlw	-7
 12618  014526  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12619  01452C  0E81               	movlw	129
 12620  01452E  6E3C               	movwf	(btemp+10)^0,c
 12621  014530  0EFF               	movlw	255
 12622  014532  6E3D               	movwf	(btemp+11)^0,c
 12623                           
 12624                           ;stkvar	_u @ sp[(-10)+0]
 12625  014534  0EF6               	movlw	-10
 12626  014536  006F FF8C  F036    	movff	plusw1,btemp+4
 12627  01453C  0EF7               	movlw	-9
 12628  01453E  006F FF8C  F037    	movff	plusw1,btemp+5
 12629  014544  0EF8               	movlw	-8
 12630  014546  006F FF8C  F038    	movff	plusw1,btemp+6
 12631  01454C  0EF9               	movlw	-7
 12632  01454E  006F FF8C  F039    	movff	plusw1,btemp+7
 12633  014554  0E18               	movlw	24
 12634  014556  D005               	goto	u9460
 12635  014558                     u9465:
 12636  014558  90D8               	bcf	status,0,c
 12637  01455A  3239               	rrcf	(btemp+7)^0,f,c
 12638  01455C  3238               	rrcf	(btemp+6)^0,f,c
 12639  01455E  3237               	rrcf	(btemp+5)^0,f,c
 12640  014560  3236               	rrcf	(btemp+4)^0,f,c
 12641  014562                     u9460:
 12642  014562  2EE8               	decfsz	wreg,f,c
 12643  014564  D7F9               	goto	u9465
 12644  014566  0060  F0D8  F03A   	movff	btemp+4,btemp+8
 12645  01456C  0060  F0DC  F03B   	movff	btemp+5,btemp+9
 12646  014572  0EFF               	movlw	255
 12647  014574  163A               	andwf	(btemp+8)^0,f,c
 12648  014576  0E00               	movlw	0
 12649  014578  163B               	andwf	(btemp+9)^0,f,c
 12650  01457A  503C               	movf	(btemp+10)^0,w,c
 12651  01457C  263A               	addwf	(btemp+8)^0,f,c
 12652  01457E  503D               	movf	(btemp+11)^0,w,c
 12653  014580  223B               	addwfc	(btemp+9)^0,f,c
 12654                           
 12655                           ;stkvar	_e @ sp[(-10)+8]
 12656  014582  0EFE               	movlw	-2
 12657  014584  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 12658  01458A  0EFF               	movlw	-1
 12659  01458C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 12660                           
 12661                           ;stkvar	_e @ sp[(-10)+8]
 12662  014592  0EFF               	movlw	-1
 12663  014594  BEE3               	btfsc	plusw1,7,c
 12664  014596  D019               	goto	l9541
 12665  014598  0EFF               	movlw	-1
 12666  01459A  50E3               	movf	plusw1,w,c
 12667  01459C  E108               	bnz	u9470
 12668  01459E  0EFE               	movlw	-2
 12669  0145A0  006F FF8C  F032    	movff	plusw1,btemp
 12670  0145A6  0E17               	movlw	23
 12671  0145A8  5E32               	subwf	btemp^0,f,c
 12672  0145AA  A0D8               	btfss	status,0,c
 12673  0145AC  D00E               	goto	l9541
 12674  0145AE                     u9470:
 12675                           
 12676                           ;stkvar	_x @ sp[(-10)+-4]
 12677  0145AE  0EF2               	movlw	-14
 12678  0145B0  006F FF8C  F032    	movff	plusw1,btemp
 12679  0145B6  0EF3               	movlw	-13
 12680  0145B8  006F FF8C  F033    	movff	plusw1,btemp+1
 12681  0145BE  0EF4               	movlw	-12
 12682  0145C0  006F FF8C  F034    	movff	plusw1,btemp+2
 12683  0145C6  0EF5               	movlw	-11
 12684  0145C8  D11F               	goto	L12
 12685  0145CA                     l9541:
 12686                           
 12687                           ;stkvar	_e @ sp[(-10)+8]
 12688  0145CA  0EFF               	movlw	-1
 12689  0145CC  BEE3               	btfsc	plusw1,7,c
 12690  0145CE  D0B4               	goto	l9557
 12691                           
 12692                           ;stkvar	_e @ sp[(-10)+8]
 12693  0145D0  0EFE               	movlw	-2
 12694  0145D2  006F FF8C  F03D    	movff	plusw1,btemp+11
 12695  0145D8  0EFF               	movlw	255
 12696  0145DA  6E36               	movwf	(btemp+4)^0,c
 12697  0145DC  0EFF               	movlw	255
 12698  0145DE  6E37               	movwf	(btemp+5)^0,c
 12699  0145E0  0E7F               	movlw	127
 12700  0145E2  6E38               	movwf	(btemp+6)^0,c
 12701  0145E4  0E00               	movlw	0
 12702  0145E6  6E39               	movwf	(btemp+7)^0,c
 12703  0145E8                     u9495:
 12704  0145E8  663D               	tstfsz	(btemp+11)^0,c
 12705  0145EA  D001               	goto	u9496
 12706  0145EC  D007               	goto	u9497
 12707  0145EE                     u9496:
 12708  0145EE  3439               	rlcf	(btemp+7)^0,w,c
 12709  0145F0  3239               	rrcf	(btemp+7)^0,f,c
 12710  0145F2  3238               	rrcf	(btemp+6)^0,f,c
 12711  0145F4  3237               	rrcf	(btemp+5)^0,f,c
 12712  0145F6  3236               	rrcf	(btemp+4)^0,f,c
 12713  0145F8  2E3D               	decfsz	(btemp+11)^0,f,c
 12714  0145FA  D7F6               	goto	u9495
 12715  0145FC                     u9497:
 12716                           
 12717                           ;stkvar	_m @ sp[(-10)+4]
 12718  0145FC  0EFA               	movlw	-6
 12719  0145FE  0060  F0DB  FFE3   	movff	btemp+4,plusw1
 12720  014604  0EFB               	movlw	-5
 12721  014606  0060  F0DF  FFE3   	movff	btemp+5,plusw1
 12722  01460C  0EFC               	movlw	-4
 12723  01460E  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 12724  014614  0EFD               	movlw	-3
 12725  014616  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 12726                           
 12727                           ;stkvar	_m @ sp[(-10)+4]
 12728                           ;stkvar	_u @ sp[(-10)+0]
 12729  01461C  0EF6               	movlw	-10
 12730  01461E  006F FF8C  F03A    	movff	plusw1,btemp+8
 12731  014624  0EF7               	movlw	-9
 12732  014626  006F FF8C  F03B    	movff	plusw1,btemp+9
 12733  01462C  0EF8               	movlw	-8
 12734  01462E  006F FF8C  F03C    	movff	plusw1,btemp+10
 12735  014634  0EF9               	movlw	-7
 12736  014636  006F FF8C  F03D    	movff	plusw1,btemp+11
 12737  01463C  0EFA               	movlw	-6
 12738  01463E  50E3               	movf	plusw1,w,c
 12739  014640  163A               	andwf	(btemp+8)^0,f,c
 12740  014642  0EFB               	movlw	-5
 12741  014644  50E3               	movf	plusw1,w,c
 12742  014646  163B               	andwf	(btemp+9)^0,f,c
 12743  014648  0EFC               	movlw	-4
 12744  01464A  50E3               	movf	plusw1,w,c
 12745  01464C  163C               	andwf	(btemp+10)^0,f,c
 12746  01464E  0EFD               	movlw	-3
 12747  014650  50E3               	movf	plusw1,w,c
 12748  014652  163D               	andwf	(btemp+11)^0,f,c
 12749  014654  503A               	movf	(btemp+8)^0,w,c
 12750  014656  103B               	iorwf	(btemp+9)^0,w,c
 12751  014658  103C               	iorwf	(btemp+10)^0,w,c
 12752  01465A  103D               	iorwf	(btemp+11)^0,w,c
 12753  01465C  B4D8               	btfsc	status,2,c
 12754  01465E  D7A7               	goto	u9470
 12755                           
 12756                           ;stkvar	_u @ sp[(-10)+0]
 12757  014660  0EF6               	movlw	-10
 12758  014662  006F FF8C  F03A    	movff	plusw1,btemp+8
 12759  014668  0EF7               	movlw	-9
 12760  01466A  006F FF8C  F03B    	movff	plusw1,btemp+9
 12761  014670  0EF8               	movlw	-8
 12762  014672  006F FF8C  F03C    	movff	plusw1,btemp+10
 12763  014678  0EF9               	movlw	-7
 12764  01467A  006F FF8C  F03D    	movff	plusw1,btemp+11
 12765  014680  0E20               	movlw	32
 12766  014682  D005               	goto	u9510
 12767  014684                     u9515:
 12768  014684  90D8               	bcf	status,0,c
 12769  014686  323D               	rrcf	(btemp+11)^0,f,c
 12770  014688  323C               	rrcf	(btemp+10)^0,f,c
 12771  01468A  323B               	rrcf	(btemp+9)^0,f,c
 12772  01468C  323A               	rrcf	(btemp+8)^0,f,c
 12773  01468E                     u9510:
 12774  01468E  2EE8               	decfsz	wreg,f,c
 12775  014690  D7F9               	goto	u9515
 12776  014692  503A               	movf	(btemp+8)^0,w,c
 12777  014694  B4D8               	btfsc	status,2,c
 12778  014696  D028               	goto	l9555
 12779                           
 12780                           ;stkvar	_m @ sp[(-10)+4]
 12781                           ;stkvar	_u @ sp[(-10)+0]
 12782  014698  0EF6               	movlw	-10
 12783  01469A  50E3               	movf	plusw1,w,c
 12784  01469C  6E32               	movwf	btemp^0,c
 12785  01469E  0EFA               	movlw	-6
 12786  0146A0  50E3               	movf	plusw1,w,c
 12787  0146A2  2632               	addwf	btemp^0,f,c
 12788  0146A4  0EF6               	movlw	-10
 12789  0146A6  0060  F0CB  FFE3   	movff	btemp,plusw1
 12790  0146AC  0EF7               	movlw	-9
 12791  0146AE  50E3               	movf	plusw1,w,c
 12792  0146B0  6E32               	movwf	btemp^0,c
 12793  0146B2  0EFB               	movlw	-5
 12794  0146B4  50E3               	movf	plusw1,w,c
 12795  0146B6  2232               	addwfc	btemp^0,f,c
 12796  0146B8  0EF7               	movlw	-9
 12797  0146BA  0060  F0CB  FFE3   	movff	btemp,plusw1
 12798  0146C0  0EF8               	movlw	-8
 12799  0146C2  50E3               	movf	plusw1,w,c
 12800  0146C4  6E32               	movwf	btemp^0,c
 12801  0146C6  0EFC               	movlw	-4
 12802  0146C8  50E3               	movf	plusw1,w,c
 12803  0146CA  2232               	addwfc	btemp^0,f,c
 12804  0146CC  0EF8               	movlw	-8
 12805  0146CE  0060  F0CB  FFE3   	movff	btemp,plusw1
 12806  0146D4  0EF9               	movlw	-7
 12807  0146D6  50E3               	movf	plusw1,w,c
 12808  0146D8  6E32               	movwf	btemp^0,c
 12809  0146DA  0EFD               	movlw	-3
 12810  0146DC  50E3               	movf	plusw1,w,c
 12811  0146DE  2232               	addwfc	btemp^0,f,c
 12812  0146E0  0EF9               	movlw	-7
 12813  0146E2  0060  F0CB  FFE3   	movff	btemp,plusw1
 12814  0146E8                     l9555:
 12815                           
 12816                           ;stkvar	_m @ sp[(-10)+4]
 12817  0146E8  0EFA               	movlw	-6
 12818  0146EA  006F FF8C  F03A    	movff	plusw1,btemp+8
 12819  0146F0  0EFB               	movlw	-5
 12820  0146F2  006F FF8C  F03B    	movff	plusw1,btemp+9
 12821  0146F8  0EFC               	movlw	-4
 12822  0146FA  006F FF8C  F03C    	movff	plusw1,btemp+10
 12823  014700  0EFD               	movlw	-3
 12824  014702  006F FF8C  F03D    	movff	plusw1,btemp+11
 12825  014708  1C3A               	comf	(btemp+8)^0,w,c
 12826  01470A  6E36               	movwf	(btemp+4)^0,c
 12827  01470C  1C3B               	comf	(btemp+9)^0,w,c
 12828  01470E  6E37               	movwf	(btemp+5)^0,c
 12829  014710  1C3C               	comf	(btemp+10)^0,w,c
 12830  014712  6E38               	movwf	(btemp+6)^0,c
 12831  014714  1C3D               	comf	(btemp+11)^0,w,c
 12832  014716  6E39               	movwf	(btemp+7)^0,c
 12833                           
 12834                           ;stkvar	_u @ sp[(-10)+0]
 12835  014718  50E1               	movf	fsr1l,w,c
 12836  01471A  0FF6               	addlw	-10
 12837  01471C  6ED9               	movwf	fsr2l,c
 12838  01471E  50E2               	movf	fsr1h,w,c
 12839  014720  6EDA               	movwf	fsr2h,c
 12840  014722  0EFF               	movlw	255
 12841  014724  22DA               	addwfc	fsr2h,f,c
 12842  014726  5036               	movf	(btemp+4)^0,w,c
 12843  014728  16DE               	andwf	postinc2,f,c
 12844  01472A  5037               	movf	(btemp+5)^0,w,c
 12845  01472C  16DE               	andwf	postinc2,f,c
 12846  01472E  5038               	movf	(btemp+6)^0,w,c
 12847  014730  16DE               	andwf	postinc2,f,c
 12848  014732  5039               	movf	(btemp+7)^0,w,c
 12849  014734  16DE               	andwf	postinc2,f,c
 12850  014736  D05B               	goto	l9565
 12851  014738                     l9557:
 12852                           
 12853                           ;stkvar	_u @ sp[(-10)+0]
 12854  014738  0EF6               	movlw	-10
 12855  01473A  006F FF8C  F03A    	movff	plusw1,btemp+8
 12856  014740  0EF7               	movlw	-9
 12857  014742  006F FF8C  F03B    	movff	plusw1,btemp+9
 12858  014748  0EF8               	movlw	-8
 12859  01474A  006F FF8C  F03C    	movff	plusw1,btemp+10
 12860  014750  0EF9               	movlw	-7
 12861  014752  006F FF8C  F03D    	movff	plusw1,btemp+11
 12862  014758  0E20               	movlw	32
 12863  01475A  D005               	goto	u9530
 12864  01475C                     u9535:
 12865  01475C  90D8               	bcf	status,0,c
 12866  01475E  323D               	rrcf	(btemp+11)^0,f,c
 12867  014760  323C               	rrcf	(btemp+10)^0,f,c
 12868  014762  323B               	rrcf	(btemp+9)^0,f,c
 12869  014764  323A               	rrcf	(btemp+8)^0,f,c
 12870  014766                     u9530:
 12871  014766  2EE8               	decfsz	wreg,f,c
 12872  014768  D7F9               	goto	u9535
 12873  01476A  663A               	tstfsz	(btemp+8)^0,c
 12874  01476C  D009               	goto	l9561
 12875                           
 12876                           ;stkvar	_u @ sp[(-10)+0]
 12877  01476E  0EF6               	movlw	-10
 12878  014770  6AE3               	clrf	plusw1,c
 12879  014772  0EF7               	movlw	-9
 12880  014774  6AE3               	clrf	plusw1,c
 12881  014776  0EF8               	movlw	-8
 12882  014778  6AE3               	clrf	plusw1,c
 12883  01477A  0EF9               	movlw	-7
 12884  01477C  6AE3               	clrf	plusw1,c
 12885  01477E  D037               	goto	l9565
 12886  014780                     l9561:
 12887                           
 12888                           ;stkvar	_u @ sp[(-10)+0]
 12889  014780  0EF6               	movlw	-10
 12890  014782  006F FF8C  F03A    	movff	plusw1,btemp+8
 12891  014788  0EF7               	movlw	-9
 12892  01478A  006F FF8C  F03B    	movff	plusw1,btemp+9
 12893  014790  0EF8               	movlw	-8
 12894  014792  006F FF8C  F03C    	movff	plusw1,btemp+10
 12895  014798  0EF9               	movlw	-7
 12896  01479A  006F FF8C  F03D    	movff	plusw1,btemp+11
 12897  0147A0  90D8               	bcf	status,0,c
 12898  0147A2  343A               	rlcf	(btemp+8)^0,w,c
 12899  0147A4  6E36               	movwf	(btemp+4)^0,c
 12900  0147A6  343B               	rlcf	(btemp+9)^0,w,c
 12901  0147A8  6E37               	movwf	(btemp+5)^0,c
 12902  0147AA  343C               	rlcf	(btemp+10)^0,w,c
 12903  0147AC  6E38               	movwf	(btemp+6)^0,c
 12904  0147AE  343D               	rlcf	(btemp+11)^0,w,c
 12905  0147B0  6E39               	movwf	(btemp+7)^0,c
 12906  0147B2  5036               	movf	(btemp+4)^0,w,c
 12907  0147B4  1037               	iorwf	(btemp+5)^0,w,c
 12908  0147B6  1038               	iorwf	(btemp+6)^0,w,c
 12909  0147B8  1039               	iorwf	(btemp+7)^0,w,c
 12910  0147BA  B4D8               	btfsc	status,2,c
 12911  0147BC  D018               	goto	l9565
 12912  0147BE  0E00               	movlw	0
 12913  0147C0  6E3A               	movwf	(btemp+8)^0,c
 12914  0147C2  0E00               	movlw	0
 12915  0147C4  6E3B               	movwf	(btemp+9)^0,c
 12916  0147C6  0E80               	movlw	128
 12917  0147C8  6E3C               	movwf	(btemp+10)^0,c
 12918  0147CA  0EBF               	movlw	191
 12919  0147CC  6E3D               	movwf	(btemp+11)^0,c
 12920                           
 12921                           ;stkvar	_u @ sp[(-10)+0]
 12922  0147CE  0EF6               	movlw	-10
 12923  0147D0  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 12924  0147D6  0EF7               	movlw	-9
 12925  0147D8  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 12926  0147DE  0EF8               	movlw	-8
 12927  0147E0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12928  0147E6  0EF9               	movlw	-7
 12929  0147E8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12930  0147EE                     l9565:
 12931                           
 12932                           ;stkvar	_u @ sp[(-10)+0]
 12933  0147EE  0EF6               	movlw	-10
 12934  0147F0  006F FF8C  F032    	movff	plusw1,btemp
 12935  0147F6  0EF7               	movlw	-9
 12936  0147F8  006F FF8C  F033    	movff	plusw1,btemp+1
 12937  0147FE  0EF8               	movlw	-8
 12938  014800  006F FF8C  F034    	movff	plusw1,btemp+2
 12939  014806  0EF9               	movlw	-7
 12940  014808                     L12:
 12941  014808  006F FF8C  F035    	movff	plusw1,btemp+3
 12942                           
 12943                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 12944  01480E  0EF2               	movlw	242
 12945  014810  26E1               	addwf	fsr1l,f,c
 12946  014812  0EFF               	movlw	255
 12947  014814  22E2               	addwfc	fsr1h,f,c
 12948  014816  0012               	return		;funcret
 12949  014818                     __end_of_floorf:
 12950                           	opt callstack 0
 12951                           
 12952 ;; *************** function ___fpclassifyf *****************
 12953 ;; Defined at:
 12954 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 12955 ;; Parameters:    Size  Location     Type
 12956 ;;  x               4  [STACK] float 
 12957 ;; Auto vars:     Size  Location     Type
 12958 ;;  u               4  [STACK] struct .
 12959 ;;  e               2  [STACK] int 
 12960 ;; Return value:  Size  Location     Type
 12961 ;;                  2  [STACK] int 
 12962 ;; Registers used:
 12963 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 12964 ;; Tracked objects:
 12965 ;;		On entry : 0/5
 12966 ;;		On exit  : 0/0
 12967 ;;		Unchanged: 0/0
 12968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12972 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12973 ;;Total ram usage:        0 bytes
 12974 ;; Hardware stack levels used:    1
 12975 ;; Hardware stack levels required when called:    6
 12976 ;; This function calls:
 12977 ;;		Nothing
 12978 ;; This function is called by:
 12979 ;;		_efgtoa
 12980 ;; This function uses a reentrant model
 12981 ;;
 12982                           
 12983                           	psect	text50
 12984  015C94                     __ptext50:
 12985                           	opt callstack 0
 12986  015C94                     ___fpclassifyf:
 12987                           	opt callstack 0
 12988                           
 12989                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12990  015C94  0E06               	movlw	6
 12991  015C96  26E1               	addwf	fsr1l,f,c
 12992  015C98  0E00               	movlw	0
 12993  015C9A  22E2               	addwfc	fsr1h,f,c
 12994                           
 12995                           ;incstack = 0
 12996  015C9C  0060  F2C4  F03A   	movff	___fpclassifyf@F463,btemp+8
 12997  015CA2  0060  F2C8  F03B   	movff	___fpclassifyf@F463+1,btemp+9
 12998  015CA8  0060  F2CC  F03C   	movff	___fpclassifyf@F463+2,btemp+10
 12999  015CAE  0060  F2D0  F03D   	movff	___fpclassifyf@F463+3,btemp+11
 13000                           
 13001                           ;stkvar	_u @ sp[(-6)+0]
 13002  015CB4  0EFA               	movlw	-6
 13003  015CB6  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13004  015CBC  0EFB               	movlw	-5
 13005  015CBE  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13006  015CC4  0EFC               	movlw	-4
 13007  015CC6  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13008  015CCC  0EFD               	movlw	-3
 13009  015CCE  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13010                           
 13011                           ;stkvar	_x @ sp[(-6)+-4]
 13012  015CD4  0EF6               	movlw	-10
 13013  015CD6  006F FF8C  F03A    	movff	plusw1,btemp+8
 13014  015CDC  0EF7               	movlw	-9
 13015  015CDE  006F FF8C  F03B    	movff	plusw1,btemp+9
 13016  015CE4  0EF8               	movlw	-8
 13017  015CE6  006F FF8C  F03C    	movff	plusw1,btemp+10
 13018  015CEC  0EF9               	movlw	-7
 13019  015CEE  006F FF8C  F03D    	movff	plusw1,btemp+11
 13020                           
 13021                           ;stkvar	_u @ sp[(-6)+0]
 13022  015CF4  0EFA               	movlw	-6
 13023  015CF6  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13024  015CFC  0EFB               	movlw	-5
 13025  015CFE  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13026  015D04  0EFC               	movlw	-4
 13027  015D06  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13028  015D0C  0EFD               	movlw	-3
 13029  015D0E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13030                           
 13031                           ;stkvar	_u @ sp[(-6)+0]
 13032  015D14  0EFA               	movlw	-6
 13033  015D16  006F FF8C  F03A    	movff	plusw1,btemp+8
 13034  015D1C  0EFB               	movlw	-5
 13035  015D1E  006F FF8C  F03B    	movff	plusw1,btemp+9
 13036  015D24  0EFC               	movlw	-4
 13037  015D26  006F FF8C  F03C    	movff	plusw1,btemp+10
 13038  015D2C  0EFD               	movlw	-3
 13039  015D2E  006F FF8C  F03D    	movff	plusw1,btemp+11
 13040  015D34  0E18               	movlw	24
 13041  015D36  D005               	goto	u9340
 13042  015D38                     u9345:
 13043  015D38  90D8               	bcf	status,0,c
 13044  015D3A  323D               	rrcf	(btemp+11)^0,f,c
 13045  015D3C  323C               	rrcf	(btemp+10)^0,f,c
 13046  015D3E  323B               	rrcf	(btemp+9)^0,f,c
 13047  015D40  323A               	rrcf	(btemp+8)^0,f,c
 13048  015D42                     u9340:
 13049  015D42  2EE8               	decfsz	wreg,f,c
 13050  015D44  D7F9               	goto	u9345
 13051  015D46  0060  F0E8  F038   	movff	btemp+8,btemp+6
 13052  015D4C  0060  F0EC  F039   	movff	btemp+9,btemp+7
 13053  015D52  0EFF               	movlw	255
 13054  015D54  1638               	andwf	(btemp+6)^0,f,c
 13055  015D56  0E00               	movlw	0
 13056  015D58  1639               	andwf	(btemp+7)^0,f,c
 13057                           
 13058                           ;stkvar	_e @ sp[(-6)+4]
 13059  015D5A  0EFE               	movlw	-2
 13060  015D5C  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 13061  015D62  0EFF               	movlw	-1
 13062  015D64  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 13063                           
 13064                           ;stkvar	_e @ sp[(-6)+4]
 13065  015D6A  0EFE               	movlw	-2
 13066  015D6C  006F FF8C  F032    	movff	plusw1,btemp
 13067  015D72  0EFF               	movlw	-1
 13068  015D74  50E3               	movf	plusw1,w,c
 13069  015D76  1032               	iorwf	btemp^0,w,c
 13070  015D78  A4D8               	btfss	status,2,c
 13071  015D7A  D023               	goto	l9503
 13072                           
 13073                           ;stkvar	_u @ sp[(-6)+0]
 13074  015D7C  0EFA               	movlw	-6
 13075  015D7E  006F FF8C  F03A    	movff	plusw1,btemp+8
 13076  015D84  0EFB               	movlw	-5
 13077  015D86  006F FF8C  F03B    	movff	plusw1,btemp+9
 13078  015D8C  0EFC               	movlw	-4
 13079  015D8E  006F FF8C  F03C    	movff	plusw1,btemp+10
 13080  015D94  0EFD               	movlw	-3
 13081  015D96  006F FF8C  F03D    	movff	plusw1,btemp+11
 13082  015D9C  90D8               	bcf	status,0,c
 13083  015D9E  343A               	rlcf	(btemp+8)^0,w,c
 13084  015DA0  6E36               	movwf	(btemp+4)^0,c
 13085  015DA2  343B               	rlcf	(btemp+9)^0,w,c
 13086  015DA4  6E37               	movwf	(btemp+5)^0,c
 13087  015DA6  343C               	rlcf	(btemp+10)^0,w,c
 13088  015DA8  6E38               	movwf	(btemp+6)^0,c
 13089  015DAA  343D               	rlcf	(btemp+11)^0,w,c
 13090  015DAC  6E39               	movwf	(btemp+7)^0,c
 13091  015DAE  5036               	movf	(btemp+4)^0,w,c
 13092  015DB0  1037               	iorwf	(btemp+5)^0,w,c
 13093  015DB2  1038               	iorwf	(btemp+6)^0,w,c
 13094  015DB4  1039               	iorwf	(btemp+7)^0,w,c
 13095  015DB6  A4D8               	btfss	status,2,c
 13096  015DB8  D002               	goto	l9499
 13097  015DBA  0E02               	movlw	2
 13098  015DBC  D02E               	goto	L13
 13099  015DBE                     l9499:
 13100  015DBE  0E03               	movlw	3
 13101  015DC0  D02C               	goto	L13
 13102  015DC2                     l9503:
 13103                           
 13104                           ;stkvar	_e @ sp[(-6)+4]
 13105  015DC2  0EFE               	movlw	-2
 13106  015DC4  28E3               	incf	plusw1,w,c
 13107  015DC6  E128               	bnz	l9509
 13108  015DC8  0EFF               	movlw	-1
 13109  015DCA  50E3               	movf	plusw1,w,c
 13110  015DCC  A4D8               	btfss	status,2,c
 13111  015DCE  D024               	goto	l9509
 13112                           
 13113                           ;stkvar	_u @ sp[(-6)+0]
 13114  015DD0  0EFA               	movlw	-6
 13115  015DD2  006F FF8C  F03A    	movff	plusw1,btemp+8
 13116  015DD8  0EFB               	movlw	-5
 13117  015DDA  006F FF8C  F03B    	movff	plusw1,btemp+9
 13118  015DE0  0EFC               	movlw	-4
 13119  015DE2  006F FF8C  F03C    	movff	plusw1,btemp+10
 13120  015DE8  0EFD               	movlw	-3
 13121  015DEA  006F FF8C  F03D    	movff	plusw1,btemp+11
 13122  015DF0  0E09               	movlw	9
 13123  015DF2                     u9385:
 13124  015DF2  90D8               	bcf	status,0,c
 13125  015DF4  363A               	rlcf	(btemp+8)^0,f,c
 13126  015DF6  363B               	rlcf	(btemp+9)^0,f,c
 13127  015DF8  363C               	rlcf	(btemp+10)^0,f,c
 13128  015DFA  363D               	rlcf	(btemp+11)^0,f,c
 13129  015DFC  2EE8               	decfsz	wreg,f,c
 13130  015DFE  D7F9               	goto	u9385
 13131  015E00  503A               	movf	(btemp+8)^0,w,c
 13132  015E02  103B               	iorwf	(btemp+9)^0,w,c
 13133  015E04  103C               	iorwf	(btemp+10)^0,w,c
 13134  015E06  103D               	iorwf	(btemp+11)^0,w,c
 13135  015E08  A4D8               	btfss	status,2,c
 13136  015E0A  D002               	goto	u9390
 13137  015E0C  0E01               	movlw	1
 13138  015E0E  D001               	goto	u9400
 13139  015E10                     u9390:
 13140  015E10  0E00               	movlw	0
 13141  015E12                     u9400:
 13142  015E12  6E32               	movwf	btemp^0,c
 13143  015E14  6A33               	clrf	(btemp+1)^0,c
 13144  015E16  D004               	goto	l2723
 13145  015E18                     l9509:
 13146  015E18  0E04               	movlw	4
 13147  015E1A                     L13:
 13148  015E1A  6E32               	movwf	btemp^0,c
 13149  015E1C  0E00               	movlw	0
 13150  015E1E  6E33               	movwf	(btemp+1)^0,c
 13151  015E20                     l2723:
 13152                           
 13153                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 13154  015E20  0EF6               	movlw	246
 13155  015E22  26E1               	addwf	fsr1l,f,c
 13156  015E24  0EFF               	movlw	255
 13157  015E26  22E2               	addwfc	fsr1h,f,c
 13158  015E28  0012               	return		;funcret
 13159  015E2A                     __end_of___fpclassifyf:
 13160                           	opt callstack 0
 13161                           
 13162 ;; *************** function ___fltol *****************
 13163 ;; Defined at:
 13164 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 13165 ;; Parameters:    Size  Location     Type
 13166 ;;  f1              4  [STACK] int 
 13167 ;; Auto vars:     Size  Location     Type
 13168 ;;  exp1            1  [STACK] unsigned char 
 13169 ;;  sign1           1  [STACK] unsigned char 
 13170 ;; Return value:  Size  Location     Type
 13171 ;;                  4  [STACK] long 
 13172 ;; Registers used:
 13173 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 13174 ;; Tracked objects:
 13175 ;;		On entry : 0/5
 13176 ;;		On exit  : 0/0
 13177 ;;		Unchanged: 0/0
 13178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13183 ;;Total ram usage:        0 bytes
 13184 ;; Hardware stack levels used:    1
 13185 ;; Hardware stack levels required when called:    6
 13186 ;; This function calls:
 13187 ;;		Nothing
 13188 ;; This function is called by:
 13189 ;;		_efgtoa
 13190 ;; This function uses a reentrant model
 13191 ;;
 13192                           
 13193                           	psect	text51
 13194  015E2A                     __ptext51:
 13195                           	opt callstack 0
 13196  015E2A                     ___fltol:
 13197                           	opt callstack 0
 13198                           
 13199                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13200  015E2A  52E6               	movf	postinc1,f,c
 13201  015E2C  52E6               	movf	postinc1,f,c
 13202                           
 13203                           ;stkvar	_f1 @ sp[(-2)+-4]
 13204                           
 13205                           ;incstack = 0
 13206  015E2E  0EFA               	movlw	-6
 13207  015E30  006F FF8C  F03A    	movff	plusw1,btemp+8
 13208  015E36  0EFB               	movlw	-5
 13209  015E38  006F FF8C  F03B    	movff	plusw1,btemp+9
 13210  015E3E  0EFC               	movlw	-4
 13211  015E40  006F FF8C  F03C    	movff	plusw1,btemp+10
 13212  015E46  0EFD               	movlw	-3
 13213  015E48  006F FF8C  F03D    	movff	plusw1,btemp+11
 13214  015E4E  0E18               	movlw	24
 13215  015E50  D005               	goto	u10550
 13216  015E52                     u10555:
 13217  015E52  90D8               	bcf	status,0,c
 13218  015E54  323D               	rrcf	(btemp+11)^0,f,c
 13219  015E56  323C               	rrcf	(btemp+10)^0,f,c
 13220  015E58  323B               	rrcf	(btemp+9)^0,f,c
 13221  015E5A  323A               	rrcf	(btemp+8)^0,f,c
 13222  015E5C                     u10550:
 13223  015E5C  2EE8               	decfsz	wreg,f,c
 13224  015E5E  D7F9               	goto	u10555
 13225                           
 13226                           ;stkvar	_exp1 @ sp[(-2)+0]
 13227  015E60  0EFE               	movlw	-2
 13228  015E62  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13229  015E68  0EFE               	movlw	-2
 13230  015E6A  50E3               	movf	plusw1,w,c
 13231  015E6C  A4D8               	btfss	status,2,c
 13232  015E6E  D006               	goto	l10129
 13233  015E70                     u10560:
 13234  015E70  0E00               	movlw	0
 13235  015E72  6E32               	movwf	btemp^0,c
 13236  015E74  6A33               	clrf	(btemp+1)^0,c
 13237  015E76  6A34               	clrf	(btemp+2)^0,c
 13238  015E78  6A35               	clrf	(btemp+3)^0,c
 13239  015E7A  D08B               	goto	l2339
 13240  015E7C                     l10129:
 13241                           
 13242                           ;stkvar	_f1 @ sp[(-2)+-4]
 13243  015E7C  0EFA               	movlw	-6
 13244  015E7E  006F FF8C  F03A    	movff	plusw1,btemp+8
 13245  015E84  0EFB               	movlw	-5
 13246  015E86  006F FF8C  F03B    	movff	plusw1,btemp+9
 13247  015E8C  0EFC               	movlw	-4
 13248  015E8E  006F FF8C  F03C    	movff	plusw1,btemp+10
 13249  015E94  0EFD               	movlw	-3
 13250  015E96  006F FF8C  F03D    	movff	plusw1,btemp+11
 13251  015E9C  0E20               	movlw	32
 13252  015E9E  D005               	goto	u10570
 13253  015EA0                     u10575:
 13254  015EA0  90D8               	bcf	status,0,c
 13255  015EA2  323D               	rrcf	(btemp+11)^0,f,c
 13256  015EA4  323C               	rrcf	(btemp+10)^0,f,c
 13257  015EA6  323B               	rrcf	(btemp+9)^0,f,c
 13258  015EA8  323A               	rrcf	(btemp+8)^0,f,c
 13259  015EAA                     u10570:
 13260  015EAA  2EE8               	decfsz	wreg,f,c
 13261  015EAC  D7F9               	goto	u10575
 13262                           
 13263                           ;stkvar	_sign1 @ sp[(-2)+1]
 13264  015EAE  0EFF               	movlw	-1
 13265  015EB0  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13266                           
 13267                           ;stkvar	_f1 @ sp[(-2)+-4]
 13268  015EB6  0EFC               	movlw	-4
 13269  015EB8  8EE3               	bsf	plusw1,7,c
 13270                           
 13271                           ;stkvar	_f1 @ sp[(-2)+-4]
 13272  015EBA  50E1               	movf	fsr1l,w,c
 13273  015EBC  0FFA               	addlw	-6
 13274  015EBE  6ED9               	movwf	fsr2l,c
 13275  015EC0  50E2               	movf	fsr1h,w,c
 13276  015EC2  6EDA               	movwf	fsr2h,c
 13277  015EC4  0EFF               	movlw	255
 13278  015EC6  22DA               	addwfc	fsr2h,f,c
 13279  015EC8  0EFF               	movlw	255
 13280  015ECA  16DE               	andwf	postinc2,f,c
 13281  015ECC  0EFF               	movlw	255
 13282  015ECE  16DE               	andwf	postinc2,f,c
 13283  015ED0  0EFF               	movlw	255
 13284  015ED2  16DE               	andwf	postinc2,f,c
 13285  015ED4  0E00               	movlw	0
 13286  015ED6  16DE               	andwf	postinc2,f,c
 13287                           
 13288                           ;stkvar	_exp1 @ sp[(-2)+0]
 13289  015ED8  0EFE               	movlw	-2
 13290  015EDA  006F FF8C  F032    	movff	plusw1,btemp
 13291  015EE0  0E96               	movlw	150
 13292  015EE2  5E32               	subwf	btemp^0,f,c
 13293  015EE4  0EFE               	movlw	-2
 13294  015EE6  0060  F0CB  FFE3   	movff	btemp,plusw1
 13295                           
 13296                           ;stkvar	_exp1 @ sp[(-2)+0]
 13297  015EEC  0EFE               	movlw	-2
 13298  015EEE  AEE3               	btfss	plusw1,7,c
 13299  015EF0  D014               	goto	l10147
 13300                           
 13301                           ;stkvar	_exp1 @ sp[(-2)+0]
 13302  015EF2  0EFE               	movlw	-2
 13303  015EF4  50E3               	movf	plusw1,w,c
 13304  015EF6  0A80               	xorlw	128
 13305  015EF8  0F97               	addlw	151
 13306  015EFA  A0D8               	btfss	status,0,c
 13307  015EFC  D7B9               	goto	u10560
 13308  015EFE                     l10145:
 13309                           
 13310                           ;stkvar	_f1 @ sp[(-2)+-4]
 13311  015EFE  90D8               	bcf	status,0,c
 13312  015F00  0EFD               	movlw	-3
 13313  015F02  32E3               	rrcf	plusw1,f,c
 13314  015F04  0EFC               	movlw	-4
 13315  015F06  32E3               	rrcf	plusw1,f,c
 13316  015F08  0EFB               	movlw	-5
 13317  015F0A  32E3               	rrcf	plusw1,f,c
 13318  015F0C  0EFA               	movlw	-6
 13319  015F0E  32E3               	rrcf	plusw1,f,c
 13320                           
 13321                           ;stkvar	_exp1 @ sp[(-2)+0]
 13322  015F10  0EFE               	movlw	-2
 13323  015F12  2AE3               	incf	plusw1,f,c
 13324  015F14  B4D8               	btfsc	status,2,c
 13325  015F16  D018               	goto	u10620
 13326  015F18  D7F2               	goto	l10145
 13327  015F1A                     l10147:
 13328                           
 13329                           ;stkvar	_exp1 @ sp[(-2)+0]
 13330  015F1A  0EFE               	movlw	-2
 13331  015F1C  006F FF8C  F032    	movff	plusw1,btemp
 13332  015F22  0E1F               	movlw	31
 13333  015F24  6432               	cpfsgt	btemp^0,c
 13334  015F26  D00C               	goto	l10155
 13335  015F28  D7A3               	goto	u10560
 13336  015F2A                     l10153:
 13337                           
 13338                           ;stkvar	_f1 @ sp[(-2)+-4]
 13339  015F2A  90D8               	bcf	status,0,c
 13340  015F2C  0EFA               	movlw	-6
 13341  015F2E  36E3               	rlcf	plusw1,f,c
 13342  015F30  0EFB               	movlw	-5
 13343  015F32  36E3               	rlcf	plusw1,f,c
 13344  015F34  0EFC               	movlw	-4
 13345  015F36  36E3               	rlcf	plusw1,f,c
 13346  015F38  0EFD               	movlw	-3
 13347  015F3A  36E3               	rlcf	plusw1,f,c
 13348                           
 13349                           ;stkvar	_exp1 @ sp[(-2)+0]
 13350  015F3C  0EFE               	movlw	-2
 13351  015F3E  06E3               	decf	plusw1,f,c
 13352  015F40                     l10155:
 13353                           
 13354                           ;stkvar	_exp1 @ sp[(-2)+0]
 13355  015F40  0EFE               	movlw	-2
 13356  015F42  50E3               	movf	plusw1,w,c
 13357  015F44  A4D8               	btfss	status,2,c
 13358  015F46  D7F1               	goto	l10153
 13359  015F48                     u10620:
 13360                           
 13361                           ;stkvar	_sign1 @ sp[(-2)+1]
 13362  015F48  0EFF               	movlw	-1
 13363  015F4A  50E3               	movf	plusw1,w,c
 13364  015F4C  B4D8               	btfsc	status,2,c
 13365  015F4E  D011               	goto	u10640
 13366                           
 13367                           ;stkvar	_f1 @ sp[(-2)+-4]
 13368                           ;stkvar	_f1 @ sp[(-2)+-4]
 13369  015F50  0EFA               	movlw	-6
 13370  015F52  6CE3               	negf	plusw1,c
 13371  015F54  0EFB               	movlw	-5
 13372  015F56  1EE3               	comf	plusw1,f,c
 13373  015F58  0EFC               	movlw	-4
 13374  015F5A  1EE3               	comf	plusw1,f,c
 13375  015F5C  0EFD               	movlw	-3
 13376  015F5E  1EE3               	comf	plusw1,f,c
 13377  015F60  E308               	bnc	u10640
 13378  015F62  0EFB               	movlw	-5
 13379  015F64  2AE3               	incf	plusw1,f,c
 13380  015F66  E305               	bnc	u10640
 13381  015F68  0EFC               	movlw	-4
 13382  015F6A  2AE3               	incf	plusw1,f,c
 13383  015F6C  E302               	bnc	u10640
 13384  015F6E  0EFD               	movlw	-3
 13385  015F70  2AE3               	incf	plusw1,f,c
 13386  015F72                     u10640:
 13387                           
 13388                           ;stkvar	_f1 @ sp[(-2)+-4]
 13389  015F72  0EFA               	movlw	-6
 13390  015F74  006F FF8C  F032    	movff	plusw1,btemp
 13391  015F7A  0EFB               	movlw	-5
 13392  015F7C  006F FF8C  F033    	movff	plusw1,btemp+1
 13393  015F82  0EFC               	movlw	-4
 13394  015F84  006F FF8C  F034    	movff	plusw1,btemp+2
 13395  015F8A  0EFD               	movlw	-3
 13396  015F8C  006F FF8C  F035    	movff	plusw1,btemp+3
 13397  015F92                     l2339:
 13398                           
 13399                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 13400  015F92  0EFA               	movlw	250
 13401  015F94  26E1               	addwf	fsr1l,f,c
 13402  015F96  0EFF               	movlw	255
 13403  015F98  22E2               	addwfc	fsr1h,f,c
 13404  015F9A  0012               	return		;funcret
 13405  015F9C                     __end_of___fltol:
 13406                           	opt callstack 0
 13407                           
 13408 ;; *************** function ___flsub *****************
 13409 ;; Defined at:
 13410 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 13411 ;; Parameters:    Size  Location     Type
 13412 ;;  b               4  [STACK] long 
 13413 ;;  a               4  [STACK] long 
 13414 ;; Auto vars:     Size  Location     Type
 13415 ;;		None
 13416 ;; Return value:  Size  Location     Type
 13417 ;;                  4  [STACK] long 
 13418 ;; Registers used:
 13419 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 13420 ;; Tracked objects:
 13421 ;;		On entry : 0/39
 13422 ;;		On exit  : 0/0
 13423 ;;		Unchanged: 0/0
 13424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13429 ;;Total ram usage:        0 bytes
 13430 ;; Hardware stack levels used:    1
 13431 ;; Hardware stack levels required when called:    7
 13432 ;; This function calls:
 13433 ;;		___fladd
 13434 ;; This function is called by:
 13435 ;;		_conv_raw_result
 13436 ;;		_lp_filter
 13437 ;;		_efgtoa
 13438 ;; This function uses a reentrant model
 13439 ;;
 13440                           
 13441                           	psect	text52
 13442  017AC2                     __ptext52:
 13443                           	opt callstack 0
 13444  017AC2                     ___flsub:
 13445                           	opt callstack 16
 13446                           
 13447                           ;stkvar	_a @ sp[(0)+-8]
 13448                           
 13449                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13450                           ;incstack = 0
 13451  017AC2  0EFB               	movlw	-5
 13452  017AC4  7EE3               	btg	plusw1,7,c
 13453                           
 13454                           ;stkvar	_a @ sp[(0)+-8]
 13455  017AC6  0EF8               	movlw	-8
 13456  017AC8  006F FF8F FFE6     	movff	plusw1,postinc1
 13457  017ACE  006F FF8F FFE6     	movff	plusw1,postinc1
 13458  017AD4  006F FF8F FFE6     	movff	plusw1,postinc1
 13459  017ADA  006F FF8F FFE6     	movff	plusw1,postinc1
 13460                           
 13461                           ;stkvar	_b @ sp[(-4)+-4]
 13462  017AE0  0EF8               	movlw	-8
 13463  017AE2  006F FF8F FFE6     	movff	plusw1,postinc1
 13464  017AE8  006F FF8F FFE6     	movff	plusw1,postinc1
 13465  017AEE  006F FF8F FFE6     	movff	plusw1,postinc1
 13466  017AF4  006F FF8F FFE6     	movff	plusw1,postinc1
 13467  017AFA  ECD6  F092         	call	___fladd	;wreg free
 13468                           
 13469                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 13470  017AFE  0EF8               	movlw	248
 13471  017B00  26E1               	addwf	fsr1l,f,c
 13472  017B02  0EFF               	movlw	255
 13473  017B04  22E2               	addwfc	fsr1h,f,c
 13474  017B06  0012               	return		;funcret
 13475  017B08                     __end_of___flsub:
 13476                           	opt callstack 0
 13477                           
 13478 ;; *************** function ___fladd *****************
 13479 ;; Defined at:
 13480 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 13481 ;; Parameters:    Size  Location     Type
 13482 ;;  b               4  [STACK] long 
 13483 ;;  a               4  [STACK] long 
 13484 ;; Auto vars:     Size  Location     Type
 13485 ;;  grs             1  [STACK] unsigned char 
 13486 ;;  bexp            1  [STACK] unsigned char 
 13487 ;;  aexp            1  [STACK] unsigned char 
 13488 ;;  signs           1  [STACK] unsigned char 
 13489 ;; Return value:  Size  Location     Type
 13490 ;;                  4  [STACK] unsigned char 
 13491 ;; Registers used:
 13492 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 13493 ;; Tracked objects:
 13494 ;;		On entry : 0/39
 13495 ;;		On exit  : 0/0
 13496 ;;		Unchanged: 0/0
 13497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13501 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13502 ;;Total ram usage:        0 bytes
 13503 ;; Hardware stack levels used:    1
 13504 ;; Hardware stack levels required when called:    6
 13505 ;; This function calls:
 13506 ;;		Nothing
 13507 ;; This function is called by:
 13508 ;;		_lp_filter
 13509 ;;		_efgtoa
 13510 ;;		___flsub
 13511 ;; This function uses a reentrant model
 13512 ;;
 13513                           
 13514                           	psect	text53
 13515  0125AC                     __ptext53:
 13516                           	opt callstack 0
 13517  0125AC                     ___fladd:
 13518                           	opt callstack 0
 13519                           
 13520                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13521  0125AC  52E6               	movf	postinc1,f,c
 13522  0125AE  52E6               	movf	postinc1,f,c
 13523  0125B0  52E6               	movf	postinc1,f,c
 13524  0125B2  52E6               	movf	postinc1,f,c
 13525                           
 13526                           ;stkvar	_b @ sp[(-4)+-4]
 13527                           
 13528                           ;incstack = 0
 13529  0125B4  0EFB               	movlw	251
 13530  0125B6  24E1               	addwf	fsr1l,w,c
 13531  0125B8  6ED9               	movwf	fsr2l,c
 13532  0125BA  0EFF               	movlw	255
 13533  0125BC  20E2               	addwfc	fsr1h,w,c
 13534  0125BE  6EDA               	movwf	fsr2h,c
 13535  0125C0  50DF               	movf	indf2,w,c
 13536  0125C2  6E3D               	movwf	(btemp+11)^0,c
 13537  0125C4  0E80               	movlw	128
 13538  0125C6  163D               	andwf	(btemp+11)^0,f,c
 13539                           
 13540                           ;stkvar	_signs @ sp[(-4)+3]
 13541  0125C8  0EFF               	movlw	-1
 13542  0125CA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13543                           
 13544                           ;stkvar	_b @ sp[(-4)+-4]
 13545  0125D0  0EFB               	movlw	251
 13546  0125D2  24E1               	addwf	fsr1l,w,c
 13547  0125D4  6ED9               	movwf	fsr2l,c
 13548  0125D6  0EFF               	movlw	255
 13549  0125D8  20E2               	addwfc	fsr1h,w,c
 13550  0125DA  6EDA               	movwf	fsr2h,c
 13551  0125DC  50DF               	movf	indf2,w,c
 13552  0125DE  6E3D               	movwf	(btemp+11)^0,c
 13553  0125E0  90D8               	bcf	status,0,c
 13554  0125E2  343D               	rlcf	(btemp+11)^0,w,c
 13555  0125E4  6E3C               	movwf	(btemp+10)^0,c
 13556                           
 13557                           ;stkvar	_bexp @ sp[(-4)+1]
 13558  0125E6  0EFD               	movlw	-3
 13559  0125E8  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13560                           
 13561                           ;stkvar	_b @ sp[(-4)+-4]
 13562  0125EE  0EFA               	movlw	250
 13563  0125F0  24E1               	addwf	fsr1l,w,c
 13564  0125F2  6ED9               	movwf	fsr2l,c
 13565  0125F4  0EFF               	movlw	255
 13566  0125F6  20E2               	addwfc	fsr1h,w,c
 13567  0125F8  6EDA               	movwf	fsr2h,c
 13568  0125FA  AEDF               	btfss	indf2,7,c
 13569  0125FC  D002               	goto	l9243
 13570                           
 13571                           ;stkvar	_bexp @ sp[(-4)+1]
 13572  0125FE  0EFD               	movlw	-3
 13573  012600  80E3               	bsf	plusw1,0,c
 13574  012602                     l9243:
 13575                           
 13576                           ;stkvar	_bexp @ sp[(-4)+1]
 13577  012602  0EFD               	movlw	-3
 13578  012604  50E3               	movf	plusw1,w,c
 13579  012606  B4D8               	btfsc	status,2,c
 13580  012608  D027               	goto	l9253
 13581                           
 13582                           ;stkvar	_bexp @ sp[(-4)+1]
 13583  01260A  0EFD               	movlw	-3
 13584  01260C  28E3               	incf	plusw1,w,c
 13585  01260E  A4D8               	btfss	status,2,c
 13586  012610  D018               	goto	l9249
 13587  012612  0E00               	movlw	0
 13588  012614  6E3A               	movwf	(btemp+8)^0,c
 13589  012616  0E00               	movlw	0
 13590  012618  6E3B               	movwf	(btemp+9)^0,c
 13591  01261A  0E00               	movlw	0
 13592  01261C  6E3C               	movwf	(btemp+10)^0,c
 13593  01261E  0E00               	movlw	0
 13594  012620  6E3D               	movwf	(btemp+11)^0,c
 13595                           
 13596                           ;stkvar	_b @ sp[(-4)+-4]
 13597  012622  0EF8               	movlw	-8
 13598  012624  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13599  01262A  0EF9               	movlw	-7
 13600  01262C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13601  012632  0EFA               	movlw	-6
 13602  012634  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13603  01263A  0EFB               	movlw	-5
 13604  01263C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13605  012642                     l9249:
 13606                           
 13607                           ;stkvar	_b @ sp[(-4)+-4]
 13608  012642  0EFA               	movlw	-6
 13609  012644  8EE3               	bsf	plusw1,7,c
 13610                           
 13611                           ;stkvar	_b @ sp[(-4)+-4]
 13612  012646  0EFB               	movlw	251
 13613  012648  24E1               	addwf	fsr1l,w,c
 13614  01264A  6ED9               	movwf	fsr2l,c
 13615  01264C  0EFF               	movlw	255
 13616  01264E  20E2               	addwfc	fsr1h,w,c
 13617  012650  6EDA               	movwf	fsr2h,c
 13618  012652  0E00               	movlw	0
 13619  012654  6EDF               	movwf	indf2,c
 13620  012656  D018               	goto	l9255
 13621  012658                     l9253:
 13622  012658  0E00               	movlw	0
 13623  01265A  6E3A               	movwf	(btemp+8)^0,c
 13624  01265C  0E00               	movlw	0
 13625  01265E  6E3B               	movwf	(btemp+9)^0,c
 13626  012660  0E00               	movlw	0
 13627  012662  6E3C               	movwf	(btemp+10)^0,c
 13628  012664  0E00               	movlw	0
 13629  012666  6E3D               	movwf	(btemp+11)^0,c
 13630                           
 13631                           ;stkvar	_b @ sp[(-4)+-4]
 13632  012668  0EF8               	movlw	-8
 13633  01266A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13634  012670  0EF9               	movlw	-7
 13635  012672  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13636  012678  0EFA               	movlw	-6
 13637  01267A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13638  012680  0EFB               	movlw	-5
 13639  012682  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13640  012688                     l9255:
 13641                           
 13642                           ;stkvar	_a @ sp[(-4)+-8]
 13643  012688  0EF7               	movlw	247
 13644  01268A  24E1               	addwf	fsr1l,w,c
 13645  01268C  6ED9               	movwf	fsr2l,c
 13646  01268E  0EFF               	movlw	255
 13647  012690  20E2               	addwfc	fsr1h,w,c
 13648  012692  6EDA               	movwf	fsr2h,c
 13649  012694  50DF               	movf	indf2,w,c
 13650  012696  6E3D               	movwf	(btemp+11)^0,c
 13651  012698  0E80               	movlw	128
 13652  01269A  163D               	andwf	(btemp+11)^0,f,c
 13653                           
 13654                           ;stkvar	_aexp @ sp[(-4)+2]
 13655  01269C  0EFE               	movlw	-2
 13656  01269E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13657                           
 13658                           ;stkvar	_signs @ sp[(-4)+3]
 13659                           ;stkvar	_aexp @ sp[(-4)+2]
 13660  0126A4  50E1               	movf	fsr1l,w,c
 13661  0126A6  0FFE               	addlw	-2
 13662  0126A8  6ED9               	movwf	fsr2l,c
 13663  0126AA  50E2               	movf	fsr1h,w,c
 13664  0126AC  6EDA               	movwf	fsr2h,c
 13665  0126AE  0EFF               	movlw	255
 13666  0126B0  22DA               	addwfc	fsr2h,f,c
 13667  0126B2  0EFF               	movlw	-1
 13668  0126B4  50E3               	movf	plusw1,w,c
 13669  0126B6  18DE               	xorwf	postinc2,w,c
 13670  0126B8  B4D8               	btfsc	status,2,c
 13671  0126BA  D002               	goto	l9261
 13672                           
 13673                           ;stkvar	_signs @ sp[(-4)+3]
 13674  0126BC  0EFF               	movlw	-1
 13675  0126BE  8CE3               	bsf	plusw1,6,c
 13676  0126C0                     l9261:
 13677                           
 13678                           ;stkvar	_a @ sp[(-4)+-8]
 13679  0126C0  0EF7               	movlw	247
 13680  0126C2  24E1               	addwf	fsr1l,w,c
 13681  0126C4  6ED9               	movwf	fsr2l,c
 13682  0126C6  0EFF               	movlw	255
 13683  0126C8  20E2               	addwfc	fsr1h,w,c
 13684  0126CA  6EDA               	movwf	fsr2h,c
 13685  0126CC  50DF               	movf	indf2,w,c
 13686  0126CE  6E3D               	movwf	(btemp+11)^0,c
 13687  0126D0  90D8               	bcf	status,0,c
 13688  0126D2  343D               	rlcf	(btemp+11)^0,w,c
 13689  0126D4  6E3C               	movwf	(btemp+10)^0,c
 13690                           
 13691                           ;stkvar	_aexp @ sp[(-4)+2]
 13692  0126D6  0EFE               	movlw	-2
 13693  0126D8  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13694                           
 13695                           ;stkvar	_a @ sp[(-4)+-8]
 13696  0126DE  0EF6               	movlw	246
 13697  0126E0  24E1               	addwf	fsr1l,w,c
 13698  0126E2  6ED9               	movwf	fsr2l,c
 13699  0126E4  0EFF               	movlw	255
 13700  0126E6  20E2               	addwfc	fsr1h,w,c
 13701  0126E8  6EDA               	movwf	fsr2h,c
 13702  0126EA  AEDF               	btfss	indf2,7,c
 13703  0126EC  D002               	goto	l9267
 13704                           
 13705                           ;stkvar	_aexp @ sp[(-4)+2]
 13706  0126EE  0EFE               	movlw	-2
 13707  0126F0  80E3               	bsf	plusw1,0,c
 13708  0126F2                     l9267:
 13709                           
 13710                           ;stkvar	_aexp @ sp[(-4)+2]
 13711  0126F2  0EFE               	movlw	-2
 13712  0126F4  50E3               	movf	plusw1,w,c
 13713  0126F6  B4D8               	btfsc	status,2,c
 13714  0126F8  D027               	goto	l9277
 13715                           
 13716                           ;stkvar	_aexp @ sp[(-4)+2]
 13717  0126FA  0EFE               	movlw	-2
 13718  0126FC  28E3               	incf	plusw1,w,c
 13719  0126FE  A4D8               	btfss	status,2,c
 13720  012700  D018               	goto	l9273
 13721  012702  0E00               	movlw	0
 13722  012704  6E3A               	movwf	(btemp+8)^0,c
 13723  012706  0E00               	movlw	0
 13724  012708  6E3B               	movwf	(btemp+9)^0,c
 13725  01270A  0E00               	movlw	0
 13726  01270C  6E3C               	movwf	(btemp+10)^0,c
 13727  01270E  0E00               	movlw	0
 13728  012710  6E3D               	movwf	(btemp+11)^0,c
 13729                           
 13730                           ;stkvar	_a @ sp[(-4)+-8]
 13731  012712  0EF4               	movlw	-12
 13732  012714  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13733  01271A  0EF5               	movlw	-11
 13734  01271C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13735  012722  0EF6               	movlw	-10
 13736  012724  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13737  01272A  0EF7               	movlw	-9
 13738  01272C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13739  012732                     l9273:
 13740                           
 13741                           ;stkvar	_a @ sp[(-4)+-8]
 13742  012732  0EF6               	movlw	-10
 13743  012734  8EE3               	bsf	plusw1,7,c
 13744                           
 13745                           ;stkvar	_a @ sp[(-4)+-8]
 13746  012736  0EF7               	movlw	247
 13747  012738  24E1               	addwf	fsr1l,w,c
 13748  01273A  6ED9               	movwf	fsr2l,c
 13749  01273C  0EFF               	movlw	255
 13750  01273E  20E2               	addwfc	fsr1h,w,c
 13751  012740  6EDA               	movwf	fsr2h,c
 13752  012742  0E00               	movlw	0
 13753  012744  6EDF               	movwf	indf2,c
 13754  012746  D018               	goto	l9279
 13755  012748                     l9277:
 13756  012748  0E00               	movlw	0
 13757  01274A  6E3A               	movwf	(btemp+8)^0,c
 13758  01274C  0E00               	movlw	0
 13759  01274E  6E3B               	movwf	(btemp+9)^0,c
 13760  012750  0E00               	movlw	0
 13761  012752  6E3C               	movwf	(btemp+10)^0,c
 13762  012754  0E00               	movlw	0
 13763  012756  6E3D               	movwf	(btemp+11)^0,c
 13764                           
 13765                           ;stkvar	_a @ sp[(-4)+-8]
 13766  012758  0EF4               	movlw	-12
 13767  01275A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13768  012760  0EF5               	movlw	-11
 13769  012762  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13770  012768  0EF6               	movlw	-10
 13771  01276A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13772  012770  0EF7               	movlw	-9
 13773  012772  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13774  012778                     l9279:
 13775                           
 13776                           ;stkvar	_bexp @ sp[(-4)+1]
 13777                           ;stkvar	_aexp @ sp[(-4)+2]
 13778  012778  50E1               	movf	fsr1l,w,c
 13779  01277A  0FFE               	addlw	-2
 13780  01277C  6ED9               	movwf	fsr2l,c
 13781  01277E  50E2               	movf	fsr1h,w,c
 13782  012780  6EDA               	movwf	fsr2h,c
 13783  012782  0EFF               	movlw	255
 13784  012784  22DA               	addwfc	fsr2h,f,c
 13785  012786  0EFD               	movlw	-3
 13786  012788  50E3               	movf	plusw1,w,c
 13787  01278A  5CDE               	subwf	postinc2,w,c
 13788  01278C  B0D8               	btfsc	status,0,c
 13789  01278E  D0A4               	goto	l9315
 13790                           
 13791                           ;stkvar	_signs @ sp[(-4)+3]
 13792  012790  0EFF               	movlw	-1
 13793  012792  ACE3               	btfss	plusw1,6,c
 13794  012794  D002               	goto	l9285
 13795                           
 13796                           ;stkvar	_signs @ sp[(-4)+3]
 13797  012796  0EFF               	movlw	-1
 13798  012798  7EE3               	btg	plusw1,7,c
 13799  01279A                     l9285:
 13800                           
 13801                           ;stkvar	_bexp @ sp[(-4)+1]
 13802                           ;stkvar	_grs @ sp[(-4)+0]
 13803  01279A  0EFD               	movlw	-3
 13804  01279C  006F FF8C  F032    	movff	plusw1,btemp
 13805  0127A2  0EFC               	movlw	-4
 13806  0127A4  0060  F0CB  FFE3   	movff	btemp,plusw1
 13807                           
 13808                           ;stkvar	_aexp @ sp[(-4)+2]
 13809                           ;stkvar	_bexp @ sp[(-4)+1]
 13810  0127AA  0EFE               	movlw	-2
 13811  0127AC  006F FF8C  F032    	movff	plusw1,btemp
 13812  0127B2  0EFD               	movlw	-3
 13813  0127B4  0060  F0CB  FFE3   	movff	btemp,plusw1
 13814                           
 13815                           ;stkvar	_grs @ sp[(-4)+0]
 13816                           ;stkvar	_aexp @ sp[(-4)+2]
 13817  0127BA  0EFC               	movlw	-4
 13818  0127BC  006F FF8C  F032    	movff	plusw1,btemp
 13819  0127C2  0EFE               	movlw	-2
 13820  0127C4  0060  F0CB  FFE3   	movff	btemp,plusw1
 13821                           
 13822                           ;stkvar	_b @ sp[(-4)+-4]
 13823                           ;stkvar	_grs @ sp[(-4)+0]
 13824  0127CA  0EF8               	movlw	-8
 13825  0127CC  006F FF8C  F032    	movff	plusw1,btemp
 13826  0127D2  0EFC               	movlw	-4
 13827  0127D4  0060  F0CB  FFE3   	movff	btemp,plusw1
 13828                           
 13829                           ;stkvar	_a @ sp[(-4)+-8]
 13830                           ;stkvar	_b @ sp[(-4)+-4]
 13831  0127DA  0EF4               	movlw	-12
 13832  0127DC  006F FF8C  F032    	movff	plusw1,btemp
 13833  0127E2  0EF8               	movlw	-8
 13834  0127E4  0060  F0CB  FFE3   	movff	btemp,plusw1
 13835                           
 13836                           ;stkvar	_grs @ sp[(-4)+0]
 13837                           ;stkvar	_a @ sp[(-4)+-8]
 13838  0127EA  0EFC               	movlw	-4
 13839  0127EC  006F FF8C  F032    	movff	plusw1,btemp
 13840  0127F2  0EF4               	movlw	-12
 13841  0127F4  0060  F0CB  FFE3   	movff	btemp,plusw1
 13842                           
 13843                           ;stkvar	_b @ sp[(-4)+-4]
 13844  0127FA  0EF9               	movlw	249
 13845  0127FC  24E1               	addwf	fsr1l,w,c
 13846  0127FE  6ED9               	movwf	fsr2l,c
 13847  012800  0EFF               	movlw	255
 13848  012802  20E2               	addwfc	fsr1h,w,c
 13849  012804  6EDA               	movwf	fsr2h,c
 13850  012806  50DF               	movf	indf2,w,c
 13851  012808  6E3D               	movwf	(btemp+11)^0,c
 13852                           
 13853                           ;stkvar	_grs @ sp[(-4)+0]
 13854  01280A  0EFC               	movlw	-4
 13855  01280C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13856                           
 13857                           ;stkvar	_a @ sp[(-4)+-8]
 13858  012812  0EF5               	movlw	245
 13859  012814  24E1               	addwf	fsr1l,w,c
 13860  012816  6ED9               	movwf	fsr2l,c
 13861  012818  0EFF               	movlw	255
 13862  01281A  20E2               	addwfc	fsr1h,w,c
 13863  01281C  6EDA               	movwf	fsr2h,c
 13864                           
 13865                           ;stkvar	_b @ sp[(-4)+-4]
 13866  01281E  0EF9               	movlw	249
 13867  012820  24E1               	addwf	fsr1l,w,c
 13868  012822  6EE9               	movwf	fsr0l,c
 13869  012824  0EFF               	movlw	255
 13870  012826  20E2               	addwfc	fsr1h,w,c
 13871  012828  6EEA               	movwf	fsr0h,c
 13872  01282A  006F FF7F FFEF     	movff	indf2,indf0
 13873                           
 13874                           ;stkvar	_grs @ sp[(-4)+0]
 13875                           ;stkvar	_a @ sp[(-4)+-8]
 13876  012830  0EF5               	movlw	245
 13877  012832  24E1               	addwf	fsr1l,w,c
 13878  012834  6ED9               	movwf	fsr2l,c
 13879  012836  0EFF               	movlw	255
 13880  012838  20E2               	addwfc	fsr1h,w,c
 13881  01283A  6EDA               	movwf	fsr2h,c
 13882  01283C  0EFC               	movlw	-4
 13883  01283E  006F FF8F FFDF     	movff	plusw1,indf2
 13884                           
 13885                           ;stkvar	_b @ sp[(-4)+-4]
 13886  012844  0EFA               	movlw	250
 13887  012846  24E1               	addwf	fsr1l,w,c
 13888  012848  6ED9               	movwf	fsr2l,c
 13889  01284A  0EFF               	movlw	255
 13890  01284C  20E2               	addwfc	fsr1h,w,c
 13891  01284E  6EDA               	movwf	fsr2h,c
 13892  012850  50DF               	movf	indf2,w,c
 13893  012852  6E3D               	movwf	(btemp+11)^0,c
 13894                           
 13895                           ;stkvar	_grs @ sp[(-4)+0]
 13896  012854  0EFC               	movlw	-4
 13897  012856  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13898                           
 13899                           ;stkvar	_a @ sp[(-4)+-8]
 13900  01285C  0EF6               	movlw	246
 13901  01285E  24E1               	addwf	fsr1l,w,c
 13902  012860  6ED9               	movwf	fsr2l,c
 13903  012862  0EFF               	movlw	255
 13904  012864  20E2               	addwfc	fsr1h,w,c
 13905  012866  6EDA               	movwf	fsr2h,c
 13906                           
 13907                           ;stkvar	_b @ sp[(-4)+-4]
 13908  012868  0EFA               	movlw	250
 13909  01286A  24E1               	addwf	fsr1l,w,c
 13910  01286C  6EE9               	movwf	fsr0l,c
 13911  01286E  0EFF               	movlw	255
 13912  012870  20E2               	addwfc	fsr1h,w,c
 13913  012872  6EEA               	movwf	fsr0h,c
 13914  012874  006F FF7F FFEF     	movff	indf2,indf0
 13915                           
 13916                           ;stkvar	_grs @ sp[(-4)+0]
 13917                           ;stkvar	_a @ sp[(-4)+-8]
 13918  01287A  0EF6               	movlw	246
 13919  01287C  24E1               	addwf	fsr1l,w,c
 13920  01287E  6ED9               	movwf	fsr2l,c
 13921  012880  0EFF               	movlw	255
 13922  012882  20E2               	addwfc	fsr1h,w,c
 13923  012884  6EDA               	movwf	fsr2h,c
 13924  012886  0EFC               	movlw	-4
 13925  012888  006F FF8F FFDF     	movff	plusw1,indf2
 13926                           
 13927                           ;stkvar	_b @ sp[(-4)+-4]
 13928  01288E  0EFB               	movlw	251
 13929  012890  24E1               	addwf	fsr1l,w,c
 13930  012892  6ED9               	movwf	fsr2l,c
 13931  012894  0EFF               	movlw	255
 13932  012896  20E2               	addwfc	fsr1h,w,c
 13933  012898  6EDA               	movwf	fsr2h,c
 13934  01289A  50DF               	movf	indf2,w,c
 13935  01289C  6E3D               	movwf	(btemp+11)^0,c
 13936                           
 13937                           ;stkvar	_grs @ sp[(-4)+0]
 13938  01289E  0EFC               	movlw	-4
 13939  0128A0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13940                           
 13941                           ;stkvar	_a @ sp[(-4)+-8]
 13942  0128A6  0EF7               	movlw	247
 13943  0128A8  24E1               	addwf	fsr1l,w,c
 13944  0128AA  6ED9               	movwf	fsr2l,c
 13945  0128AC  0EFF               	movlw	255
 13946  0128AE  20E2               	addwfc	fsr1h,w,c
 13947  0128B0  6EDA               	movwf	fsr2h,c
 13948                           
 13949                           ;stkvar	_b @ sp[(-4)+-4]
 13950  0128B2  0EFB               	movlw	251
 13951  0128B4  24E1               	addwf	fsr1l,w,c
 13952  0128B6  6EE9               	movwf	fsr0l,c
 13953  0128B8  0EFF               	movlw	255
 13954  0128BA  20E2               	addwfc	fsr1h,w,c
 13955  0128BC  6EEA               	movwf	fsr0h,c
 13956  0128BE  006F FF7F FFEF     	movff	indf2,indf0
 13957                           
 13958                           ;stkvar	_grs @ sp[(-4)+0]
 13959                           ;stkvar	_a @ sp[(-4)+-8]
 13960  0128C4  0EF7               	movlw	247
 13961  0128C6  24E1               	addwf	fsr1l,w,c
 13962  0128C8  6ED9               	movwf	fsr2l,c
 13963  0128CA  0EFF               	movlw	255
 13964  0128CC  20E2               	addwfc	fsr1h,w,c
 13965  0128CE  6EDA               	movwf	fsr2h,c
 13966  0128D0  0EFC               	movlw	-4
 13967  0128D2  006F FF8F FFDF     	movff	plusw1,indf2
 13968  0128D8                     l9315:
 13969                           
 13970                           ;stkvar	_grs @ sp[(-4)+0]
 13971  0128D8  0EFC               	movlw	-4
 13972  0128DA  6AE3               	clrf	plusw1,c
 13973                           
 13974                           ;stkvar	_aexp @ sp[(-4)+2]
 13975  0128DC  0EFE               	movlw	-2
 13976  0128DE  50E3               	movf	plusw1,w,c
 13977  0128E0  6E3C               	movwf	(btemp+10)^0,c
 13978  0128E2  6A3D               	clrf	(btemp+11)^0,c
 13979                           
 13980                           ;stkvar	_bexp @ sp[(-4)+1]
 13981  0128E4  0EFD               	movlw	-3
 13982  0128E6  50E3               	movf	plusw1,w,c
 13983  0128E8  5E3C               	subwf	(btemp+10)^0,f,c
 13984  0128EA  0E00               	movlw	0
 13985  0128EC  5A3D               	subwfb	(btemp+11)^0,f,c
 13986  0128EE  BE3D               	btfsc	(btemp+11)^0,7,c
 13987  0128F0  D062               	goto	l9339
 13988  0128F2  503D               	movf	(btemp+11)^0,w,c
 13989  0128F4  E104               	bnz	u8940
 13990  0128F6  0E1A               	movlw	26
 13991  0128F8  5C3C               	subwf	(btemp+10)^0,w,c
 13992  0128FA  A0D8               	btfss	status,0,c
 13993  0128FC  D05C               	goto	l9339
 13994  0128FE                     u8940:
 13995                           
 13996                           ;stkvar	_b @ sp[(-4)+-4]
 13997  0128FE  0EF8               	movlw	-8
 13998  012900  50E3               	movf	plusw1,w,c
 13999  012902  E10A               	bnz	u8951
 14000  012904  0EF9               	movlw	-7
 14001  012906  50E3               	movf	plusw1,w,c
 14002  012908  E107               	bnz	u8951
 14003  01290A  0EFA               	movlw	-6
 14004  01290C  50E3               	movf	plusw1,w,c
 14005  01290E  E104               	bnz	u8951
 14006  012910  0EFB               	movlw	-5
 14007  012912  50E3               	movf	plusw1,w,c
 14008  012914  B4D8               	btfsc	status,2,c
 14009  012916  D003               	goto	u8950
 14010  012918                     u8951:
 14011  012918  6A3D               	clrf	(btemp+11)^0,c
 14012  01291A  2A3D               	incf	(btemp+11)^0,f,c
 14013  01291C  D001               	goto	u8968
 14014  01291E                     u8950:
 14015  01291E  6A3D               	clrf	(btemp+11)^0,c
 14016  012920                     u8968:
 14017                           
 14018                           ;stkvar	_grs @ sp[(-4)+0]
 14019  012920  0EFC               	movlw	-4
 14020  012922  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14021                           
 14022                           ;stkvar	_b @ sp[(-4)+-4]
 14023  012928  0EF8               	movlw	-8
 14024  01292A  6AE3               	clrf	plusw1,c
 14025  01292C  0EF9               	movlw	-7
 14026  01292E  6AE3               	clrf	plusw1,c
 14027  012930  0EFA               	movlw	-6
 14028  012932  6AE3               	clrf	plusw1,c
 14029  012934  0EFB               	movlw	-5
 14030  012936  6AE3               	clrf	plusw1,c
 14031                           
 14032                           ;stkvar	_aexp @ sp[(-4)+2]
 14033                           ;stkvar	_bexp @ sp[(-4)+1]
 14034  012938  0EFE               	movlw	-2
 14035  01293A  006F FF8C  F032    	movff	plusw1,btemp
 14036  012940  0EFD               	movlw	-3
 14037  012942  0060  F0CB  FFE3   	movff	btemp,plusw1
 14038  012948  D042               	goto	u9000
 14039  01294A                     l9325:
 14040                           
 14041                           ;stkvar	_grs @ sp[(-4)+0]
 14042  01294A  0EFC               	movlw	-4
 14043  01294C  A0E3               	btfss	plusw1,0,c
 14044  01294E  D00D               	goto	l9329
 14045                           
 14046                           ;stkvar	_grs @ sp[(-4)+0]
 14047  012950  0EFC               	movlw	-4
 14048  012952  006F FF8C  F03D    	movff	plusw1,btemp+11
 14049  012958  90D8               	bcf	status,0,c
 14050  01295A  323D               	rrcf	(btemp+11)^0,f,c
 14051  01295C  0E01               	movlw	1
 14052  01295E  123D               	iorwf	(btemp+11)^0,f,c
 14053                           
 14054                           ;stkvar	_grs @ sp[(-4)+0]
 14055  012960  0EFC               	movlw	-4
 14056  012962  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14057  012968  D009               	goto	l9331
 14058  01296A                     l9329:
 14059                           
 14060                           ;stkvar	_grs @ sp[(-4)+0]
 14061  01296A  50E1               	movf	fsr1l,w,c
 14062  01296C  0FFC               	addlw	-4
 14063  01296E  6ED9               	movwf	fsr2l,c
 14064  012970  50E2               	movf	fsr1h,w,c
 14065  012972  6EDA               	movwf	fsr2h,c
 14066  012974  0EFF               	movlw	255
 14067  012976  22DA               	addwfc	fsr2h,f,c
 14068  012978  90D8               	bcf	status,0,c
 14069  01297A  32DF               	rrcf	indf2,f,c
 14070  01297C                     l9331:
 14071                           
 14072                           ;stkvar	_b @ sp[(-4)+-4]
 14073  01297C  0EF8               	movlw	-8
 14074  01297E  A0E3               	btfss	plusw1,0,c
 14075  012980  D002               	goto	l9335
 14076                           
 14077                           ;stkvar	_grs @ sp[(-4)+0]
 14078  012982  0EFC               	movlw	-4
 14079  012984  8EE3               	bsf	plusw1,7,c
 14080  012986                     l9335:
 14081  012986  0E01               	movlw	1
 14082  012988  6E3D               	movwf	(btemp+11)^0,c
 14083                           
 14084                           ;stkvar	_b @ sp[(-4)+-4]
 14085  01298A  50E1               	movf	fsr1l,w,c
 14086  01298C  0FF8               	addlw	-8
 14087  01298E  6ED9               	movwf	fsr2l,c
 14088  012990  50E2               	movf	fsr1h,w,c
 14089  012992  6EDA               	movwf	fsr2h,c
 14090  012994  0EFF               	movlw	255
 14091  012996  22DA               	addwfc	fsr2h,f,c
 14092  012998  283D               	incf	(btemp+11)^0,w,c
 14093  01299A  52DE               	movf	postinc2,f,c
 14094  01299C  D008               	goto	u8990
 14095  01299E                     u8995:
 14096  01299E  52DE               	movf	postinc2,f,c
 14097  0129A0  90D8               	bcf	status,0,c
 14098  0129A2  BEDC               	btfsc	preinc2,7,c
 14099  0129A4  80D8               	bsf	status,0,c
 14100  0129A6  32DD               	rrcf	postdec2,f,c
 14101  0129A8  32DD               	rrcf	postdec2,f,c
 14102  0129AA  32DD               	rrcf	postdec2,f,c
 14103  0129AC  32DE               	rrcf	postinc2,f,c
 14104  0129AE                     u8990:
 14105  0129AE  2EE8               	decfsz	wreg,f,c
 14106  0129B0  D7F6               	goto	u8995
 14107                           
 14108                           ;stkvar	_bexp @ sp[(-4)+1]
 14109  0129B2  0EFD               	movlw	-3
 14110  0129B4  2AE3               	incf	plusw1,f,c
 14111  0129B6                     l9339:
 14112                           
 14113                           ;stkvar	_aexp @ sp[(-4)+2]
 14114                           ;stkvar	_bexp @ sp[(-4)+1]
 14115  0129B6  50E1               	movf	fsr1l,w,c
 14116  0129B8  0FFD               	addlw	-3
 14117  0129BA  6ED9               	movwf	fsr2l,c
 14118  0129BC  50E2               	movf	fsr1h,w,c
 14119  0129BE  6EDA               	movwf	fsr2h,c
 14120  0129C0  0EFF               	movlw	255
 14121  0129C2  22DA               	addwfc	fsr2h,f,c
 14122  0129C4  0EFE               	movlw	-2
 14123  0129C6  50E3               	movf	plusw1,w,c
 14124  0129C8  5CDE               	subwf	postinc2,w,c
 14125  0129CA  A0D8               	btfss	status,0,c
 14126  0129CC  D7BE               	goto	l9325
 14127  0129CE                     u9000:
 14128                           
 14129                           ;stkvar	_signs @ sp[(-4)+3]
 14130  0129CE  0EFF               	movlw	-1
 14131  0129D0  BCE3               	btfsc	plusw1,6,c
 14132  0129D2  D066               	goto	l9367
 14133                           
 14134                           ;stkvar	_bexp @ sp[(-4)+1]
 14135  0129D4  0EFD               	movlw	-3
 14136  0129D6  50E3               	movf	plusw1,w,c
 14137  0129D8  B4D8               	btfsc	status,2,c
 14138  0129DA  D0F2               	goto	u9100
 14139                           
 14140                           ;stkvar	_a @ sp[(-4)+-8]
 14141                           ;stkvar	_b @ sp[(-4)+-4]
 14142  0129DC  0EF8               	movlw	-8
 14143  0129DE  50E3               	movf	plusw1,w,c
 14144  0129E0  6E32               	movwf	btemp^0,c
 14145  0129E2  0EF4               	movlw	-12
 14146  0129E4  50E3               	movf	plusw1,w,c
 14147  0129E6  2632               	addwf	btemp^0,f,c
 14148  0129E8  0EF8               	movlw	-8
 14149  0129EA  0060  F0CB  FFE3   	movff	btemp,plusw1
 14150  0129F0  0EF9               	movlw	-7
 14151  0129F2  50E3               	movf	plusw1,w,c
 14152  0129F4  6E32               	movwf	btemp^0,c
 14153  0129F6  0EF5               	movlw	-11
 14154  0129F8  50E3               	movf	plusw1,w,c
 14155  0129FA  2232               	addwfc	btemp^0,f,c
 14156  0129FC  0EF9               	movlw	-7
 14157  0129FE  0060  F0CB  FFE3   	movff	btemp,plusw1
 14158  012A04  0EFA               	movlw	-6
 14159  012A06  50E3               	movf	plusw1,w,c
 14160  012A08  6E32               	movwf	btemp^0,c
 14161  012A0A  0EF6               	movlw	-10
 14162  012A0C  50E3               	movf	plusw1,w,c
 14163  012A0E  2232               	addwfc	btemp^0,f,c
 14164  012A10  0EFA               	movlw	-6
 14165  012A12  0060  F0CB  FFE3   	movff	btemp,plusw1
 14166  012A18  0EFB               	movlw	-5
 14167  012A1A  50E3               	movf	plusw1,w,c
 14168  012A1C  6E32               	movwf	btemp^0,c
 14169  012A1E  0EF7               	movlw	-9
 14170  012A20  50E3               	movf	plusw1,w,c
 14171  012A22  2232               	addwfc	btemp^0,f,c
 14172  012A24  0EFB               	movlw	-5
 14173  012A26  0060  F0CB  FFE3   	movff	btemp,plusw1
 14174                           
 14175                           ;stkvar	_b @ sp[(-4)+-4]
 14176  012A2C  0EFB               	movlw	-5
 14177  012A2E  A0E3               	btfss	plusw1,0,c
 14178  012A30  D101               	goto	u9140
 14179                           
 14180                           ;stkvar	_grs @ sp[(-4)+0]
 14181  012A32  0EFC               	movlw	-4
 14182  012A34  A0E3               	btfss	plusw1,0,c
 14183  012A36  D00D               	goto	l9357
 14184                           
 14185                           ;stkvar	_grs @ sp[(-4)+0]
 14186  012A38  0EFC               	movlw	-4
 14187  012A3A  006F FF8C  F03D    	movff	plusw1,btemp+11
 14188  012A40  90D8               	bcf	status,0,c
 14189  012A42  323D               	rrcf	(btemp+11)^0,f,c
 14190  012A44  0E01               	movlw	1
 14191  012A46  123D               	iorwf	(btemp+11)^0,f,c
 14192                           
 14193                           ;stkvar	_grs @ sp[(-4)+0]
 14194  012A48  0EFC               	movlw	-4
 14195  012A4A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14196  012A50  D009               	goto	l9359
 14197  012A52                     l9357:
 14198                           
 14199                           ;stkvar	_grs @ sp[(-4)+0]
 14200  012A52  50E1               	movf	fsr1l,w,c
 14201  012A54  0FFC               	addlw	-4
 14202  012A56  6ED9               	movwf	fsr2l,c
 14203  012A58  50E2               	movf	fsr1h,w,c
 14204  012A5A  6EDA               	movwf	fsr2h,c
 14205  012A5C  0EFF               	movlw	255
 14206  012A5E  22DA               	addwfc	fsr2h,f,c
 14207  012A60  90D8               	bcf	status,0,c
 14208  012A62  32DF               	rrcf	indf2,f,c
 14209  012A64                     l9359:
 14210                           
 14211                           ;stkvar	_b @ sp[(-4)+-4]
 14212  012A64  0EF8               	movlw	-8
 14213  012A66  A0E3               	btfss	plusw1,0,c
 14214  012A68  D002               	goto	l9363
 14215                           
 14216                           ;stkvar	_grs @ sp[(-4)+0]
 14217  012A6A  0EFC               	movlw	-4
 14218  012A6C  8EE3               	bsf	plusw1,7,c
 14219  012A6E                     l9363:
 14220  012A6E  0E01               	movlw	1
 14221  012A70  6E3D               	movwf	(btemp+11)^0,c
 14222                           
 14223                           ;stkvar	_b @ sp[(-4)+-4]
 14224  012A72  50E1               	movf	fsr1l,w,c
 14225  012A74  0FF8               	addlw	-8
 14226  012A76  6ED9               	movwf	fsr2l,c
 14227  012A78  50E2               	movf	fsr1h,w,c
 14228  012A7A  6EDA               	movwf	fsr2h,c
 14229  012A7C  0EFF               	movlw	255
 14230  012A7E  22DA               	addwfc	fsr2h,f,c
 14231  012A80  283D               	incf	(btemp+11)^0,w,c
 14232  012A82  52DE               	movf	postinc2,f,c
 14233  012A84  D008               	goto	u9060
 14234  012A86                     u9065:
 14235  012A86  52DE               	movf	postinc2,f,c
 14236  012A88  90D8               	bcf	status,0,c
 14237  012A8A  BEDC               	btfsc	preinc2,7,c
 14238  012A8C  80D8               	bsf	status,0,c
 14239  012A8E  32DD               	rrcf	postdec2,f,c
 14240  012A90  32DD               	rrcf	postdec2,f,c
 14241  012A92  32DD               	rrcf	postdec2,f,c
 14242  012A94  32DE               	rrcf	postinc2,f,c
 14243  012A96                     u9060:
 14244  012A96  2EE8               	decfsz	wreg,f,c
 14245  012A98  D7F6               	goto	u9065
 14246                           
 14247                           ;stkvar	_bexp @ sp[(-4)+1]
 14248  012A9A  0EFD               	movlw	-3
 14249  012A9C  2AE3               	incf	plusw1,f,c
 14250  012A9E  D0CA               	goto	u9140
 14251  012AA0                     l9367:
 14252                           
 14253                           ;stkvar	_a @ sp[(-4)+-8]
 14254                           ;stkvar	_b @ sp[(-4)+-4]
 14255  012AA0  50E1               	movf	fsr1l,w,c
 14256  012AA2  0FF8               	addlw	-8
 14257  012AA4  6ED9               	movwf	fsr2l,c
 14258  012AA6  50E2               	movf	fsr1h,w,c
 14259  012AA8  6EDA               	movwf	fsr2h,c
 14260  012AAA  0EFF               	movlw	255
 14261  012AAC  22DA               	addwfc	fsr2h,f,c
 14262  012AAE  0EF4               	movlw	-12
 14263  012AB0  50E3               	movf	plusw1,w,c
 14264  012AB2  5CDE               	subwf	postinc2,w,c
 14265  012AB4  0EF5               	movlw	-11
 14266  012AB6  50E3               	movf	plusw1,w,c
 14267  012AB8  58DE               	subwfb	postinc2,w,c
 14268  012ABA  0EF6               	movlw	-10
 14269  012ABC  50E3               	movf	plusw1,w,c
 14270  012ABE  58DE               	subwfb	postinc2,w,c
 14271  012AC0  50DE               	movf	postinc2,w,c
 14272  012AC2  0A80               	xorlw	128
 14273  012AC4  6E32               	movwf	btemp^0,c
 14274  012AC6  0EF7               	movlw	-9
 14275  012AC8  50E3               	movf	plusw1,w,c
 14276  012ACA  0A80               	xorlw	128
 14277  012ACC  5832               	subwfb	btemp^0,w,c
 14278  012ACE  B0D8               	btfsc	status,0,c
 14279  012AD0  D053               	goto	l9379
 14280                           
 14281                           ;stkvar	_b @ sp[(-4)+-4]
 14282                           ;stkvar	_a @ sp[(-4)+-8]
 14283  012AD2  0EF4               	movlw	-12
 14284  012AD4  006F FF8C  F03A    	movff	plusw1,btemp+8
 14285  012ADA  0EF5               	movlw	-11
 14286  012ADC  006F FF8C  F03B    	movff	plusw1,btemp+9
 14287  012AE2  0EF6               	movlw	-10
 14288  012AE4  006F FF8C  F03C    	movff	plusw1,btemp+10
 14289  012AEA  0EF7               	movlw	-9
 14290  012AEC  006F FF8C  F03D    	movff	plusw1,btemp+11
 14291  012AF2  0EF8               	movlw	-8
 14292  012AF4  50E3               	movf	plusw1,w,c
 14293  012AF6  5E3A               	subwf	(btemp+8)^0,f,c
 14294  012AF8  0EF9               	movlw	-7
 14295  012AFA  50E3               	movf	plusw1,w,c
 14296  012AFC  5A3B               	subwfb	(btemp+9)^0,f,c
 14297  012AFE  0EFA               	movlw	-6
 14298  012B00  50E3               	movf	plusw1,w,c
 14299  012B02  5A3C               	subwfb	(btemp+10)^0,f,c
 14300  012B04  0EFB               	movlw	-5
 14301  012B06  50E3               	movf	plusw1,w,c
 14302  012B08  5A3D               	subwfb	(btemp+11)^0,f,c
 14303  012B0A  0EFF               	movlw	255
 14304  012B0C  243A               	addwf	(btemp+8)^0,w,c
 14305  012B0E  6E36               	movwf	(btemp+4)^0,c
 14306  012B10  0EFF               	movlw	255
 14307  012B12  203B               	addwfc	(btemp+9)^0,w,c
 14308  012B14  6E37               	movwf	(btemp+5)^0,c
 14309  012B16  0EFF               	movlw	255
 14310  012B18  203C               	addwfc	(btemp+10)^0,w,c
 14311  012B1A  6E38               	movwf	(btemp+6)^0,c
 14312  012B1C  0EFF               	movlw	255
 14313  012B1E  203D               	addwfc	(btemp+11)^0,w,c
 14314  012B20  6E39               	movwf	(btemp+7)^0,c
 14315                           
 14316                           ;stkvar	_b @ sp[(-4)+-4]
 14317  012B22  0EF8               	movlw	-8
 14318  012B24  0060  F0DB  FFE3   	movff	btemp+4,plusw1
 14319  012B2A  0EF9               	movlw	-7
 14320  012B2C  0060  F0DF  FFE3   	movff	btemp+5,plusw1
 14321  012B32  0EFA               	movlw	-6
 14322  012B34  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 14323  012B3A  0EFB               	movlw	-5
 14324  012B3C  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 14325                           
 14326                           ;stkvar	_signs @ sp[(-4)+3]
 14327  012B42  0EFF               	movlw	-1
 14328  012B44  7EE3               	btg	plusw1,7,c
 14329                           
 14330                           ;stkvar	_grs @ sp[(-4)+0]
 14331  012B46  0EFC               	movlw	-4
 14332  012B48  50E3               	movf	plusw1,w,c
 14333  012B4A  0800               	sublw	0
 14334  012B4C  6E3D               	movwf	(btemp+11)^0,c
 14335                           
 14336                           ;stkvar	_grs @ sp[(-4)+0]
 14337  012B4E  0EFC               	movlw	-4
 14338  012B50  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14339                           
 14340                           ;stkvar	_grs @ sp[(-4)+0]
 14341  012B56  0EFC               	movlw	-4
 14342  012B58  50E3               	movf	plusw1,w,c
 14343  012B5A  A4D8               	btfss	status,2,c
 14344  012B5C  D020               	goto	l9381
 14345                           
 14346                           ;stkvar	_b @ sp[(-4)+-4]
 14347  012B5E  50E1               	movf	fsr1l,w,c
 14348  012B60  0FF8               	addlw	-8
 14349  012B62  6ED9               	movwf	fsr2l,c
 14350  012B64  50E2               	movf	fsr1h,w,c
 14351  012B66  6EDA               	movwf	fsr2h,c
 14352  012B68  0EFF               	movlw	255
 14353  012B6A  22DA               	addwfc	fsr2h,f,c
 14354  012B6C  2ADE               	incf	postinc2,f,c
 14355  012B6E  0E00               	movlw	0
 14356  012B70  22DE               	addwfc	postinc2,f,c
 14357  012B72  22DE               	addwfc	postinc2,f,c
 14358  012B74  22DE               	addwfc	postinc2,f,c
 14359  012B76  D013               	goto	l9381
 14360  012B78                     l9379:
 14361                           
 14362                           ;stkvar	_a @ sp[(-4)+-8]
 14363                           ;stkvar	_b @ sp[(-4)+-4]
 14364  012B78  50E1               	movf	fsr1l,w,c
 14365  012B7A  0FF8               	addlw	-8
 14366  012B7C  6ED9               	movwf	fsr2l,c
 14367  012B7E  50E2               	movf	fsr1h,w,c
 14368  012B80  6EDA               	movwf	fsr2h,c
 14369  012B82  0EFF               	movlw	255
 14370  012B84  22DA               	addwfc	fsr2h,f,c
 14371  012B86  0EF4               	movlw	-12
 14372  012B88  50E3               	movf	plusw1,w,c
 14373  012B8A  5EDE               	subwf	postinc2,f,c
 14374  012B8C  0EF5               	movlw	-11
 14375  012B8E  50E3               	movf	plusw1,w,c
 14376  012B90  5ADE               	subwfb	postinc2,f,c
 14377  012B92  0EF6               	movlw	-10
 14378  012B94  50E3               	movf	plusw1,w,c
 14379  012B96  5ADE               	subwfb	postinc2,f,c
 14380  012B98  0EF7               	movlw	-9
 14381  012B9A  50E3               	movf	plusw1,w,c
 14382  012B9C  5ADE               	subwfb	postinc2,f,c
 14383  012B9E                     l9381:
 14384                           
 14385                           ;stkvar	_b @ sp[(-4)+-4]
 14386  012B9E  0EF8               	movlw	-8
 14387  012BA0  50E3               	movf	plusw1,w,c
 14388  012BA2  E145               	bnz	l9403
 14389  012BA4  0EF9               	movlw	-7
 14390  012BA6  50E3               	movf	plusw1,w,c
 14391  012BA8  E142               	bnz	l9403
 14392  012BAA  0EFA               	movlw	-6
 14393  012BAC  50E3               	movf	plusw1,w,c
 14394  012BAE  E13F               	bnz	l9403
 14395  012BB0  0EFB               	movlw	-5
 14396  012BB2  50E3               	movf	plusw1,w,c
 14397  012BB4  A4D8               	btfss	status,2,c
 14398  012BB6  D03B               	goto	l9403
 14399                           
 14400                           ;stkvar	_grs @ sp[(-4)+0]
 14401  012BB8  0EFC               	movlw	-4
 14402  012BBA  50E3               	movf	plusw1,w,c
 14403  012BBC  A4D8               	btfss	status,2,c
 14404  012BBE  D037               	goto	l9403
 14405  012BC0                     u9100:
 14406  012BC0  0E00               	movlw	0
 14407  012BC2  6E32               	movwf	btemp^0,c
 14408  012BC4  0E00               	movlw	0
 14409  012BC6  6E33               	movwf	(btemp+1)^0,c
 14410  012BC8  0E00               	movlw	0
 14411  012BCA  6E34               	movwf	(btemp+2)^0,c
 14412  012BCC  0E00               	movlw	0
 14413  012BCE  6E35               	movwf	(btemp+3)^0,c
 14414  012BD0  D0C6               	goto	l2579
 14415  012BD2                     l9389:
 14416                           
 14417                           ;stkvar	_b @ sp[(-4)+-4]
 14418  012BD2  90D8               	bcf	status,0,c
 14419  012BD4  0EF8               	movlw	-8
 14420  012BD6  36E3               	rlcf	plusw1,f,c
 14421  012BD8  0EF9               	movlw	-7
 14422  012BDA  36E3               	rlcf	plusw1,f,c
 14423  012BDC  0EFA               	movlw	-6
 14424  012BDE  36E3               	rlcf	plusw1,f,c
 14425  012BE0  0EFB               	movlw	-5
 14426  012BE2  36E3               	rlcf	plusw1,f,c
 14427                           
 14428                           ;stkvar	_grs @ sp[(-4)+0]
 14429  012BE4  0EFC               	movlw	-4
 14430  012BE6  AEE3               	btfss	plusw1,7,c
 14431  012BE8  D002               	goto	l2591
 14432                           
 14433                           ;stkvar	_b @ sp[(-4)+-4]
 14434  012BEA  0EF8               	movlw	-8
 14435  012BEC  80E3               	bsf	plusw1,0,c
 14436  012BEE                     l2591:
 14437                           
 14438                           ;stkvar	_grs @ sp[(-4)+0]
 14439  012BEE  0EFC               	movlw	-4
 14440  012BF0  A0E3               	btfss	plusw1,0,c
 14441  012BF2  D00E               	goto	l9397
 14442                           
 14443                           ;stkvar	_grs @ sp[(-4)+0]
 14444  012BF4  0EFC               	movlw	-4
 14445  012BF6  006F FF8C  F03D    	movff	plusw1,btemp+11
 14446  012BFC  90D8               	bcf	status,0,c
 14447  012BFE  343D               	rlcf	(btemp+11)^0,w,c
 14448  012C00  6E3C               	movwf	(btemp+10)^0,c
 14449  012C02  0E01               	movlw	1
 14450  012C04  123C               	iorwf	(btemp+10)^0,f,c
 14451                           
 14452                           ;stkvar	_grs @ sp[(-4)+0]
 14453  012C06  0EFC               	movlw	-4
 14454  012C08  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14455  012C0E  D009               	goto	l9399
 14456  012C10                     l9397:
 14457                           
 14458                           ;stkvar	_grs @ sp[(-4)+0]
 14459  012C10  50E1               	movf	fsr1l,w,c
 14460  012C12  0FFC               	addlw	-4
 14461  012C14  6ED9               	movwf	fsr2l,c
 14462  012C16  50E2               	movf	fsr1h,w,c
 14463  012C18  6EDA               	movwf	fsr2h,c
 14464  012C1A  0EFF               	movlw	255
 14465  012C1C  22DA               	addwfc	fsr2h,f,c
 14466  012C1E  90D8               	bcf	status,0,c
 14467  012C20  36DF               	rlcf	indf2,f,c
 14468  012C22                     l9399:
 14469                           
 14470                           ;stkvar	_bexp @ sp[(-4)+1]
 14471  012C22  0EFD               	movlw	-3
 14472  012C24  50E3               	movf	plusw1,w,c
 14473  012C26  B4D8               	btfsc	status,2,c
 14474  012C28  D002               	goto	l9403
 14475                           
 14476                           ;stkvar	_bexp @ sp[(-4)+1]
 14477  012C2A  0EFD               	movlw	-3
 14478  012C2C  06E3               	decf	plusw1,f,c
 14479  012C2E                     l9403:
 14480                           
 14481                           ;stkvar	_b @ sp[(-4)+-4]
 14482  012C2E  0EFA               	movlw	-6
 14483  012C30  AEE3               	btfss	plusw1,7,c
 14484  012C32  D7CF               	goto	l9389
 14485  012C34                     u9140:
 14486                           
 14487                           ;stkvar	_aexp @ sp[(-4)+2]
 14488  012C34  0EFE               	movlw	-2
 14489  012C36  6AE3               	clrf	plusw1,c
 14490                           
 14491                           ;stkvar	_grs @ sp[(-4)+0]
 14492  012C38  0EFC               	movlw	-4
 14493  012C3A  AEE3               	btfss	plusw1,7,c
 14494  012C3C  D00F               	goto	l9417
 14495                           
 14496                           ;stkvar	_grs @ sp[(-4)+0]
 14497  012C3E  0EFC               	movlw	-4
 14498  012C40  006F FF8C  F03D    	movff	plusw1,btemp+11
 14499  012C46  0E7F               	movlw	127
 14500  012C48  163D               	andwf	(btemp+11)^0,f,c
 14501  012C4A  B4D8               	btfsc	status,2,c
 14502  012C4C  D004               	goto	l9413
 14503  012C4E                     u9160:
 14504                           
 14505                           ;stkvar	_aexp @ sp[(-4)+2]
 14506  012C4E  0EFE               	movlw	-2
 14507  012C50  6AE3               	clrf	plusw1,c
 14508  012C52  2AE3               	incf	plusw1,f,c
 14509  012C54  D003               	goto	l9417
 14510  012C56                     l9413:
 14511                           
 14512                           ;stkvar	_b @ sp[(-4)+-4]
 14513  012C56  0EF8               	movlw	-8
 14514  012C58  B0E3               	btfsc	plusw1,0,c
 14515  012C5A  D7F9               	goto	u9160
 14516  012C5C                     l9417:
 14517                           
 14518                           ;stkvar	_aexp @ sp[(-4)+2]
 14519  012C5C  0EFE               	movlw	-2
 14520  012C5E  50E3               	movf	plusw1,w,c
 14521  012C60  B4D8               	btfsc	status,2,c
 14522  012C62  D02B               	goto	l9429
 14523                           
 14524                           ;stkvar	_b @ sp[(-4)+-4]
 14525  012C64  50E1               	movf	fsr1l,w,c
 14526  012C66  0FF8               	addlw	-8
 14527  012C68  6ED9               	movwf	fsr2l,c
 14528  012C6A  50E2               	movf	fsr1h,w,c
 14529  012C6C  6EDA               	movwf	fsr2h,c
 14530  012C6E  0EFF               	movlw	255
 14531  012C70  22DA               	addwfc	fsr2h,f,c
 14532  012C72  2ADE               	incf	postinc2,f,c
 14533  012C74  0E00               	movlw	0
 14534  012C76  22DE               	addwfc	postinc2,f,c
 14535  012C78  22DE               	addwfc	postinc2,f,c
 14536  012C7A  22DE               	addwfc	postinc2,f,c
 14537                           
 14538                           ;stkvar	_b @ sp[(-4)+-4]
 14539  012C7C  0EFB               	movlw	-5
 14540  012C7E  A0E3               	btfss	plusw1,0,c
 14541  012C80  D01C               	goto	l9429
 14542  012C82  0E01               	movlw	1
 14543  012C84  6E3D               	movwf	(btemp+11)^0,c
 14544                           
 14545                           ;stkvar	_b @ sp[(-4)+-4]
 14546  012C86  50E1               	movf	fsr1l,w,c
 14547  012C88  0FF8               	addlw	-8
 14548  012C8A  6ED9               	movwf	fsr2l,c
 14549  012C8C  50E2               	movf	fsr1h,w,c
 14550  012C8E  6EDA               	movwf	fsr2h,c
 14551  012C90  0EFF               	movlw	255
 14552  012C92  22DA               	addwfc	fsr2h,f,c
 14553  012C94  283D               	incf	(btemp+11)^0,w,c
 14554  012C96  52DE               	movf	postinc2,f,c
 14555  012C98  D008               	goto	u9200
 14556  012C9A                     u9205:
 14557  012C9A  52DE               	movf	postinc2,f,c
 14558  012C9C  90D8               	bcf	status,0,c
 14559  012C9E  BEDC               	btfsc	preinc2,7,c
 14560  012CA0  80D8               	bsf	status,0,c
 14561  012CA2  32DD               	rrcf	postdec2,f,c
 14562  012CA4  32DD               	rrcf	postdec2,f,c
 14563  012CA6  32DD               	rrcf	postdec2,f,c
 14564  012CA8  32DE               	rrcf	postinc2,f,c
 14565  012CAA                     u9200:
 14566  012CAA  2EE8               	decfsz	wreg,f,c
 14567  012CAC  D7F6               	goto	u9205
 14568                           
 14569                           ;stkvar	_bexp @ sp[(-4)+1]
 14570  012CAE  0EFD               	movlw	-3
 14571  012CB0  28E3               	incf	plusw1,w,c
 14572  012CB2  B4D8               	btfsc	status,2,c
 14573  012CB4  D002               	goto	l9429
 14574                           
 14575                           ;stkvar	_bexp @ sp[(-4)+1]
 14576  012CB6  0EFD               	movlw	-3
 14577  012CB8  2AE3               	incf	plusw1,f,c
 14578  012CBA                     l9429:
 14579                           
 14580                           ;stkvar	_bexp @ sp[(-4)+1]
 14581  012CBA  0EFD               	movlw	-3
 14582  012CBC  28E3               	incf	plusw1,w,c
 14583  012CBE  B4D8               	btfsc	status,2,c
 14584  012CC0  D004               	goto	u9230
 14585                           
 14586                           ;stkvar	_bexp @ sp[(-4)+1]
 14587  012CC2  0EFD               	movlw	-3
 14588  012CC4  50E3               	movf	plusw1,w,c
 14589  012CC6  A4D8               	btfss	status,2,c
 14590  012CC8  D00E               	goto	l9439
 14591  012CCA                     u9230:
 14592                           
 14593                           ;stkvar	_b @ sp[(-4)+-4]
 14594  012CCA  0EF8               	movlw	-8
 14595  012CCC  6AE3               	clrf	plusw1,c
 14596  012CCE  0EF9               	movlw	-7
 14597  012CD0  6AE3               	clrf	plusw1,c
 14598  012CD2  0EFA               	movlw	-6
 14599  012CD4  6AE3               	clrf	plusw1,c
 14600  012CD6  0EFB               	movlw	-5
 14601  012CD8  6AE3               	clrf	plusw1,c
 14602                           
 14603                           ;stkvar	_bexp @ sp[(-4)+1]
 14604  012CDA  0EFD               	movlw	-3
 14605  012CDC  50E3               	movf	plusw1,w,c
 14606  012CDE  A4D8               	btfss	status,2,c
 14607  012CE0  D002               	goto	l9439
 14608                           
 14609                           ;stkvar	_signs @ sp[(-4)+3]
 14610  012CE2  0EFF               	movlw	-1
 14611  012CE4  6AE3               	clrf	plusw1,c
 14612  012CE6                     l9439:
 14613                           
 14614                           ;stkvar	_bexp @ sp[(-4)+1]
 14615  012CE6  0EFD               	movlw	-3
 14616  012CE8  A0E3               	btfss	plusw1,0,c
 14617  012CEA  D009               	goto	l9443
 14618                           
 14619                           ;stkvar	_b @ sp[(-4)+-4]
 14620  012CEC  0EFA               	movlw	250
 14621  012CEE  24E1               	addwf	fsr1l,w,c
 14622  012CF0  6ED9               	movwf	fsr2l,c
 14623  012CF2  0EFF               	movlw	255
 14624  012CF4  20E2               	addwfc	fsr1h,w,c
 14625  012CF6  6EDA               	movwf	fsr2h,c
 14626  012CF8  0E00               	movlw	0
 14627  012CFA  8EDB               	bsf	plusw2,7,c
 14628  012CFC  D008               	goto	l9445
 14629  012CFE                     l9443:
 14630                           
 14631                           ;stkvar	_b @ sp[(-4)+-4]
 14632  012CFE  0EFA               	movlw	250
 14633  012D00  24E1               	addwf	fsr1l,w,c
 14634  012D02  6ED9               	movwf	fsr2l,c
 14635  012D04  0EFF               	movlw	255
 14636  012D06  20E2               	addwfc	fsr1h,w,c
 14637  012D08  6EDA               	movwf	fsr2h,c
 14638  012D0A  0E7F               	movlw	127
 14639  012D0C  16DF               	andwf	indf2,f,c
 14640  012D0E                     l9445:
 14641                           
 14642                           ;stkvar	_b @ sp[(-4)+-4]
 14643  012D0E  0EFB               	movlw	251
 14644  012D10  24E1               	addwf	fsr1l,w,c
 14645  012D12  6ED9               	movwf	fsr2l,c
 14646  012D14  0EFF               	movlw	255
 14647  012D16  20E2               	addwfc	fsr1h,w,c
 14648  012D18  6EDA               	movwf	fsr2h,c
 14649                           
 14650                           ;stkvar	_bexp @ sp[(-4)+1]
 14651  012D1A  0EFD               	movlw	-3
 14652  012D1C  006F FF8C  F03D    	movff	plusw1,btemp+11
 14653  012D22  90D8               	bcf	status,0,c
 14654  012D24  303D               	rrcf	(btemp+11)^0,w,c
 14655  012D26  6EDF               	movwf	indf2,c
 14656                           
 14657                           ;stkvar	_signs @ sp[(-4)+3]
 14658  012D28  0EFF               	movlw	-1
 14659  012D2A  AEE3               	btfss	plusw1,7,c
 14660  012D2C  D008               	goto	l9451
 14661                           
 14662                           ;stkvar	_b @ sp[(-4)+-4]
 14663  012D2E  0EFB               	movlw	251
 14664  012D30  24E1               	addwf	fsr1l,w,c
 14665  012D32  6ED9               	movwf	fsr2l,c
 14666  012D34  0EFF               	movlw	255
 14667  012D36  20E2               	addwfc	fsr1h,w,c
 14668  012D38  6EDA               	movwf	fsr2h,c
 14669  012D3A  0E00               	movlw	0
 14670  012D3C  8EDB               	bsf	plusw2,7,c
 14671  012D3E                     l9451:
 14672                           
 14673                           ;stkvar	_b @ sp[(-4)+-4]
 14674  012D3E  0EF8               	movlw	-8
 14675  012D40  006F FF8C  F032    	movff	plusw1,btemp
 14676  012D46  0EF9               	movlw	-7
 14677  012D48  006F FF8C  F033    	movff	plusw1,btemp+1
 14678  012D4E  0EFA               	movlw	-6
 14679  012D50  006F FF8C  F034    	movff	plusw1,btemp+2
 14680  012D56  0EFB               	movlw	-5
 14681  012D58  006F FF8C  F035    	movff	plusw1,btemp+3
 14682  012D5E                     l2579:
 14683                           
 14684                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 14685  012D5E  0EF4               	movlw	244
 14686  012D60  26E1               	addwf	fsr1l,f,c
 14687  012D62  0EFF               	movlw	255
 14688  012D64  22E2               	addwfc	fsr1h,f,c
 14689  012D66  0012               	return		;funcret
 14690  012D68                     __end_of___fladd:
 14691                           	opt callstack 0
 14692                           
 14693 ;; *************** function ___flneg *****************
 14694 ;; Defined at:
 14695 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 14696 ;; Parameters:    Size  Location     Type
 14697 ;;  f1              4  [STACK] unsigned char 
 14698 ;; Auto vars:     Size  Location     Type
 14699 ;;		None
 14700 ;; Return value:  Size  Location     Type
 14701 ;;                  4  [STACK] unsigned char 
 14702 ;; Registers used:
 14703 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 14704 ;; Tracked objects:
 14705 ;;		On entry : 0/5
 14706 ;;		On exit  : 0/0
 14707 ;;		Unchanged: 0/0
 14708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14712 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14713 ;;Total ram usage:        0 bytes
 14714 ;; Hardware stack levels used:    1
 14715 ;; Hardware stack levels required when called:    6
 14716 ;; This function calls:
 14717 ;;		Nothing
 14718 ;; This function is called by:
 14719 ;;		_efgtoa
 14720 ;; This function uses a reentrant model
 14721 ;;
 14722                           
 14723                           	psect	text54
 14724  017A7A                     __ptext54:
 14725                           	opt callstack 0
 14726  017A7A                     ___flneg:
 14727                           	opt callstack 17
 14728                           
 14729                           ;stkvar	_f1 @ sp[(0)+-4]
 14730                           
 14731                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14732                           ;incstack = 0
 14733  017A7A  0EFC               	movlw	-4
 14734  017A7C  50E3               	movf	plusw1,w,c
 14735  017A7E  E10A               	bnz	u10540
 14736  017A80  0EFD               	movlw	-3
 14737  017A82  50E3               	movf	plusw1,w,c
 14738  017A84  E107               	bnz	u10540
 14739  017A86  0EFE               	movlw	-2
 14740  017A88  50E3               	movf	plusw1,w,c
 14741  017A8A  E104               	bnz	u10540
 14742  017A8C  0EFF               	movlw	-1
 14743  017A8E  50E3               	movf	plusw1,w,c
 14744  017A90  B4D8               	btfsc	status,2,c
 14745  017A92  D002               	goto	l10119
 14746  017A94                     u10540:
 14747                           
 14748                           ;stkvar	_f1 @ sp[(0)+-4]
 14749  017A94  0EFF               	movlw	-1
 14750  017A96  7EE3               	btg	plusw1,7,c
 14751  017A98                     l10119:
 14752                           
 14753                           ;stkvar	_f1 @ sp[(0)+-4]
 14754  017A98  0EFC               	movlw	-4
 14755  017A9A  006F FF8C  F032    	movff	plusw1,btemp
 14756  017AA0  0EFD               	movlw	-3
 14757  017AA2  006F FF8C  F033    	movff	plusw1,btemp+1
 14758  017AA8  0EFE               	movlw	-2
 14759  017AAA  006F FF8C  F034    	movff	plusw1,btemp+2
 14760  017AB0  0EFF               	movlw	-1
 14761  017AB2  006F FF8C  F035    	movff	plusw1,btemp+3
 14762                           
 14763                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 14764  017AB8  52E5               	movf	postdec1,f,c
 14765  017ABA  52E5               	movf	postdec1,f,c
 14766  017ABC  52E5               	movf	postdec1,f,c
 14767  017ABE  52E5               	movf	postdec1,f,c
 14768  017AC0  0012               	return		;funcret
 14769  017AC2                     __end_of___flneg:
 14770                           	opt callstack 0
 14771                           
 14772 ;; *************** function ___flmul *****************
 14773 ;; Defined at:
 14774 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 14775 ;; Parameters:    Size  Location     Type
 14776 ;;  b               4  [STACK] unsigned char 
 14777 ;;  a               4  [STACK] unsigned char 
 14778 ;; Auto vars:     Size  Location     Type
 14779 ;;  prod            4  [STACK] struct .
 14780 ;;  grs             4  [STACK] unsigned long 
 14781 ;;  temp            2  [STACK] struct .
 14782 ;;  bexp            1  [STACK] unsigned char 
 14783 ;;  aexp            1  [STACK] unsigned char 
 14784 ;;  sign            1  [STACK] unsigned char 
 14785 ;; Return value:  Size  Location     Type
 14786 ;;                  4  [STACK] unsigned char 
 14787 ;; Registers used:
 14788 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 14789 ;; Tracked objects:
 14790 ;;		On entry : 0/39
 14791 ;;		On exit  : 0/0
 14792 ;;		Unchanged: 0/0
 14793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14798 ;;Total ram usage:        0 bytes
 14799 ;; Hardware stack levels used:    1
 14800 ;; Hardware stack levels required when called:    6
 14801 ;; This function calls:
 14802 ;;		Nothing
 14803 ;; This function is called by:
 14804 ;;		_conv_raw_result
 14805 ;;		_lp_filter
 14806 ;;		_efgtoa
 14807 ;; This function uses a reentrant model
 14808 ;;
 14809                           
 14810                           	psect	text55
 14811  011D82                     __ptext55:
 14812                           	opt callstack 0
 14813  011D82                     ___flmul:
 14814                           	opt callstack 0
 14815                           
 14816                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 14817  011D82  0E0D               	movlw	13
 14818  011D84  26E1               	addwf	fsr1l,f,c
 14819  011D86  0E00               	movlw	0
 14820  011D88  22E2               	addwfc	fsr1h,f,c
 14821                           
 14822                           ;stkvar	_b @ sp[(-13)+-4]
 14823                           
 14824                           ;incstack = 0
 14825  011D8A  0EF2               	movlw	242
 14826  011D8C  24E1               	addwf	fsr1l,w,c
 14827  011D8E  6ED9               	movwf	fsr2l,c
 14828  011D90  0EFF               	movlw	255
 14829  011D92  20E2               	addwfc	fsr1h,w,c
 14830  011D94  6EDA               	movwf	fsr2h,c
 14831  011D96  50DF               	movf	indf2,w,c
 14832  011D98  6E3D               	movwf	(btemp+11)^0,c
 14833  011D9A  0E80               	movlw	128
 14834  011D9C  163D               	andwf	(btemp+11)^0,f,c
 14835                           
 14836                           ;stkvar	_sign @ sp[(-13)+12]
 14837  011D9E  0EFF               	movlw	-1
 14838  011DA0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14839                           
 14840                           ;stkvar	_b @ sp[(-13)+-4]
 14841  011DA6  0EF2               	movlw	242
 14842  011DA8  24E1               	addwf	fsr1l,w,c
 14843  011DAA  6ED9               	movwf	fsr2l,c
 14844  011DAC  0EFF               	movlw	255
 14845  011DAE  20E2               	addwfc	fsr1h,w,c
 14846  011DB0  6EDA               	movwf	fsr2h,c
 14847  011DB2  50DF               	movf	indf2,w,c
 14848  011DB4  6E3D               	movwf	(btemp+11)^0,c
 14849  011DB6  90D8               	bcf	status,0,c
 14850  011DB8  343D               	rlcf	(btemp+11)^0,w,c
 14851  011DBA  6E3C               	movwf	(btemp+10)^0,c
 14852                           
 14853                           ;stkvar	_bexp @ sp[(-13)+10]
 14854  011DBC  0EFD               	movlw	-3
 14855  011DBE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14856                           
 14857                           ;stkvar	_b @ sp[(-13)+-4]
 14858  011DC4  0EF1               	movlw	241
 14859  011DC6  24E1               	addwf	fsr1l,w,c
 14860  011DC8  6ED9               	movwf	fsr2l,c
 14861  011DCA  0EFF               	movlw	255
 14862  011DCC  20E2               	addwfc	fsr1h,w,c
 14863  011DCE  6EDA               	movwf	fsr2h,c
 14864  011DD0  AEDF               	btfss	indf2,7,c
 14865  011DD2  D002               	goto	l9835
 14866                           
 14867                           ;stkvar	_bexp @ sp[(-13)+10]
 14868  011DD4  0EFD               	movlw	-3
 14869  011DD6  80E3               	bsf	plusw1,0,c
 14870  011DD8                     l9835:
 14871                           
 14872                           ;stkvar	_bexp @ sp[(-13)+10]
 14873  011DD8  0EFD               	movlw	-3
 14874  011DDA  50E3               	movf	plusw1,w,c
 14875  011DDC  B4D8               	btfsc	status,2,c
 14876  011DDE  D01F               	goto	l9843
 14877                           
 14878                           ;stkvar	_bexp @ sp[(-13)+10]
 14879  011DE0  0EFD               	movlw	-3
 14880  011DE2  28E3               	incf	plusw1,w,c
 14881  011DE4  A4D8               	btfss	status,2,c
 14882  011DE6  D018               	goto	l9841
 14883  011DE8  0E00               	movlw	0
 14884  011DEA  6E3A               	movwf	(btemp+8)^0,c
 14885  011DEC  0E00               	movlw	0
 14886  011DEE  6E3B               	movwf	(btemp+9)^0,c
 14887  011DF0  0E00               	movlw	0
 14888  011DF2  6E3C               	movwf	(btemp+10)^0,c
 14889  011DF4  0E00               	movlw	0
 14890  011DF6  6E3D               	movwf	(btemp+11)^0,c
 14891                           
 14892                           ;stkvar	_b @ sp[(-13)+-4]
 14893  011DF8  0EEF               	movlw	-17
 14894  011DFA  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 14895  011E00  0EF0               	movlw	-16
 14896  011E02  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 14897  011E08  0EF1               	movlw	-15
 14898  011E0A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14899  011E10  0EF2               	movlw	-14
 14900  011E12  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14901  011E18                     l9841:
 14902                           
 14903                           ;stkvar	_b @ sp[(-13)+-4]
 14904  011E18  0EF1               	movlw	-15
 14905  011E1A  8EE3               	bsf	plusw1,7,c
 14906  011E1C  D018               	goto	l9845
 14907  011E1E                     l9843:
 14908  011E1E  0E00               	movlw	0
 14909  011E20  6E3A               	movwf	(btemp+8)^0,c
 14910  011E22  0E00               	movlw	0
 14911  011E24  6E3B               	movwf	(btemp+9)^0,c
 14912  011E26  0E00               	movlw	0
 14913  011E28  6E3C               	movwf	(btemp+10)^0,c
 14914  011E2A  0E00               	movlw	0
 14915  011E2C  6E3D               	movwf	(btemp+11)^0,c
 14916                           
 14917                           ;stkvar	_b @ sp[(-13)+-4]
 14918  011E2E  0EEF               	movlw	-17
 14919  011E30  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 14920  011E36  0EF0               	movlw	-16
 14921  011E38  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 14922  011E3E  0EF1               	movlw	-15
 14923  011E40  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14924  011E46  0EF2               	movlw	-14
 14925  011E48  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14926  011E4E                     l9845:
 14927                           
 14928                           ;stkvar	_a @ sp[(-13)+-8]
 14929  011E4E  0EEE               	movlw	238
 14930  011E50  24E1               	addwf	fsr1l,w,c
 14931  011E52  6ED9               	movwf	fsr2l,c
 14932  011E54  0EFF               	movlw	255
 14933  011E56  20E2               	addwfc	fsr1h,w,c
 14934  011E58  6EDA               	movwf	fsr2h,c
 14935  011E5A  50DF               	movf	indf2,w,c
 14936  011E5C  6E3D               	movwf	(btemp+11)^0,c
 14937  011E5E  0E80               	movlw	128
 14938  011E60  163D               	andwf	(btemp+11)^0,f,c
 14939                           
 14940                           ;stkvar	_sign @ sp[(-13)+12]
 14941  011E62  50E1               	movf	fsr1l,w,c
 14942  011E64  0FFF               	addlw	-1
 14943  011E66  6ED9               	movwf	fsr2l,c
 14944  011E68  50E2               	movf	fsr1h,w,c
 14945  011E6A  6EDA               	movwf	fsr2h,c
 14946  011E6C  0EFF               	movlw	255
 14947  011E6E  22DA               	addwfc	fsr2h,f,c
 14948  011E70  503D               	movf	(btemp+11)^0,w,c
 14949  011E72  1ADF               	xorwf	indf2,f,c
 14950                           
 14951                           ;stkvar	_a @ sp[(-13)+-8]
 14952  011E74  0EEE               	movlw	238
 14953  011E76  24E1               	addwf	fsr1l,w,c
 14954  011E78  6ED9               	movwf	fsr2l,c
 14955  011E7A  0EFF               	movlw	255
 14956  011E7C  20E2               	addwfc	fsr1h,w,c
 14957  011E7E  6EDA               	movwf	fsr2h,c
 14958  011E80  50DF               	movf	indf2,w,c
 14959  011E82  6E3D               	movwf	(btemp+11)^0,c
 14960  011E84  90D8               	bcf	status,0,c
 14961  011E86  343D               	rlcf	(btemp+11)^0,w,c
 14962  011E88  6E3C               	movwf	(btemp+10)^0,c
 14963                           
 14964                           ;stkvar	_aexp @ sp[(-13)+11]
 14965  011E8A  0EFE               	movlw	-2
 14966  011E8C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14967                           
 14968                           ;stkvar	_a @ sp[(-13)+-8]
 14969  011E92  0EED               	movlw	237
 14970  011E94  24E1               	addwf	fsr1l,w,c
 14971  011E96  6ED9               	movwf	fsr2l,c
 14972  011E98  0EFF               	movlw	255
 14973  011E9A  20E2               	addwfc	fsr1h,w,c
 14974  011E9C  6EDA               	movwf	fsr2h,c
 14975  011E9E  AEDF               	btfss	indf2,7,c
 14976  011EA0  D002               	goto	l9853
 14977                           
 14978                           ;stkvar	_aexp @ sp[(-13)+11]
 14979  011EA2  0EFE               	movlw	-2
 14980  011EA4  80E3               	bsf	plusw1,0,c
 14981  011EA6                     l9853:
 14982                           
 14983                           ;stkvar	_aexp @ sp[(-13)+11]
 14984  011EA6  0EFE               	movlw	-2
 14985  011EA8  50E3               	movf	plusw1,w,c
 14986  011EAA  B4D8               	btfsc	status,2,c
 14987  011EAC  D01F               	goto	l9861
 14988                           
 14989                           ;stkvar	_aexp @ sp[(-13)+11]
 14990  011EAE  0EFE               	movlw	-2
 14991  011EB0  28E3               	incf	plusw1,w,c
 14992  011EB2  A4D8               	btfss	status,2,c
 14993  011EB4  D018               	goto	l9859
 14994  011EB6  0E00               	movlw	0
 14995  011EB8  6E3A               	movwf	(btemp+8)^0,c
 14996  011EBA  0E00               	movlw	0
 14997  011EBC  6E3B               	movwf	(btemp+9)^0,c
 14998  011EBE  0E00               	movlw	0
 14999  011EC0  6E3C               	movwf	(btemp+10)^0,c
 15000  011EC2  0E00               	movlw	0
 15001  011EC4  6E3D               	movwf	(btemp+11)^0,c
 15002                           
 15003                           ;stkvar	_a @ sp[(-13)+-8]
 15004  011EC6  0EEB               	movlw	-21
 15005  011EC8  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 15006  011ECE  0EEC               	movlw	-20
 15007  011ED0  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 15008  011ED6  0EED               	movlw	-19
 15009  011ED8  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15010  011EDE  0EEE               	movlw	-18
 15011  011EE0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15012  011EE6                     l9859:
 15013                           
 15014                           ;stkvar	_a @ sp[(-13)+-8]
 15015  011EE6  0EED               	movlw	-19
 15016  011EE8  8EE3               	bsf	plusw1,7,c
 15017  011EEA  D018               	goto	l9863
 15018  011EEC                     l9861:
 15019  011EEC  0E00               	movlw	0
 15020  011EEE  6E3A               	movwf	(btemp+8)^0,c
 15021  011EF0  0E00               	movlw	0
 15022  011EF2  6E3B               	movwf	(btemp+9)^0,c
 15023  011EF4  0E00               	movlw	0
 15024  011EF6  6E3C               	movwf	(btemp+10)^0,c
 15025  011EF8  0E00               	movlw	0
 15026  011EFA  6E3D               	movwf	(btemp+11)^0,c
 15027                           
 15028                           ;stkvar	_a @ sp[(-13)+-8]
 15029  011EFC  0EEB               	movlw	-21
 15030  011EFE  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 15031  011F04  0EEC               	movlw	-20
 15032  011F06  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 15033  011F0C  0EED               	movlw	-19
 15034  011F0E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15035  011F14  0EEE               	movlw	-18
 15036  011F16  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15037  011F1C                     l9863:
 15038                           
 15039                           ;stkvar	_aexp @ sp[(-13)+11]
 15040  011F1C  0EFE               	movlw	-2
 15041  011F1E  50E3               	movf	plusw1,w,c
 15042  011F20  B4D8               	btfsc	status,2,c
 15043  011F22  D004               	goto	u10170
 15044                           
 15045                           ;stkvar	_bexp @ sp[(-13)+10]
 15046  011F24  0EFD               	movlw	-3
 15047  011F26  50E3               	movf	plusw1,w,c
 15048  011F28  A4D8               	btfss	status,2,c
 15049  011F2A  D009               	goto	l9871
 15050  011F2C                     u10170:
 15051  011F2C  0E00               	movlw	0
 15052  011F2E  6E32               	movwf	btemp^0,c
 15053  011F30  0E00               	movlw	0
 15054  011F32  6E33               	movwf	(btemp+1)^0,c
 15055  011F34  0E00               	movlw	0
 15056  011F36  6E34               	movwf	(btemp+2)^0,c
 15057  011F38  0E00               	movlw	0
 15058  011F3A  6E35               	movwf	(btemp+3)^0,c
 15059  011F3C  D332               	goto	l2660
 15060  011F3E                     l9871:
 15061                           
 15062                           ;stkvar	_b @ sp[(-13)+-4]
 15063  011F3E  0EEF               	movlw	-17
 15064  011F40  006F FF8C  F03D    	movff	plusw1,btemp+11
 15065                           
 15066                           ;stkvar	_a @ sp[(-13)+-8]
 15067  011F46  0EED               	movlw	237
 15068  011F48  24E1               	addwf	fsr1l,w,c
 15069  011F4A  6ED9               	movwf	fsr2l,c
 15070  011F4C  0EFF               	movlw	255
 15071  011F4E  20E2               	addwfc	fsr1h,w,c
 15072  011F50  6EDA               	movwf	fsr2h,c
 15073  011F52  50DF               	movf	indf2,w,c
 15074  011F54  023D               	mulwf	(btemp+11)^0,c
 15075                           
 15076                           ;stkvar	_temp @ sp[(-13)+8]
 15077  011F56  0EFB               	movlw	-5
 15078  011F58  006F FFCF FFE3     	movff	prodl,plusw1
 15079  011F5E  0EFC               	movlw	-4
 15080  011F60  006F FFD3 FFE3     	movff	prodh,plusw1
 15081                           
 15082                           ;stkvar	_temp @ sp[(-13)+8]
 15083  011F66  0EFB               	movlw	-5
 15084  011F68  006F FF8C  F03D    	movff	plusw1,btemp+11
 15085  011F6E  0060  F0F4  F036   	movff	btemp+11,btemp+4
 15086  011F74  6A37               	clrf	(btemp+5)^0,c
 15087  011F76  6A38               	clrf	(btemp+6)^0,c
 15088  011F78  6A39               	clrf	(btemp+7)^0,c
 15089                           
 15090                           ;stkvar	_grs @ sp[(-13)+4]
 15091  011F7A  0EF7               	movlw	-9
 15092  011F7C  0060  F0DB  FFE3   	movff	btemp+4,plusw1
 15093  011F82  0EF8               	movlw	-8
 15094  011F84  0060  F0DF  FFE3   	movff	btemp+5,plusw1
 15095  011F8A  0EF9               	movlw	-7
 15096  011F8C  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 15097  011F92  0EFA               	movlw	-6
 15098  011F94  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 15099                           
 15100                           ;stkvar	_temp @ sp[(-13)+8]
 15101  011F9A  0EFC               	movlw	252
 15102  011F9C  24E1               	addwf	fsr1l,w,c
 15103  011F9E  6ED9               	movwf	fsr2l,c
 15104  011FA0  0EFF               	movlw	255
 15105  011FA2  20E2               	addwfc	fsr1h,w,c
 15106  011FA4  6EDA               	movwf	fsr2h,c
 15107  011FA6  50DF               	movf	indf2,w,c
 15108  011FA8  6E3D               	movwf	(btemp+11)^0,c
 15109  011FAA  0060  F0F4  F036   	movff	btemp+11,btemp+4
 15110  011FB0  6A37               	clrf	(btemp+5)^0,c
 15111  011FB2  6A38               	clrf	(btemp+6)^0,c
 15112  011FB4  6A39               	clrf	(btemp+7)^0,c
 15113                           
 15114                           ;stkvar	_prod @ sp[(-13)+0]
 15115  011FB6  0EF3               	movlw	-13
 15116  011FB8  0060  F0DB  FFE3   	movff	btemp+4,plusw1
 15117  011FBE  0EF4               	movlw	-12
 15118  011FC0  0060  F0DF  FFE3   	movff	btemp+5,plusw1
 15119  011FC6  0EF5               	movlw	-11
 15120  011FC8  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 15121  011FCE  0EF6               	movlw	-10
 15122  011FD0  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 15123                           
 15124                           ;stkvar	_b @ sp[(-13)+-4]
 15125  011FD6  0EF0               	movlw	240
 15126  011FD8  24E1               	addwf	fsr1l,w,c
 15127  011FDA  6ED9               	movwf	fsr2l,c
 15128  011FDC  0EFF               	movlw	255
 15129  011FDE  20E2               	addwfc	fsr1h,w,c
 15130  011FE0  6EDA               	movwf	fsr2h,c
 15131  011FE2  50DF               	movf	indf2,w,c
 15132  011FE4  6E3D               	movwf	(btemp+11)^0,c
 15133                           
 15134                           ;stkvar	_a @ sp[(-13)+-8]
 15135  011FE6  0EEC               	movlw	236
 15136  011FE8  24E1               	addwf	fsr1l,w,c
 15137  011FEA  6ED9               	movwf	fsr2l,c
 15138  011FEC  0EFF               	movlw	255
 15139  011FEE  20E2               	addwfc	fsr1h,w,c
 15140  011FF0  6EDA               	movwf	fsr2h,c
 15141  011FF2  50DF               	movf	indf2,w,c
 15142  011FF4  023D               	mulwf	(btemp+11)^0,c
 15143                           
 15144                           ;stkvar	_temp @ sp[(-13)+8]
 15145  011FF6  0EFB               	movlw	-5
 15146  011FF8  006F FFCF FFE3     	movff	prodl,plusw1
 15147  011FFE  0EFC               	movlw	-4
 15148  012000  006F FFD3 FFE3     	movff	prodh,plusw1
 15149                           
 15150                           ;stkvar	_grs @ sp[(-13)+4]
 15151  012006  50E1               	movf	fsr1l,w,c
 15152  012008  0FF7               	addlw	-9
 15153  01200A  6ED9               	movwf	fsr2l,c
 15154  01200C  50E2               	movf	fsr1h,w,c
 15155  01200E  6EDA               	movwf	fsr2h,c
 15156  012010  0EFF               	movlw	255
 15157  012012  22DA               	addwfc	fsr2h,f,c
 15158                           
 15159                           ;stkvar	_temp @ sp[(-13)+8]
 15160  012014  0EFB               	movlw	-5
 15161  012016  50E3               	movf	plusw1,w,c
 15162  012018  26DE               	addwf	postinc2,f,c
 15163  01201A  0E00               	movlw	0
 15164  01201C  22DE               	addwfc	postinc2,f,c
 15165  01201E  22DE               	addwfc	postinc2,f,c
 15166  012020  22DE               	addwfc	postinc2,f,c
 15167                           
 15168                           ;stkvar	_prod @ sp[(-13)+0]
 15169  012022  50E1               	movf	fsr1l,w,c
 15170  012024  0FF3               	addlw	-13
 15171  012026  6ED9               	movwf	fsr2l,c
 15172  012028  50E2               	movf	fsr1h,w,c
 15173  01202A  6EDA               	movwf	fsr2h,c
 15174  01202C  0EFF               	movlw	255
 15175  01202E  22DA               	addwfc	fsr2h,f,c
 15176                           
 15177                           ;stkvar	_temp @ sp[(-13)+8]
 15178  012030  0EFC               	movlw	252
 15179  012032  24E1               	addwf	fsr1l,w,c
 15180  012034  6EE9               	movwf	fsr0l,c
 15181  012036  0EFF               	movlw	255
 15182  012038  20E2               	addwfc	fsr1h,w,c
 15183  01203A  6EEA               	movwf	fsr0h,c
 15184  01203C  50EF               	movf	indf0,w,c
 15185  01203E  26DE               	addwf	postinc2,f,c
 15186  012040  0E00               	movlw	0
 15187  012042  22DE               	addwfc	postinc2,f,c
 15188  012044  22DE               	addwfc	postinc2,f,c
 15189  012046  22DE               	addwfc	postinc2,f,c
 15190                           
 15191                           ;stkvar	_b @ sp[(-13)+-4]
 15192  012048  0EF1               	movlw	241
 15193  01204A  24E1               	addwf	fsr1l,w,c
 15194  01204C  6ED9               	movwf	fsr2l,c
 15195  01204E  0EFF               	movlw	255
 15196  012050  20E2               	addwfc	fsr1h,w,c
 15197  012052  6EDA               	movwf	fsr2h,c
 15198  012054  50DF               	movf	indf2,w,c
 15199  012056  6E3D               	movwf	(btemp+11)^0,c
 15200                           
 15201                           ;stkvar	_a @ sp[(-13)+-8]
 15202  012058  0EEB               	movlw	-21
 15203  01205A  50E3               	movf	plusw1,w,c
 15204  01205C  023D               	mulwf	(btemp+11)^0,c
 15205                           
 15206                           ;stkvar	_temp @ sp[(-13)+8]
 15207  01205E  0EFB               	movlw	-5
 15208  012060  006F FFCF FFE3     	movff	prodl,plusw1
 15209  012066  0EFC               	movlw	-4
 15210  012068  006F FFD3 FFE3     	movff	prodh,plusw1
 15211                           
 15212                           ;stkvar	_grs @ sp[(-13)+4]
 15213  01206E  50E1               	movf	fsr1l,w,c
 15214  012070  0FF7               	addlw	-9
 15215  012072  6ED9               	movwf	fsr2l,c
 15216  012074  50E2               	movf	fsr1h,w,c
 15217  012076  6EDA               	movwf	fsr2h,c
 15218  012078  0EFF               	movlw	255
 15219  01207A  22DA               	addwfc	fsr2h,f,c
 15220                           
 15221                           ;stkvar	_temp @ sp[(-13)+8]
 15222  01207C  0EFB               	movlw	-5
 15223  01207E  50E3               	movf	plusw1,w,c
 15224  012080  26DE               	addwf	postinc2,f,c
 15225  012082  0E00               	movlw	0
 15226  012084  22DE               	addwfc	postinc2,f,c
 15227  012086  22DE               	addwfc	postinc2,f,c
 15228  012088  22DE               	addwfc	postinc2,f,c
 15229                           
 15230                           ;stkvar	_prod @ sp[(-13)+0]
 15231  01208A  50E1               	movf	fsr1l,w,c
 15232  01208C  0FF3               	addlw	-13
 15233  01208E  6ED9               	movwf	fsr2l,c
 15234  012090  50E2               	movf	fsr1h,w,c
 15235  012092  6EDA               	movwf	fsr2h,c
 15236  012094  0EFF               	movlw	255
 15237  012096  22DA               	addwfc	fsr2h,f,c
 15238                           
 15239                           ;stkvar	_temp @ sp[(-13)+8]
 15240  012098  0EFC               	movlw	252
 15241  01209A  24E1               	addwf	fsr1l,w,c
 15242  01209C  6EE9               	movwf	fsr0l,c
 15243  01209E  0EFF               	movlw	255
 15244  0120A0  20E2               	addwfc	fsr1h,w,c
 15245  0120A2  6EEA               	movwf	fsr0h,c
 15246  0120A4  50EF               	movf	indf0,w,c
 15247  0120A6  26DE               	addwf	postinc2,f,c
 15248  0120A8  0E00               	movlw	0
 15249  0120AA  22DE               	addwfc	postinc2,f,c
 15250  0120AC  22DE               	addwfc	postinc2,f,c
 15251  0120AE  22DE               	addwfc	postinc2,f,c
 15252                           
 15253                           ;stkvar	_grs @ sp[(-13)+4]
 15254  0120B0  50E1               	movf	fsr1l,w,c
 15255  0120B2  0FF7               	addlw	-9
 15256  0120B4  6ED9               	movwf	fsr2l,c
 15257  0120B6  50E2               	movf	fsr1h,w,c
 15258  0120B8  6EDA               	movwf	fsr2h,c
 15259  0120BA  0EFF               	movlw	255
 15260  0120BC  22DA               	addwfc	fsr2h,f,c
 15261  0120BE  0E08               	movlw	8
 15262  0120C0                     u10185:
 15263  0120C0  90D8               	bcf	status,0,c
 15264  0120C2  36DE               	rlcf	postinc2,f,c
 15265  0120C4  36DE               	rlcf	postinc2,f,c
 15266  0120C6  36DE               	rlcf	postinc2,f,c
 15267  0120C8  36DD               	rlcf	postdec2,f,c
 15268  0120CA  52DD               	movf	postdec2,f,c
 15269  0120CC  52DD               	movf	postdec2,f,c
 15270  0120CE  2EE8               	decfsz	wreg,f,c
 15271  0120D0  D7F7               	goto	u10185
 15272                           
 15273                           ;stkvar	_b @ sp[(-13)+-4]
 15274  0120D2  0EF0               	movlw	240
 15275  0120D4  24E1               	addwf	fsr1l,w,c
 15276  0120D6  6ED9               	movwf	fsr2l,c
 15277  0120D8  0EFF               	movlw	255
 15278  0120DA  20E2               	addwfc	fsr1h,w,c
 15279  0120DC  6EDA               	movwf	fsr2h,c
 15280  0120DE  50DF               	movf	indf2,w,c
 15281  0120E0  6E3D               	movwf	(btemp+11)^0,c
 15282                           
 15283                           ;stkvar	_a @ sp[(-13)+-8]
 15284  0120E2  0EEB               	movlw	-21
 15285  0120E4  50E3               	movf	plusw1,w,c
 15286  0120E6  023D               	mulwf	(btemp+11)^0,c
 15287                           
 15288                           ;stkvar	_temp @ sp[(-13)+8]
 15289  0120E8  0EFB               	movlw	-5
 15290  0120EA  006F FFCF FFE3     	movff	prodl,plusw1
 15291  0120F0  0EFC               	movlw	-4
 15292  0120F2  006F FFD3 FFE3     	movff	prodh,plusw1
 15293                           
 15294                           ;stkvar	_temp @ sp[(-13)+8]
 15295  0120F8  0EFB               	movlw	-5
 15296  0120FA  006F FF8C  F03C    	movff	plusw1,btemp+10
 15297  012100  0EFC               	movlw	-4
 15298  012102  006F FF8C  F03D    	movff	plusw1,btemp+11
 15299                           
 15300                           ;stkvar	_grs @ sp[(-13)+4]
 15301  012108  50E1               	movf	fsr1l,w,c
 15302  01210A  0FF7               	addlw	-9
 15303  01210C  6ED9               	movwf	fsr2l,c
 15304  01210E  50E2               	movf	fsr1h,w,c
 15305  012110  6EDA               	movwf	fsr2h,c
 15306  012112  0EFF               	movlw	255
 15307  012114  22DA               	addwfc	fsr2h,f,c
 15308  012116  503C               	movf	(btemp+10)^0,w,c
 15309  012118  26DE               	addwf	postinc2,f,c
 15310  01211A  503D               	movf	(btemp+11)^0,w,c
 15311  01211C  22DE               	addwfc	postinc2,f,c
 15312  01211E  0E00               	movlw	0
 15313  012120  22DE               	addwfc	postinc2,f,c
 15314  012122  22DE               	addwfc	postinc2,f,c
 15315                           
 15316                           ;stkvar	_b @ sp[(-13)+-4]
 15317  012124  0EEF               	movlw	-17
 15318  012126  006F FF8C  F03D    	movff	plusw1,btemp+11
 15319                           
 15320                           ;stkvar	_a @ sp[(-13)+-8]
 15321  01212C  0EEC               	movlw	236
 15322  01212E  24E1               	addwf	fsr1l,w,c
 15323  012130  6ED9               	movwf	fsr2l,c
 15324  012132  0EFF               	movlw	255
 15325  012134  20E2               	addwfc	fsr1h,w,c
 15326  012136  6EDA               	movwf	fsr2h,c
 15327  012138  50DF               	movf	indf2,w,c
 15328  01213A  023D               	mulwf	(btemp+11)^0,c
 15329                           
 15330                           ;stkvar	_temp @ sp[(-13)+8]
 15331  01213C  0EFB               	movlw	-5
 15332  01213E  006F FFCF FFE3     	movff	prodl,plusw1
 15333  012144  0EFC               	movlw	-4
 15334  012146  006F FFD3 FFE3     	movff	prodh,plusw1
 15335                           
 15336                           ;stkvar	_temp @ sp[(-13)+8]
 15337  01214C  0EFB               	movlw	-5
 15338  01214E  006F FF8C  F03C    	movff	plusw1,btemp+10
 15339  012154  0EFC               	movlw	-4
 15340  012156  006F FF8C  F03D    	movff	plusw1,btemp+11
 15341                           
 15342                           ;stkvar	_grs @ sp[(-13)+4]
 15343  01215C  50E1               	movf	fsr1l,w,c
 15344  01215E  0FF7               	addlw	-9
 15345  012160  6ED9               	movwf	fsr2l,c
 15346  012162  50E2               	movf	fsr1h,w,c
 15347  012164  6EDA               	movwf	fsr2h,c
 15348  012166  0EFF               	movlw	255
 15349  012168  22DA               	addwfc	fsr2h,f,c
 15350  01216A  503C               	movf	(btemp+10)^0,w,c
 15351  01216C  26DE               	addwf	postinc2,f,c
 15352  01216E  503D               	movf	(btemp+11)^0,w,c
 15353  012170  22DE               	addwfc	postinc2,f,c
 15354  012172  0E00               	movlw	0
 15355  012174  22DE               	addwfc	postinc2,f,c
 15356  012176  22DE               	addwfc	postinc2,f,c
 15357                           
 15358                           ;stkvar	_grs @ sp[(-13)+4]
 15359  012178  50E1               	movf	fsr1l,w,c
 15360  01217A  0FF7               	addlw	-9
 15361  01217C  6ED9               	movwf	fsr2l,c
 15362  01217E  50E2               	movf	fsr1h,w,c
 15363  012180  6EDA               	movwf	fsr2h,c
 15364  012182  0EFF               	movlw	255
 15365  012184  22DA               	addwfc	fsr2h,f,c
 15366  012186  0E08               	movlw	8
 15367  012188                     u10195:
 15368  012188  90D8               	bcf	status,0,c
 15369  01218A  36DE               	rlcf	postinc2,f,c
 15370  01218C  36DE               	rlcf	postinc2,f,c
 15371  01218E  36DE               	rlcf	postinc2,f,c
 15372  012190  36DD               	rlcf	postdec2,f,c
 15373  012192  52DD               	movf	postdec2,f,c
 15374  012194  52DD               	movf	postdec2,f,c
 15375  012196  2EE8               	decfsz	wreg,f,c
 15376  012198  D7F7               	goto	u10195
 15377                           
 15378                           ;stkvar	_b @ sp[(-13)+-4]
 15379  01219A  0EEF               	movlw	-17
 15380  01219C  006F FF8C  F03D    	movff	plusw1,btemp+11
 15381                           
 15382                           ;stkvar	_a @ sp[(-13)+-8]
 15383  0121A2  0EEB               	movlw	-21
 15384  0121A4  50E3               	movf	plusw1,w,c
 15385  0121A6  023D               	mulwf	(btemp+11)^0,c
 15386                           
 15387                           ;stkvar	_temp @ sp[(-13)+8]
 15388  0121A8  0EFB               	movlw	-5
 15389  0121AA  006F FFCF FFE3     	movff	prodl,plusw1
 15390  0121B0  0EFC               	movlw	-4
 15391  0121B2  006F FFD3 FFE3     	movff	prodh,plusw1
 15392                           
 15393                           ;stkvar	_temp @ sp[(-13)+8]
 15394  0121B8  0EFB               	movlw	-5
 15395  0121BA  006F FF8C  F03C    	movff	plusw1,btemp+10
 15396  0121C0  0EFC               	movlw	-4
 15397  0121C2  006F FF8C  F03D    	movff	plusw1,btemp+11
 15398                           
 15399                           ;stkvar	_grs @ sp[(-13)+4]
 15400  0121C8  50E1               	movf	fsr1l,w,c
 15401  0121CA  0FF7               	addlw	-9
 15402  0121CC  6ED9               	movwf	fsr2l,c
 15403  0121CE  50E2               	movf	fsr1h,w,c
 15404  0121D0  6EDA               	movwf	fsr2h,c
 15405  0121D2  0EFF               	movlw	255
 15406  0121D4  22DA               	addwfc	fsr2h,f,c
 15407  0121D6  503C               	movf	(btemp+10)^0,w,c
 15408  0121D8  26DE               	addwf	postinc2,f,c
 15409  0121DA  503D               	movf	(btemp+11)^0,w,c
 15410  0121DC  22DE               	addwfc	postinc2,f,c
 15411  0121DE  0E00               	movlw	0
 15412  0121E0  22DE               	addwfc	postinc2,f,c
 15413  0121E2  22DE               	addwfc	postinc2,f,c
 15414                           
 15415                           ;stkvar	_b @ sp[(-13)+-4]
 15416  0121E4  0EF0               	movlw	240
 15417  0121E6  24E1               	addwf	fsr1l,w,c
 15418  0121E8  6ED9               	movwf	fsr2l,c
 15419  0121EA  0EFF               	movlw	255
 15420  0121EC  20E2               	addwfc	fsr1h,w,c
 15421  0121EE  6EDA               	movwf	fsr2h,c
 15422  0121F0  50DF               	movf	indf2,w,c
 15423  0121F2  6E3D               	movwf	(btemp+11)^0,c
 15424                           
 15425                           ;stkvar	_a @ sp[(-13)+-8]
 15426  0121F4  0EED               	movlw	237
 15427  0121F6  24E1               	addwf	fsr1l,w,c
 15428  0121F8  6ED9               	movwf	fsr2l,c
 15429  0121FA  0EFF               	movlw	255
 15430  0121FC  20E2               	addwfc	fsr1h,w,c
 15431  0121FE  6EDA               	movwf	fsr2h,c
 15432  012200  50DF               	movf	indf2,w,c
 15433  012202  023D               	mulwf	(btemp+11)^0,c
 15434                           
 15435                           ;stkvar	_temp @ sp[(-13)+8]
 15436  012204  0EFB               	movlw	-5
 15437  012206  006F FFCF FFE3     	movff	prodl,plusw1
 15438  01220C  0EFC               	movlw	-4
 15439  01220E  006F FFD3 FFE3     	movff	prodh,plusw1
 15440                           
 15441                           ;stkvar	_temp @ sp[(-13)+8]
 15442  012214  0EFB               	movlw	-5
 15443  012216  006F FF8C  F03C    	movff	plusw1,btemp+10
 15444  01221C  0EFC               	movlw	-4
 15445  01221E  006F FF8C  F03D    	movff	plusw1,btemp+11
 15446                           
 15447                           ;stkvar	_prod @ sp[(-13)+0]
 15448  012224  50E1               	movf	fsr1l,w,c
 15449  012226  0FF3               	addlw	-13
 15450  012228  6ED9               	movwf	fsr2l,c
 15451  01222A  50E2               	movf	fsr1h,w,c
 15452  01222C  6EDA               	movwf	fsr2h,c
 15453  01222E  0EFF               	movlw	255
 15454  012230  22DA               	addwfc	fsr2h,f,c
 15455  012232  503C               	movf	(btemp+10)^0,w,c
 15456  012234  26DE               	addwf	postinc2,f,c
 15457  012236  503D               	movf	(btemp+11)^0,w,c
 15458  012238  22DE               	addwfc	postinc2,f,c
 15459  01223A  0E00               	movlw	0
 15460  01223C  22DE               	addwfc	postinc2,f,c
 15461  01223E  22DE               	addwfc	postinc2,f,c
 15462                           
 15463                           ;stkvar	_b @ sp[(-13)+-4]
 15464  012240  0EF1               	movlw	241
 15465  012242  24E1               	addwf	fsr1l,w,c
 15466  012244  6ED9               	movwf	fsr2l,c
 15467  012246  0EFF               	movlw	255
 15468  012248  20E2               	addwfc	fsr1h,w,c
 15469  01224A  6EDA               	movwf	fsr2h,c
 15470  01224C  50DF               	movf	indf2,w,c
 15471  01224E  6E3D               	movwf	(btemp+11)^0,c
 15472                           
 15473                           ;stkvar	_a @ sp[(-13)+-8]
 15474  012250  0EEC               	movlw	236
 15475  012252  24E1               	addwf	fsr1l,w,c
 15476  012254  6ED9               	movwf	fsr2l,c
 15477  012256  0EFF               	movlw	255
 15478  012258  20E2               	addwfc	fsr1h,w,c
 15479  01225A  6EDA               	movwf	fsr2h,c
 15480  01225C  50DF               	movf	indf2,w,c
 15481  01225E  023D               	mulwf	(btemp+11)^0,c
 15482                           
 15483                           ;stkvar	_temp @ sp[(-13)+8]
 15484  012260  0EFB               	movlw	-5
 15485  012262  006F FFCF FFE3     	movff	prodl,plusw1
 15486  012268  0EFC               	movlw	-4
 15487  01226A  006F FFD3 FFE3     	movff	prodh,plusw1
 15488                           
 15489                           ;stkvar	_temp @ sp[(-13)+8]
 15490  012270  0EFB               	movlw	-5
 15491  012272  006F FF8C  F03C    	movff	plusw1,btemp+10
 15492  012278  0EFC               	movlw	-4
 15493  01227A  006F FF8C  F03D    	movff	plusw1,btemp+11
 15494                           
 15495                           ;stkvar	_prod @ sp[(-13)+0]
 15496  012280  50E1               	movf	fsr1l,w,c
 15497  012282  0FF3               	addlw	-13
 15498  012284  6ED9               	movwf	fsr2l,c
 15499  012286  50E2               	movf	fsr1h,w,c
 15500  012288  6EDA               	movwf	fsr2h,c
 15501  01228A  0EFF               	movlw	255
 15502  01228C  22DA               	addwfc	fsr2h,f,c
 15503  01228E  503C               	movf	(btemp+10)^0,w,c
 15504  012290  26DE               	addwf	postinc2,f,c
 15505  012292  503D               	movf	(btemp+11)^0,w,c
 15506  012294  22DE               	addwfc	postinc2,f,c
 15507  012296  0E00               	movlw	0
 15508  012298  22DE               	addwfc	postinc2,f,c
 15509  01229A  22DE               	addwfc	postinc2,f,c
 15510                           
 15511                           ;stkvar	_b @ sp[(-13)+-4]
 15512  01229C  0EF1               	movlw	241
 15513  01229E  24E1               	addwf	fsr1l,w,c
 15514  0122A0  6ED9               	movwf	fsr2l,c
 15515  0122A2  0EFF               	movlw	255
 15516  0122A4  20E2               	addwfc	fsr1h,w,c
 15517  0122A6  6EDA               	movwf	fsr2h,c
 15518  0122A8  50DF               	movf	indf2,w,c
 15519  0122AA  6E3D               	movwf	(btemp+11)^0,c
 15520                           
 15521                           ;stkvar	_a @ sp[(-13)+-8]
 15522  0122AC  0EED               	movlw	237
 15523  0122AE  24E1               	addwf	fsr1l,w,c
 15524  0122B0  6ED9               	movwf	fsr2l,c
 15525  0122B2  0EFF               	movlw	255
 15526  0122B4  20E2               	addwfc	fsr1h,w,c
 15527  0122B6  6EDA               	movwf	fsr2h,c
 15528  0122B8  50DF               	movf	indf2,w,c
 15529  0122BA  023D               	mulwf	(btemp+11)^0,c
 15530                           
 15531                           ;stkvar	_temp @ sp[(-13)+8]
 15532  0122BC  0EFB               	movlw	-5
 15533  0122BE  006F FFCF FFE3     	movff	prodl,plusw1
 15534  0122C4  0EFC               	movlw	-4
 15535  0122C6  006F FFD3 FFE3     	movff	prodh,plusw1
 15536                           
 15537                           ;stkvar	_temp @ sp[(-13)+8]
 15538  0122CC  0EFB               	movlw	-5
 15539  0122CE  006F FF8C  F03C    	movff	plusw1,btemp+10
 15540  0122D4  0EFC               	movlw	-4
 15541  0122D6  006F FF8C  F03D    	movff	plusw1,btemp+11
 15542  0122DC  503C               	movf	(btemp+10)^0,w,c
 15543  0122DE  6E36               	movwf	(btemp+4)^0,c
 15544  0122E0  503D               	movf	(btemp+11)^0,w,c
 15545  0122E2  6E37               	movwf	(btemp+5)^0,c
 15546  0122E4  6A38               	clrf	(btemp+6)^0,c
 15547  0122E6  6A39               	clrf	(btemp+7)^0,c
 15548  0122E8  0060  F0E0  F039   	movff	btemp+6,btemp+7
 15549  0122EE  0060  F0DC  F038   	movff	btemp+5,btemp+6
 15550  0122F4  0060  F0D8  F037   	movff	btemp+4,btemp+5
 15551  0122FA  6A36               	clrf	(btemp+4)^0,c
 15552                           
 15553                           ;stkvar	_prod @ sp[(-13)+0]
 15554  0122FC  50E1               	movf	fsr1l,w,c
 15555  0122FE  0FF3               	addlw	-13
 15556  012300  6ED9               	movwf	fsr2l,c
 15557  012302  50E2               	movf	fsr1h,w,c
 15558  012304  6EDA               	movwf	fsr2h,c
 15559  012306  0EFF               	movlw	255
 15560  012308  22DA               	addwfc	fsr2h,f,c
 15561  01230A  5036               	movf	(btemp+4)^0,w,c
 15562  01230C  26DE               	addwf	postinc2,f,c
 15563  01230E  5037               	movf	(btemp+5)^0,w,c
 15564  012310  22DE               	addwfc	postinc2,f,c
 15565  012312  5038               	movf	(btemp+6)^0,w,c
 15566  012314  22DE               	addwfc	postinc2,f,c
 15567  012316  5039               	movf	(btemp+7)^0,w,c
 15568  012318  22DE               	addwfc	postinc2,f,c
 15569                           
 15570                           ;stkvar	_prod @ sp[(-13)+0]
 15571  01231A  50E1               	movf	fsr1l,w,c
 15572  01231C  0FF3               	addlw	-13
 15573  01231E  6ED9               	movwf	fsr2l,c
 15574  012320  50E2               	movf	fsr1h,w,c
 15575  012322  6EDA               	movwf	fsr2h,c
 15576  012324  0EFF               	movlw	255
 15577  012326  22DA               	addwfc	fsr2h,f,c
 15578                           
 15579                           ;stkvar	_grs @ sp[(-13)+4]
 15580  012328  0EFA               	movlw	250
 15581  01232A  24E1               	addwf	fsr1l,w,c
 15582  01232C  6EE9               	movwf	fsr0l,c
 15583  01232E  0EFF               	movlw	255
 15584  012330  20E2               	addwfc	fsr1h,w,c
 15585  012332  6EEA               	movwf	fsr0h,c
 15586  012334  50EF               	movf	indf0,w,c
 15587  012336  26DE               	addwf	postinc2,f,c
 15588  012338  0E00               	movlw	0
 15589  01233A  22DE               	addwfc	postinc2,f,c
 15590  01233C  22DE               	addwfc	postinc2,f,c
 15591  01233E  22DE               	addwfc	postinc2,f,c
 15592                           
 15593                           ;stkvar	_grs @ sp[(-13)+4]
 15594  012340  50E1               	movf	fsr1l,w,c
 15595  012342  0FF7               	addlw	-9
 15596  012344  6ED9               	movwf	fsr2l,c
 15597  012346  50E2               	movf	fsr1h,w,c
 15598  012348  6EDA               	movwf	fsr2h,c
 15599  01234A  0EFF               	movlw	255
 15600  01234C  22DA               	addwfc	fsr2h,f,c
 15601  01234E  0E08               	movlw	8
 15602  012350                     u10205:
 15603  012350  90D8               	bcf	status,0,c
 15604  012352  36DE               	rlcf	postinc2,f,c
 15605  012354  36DE               	rlcf	postinc2,f,c
 15606  012356  36DE               	rlcf	postinc2,f,c
 15607  012358  36DD               	rlcf	postdec2,f,c
 15608  01235A  52DD               	movf	postdec2,f,c
 15609  01235C  52DD               	movf	postdec2,f,c
 15610  01235E  2EE8               	decfsz	wreg,f,c
 15611  012360  D7F7               	goto	u10205
 15612  012362  0E82               	movlw	130
 15613  012364  6E3C               	movwf	(btemp+10)^0,c
 15614  012366  0EFF               	movlw	255
 15615  012368  6E3D               	movwf	(btemp+11)^0,c
 15616                           
 15617                           ;stkvar	_bexp @ sp[(-13)+10]
 15618  01236A  0EFD               	movlw	-3
 15619  01236C  50E3               	movf	plusw1,w,c
 15620  01236E  6E3A               	movwf	(btemp+8)^0,c
 15621  012370  6A3B               	clrf	(btemp+9)^0,c
 15622                           
 15623                           ;stkvar	_aexp @ sp[(-13)+11]
 15624  012372  0EFE               	movlw	-2
 15625  012374  50E3               	movf	plusw1,w,c
 15626  012376  263A               	addwf	(btemp+8)^0,f,c
 15627  012378  0E00               	movlw	0
 15628  01237A  223B               	addwfc	(btemp+9)^0,f,c
 15629  01237C  503C               	movf	(btemp+10)^0,w,c
 15630  01237E  263A               	addwf	(btemp+8)^0,f,c
 15631  012380  503D               	movf	(btemp+11)^0,w,c
 15632  012382  223B               	addwfc	(btemp+9)^0,f,c
 15633                           
 15634                           ;stkvar	_temp @ sp[(-13)+8]
 15635  012384  0EFB               	movlw	-5
 15636  012386  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 15637  01238C  0EFC               	movlw	-4
 15638  01238E  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 15639  012394  D021               	goto	l9933
 15640  012396                     l9923:
 15641                           
 15642                           ;stkvar	_prod @ sp[(-13)+0]
 15643  012396  90D8               	bcf	status,0,c
 15644  012398  0EF3               	movlw	-13
 15645  01239A  36E3               	rlcf	plusw1,f,c
 15646  01239C  0EF4               	movlw	-12
 15647  01239E  36E3               	rlcf	plusw1,f,c
 15648  0123A0  0EF5               	movlw	-11
 15649  0123A2  36E3               	rlcf	plusw1,f,c
 15650  0123A4  0EF6               	movlw	-10
 15651  0123A6  36E3               	rlcf	plusw1,f,c
 15652                           
 15653                           ;stkvar	_grs @ sp[(-13)+4]
 15654  0123A8  0EFA               	movlw	-6
 15655  0123AA  AEE3               	btfss	plusw1,7,c
 15656  0123AC  D002               	goto	l9929
 15657                           
 15658                           ;stkvar	_prod @ sp[(-13)+0]
 15659  0123AE  0EF3               	movlw	-13
 15660  0123B0  80E3               	bsf	plusw1,0,c
 15661  0123B2                     l9929:
 15662                           
 15663                           ;stkvar	_grs @ sp[(-13)+4]
 15664  0123B2  90D8               	bcf	status,0,c
 15665  0123B4  0EF7               	movlw	-9
 15666  0123B6  36E3               	rlcf	plusw1,f,c
 15667  0123B8  0EF8               	movlw	-8
 15668  0123BA  36E3               	rlcf	plusw1,f,c
 15669  0123BC  0EF9               	movlw	-7
 15670  0123BE  36E3               	rlcf	plusw1,f,c
 15671  0123C0  0EFA               	movlw	-6
 15672  0123C2  36E3               	rlcf	plusw1,f,c
 15673                           
 15674                           ;stkvar	_temp @ sp[(-13)+8]
 15675  0123C4  50E1               	movf	fsr1l,w,c
 15676  0123C6  0FFB               	addlw	-5
 15677  0123C8  6ED9               	movwf	fsr2l,c
 15678  0123CA  50E2               	movf	fsr1h,w,c
 15679  0123CC  6EDA               	movwf	fsr2h,c
 15680  0123CE  0EFF               	movlw	255
 15681  0123D0  22DA               	addwfc	fsr2h,f,c
 15682  0123D2  06DE               	decf	postinc2,f,c
 15683  0123D4  0E00               	movlw	0
 15684  0123D6  5ADD               	subwfb	postdec2,f,c
 15685  0123D8                     l9933:
 15686                           
 15687                           ;stkvar	_prod @ sp[(-13)+0]
 15688  0123D8  0EF5               	movlw	-11
 15689  0123DA  AEE3               	btfss	plusw1,7,c
 15690  0123DC  D7DC               	goto	l9923
 15691                           
 15692                           ;stkvar	_aexp @ sp[(-13)+11]
 15693  0123DE  0EFE               	movlw	-2
 15694  0123E0  6AE3               	clrf	plusw1,c
 15695                           
 15696                           ;stkvar	_grs @ sp[(-13)+4]
 15697  0123E2  0EFA               	movlw	-6
 15698  0123E4  AEE3               	btfss	plusw1,7,c
 15699  0123E6  D020               	goto	l9947
 15700                           
 15701                           ;stkvar	_grs @ sp[(-13)+4]
 15702  0123E8  50E1               	movf	fsr1l,w,c
 15703  0123EA  0FF7               	addlw	-9
 15704  0123EC  6ED9               	movwf	fsr2l,c
 15705  0123EE  50E2               	movf	fsr1h,w,c
 15706  0123F0  6EDA               	movwf	fsr2h,c
 15707  0123F2  0EFF               	movlw	255
 15708  0123F4  22DA               	addwfc	fsr2h,f,c
 15709  0123F6  0EFF               	movlw	255
 15710  0123F8  14DE               	andwf	postinc2,w,c
 15711  0123FA  6E3A               	movwf	(btemp+8)^0,c
 15712  0123FC  0EFF               	movlw	255
 15713  0123FE  14DE               	andwf	postinc2,w,c
 15714  012400  6E3B               	movwf	(btemp+9)^0,c
 15715  012402  0EFF               	movlw	255
 15716  012404  14DE               	andwf	postinc2,w,c
 15717  012406  6E3C               	movwf	(btemp+10)^0,c
 15718  012408  0E7F               	movlw	127
 15719  01240A  14DE               	andwf	postinc2,w,c
 15720  01240C  6E3D               	movwf	(btemp+11)^0,c
 15721  01240E  503A               	movf	(btemp+8)^0,w,c
 15722  012410  103B               	iorwf	(btemp+9)^0,w,c
 15723  012412  103C               	iorwf	(btemp+10)^0,w,c
 15724  012414  103D               	iorwf	(btemp+11)^0,w,c
 15725  012416  B4D8               	btfsc	status,2,c
 15726  012418  D004               	goto	l9943
 15727  01241A                     u10240:
 15728                           
 15729                           ;stkvar	_aexp @ sp[(-13)+11]
 15730  01241A  0EFE               	movlw	-2
 15731  01241C  6AE3               	clrf	plusw1,c
 15732  01241E  2AE3               	incf	plusw1,f,c
 15733  012420  D003               	goto	l9947
 15734  012422                     l9943:
 15735                           
 15736                           ;stkvar	_prod @ sp[(-13)+0]
 15737  012422  0EF3               	movlw	-13
 15738  012424  B0E3               	btfsc	plusw1,0,c
 15739  012426  D7F9               	goto	u10240
 15740  012428                     l9947:
 15741                           
 15742                           ;stkvar	_aexp @ sp[(-13)+11]
 15743  012428  0EFE               	movlw	-2
 15744  01242A  50E3               	movf	plusw1,w,c
 15745  01242C  B4D8               	btfsc	status,2,c
 15746  01242E  D036               	goto	l9957
 15747                           
 15748                           ;stkvar	_prod @ sp[(-13)+0]
 15749  012430  50E1               	movf	fsr1l,w,c
 15750  012432  0FF3               	addlw	-13
 15751  012434  6ED9               	movwf	fsr2l,c
 15752  012436  50E2               	movf	fsr1h,w,c
 15753  012438  6EDA               	movwf	fsr2h,c
 15754  01243A  0EFF               	movlw	255
 15755  01243C  22DA               	addwfc	fsr2h,f,c
 15756  01243E  2ADE               	incf	postinc2,f,c
 15757  012440  0E00               	movlw	0
 15758  012442  22DE               	addwfc	postinc2,f,c
 15759  012444  22DE               	addwfc	postinc2,f,c
 15760  012446  22DE               	addwfc	postinc2,f,c
 15761                           
 15762                           ;stkvar	_prod @ sp[(-13)+0]
 15763  012448  0EF6               	movlw	-10
 15764  01244A  A0E3               	btfss	plusw1,0,c
 15765  01244C  D027               	goto	l9957
 15766  01244E  0E01               	movlw	1
 15767  012450  6E3D               	movwf	(btemp+11)^0,c
 15768                           
 15769                           ;stkvar	_prod @ sp[(-13)+0]
 15770  012452  50E1               	movf	fsr1l,w,c
 15771  012454  0FF3               	addlw	-13
 15772  012456  6ED9               	movwf	fsr2l,c
 15773  012458  50E2               	movf	fsr1h,w,c
 15774  01245A  6EDA               	movwf	fsr2h,c
 15775  01245C  0EFF               	movlw	255
 15776  01245E  22DA               	addwfc	fsr2h,f,c
 15777  012460  283D               	incf	(btemp+11)^0,w,c
 15778  012462  52DE               	movf	postinc2,f,c
 15779  012464  D008               	goto	u10280
 15780  012466                     u10285:
 15781  012466  52DE               	movf	postinc2,f,c
 15782  012468  90D8               	bcf	status,0,c
 15783  01246A  BEDC               	btfsc	preinc2,7,c
 15784  01246C  80D8               	bsf	status,0,c
 15785  01246E  32DD               	rrcf	postdec2,f,c
 15786  012470  32DD               	rrcf	postdec2,f,c
 15787  012472  32DD               	rrcf	postdec2,f,c
 15788  012474  32DE               	rrcf	postinc2,f,c
 15789  012476                     u10280:
 15790  012476  2EE8               	decfsz	wreg,f,c
 15791  012478  D7F6               	goto	u10285
 15792                           
 15793                           ;stkvar	_temp @ sp[(-13)+8]
 15794  01247A  0EFB               	movlw	-5
 15795  01247C  50E3               	movf	plusw1,w,c
 15796  01247E  0F01               	addlw	1
 15797  012480  6E32               	movwf	btemp^0,c
 15798  012482  0EFB               	movlw	-5
 15799  012484  0060  F0CB  FFE3   	movff	btemp,plusw1
 15800  01248A  6A32               	clrf	btemp^0,c
 15801  01248C  0EFC               	movlw	-4
 15802  01248E  50E3               	movf	plusw1,w,c
 15803  012490  2032               	addwfc	btemp^0,w,c
 15804  012492  6E32               	movwf	btemp^0,c
 15805  012494  0EFC               	movlw	-4
 15806  012496  0060  F0CB  FFE3   	movff	btemp,plusw1
 15807  01249C                     l9957:
 15808                           
 15809                           ;stkvar	_temp @ sp[(-13)+8]
 15810  01249C  0EFC               	movlw	-4
 15811  01249E  BEE3               	btfsc	plusw1,7,c
 15812  0124A0  D020               	goto	l9961
 15813  0124A2  0EFC               	movlw	-4
 15814  0124A4  50E3               	movf	plusw1,w,c
 15815  0124A6  E104               	bnz	u10290
 15816  0124A8  0EFB               	movlw	-5
 15817  0124AA  28E3               	incf	plusw1,w,c
 15818  0124AC  A0D8               	btfss	status,0,c
 15819  0124AE  D019               	goto	l9961
 15820  0124B0                     u10290:
 15821  0124B0  0E00               	movlw	0
 15822  0124B2  6E3A               	movwf	(btemp+8)^0,c
 15823  0124B4  0E00               	movlw	0
 15824  0124B6  6E3B               	movwf	(btemp+9)^0,c
 15825  0124B8  0E80               	movlw	128
 15826  0124BA  6E3C               	movwf	(btemp+10)^0,c
 15827  0124BC  0E7F               	movlw	127
 15828  0124BE  6E3D               	movwf	(btemp+11)^0,c
 15829                           
 15830                           ;stkvar	_prod @ sp[(-13)+0]
 15831  0124C0  0EF3               	movlw	-13
 15832  0124C2  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 15833  0124C8  0EF4               	movlw	-12
 15834  0124CA  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 15835  0124D0  0EF5               	movlw	-11
 15836  0124D2  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15837  0124D8  0EF6               	movlw	-10
 15838  0124DA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15839  0124E0  D044               	goto	l9977
 15840  0124E2                     l9961:
 15841                           
 15842                           ;stkvar	_temp @ sp[(-13)+8]
 15843  0124E2  0EFC               	movlw	-4
 15844  0124E4  BEE3               	btfsc	plusw1,7,c
 15845  0124E6  D007               	goto	u10300
 15846  0124E8  0EFC               	movlw	-4
 15847  0124EA  50E3               	movf	plusw1,w,c
 15848  0124EC  E10F               	bnz	l9967
 15849  0124EE  0EFB               	movlw	-5
 15850  0124F0  04E3               	decf	plusw1,w,c
 15851  0124F2  B0D8               	btfsc	status,0,c
 15852  0124F4  D00B               	goto	l9967
 15853  0124F6                     u10300:
 15854                           
 15855                           ;stkvar	_prod @ sp[(-13)+0]
 15856  0124F6  0EF3               	movlw	-13
 15857  0124F8  6AE3               	clrf	plusw1,c
 15858  0124FA  0EF4               	movlw	-12
 15859  0124FC  6AE3               	clrf	plusw1,c
 15860  0124FE  0EF5               	movlw	-11
 15861  012500  6AE3               	clrf	plusw1,c
 15862  012502  0EF6               	movlw	-10
 15863  012504  6AE3               	clrf	plusw1,c
 15864                           
 15865                           ;stkvar	_sign @ sp[(-13)+12]
 15866  012506  0EFF               	movlw	-1
 15867  012508  6AE3               	clrf	plusw1,c
 15868  01250A  D02F               	goto	l9977
 15869  01250C                     l9967:
 15870                           
 15871                           ;stkvar	_temp @ sp[(-13)+8]
 15872                           ;stkvar	_bexp @ sp[(-13)+10]
 15873  01250C  0EFB               	movlw	-5
 15874  01250E  006F FF8C  F032    	movff	plusw1,btemp
 15875  012514  0EFD               	movlw	-3
 15876  012516  0060  F0CB  FFE3   	movff	btemp,plusw1
 15877                           
 15878                           ;stkvar	_prod @ sp[(-13)+0]
 15879  01251C  50E1               	movf	fsr1l,w,c
 15880  01251E  0FF3               	addlw	-13
 15881  012520  6ED9               	movwf	fsr2l,c
 15882  012522  50E2               	movf	fsr1h,w,c
 15883  012524  6EDA               	movwf	fsr2h,c
 15884  012526  0EFF               	movlw	255
 15885  012528  22DA               	addwfc	fsr2h,f,c
 15886  01252A  0EFF               	movlw	255
 15887  01252C  16DE               	andwf	postinc2,f,c
 15888  01252E  0EFF               	movlw	255
 15889  012530  16DE               	andwf	postinc2,f,c
 15890  012532  0E7F               	movlw	127
 15891  012534  16DE               	andwf	postinc2,f,c
 15892  012536  0E00               	movlw	0
 15893  012538  16DE               	andwf	postinc2,f,c
 15894                           
 15895                           ;stkvar	_bexp @ sp[(-13)+10]
 15896  01253A  0EFD               	movlw	-3
 15897  01253C  A0E3               	btfss	plusw1,0,c
 15898  01253E  D008               	goto	l9975
 15899                           
 15900                           ;stkvar	_prod @ sp[(-13)+0]
 15901  012540  0EF5               	movlw	245
 15902  012542  24E1               	addwf	fsr1l,w,c
 15903  012544  6ED9               	movwf	fsr2l,c
 15904  012546  0EFF               	movlw	255
 15905  012548  20E2               	addwfc	fsr1h,w,c
 15906  01254A  6EDA               	movwf	fsr2h,c
 15907  01254C  0E00               	movlw	0
 15908  01254E  8EDB               	bsf	plusw2,7,c
 15909  012550                     l9975:
 15910                           
 15911                           ;stkvar	_prod @ sp[(-13)+0]
 15912  012550  0EF6               	movlw	246
 15913  012552  24E1               	addwf	fsr1l,w,c
 15914  012554  6ED9               	movwf	fsr2l,c
 15915  012556  0EFF               	movlw	255
 15916  012558  20E2               	addwfc	fsr1h,w,c
 15917  01255A  6EDA               	movwf	fsr2h,c
 15918                           
 15919                           ;stkvar	_bexp @ sp[(-13)+10]
 15920  01255C  0EFD               	movlw	-3
 15921  01255E  006F FF8C  F03D    	movff	plusw1,btemp+11
 15922  012564  90D8               	bcf	status,0,c
 15923  012566  303D               	rrcf	(btemp+11)^0,w,c
 15924  012568  6EDF               	movwf	indf2,c
 15925  01256A                     l9977:
 15926                           
 15927                           ;stkvar	_sign @ sp[(-13)+12]
 15928  01256A  0EFF               	movlw	-1
 15929  01256C  006F FF8C  F03D    	movff	plusw1,btemp+11
 15930                           
 15931                           ;stkvar	_prod @ sp[(-13)+0]
 15932  012572  0EF6               	movlw	246
 15933  012574  24E1               	addwf	fsr1l,w,c
 15934  012576  6ED9               	movwf	fsr2l,c
 15935  012578  0EFF               	movlw	255
 15936  01257A  20E2               	addwfc	fsr1h,w,c
 15937  01257C  6EDA               	movwf	fsr2h,c
 15938  01257E  503D               	movf	(btemp+11)^0,w,c
 15939  012580  12DF               	iorwf	indf2,f,c
 15940                           
 15941                           ;stkvar	_prod @ sp[(-13)+0]
 15942  012582  0EF3               	movlw	-13
 15943  012584  006F FF8C  F032    	movff	plusw1,btemp
 15944  01258A  0EF4               	movlw	-12
 15945  01258C  006F FF8C  F033    	movff	plusw1,btemp+1
 15946  012592  0EF5               	movlw	-11
 15947  012594  006F FF8C  F034    	movff	plusw1,btemp+2
 15948  01259A  0EF6               	movlw	-10
 15949  01259C  006F FF8C  F035    	movff	plusw1,btemp+3
 15950  0125A2                     l2660:
 15951                           
 15952                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 15953  0125A2  0EEB               	movlw	235
 15954  0125A4  26E1               	addwf	fsr1l,f,c
 15955  0125A6  0EFF               	movlw	255
 15956  0125A8  22E2               	addwfc	fsr1h,f,c
 15957  0125AA  0012               	return		;funcret
 15958  0125AC                     __end_of___flmul:
 15959                           	opt callstack 0
 15960                           
 15961 ;; *************** function ___flge *****************
 15962 ;; Defined at:
 15963 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 15964 ;; Parameters:    Size  Location     Type
 15965 ;;  ff1             4  [STACK] unsigned char 
 15966 ;;  ff2             4  [STACK] unsigned char 
 15967 ;; Auto vars:     Size  Location     Type
 15968 ;;		None
 15969 ;; Return value:  Size  Location     Type
 15970 ;;		None               void
 15971 ;; Registers used:
 15972 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 15973 ;; Tracked objects:
 15974 ;;		On entry : 0/5
 15975 ;;		On exit  : 0/0
 15976 ;;		Unchanged: 0/0
 15977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15982 ;;Total ram usage:        0 bytes
 15983 ;; Hardware stack levels used:    1
 15984 ;; Hardware stack levels required when called:    6
 15985 ;; This function calls:
 15986 ;;		Nothing
 15987 ;; This function is called by:
 15988 ;;		_efgtoa
 15989 ;; This function uses a reentrant model
 15990 ;;
 15991                           
 15992                           	psect	text56
 15993  015F9C                     __ptext56:
 15994                           	opt callstack 0
 15995  015F9C                     ___flge:
 15996                           	opt callstack 17
 15997                           
 15998                           ;stkvar	_ff1 @ sp[(0)+-4]
 15999                           
 16000                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16001                           ;incstack = 0
 16002  015F9C  50E1               	movf	fsr1l,w,c
 16003  015F9E  0FFC               	addlw	-4
 16004  015FA0  6ED9               	movwf	fsr2l,c
 16005  015FA2  50E2               	movf	fsr1h,w,c
 16006  015FA4  6EDA               	movwf	fsr2h,c
 16007  015FA6  0EFF               	movlw	255
 16008  015FA8  22DA               	addwfc	fsr2h,f,c
 16009  015FAA  0E00               	movlw	0
 16010  015FAC  14DE               	andwf	postinc2,w,c
 16011  015FAE  6E3A               	movwf	(btemp+8)^0,c
 16012  015FB0  0E00               	movlw	0
 16013  015FB2  14DE               	andwf	postinc2,w,c
 16014  015FB4  6E3B               	movwf	(btemp+9)^0,c
 16015  015FB6  0E80               	movlw	128
 16016  015FB8  14DE               	andwf	postinc2,w,c
 16017  015FBA  6E3C               	movwf	(btemp+10)^0,c
 16018  015FBC  0E7F               	movlw	127
 16019  015FBE  14DE               	andwf	postinc2,w,c
 16020  015FC0  6E3D               	movwf	(btemp+11)^0,c
 16021  015FC2  503A               	movf	(btemp+8)^0,w,c
 16022  015FC4  103B               	iorwf	(btemp+9)^0,w,c
 16023  015FC6  103C               	iorwf	(btemp+10)^0,w,c
 16024  015FC8  103D               	iorwf	(btemp+11)^0,w,c
 16025  015FCA  A4D8               	btfss	status,2,c
 16026  015FCC  D008               	goto	l10093
 16027                           
 16028                           ;stkvar	_ff1 @ sp[(0)+-4]
 16029  015FCE  0EFC               	movlw	-4
 16030  015FD0  6AE3               	clrf	plusw1,c
 16031  015FD2  0EFD               	movlw	-3
 16032  015FD4  6AE3               	clrf	plusw1,c
 16033  015FD6  0EFE               	movlw	-2
 16034  015FD8  6AE3               	clrf	plusw1,c
 16035  015FDA  0EFF               	movlw	-1
 16036  015FDC  6AE3               	clrf	plusw1,c
 16037  015FDE                     l10093:
 16038                           
 16039                           ;stkvar	_ff2 @ sp[(0)+-8]
 16040  015FDE  50E1               	movf	fsr1l,w,c
 16041  015FE0  0FF8               	addlw	-8
 16042  015FE2  6ED9               	movwf	fsr2l,c
 16043  015FE4  50E2               	movf	fsr1h,w,c
 16044  015FE6  6EDA               	movwf	fsr2h,c
 16045  015FE8  0EFF               	movlw	255
 16046  015FEA  22DA               	addwfc	fsr2h,f,c
 16047  015FEC  0E00               	movlw	0
 16048  015FEE  14DE               	andwf	postinc2,w,c
 16049  015FF0  6E3A               	movwf	(btemp+8)^0,c
 16050  015FF2  0E00               	movlw	0
 16051  015FF4  14DE               	andwf	postinc2,w,c
 16052  015FF6  6E3B               	movwf	(btemp+9)^0,c
 16053  015FF8  0E80               	movlw	128
 16054  015FFA  14DE               	andwf	postinc2,w,c
 16055  015FFC  6E3C               	movwf	(btemp+10)^0,c
 16056  015FFE  0E7F               	movlw	127
 16057  016000  14DE               	andwf	postinc2,w,c
 16058  016002  6E3D               	movwf	(btemp+11)^0,c
 16059  016004  503A               	movf	(btemp+8)^0,w,c
 16060  016006  103B               	iorwf	(btemp+9)^0,w,c
 16061  016008  103C               	iorwf	(btemp+10)^0,w,c
 16062  01600A  103D               	iorwf	(btemp+11)^0,w,c
 16063  01600C  A4D8               	btfss	status,2,c
 16064  01600E  D008               	goto	l2305
 16065                           
 16066                           ;stkvar	_ff2 @ sp[(0)+-8]
 16067  016010  0EF8               	movlw	-8
 16068  016012  6AE3               	clrf	plusw1,c
 16069  016014  0EF9               	movlw	-7
 16070  016016  6AE3               	clrf	plusw1,c
 16071  016018  0EFA               	movlw	-6
 16072  01601A  6AE3               	clrf	plusw1,c
 16073  01601C  0EFB               	movlw	-5
 16074  01601E  6AE3               	clrf	plusw1,c
 16075  016020                     l2305:
 16076                           
 16077                           ;stkvar	_ff1 @ sp[(0)+-4]
 16078  016020  0EFF               	movlw	-1
 16079  016022  AEE3               	btfss	plusw1,7,c
 16080  016024  D024               	goto	l10099
 16081                           
 16082                           ;stkvar	_ff1 @ sp[(0)+-4]
 16083  016026  0E00               	movlw	0
 16084  016028  6E3A               	movwf	(btemp+8)^0,c
 16085  01602A  0E00               	movlw	0
 16086  01602C  6E3B               	movwf	(btemp+9)^0,c
 16087  01602E  0E00               	movlw	0
 16088  016030  6E3C               	movwf	(btemp+10)^0,c
 16089  016032  0E80               	movlw	128
 16090  016034  6E3D               	movwf	(btemp+11)^0,c
 16091  016036  0EFC               	movlw	-4
 16092  016038  50E3               	movf	plusw1,w,c
 16093  01603A  5E3A               	subwf	(btemp+8)^0,f,c
 16094  01603C  0EFD               	movlw	-3
 16095  01603E  50E3               	movf	plusw1,w,c
 16096  016040  5A3B               	subwfb	(btemp+9)^0,f,c
 16097  016042  0EFE               	movlw	-2
 16098  016044  50E3               	movf	plusw1,w,c
 16099  016046  5A3C               	subwfb	(btemp+10)^0,f,c
 16100  016048  0EFF               	movlw	-1
 16101  01604A  50E3               	movf	plusw1,w,c
 16102  01604C  5A3D               	subwfb	(btemp+11)^0,f,c
 16103                           
 16104                           ;stkvar	_ff1 @ sp[(0)+-4]
 16105  01604E  0EFC               	movlw	-4
 16106  016050  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 16107  016056  0EFD               	movlw	-3
 16108  016058  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 16109  01605E  0EFE               	movlw	-2
 16110  016060  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16111  016066  0EFF               	movlw	-1
 16112  016068  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16113  01606E                     l10099:
 16114                           
 16115                           ;stkvar	_ff2 @ sp[(0)+-8]
 16116  01606E  0EFB               	movlw	-5
 16117  016070  AEE3               	btfss	plusw1,7,c
 16118  016072  D024               	goto	l10103
 16119                           
 16120                           ;stkvar	_ff2 @ sp[(0)+-8]
 16121  016074  0E00               	movlw	0
 16122  016076  6E3A               	movwf	(btemp+8)^0,c
 16123  016078  0E00               	movlw	0
 16124  01607A  6E3B               	movwf	(btemp+9)^0,c
 16125  01607C  0E00               	movlw	0
 16126  01607E  6E3C               	movwf	(btemp+10)^0,c
 16127  016080  0E80               	movlw	128
 16128  016082  6E3D               	movwf	(btemp+11)^0,c
 16129  016084  0EF8               	movlw	-8
 16130  016086  50E3               	movf	plusw1,w,c
 16131  016088  5E3A               	subwf	(btemp+8)^0,f,c
 16132  01608A  0EF9               	movlw	-7
 16133  01608C  50E3               	movf	plusw1,w,c
 16134  01608E  5A3B               	subwfb	(btemp+9)^0,f,c
 16135  016090  0EFA               	movlw	-6
 16136  016092  50E3               	movf	plusw1,w,c
 16137  016094  5A3C               	subwfb	(btemp+10)^0,f,c
 16138  016096  0EFB               	movlw	-5
 16139  016098  50E3               	movf	plusw1,w,c
 16140  01609A  5A3D               	subwfb	(btemp+11)^0,f,c
 16141                           
 16142                           ;stkvar	_ff2 @ sp[(0)+-8]
 16143  01609C  0EF8               	movlw	-8
 16144  01609E  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 16145  0160A4  0EF9               	movlw	-7
 16146  0160A6  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 16147  0160AC  0EFA               	movlw	-6
 16148  0160AE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16149  0160B4  0EFB               	movlw	-5
 16150  0160B6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16151  0160BC                     l10103:
 16152                           
 16153                           ;stkvar	_ff1 @ sp[(0)+-4]
 16154  0160BC  0EFF               	movlw	-1
 16155  0160BE  7EE3               	btg	plusw1,7,c
 16156                           
 16157                           ;stkvar	_ff2 @ sp[(0)+-8]
 16158  0160C0  0EFB               	movlw	-5
 16159  0160C2  7EE3               	btg	plusw1,7,c
 16160                           
 16161                           ;stkvar	_ff2 @ sp[(0)+-8]
 16162                           ;stkvar	_ff1 @ sp[(0)+-4]
 16163  0160C4  50E1               	movf	fsr1l,w,c
 16164  0160C6  0FFC               	addlw	-4
 16165  0160C8  6ED9               	movwf	fsr2l,c
 16166  0160CA  50E2               	movf	fsr1h,w,c
 16167  0160CC  6EDA               	movwf	fsr2h,c
 16168  0160CE  0EFF               	movlw	255
 16169  0160D0  22DA               	addwfc	fsr2h,f,c
 16170  0160D2  0EF8               	movlw	-8
 16171  0160D4  50E3               	movf	plusw1,w,c
 16172  0160D6  5CDE               	subwf	postinc2,w,c
 16173  0160D8  0EF9               	movlw	-7
 16174  0160DA  50E3               	movf	plusw1,w,c
 16175  0160DC  58DE               	subwfb	postinc2,w,c
 16176  0160DE  0EFA               	movlw	-6
 16177  0160E0  50E3               	movf	plusw1,w,c
 16178  0160E2  58DE               	subwfb	postinc2,w,c
 16179  0160E4  0EFB               	movlw	-5
 16180  0160E6  50E3               	movf	plusw1,w,c
 16181  0160E8  58DE               	subwfb	postinc2,w,c
 16182  0160EA  B0D8               	btfsc	status,0,c
 16183  0160EC  D002               	goto	l10111
 16184  0160EE  9032               	bcf	btemp& (0+255),0,c
 16185  0160F0  D001               	goto	l2312
 16186  0160F2                     l10111:
 16187  0160F2  8032               	bsf	btemp& (0+255),0,c
 16188  0160F4                     l2312:
 16189                           
 16190                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 16191  0160F4  0EF8               	movlw	248
 16192  0160F6  26E1               	addwf	fsr1l,f,c
 16193  0160F8  0EFF               	movlw	255
 16194  0160FA  22E2               	addwfc	fsr1h,f,c
 16195  0160FC  0012               	return		;funcret
 16196  0160FE                     __end_of___flge:
 16197                           	opt callstack 0
 16198                           
 16199 ;; *************** function ___fleq *****************
 16200 ;; Defined at:
 16201 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 16202 ;; Parameters:    Size  Location     Type
 16203 ;;  ff1             4  [STACK] unsigned char 
 16204 ;;  ff2             4  [STACK] unsigned char 
 16205 ;; Auto vars:     Size  Location     Type
 16206 ;;		None
 16207 ;; Return value:  Size  Location     Type
 16208 ;;		None               void
 16209 ;; Registers used:
 16210 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 16211 ;; Tracked objects:
 16212 ;;		On entry : 0/5
 16213 ;;		On exit  : 0/0
 16214 ;;		Unchanged: 0/0
 16215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16220 ;;Total ram usage:        0 bytes
 16221 ;; Hardware stack levels used:    1
 16222 ;; Hardware stack levels required when called:    6
 16223 ;; This function calls:
 16224 ;;		Nothing
 16225 ;; This function is called by:
 16226 ;;		_efgtoa
 16227 ;; This function uses a reentrant model
 16228 ;;
 16229                           
 16230                           	psect	text57
 16231  016CDC                     __ptext57:
 16232                           	opt callstack 0
 16233  016CDC                     ___fleq:
 16234                           	opt callstack 17
 16235                           
 16236                           ;stkvar	_ff1 @ sp[(0)+-4]
 16237                           
 16238                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16239                           ;incstack = 0
 16240  016CDC  50E1               	movf	fsr1l,w,c
 16241  016CDE  0FFC               	addlw	-4
 16242  016CE0  6ED9               	movwf	fsr2l,c
 16243  016CE2  50E2               	movf	fsr1h,w,c
 16244  016CE4  6EDA               	movwf	fsr2h,c
 16245  016CE6  0EFF               	movlw	255
 16246  016CE8  22DA               	addwfc	fsr2h,f,c
 16247  016CEA  0E00               	movlw	0
 16248  016CEC  14DE               	andwf	postinc2,w,c
 16249  016CEE  6E3A               	movwf	(btemp+8)^0,c
 16250  016CF0  0E00               	movlw	0
 16251  016CF2  14DE               	andwf	postinc2,w,c
 16252  016CF4  6E3B               	movwf	(btemp+9)^0,c
 16253  016CF6  0E80               	movlw	128
 16254  016CF8  14DE               	andwf	postinc2,w,c
 16255  016CFA  6E3C               	movwf	(btemp+10)^0,c
 16256  016CFC  0E7F               	movlw	127
 16257  016CFE  14DE               	andwf	postinc2,w,c
 16258  016D00  6E3D               	movwf	(btemp+11)^0,c
 16259  016D02  503A               	movf	(btemp+8)^0,w,c
 16260  016D04  103B               	iorwf	(btemp+9)^0,w,c
 16261  016D06  103C               	iorwf	(btemp+10)^0,w,c
 16262  016D08  103D               	iorwf	(btemp+11)^0,w,c
 16263  016D0A  A4D8               	btfss	status,2,c
 16264  016D0C  D008               	goto	l10077
 16265                           
 16266                           ;stkvar	_ff1 @ sp[(0)+-4]
 16267  016D0E  0EFC               	movlw	-4
 16268  016D10  6AE3               	clrf	plusw1,c
 16269  016D12  0EFD               	movlw	-3
 16270  016D14  6AE3               	clrf	plusw1,c
 16271  016D16  0EFE               	movlw	-2
 16272  016D18  6AE3               	clrf	plusw1,c
 16273  016D1A  0EFF               	movlw	-1
 16274  016D1C  6AE3               	clrf	plusw1,c
 16275  016D1E                     l10077:
 16276                           
 16277                           ;stkvar	_ff2 @ sp[(0)+-8]
 16278  016D1E  50E1               	movf	fsr1l,w,c
 16279  016D20  0FF8               	addlw	-8
 16280  016D22  6ED9               	movwf	fsr2l,c
 16281  016D24  50E2               	movf	fsr1h,w,c
 16282  016D26  6EDA               	movwf	fsr2h,c
 16283  016D28  0EFF               	movlw	255
 16284  016D2A  22DA               	addwfc	fsr2h,f,c
 16285  016D2C  0E00               	movlw	0
 16286  016D2E  14DE               	andwf	postinc2,w,c
 16287  016D30  6E3A               	movwf	(btemp+8)^0,c
 16288  016D32  0E00               	movlw	0
 16289  016D34  14DE               	andwf	postinc2,w,c
 16290  016D36  6E3B               	movwf	(btemp+9)^0,c
 16291  016D38  0E80               	movlw	128
 16292  016D3A  14DE               	andwf	postinc2,w,c
 16293  016D3C  6E3C               	movwf	(btemp+10)^0,c
 16294  016D3E  0E7F               	movlw	127
 16295  016D40  14DE               	andwf	postinc2,w,c
 16296  016D42  6E3D               	movwf	(btemp+11)^0,c
 16297  016D44  503A               	movf	(btemp+8)^0,w,c
 16298  016D46  103B               	iorwf	(btemp+9)^0,w,c
 16299  016D48  103C               	iorwf	(btemp+10)^0,w,c
 16300  016D4A  103D               	iorwf	(btemp+11)^0,w,c
 16301  016D4C  A4D8               	btfss	status,2,c
 16302  016D4E  D008               	goto	l10081
 16303                           
 16304                           ;stkvar	_ff2 @ sp[(0)+-8]
 16305  016D50  0EF8               	movlw	-8
 16306  016D52  6AE3               	clrf	plusw1,c
 16307  016D54  0EF9               	movlw	-7
 16308  016D56  6AE3               	clrf	plusw1,c
 16309  016D58  0EFA               	movlw	-6
 16310  016D5A  6AE3               	clrf	plusw1,c
 16311  016D5C  0EFB               	movlw	-5
 16312  016D5E  6AE3               	clrf	plusw1,c
 16313  016D60                     l10081:
 16314                           
 16315                           ;stkvar	_ff2 @ sp[(0)+-8]
 16316                           ;stkvar	_ff1 @ sp[(0)+-4]
 16317  016D60  50E1               	movf	fsr1l,w,c
 16318  016D62  0FFC               	addlw	-4
 16319  016D64  6ED9               	movwf	fsr2l,c
 16320  016D66  50E2               	movf	fsr1h,w,c
 16321  016D68  6EDA               	movwf	fsr2h,c
 16322  016D6A  0EFF               	movlw	255
 16323  016D6C  22DA               	addwfc	fsr2h,f,c
 16324  016D6E  0EF8               	movlw	-8
 16325  016D70  50E3               	movf	plusw1,w,c
 16326  016D72  18DE               	xorwf	postinc2,w,c
 16327  016D74  E10D               	bnz	u10480
 16328  016D76  0EF9               	movlw	-7
 16329  016D78  50E3               	movf	plusw1,w,c
 16330  016D7A  18DE               	xorwf	postinc2,w,c
 16331  016D7C  E109               	bnz	u10480
 16332  016D7E  0EFA               	movlw	-6
 16333  016D80  50E3               	movf	plusw1,w,c
 16334  016D82  18DE               	xorwf	postinc2,w,c
 16335  016D84  E105               	bnz	u10480
 16336  016D86  0EFB               	movlw	-5
 16337  016D88  50E3               	movf	plusw1,w,c
 16338  016D8A  18DE               	xorwf	postinc2,w,c
 16339  016D8C  B4D8               	btfsc	status,2,c
 16340  016D8E  D002               	goto	l10085
 16341  016D90                     u10480:
 16342  016D90  9032               	bcf	btemp& (0+255),0,c
 16343  016D92  D001               	goto	l2301
 16344  016D94                     l10085:
 16345  016D94  8032               	bsf	btemp& (0+255),0,c
 16346  016D96                     l2301:
 16347                           
 16348                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 16349  016D96  0EF8               	movlw	248
 16350  016D98  26E1               	addwf	fsr1l,f,c
 16351  016D9A  0EFF               	movlw	255
 16352  016D9C  22E2               	addwfc	fsr1h,f,c
 16353  016D9E  0012               	return		;funcret
 16354  016DA0                     __end_of___fleq:
 16355                           	opt callstack 0
 16356                           
 16357 ;; *************** function ___fldiv *****************
 16358 ;; Defined at:
 16359 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 16360 ;; Parameters:    Size  Location     Type
 16361 ;;  b               4  [STACK] unsigned char 
 16362 ;;  a               4  [STACK] unsigned char 
 16363 ;; Auto vars:     Size  Location     Type
 16364 ;;  grs             4  [STACK] unsigned long 
 16365 ;;  rem             4  [STACK] unsigned long 
 16366 ;;  new_exp         2  [STACK] short 
 16367 ;;  aexp            1  [STACK] unsigned char 
 16368 ;;  bexp            1  [STACK] unsigned char 
 16369 ;;  sign            1  [STACK] unsigned char 
 16370 ;; Return value:  Size  Location     Type
 16371 ;;                  4  [STACK] unsigned char 
 16372 ;; Registers used:
 16373 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 16374 ;; Tracked objects:
 16375 ;;		On entry : 0/39
 16376 ;;		On exit  : 0/0
 16377 ;;		Unchanged: 0/0
 16378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16382 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16383 ;;Total ram usage:        0 bytes
 16384 ;; Hardware stack levels used:    1
 16385 ;; Hardware stack levels required when called:    6
 16386 ;; This function calls:
 16387 ;;		Nothing
 16388 ;; This function is called by:
 16389 ;;		_conv_raw_result
 16390 ;;		_efgtoa
 16391 ;; This function uses a reentrant model
 16392 ;;
 16393                           
 16394                           	psect	text58
 16395  0132EE                     __ptext58:
 16396                           	opt callstack 0
 16397  0132EE                     ___fldiv:
 16398                           	opt callstack 0
 16399                           
 16400                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 16401  0132EE  0E0D               	movlw	13
 16402  0132F0  26E1               	addwf	fsr1l,f,c
 16403  0132F2  0E00               	movlw	0
 16404  0132F4  22E2               	addwfc	fsr1h,f,c
 16405                           
 16406                           ;stkvar	_b @ sp[(-13)+-4]
 16407                           
 16408                           ;incstack = 0
 16409  0132F6  0EF2               	movlw	242
 16410  0132F8  24E1               	addwf	fsr1l,w,c
 16411  0132FA  6ED9               	movwf	fsr2l,c
 16412  0132FC  0EFF               	movlw	255
 16413  0132FE  20E2               	addwfc	fsr1h,w,c
 16414  013300  6EDA               	movwf	fsr2h,c
 16415  013302  50DF               	movf	indf2,w,c
 16416  013304  6E3D               	movwf	(btemp+11)^0,c
 16417  013306  0E80               	movlw	128
 16418  013308  163D               	andwf	(btemp+11)^0,f,c
 16419                           
 16420                           ;stkvar	_sign @ sp[(-13)+12]
 16421  01330A  0EFF               	movlw	-1
 16422  01330C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16423                           
 16424                           ;stkvar	_b @ sp[(-13)+-4]
 16425  013312  0EF2               	movlw	242
 16426  013314  24E1               	addwf	fsr1l,w,c
 16427  013316  6ED9               	movwf	fsr2l,c
 16428  013318  0EFF               	movlw	255
 16429  01331A  20E2               	addwfc	fsr1h,w,c
 16430  01331C  6EDA               	movwf	fsr2h,c
 16431  01331E  50DF               	movf	indf2,w,c
 16432  013320  6E3D               	movwf	(btemp+11)^0,c
 16433  013322  90D8               	bcf	status,0,c
 16434  013324  343D               	rlcf	(btemp+11)^0,w,c
 16435  013326  6E3C               	movwf	(btemp+10)^0,c
 16436                           
 16437                           ;stkvar	_bexp @ sp[(-13)+11]
 16438  013328  0EFE               	movlw	-2
 16439  01332A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16440                           
 16441                           ;stkvar	_b @ sp[(-13)+-4]
 16442  013330  0EF1               	movlw	241
 16443  013332  24E1               	addwf	fsr1l,w,c
 16444  013334  6ED9               	movwf	fsr2l,c
 16445  013336  0EFF               	movlw	255
 16446  013338  20E2               	addwfc	fsr1h,w,c
 16447  01333A  6EDA               	movwf	fsr2h,c
 16448  01333C  AEDF               	btfss	indf2,7,c
 16449  01333E  D002               	goto	l9679
 16450                           
 16451                           ;stkvar	_bexp @ sp[(-13)+11]
 16452  013340  0EFE               	movlw	-2
 16453  013342  80E3               	bsf	plusw1,0,c
 16454  013344                     l9679:
 16455                           
 16456                           ;stkvar	_bexp @ sp[(-13)+11]
 16457  013344  0EFE               	movlw	-2
 16458  013346  50E3               	movf	plusw1,w,c
 16459  013348  B4D8               	btfsc	status,2,c
 16460  01334A  D027               	goto	l9689
 16461                           
 16462                           ;stkvar	_bexp @ sp[(-13)+11]
 16463  01334C  0EFE               	movlw	-2
 16464  01334E  28E3               	incf	plusw1,w,c
 16465  013350  A4D8               	btfss	status,2,c
 16466  013352  D018               	goto	l9685
 16467  013354  0E00               	movlw	0
 16468  013356  6E3A               	movwf	(btemp+8)^0,c
 16469  013358  0E00               	movlw	0
 16470  01335A  6E3B               	movwf	(btemp+9)^0,c
 16471  01335C  0E00               	movlw	0
 16472  01335E  6E3C               	movwf	(btemp+10)^0,c
 16473  013360  0E00               	movlw	0
 16474  013362  6E3D               	movwf	(btemp+11)^0,c
 16475                           
 16476                           ;stkvar	_b @ sp[(-13)+-4]
 16477  013364  0EEF               	movlw	-17
 16478  013366  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 16479  01336C  0EF0               	movlw	-16
 16480  01336E  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 16481  013374  0EF1               	movlw	-15
 16482  013376  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16483  01337C  0EF2               	movlw	-14
 16484  01337E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16485  013384                     l9685:
 16486                           
 16487                           ;stkvar	_b @ sp[(-13)+-4]
 16488  013384  0EF1               	movlw	-15
 16489  013386  8EE3               	bsf	plusw1,7,c
 16490                           
 16491                           ;stkvar	_b @ sp[(-13)+-4]
 16492  013388  0EF2               	movlw	242
 16493  01338A  24E1               	addwf	fsr1l,w,c
 16494  01338C  6ED9               	movwf	fsr2l,c
 16495  01338E  0EFF               	movlw	255
 16496  013390  20E2               	addwfc	fsr1h,w,c
 16497  013392  6EDA               	movwf	fsr2h,c
 16498  013394  0E00               	movlw	0
 16499  013396  6EDF               	movwf	indf2,c
 16500  013398  D018               	goto	l9691
 16501  01339A                     l9689:
 16502  01339A  0E00               	movlw	0
 16503  01339C  6E3A               	movwf	(btemp+8)^0,c
 16504  01339E  0E00               	movlw	0
 16505  0133A0  6E3B               	movwf	(btemp+9)^0,c
 16506  0133A2  0E00               	movlw	0
 16507  0133A4  6E3C               	movwf	(btemp+10)^0,c
 16508  0133A6  0E00               	movlw	0
 16509  0133A8  6E3D               	movwf	(btemp+11)^0,c
 16510                           
 16511                           ;stkvar	_b @ sp[(-13)+-4]
 16512  0133AA  0EEF               	movlw	-17
 16513  0133AC  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 16514  0133B2  0EF0               	movlw	-16
 16515  0133B4  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 16516  0133BA  0EF1               	movlw	-15
 16517  0133BC  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16518  0133C2  0EF2               	movlw	-14
 16519  0133C4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16520  0133CA                     l9691:
 16521                           
 16522                           ;stkvar	_a @ sp[(-13)+-8]
 16523  0133CA  0EEE               	movlw	238
 16524  0133CC  24E1               	addwf	fsr1l,w,c
 16525  0133CE  6ED9               	movwf	fsr2l,c
 16526  0133D0  0EFF               	movlw	255
 16527  0133D2  20E2               	addwfc	fsr1h,w,c
 16528  0133D4  6EDA               	movwf	fsr2h,c
 16529  0133D6  50DF               	movf	indf2,w,c
 16530  0133D8  6E3D               	movwf	(btemp+11)^0,c
 16531  0133DA  0E80               	movlw	128
 16532  0133DC  163D               	andwf	(btemp+11)^0,f,c
 16533                           
 16534                           ;stkvar	_sign @ sp[(-13)+12]
 16535  0133DE  50E1               	movf	fsr1l,w,c
 16536  0133E0  0FFF               	addlw	-1
 16537  0133E2  6ED9               	movwf	fsr2l,c
 16538  0133E4  50E2               	movf	fsr1h,w,c
 16539  0133E6  6EDA               	movwf	fsr2h,c
 16540  0133E8  0EFF               	movlw	255
 16541  0133EA  22DA               	addwfc	fsr2h,f,c
 16542  0133EC  503D               	movf	(btemp+11)^0,w,c
 16543  0133EE  1ADF               	xorwf	indf2,f,c
 16544                           
 16545                           ;stkvar	_a @ sp[(-13)+-8]
 16546  0133F0  0EEE               	movlw	238
 16547  0133F2  24E1               	addwf	fsr1l,w,c
 16548  0133F4  6ED9               	movwf	fsr2l,c
 16549  0133F6  0EFF               	movlw	255
 16550  0133F8  20E2               	addwfc	fsr1h,w,c
 16551  0133FA  6EDA               	movwf	fsr2h,c
 16552  0133FC  50DF               	movf	indf2,w,c
 16553  0133FE  6E3D               	movwf	(btemp+11)^0,c
 16554  013400  90D8               	bcf	status,0,c
 16555  013402  343D               	rlcf	(btemp+11)^0,w,c
 16556  013404  6E3C               	movwf	(btemp+10)^0,c
 16557                           
 16558                           ;stkvar	_aexp @ sp[(-13)+10]
 16559  013406  0EFD               	movlw	-3
 16560  013408  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16561                           
 16562                           ;stkvar	_a @ sp[(-13)+-8]
 16563  01340E  0EED               	movlw	237
 16564  013410  24E1               	addwf	fsr1l,w,c
 16565  013412  6ED9               	movwf	fsr2l,c
 16566  013414  0EFF               	movlw	255
 16567  013416  20E2               	addwfc	fsr1h,w,c
 16568  013418  6EDA               	movwf	fsr2h,c
 16569  01341A  AEDF               	btfss	indf2,7,c
 16570  01341C  D002               	goto	l9699
 16571                           
 16572                           ;stkvar	_aexp @ sp[(-13)+10]
 16573  01341E  0EFD               	movlw	-3
 16574  013420  80E3               	bsf	plusw1,0,c
 16575  013422                     l9699:
 16576                           
 16577                           ;stkvar	_aexp @ sp[(-13)+10]
 16578  013422  0EFD               	movlw	-3
 16579  013424  50E3               	movf	plusw1,w,c
 16580  013426  B4D8               	btfsc	status,2,c
 16581  013428  D027               	goto	l9709
 16582                           
 16583                           ;stkvar	_aexp @ sp[(-13)+10]
 16584  01342A  0EFD               	movlw	-3
 16585  01342C  28E3               	incf	plusw1,w,c
 16586  01342E  A4D8               	btfss	status,2,c
 16587  013430  D018               	goto	l9705
 16588  013432  0E00               	movlw	0
 16589  013434  6E3A               	movwf	(btemp+8)^0,c
 16590  013436  0E00               	movlw	0
 16591  013438  6E3B               	movwf	(btemp+9)^0,c
 16592  01343A  0E00               	movlw	0
 16593  01343C  6E3C               	movwf	(btemp+10)^0,c
 16594  01343E  0E00               	movlw	0
 16595  013440  6E3D               	movwf	(btemp+11)^0,c
 16596                           
 16597                           ;stkvar	_a @ sp[(-13)+-8]
 16598  013442  0EEB               	movlw	-21
 16599  013444  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 16600  01344A  0EEC               	movlw	-20
 16601  01344C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 16602  013452  0EED               	movlw	-19
 16603  013454  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16604  01345A  0EEE               	movlw	-18
 16605  01345C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16606  013462                     l9705:
 16607                           
 16608                           ;stkvar	_a @ sp[(-13)+-8]
 16609  013462  0EED               	movlw	-19
 16610  013464  8EE3               	bsf	plusw1,7,c
 16611                           
 16612                           ;stkvar	_a @ sp[(-13)+-8]
 16613  013466  0EEE               	movlw	238
 16614  013468  24E1               	addwf	fsr1l,w,c
 16615  01346A  6ED9               	movwf	fsr2l,c
 16616  01346C  0EFF               	movlw	255
 16617  01346E  20E2               	addwfc	fsr1h,w,c
 16618  013470  6EDA               	movwf	fsr2h,c
 16619  013472  0E00               	movlw	0
 16620  013474  6EDF               	movwf	indf2,c
 16621  013476  D018               	goto	l9711
 16622  013478                     l9709:
 16623  013478  0E00               	movlw	0
 16624  01347A  6E3A               	movwf	(btemp+8)^0,c
 16625  01347C  0E00               	movlw	0
 16626  01347E  6E3B               	movwf	(btemp+9)^0,c
 16627  013480  0E00               	movlw	0
 16628  013482  6E3C               	movwf	(btemp+10)^0,c
 16629  013484  0E00               	movlw	0
 16630  013486  6E3D               	movwf	(btemp+11)^0,c
 16631                           
 16632                           ;stkvar	_a @ sp[(-13)+-8]
 16633  013488  0EEB               	movlw	-21
 16634  01348A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 16635  013490  0EEC               	movlw	-20
 16636  013492  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 16637  013498  0EED               	movlw	-19
 16638  01349A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16639  0134A0  0EEE               	movlw	-18
 16640  0134A2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16641  0134A8                     l9711:
 16642                           
 16643                           ;stkvar	_a @ sp[(-13)+-8]
 16644  0134A8  0EEB               	movlw	-21
 16645  0134AA  50E3               	movf	plusw1,w,c
 16646  0134AC  E139               	bnz	l9723
 16647  0134AE  0EEC               	movlw	-20
 16648  0134B0  50E3               	movf	plusw1,w,c
 16649  0134B2  E136               	bnz	l9723
 16650  0134B4  0EED               	movlw	-19
 16651  0134B6  50E3               	movf	plusw1,w,c
 16652  0134B8  E133               	bnz	l9723
 16653  0134BA  0EEE               	movlw	-18
 16654  0134BC  50E3               	movf	plusw1,w,c
 16655  0134BE  A4D8               	btfss	status,2,c
 16656  0134C0  D02F               	goto	l9723
 16657                           
 16658                           ;stkvar	_b @ sp[(-13)+-4]
 16659  0134C2  0EEF               	movlw	-17
 16660  0134C4  6AE3               	clrf	plusw1,c
 16661  0134C6  0EF0               	movlw	-16
 16662  0134C8  6AE3               	clrf	plusw1,c
 16663  0134CA  0EF1               	movlw	-15
 16664  0134CC  6AE3               	clrf	plusw1,c
 16665  0134CE  0EF2               	movlw	-14
 16666  0134D0  6AE3               	clrf	plusw1,c
 16667                           
 16668                           ;stkvar	_b @ sp[(-13)+-4]
 16669  0134D2  0EF1               	movlw	241
 16670  0134D4  24E1               	addwf	fsr1l,w,c
 16671  0134D6  6ED9               	movwf	fsr2l,c
 16672  0134D8  0EFF               	movlw	255
 16673  0134DA  20E2               	addwfc	fsr1h,w,c
 16674  0134DC  6EDA               	movwf	fsr2h,c
 16675  0134DE  0E80               	movlw	128
 16676  0134E0  12DE               	iorwf	postinc2,f,c
 16677  0134E2  0E7F               	movlw	127
 16678  0134E4  12DD               	iorwf	postdec2,f,c
 16679  0134E6                     l9717:
 16680                           
 16681                           ;stkvar	_sign @ sp[(-13)+12]
 16682  0134E6  0EFF               	movlw	-1
 16683  0134E8  006F FF8C  F03D    	movff	plusw1,btemp+11
 16684                           
 16685                           ;stkvar	_b @ sp[(-13)+-4]
 16686  0134EE  0EF2               	movlw	242
 16687  0134F0  24E1               	addwf	fsr1l,w,c
 16688  0134F2  6ED9               	movwf	fsr2l,c
 16689  0134F4  0EFF               	movlw	255
 16690  0134F6  20E2               	addwfc	fsr1h,w,c
 16691  0134F8  6EDA               	movwf	fsr2h,c
 16692  0134FA  503D               	movf	(btemp+11)^0,w,c
 16693  0134FC  12DF               	iorwf	indf2,f,c
 16694                           
 16695                           ;stkvar	_b @ sp[(-13)+-4]
 16696  0134FE  0EEF               	movlw	-17
 16697  013500  006F FF8C  F032    	movff	plusw1,btemp
 16698  013506  0EF0               	movlw	-16
 16699  013508  006F FF8C  F033    	movff	plusw1,btemp+1
 16700  01350E  0EF1               	movlw	-15
 16701  013510  006F FF8C  F034    	movff	plusw1,btemp+2
 16702  013516  0EF2               	movlw	-14
 16703  013518  006F FF8C  F035    	movff	plusw1,btemp+3
 16704  01351E  D19F               	goto	l2624
 16705  013520                     l9723:
 16706                           
 16707                           ;stkvar	_bexp @ sp[(-13)+11]
 16708  013520  0EFE               	movlw	-2
 16709  013522  50E3               	movf	plusw1,w,c
 16710  013524  A4D8               	btfss	status,2,c
 16711  013526  D009               	goto	l9731
 16712  013528  0E00               	movlw	0
 16713  01352A  6E32               	movwf	btemp^0,c
 16714  01352C  0E00               	movlw	0
 16715  01352E  6E33               	movwf	(btemp+1)^0,c
 16716  013530  0E00               	movlw	0
 16717  013532  6E34               	movwf	(btemp+2)^0,c
 16718  013534  0E00               	movlw	0
 16719  013536  6E35               	movwf	(btemp+3)^0,c
 16720  013538  D192               	goto	l2624
 16721  01353A                     l9731:
 16722                           
 16723                           ;stkvar	_bexp @ sp[(-13)+11]
 16724  01353A  0EFE               	movlw	-2
 16725  01353C  50E3               	movf	plusw1,w,c
 16726  01353E  6E3C               	movwf	(btemp+10)^0,c
 16727  013540  6A3D               	clrf	(btemp+11)^0,c
 16728                           
 16729                           ;stkvar	_aexp @ sp[(-13)+10]
 16730  013542  0EFD               	movlw	-3
 16731  013544  50E3               	movf	plusw1,w,c
 16732  013546  5E3C               	subwf	(btemp+10)^0,f,c
 16733  013548  0E00               	movlw	0
 16734  01354A  5A3D               	subwfb	(btemp+11)^0,f,c
 16735  01354C  0E7F               	movlw	127
 16736  01354E  263C               	addwf	(btemp+10)^0,f,c
 16737  013550  0E00               	movlw	0
 16738  013552  223D               	addwfc	(btemp+11)^0,f,c
 16739                           
 16740                           ;stkvar	_new_exp @ sp[(-13)+8]
 16741  013554  0EFB               	movlw	-5
 16742  013556  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16743  01355C  0EFC               	movlw	-4
 16744  01355E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16745                           
 16746                           ;stkvar	_b @ sp[(-13)+-4]
 16747  013564  0EEF               	movlw	-17
 16748  013566  006F FF8C  F03A    	movff	plusw1,btemp+8
 16749  01356C  0EF0               	movlw	-16
 16750  01356E  006F FF8C  F03B    	movff	plusw1,btemp+9
 16751  013574  0EF1               	movlw	-15
 16752  013576  006F FF8C  F03C    	movff	plusw1,btemp+10
 16753  01357C  0EF2               	movlw	-14
 16754  01357E  006F FF8C  F03D    	movff	plusw1,btemp+11
 16755                           
 16756                           ;stkvar	_rem @ sp[(-13)+4]
 16757  013584  0EF7               	movlw	-9
 16758  013586  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 16759  01358C  0EF8               	movlw	-8
 16760  01358E  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 16761  013594  0EF9               	movlw	-7
 16762  013596  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16763  01359C  0EFA               	movlw	-6
 16764  01359E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16765                           
 16766                           ;stkvar	_b @ sp[(-13)+-4]
 16767  0135A4  0EEF               	movlw	-17
 16768  0135A6  6AE3               	clrf	plusw1,c
 16769  0135A8  0EF0               	movlw	-16
 16770  0135AA  6AE3               	clrf	plusw1,c
 16771  0135AC  0EF1               	movlw	-15
 16772  0135AE  6AE3               	clrf	plusw1,c
 16773  0135B0  0EF2               	movlw	-14
 16774  0135B2  6AE3               	clrf	plusw1,c
 16775                           
 16776                           ;stkvar	_grs @ sp[(-13)+0]
 16777  0135B4  0EF3               	movlw	-13
 16778  0135B6  6AE3               	clrf	plusw1,c
 16779  0135B8  0EF4               	movlw	-12
 16780  0135BA  6AE3               	clrf	plusw1,c
 16781  0135BC  0EF5               	movlw	-11
 16782  0135BE  6AE3               	clrf	plusw1,c
 16783  0135C0  0EF6               	movlw	-10
 16784  0135C2  6AE3               	clrf	plusw1,c
 16785                           
 16786                           ;stkvar	_aexp @ sp[(-13)+10]
 16787  0135C4  0EFD               	movlw	-3
 16788  0135C6  6AE3               	clrf	plusw1,c
 16789  0135C8  D050               	goto	l9759
 16790  0135CA                     l9741:
 16791                           
 16792                           ;stkvar	_aexp @ sp[(-13)+10]
 16793  0135CA  0EFD               	movlw	-3
 16794  0135CC  50E3               	movf	plusw1,w,c
 16795  0135CE  B4D8               	btfsc	status,2,c
 16796  0135D0  D020               	goto	l9751
 16797                           
 16798                           ;stkvar	_rem @ sp[(-13)+4]
 16799  0135D2  90D8               	bcf	status,0,c
 16800  0135D4  0EF7               	movlw	-9
 16801  0135D6  36E3               	rlcf	plusw1,f,c
 16802  0135D8  0EF8               	movlw	-8
 16803  0135DA  36E3               	rlcf	plusw1,f,c
 16804  0135DC  0EF9               	movlw	-7
 16805  0135DE  36E3               	rlcf	plusw1,f,c
 16806  0135E0  0EFA               	movlw	-6
 16807  0135E2  36E3               	rlcf	plusw1,f,c
 16808                           
 16809                           ;stkvar	_b @ sp[(-13)+-4]
 16810  0135E4  90D8               	bcf	status,0,c
 16811  0135E6  0EEF               	movlw	-17
 16812  0135E8  36E3               	rlcf	plusw1,f,c
 16813  0135EA  0EF0               	movlw	-16
 16814  0135EC  36E3               	rlcf	plusw1,f,c
 16815  0135EE  0EF1               	movlw	-15
 16816  0135F0  36E3               	rlcf	plusw1,f,c
 16817  0135F2  0EF2               	movlw	-14
 16818  0135F4  36E3               	rlcf	plusw1,f,c
 16819                           
 16820                           ;stkvar	_grs @ sp[(-13)+0]
 16821  0135F6  0EF6               	movlw	-10
 16822  0135F8  AEE3               	btfss	plusw1,7,c
 16823  0135FA  D002               	goto	l9749
 16824                           
 16825                           ;stkvar	_b @ sp[(-13)+-4]
 16826  0135FC  0EEF               	movlw	-17
 16827  0135FE  80E3               	bsf	plusw1,0,c
 16828  013600                     l9749:
 16829                           
 16830                           ;stkvar	_grs @ sp[(-13)+0]
 16831  013600  90D8               	bcf	status,0,c
 16832  013602  0EF3               	movlw	-13
 16833  013604  36E3               	rlcf	plusw1,f,c
 16834  013606  0EF4               	movlw	-12
 16835  013608  36E3               	rlcf	plusw1,f,c
 16836  01360A  0EF5               	movlw	-11
 16837  01360C  36E3               	rlcf	plusw1,f,c
 16838  01360E  0EF6               	movlw	-10
 16839  013610  36E3               	rlcf	plusw1,f,c
 16840  013612                     l9751:
 16841                           
 16842                           ;stkvar	_a @ sp[(-13)+-8]
 16843                           ;stkvar	_rem @ sp[(-13)+4]
 16844  013612  50E1               	movf	fsr1l,w,c
 16845  013614  0FF7               	addlw	-9
 16846  013616  6ED9               	movwf	fsr2l,c
 16847  013618  50E2               	movf	fsr1h,w,c
 16848  01361A  6EDA               	movwf	fsr2h,c
 16849  01361C  0EFF               	movlw	255
 16850  01361E  22DA               	addwfc	fsr2h,f,c
 16851  013620  0EEB               	movlw	-21
 16852  013622  50E3               	movf	plusw1,w,c
 16853  013624  5CDE               	subwf	postinc2,w,c
 16854  013626  0EEC               	movlw	-20
 16855  013628  50E3               	movf	plusw1,w,c
 16856  01362A  58DE               	subwfb	postinc2,w,c
 16857  01362C  0EED               	movlw	-19
 16858  01362E  50E3               	movf	plusw1,w,c
 16859  013630  58DE               	subwfb	postinc2,w,c
 16860  013632  0EEE               	movlw	-18
 16861  013634  50E3               	movf	plusw1,w,c
 16862  013636  58DE               	subwfb	postinc2,w,c
 16863  013638  A0D8               	btfss	status,0,c
 16864  01363A  D015               	goto	l9757
 16865                           
 16866                           ;stkvar	_grs @ sp[(-13)+0]
 16867  01363C  0EF6               	movlw	-10
 16868  01363E  8CE3               	bsf	plusw1,6,c
 16869                           
 16870                           ;stkvar	_a @ sp[(-13)+-8]
 16871                           ;stkvar	_rem @ sp[(-13)+4]
 16872  013640  50E1               	movf	fsr1l,w,c
 16873  013642  0FF7               	addlw	-9
 16874  013644  6ED9               	movwf	fsr2l,c
 16875  013646  50E2               	movf	fsr1h,w,c
 16876  013648  6EDA               	movwf	fsr2h,c
 16877  01364A  0EFF               	movlw	255
 16878  01364C  22DA               	addwfc	fsr2h,f,c
 16879  01364E  0EEB               	movlw	-21
 16880  013650  50E3               	movf	plusw1,w,c
 16881  013652  5EDE               	subwf	postinc2,f,c
 16882  013654  0EEC               	movlw	-20
 16883  013656  50E3               	movf	plusw1,w,c
 16884  013658  5ADE               	subwfb	postinc2,f,c
 16885  01365A  0EED               	movlw	-19
 16886  01365C  50E3               	movf	plusw1,w,c
 16887  01365E  5ADE               	subwfb	postinc2,f,c
 16888  013660  0EEE               	movlw	-18
 16889  013662  50E3               	movf	plusw1,w,c
 16890  013664  5ADE               	subwfb	postinc2,f,c
 16891  013666                     l9757:
 16892                           
 16893                           ;stkvar	_aexp @ sp[(-13)+10]
 16894  013666  0EFD               	movlw	-3
 16895  013668  2AE3               	incf	plusw1,f,c
 16896  01366A                     l9759:
 16897                           
 16898                           ;stkvar	_aexp @ sp[(-13)+10]
 16899  01366A  0EFD               	movlw	-3
 16900  01366C  006F FF8C  F032    	movff	plusw1,btemp
 16901  013672  0E19               	movlw	25
 16902  013674  6432               	cpfsgt	btemp^0,c
 16903  013676  D7A9               	goto	l9741
 16904                           
 16905                           ;stkvar	_rem @ sp[(-13)+4]
 16906  013678  0EF7               	movlw	-9
 16907  01367A  50E3               	movf	plusw1,w,c
 16908  01367C  E10A               	bnz	u9980
 16909  01367E  0EF8               	movlw	-8
 16910  013680  50E3               	movf	plusw1,w,c
 16911  013682  E107               	bnz	u9980
 16912  013684  0EF9               	movlw	-7
 16913  013686  50E3               	movf	plusw1,w,c
 16914  013688  E104               	bnz	u9980
 16915  01368A  0EFA               	movlw	-6
 16916  01368C  50E3               	movf	plusw1,w,c
 16917  01368E  B4D8               	btfsc	status,2,c
 16918  013690  D024               	goto	l9775
 16919  013692                     u9980:
 16920                           
 16921                           ;stkvar	_grs @ sp[(-13)+0]
 16922  013692  0EF3               	movlw	-13
 16923  013694  80E3               	bsf	plusw1,0,c
 16924  013696  D021               	goto	l9775
 16925  013698                     l9765:
 16926                           
 16927                           ;stkvar	_b @ sp[(-13)+-4]
 16928  013698  90D8               	bcf	status,0,c
 16929  01369A  0EEF               	movlw	-17
 16930  01369C  36E3               	rlcf	plusw1,f,c
 16931  01369E  0EF0               	movlw	-16
 16932  0136A0  36E3               	rlcf	plusw1,f,c
 16933  0136A2  0EF1               	movlw	-15
 16934  0136A4  36E3               	rlcf	plusw1,f,c
 16935  0136A6  0EF2               	movlw	-14
 16936  0136A8  36E3               	rlcf	plusw1,f,c
 16937                           
 16938                           ;stkvar	_grs @ sp[(-13)+0]
 16939  0136AA  0EF6               	movlw	-10
 16940  0136AC  AEE3               	btfss	plusw1,7,c
 16941  0136AE  D002               	goto	l9771
 16942                           
 16943                           ;stkvar	_b @ sp[(-13)+-4]
 16944  0136B0  0EEF               	movlw	-17
 16945  0136B2  80E3               	bsf	plusw1,0,c
 16946  0136B4                     l9771:
 16947                           
 16948                           ;stkvar	_grs @ sp[(-13)+0]
 16949  0136B4  90D8               	bcf	status,0,c
 16950  0136B6  0EF3               	movlw	-13
 16951  0136B8  36E3               	rlcf	plusw1,f,c
 16952  0136BA  0EF4               	movlw	-12
 16953  0136BC  36E3               	rlcf	plusw1,f,c
 16954  0136BE  0EF5               	movlw	-11
 16955  0136C0  36E3               	rlcf	plusw1,f,c
 16956  0136C2  0EF6               	movlw	-10
 16957  0136C4  36E3               	rlcf	plusw1,f,c
 16958                           
 16959                           ;stkvar	_new_exp @ sp[(-13)+8]
 16960  0136C6  50E1               	movf	fsr1l,w,c
 16961  0136C8  0FFB               	addlw	-5
 16962  0136CA  6ED9               	movwf	fsr2l,c
 16963  0136CC  50E2               	movf	fsr1h,w,c
 16964  0136CE  6EDA               	movwf	fsr2h,c
 16965  0136D0  0EFF               	movlw	255
 16966  0136D2  22DA               	addwfc	fsr2h,f,c
 16967  0136D4  06DE               	decf	postinc2,f,c
 16968  0136D6  0E00               	movlw	0
 16969  0136D8  5ADD               	subwfb	postdec2,f,c
 16970  0136DA                     l9775:
 16971                           
 16972                           ;stkvar	_b @ sp[(-13)+-4]
 16973  0136DA  0EF1               	movlw	-15
 16974  0136DC  AEE3               	btfss	plusw1,7,c
 16975  0136DE  D7DC               	goto	l9765
 16976                           
 16977                           ;stkvar	_aexp @ sp[(-13)+10]
 16978  0136E0  0EFD               	movlw	-3
 16979  0136E2  6AE3               	clrf	plusw1,c
 16980                           
 16981                           ;stkvar	_grs @ sp[(-13)+0]
 16982  0136E4  0EF6               	movlw	-10
 16983  0136E6  AEE3               	btfss	plusw1,7,c
 16984  0136E8  D020               	goto	l9789
 16985                           
 16986                           ;stkvar	_grs @ sp[(-13)+0]
 16987  0136EA  50E1               	movf	fsr1l,w,c
 16988  0136EC  0FF3               	addlw	-13
 16989  0136EE  6ED9               	movwf	fsr2l,c
 16990  0136F0  50E2               	movf	fsr1h,w,c
 16991  0136F2  6EDA               	movwf	fsr2h,c
 16992  0136F4  0EFF               	movlw	255
 16993  0136F6  22DA               	addwfc	fsr2h,f,c
 16994  0136F8  0EFF               	movlw	255
 16995  0136FA  14DE               	andwf	postinc2,w,c
 16996  0136FC  6E3A               	movwf	(btemp+8)^0,c
 16997  0136FE  0EFF               	movlw	255
 16998  013700  14DE               	andwf	postinc2,w,c
 16999  013702  6E3B               	movwf	(btemp+9)^0,c
 17000  013704  0EFF               	movlw	255
 17001  013706  14DE               	andwf	postinc2,w,c
 17002  013708  6E3C               	movwf	(btemp+10)^0,c
 17003  01370A  0E7F               	movlw	127
 17004  01370C  14DE               	andwf	postinc2,w,c
 17005  01370E  6E3D               	movwf	(btemp+11)^0,c
 17006  013710  503A               	movf	(btemp+8)^0,w,c
 17007  013712  103B               	iorwf	(btemp+9)^0,w,c
 17008  013714  103C               	iorwf	(btemp+10)^0,w,c
 17009  013716  103D               	iorwf	(btemp+11)^0,w,c
 17010  013718  B4D8               	btfsc	status,2,c
 17011  01371A  D004               	goto	l9785
 17012  01371C                     u10020:
 17013                           
 17014                           ;stkvar	_aexp @ sp[(-13)+10]
 17015  01371C  0EFD               	movlw	-3
 17016  01371E  6AE3               	clrf	plusw1,c
 17017  013720  2AE3               	incf	plusw1,f,c
 17018  013722  D003               	goto	l9789
 17019  013724                     l9785:
 17020                           
 17021                           ;stkvar	_b @ sp[(-13)+-4]
 17022  013724  0EEF               	movlw	-17
 17023  013726  B0E3               	btfsc	plusw1,0,c
 17024  013728  D7F9               	goto	u10020
 17025  01372A                     l9789:
 17026                           
 17027                           ;stkvar	_aexp @ sp[(-13)+10]
 17028  01372A  0EFD               	movlw	-3
 17029  01372C  50E3               	movf	plusw1,w,c
 17030  01372E  B4D8               	btfsc	status,2,c
 17031  013730  D036               	goto	l9799
 17032                           
 17033                           ;stkvar	_b @ sp[(-13)+-4]
 17034  013732  50E1               	movf	fsr1l,w,c
 17035  013734  0FEF               	addlw	-17
 17036  013736  6ED9               	movwf	fsr2l,c
 17037  013738  50E2               	movf	fsr1h,w,c
 17038  01373A  6EDA               	movwf	fsr2h,c
 17039  01373C  0EFF               	movlw	255
 17040  01373E  22DA               	addwfc	fsr2h,f,c
 17041  013740  2ADE               	incf	postinc2,f,c
 17042  013742  0E00               	movlw	0
 17043  013744  22DE               	addwfc	postinc2,f,c
 17044  013746  22DE               	addwfc	postinc2,f,c
 17045  013748  22DE               	addwfc	postinc2,f,c
 17046                           
 17047                           ;stkvar	_b @ sp[(-13)+-4]
 17048  01374A  0EF2               	movlw	-14
 17049  01374C  A0E3               	btfss	plusw1,0,c
 17050  01374E  D027               	goto	l9799
 17051  013750  0E01               	movlw	1
 17052  013752  6E3D               	movwf	(btemp+11)^0,c
 17053                           
 17054                           ;stkvar	_b @ sp[(-13)+-4]
 17055  013754  50E1               	movf	fsr1l,w,c
 17056  013756  0FEF               	addlw	-17
 17057  013758  6ED9               	movwf	fsr2l,c
 17058  01375A  50E2               	movf	fsr1h,w,c
 17059  01375C  6EDA               	movwf	fsr2h,c
 17060  01375E  0EFF               	movlw	255
 17061  013760  22DA               	addwfc	fsr2h,f,c
 17062  013762  283D               	incf	(btemp+11)^0,w,c
 17063  013764  52DE               	movf	postinc2,f,c
 17064  013766  D008               	goto	u10060
 17065  013768                     u10065:
 17066  013768  52DE               	movf	postinc2,f,c
 17067  01376A  90D8               	bcf	status,0,c
 17068  01376C  BEDC               	btfsc	preinc2,7,c
 17069  01376E  80D8               	bsf	status,0,c
 17070  013770  32DD               	rrcf	postdec2,f,c
 17071  013772  32DD               	rrcf	postdec2,f,c
 17072  013774  32DD               	rrcf	postdec2,f,c
 17073  013776  32DE               	rrcf	postinc2,f,c
 17074  013778                     u10060:
 17075  013778  2EE8               	decfsz	wreg,f,c
 17076  01377A  D7F6               	goto	u10065
 17077                           
 17078                           ;stkvar	_new_exp @ sp[(-13)+8]
 17079  01377C  0EFB               	movlw	-5
 17080  01377E  50E3               	movf	plusw1,w,c
 17081  013780  0F01               	addlw	1
 17082  013782  6E32               	movwf	btemp^0,c
 17083  013784  0EFB               	movlw	-5
 17084  013786  0060  F0CB  FFE3   	movff	btemp,plusw1
 17085  01378C  6A32               	clrf	btemp^0,c
 17086  01378E  0EFC               	movlw	-4
 17087  013790  50E3               	movf	plusw1,w,c
 17088  013792  2032               	addwfc	btemp^0,w,c
 17089  013794  6E32               	movwf	btemp^0,c
 17090  013796  0EFC               	movlw	-4
 17091  013798  0060  F0CB  FFE3   	movff	btemp,plusw1
 17092  01379E                     l9799:
 17093                           
 17094                           ;stkvar	_new_exp @ sp[(-13)+8]
 17095  01379E  0EFC               	movlw	-4
 17096  0137A0  BEE3               	btfsc	plusw1,7,c
 17097  0137A2  D01B               	goto	l9805
 17098  0137A4  0EFC               	movlw	-4
 17099  0137A6  50E3               	movf	plusw1,w,c
 17100  0137A8  E104               	bnz	u10070
 17101  0137AA  0EFB               	movlw	-5
 17102  0137AC  28E3               	incf	plusw1,w,c
 17103  0137AE  A0D8               	btfss	status,0,c
 17104  0137B0  D014               	goto	l9805
 17105  0137B2                     u10070:
 17106  0137B2  0EFF               	movlw	255
 17107  0137B4  6E3C               	movwf	(btemp+10)^0,c
 17108  0137B6  0E00               	movlw	0
 17109  0137B8  6E3D               	movwf	(btemp+11)^0,c
 17110                           
 17111                           ;stkvar	_new_exp @ sp[(-13)+8]
 17112  0137BA  0EFB               	movlw	-5
 17113  0137BC  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 17114  0137C2  0EFC               	movlw	-4
 17115  0137C4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 17116                           
 17117                           ;stkvar	_b @ sp[(-13)+-4]
 17118  0137CA  0EEF               	movlw	-17
 17119  0137CC  6AE3               	clrf	plusw1,c
 17120  0137CE  0EF0               	movlw	-16
 17121  0137D0  6AE3               	clrf	plusw1,c
 17122  0137D2  0EF1               	movlw	-15
 17123  0137D4  6AE3               	clrf	plusw1,c
 17124  0137D6  0EF2               	movlw	-14
 17125  0137D8  6AE3               	clrf	plusw1,c
 17126  0137DA                     l9805:
 17127                           
 17128                           ;stkvar	_new_exp @ sp[(-13)+8]
 17129  0137DA  0EFC               	movlw	-4
 17130  0137DC  BEE3               	btfsc	plusw1,7,c
 17131  0137DE  D007               	goto	u10080
 17132  0137E0  0EFC               	movlw	-4
 17133  0137E2  50E3               	movf	plusw1,w,c
 17134  0137E4  E112               	bnz	l9811
 17135  0137E6  0EFB               	movlw	-5
 17136  0137E8  04E3               	decf	plusw1,w,c
 17137  0137EA  B0D8               	btfsc	status,0,c
 17138  0137EC  D00E               	goto	l9811
 17139  0137EE                     u10080:
 17140                           
 17141                           ;stkvar	_new_exp @ sp[(-13)+8]
 17142  0137EE  0EFB               	movlw	-5
 17143  0137F0  6AE3               	clrf	plusw1,c
 17144  0137F2  0EFC               	movlw	-4
 17145  0137F4  6AE3               	clrf	plusw1,c
 17146                           
 17147                           ;stkvar	_b @ sp[(-13)+-4]
 17148  0137F6  0EEF               	movlw	-17
 17149  0137F8  6AE3               	clrf	plusw1,c
 17150  0137FA  0EF0               	movlw	-16
 17151  0137FC  6AE3               	clrf	plusw1,c
 17152  0137FE  0EF1               	movlw	-15
 17153  013800  6AE3               	clrf	plusw1,c
 17154  013802  0EF2               	movlw	-14
 17155  013804  6AE3               	clrf	plusw1,c
 17156                           
 17157                           ;stkvar	_sign @ sp[(-13)+12]
 17158  013806  0EFF               	movlw	-1
 17159  013808  6AE3               	clrf	plusw1,c
 17160  01380A                     l9811:
 17161                           
 17162                           ;stkvar	_new_exp @ sp[(-13)+8]
 17163                           ;stkvar	_bexp @ sp[(-13)+11]
 17164  01380A  0EFB               	movlw	-5
 17165  01380C  006F FF8C  F032    	movff	plusw1,btemp
 17166  013812  0EFE               	movlw	-2
 17167  013814  0060  F0CB  FFE3   	movff	btemp,plusw1
 17168                           
 17169                           ;stkvar	_bexp @ sp[(-13)+11]
 17170  01381A  0EFE               	movlw	-2
 17171  01381C  A0E3               	btfss	plusw1,0,c
 17172  01381E  D009               	goto	l9817
 17173                           
 17174                           ;stkvar	_b @ sp[(-13)+-4]
 17175  013820  0EF1               	movlw	241
 17176  013822  24E1               	addwf	fsr1l,w,c
 17177  013824  6ED9               	movwf	fsr2l,c
 17178  013826  0EFF               	movlw	255
 17179  013828  20E2               	addwfc	fsr1h,w,c
 17180  01382A  6EDA               	movwf	fsr2h,c
 17181  01382C  0E00               	movlw	0
 17182  01382E  8EDB               	bsf	plusw2,7,c
 17183  013830  D008               	goto	l9819
 17184  013832                     l9817:
 17185                           
 17186                           ;stkvar	_b @ sp[(-13)+-4]
 17187  013832  0EF1               	movlw	241
 17188  013834  24E1               	addwf	fsr1l,w,c
 17189  013836  6ED9               	movwf	fsr2l,c
 17190  013838  0EFF               	movlw	255
 17191  01383A  20E2               	addwfc	fsr1h,w,c
 17192  01383C  6EDA               	movwf	fsr2h,c
 17193  01383E  0E7F               	movlw	127
 17194  013840  16DF               	andwf	indf2,f,c
 17195  013842                     l9819:
 17196                           
 17197                           ;stkvar	_b @ sp[(-13)+-4]
 17198  013842  0EF2               	movlw	242
 17199  013844  24E1               	addwf	fsr1l,w,c
 17200  013846  6ED9               	movwf	fsr2l,c
 17201  013848  0EFF               	movlw	255
 17202  01384A  20E2               	addwfc	fsr1h,w,c
 17203  01384C  6EDA               	movwf	fsr2h,c
 17204                           
 17205                           ;stkvar	_bexp @ sp[(-13)+11]
 17206  01384E  0EFE               	movlw	-2
 17207  013850  006F FF8C  F03D    	movff	plusw1,btemp+11
 17208  013856  90D8               	bcf	status,0,c
 17209  013858  303D               	rrcf	(btemp+11)^0,w,c
 17210  01385A  6EDF               	movwf	indf2,c
 17211  01385C  D644               	goto	l9717
 17212  01385E                     l2624:
 17213                           
 17214                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 17215  01385E  0EEB               	movlw	235
 17216  013860  26E1               	addwf	fsr1l,f,c
 17217  013862  0EFF               	movlw	255
 17218  013864  22E2               	addwfc	fsr1h,f,c
 17219  013866  0012               	return		;funcret
 17220  013868                     __end_of___fldiv:
 17221                           	opt callstack 0
 17222                           
 17223 ;; *************** function ___awmod *****************
 17224 ;; Defined at:
 17225 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 17226 ;; Parameters:    Size  Location     Type
 17227 ;;  dividend        2  [STACK] int 
 17228 ;;  divisor         2  [STACK] int 
 17229 ;; Auto vars:     Size  Location     Type
 17230 ;;  sign            1  [STACK] unsigned char 
 17231 ;;  counter         1  [STACK] unsigned char 
 17232 ;; Return value:  Size  Location     Type
 17233 ;;                  2  [STACK] int 
 17234 ;; Registers used:
 17235 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 17236 ;; Tracked objects:
 17237 ;;		On entry : 0/5
 17238 ;;		On exit  : 0/0
 17239 ;;		Unchanged: 0/0
 17240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17244 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17245 ;;Total ram usage:        0 bytes
 17246 ;; Hardware stack levels used:    1
 17247 ;; Hardware stack levels required when called:    6
 17248 ;; This function calls:
 17249 ;;		Nothing
 17250 ;; This function is called by:
 17251 ;;		_efgtoa
 17252 ;; This function uses a reentrant model
 17253 ;;
 17254                           
 17255                           	psect	text59
 17256  0165E6                     __ptext59:
 17257                           	opt callstack 0
 17258  0165E6                     ___awmod:
 17259                           	opt callstack 0
 17260                           
 17261                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17262  0165E6  52E6               	movf	postinc1,f,c
 17263  0165E8  52E6               	movf	postinc1,f,c
 17264                           
 17265                           ;stkvar	_sign @ sp[(-2)+0]
 17266                           
 17267                           ;incstack = 0
 17268  0165EA  0EFE               	movlw	-2
 17269  0165EC  6AE3               	clrf	plusw1,c
 17270                           
 17271                           ;stkvar	_dividend @ sp[(-2)+-2]
 17272  0165EE  0EFD               	movlw	-3
 17273  0165F0  AEE3               	btfss	plusw1,7,c
 17274  0165F2  D009               	goto	l10043
 17275                           
 17276                           ;stkvar	_dividend @ sp[(-2)+-2]
 17277                           ;stkvar	_dividend @ sp[(-2)+-2]
 17278  0165F4  0EFC               	movlw	-4
 17279  0165F6  6CE3               	negf	plusw1,c
 17280  0165F8  0EFD               	movlw	-3
 17281  0165FA  1EE3               	comf	plusw1,f,c
 17282  0165FC  B0D8               	btfsc	status,0,c
 17283  0165FE  2AE3               	incf	plusw1,f,c
 17284                           
 17285                           ;stkvar	_sign @ sp[(-2)+0]
 17286  016600  0EFE               	movlw	-2
 17287  016602  6AE3               	clrf	plusw1,c
 17288  016604  2AE3               	incf	plusw1,f,c
 17289  016606                     l10043:
 17290                           
 17291                           ;stkvar	_divisor @ sp[(-2)+-4]
 17292  016606  0EFB               	movlw	-5
 17293  016608  AEE3               	btfss	plusw1,7,c
 17294  01660A  D006               	goto	l10047
 17295                           
 17296                           ;stkvar	_divisor @ sp[(-2)+-4]
 17297                           ;stkvar	_divisor @ sp[(-2)+-4]
 17298  01660C  0EFA               	movlw	-6
 17299  01660E  6CE3               	negf	plusw1,c
 17300  016610  0EFB               	movlw	-5
 17301  016612  1EE3               	comf	plusw1,f,c
 17302  016614  B0D8               	btfsc	status,0,c
 17303  016616  2AE3               	incf	plusw1,f,c
 17304  016618                     l10047:
 17305                           
 17306                           ;stkvar	_divisor @ sp[(-2)+-4]
 17307  016618  0EFA               	movlw	-6
 17308  01661A  006F FF8C  F032    	movff	plusw1,btemp
 17309  016620  0EFB               	movlw	-5
 17310  016622  50E3               	movf	plusw1,w,c
 17311  016624  1032               	iorwf	btemp^0,w,c
 17312  016626  B4D8               	btfsc	status,2,c
 17313  016628  D053               	goto	u10440
 17314                           
 17315                           ;stkvar	_counter @ sp[(-2)+1]
 17316  01662A  0EFF               	movlw	-1
 17317  01662C  6AE3               	clrf	plusw1,c
 17318  01662E  D012               	goto	L14
 17319  016630                     l10051:
 17320                           
 17321                           ;stkvar	_divisor @ sp[(-2)+-4]
 17322  016630  0EFA               	movlw	-6
 17323  016632  50E3               	movf	plusw1,w,c
 17324  016634  90D8               	bcf	status,0,c
 17325  016636  34E8               	rlcf	wreg,w,c
 17326  016638  6E32               	movwf	btemp^0,c
 17327  01663A  0EFA               	movlw	-6
 17328  01663C  0060  F0CB  FFE3   	movff	btemp,plusw1
 17329  016642  0EFB               	movlw	-5
 17330  016644  50E3               	movf	plusw1,w,c
 17331  016646  34E8               	rlcf	wreg,w,c
 17332  016648  6E32               	movwf	btemp^0,c
 17333  01664A  0EFB               	movlw	-5
 17334  01664C  0060  F0CB  FFE3   	movff	btemp,plusw1
 17335                           
 17336                           ;stkvar	_counter @ sp[(-2)+1]
 17337  016652  0EFF               	movlw	-1
 17338  016654                     L14:
 17339  016654  2AE3               	incf	plusw1,f,c
 17340                           
 17341                           ;stkvar	_divisor @ sp[(-2)+-4]
 17342  016656  0EFB               	movlw	-5
 17343  016658  AEE3               	btfss	plusw1,7,c
 17344  01665A  D7EA               	goto	l10051
 17345  01665C                     u10420:
 17346                           
 17347                           ;stkvar	_divisor @ sp[(-2)+-4]
 17348  01665C  0EFA               	movlw	-6
 17349  01665E  006F FF8C  F03C    	movff	plusw1,btemp+10
 17350  016664  0EFB               	movlw	-5
 17351  016666  006F FF8C  F03D    	movff	plusw1,btemp+11
 17352                           
 17353                           ;stkvar	_dividend @ sp[(-2)+-2]
 17354  01666C  0EFC               	movlw	-4
 17355  01666E  006F FF8C  F03A    	movff	plusw1,btemp+8
 17356  016674  0EFD               	movlw	-3
 17357  016676  006F FF8C  F03B    	movff	plusw1,btemp+9
 17358  01667C  503C               	movf	(btemp+10)^0,w,c
 17359  01667E  5C3A               	subwf	(btemp+8)^0,w,c
 17360  016680  503D               	movf	(btemp+11)^0,w,c
 17361  016682  583B               	subwfb	(btemp+9)^0,w,c
 17362  016684  A0D8               	btfss	status,0,c
 17363  016686  D014               	goto	l10061
 17364                           
 17365                           ;stkvar	_divisor @ sp[(-2)+-4]
 17366                           ;stkvar	_dividend @ sp[(-2)+-2]
 17367  016688  0EFC               	movlw	-4
 17368  01668A  50E3               	movf	plusw1,w,c
 17369  01668C  6E32               	movwf	btemp^0,c
 17370  01668E  0EFA               	movlw	-6
 17371  016690  50E3               	movf	plusw1,w,c
 17372  016692  5E32               	subwf	btemp^0,f,c
 17373  016694  0EFC               	movlw	-4
 17374  016696  0060  F0CB  FFE3   	movff	btemp,plusw1
 17375  01669C  0EFD               	movlw	-3
 17376  01669E  50E3               	movf	plusw1,w,c
 17377  0166A0  6E32               	movwf	btemp^0,c
 17378  0166A2  0EFB               	movlw	-5
 17379  0166A4  50E3               	movf	plusw1,w,c
 17380  0166A6  5A32               	subwfb	btemp^0,f,c
 17381  0166A8  0EFD               	movlw	-3
 17382  0166AA  0060  F0CB  FFE3   	movff	btemp,plusw1
 17383  0166B0                     l10061:
 17384                           
 17385                           ;stkvar	_divisor @ sp[(-2)+-4]
 17386  0166B0  90D8               	bcf	status,0,c
 17387  0166B2  0EFB               	movlw	-5
 17388  0166B4  32E3               	rrcf	plusw1,f,c
 17389  0166B6  0EFA               	movlw	-6
 17390  0166B8  32E3               	rrcf	plusw1,f,c
 17391                           
 17392                           ;stkvar	_counter @ sp[(-2)+1]
 17393  0166BA  0EFF               	movlw	-1
 17394  0166BC  50E3               	movf	plusw1,w,c
 17395  0166BE  6E32               	movwf	btemp^0,c
 17396  0166C0  0E01               	movlw	1
 17397  0166C2  5E32               	subwf	btemp^0,f,c
 17398  0166C4  0EFF               	movlw	-1
 17399  0166C6  0060  F0CB  FFE3   	movff	btemp,plusw1
 17400  0166CC  A4D8               	btfss	status,2,c
 17401  0166CE  D7C6               	goto	u10420
 17402  0166D0                     u10440:
 17403                           
 17404                           ;stkvar	_sign @ sp[(-2)+0]
 17405  0166D0  0EFE               	movlw	-2
 17406  0166D2  50E3               	movf	plusw1,w,c
 17407  0166D4  B4D8               	btfsc	status,2,c
 17408  0166D6  D006               	goto	l10069
 17409                           
 17410                           ;stkvar	_dividend @ sp[(-2)+-2]
 17411                           ;stkvar	_dividend @ sp[(-2)+-2]
 17412  0166D8  0EFC               	movlw	-4
 17413  0166DA  6CE3               	negf	plusw1,c
 17414  0166DC  0EFD               	movlw	-3
 17415  0166DE  1EE3               	comf	plusw1,f,c
 17416  0166E0  B0D8               	btfsc	status,0,c
 17417  0166E2  2AE3               	incf	plusw1,f,c
 17418  0166E4                     l10069:
 17419                           
 17420                           ;stkvar	_dividend @ sp[(-2)+-2]
 17421  0166E4  0EFC               	movlw	-4
 17422  0166E6  006F FF8C  F032    	movff	plusw1,btemp
 17423  0166EC  0EFD               	movlw	-3
 17424  0166EE  006F FF8C  F033    	movff	plusw1,btemp+1
 17425                           
 17426                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 17427  0166F4  0EFA               	movlw	250
 17428  0166F6  26E1               	addwf	fsr1l,f,c
 17429  0166F8  0EFF               	movlw	255
 17430  0166FA  22E2               	addwfc	fsr1h,f,c
 17431  0166FC  0012               	return		;funcret
 17432  0166FE                     __end_of___awmod:
 17433                           	opt callstack 0
 17434                           
 17435 ;; *************** function ___awdiv *****************
 17436 ;; Defined at:
 17437 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 17438 ;; Parameters:    Size  Location     Type
 17439 ;;  dividend        2  [STACK] int 
 17440 ;;  divisor         2  [STACK] int 
 17441 ;; Auto vars:     Size  Location     Type
 17442 ;;  quotient        2  [STACK] int 
 17443 ;;  sign            1  [STACK] unsigned char 
 17444 ;;  counter         1  [STACK] unsigned char 
 17445 ;; Return value:  Size  Location     Type
 17446 ;;                  2  [STACK] int 
 17447 ;; Registers used:
 17448 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 17449 ;; Tracked objects:
 17450 ;;		On entry : 0/5
 17451 ;;		On exit  : 0/0
 17452 ;;		Unchanged: 0/0
 17453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17458 ;;Total ram usage:        0 bytes
 17459 ;; Hardware stack levels used:    1
 17460 ;; Hardware stack levels required when called:    6
 17461 ;; This function calls:
 17462 ;;		Nothing
 17463 ;; This function is called by:
 17464 ;;		_efgtoa
 17465 ;; This function uses a reentrant model
 17466 ;;
 17467                           
 17468                           	psect	text60
 17469  0160FE                     __ptext60:
 17470                           	opt callstack 0
 17471  0160FE                     ___awdiv:
 17472                           	opt callstack 0
 17473                           
 17474                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17475  0160FE  52E6               	movf	postinc1,f,c
 17476  016100  52E6               	movf	postinc1,f,c
 17477  016102  52E6               	movf	postinc1,f,c
 17478  016104  52E6               	movf	postinc1,f,c
 17479                           
 17480                           ;stkvar	_sign @ sp[(-4)+2]
 17481                           
 17482                           ;incstack = 0
 17483  016106  0EFE               	movlw	-2
 17484  016108  6AE3               	clrf	plusw1,c
 17485                           
 17486                           ;stkvar	_divisor @ sp[(-4)+-4]
 17487  01610A  0EF9               	movlw	-7
 17488  01610C  AEE3               	btfss	plusw1,7,c
 17489  01610E  D009               	goto	l9997
 17490                           
 17491                           ;stkvar	_divisor @ sp[(-4)+-4]
 17492                           ;stkvar	_divisor @ sp[(-4)+-4]
 17493  016110  0EF8               	movlw	-8
 17494  016112  6CE3               	negf	plusw1,c
 17495  016114  0EF9               	movlw	-7
 17496  016116  1EE3               	comf	plusw1,f,c
 17497  016118  B0D8               	btfsc	status,0,c
 17498  01611A  2AE3               	incf	plusw1,f,c
 17499                           
 17500                           ;stkvar	_sign @ sp[(-4)+2]
 17501  01611C  0EFE               	movlw	-2
 17502  01611E  6AE3               	clrf	plusw1,c
 17503  016120  2AE3               	incf	plusw1,f,c
 17504  016122                     l9997:
 17505                           
 17506                           ;stkvar	_dividend @ sp[(-4)+-2]
 17507  016122  0EFB               	movlw	-5
 17508  016124  AEE3               	btfss	plusw1,7,c
 17509  016126  D008               	goto	l10003
 17510                           
 17511                           ;stkvar	_dividend @ sp[(-4)+-2]
 17512                           ;stkvar	_dividend @ sp[(-4)+-2]
 17513  016128  0EFA               	movlw	-6
 17514  01612A  6CE3               	negf	plusw1,c
 17515  01612C  0EFB               	movlw	-5
 17516  01612E  1EE3               	comf	plusw1,f,c
 17517  016130  B0D8               	btfsc	status,0,c
 17518  016132  2AE3               	incf	plusw1,f,c
 17519                           
 17520                           ;stkvar	_sign @ sp[(-4)+2]
 17521  016134  0EFE               	movlw	-2
 17522  016136  70E3               	btg	plusw1,0,c
 17523  016138                     l10003:
 17524                           
 17525                           ;stkvar	_quotient @ sp[(-4)+0]
 17526  016138  0EFC               	movlw	-4
 17527  01613A  6AE3               	clrf	plusw1,c
 17528  01613C  0EFD               	movlw	-3
 17529  01613E  6AE3               	clrf	plusw1,c
 17530                           
 17531                           ;stkvar	_divisor @ sp[(-4)+-4]
 17532  016140  0EF8               	movlw	-8
 17533  016142  006F FF8C  F032    	movff	plusw1,btemp
 17534  016148  0EF9               	movlw	-7
 17535  01614A  50E3               	movf	plusw1,w,c
 17536  01614C  1032               	iorwf	btemp^0,w,c
 17537  01614E  B4D8               	btfsc	status,2,c
 17538  016150  D066               	goto	u10370
 17539                           
 17540                           ;stkvar	_counter @ sp[(-4)+3]
 17541  016152  0EFF               	movlw	-1
 17542  016154  6AE3               	clrf	plusw1,c
 17543  016156  D012               	goto	L15
 17544  016158                     l10009:
 17545                           
 17546                           ;stkvar	_divisor @ sp[(-4)+-4]
 17547  016158  0EF8               	movlw	-8
 17548  01615A  50E3               	movf	plusw1,w,c
 17549  01615C  90D8               	bcf	status,0,c
 17550  01615E  34E8               	rlcf	wreg,w,c
 17551  016160  6E32               	movwf	btemp^0,c
 17552  016162  0EF8               	movlw	-8
 17553  016164  0060  F0CB  FFE3   	movff	btemp,plusw1
 17554  01616A  0EF9               	movlw	-7
 17555  01616C  50E3               	movf	plusw1,w,c
 17556  01616E  34E8               	rlcf	wreg,w,c
 17557  016170  6E32               	movwf	btemp^0,c
 17558  016172  0EF9               	movlw	-7
 17559  016174  0060  F0CB  FFE3   	movff	btemp,plusw1
 17560                           
 17561                           ;stkvar	_counter @ sp[(-4)+3]
 17562  01617A  0EFF               	movlw	-1
 17563  01617C                     L15:
 17564  01617C  2AE3               	incf	plusw1,f,c
 17565                           
 17566                           ;stkvar	_divisor @ sp[(-4)+-4]
 17567  01617E  0EF9               	movlw	-7
 17568  016180  AEE3               	btfss	plusw1,7,c
 17569  016182  D7EA               	goto	l10009
 17570  016184                     u10350:
 17571                           
 17572                           ;stkvar	_quotient @ sp[(-4)+0]
 17573  016184  0EFC               	movlw	-4
 17574  016186  50E3               	movf	plusw1,w,c
 17575  016188  90D8               	bcf	status,0,c
 17576  01618A  34E8               	rlcf	wreg,w,c
 17577  01618C  6E32               	movwf	btemp^0,c
 17578  01618E  0EFC               	movlw	-4
 17579  016190  0060  F0CB  FFE3   	movff	btemp,plusw1
 17580  016196  0EFD               	movlw	-3
 17581  016198  50E3               	movf	plusw1,w,c
 17582  01619A  34E8               	rlcf	wreg,w,c
 17583  01619C  6E32               	movwf	btemp^0,c
 17584  01619E  0EFD               	movlw	-3
 17585  0161A0  0060  F0CB  FFE3   	movff	btemp,plusw1
 17586                           
 17587                           ;stkvar	_divisor @ sp[(-4)+-4]
 17588  0161A6  0EF8               	movlw	-8
 17589  0161A8  006F FF8C  F03C    	movff	plusw1,btemp+10
 17590  0161AE  0EF9               	movlw	-7
 17591  0161B0  006F FF8C  F03D    	movff	plusw1,btemp+11
 17592                           
 17593                           ;stkvar	_dividend @ sp[(-4)+-2]
 17594  0161B6  0EFA               	movlw	-6
 17595  0161B8  006F FF8C  F03A    	movff	plusw1,btemp+8
 17596  0161BE  0EFB               	movlw	-5
 17597  0161C0  006F FF8C  F03B    	movff	plusw1,btemp+9
 17598  0161C6  503C               	movf	(btemp+10)^0,w,c
 17599  0161C8  5C3A               	subwf	(btemp+8)^0,w,c
 17600  0161CA  503D               	movf	(btemp+11)^0,w,c
 17601  0161CC  583B               	subwfb	(btemp+9)^0,w,c
 17602  0161CE  A0D8               	btfss	status,0,c
 17603  0161D0  D016               	goto	l10023
 17604                           
 17605                           ;stkvar	_divisor @ sp[(-4)+-4]
 17606                           ;stkvar	_dividend @ sp[(-4)+-2]
 17607  0161D2  0EFA               	movlw	-6
 17608  0161D4  50E3               	movf	plusw1,w,c
 17609  0161D6  6E32               	movwf	btemp^0,c
 17610  0161D8  0EF8               	movlw	-8
 17611  0161DA  50E3               	movf	plusw1,w,c
 17612  0161DC  5E32               	subwf	btemp^0,f,c
 17613  0161DE  0EFA               	movlw	-6
 17614  0161E0  0060  F0CB  FFE3   	movff	btemp,plusw1
 17615  0161E6  0EFB               	movlw	-5
 17616  0161E8  50E3               	movf	plusw1,w,c
 17617  0161EA  6E32               	movwf	btemp^0,c
 17618  0161EC  0EF9               	movlw	-7
 17619  0161EE  50E3               	movf	plusw1,w,c
 17620  0161F0  5A32               	subwfb	btemp^0,f,c
 17621  0161F2  0EFB               	movlw	-5
 17622  0161F4  0060  F0CB  FFE3   	movff	btemp,plusw1
 17623                           
 17624                           ;stkvar	_quotient @ sp[(-4)+0]
 17625  0161FA  0EFC               	movlw	-4
 17626  0161FC  80E3               	bsf	plusw1,0,c
 17627  0161FE                     l10023:
 17628                           
 17629                           ;stkvar	_divisor @ sp[(-4)+-4]
 17630  0161FE  90D8               	bcf	status,0,c
 17631  016200  0EF9               	movlw	-7
 17632  016202  32E3               	rrcf	plusw1,f,c
 17633  016204  0EF8               	movlw	-8
 17634  016206  32E3               	rrcf	plusw1,f,c
 17635                           
 17636                           ;stkvar	_counter @ sp[(-4)+3]
 17637  016208  0EFF               	movlw	-1
 17638  01620A  50E3               	movf	plusw1,w,c
 17639  01620C  6E32               	movwf	btemp^0,c
 17640  01620E  0E01               	movlw	1
 17641  016210  5E32               	subwf	btemp^0,f,c
 17642  016212  0EFF               	movlw	-1
 17643  016214  0060  F0CB  FFE3   	movff	btemp,plusw1
 17644  01621A  A4D8               	btfss	status,2,c
 17645  01621C  D7B3               	goto	u10350
 17646  01621E                     u10370:
 17647                           
 17648                           ;stkvar	_sign @ sp[(-4)+2]
 17649  01621E  0EFE               	movlw	-2
 17650  016220  50E3               	movf	plusw1,w,c
 17651  016222  B4D8               	btfsc	status,2,c
 17652  016224  D006               	goto	l10031
 17653                           
 17654                           ;stkvar	_quotient @ sp[(-4)+0]
 17655                           ;stkvar	_quotient @ sp[(-4)+0]
 17656  016226  0EFC               	movlw	-4
 17657  016228  6CE3               	negf	plusw1,c
 17658  01622A  0EFD               	movlw	-3
 17659  01622C  1EE3               	comf	plusw1,f,c
 17660  01622E  B0D8               	btfsc	status,0,c
 17661  016230  2AE3               	incf	plusw1,f,c
 17662  016232                     l10031:
 17663                           
 17664                           ;stkvar	_quotient @ sp[(-4)+0]
 17665  016232  0EFC               	movlw	-4
 17666  016234  006F FF8C  F032    	movff	plusw1,btemp
 17667  01623A  0EFD               	movlw	-3
 17668  01623C  006F FF8C  F033    	movff	plusw1,btemp+1
 17669                           
 17670                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 17671  016242  0EF8               	movlw	248
 17672  016244  26E1               	addwf	fsr1l,f,c
 17673  016246  0EFF               	movlw	255
 17674  016248  22E2               	addwfc	fsr1h,f,c
 17675  01624A  0012               	return		;funcret
 17676  01624C                     __end_of___awdiv:
 17677                           	opt callstack 0
 17678                           
 17679 ;; *************** function _dtoa *****************
 17680 ;; Defined at:
 17681 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 17682 ;; Parameters:    Size  Location     Type
 17683 ;;  fp              2  [STACK] PTR struct _IO_FILE
 17684 ;;		 -> f(6), NULL(0), 
 17685 ;;  d               8  [STACK] long long 
 17686 ;; Auto vars:     Size  Location     Type
 17687 ;;  n               8  [STACK] long long 
 17688 ;;  i               2  [STACK] int 
 17689 ;;  s               2  [STACK] int 
 17690 ;;  w               2  [STACK] int 
 17691 ;;  p               2  [STACK] int 
 17692 ;; Return value:  Size  Location     Type
 17693 ;;                  2  [STACK] int 
 17694 ;; Registers used:
 17695 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 17696 ;; Tracked objects:
 17697 ;;		On entry : 0/5
 17698 ;;		On exit  : 0/0
 17699 ;;		Unchanged: 0/0
 17700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17705 ;;Total ram usage:        0 bytes
 17706 ;; Hardware stack levels used:    1
 17707 ;; Hardware stack levels required when called:   11
 17708 ;; This function calls:
 17709 ;;		___aodiv
 17710 ;;		___aomod
 17711 ;;		_abs
 17712 ;;		_pad
 17713 ;; This function is called by:
 17714 ;;		_vfpfcnvrt
 17715 ;; This function uses a reentrant model
 17716 ;;
 17717                           
 17718                           	psect	text61
 17719  013868                     __ptext61:
 17720                           	opt callstack 0
 17721  013868                     _dtoa:
 17722                           	opt callstack 0
 17723                           
 17724                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 17725  013868  0E12               	movlw	18
 17726  01386A  26E1               	addwf	fsr1l,f,c
 17727  01386C  0E00               	movlw	0
 17728  01386E  22E2               	addwfc	fsr1h,f,c
 17729                           
 17730                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 17731                           ;stkvar	_d @ sp[(-18)+-10]
 17732                           
 17733                           ;incstack = 0
 17734  013870  0EE4               	movlw	228
 17735  013872  24E1               	addwf	fsr1l,w,c
 17736  013874  6ED9               	movwf	fsr2l,c
 17737  013876  0EFF               	movlw	255
 17738  013878  20E2               	addwfc	fsr1h,w,c
 17739  01387A  6EDA               	movwf	fsr2h,c
 17740                           
 17741                           ;stkvar	_n @ sp[(-18)+2]
 17742  01387C  0E08               	movlw	8
 17743  01387E  6E32               	movwf	btemp^0,c
 17744  013880  0EF0               	movlw	-16
 17745  013882                     us1068999:
 17746  013882  006F FF7B FFE3     	movff	postinc2,plusw1
 17747  013888  28E8               	incf	wreg,w,c
 17748  01388A  2E32               	decfsz	btemp^0,f,c
 17749  01388C  D7FA               	bra	us1068999
 17750                           
 17751                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 17752                           ;stkvar	_n @ sp[(-18)+2]
 17753  01388E  0EF7               	movlw	-9
 17754  013890  AEE3               	btfss	plusw1,7,c
 17755  013892  D002               	goto	u10690
 17756  013894  0E01               	movlw	1
 17757  013896  D001               	goto	u10700
 17758  013898                     u10690:
 17759  013898  0E00               	movlw	0
 17760  01389A                     u10700:
 17761  01389A  6E3C               	movwf	(btemp+10)^0,c
 17762  01389C  6A3D               	clrf	(btemp+11)^0,c
 17763                           
 17764                           ;stkvar	_s @ sp[(-18)+12]
 17765  01389E  0EFA               	movlw	-6
 17766  0138A0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 17767  0138A6  0EFB               	movlw	-5
 17768  0138A8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 17769                           
 17770                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 17771                           ;stkvar	_s @ sp[(-18)+12]
 17772  0138AE  0EFA               	movlw	-6
 17773  0138B0  006F FF8C  F032    	movff	plusw1,btemp
 17774  0138B6  0EFB               	movlw	-5
 17775  0138B8  50E3               	movf	plusw1,w,c
 17776  0138BA  1032               	iorwf	btemp^0,w,c
 17777  0138BC  B4D8               	btfsc	status,2,c
 17778  0138BE  D025               	goto	u10720
 17779                           
 17780                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 17781                           ;stkvar	_n @ sp[(-18)+2]
 17782                           ;stkvar	_n @ sp[(-18)+2]
 17783  0138C0  0EF0               	movlw	-16
 17784  0138C2  6CE3               	negf	plusw1,c
 17785  0138C4  0EF1               	movlw	-15
 17786  0138C6  1EE3               	comf	plusw1,f,c
 17787  0138C8  0EF2               	movlw	-14
 17788  0138CA  1EE3               	comf	plusw1,f,c
 17789  0138CC  0EF3               	movlw	-13
 17790  0138CE  1EE3               	comf	plusw1,f,c
 17791  0138D0  0EF4               	movlw	-12
 17792  0138D2  1EE3               	comf	plusw1,f,c
 17793  0138D4  0EF5               	movlw	-11
 17794  0138D6  1EE3               	comf	plusw1,f,c
 17795  0138D8  0EF6               	movlw	-10
 17796  0138DA  1EE3               	comf	plusw1,f,c
 17797  0138DC  0EF7               	movlw	-9
 17798  0138DE  1EE3               	comf	plusw1,f,c
 17799  0138E0  E314               	bnc	u10720
 17800  0138E2  0EF1               	movlw	-15
 17801  0138E4  2AE3               	incf	plusw1,f,c
 17802  0138E6  E311               	bnc	u10720
 17803  0138E8  0EF2               	movlw	-14
 17804  0138EA  2AE3               	incf	plusw1,f,c
 17805  0138EC  E30E               	bnc	u10720
 17806  0138EE  0EF3               	movlw	-13
 17807  0138F0  2AE3               	incf	plusw1,f,c
 17808  0138F2  E30B               	bnc	u10720
 17809  0138F4  0EF4               	movlw	-12
 17810  0138F6  2AE3               	incf	plusw1,f,c
 17811  0138F8  E308               	bnc	u10720
 17812  0138FA  0EF5               	movlw	-11
 17813  0138FC  2AE3               	incf	plusw1,f,c
 17814  0138FE  E305               	bnc	u10720
 17815  013900  0EF6               	movlw	-10
 17816  013902  2AE3               	incf	plusw1,f,c
 17817  013904  E302               	bnc	u10720
 17818  013906  0EF7               	movlw	-9
 17819  013908  2AE3               	incf	plusw1,f,c
 17820  01390A                     u10720:
 17821                           
 17822                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 17823  01390A  AE1E               	btfss	(_prec+1)^0,7,c
 17824                           
 17825                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 17826  01390C  921F               	bcf	_flags^0,1,c
 17827                           
 17828                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 17829  01390E  BE1E               	btfsc	(_prec+1)^0,7,c
 17830  013910  D005               	goto	u10740
 17831  013912  501E               	movf	(_prec+1)^0,w,c
 17832  013914  E110               	bnz	l10207
 17833  013916  041D               	decf	_prec^0,w,c
 17834  013918  B0D8               	btfsc	status,0,c
 17835  01391A  D00D               	goto	l10207
 17836  01391C                     u10740:
 17837  01391C  0E01               	movlw	1
 17838  01391E  6E3C               	movwf	(btemp+10)^0,c
 17839  013920  0E00               	movlw	0
 17840  013922  6E3D               	movwf	(btemp+11)^0,c
 17841                           
 17842                           ;stkvar	_p @ sp[(-18)+16]
 17843  013924  0EFE               	movlw	-2
 17844  013926  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 17845  01392C  0EFF               	movlw	-1
 17846  01392E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 17847  013934  D008               	goto	l1828
 17848  013936                     l10207:
 17849                           
 17850                           ;stkvar	_p @ sp[(-18)+16]
 17851  013936  0EFE               	movlw	-2
 17852  013938  0060  F077  FFE3   	movff	_prec,plusw1
 17853  01393E  0EFF               	movlw	-1
 17854  013940  0060  F07B  FFE3   	movff	_prec+1,plusw1
 17855  013946                     l1828:
 17856                           
 17857                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 17858                           ;stkvar	_w @ sp[(-18)+14]
 17859  013946  0EFC               	movlw	-4
 17860  013948  0060  F06F  FFE3   	movff	_width,plusw1
 17861  01394E  0EFD               	movlw	-3
 17862  013950  0060  F073  FFE3   	movff	_width+1,plusw1
 17863                           
 17864                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 17865                           ;stkvar	_s @ sp[(-18)+12]
 17866  013956  0EFA               	movlw	-6
 17867  013958  006F FF8C  F032    	movff	plusw1,btemp
 17868  01395E  0EFB               	movlw	-5
 17869  013960  50E3               	movf	plusw1,w,c
 17870  013962  1032               	iorwf	btemp^0,w,c
 17871  013964  A4D8               	btfss	status,2,c
 17872  013966  D002               	goto	u10760
 17873  013968  A41F               	btfss	_flags^0,2,c
 17874  01396A  D00A               	goto	l10215
 17875  01396C                     u10760:
 17876                           
 17877                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 17878                           ;stkvar	_w @ sp[(-18)+14]
 17879  01396C  50E1               	movf	fsr1l,w,c
 17880  01396E  0FFC               	addlw	-4
 17881  013970  6ED9               	movwf	fsr2l,c
 17882  013972  50E2               	movf	fsr1h,w,c
 17883  013974  6EDA               	movwf	fsr2h,c
 17884  013976  0EFF               	movlw	255
 17885  013978  22DA               	addwfc	fsr2h,f,c
 17886  01397A  06DE               	decf	postinc2,f,c
 17887  01397C  0E00               	movlw	0
 17888  01397E  5ADD               	subwfb	postdec2,f,c
 17889  013980                     l10215:
 17890                           
 17891                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 17892  013980  0E4F               	movlw	79
 17893  013982  6E3C               	movwf	(btemp+10)^0,c
 17894  013984  0E00               	movlw	0
 17895  013986  6E3D               	movwf	(btemp+11)^0,c
 17896                           
 17897                           ;stkvar	_i @ sp[(-18)+10]
 17898  013988  0EF8               	movlw	-8
 17899  01398A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 17900  013990  0EF9               	movlw	-7
 17901  013992  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 17902                           
 17903                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 17904  013998  0102               	movlb	2	; () banked
 17905  01399A  6B8F               	clrf	(_dbuf+79)& (0+255),b
 17906                           
 17907                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 17908  01399C  D109               	goto	l10229
 17909  01399E                     l10219:
 17910                           
 17911                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 17912                           ;stkvar	_i @ sp[(-18)+10]
 17913  01399E  50E1               	movf	fsr1l,w,c
 17914  0139A0  0FF8               	addlw	-8
 17915  0139A2  6ED9               	movwf	fsr2l,c
 17916  0139A4  50E2               	movf	fsr1h,w,c
 17917  0139A6  6EDA               	movwf	fsr2h,c
 17918  0139A8  0EFF               	movlw	255
 17919  0139AA  22DA               	addwfc	fsr2h,f,c
 17920  0139AC  06DE               	decf	postinc2,f,c
 17921  0139AE  0E00               	movlw	0
 17922  0139B0  5ADD               	subwfb	postdec2,f,c
 17923                           
 17924                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 17925  0139B2  0E0A               	movlw	10
 17926  0139B4  6EE6               	movwf	postinc1,c
 17927  0139B6  0E00               	movlw	0
 17928  0139B8  6EE6               	movwf	postinc1,c
 17929  0139BA  0E00               	movlw	0
 17930  0139BC  6EE6               	movwf	postinc1,c
 17931  0139BE  0E00               	movlw	0
 17932  0139C0  6EE6               	movwf	postinc1,c
 17933  0139C2  0E00               	movlw	0
 17934  0139C4  6EE6               	movwf	postinc1,c
 17935  0139C6  0E00               	movlw	0
 17936  0139C8  6EE6               	movwf	postinc1,c
 17937  0139CA  0E00               	movlw	0
 17938  0139CC  6EE6               	movwf	postinc1,c
 17939  0139CE  0E00               	movlw	0
 17940  0139D0  6EE6               	movwf	postinc1,c
 17941                           
 17942                           ;stkvar	_n @ sp[(-26)+2]
 17943  0139D2  50E1               	movf	fsr1l,w,c
 17944  0139D4  0FE8               	addlw	-24
 17945  0139D6  6ED9               	movwf	fsr2l,c
 17946  0139D8  50E2               	movf	fsr1h,w,c
 17947  0139DA  6EDA               	movwf	fsr2h,c
 17948  0139DC  0EFF               	movlw	255
 17949  0139DE  22DA               	addwfc	fsr2h,f,c
 17950  0139E0  006F FF7B FFE6     	movff	postinc2,postinc1
 17951  0139E6  006F FF7B FFE6     	movff	postinc2,postinc1
 17952  0139EC  006F FF7B FFE6     	movff	postinc2,postinc1
 17953  0139F2  006F FF7B FFE6     	movff	postinc2,postinc1
 17954  0139F8  006F FF7B FFE6     	movff	postinc2,postinc1
 17955  0139FE  006F FF7B FFE6     	movff	postinc2,postinc1
 17956  013A04  006F FF7B FFE6     	movff	postinc2,postinc1
 17957  013A0A  006F FF7B FFE6     	movff	postinc2,postinc1
 17958  013A10  EC5B  F0A9         	call	___aomod	;wreg free
 17959  013A14  52E5               	movf	postdec1,f,c
 17960  013A16  006F FF9C  F049    	movff	indf1,btemp+23
 17961  013A1C  52E5               	movf	postdec1,f,c
 17962  013A1E  006F FF9C  F048    	movff	indf1,btemp+22
 17963  013A24  52E5               	movf	postdec1,f,c
 17964  013A26  006F FF9C  F047    	movff	indf1,btemp+21
 17965  013A2C  52E5               	movf	postdec1,f,c
 17966  013A2E  006F FF9C  F046    	movff	indf1,btemp+20
 17967  013A34  52E5               	movf	postdec1,f,c
 17968  013A36  006F FF9C  F045    	movff	indf1,btemp+19
 17969  013A3C  52E5               	movf	postdec1,f,c
 17970  013A3E  006F FF9C  F044    	movff	indf1,btemp+18
 17971  013A44  52E5               	movf	postdec1,f,c
 17972  013A46  006F FF9C  F043    	movff	indf1,btemp+17
 17973  013A4C  52E5               	movf	postdec1,f,c
 17974  013A4E  006F FF9C  F042    	movff	indf1,btemp+16
 17975  013A54  0EF8               	movlw	248
 17976  013A56  26E1               	addwf	fsr1l,f,c
 17977  013A58  0EFF               	movlw	255
 17978  013A5A  22E2               	addwfc	fsr1h,f,c
 17979  013A5C  0060  F108  F03C   	movff	btemp+16,btemp+10
 17980  013A62  0060  F10C  F03D   	movff	btemp+17,btemp+11
 17981  013A68  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 17982  013A6E  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 17983  013A74  EC84  F0BD         	call	_abs	;wreg free
 17984  013A78  0E30               	movlw	48
 17985  013A7A  2632               	addwf	btemp^0,f,c
 17986                           
 17987                           ;stkvar	_i @ sp[(-18)+10]
 17988  013A7C  0EF8               	movlw	-8
 17989  013A7E  006F FF8C  F03C    	movff	plusw1,btemp+10
 17990  013A84  0EF9               	movlw	-7
 17991  013A86  006F FF8C  F03D    	movff	plusw1,btemp+11
 17992  013A8C  0E40               	movlw	low _dbuf
 17993  013A8E  243C               	addwf	(btemp+10)^0,w,c
 17994  013A90  6ED9               	movwf	fsr2l,c
 17995  013A92  0E02               	movlw	high _dbuf
 17996  013A94  203D               	addwfc	(btemp+11)^0,w,c
 17997  013A96  6EDA               	movwf	fsr2h,c
 17998  013A98  0060  F0CB  FFDF   	movff	btemp,indf2
 17999                           
 18000                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 18001                           ;stkvar	_p @ sp[(-18)+16]
 18002  013A9E  50E1               	movf	fsr1l,w,c
 18003  013AA0  0FFE               	addlw	-2
 18004  013AA2  6ED9               	movwf	fsr2l,c
 18005  013AA4  50E2               	movf	fsr1h,w,c
 18006  013AA6  6EDA               	movwf	fsr2h,c
 18007  013AA8  0EFF               	movlw	255
 18008  013AAA  22DA               	addwfc	fsr2h,f,c
 18009  013AAC  06DE               	decf	postinc2,f,c
 18010  013AAE  0E00               	movlw	0
 18011  013AB0  5ADD               	subwfb	postdec2,f,c
 18012                           
 18013                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 18014                           ;stkvar	_w @ sp[(-18)+14]
 18015  013AB2  50E1               	movf	fsr1l,w,c
 18016  013AB4  0FFC               	addlw	-4
 18017  013AB6  6ED9               	movwf	fsr2l,c
 18018  013AB8  50E2               	movf	fsr1h,w,c
 18019  013ABA  6EDA               	movwf	fsr2h,c
 18020  013ABC  0EFF               	movlw	255
 18021  013ABE  22DA               	addwfc	fsr2h,f,c
 18022  013AC0  06DE               	decf	postinc2,f,c
 18023  013AC2  0E00               	movlw	0
 18024  013AC4  5ADD               	subwfb	postdec2,f,c
 18025                           
 18026                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 18027  013AC6  0E0A               	movlw	10
 18028  013AC8  6EE6               	movwf	postinc1,c
 18029  013ACA  0E00               	movlw	0
 18030  013ACC  6EE6               	movwf	postinc1,c
 18031  013ACE  0E00               	movlw	0
 18032  013AD0  6EE6               	movwf	postinc1,c
 18033  013AD2  0E00               	movlw	0
 18034  013AD4  6EE6               	movwf	postinc1,c
 18035  013AD6  0E00               	movlw	0
 18036  013AD8  6EE6               	movwf	postinc1,c
 18037  013ADA  0E00               	movlw	0
 18038  013ADC  6EE6               	movwf	postinc1,c
 18039  013ADE  0E00               	movlw	0
 18040  013AE0  6EE6               	movwf	postinc1,c
 18041  013AE2  0E00               	movlw	0
 18042  013AE4  6EE6               	movwf	postinc1,c
 18043                           
 18044                           ;stkvar	_n @ sp[(-26)+2]
 18045  013AE6  50E1               	movf	fsr1l,w,c
 18046  013AE8  0FE8               	addlw	-24
 18047  013AEA  6ED9               	movwf	fsr2l,c
 18048  013AEC  50E2               	movf	fsr1h,w,c
 18049  013AEE  6EDA               	movwf	fsr2h,c
 18050  013AF0  0EFF               	movlw	255
 18051  013AF2  22DA               	addwfc	fsr2h,f,c
 18052  013AF4  006F FF7B FFE6     	movff	postinc2,postinc1
 18053  013AFA  006F FF7B FFE6     	movff	postinc2,postinc1
 18054  013B00  006F FF7B FFE6     	movff	postinc2,postinc1
 18055  013B06  006F FF7B FFE6     	movff	postinc2,postinc1
 18056  013B0C  006F FF7B FFE6     	movff	postinc2,postinc1
 18057  013B12  006F FF7B FFE6     	movff	postinc2,postinc1
 18058  013B18  006F FF7B FFE6     	movff	postinc2,postinc1
 18059  013B1E  006F FF7B FFE6     	movff	postinc2,postinc1
 18060  013B24  ECE1  F0A6         	call	___aodiv	;wreg free
 18061  013B28  52E5               	movf	postdec1,f,c
 18062  013B2A  006F FF9C  F049    	movff	indf1,btemp+23
 18063  013B30  52E5               	movf	postdec1,f,c
 18064  013B32  006F FF9C  F048    	movff	indf1,btemp+22
 18065  013B38  52E5               	movf	postdec1,f,c
 18066  013B3A  006F FF9C  F047    	movff	indf1,btemp+21
 18067  013B40  52E5               	movf	postdec1,f,c
 18068  013B42  006F FF9C  F046    	movff	indf1,btemp+20
 18069  013B48  52E5               	movf	postdec1,f,c
 18070  013B4A  006F FF9C  F045    	movff	indf1,btemp+19
 18071  013B50  52E5               	movf	postdec1,f,c
 18072  013B52  006F FF9C  F044    	movff	indf1,btemp+18
 18073  013B58  52E5               	movf	postdec1,f,c
 18074  013B5A  006F FF9C  F043    	movff	indf1,btemp+17
 18075  013B60  52E5               	movf	postdec1,f,c
 18076  013B62  006F FF9C  F042    	movff	indf1,btemp+16
 18077  013B68  0EF8               	movlw	248
 18078  013B6A  26E1               	addwf	fsr1l,f,c
 18079  013B6C  0EFF               	movlw	255
 18080  013B6E  22E2               	addwfc	fsr1h,f,c
 18081                           
 18082                           ;stkvar	_n @ sp[(-18)+2]
 18083  013B70  0EF0               	movlw	-16
 18084  013B72  0060  F10B  FFE3   	movff	btemp+16,plusw1
 18085  013B78  0EF1               	movlw	-15
 18086  013B7A  0060  F10F  FFE3   	movff	btemp+17,plusw1
 18087  013B80  0EF2               	movlw	-14
 18088  013B82  0060  F113  FFE3   	movff	btemp+18,plusw1
 18089  013B88  0EF3               	movlw	-13
 18090  013B8A  0060  F117  FFE3   	movff	btemp+19,plusw1
 18091  013B90  0EF4               	movlw	-12
 18092  013B92  0060  F11B  FFE3   	movff	btemp+20,plusw1
 18093  013B98  0EF5               	movlw	-11
 18094  013B9A  0060  F11F  FFE3   	movff	btemp+21,plusw1
 18095  013BA0  0EF6               	movlw	-10
 18096  013BA2  0060  F123  FFE3   	movff	btemp+22,plusw1
 18097  013BA8  0EF7               	movlw	-9
 18098  013BAA  0060  F127  FFE3   	movff	btemp+23,plusw1
 18099  013BB0                     l10229:
 18100                           
 18101                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 18102                           ;stkvar	_i @ sp[(-18)+10]
 18103  013BB0  0EF9               	movlw	-7
 18104  013BB2  BEE3               	btfsc	plusw1,7,c
 18105  013BB4  D036               	goto	u10810
 18106  013BB6  0EF9               	movlw	-7
 18107  013BB8  50E3               	movf	plusw1,w,c
 18108  013BBA  E104               	bnz	u10770
 18109  013BBC  0EF8               	movlw	-8
 18110  013BBE  04E3               	decf	plusw1,w,c
 18111  013BC0  A0D8               	btfss	status,0,c
 18112  013BC2  D02F               	goto	u10810
 18113  013BC4                     u10770:
 18114                           
 18115                           ;stkvar	_n @ sp[(-18)+2]
 18116  013BC4  0EF0               	movlw	-16
 18117  013BC6  50E3               	movf	plusw1,w,c
 18118  013BC8  E115               	bnz	u10781
 18119  013BCA  0EF1               	movlw	-15
 18120  013BCC  50E3               	movf	plusw1,w,c
 18121  013BCE  E112               	bnz	u10781
 18122  013BD0  0EF2               	movlw	-14
 18123  013BD2  50E3               	movf	plusw1,w,c
 18124  013BD4  E10F               	bnz	u10781
 18125  013BD6  0EF3               	movlw	-13
 18126  013BD8  50E3               	movf	plusw1,w,c
 18127  013BDA  E10C               	bnz	u10781
 18128  013BDC  0EF4               	movlw	-12
 18129  013BDE  50E3               	movf	plusw1,w,c
 18130  013BE0  E109               	bnz	u10781
 18131  013BE2  0EF5               	movlw	-11
 18132  013BE4  50E3               	movf	plusw1,w,c
 18133  013BE6  E106               	bnz	u10781
 18134  013BE8  0EF6               	movlw	-10
 18135  013BEA  50E3               	movf	plusw1,w,c
 18136  013BEC  E103               	bnz	u10781
 18137  013BEE  0EF7               	movlw	-9
 18138  013BF0  50E3               	movf	plusw1,w,c
 18139  013BF2  A4D8               	btfss	status,2,c
 18140  013BF4                     u10781:
 18141  013BF4  D6D4               	goto	l10219
 18142                           
 18143                           ;stkvar	_p @ sp[(-18)+16]
 18144  013BF6  0EFF               	movlw	-1
 18145  013BF8  BEE3               	btfsc	plusw1,7,c
 18146  013BFA  D007               	goto	u10790
 18147  013BFC  0EFF               	movlw	-1
 18148  013BFE  50E3               	movf	plusw1,w,c
 18149  013C00  E103               	bnz	u10791
 18150  013C02  0EFE               	movlw	-2
 18151  013C04  04E3               	decf	plusw1,w,c
 18152  013C06  B0D8               	btfsc	status,0,c
 18153  013C08                     u10791:
 18154  013C08  D6CA               	goto	l10219
 18155  013C0A                     u10790:
 18156                           
 18157                           ;stkvar	_w @ sp[(-18)+14]
 18158  013C0A  0EFD               	movlw	-3
 18159  013C0C  BEE3               	btfsc	plusw1,7,c
 18160  013C0E  D009               	goto	u10810
 18161  013C10  0EFD               	movlw	-3
 18162  013C12  50E3               	movf	plusw1,w,c
 18163  013C14  E104               	bnz	u10800
 18164  013C16  0EFC               	movlw	-4
 18165  013C18  04E3               	decf	plusw1,w,c
 18166  013C1A  A0D8               	btfss	status,0,c
 18167  013C1C  D002               	goto	u10810
 18168  013C1E                     u10800:
 18169  013C1E  B21F               	btfsc	_flags^0,1,c
 18170  013C20  D6BE               	goto	l10219
 18171  013C22                     u10810:
 18172                           
 18173                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 18174                           ;stkvar	_s @ sp[(-18)+12]
 18175  013C22  0EFA               	movlw	-6
 18176  013C24  006F FF8C  F032    	movff	plusw1,btemp
 18177  013C2A  0EFB               	movlw	-5
 18178  013C2C  50E3               	movf	plusw1,w,c
 18179  013C2E  1032               	iorwf	btemp^0,w,c
 18180  013C30  A4D8               	btfss	status,2,c
 18181  013C32  D002               	goto	u10830
 18182  013C34  A41F               	btfss	_flags^0,2,c
 18183  013C36  D033               	goto	l10253
 18184  013C38                     u10830:
 18185                           
 18186                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 18187                           ;stkvar	_i @ sp[(-18)+10]
 18188  013C38  50E1               	movf	fsr1l,w,c
 18189  013C3A  0FF8               	addlw	-8
 18190  013C3C  6ED9               	movwf	fsr2l,c
 18191  013C3E  50E2               	movf	fsr1h,w,c
 18192  013C40  6EDA               	movwf	fsr2h,c
 18193  013C42  0EFF               	movlw	255
 18194  013C44  22DA               	addwfc	fsr2h,f,c
 18195  013C46  06DE               	decf	postinc2,f,c
 18196  013C48  0E00               	movlw	0
 18197  013C4A  5ADD               	subwfb	postdec2,f,c
 18198                           
 18199                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 18200                           ;stkvar	_s @ sp[(-18)+12]
 18201  013C4C  0EFA               	movlw	-6
 18202  013C4E  006F FF8C  F032    	movff	plusw1,btemp
 18203  013C54  0EFB               	movlw	-5
 18204  013C56  50E3               	movf	plusw1,w,c
 18205  013C58  1032               	iorwf	btemp^0,w,c
 18206  013C5A  A4D8               	btfss	status,2,c
 18207  013C5C  D002               	goto	l10249
 18208  013C5E  0E2B               	movlw	43
 18209  013C60  D001               	goto	L16
 18210  013C62                     l10249:
 18211  013C62  0E2D               	movlw	45
 18212  013C64                     L16:
 18213  013C64  6E3C               	movwf	(btemp+10)^0,c
 18214  013C66  0E00               	movlw	0
 18215  013C68  6E3D               	movwf	(btemp+11)^0,c
 18216                           
 18217                           ;stkvar	_dtoa$4355 @ sp[(-18)+0]
 18218  013C6A  0EEE               	movlw	-18
 18219  013C6C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 18220  013C72  0EEF               	movlw	-17
 18221  013C74  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 18222                           
 18223                           ;stkvar	_dtoa$4355 @ sp[(-18)+0]
 18224                           ;stkvar	_i @ sp[(-18)+10]
 18225  013C7A  0EF8               	movlw	-8
 18226  013C7C  006F FF8C  F03C    	movff	plusw1,btemp+10
 18227  013C82  0EF9               	movlw	-7
 18228  013C84  006F FF8C  F03D    	movff	plusw1,btemp+11
 18229  013C8A  0E40               	movlw	low _dbuf
 18230  013C8C  243C               	addwf	(btemp+10)^0,w,c
 18231  013C8E  6ED9               	movwf	fsr2l,c
 18232  013C90  0E02               	movlw	high _dbuf
 18233  013C92  203D               	addwfc	(btemp+11)^0,w,c
 18234  013C94  6EDA               	movwf	fsr2h,c
 18235  013C96  0EEE               	movlw	-18
 18236  013C98  006F FF8F FFDF     	movff	plusw1,indf2
 18237  013C9E                     l10253:
 18238                           
 18239                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 18240                           ;stkvar	_w @ sp[(-18)+14]
 18241  013C9E  0EFC               	movlw	-4
 18242  013CA0  006F FF8F FFE6     	movff	plusw1,postinc1
 18243  013CA6  006F FF8F FFE6     	movff	plusw1,postinc1
 18244                           
 18245                           ;stkvar	_i @ sp[(-20)+10]
 18246  013CAC  0E40               	movlw	low _dbuf
 18247  013CAE  6E3C               	movwf	(btemp+10)^0,c
 18248  013CB0  0E02               	movlw	high _dbuf
 18249  013CB2  6E3D               	movwf	(btemp+11)^0,c
 18250  013CB4  0EF6               	movlw	-10
 18251  013CB6  50E3               	movf	plusw1,w,c
 18252  013CB8  263C               	addwf	(btemp+10)^0,f,c
 18253  013CBA  0EF7               	movlw	-9
 18254  013CBC  50E3               	movf	plusw1,w,c
 18255  013CBE  223D               	addwfc	(btemp+11)^0,f,c
 18256  013CC0  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 18257  013CC6  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 18258                           
 18259                           ;stkvar	_fp @ sp[(-22)+-2]
 18260  013CCC  0EE8               	movlw	-24
 18261  013CCE  006F FF8F FFE6     	movff	plusw1,postinc1
 18262  013CD4  006F FF8F FFE6     	movff	plusw1,postinc1
 18263  013CDA  EC7F  F0B3         	call	_pad	;wreg free
 18264                           
 18265                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 18266  013CDE  0EE4               	movlw	228
 18267  013CE0  26E1               	addwf	fsr1l,f,c
 18268  013CE2  0EFF               	movlw	255
 18269  013CE4  22E2               	addwfc	fsr1h,f,c
 18270  013CE6  0012               	return		;funcret
 18271  013CE8                     __end_of_dtoa:
 18272                           	opt callstack 0
 18273                           
 18274 ;; *************** function _abs *****************
 18275 ;; Defined at:
 18276 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 18277 ;; Parameters:    Size  Location     Type
 18278 ;;  a               2  [STACK] int 
 18279 ;; Auto vars:     Size  Location     Type
 18280 ;;		None
 18281 ;; Return value:  Size  Location     Type
 18282 ;;                  2  [STACK] int 
 18283 ;; Registers used:
 18284 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 18285 ;; Tracked objects:
 18286 ;;		On entry : 0/2
 18287 ;;		On exit  : 0/0
 18288 ;;		Unchanged: 0/0
 18289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18294 ;;Total ram usage:        0 bytes
 18295 ;; Hardware stack levels used:    1
 18296 ;; Hardware stack levels required when called:    6
 18297 ;; This function calls:
 18298 ;;		Nothing
 18299 ;; This function is called by:
 18300 ;;		_dtoa
 18301 ;; This function uses a reentrant model
 18302 ;;
 18303                           
 18304                           	psect	text62
 18305  017B08                     __ptext62:
 18306                           	opt callstack 0
 18307  017B08                     _abs:
 18308                           	opt callstack 17
 18309                           
 18310                           ;stkvar	_a @ sp[(0)+-2]
 18311                           
 18312                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18313                           ;incstack = 0
 18314  017B08  0EFF               	movlw	-1
 18315  017B0A  BEE3               	btfsc	plusw1,7,c
 18316  017B0C  D007               	goto	u9330
 18317  017B0E  0EFF               	movlw	-1
 18318  017B10  50E3               	movf	plusw1,w,c
 18319  017B12  E112               	bnz	l9485
 18320  017B14  0EFE               	movlw	-2
 18321  017B16  04E3               	decf	plusw1,w,c
 18322  017B18  B0D8               	btfsc	status,0,c
 18323  017B1A  D00E               	goto	l9485
 18324  017B1C                     u9330:
 18325                           
 18326                           ;stkvar	_a @ sp[(0)+-2]
 18327  017B1C  0EFE               	movlw	-2
 18328  017B1E  006F FF8C  F032    	movff	plusw1,btemp
 18329  017B24  1E32               	comf	btemp^0,f,c
 18330  017B26  0EFF               	movlw	-1
 18331  017B28  006F FF8C  F033    	movff	plusw1,btemp+1
 18332  017B2E  1E33               	comf	(btemp+1)^0,f,c
 18333  017B30  2A32               	incf	btemp^0,f,c
 18334  017B32  B4D8               	btfsc	status,2,c
 18335  017B34  2A33               	incf	(btemp+1)^0,f,c
 18336  017B36  D008               	goto	l2731
 18337  017B38                     l9485:
 18338                           
 18339                           ;stkvar	_a @ sp[(0)+-2]
 18340  017B38  0EFE               	movlw	-2
 18341  017B3A  006F FF8C  F032    	movff	plusw1,btemp
 18342  017B40  0EFF               	movlw	-1
 18343  017B42  006F FF8C  F033    	movff	plusw1,btemp+1
 18344  017B48                     l2731:
 18345                           
 18346                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 18347  017B48  52E5               	movf	postdec1,f,c
 18348  017B4A  52E5               	movf	postdec1,f,c
 18349  017B4C  0012               	return		;funcret
 18350  017B4E                     __end_of_abs:
 18351                           	opt callstack 0
 18352                           
 18353 ;; *************** function ___aomod *****************
 18354 ;; Defined at:
 18355 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 18356 ;; Parameters:    Size  Location     Type
 18357 ;;  dividend        8  [STACK] long long 
 18358 ;;  divisor         8  [STACK] long long 
 18359 ;; Auto vars:     Size  Location     Type
 18360 ;;  sign            1  [STACK] unsigned char 
 18361 ;;  counter         1  [STACK] unsigned char 
 18362 ;; Return value:  Size  Location     Type
 18363 ;;                  8  [STACK] long long 
 18364 ;; Registers used:
 18365 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 18366 ;; Tracked objects:
 18367 ;;		On entry : 0/2
 18368 ;;		On exit  : 0/0
 18369 ;;		Unchanged: 0/0
 18370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18375 ;;Total ram usage:        0 bytes
 18376 ;; Hardware stack levels used:    1
 18377 ;; Hardware stack levels required when called:    6
 18378 ;; This function calls:
 18379 ;;		Nothing
 18380 ;; This function is called by:
 18381 ;;		_dtoa
 18382 ;; This function uses a reentrant model
 18383 ;;
 18384                           
 18385                           	psect	text63
 18386  0152B6                     __ptext63:
 18387                           	opt callstack 0
 18388  0152B6                     ___aomod:
 18389                           	opt callstack 0
 18390                           
 18391                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 18392  0152B6  52E6               	movf	postinc1,f,c
 18393  0152B8  52E6               	movf	postinc1,f,c
 18394                           
 18395                           ;stkvar	_sign @ sp[(-2)+0]
 18396                           
 18397                           ;incstack = 0
 18398  0152BA  0EFE               	movlw	-2
 18399  0152BC  6AE3               	clrf	plusw1,c
 18400                           
 18401                           ;stkvar	_dividend @ sp[(-2)+-8]
 18402  0152BE  0EFD               	movlw	-3
 18403  0152C0  AEE3               	btfss	plusw1,7,c
 18404  0152C2  D028               	goto	l9643
 18405                           
 18406                           ;stkvar	_dividend @ sp[(-2)+-8]
 18407                           ;stkvar	_dividend @ sp[(-2)+-8]
 18408  0152C4  0EF6               	movlw	-10
 18409  0152C6  6CE3               	negf	plusw1,c
 18410  0152C8  0EF7               	movlw	-9
 18411  0152CA  1EE3               	comf	plusw1,f,c
 18412  0152CC  0EF8               	movlw	-8
 18413  0152CE  1EE3               	comf	plusw1,f,c
 18414  0152D0  0EF9               	movlw	-7
 18415  0152D2  1EE3               	comf	plusw1,f,c
 18416  0152D4  0EFA               	movlw	-6
 18417  0152D6  1EE3               	comf	plusw1,f,c
 18418  0152D8  0EFB               	movlw	-5
 18419  0152DA  1EE3               	comf	plusw1,f,c
 18420  0152DC  0EFC               	movlw	-4
 18421  0152DE  1EE3               	comf	plusw1,f,c
 18422  0152E0  0EFD               	movlw	-3
 18423  0152E2  1EE3               	comf	plusw1,f,c
 18424  0152E4  E314               	bnc	u9760
 18425  0152E6  0EF7               	movlw	-9
 18426  0152E8  2AE3               	incf	plusw1,f,c
 18427  0152EA  E311               	bnc	u9760
 18428  0152EC  0EF8               	movlw	-8
 18429  0152EE  2AE3               	incf	plusw1,f,c
 18430  0152F0  E30E               	bnc	u9760
 18431  0152F2  0EF9               	movlw	-7
 18432  0152F4  2AE3               	incf	plusw1,f,c
 18433  0152F6  E30B               	bnc	u9760
 18434  0152F8  0EFA               	movlw	-6
 18435  0152FA  2AE3               	incf	plusw1,f,c
 18436  0152FC  E308               	bnc	u9760
 18437  0152FE  0EFB               	movlw	-5
 18438  015300  2AE3               	incf	plusw1,f,c
 18439  015302  E305               	bnc	u9760
 18440  015304  0EFC               	movlw	-4
 18441  015306  2AE3               	incf	plusw1,f,c
 18442  015308  E302               	bnc	u9760
 18443  01530A  0EFD               	movlw	-3
 18444  01530C  2AE3               	incf	plusw1,f,c
 18445  01530E                     u9760:
 18446                           
 18447                           ;stkvar	_sign @ sp[(-2)+0]
 18448  01530E  0EFE               	movlw	-2
 18449  015310  6AE3               	clrf	plusw1,c
 18450  015312  2AE3               	incf	plusw1,f,c
 18451  015314                     l9643:
 18452                           
 18453                           ;stkvar	_divisor @ sp[(-2)+-16]
 18454  015314  0EF5               	movlw	-11
 18455  015316  AEE3               	btfss	plusw1,7,c
 18456  015318  D025               	goto	u9780
 18457                           
 18458                           ;stkvar	_divisor @ sp[(-2)+-16]
 18459                           ;stkvar	_divisor @ sp[(-2)+-16]
 18460  01531A  0EEE               	movlw	-18
 18461  01531C  6CE3               	negf	plusw1,c
 18462  01531E  0EEF               	movlw	-17
 18463  015320  1EE3               	comf	plusw1,f,c
 18464  015322  0EF0               	movlw	-16
 18465  015324  1EE3               	comf	plusw1,f,c
 18466  015326  0EF1               	movlw	-15
 18467  015328  1EE3               	comf	plusw1,f,c
 18468  01532A  0EF2               	movlw	-14
 18469  01532C  1EE3               	comf	plusw1,f,c
 18470  01532E  0EF3               	movlw	-13
 18471  015330  1EE3               	comf	plusw1,f,c
 18472  015332  0EF4               	movlw	-12
 18473  015334  1EE3               	comf	plusw1,f,c
 18474  015336  0EF5               	movlw	-11
 18475  015338  1EE3               	comf	plusw1,f,c
 18476  01533A  E314               	bnc	u9780
 18477  01533C  0EEF               	movlw	-17
 18478  01533E  2AE3               	incf	plusw1,f,c
 18479  015340  E311               	bnc	u9780
 18480  015342  0EF0               	movlw	-16
 18481  015344  2AE3               	incf	plusw1,f,c
 18482  015346  E30E               	bnc	u9780
 18483  015348  0EF1               	movlw	-15
 18484  01534A  2AE3               	incf	plusw1,f,c
 18485  01534C  E30B               	bnc	u9780
 18486  01534E  0EF2               	movlw	-14
 18487  015350  2AE3               	incf	plusw1,f,c
 18488  015352  E308               	bnc	u9780
 18489  015354  0EF3               	movlw	-13
 18490  015356  2AE3               	incf	plusw1,f,c
 18491  015358  E305               	bnc	u9780
 18492  01535A  0EF4               	movlw	-12
 18493  01535C  2AE3               	incf	plusw1,f,c
 18494  01535E  E302               	bnc	u9780
 18495  015360  0EF5               	movlw	-11
 18496  015362  2AE3               	incf	plusw1,f,c
 18497  015364                     u9780:
 18498                           
 18499                           ;stkvar	_divisor @ sp[(-2)+-16]
 18500  015364  0EEE               	movlw	-18
 18501  015366  50E3               	movf	plusw1,w,c
 18502  015368  E116               	bnz	u9790
 18503  01536A  0EEF               	movlw	-17
 18504  01536C  50E3               	movf	plusw1,w,c
 18505  01536E  E113               	bnz	u9790
 18506  015370  0EF0               	movlw	-16
 18507  015372  50E3               	movf	plusw1,w,c
 18508  015374  E110               	bnz	u9790
 18509  015376  0EF1               	movlw	-15
 18510  015378  50E3               	movf	plusw1,w,c
 18511  01537A  E10D               	bnz	u9790
 18512  01537C  0EF2               	movlw	-14
 18513  01537E  50E3               	movf	plusw1,w,c
 18514  015380  E10A               	bnz	u9790
 18515  015382  0EF3               	movlw	-13
 18516  015384  50E3               	movf	plusw1,w,c
 18517  015386  E107               	bnz	u9790
 18518  015388  0EF4               	movlw	-12
 18519  01538A  50E3               	movf	plusw1,w,c
 18520  01538C  E104               	bnz	u9790
 18521  01538E  0EF5               	movlw	-11
 18522  015390  50E3               	movf	plusw1,w,c
 18523  015392  B4D8               	btfsc	status,2,c
 18524  015394  D075               	goto	u9820
 18525  015396                     u9790:
 18526                           
 18527                           ;stkvar	_counter @ sp[(-2)+1]
 18528  015396  0EFF               	movlw	-1
 18529  015398  6AE3               	clrf	plusw1,c
 18530  01539A  D012               	goto	L17
 18531  01539C                     l9651:
 18532                           
 18533                           ;stkvar	_divisor @ sp[(-2)+-16]
 18534  01539C  90D8               	bcf	status,0,c
 18535  01539E  0EEE               	movlw	-18
 18536  0153A0  36E3               	rlcf	plusw1,f,c
 18537  0153A2  0EEF               	movlw	-17
 18538  0153A4  36E3               	rlcf	plusw1,f,c
 18539  0153A6  0EF0               	movlw	-16
 18540  0153A8  36E3               	rlcf	plusw1,f,c
 18541  0153AA  0EF1               	movlw	-15
 18542  0153AC  36E3               	rlcf	plusw1,f,c
 18543  0153AE  0EF2               	movlw	-14
 18544  0153B0  36E3               	rlcf	plusw1,f,c
 18545  0153B2  0EF3               	movlw	-13
 18546  0153B4  36E3               	rlcf	plusw1,f,c
 18547  0153B6  0EF4               	movlw	-12
 18548  0153B8  36E3               	rlcf	plusw1,f,c
 18549  0153BA  0EF5               	movlw	-11
 18550  0153BC  36E3               	rlcf	plusw1,f,c
 18551                           
 18552                           ;stkvar	_counter @ sp[(-2)+1]
 18553  0153BE  0EFF               	movlw	-1
 18554  0153C0                     L17:
 18555  0153C0  2AE3               	incf	plusw1,f,c
 18556                           
 18557                           ;stkvar	_divisor @ sp[(-2)+-16]
 18558  0153C2  0EF5               	movlw	-11
 18559  0153C4  AEE3               	btfss	plusw1,7,c
 18560  0153C6  D7EA               	goto	l9651
 18561  0153C8                     u9800:
 18562                           
 18563                           ;stkvar	_divisor @ sp[(-2)+-16]
 18564                           ;stkvar	_dividend @ sp[(-2)+-8]
 18565  0153C8  50E1               	movf	fsr1l,w,c
 18566  0153CA  0FF6               	addlw	-10
 18567  0153CC  6ED9               	movwf	fsr2l,c
 18568  0153CE  50E2               	movf	fsr1h,w,c
 18569  0153D0  6EDA               	movwf	fsr2h,c
 18570  0153D2  0EFF               	movlw	255
 18571  0153D4  22DA               	addwfc	fsr2h,f,c
 18572  0153D6  0EEE               	movlw	-18
 18573  0153D8  50E3               	movf	plusw1,w,c
 18574  0153DA  5CDE               	subwf	postinc2,w,c
 18575  0153DC  0EEF               	movlw	-17
 18576  0153DE  50E3               	movf	plusw1,w,c
 18577  0153E0  58DE               	subwfb	postinc2,w,c
 18578  0153E2  0EF0               	movlw	-16
 18579  0153E4  50E3               	movf	plusw1,w,c
 18580  0153E6  58DE               	subwfb	postinc2,w,c
 18581  0153E8  0EF1               	movlw	-15
 18582  0153EA  50E3               	movf	plusw1,w,c
 18583  0153EC  58DE               	subwfb	postinc2,w,c
 18584  0153EE  0EF2               	movlw	-14
 18585  0153F0  50E3               	movf	plusw1,w,c
 18586  0153F2  58DE               	subwfb	postinc2,w,c
 18587  0153F4  0EF3               	movlw	-13
 18588  0153F6  50E3               	movf	plusw1,w,c
 18589  0153F8  58DE               	subwfb	postinc2,w,c
 18590  0153FA  0EF4               	movlw	-12
 18591  0153FC  50E3               	movf	plusw1,w,c
 18592  0153FE  58DE               	subwfb	postinc2,w,c
 18593  015400  0EF5               	movlw	-11
 18594  015402  50E3               	movf	plusw1,w,c
 18595  015404  58DE               	subwfb	postinc2,w,c
 18596  015406  A0D8               	btfss	status,0,c
 18597  015408  D01F               	goto	l9659
 18598                           
 18599                           ;stkvar	_divisor @ sp[(-2)+-16]
 18600                           ;stkvar	_dividend @ sp[(-2)+-8]
 18601  01540A  50E1               	movf	fsr1l,w,c
 18602  01540C  0FF6               	addlw	-10
 18603  01540E  6ED9               	movwf	fsr2l,c
 18604  015410  50E2               	movf	fsr1h,w,c
 18605  015412  6EDA               	movwf	fsr2h,c
 18606  015414  0EFF               	movlw	255
 18607  015416  22DA               	addwfc	fsr2h,f,c
 18608  015418  0EEE               	movlw	-18
 18609  01541A  50E3               	movf	plusw1,w,c
 18610  01541C  5EDE               	subwf	postinc2,f,c
 18611  01541E  0EEF               	movlw	-17
 18612  015420  50E3               	movf	plusw1,w,c
 18613  015422  5ADE               	subwfb	postinc2,f,c
 18614  015424  0EF0               	movlw	-16
 18615  015426  50E3               	movf	plusw1,w,c
 18616  015428  5ADE               	subwfb	postinc2,f,c
 18617  01542A  0EF1               	movlw	-15
 18618  01542C  50E3               	movf	plusw1,w,c
 18619  01542E  5ADE               	subwfb	postinc2,f,c
 18620  015430  0EF2               	movlw	-14
 18621  015432  50E3               	movf	plusw1,w,c
 18622  015434  5ADE               	subwfb	postinc2,f,c
 18623  015436  0EF3               	movlw	-13
 18624  015438  50E3               	movf	plusw1,w,c
 18625  01543A  5ADE               	subwfb	postinc2,f,c
 18626  01543C  0EF4               	movlw	-12
 18627  01543E  50E3               	movf	plusw1,w,c
 18628  015440  5ADE               	subwfb	postinc2,f,c
 18629  015442  0EF5               	movlw	-11
 18630  015444  50E3               	movf	plusw1,w,c
 18631  015446  5ADE               	subwfb	postinc2,f,c
 18632  015448                     l9659:
 18633                           
 18634                           ;stkvar	_divisor @ sp[(-2)+-16]
 18635  015448  90D8               	bcf	status,0,c
 18636  01544A  0EF5               	movlw	-11
 18637  01544C  32E3               	rrcf	plusw1,f,c
 18638  01544E  0EF4               	movlw	-12
 18639  015450  32E3               	rrcf	plusw1,f,c
 18640  015452  0EF3               	movlw	-13
 18641  015454  32E3               	rrcf	plusw1,f,c
 18642  015456  0EF2               	movlw	-14
 18643  015458  32E3               	rrcf	plusw1,f,c
 18644  01545A  0EF1               	movlw	-15
 18645  01545C  32E3               	rrcf	plusw1,f,c
 18646  01545E  0EF0               	movlw	-16
 18647  015460  32E3               	rrcf	plusw1,f,c
 18648  015462  0EEF               	movlw	-17
 18649  015464  32E3               	rrcf	plusw1,f,c
 18650  015466  0EEE               	movlw	-18
 18651  015468  32E3               	rrcf	plusw1,f,c
 18652                           
 18653                           ;stkvar	_counter @ sp[(-2)+1]
 18654  01546A  0EFF               	movlw	-1
 18655  01546C  50E3               	movf	plusw1,w,c
 18656  01546E  6E32               	movwf	btemp^0,c
 18657  015470  0E01               	movlw	1
 18658  015472  5E32               	subwf	btemp^0,f,c
 18659  015474  0EFF               	movlw	-1
 18660  015476  0060  F0CB  FFE3   	movff	btemp,plusw1
 18661  01547C  A4D8               	btfss	status,2,c
 18662  01547E  D7A4               	goto	u9800
 18663  015480                     u9820:
 18664                           
 18665                           ;stkvar	_sign @ sp[(-2)+0]
 18666  015480  0EFE               	movlw	-2
 18667  015482  50E3               	movf	plusw1,w,c
 18668  015484  B4D8               	btfsc	status,2,c
 18669  015486  D025               	goto	u9840
 18670                           
 18671                           ;stkvar	_dividend @ sp[(-2)+-8]
 18672                           ;stkvar	_dividend @ sp[(-2)+-8]
 18673  015488  0EF6               	movlw	-10
 18674  01548A  6CE3               	negf	plusw1,c
 18675  01548C  0EF7               	movlw	-9
 18676  01548E  1EE3               	comf	plusw1,f,c
 18677  015490  0EF8               	movlw	-8
 18678  015492  1EE3               	comf	plusw1,f,c
 18679  015494  0EF9               	movlw	-7
 18680  015496  1EE3               	comf	plusw1,f,c
 18681  015498  0EFA               	movlw	-6
 18682  01549A  1EE3               	comf	plusw1,f,c
 18683  01549C  0EFB               	movlw	-5
 18684  01549E  1EE3               	comf	plusw1,f,c
 18685  0154A0  0EFC               	movlw	-4
 18686  0154A2  1EE3               	comf	plusw1,f,c
 18687  0154A4  0EFD               	movlw	-3
 18688  0154A6  1EE3               	comf	plusw1,f,c
 18689  0154A8  E314               	bnc	u9840
 18690  0154AA  0EF7               	movlw	-9
 18691  0154AC  2AE3               	incf	plusw1,f,c
 18692  0154AE  E311               	bnc	u9840
 18693  0154B0  0EF8               	movlw	-8
 18694  0154B2  2AE3               	incf	plusw1,f,c
 18695  0154B4  E30E               	bnc	u9840
 18696  0154B6  0EF9               	movlw	-7
 18697  0154B8  2AE3               	incf	plusw1,f,c
 18698  0154BA  E30B               	bnc	u9840
 18699  0154BC  0EFA               	movlw	-6
 18700  0154BE  2AE3               	incf	plusw1,f,c
 18701  0154C0  E308               	bnc	u9840
 18702  0154C2  0EFB               	movlw	-5
 18703  0154C4  2AE3               	incf	plusw1,f,c
 18704  0154C6  E305               	bnc	u9840
 18705  0154C8  0EFC               	movlw	-4
 18706  0154CA  2AE3               	incf	plusw1,f,c
 18707  0154CC  E302               	bnc	u9840
 18708  0154CE  0EFD               	movlw	-3
 18709  0154D0  2AE3               	incf	plusw1,f,c
 18710  0154D2                     u9840:
 18711                           
 18712                           ;stkvar	_dividend @ sp[(-2)+-8]
 18713  0154D2  0EF6               	movlw	246
 18714  0154D4  24E1               	addwf	fsr1l,w,c
 18715  0154D6  6ED9               	movwf	fsr2l,c
 18716  0154D8  0EFF               	movlw	255
 18717  0154DA  20E2               	addwfc	fsr1h,w,c
 18718  0154DC  6EDA               	movwf	fsr2h,c
 18719                           
 18720                           ;stkvar	?___aomod @ sp[(-2)+-8]
 18721  0154DE  0E08               	movlw	8
 18722  0154E0  6E32               	movwf	btemp^0,c
 18723  0154E2  0EF6               	movlw	-10
 18724  0154E4                     us985999:
 18725  0154E4  006F FF7B FFE3     	movff	postinc2,plusw1
 18726  0154EA  28E8               	incf	wreg,w,c
 18727  0154EC  2E32               	decfsz	btemp^0,f,c
 18728  0154EE  D7FA               	bra	us985999
 18729                           
 18730                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 18731  0154F0  52E5               	movf	postdec1,f,c
 18732  0154F2  52E5               	movf	postdec1,f,c
 18733  0154F4  0012               	return		;funcret
 18734  0154F6                     __end_of___aomod:
 18735                           	opt callstack 0
 18736                           
 18737 ;; *************** function ___aodiv *****************
 18738 ;; Defined at:
 18739 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 18740 ;; Parameters:    Size  Location     Type
 18741 ;;  dividend        8  [STACK] long long 
 18742 ;;  divisor         8  [STACK] long long 
 18743 ;; Auto vars:     Size  Location     Type
 18744 ;;  quotient        8  [STACK] long long 
 18745 ;;  sign            1  [STACK] unsigned char 
 18746 ;;  counter         1  [STACK] unsigned char 
 18747 ;; Return value:  Size  Location     Type
 18748 ;;                  8  [STACK] long long 
 18749 ;; Registers used:
 18750 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 18751 ;; Tracked objects:
 18752 ;;		On entry : 0/2
 18753 ;;		On exit  : 0/0
 18754 ;;		Unchanged: 0/0
 18755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18760 ;;Total ram usage:        0 bytes
 18761 ;; Hardware stack levels used:    1
 18762 ;; Hardware stack levels required when called:    6
 18763 ;; This function calls:
 18764 ;;		Nothing
 18765 ;; This function is called by:
 18766 ;;		_dtoa
 18767 ;; This function uses a reentrant model
 18768 ;;
 18769                           
 18770                           	psect	text64
 18771  014DC2                     __ptext64:
 18772                           	opt callstack 0
 18773  014DC2                     ___aodiv:
 18774                           	opt callstack 0
 18775                           
 18776                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 18777  014DC2  0E0A               	movlw	10
 18778  014DC4  26E1               	addwf	fsr1l,f,c
 18779  014DC6  0E00               	movlw	0
 18780  014DC8  22E2               	addwfc	fsr1h,f,c
 18781                           
 18782                           ;stkvar	_sign @ sp[(-10)+8]
 18783                           
 18784                           ;incstack = 0
 18785  014DCA  0EFE               	movlw	-2
 18786  014DCC  6AE3               	clrf	plusw1,c
 18787                           
 18788                           ;stkvar	_divisor @ sp[(-10)+-16]
 18789  014DCE  0EED               	movlw	-19
 18790  014DD0  AEE3               	btfss	plusw1,7,c
 18791  014DD2  D028               	goto	l9599
 18792                           
 18793                           ;stkvar	_divisor @ sp[(-10)+-16]
 18794                           ;stkvar	_divisor @ sp[(-10)+-16]
 18795  014DD4  0EE6               	movlw	-26
 18796  014DD6  6CE3               	negf	plusw1,c
 18797  014DD8  0EE7               	movlw	-25
 18798  014DDA  1EE3               	comf	plusw1,f,c
 18799  014DDC  0EE8               	movlw	-24
 18800  014DDE  1EE3               	comf	plusw1,f,c
 18801  014DE0  0EE9               	movlw	-23
 18802  014DE2  1EE3               	comf	plusw1,f,c
 18803  014DE4  0EEA               	movlw	-22
 18804  014DE6  1EE3               	comf	plusw1,f,c
 18805  014DE8  0EEB               	movlw	-21
 18806  014DEA  1EE3               	comf	plusw1,f,c
 18807  014DEC  0EEC               	movlw	-20
 18808  014DEE  1EE3               	comf	plusw1,f,c
 18809  014DF0  0EED               	movlw	-19
 18810  014DF2  1EE3               	comf	plusw1,f,c
 18811  014DF4  E314               	bnc	u9640
 18812  014DF6  0EE7               	movlw	-25
 18813  014DF8  2AE3               	incf	plusw1,f,c
 18814  014DFA  E311               	bnc	u9640
 18815  014DFC  0EE8               	movlw	-24
 18816  014DFE  2AE3               	incf	plusw1,f,c
 18817  014E00  E30E               	bnc	u9640
 18818  014E02  0EE9               	movlw	-23
 18819  014E04  2AE3               	incf	plusw1,f,c
 18820  014E06  E30B               	bnc	u9640
 18821  014E08  0EEA               	movlw	-22
 18822  014E0A  2AE3               	incf	plusw1,f,c
 18823  014E0C  E308               	bnc	u9640
 18824  014E0E  0EEB               	movlw	-21
 18825  014E10  2AE3               	incf	plusw1,f,c
 18826  014E12  E305               	bnc	u9640
 18827  014E14  0EEC               	movlw	-20
 18828  014E16  2AE3               	incf	plusw1,f,c
 18829  014E18  E302               	bnc	u9640
 18830  014E1A  0EED               	movlw	-19
 18831  014E1C  2AE3               	incf	plusw1,f,c
 18832  014E1E                     u9640:
 18833                           
 18834                           ;stkvar	_sign @ sp[(-10)+8]
 18835  014E1E  0EFE               	movlw	-2
 18836  014E20  6AE3               	clrf	plusw1,c
 18837  014E22  2AE3               	incf	plusw1,f,c
 18838  014E24                     l9599:
 18839                           
 18840                           ;stkvar	_dividend @ sp[(-10)+-8]
 18841  014E24  0EF5               	movlw	-11
 18842  014E26  AEE3               	btfss	plusw1,7,c
 18843  014E28  D027               	goto	l9605
 18844                           
 18845                           ;stkvar	_dividend @ sp[(-10)+-8]
 18846                           ;stkvar	_dividend @ sp[(-10)+-8]
 18847  014E2A  0EEE               	movlw	-18
 18848  014E2C  6CE3               	negf	plusw1,c
 18849  014E2E  0EEF               	movlw	-17
 18850  014E30  1EE3               	comf	plusw1,f,c
 18851  014E32  0EF0               	movlw	-16
 18852  014E34  1EE3               	comf	plusw1,f,c
 18853  014E36  0EF1               	movlw	-15
 18854  014E38  1EE3               	comf	plusw1,f,c
 18855  014E3A  0EF2               	movlw	-14
 18856  014E3C  1EE3               	comf	plusw1,f,c
 18857  014E3E  0EF3               	movlw	-13
 18858  014E40  1EE3               	comf	plusw1,f,c
 18859  014E42  0EF4               	movlw	-12
 18860  014E44  1EE3               	comf	plusw1,f,c
 18861  014E46  0EF5               	movlw	-11
 18862  014E48  1EE3               	comf	plusw1,f,c
 18863  014E4A  E314               	bnc	u9660
 18864  014E4C  0EEF               	movlw	-17
 18865  014E4E  2AE3               	incf	plusw1,f,c
 18866  014E50  E311               	bnc	u9660
 18867  014E52  0EF0               	movlw	-16
 18868  014E54  2AE3               	incf	plusw1,f,c
 18869  014E56  E30E               	bnc	u9660
 18870  014E58  0EF1               	movlw	-15
 18871  014E5A  2AE3               	incf	plusw1,f,c
 18872  014E5C  E30B               	bnc	u9660
 18873  014E5E  0EF2               	movlw	-14
 18874  014E60  2AE3               	incf	plusw1,f,c
 18875  014E62  E308               	bnc	u9660
 18876  014E64  0EF3               	movlw	-13
 18877  014E66  2AE3               	incf	plusw1,f,c
 18878  014E68  E305               	bnc	u9660
 18879  014E6A  0EF4               	movlw	-12
 18880  014E6C  2AE3               	incf	plusw1,f,c
 18881  014E6E  E302               	bnc	u9660
 18882  014E70  0EF5               	movlw	-11
 18883  014E72  2AE3               	incf	plusw1,f,c
 18884  014E74                     u9660:
 18885                           
 18886                           ;stkvar	_sign @ sp[(-10)+8]
 18887  014E74  0EFE               	movlw	-2
 18888  014E76  70E3               	btg	plusw1,0,c
 18889  014E78                     l9605:
 18890                           
 18891                           ;stkvar	_quotient @ sp[(-10)+0]
 18892  014E78  0E07               	movlw	7
 18893  014E7A  6E32               	movwf	btemp^0,c
 18894  014E7C  0EF6               	movlw	-10
 18895  014E7E                     u9671:
 18896  014E7E  6AE3               	clrf	plusw1,c
 18897  014E80  2AE8               	incf	wreg,f,c
 18898  014E82  0632               	decf	btemp^0,f,c
 18899  014E84  E2FC               	bc	u9671
 18900                           
 18901                           ;stkvar	_divisor @ sp[(-10)+-16]
 18902  014E86  0EE6               	movlw	-26
 18903  014E88  50E3               	movf	plusw1,w,c
 18904  014E8A  E116               	bnz	u9680
 18905  014E8C  0EE7               	movlw	-25
 18906  014E8E  50E3               	movf	plusw1,w,c
 18907  014E90  E113               	bnz	u9680
 18908  014E92  0EE8               	movlw	-24
 18909  014E94  50E3               	movf	plusw1,w,c
 18910  014E96  E110               	bnz	u9680
 18911  014E98  0EE9               	movlw	-23
 18912  014E9A  50E3               	movf	plusw1,w,c
 18913  014E9C  E10D               	bnz	u9680
 18914  014E9E  0EEA               	movlw	-22
 18915  014EA0  50E3               	movf	plusw1,w,c
 18916  014EA2  E10A               	bnz	u9680
 18917  014EA4  0EEB               	movlw	-21
 18918  014EA6  50E3               	movf	plusw1,w,c
 18919  014EA8  E107               	bnz	u9680
 18920  014EAA  0EEC               	movlw	-20
 18921  014EAC  50E3               	movf	plusw1,w,c
 18922  014EAE  E104               	bnz	u9680
 18923  014EB0  0EED               	movlw	-19
 18924  014EB2  50E3               	movf	plusw1,w,c
 18925  014EB4  B4D8               	btfsc	status,2,c
 18926  014EB6  D088               	goto	u9710
 18927  014EB8                     u9680:
 18928                           
 18929                           ;stkvar	_counter @ sp[(-10)+9]
 18930  014EB8  0EFF               	movlw	-1
 18931  014EBA  6AE3               	clrf	plusw1,c
 18932  014EBC  D012               	goto	L18
 18933  014EBE                     l9611:
 18934                           
 18935                           ;stkvar	_divisor @ sp[(-10)+-16]
 18936  014EBE  90D8               	bcf	status,0,c
 18937  014EC0  0EE6               	movlw	-26
 18938  014EC2  36E3               	rlcf	plusw1,f,c
 18939  014EC4  0EE7               	movlw	-25
 18940  014EC6  36E3               	rlcf	plusw1,f,c
 18941  014EC8  0EE8               	movlw	-24
 18942  014ECA  36E3               	rlcf	plusw1,f,c
 18943  014ECC  0EE9               	movlw	-23
 18944  014ECE  36E3               	rlcf	plusw1,f,c
 18945  014ED0  0EEA               	movlw	-22
 18946  014ED2  36E3               	rlcf	plusw1,f,c
 18947  014ED4  0EEB               	movlw	-21
 18948  014ED6  36E3               	rlcf	plusw1,f,c
 18949  014ED8  0EEC               	movlw	-20
 18950  014EDA  36E3               	rlcf	plusw1,f,c
 18951  014EDC  0EED               	movlw	-19
 18952  014EDE  36E3               	rlcf	plusw1,f,c
 18953                           
 18954                           ;stkvar	_counter @ sp[(-10)+9]
 18955  014EE0  0EFF               	movlw	-1
 18956  014EE2                     L18:
 18957  014EE2  2AE3               	incf	plusw1,f,c
 18958                           
 18959                           ;stkvar	_divisor @ sp[(-10)+-16]
 18960  014EE4  0EED               	movlw	-19
 18961  014EE6  AEE3               	btfss	plusw1,7,c
 18962  014EE8  D7EA               	goto	l9611
 18963  014EEA                     u9690:
 18964                           
 18965                           ;stkvar	_quotient @ sp[(-10)+0]
 18966  014EEA  90D8               	bcf	status,0,c
 18967  014EEC  0EF6               	movlw	-10
 18968  014EEE  36E3               	rlcf	plusw1,f,c
 18969  014EF0  0EF7               	movlw	-9
 18970  014EF2  36E3               	rlcf	plusw1,f,c
 18971  014EF4  0EF8               	movlw	-8
 18972  014EF6  36E3               	rlcf	plusw1,f,c
 18973  014EF8  0EF9               	movlw	-7
 18974  014EFA  36E3               	rlcf	plusw1,f,c
 18975  014EFC  0EFA               	movlw	-6
 18976  014EFE  36E3               	rlcf	plusw1,f,c
 18977  014F00  0EFB               	movlw	-5
 18978  014F02  36E3               	rlcf	plusw1,f,c
 18979  014F04  0EFC               	movlw	-4
 18980  014F06  36E3               	rlcf	plusw1,f,c
 18981  014F08  0EFD               	movlw	-3
 18982  014F0A  36E3               	rlcf	plusw1,f,c
 18983                           
 18984                           ;stkvar	_divisor @ sp[(-10)+-16]
 18985                           ;stkvar	_dividend @ sp[(-10)+-8]
 18986  014F0C  50E1               	movf	fsr1l,w,c
 18987  014F0E  0FEE               	addlw	-18
 18988  014F10  6ED9               	movwf	fsr2l,c
 18989  014F12  50E2               	movf	fsr1h,w,c
 18990  014F14  6EDA               	movwf	fsr2h,c
 18991  014F16  0EFF               	movlw	255
 18992  014F18  22DA               	addwfc	fsr2h,f,c
 18993  014F1A  0EE6               	movlw	-26
 18994  014F1C  50E3               	movf	plusw1,w,c
 18995  014F1E  5CDE               	subwf	postinc2,w,c
 18996  014F20  0EE7               	movlw	-25
 18997  014F22  50E3               	movf	plusw1,w,c
 18998  014F24  58DE               	subwfb	postinc2,w,c
 18999  014F26  0EE8               	movlw	-24
 19000  014F28  50E3               	movf	plusw1,w,c
 19001  014F2A  58DE               	subwfb	postinc2,w,c
 19002  014F2C  0EE9               	movlw	-23
 19003  014F2E  50E3               	movf	plusw1,w,c
 19004  014F30  58DE               	subwfb	postinc2,w,c
 19005  014F32  0EEA               	movlw	-22
 19006  014F34  50E3               	movf	plusw1,w,c
 19007  014F36  58DE               	subwfb	postinc2,w,c
 19008  014F38  0EEB               	movlw	-21
 19009  014F3A  50E3               	movf	plusw1,w,c
 19010  014F3C  58DE               	subwfb	postinc2,w,c
 19011  014F3E  0EEC               	movlw	-20
 19012  014F40  50E3               	movf	plusw1,w,c
 19013  014F42  58DE               	subwfb	postinc2,w,c
 19014  014F44  0EED               	movlw	-19
 19015  014F46  50E3               	movf	plusw1,w,c
 19016  014F48  58DE               	subwfb	postinc2,w,c
 19017  014F4A  A0D8               	btfss	status,0,c
 19018  014F4C  D021               	goto	l9623
 19019                           
 19020                           ;stkvar	_divisor @ sp[(-10)+-16]
 19021                           ;stkvar	_dividend @ sp[(-10)+-8]
 19022  014F4E  50E1               	movf	fsr1l,w,c
 19023  014F50  0FEE               	addlw	-18
 19024  014F52  6ED9               	movwf	fsr2l,c
 19025  014F54  50E2               	movf	fsr1h,w,c
 19026  014F56  6EDA               	movwf	fsr2h,c
 19027  014F58  0EFF               	movlw	255
 19028  014F5A  22DA               	addwfc	fsr2h,f,c
 19029  014F5C  0EE6               	movlw	-26
 19030  014F5E  50E3               	movf	plusw1,w,c
 19031  014F60  5EDE               	subwf	postinc2,f,c
 19032  014F62  0EE7               	movlw	-25
 19033  014F64  50E3               	movf	plusw1,w,c
 19034  014F66  5ADE               	subwfb	postinc2,f,c
 19035  014F68  0EE8               	movlw	-24
 19036  014F6A  50E3               	movf	plusw1,w,c
 19037  014F6C  5ADE               	subwfb	postinc2,f,c
 19038  014F6E  0EE9               	movlw	-23
 19039  014F70  50E3               	movf	plusw1,w,c
 19040  014F72  5ADE               	subwfb	postinc2,f,c
 19041  014F74  0EEA               	movlw	-22
 19042  014F76  50E3               	movf	plusw1,w,c
 19043  014F78  5ADE               	subwfb	postinc2,f,c
 19044  014F7A  0EEB               	movlw	-21
 19045  014F7C  50E3               	movf	plusw1,w,c
 19046  014F7E  5ADE               	subwfb	postinc2,f,c
 19047  014F80  0EEC               	movlw	-20
 19048  014F82  50E3               	movf	plusw1,w,c
 19049  014F84  5ADE               	subwfb	postinc2,f,c
 19050  014F86  0EED               	movlw	-19
 19051  014F88  50E3               	movf	plusw1,w,c
 19052  014F8A  5ADE               	subwfb	postinc2,f,c
 19053                           
 19054                           ;stkvar	_quotient @ sp[(-10)+0]
 19055  014F8C  0EF6               	movlw	-10
 19056  014F8E  80E3               	bsf	plusw1,0,c
 19057  014F90                     l9623:
 19058                           
 19059                           ;stkvar	_divisor @ sp[(-10)+-16]
 19060  014F90  90D8               	bcf	status,0,c
 19061  014F92  0EED               	movlw	-19
 19062  014F94  32E3               	rrcf	plusw1,f,c
 19063  014F96  0EEC               	movlw	-20
 19064  014F98  32E3               	rrcf	plusw1,f,c
 19065  014F9A  0EEB               	movlw	-21
 19066  014F9C  32E3               	rrcf	plusw1,f,c
 19067  014F9E  0EEA               	movlw	-22
 19068  014FA0  32E3               	rrcf	plusw1,f,c
 19069  014FA2  0EE9               	movlw	-23
 19070  014FA4  32E3               	rrcf	plusw1,f,c
 19071  014FA6  0EE8               	movlw	-24
 19072  014FA8  32E3               	rrcf	plusw1,f,c
 19073  014FAA  0EE7               	movlw	-25
 19074  014FAC  32E3               	rrcf	plusw1,f,c
 19075  014FAE  0EE6               	movlw	-26
 19076  014FB0  32E3               	rrcf	plusw1,f,c
 19077                           
 19078                           ;stkvar	_counter @ sp[(-10)+9]
 19079  014FB2  0EFF               	movlw	-1
 19080  014FB4  50E3               	movf	plusw1,w,c
 19081  014FB6  6E32               	movwf	btemp^0,c
 19082  014FB8  0E01               	movlw	1
 19083  014FBA  5E32               	subwf	btemp^0,f,c
 19084  014FBC  0EFF               	movlw	-1
 19085  014FBE  0060  F0CB  FFE3   	movff	btemp,plusw1
 19086  014FC4  A4D8               	btfss	status,2,c
 19087  014FC6  D791               	goto	u9690
 19088  014FC8                     u9710:
 19089                           
 19090                           ;stkvar	_sign @ sp[(-10)+8]
 19091  014FC8  0EFE               	movlw	-2
 19092  014FCA  50E3               	movf	plusw1,w,c
 19093  014FCC  B4D8               	btfsc	status,2,c
 19094  014FCE  D025               	goto	u9730
 19095                           
 19096                           ;stkvar	_quotient @ sp[(-10)+0]
 19097                           ;stkvar	_quotient @ sp[(-10)+0]
 19098  014FD0  0EF6               	movlw	-10
 19099  014FD2  6CE3               	negf	plusw1,c
 19100  014FD4  0EF7               	movlw	-9
 19101  014FD6  1EE3               	comf	plusw1,f,c
 19102  014FD8  0EF8               	movlw	-8
 19103  014FDA  1EE3               	comf	plusw1,f,c
 19104  014FDC  0EF9               	movlw	-7
 19105  014FDE  1EE3               	comf	plusw1,f,c
 19106  014FE0  0EFA               	movlw	-6
 19107  014FE2  1EE3               	comf	plusw1,f,c
 19108  014FE4  0EFB               	movlw	-5
 19109  014FE6  1EE3               	comf	plusw1,f,c
 19110  014FE8  0EFC               	movlw	-4
 19111  014FEA  1EE3               	comf	plusw1,f,c
 19112  014FEC  0EFD               	movlw	-3
 19113  014FEE  1EE3               	comf	plusw1,f,c
 19114  014FF0  E314               	bnc	u9730
 19115  014FF2  0EF7               	movlw	-9
 19116  014FF4  2AE3               	incf	plusw1,f,c
 19117  014FF6  E311               	bnc	u9730
 19118  014FF8  0EF8               	movlw	-8
 19119  014FFA  2AE3               	incf	plusw1,f,c
 19120  014FFC  E30E               	bnc	u9730
 19121  014FFE  0EF9               	movlw	-7
 19122  015000  2AE3               	incf	plusw1,f,c
 19123  015002  E30B               	bnc	u9730
 19124  015004  0EFA               	movlw	-6
 19125  015006  2AE3               	incf	plusw1,f,c
 19126  015008  E308               	bnc	u9730
 19127  01500A  0EFB               	movlw	-5
 19128  01500C  2AE3               	incf	plusw1,f,c
 19129  01500E  E305               	bnc	u9730
 19130  015010  0EFC               	movlw	-4
 19131  015012  2AE3               	incf	plusw1,f,c
 19132  015014  E302               	bnc	u9730
 19133  015016  0EFD               	movlw	-3
 19134  015018  2AE3               	incf	plusw1,f,c
 19135  01501A                     u9730:
 19136                           
 19137                           ;stkvar	_quotient @ sp[(-10)+0]
 19138  01501A  0EF6               	movlw	246
 19139  01501C  24E1               	addwf	fsr1l,w,c
 19140  01501E  6ED9               	movwf	fsr2l,c
 19141  015020  0EFF               	movlw	255
 19142  015022  20E2               	addwfc	fsr1h,w,c
 19143  015024  6EDA               	movwf	fsr2h,c
 19144                           
 19145                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 19146  015026  0E08               	movlw	8
 19147  015028  6E32               	movwf	btemp^0,c
 19148  01502A  0EEE               	movlw	-18
 19149  01502C                     us974999:
 19150  01502C  006F FF7B FFE3     	movff	postinc2,plusw1
 19151  015032  28E8               	incf	wreg,w,c
 19152  015034  2E32               	decfsz	btemp^0,f,c
 19153  015036  D7FA               	bra	us974999
 19154                           
 19155                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 19156  015038  0EF6               	movlw	246
 19157  01503A  26E1               	addwf	fsr1l,f,c
 19158  01503C  0EFF               	movlw	255
 19159  01503E  22E2               	addwfc	fsr1h,f,c
 19160  015040  0012               	return		;funcret
 19161  015042                     __end_of___aodiv:
 19162                           	opt callstack 0
 19163                           
 19164 ;; *************** function _ctoa *****************
 19165 ;; Defined at:
 19166 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 19167 ;; Parameters:    Size  Location     Type
 19168 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19169 ;;		 -> f(6), NULL(0), 
 19170 ;;  c               1  [STACK] unsigned char 
 19171 ;; Auto vars:     Size  Location     Type
 19172 ;;  w               2  [STACK] int 
 19173 ;;  l               2    0        int 
 19174 ;; Return value:  Size  Location     Type
 19175 ;;                  2  [STACK] int 
 19176 ;; Registers used:
 19177 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 19178 ;; Tracked objects:
 19179 ;;		On entry : 0/5
 19180 ;;		On exit  : 0/0
 19181 ;;		Unchanged: 0/0
 19182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19187 ;;Total ram usage:        0 bytes
 19188 ;; Hardware stack levels used:    1
 19189 ;; Hardware stack levels required when called:   11
 19190 ;; This function calls:
 19191 ;;		_pad
 19192 ;; This function is called by:
 19193 ;;		_vfpfcnvrt
 19194 ;; This function uses a reentrant model
 19195 ;;
 19196                           
 19197                           	psect	text65
 19198  0172B2                     __ptext65:
 19199                           	opt callstack 0
 19200  0172B2                     _ctoa:
 19201                           	opt callstack 0
 19202                           
 19203                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19204  0172B2  52E6               	movf	postinc1,f,c
 19205  0172B4  52E6               	movf	postinc1,f,c
 19206                           
 19207                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 19208                           
 19209                           ;incstack = 0
 19210  0172B6  501B               	movf	_width^0,w,c
 19211  0172B8  101C               	iorwf	(_width+1)^0,w,c
 19212  0172BA  A4D8               	btfss	status,2,c
 19213  0172BC  D009               	goto	l10181
 19214                           
 19215                           ;stkvar	_w @ sp[(-2)+0]
 19216  0172BE  0EFE               	movlw	-2
 19217  0172C0  0060  F06F  FFE3   	movff	_width,plusw1
 19218  0172C6  0EFF               	movlw	-1
 19219  0172C8  0060  F073  FFE3   	movff	_width+1,plusw1
 19220  0172CE  D016               	goto	l10183
 19221  0172D0                     l10181:
 19222  0172D0  0EFF               	movlw	255
 19223  0172D2  6E3C               	movwf	(btemp+10)^0,c
 19224  0172D4  0EFF               	movlw	255
 19225  0172D6  6E3D               	movwf	(btemp+11)^0,c
 19226  0172D8  0060  F06C  F03A   	movff	_width,btemp+8
 19227  0172DE  0060  F070  F03B   	movff	_width+1,btemp+9
 19228  0172E4  503C               	movf	(btemp+10)^0,w,c
 19229  0172E6  263A               	addwf	(btemp+8)^0,f,c
 19230  0172E8  503D               	movf	(btemp+11)^0,w,c
 19231  0172EA  223B               	addwfc	(btemp+9)^0,f,c
 19232                           
 19233                           ;stkvar	_w @ sp[(-2)+0]
 19234  0172EC  0EFE               	movlw	-2
 19235  0172EE  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 19236  0172F4  0EFF               	movlw	-1
 19237  0172F6  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 19238  0172FC                     l10183:
 19239                           
 19240                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 19241                           ;stkvar	_c @ sp[(-2)+-3]
 19242  0172FC  0EFB               	movlw	-5
 19243  0172FE  006F FF8C  F240    	movff	plusw1,_dbuf
 19244                           
 19245                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 19246  017304  0102               	movlb	2	; () banked
 19247  017306  6B41               	clrf	(_dbuf+1)& (0+255),b
 19248                           
 19249                           ; BSR set to: 2
 19250                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 19251                           ;stkvar	_w @ sp[(-2)+0]
 19252  017308  0EFE               	movlw	-2
 19253  01730A  006F FF8F FFE6     	movff	plusw1,postinc1
 19254  017310  006F FF8F FFE6     	movff	plusw1,postinc1
 19255  017316  0E40               	movlw	low _dbuf
 19256  017318  6EE6               	movwf	postinc1,c
 19257  01731A  0E02               	movlw	high _dbuf
 19258  01731C  6EE6               	movwf	postinc1,c
 19259                           
 19260                           ;stkvar	_fp @ sp[(-6)+-2]
 19261  01731E  0EF8               	movlw	-8
 19262  017320  006F FF8F FFE6     	movff	plusw1,postinc1
 19263  017326  006F FF8F FFE6     	movff	plusw1,postinc1
 19264  01732C  EC7F  F0B3         	call	_pad	;wreg free
 19265                           
 19266                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 19267  017330  0EFB               	movlw	251
 19268  017332  26E1               	addwf	fsr1l,f,c
 19269  017334  0EFF               	movlw	255
 19270  017336  22E2               	addwfc	fsr1h,f,c
 19271  017338  0012               	return		;funcret
 19272  01733A                     __end_of_ctoa:
 19273                           	opt callstack 0
 19274                           
 19275 ;; *************** function _pad *****************
 19276 ;; Defined at:
 19277 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 19278 ;; Parameters:    Size  Location     Type
 19279 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19280 ;;		 -> f(6), NULL(0), 
 19281 ;;  buf             2  [STACK] PTR unsigned char 
 19282 ;;		 -> dbuf(80), 
 19283 ;;  p               2  [STACK] int 
 19284 ;; Auto vars:     Size  Location     Type
 19285 ;;  w               2  [STACK] int 
 19286 ;;  i               2  [STACK] int 
 19287 ;; Return value:  Size  Location     Type
 19288 ;;                  2  [STACK] int 
 19289 ;; Registers used:
 19290 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 19291 ;; Tracked objects:
 19292 ;;		On entry : 0/2
 19293 ;;		On exit  : 0/0
 19294 ;;		Unchanged: 0/0
 19295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19299 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19300 ;;Total ram usage:        0 bytes
 19301 ;; Hardware stack levels used:    1
 19302 ;; Hardware stack levels required when called:   10
 19303 ;; This function calls:
 19304 ;;		_fputc
 19305 ;;		_fputs
 19306 ;;		_strlen
 19307 ;; This function is called by:
 19308 ;;		_ctoa
 19309 ;;		_dtoa
 19310 ;;		_efgtoa
 19311 ;;		_xtoa
 19312 ;; This function uses a reentrant model
 19313 ;;
 19314                           
 19315                           	psect	text66
 19316  0166FE                     __ptext66:
 19317                           	opt callstack 0
 19318  0166FE                     _pad:
 19319                           	opt callstack 0
 19320                           
 19321                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19322  0166FE  52E6               	movf	postinc1,f,c
 19323  016700  52E6               	movf	postinc1,f,c
 19324  016702  52E6               	movf	postinc1,f,c
 19325  016704  52E6               	movf	postinc1,f,c
 19326                           
 19327                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 19328                           
 19329                           ;incstack = 0
 19330  016706  A01F               	btfss	_flags^0,0,c
 19331  016708  D010               	goto	l9463
 19332                           
 19333                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 19334                           ;stkvar	_fp @ sp[(-4)+-2]
 19335  01670A  0EFA               	movlw	-6
 19336  01670C  006F FF8F FFE6     	movff	plusw1,postinc1
 19337  016712  006F FF8F FFE6     	movff	plusw1,postinc1
 19338                           
 19339                           ;stkvar	_buf @ sp[(-6)+-4]
 19340  016718  0EF6               	movlw	-10
 19341  01671A  006F FF8F FFE6     	movff	plusw1,postinc1
 19342  016720  006F FF8F FFE6     	movff	plusw1,postinc1
 19343  016726  EC7B  F0B8         	call	_fputs	;wreg free
 19344  01672A                     l9463:
 19345                           
 19346                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 19347                           ;stkvar	_p @ sp[(-4)+-6]
 19348  01672A  0EF7               	movlw	-9
 19349  01672C  BEE3               	btfsc	plusw1,7,c
 19350  01672E  D011               	goto	l9467
 19351                           
 19352                           ;stkvar	_p @ sp[(-4)+-6]
 19353                           ;stkvar	_w @ sp[(-4)+0]
 19354  016730  0EF6               	movlw	-10
 19355  016732  006F FF8C  F032    	movff	plusw1,btemp
 19356  016738  0EFC               	movlw	-4
 19357  01673A  0060  F0CB  FFE3   	movff	btemp,plusw1
 19358  016740  0EF7               	movlw	-9
 19359  016742  006F FF8C  F032    	movff	plusw1,btemp
 19360  016748  0EFD               	movlw	-3
 19361  01674A  0060  F0CB  FFE3   	movff	btemp,plusw1
 19362  016750  D004               	goto	l1808
 19363  016752                     l9467:
 19364                           
 19365                           ;stkvar	_w @ sp[(-4)+0]
 19366  016752  0EFC               	movlw	-4
 19367  016754  6AE3               	clrf	plusw1,c
 19368  016756  0EFD               	movlw	-3
 19369  016758  6AE3               	clrf	plusw1,c
 19370  01675A                     l1808:
 19371                           
 19372                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 19373                           ;stkvar	_i @ sp[(-4)+2]
 19374  01675A  0EFE               	movlw	-2
 19375  01675C  6AE3               	clrf	plusw1,c
 19376  01675E  0EFF               	movlw	-1
 19377  016760  6AE3               	clrf	plusw1,c
 19378                           
 19379                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 19380  016762  D01E               	goto	l9473
 19381  016764                     l9469:
 19382                           
 19383                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 19384                           ;stkvar	_fp @ sp[(-4)+-2]
 19385  016764  0EFA               	movlw	-6
 19386  016766  006F FF8F FFE6     	movff	plusw1,postinc1
 19387  01676C  006F FF8F FFE6     	movff	plusw1,postinc1
 19388  016772  0E20               	movlw	32
 19389  016774  6EE6               	movwf	postinc1,c
 19390  016776  0E00               	movlw	0
 19391  016778  6EE6               	movwf	postinc1,c
 19392  01677A  EC61  F0B2         	call	_fputc	;wreg free
 19393                           
 19394                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 19395                           ;stkvar	_i @ sp[(-4)+2]
 19396  01677E  0EFE               	movlw	-2
 19397  016780  50E3               	movf	plusw1,w,c
 19398  016782  0F01               	addlw	1
 19399  016784  6E32               	movwf	btemp^0,c
 19400  016786  0EFE               	movlw	-2
 19401  016788  0060  F0CB  FFE3   	movff	btemp,plusw1
 19402  01678E  6A32               	clrf	btemp^0,c
 19403  016790  0EFF               	movlw	-1
 19404  016792  50E3               	movf	plusw1,w,c
 19405  016794  2032               	addwfc	btemp^0,w,c
 19406  016796  6E32               	movwf	btemp^0,c
 19407  016798  0EFF               	movlw	-1
 19408  01679A  0060  F0CB  FFE3   	movff	btemp,plusw1
 19409  0167A0                     l9473:
 19410                           
 19411                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 19412                           ;stkvar	_w @ sp[(-4)+0]
 19413                           ;stkvar	_i @ sp[(-4)+2]
 19414  0167A0  50E1               	movf	fsr1l,w,c
 19415  0167A2  0FFE               	addlw	-2
 19416  0167A4  6ED9               	movwf	fsr2l,c
 19417  0167A6  50E2               	movf	fsr1h,w,c
 19418  0167A8  6EDA               	movwf	fsr2h,c
 19419  0167AA  0EFF               	movlw	255
 19420  0167AC  22DA               	addwfc	fsr2h,f,c
 19421  0167AE  0EFC               	movlw	-4
 19422  0167B0  50E3               	movf	plusw1,w,c
 19423  0167B2  5CDE               	subwf	postinc2,w,c
 19424  0167B4  50DE               	movf	postinc2,w,c
 19425  0167B6  0A80               	xorlw	128
 19426  0167B8  6E32               	movwf	btemp^0,c
 19427  0167BA  0EFD               	movlw	-3
 19428  0167BC  50E3               	movf	plusw1,w,c
 19429  0167BE  0A80               	xorlw	128
 19430  0167C0  5832               	subwfb	btemp^0,w,c
 19431  0167C2  A0D8               	btfss	status,0,c
 19432  0167C4  D7CF               	goto	l9469
 19433                           
 19434                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 19435  0167C6  B01F               	btfsc	_flags^0,0,c
 19436  0167C8  D010               	goto	l9477
 19437                           
 19438                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 19439                           ;stkvar	_fp @ sp[(-4)+-2]
 19440  0167CA  0EFA               	movlw	-6
 19441  0167CC  006F FF8F FFE6     	movff	plusw1,postinc1
 19442  0167D2  006F FF8F FFE6     	movff	plusw1,postinc1
 19443                           
 19444                           ;stkvar	_buf @ sp[(-6)+-4]
 19445  0167D8  0EF6               	movlw	-10
 19446  0167DA  006F FF8F FFE6     	movff	plusw1,postinc1
 19447  0167E0  006F FF8F FFE6     	movff	plusw1,postinc1
 19448  0167E6  EC7B  F0B8         	call	_fputs	;wreg free
 19449  0167EA                     l9477:
 19450                           
 19451                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 19452                           ;stkvar	_w @ sp[(-4)+0]
 19453                           ;stkvar	_buf @ sp[(-4)+-4]
 19454  0167EA  0EF8               	movlw	-8
 19455  0167EC  006F FF8F FFE6     	movff	plusw1,postinc1
 19456  0167F2  006F FF8F FFE6     	movff	plusw1,postinc1
 19457  0167F8  EC2A  F0B8         	call	_strlen	;wreg free
 19458  0167FC  0EFC               	movlw	-4
 19459  0167FE  50E3               	movf	plusw1,w,c
 19460  016800  2632               	addwf	btemp^0,f,c
 19461  016802  0EFD               	movlw	-3
 19462  016804  50E3               	movf	plusw1,w,c
 19463  016806  2233               	addwfc	(btemp+1)^0,f,c
 19464                           
 19465                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 19466  016808  0EF6               	movlw	246
 19467  01680A  26E1               	addwf	fsr1l,f,c
 19468  01680C  0EFF               	movlw	255
 19469  01680E  22E2               	addwfc	fsr1h,f,c
 19470  016810  0012               	return		;funcret
 19471  016812                     __end_of_pad:
 19472                           	opt callstack 0
 19473                           
 19474 ;; *************** function _strlen *****************
 19475 ;; Defined at:
 19476 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 19477 ;; Parameters:    Size  Location     Type
 19478 ;;  s               2  [STACK] PTR const unsigned char 
 19479 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 19480 ;;		 -> STR_16(9), STR_15(12), D.lcd(216), D(218), 
 19481 ;;		 -> T(144), STR_7(5), STR_3(5), V(187), 
 19482 ;; Auto vars:     Size  Location     Type
 19483 ;;  a               2  [STACK] PTR const unsigned char 
 19484 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 19485 ;;		 -> STR_16(9), STR_15(12), D.lcd(216), D(218), 
 19486 ;;		 -> T(144), STR_7(5), STR_3(5), V(187), 
 19487 ;; Return value:  Size  Location     Type
 19488 ;;                  2  [STACK] unsigned int 
 19489 ;; Registers used:
 19490 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 19491 ;; Tracked objects:
 19492 ;;		On entry : 0/0
 19493 ;;		On exit  : 0/0
 19494 ;;		Unchanged: 0/0
 19495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19500 ;;Total ram usage:        0 bytes
 19501 ;; Hardware stack levels used:    1
 19502 ;; Hardware stack levels required when called:    6
 19503 ;; This function calls:
 19504 ;;		Nothing
 19505 ;; This function is called by:
 19506 ;;		_eaDogM_WriteString
 19507 ;;		_pad
 19508 ;;		_stoa
 19509 ;; This function uses a reentrant model
 19510 ;;
 19511                           
 19512                           	psect	text67
 19513  017054                     __ptext67:
 19514                           	opt callstack 0
 19515  017054                     _strlen:
 19516                           	opt callstack 0
 19517                           
 19518                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19519  017054  52E6               	movf	postinc1,f,c
 19520  017056  52E6               	movf	postinc1,f,c
 19521                           
 19522                           ;stkvar	_s @ sp[(-2)+-2]
 19523                           
 19524                           ;incstack = 0
 19525  017058  0EFC               	movlw	-4
 19526  01705A  006F FF8C  F03C    	movff	plusw1,btemp+10
 19527  017060  0EFD               	movlw	-3
 19528  017062  006F FF8C  F03D    	movff	plusw1,btemp+11
 19529                           
 19530                           ;stkvar	_a @ sp[(-2)+0]
 19531  017068  0EFF               	movlw	-1
 19532  01706A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 19533  017070  0EFE               	movlw	-2
 19534  017072  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 19535  017078  D011               	goto	l9217
 19536  01707A                     l9215:
 19537                           
 19538                           ;stkvar	_s @ sp[(-2)+-2]
 19539  01707A  0EFC               	movlw	-4
 19540  01707C  50E3               	movf	plusw1,w,c
 19541  01707E  0F01               	addlw	1
 19542  017080  6E32               	movwf	btemp^0,c
 19543  017082  0EFC               	movlw	-4
 19544  017084  0060  F0CB  FFE3   	movff	btemp,plusw1
 19545  01708A  6A32               	clrf	btemp^0,c
 19546  01708C  0EFD               	movlw	-3
 19547  01708E  50E3               	movf	plusw1,w,c
 19548  017090  2032               	addwfc	btemp^0,w,c
 19549  017092  6E32               	movwf	btemp^0,c
 19550  017094  0EFD               	movlw	-3
 19551  017096  0060  F0CB  FFE3   	movff	btemp,plusw1
 19552  01709C                     l9217:
 19553                           
 19554                           ;stkvar	_s @ sp[(-2)+-2]
 19555  01709C  0EFC               	movlw	-4
 19556  01709E  006F FF8F FFF6     	movff	plusw1,tblptrl
 19557  0170A4  0EFD               	movlw	-3
 19558  0170A6  006F FF8F FFF7     	movff	plusw1,tblptrh
 19559  0170AC  0E00               	movlw	low (__mediumconst shr (0+16))
 19560  0170AE  6EF8               	movwf	tblptru,c
 19561  0170B0  0E1F               	movlw	(high __ramtop+-1)
 19562  0170B2  64F7               	cpfsgt	tblptrh,c
 19563  0170B4  D003               	bra	u8807
 19564  0170B6  0008               	tblrd		*
 19565  0170B8  50F5               	movf	tablat,w,c
 19566  0170BA  D007               	bra	u8800
 19567  0170BC                     u8807:
 19568  0170BC  006F FFDB FFE9     	movff	tblptrl,fsr0l
 19569  0170C2  006F FFDF FFEA     	movff	tblptrh,fsr0h
 19570  0170C8  50EF               	movf	indf0,w,c
 19571  0170CA                     u8800:
 19572  0170CA  0900               	iorlw	0
 19573  0170CC  A4D8               	btfss	status,2,c
 19574  0170CE  D7D5               	goto	l9215
 19575                           
 19576                           ;stkvar	_a @ sp[(-2)+0]
 19577                           ;stkvar	_s @ sp[(-2)+-2]
 19578  0170D0  0EFC               	movlw	-4
 19579  0170D2  006F FF8C  F032    	movff	plusw1,btemp
 19580  0170D8  0EFD               	movlw	-3
 19581  0170DA  006F FF8C  F033    	movff	plusw1,btemp+1
 19582  0170E0  0EFE               	movlw	-2
 19583  0170E2  50E3               	movf	plusw1,w,c
 19584  0170E4  5E32               	subwf	btemp^0,f,c
 19585  0170E6  0EFF               	movlw	-1
 19586  0170E8  50E3               	movf	plusw1,w,c
 19587  0170EA  5A33               	subwfb	(btemp+1)^0,f,c
 19588                           
 19589                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 19590  0170EC  52E5               	movf	postdec1,f,c
 19591  0170EE  52E5               	movf	postdec1,f,c
 19592  0170F0  52E5               	movf	postdec1,f,c
 19593  0170F2  52E5               	movf	postdec1,f,c
 19594  0170F4  0012               	return		;funcret
 19595  0170F6                     __end_of_strlen:
 19596                           	opt callstack 0
 19597                           
 19598 ;; *************** function _fputs *****************
 19599 ;; Defined at:
 19600 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 19601 ;; Parameters:    Size  Location     Type
 19602 ;;  s               2  [STACK] PTR const unsigned char 
 19603 ;;		 -> dbuf(80), 
 19604 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19605 ;;		 -> f(6), NULL(0), 
 19606 ;; Auto vars:     Size  Location     Type
 19607 ;;  i               2  [STACK] int 
 19608 ;;  c               1  [STACK] unsigned char 
 19609 ;; Return value:  Size  Location     Type
 19610 ;;                  2  [STACK] int 
 19611 ;; Registers used:
 19612 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 19613 ;; Tracked objects:
 19614 ;;		On entry : 0/2
 19615 ;;		On exit  : 0/0
 19616 ;;		Unchanged: 0/0
 19617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19622 ;;Total ram usage:        0 bytes
 19623 ;; Hardware stack levels used:    1
 19624 ;; Hardware stack levels required when called:    9
 19625 ;; This function calls:
 19626 ;;		_fputc
 19627 ;; This function is called by:
 19628 ;;		_pad
 19629 ;; This function uses a reentrant model
 19630 ;;
 19631                           
 19632                           	psect	text68
 19633  0170F6                     __ptext68:
 19634                           	opt callstack 0
 19635  0170F6                     _fputs:
 19636                           	opt callstack 0
 19637                           
 19638                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19639  0170F6  52E6               	movf	postinc1,f,c
 19640  0170F8  52E6               	movf	postinc1,f,c
 19641  0170FA  52E6               	movf	postinc1,f,c
 19642                           
 19643                           ;stkvar	_i @ sp[(-3)+0]
 19644                           
 19645                           ;incstack = 0
 19646  0170FC  0EFD               	movlw	-3
 19647  0170FE  6AE3               	clrf	plusw1,c
 19648  017100  0EFE               	movlw	-2
 19649  017102  6AE3               	clrf	plusw1,c
 19650  017104  D01F               	goto	l9229
 19651  017106                     l9225:
 19652                           
 19653                           ;stkvar	_fp @ sp[(-3)+-4]
 19654  017106  0EF9               	movlw	-7
 19655  017108  006F FF8F FFE6     	movff	plusw1,postinc1
 19656  01710E  006F FF8F FFE6     	movff	plusw1,postinc1
 19657                           
 19658                           ;stkvar	_c @ sp[(-5)+2]
 19659  017114  0EFD               	movlw	-3
 19660  017116  50E3               	movf	plusw1,w,c
 19661  017118  6EE6               	movwf	postinc1,c
 19662  01711A  0E00               	movlw	0
 19663  01711C  6EE6               	movwf	postinc1,c
 19664  01711E  EC61  F0B2         	call	_fputc	;wreg free
 19665                           
 19666                           ;stkvar	_i @ sp[(-3)+0]
 19667  017122  0EFD               	movlw	-3
 19668  017124  50E3               	movf	plusw1,w,c
 19669  017126  0F01               	addlw	1
 19670  017128  6E32               	movwf	btemp^0,c
 19671  01712A  0EFD               	movlw	-3
 19672  01712C  0060  F0CB  FFE3   	movff	btemp,plusw1
 19673  017132  6A32               	clrf	btemp^0,c
 19674  017134  0EFE               	movlw	-2
 19675  017136  50E3               	movf	plusw1,w,c
 19676  017138  2032               	addwfc	btemp^0,w,c
 19677  01713A  6E32               	movwf	btemp^0,c
 19678  01713C  0EFE               	movlw	-2
 19679  01713E  0060  F0CB  FFE3   	movff	btemp,plusw1
 19680  017144                     l9229:
 19681                           
 19682                           ;stkvar	_i @ sp[(-3)+0]
 19683  017144  0EFD               	movlw	-3
 19684  017146  006F FF8C  F03C    	movff	plusw1,btemp+10
 19685  01714C  0EFE               	movlw	-2
 19686  01714E  006F FF8C  F03D    	movff	plusw1,btemp+11
 19687                           
 19688                           ;stkvar	_s @ sp[(-3)+-2]
 19689  017154  0EFB               	movlw	-5
 19690  017156  006F FF8C  F03A    	movff	plusw1,btemp+8
 19691  01715C  0EFC               	movlw	-4
 19692  01715E  006F FF8C  F03B    	movff	plusw1,btemp+9
 19693  017164  503C               	movf	(btemp+10)^0,w,c
 19694  017166  243A               	addwf	(btemp+8)^0,w,c
 19695  017168  6ED9               	movwf	fsr2l,c
 19696  01716A  503D               	movf	(btemp+11)^0,w,c
 19697  01716C  203B               	addwfc	(btemp+9)^0,w,c
 19698  01716E  6EDA               	movwf	fsr2h,c
 19699  017170  50DF               	movf	indf2,w,c
 19700  017172  6E3D               	movwf	(btemp+11)^0,c
 19701                           
 19702                           ;stkvar	_c @ sp[(-3)+2]
 19703  017174  0EFF               	movlw	-1
 19704  017176  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 19705  01717C  0EFF               	movlw	-1
 19706  01717E  50E3               	movf	plusw1,w,c
 19707  017180  A4D8               	btfss	status,2,c
 19708  017182  D7C1               	goto	l9225
 19709                           
 19710                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 19711  017184  0EF9               	movlw	249
 19712  017186  26E1               	addwf	fsr1l,f,c
 19713  017188  0EFF               	movlw	255
 19714  01718A  22E2               	addwfc	fsr1h,f,c
 19715  01718C  0012               	return		;funcret
 19716  01718E                     __end_of_fputs:
 19717                           	opt callstack 0
 19718                           
 19719 ;; *************** function _fputc *****************
 19720 ;; Defined at:
 19721 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 19722 ;; Parameters:    Size  Location     Type
 19723 ;;  c               2  [STACK] int 
 19724 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19725 ;;		 -> f(6), NULL(0), 
 19726 ;; Auto vars:     Size  Location     Type
 19727 ;;		None
 19728 ;; Return value:  Size  Location     Type
 19729 ;;                  2  [STACK] int 
 19730 ;; Registers used:
 19731 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 19732 ;; Tracked objects:
 19733 ;;		On entry : 0/5
 19734 ;;		On exit  : 0/0
 19735 ;;		Unchanged: 0/0
 19736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19741 ;;Total ram usage:        0 bytes
 19742 ;; Hardware stack levels used:    1
 19743 ;; Hardware stack levels required when called:    8
 19744 ;; This function calls:
 19745 ;;		_putch
 19746 ;; This function is called by:
 19747 ;;		_pad
 19748 ;;		_stoa
 19749 ;;		_vfpfcnvrt
 19750 ;;		_fputs
 19751 ;; This function uses a reentrant model
 19752 ;;
 19753                           
 19754                           	psect	text69
 19755  0164C2                     __ptext69:
 19756                           	opt callstack 0
 19757  0164C2                     _fputc:
 19758                           	opt callstack 13
 19759                           
 19760                           ;stkvar	_fp @ sp[(0)+-4]
 19761                           
 19762                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19763                           ;incstack = 0
 19764  0164C2  0EFC               	movlw	-4
 19765  0164C4  006F FF8C  F032    	movff	plusw1,btemp
 19766  0164CA  0EFD               	movlw	-3
 19767  0164CC  50E3               	movf	plusw1,w,c
 19768  0164CE  1032               	iorwf	btemp^0,w,c
 19769  0164D0  B4D8               	btfsc	status,2,c
 19770  0164D2  D009               	goto	u8770
 19771                           
 19772                           ;stkvar	_fp @ sp[(0)+-4]
 19773  0164D4  0EFC               	movlw	-4
 19774  0164D6  006F FF8C  F032    	movff	plusw1,btemp
 19775  0164DC  0EFD               	movlw	-3
 19776  0164DE  50E3               	movf	plusw1,w,c
 19777  0164E0  1032               	iorwf	btemp^0,w,c
 19778  0164E2  A4D8               	btfss	status,2,c
 19779  0164E4  D006               	goto	l9203
 19780  0164E6                     u8770:
 19781                           
 19782                           ;stkvar	_c @ sp[(0)+-2]
 19783  0164E6  0EFE               	movlw	-2
 19784  0164E8  50E3               	movf	plusw1,w,c
 19785  0164EA  6EE6               	movwf	postinc1,c
 19786  0164EC  EC50  F0C2         	call	_putch	;wreg free
 19787  0164F0  D075               	goto	l2826
 19788  0164F2                     l9203:
 19789                           
 19790                           ;stkvar	_fp @ sp[(0)+-4]
 19791  0164F2  0EFC               	movlw	-4
 19792  0164F4  006F FF8C  F03C    	movff	plusw1,btemp+10
 19793  0164FA  0EFD               	movlw	-3
 19794  0164FC  006F FF8C  F03D    	movff	plusw1,btemp+11
 19795  016502  0E04               	movlw	4
 19796  016504  243C               	addwf	(btemp+10)^0,w,c
 19797  016506  6ED9               	movwf	fsr2l,c
 19798  016508  0E00               	movlw	0
 19799  01650A  203D               	addwfc	(btemp+11)^0,w,c
 19800  01650C  6EDA               	movwf	fsr2h,c
 19801  01650E  50DE               	movf	postinc2,w,c
 19802  016510  10DE               	iorwf	postinc2,w,c
 19803  016512  B4D8               	btfsc	status,2,c
 19804  016514  D026               	goto	u8790
 19805                           
 19806                           ;stkvar	_fp @ sp[(0)+-4]
 19807  016516  0EFC               	movlw	-4
 19808  016518  006F FF8C  F03C    	movff	plusw1,btemp+10
 19809  01651E  0EFD               	movlw	-3
 19810  016520  006F FF8C  F03D    	movff	plusw1,btemp+11
 19811  016526  0E04               	movlw	4
 19812  016528  243C               	addwf	(btemp+10)^0,w,c
 19813  01652A  6ED9               	movwf	fsr2l,c
 19814  01652C  0E00               	movlw	0
 19815  01652E  203D               	addwfc	(btemp+11)^0,w,c
 19816  016530  6EDA               	movwf	fsr2h,c
 19817                           
 19818                           ;stkvar	_fp @ sp[(0)+-4]
 19819  016532  0EFC               	movlw	-4
 19820  016534  006F FF8C  F03C    	movff	plusw1,btemp+10
 19821  01653A  0EFD               	movlw	-3
 19822  01653C  006F FF8C  F03D    	movff	plusw1,btemp+11
 19823  016542  0E02               	movlw	2
 19824  016544  243C               	addwf	(btemp+10)^0,w,c
 19825  016546  6EE9               	movwf	fsr0l,c
 19826  016548  0E00               	movlw	0
 19827  01654A  203D               	addwfc	(btemp+11)^0,w,c
 19828  01654C  6EEA               	movwf	fsr0h,c
 19829  01654E  50DE               	movf	postinc2,w,c
 19830  016550  5CEE               	subwf	postinc0,w,c
 19831  016552  50EE               	movf	postinc0,w,c
 19832  016554  0A80               	xorlw	128
 19833  016556  6E32               	movwf	btemp^0,c
 19834  016558  50DE               	movf	postinc2,w,c
 19835  01655A  0A80               	xorlw	128
 19836  01655C  5832               	subwfb	btemp^0,w,c
 19837  01655E  B0D8               	btfsc	status,0,c
 19838  016560  D03D               	goto	l2826
 19839  016562                     u8790:
 19840                           
 19841                           ;stkvar	_c @ sp[(0)+-2]
 19842                           ;stkvar	_fp @ sp[(0)+-4]
 19843  016562  0EFC               	movlw	-4
 19844  016564  006F FF8C  F03C    	movff	plusw1,btemp+10
 19845  01656A  0EFD               	movlw	-3
 19846  01656C  006F FF8C  F03D    	movff	plusw1,btemp+11
 19847  016572  0E02               	movlw	2
 19848  016574  243C               	addwf	(btemp+10)^0,w,c
 19849  016576  6ED9               	movwf	fsr2l,c
 19850  016578  0E00               	movlw	0
 19851  01657A  203D               	addwfc	(btemp+11)^0,w,c
 19852  01657C  6EDA               	movwf	fsr2h,c
 19853  01657E  006F FF78  F03C    	movff	postinc2,btemp+10
 19854  016584  006F FF74  F03D    	movff	postdec2,btemp+11
 19855                           
 19856                           ;stkvar	_fp @ sp[(0)+-4]
 19857  01658A  0EFC               	movlw	-4
 19858  01658C  006F FF8F FFD9     	movff	plusw1,fsr2l
 19859  016592  0EFD               	movlw	-3
 19860  016594  006F FF8F FFDA     	movff	plusw1,fsr2h
 19861  01659A  006F FF78  F03A    	movff	postinc2,btemp+8
 19862  0165A0  006F FF74  F03B    	movff	postdec2,btemp+9
 19863  0165A6  503C               	movf	(btemp+10)^0,w,c
 19864  0165A8  243A               	addwf	(btemp+8)^0,w,c
 19865  0165AA  6ED9               	movwf	fsr2l,c
 19866  0165AC  503D               	movf	(btemp+11)^0,w,c
 19867  0165AE  203B               	addwfc	(btemp+9)^0,w,c
 19868  0165B0  6EDA               	movwf	fsr2h,c
 19869  0165B2  0EFE               	movlw	-2
 19870  0165B4  006F FF8F FFDF     	movff	plusw1,indf2
 19871                           
 19872                           ;stkvar	_fp @ sp[(0)+-4]
 19873  0165BA  0EFC               	movlw	-4
 19874  0165BC  006F FF8C  F03C    	movff	plusw1,btemp+10
 19875  0165C2  0EFD               	movlw	-3
 19876  0165C4  006F FF8C  F03D    	movff	plusw1,btemp+11
 19877  0165CA  0E02               	movlw	2
 19878  0165CC  243C               	addwf	(btemp+10)^0,w,c
 19879  0165CE  6ED9               	movwf	fsr2l,c
 19880  0165D0  0E00               	movlw	0
 19881  0165D2  203D               	addwfc	(btemp+11)^0,w,c
 19882  0165D4  6EDA               	movwf	fsr2h,c
 19883  0165D6  2ADE               	incf	postinc2,f,c
 19884  0165D8  0E00               	movlw	0
 19885  0165DA  22DD               	addwfc	postdec2,f,c
 19886  0165DC                     l2826:
 19887                           
 19888                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 19889  0165DC  52E5               	movf	postdec1,f,c
 19890  0165DE  52E5               	movf	postdec1,f,c
 19891  0165E0  52E5               	movf	postdec1,f,c
 19892  0165E2  52E5               	movf	postdec1,f,c
 19893  0165E4  0012               	return		;funcret
 19894  0165E6                     __end_of_fputc:
 19895                           	opt callstack 0
 19896                           
 19897 ;; *************** function _putch *****************
 19898 ;; Defined at:
 19899 ;;		line 155 in file "eadog.c"
 19900 ;; Parameters:    Size  Location     Type
 19901 ;;  c               1  [STACK] unsigned char 
 19902 ;; Auto vars:     Size  Location     Type
 19903 ;;		None
 19904 ;; Return value:  Size  Location     Type
 19905 ;;                  1  [STACK] void 
 19906 ;; Registers used:
 19907 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 19908 ;; Tracked objects:
 19909 ;;		On entry : 0/5
 19910 ;;		On exit  : 0/0
 19911 ;;		Unchanged: 0/0
 19912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19916 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19917 ;;Total ram usage:        0 bytes
 19918 ;; Hardware stack levels used:    1
 19919 ;; Hardware stack levels required when called:    7
 19920 ;; This function calls:
 19921 ;;		_ringBufS_put_dma
 19922 ;; This function is called by:
 19923 ;;		_fputc
 19924 ;; This function uses a reentrant model
 19925 ;;
 19926                           
 19927                           	psect	text70
 19928  0184A0                     __ptext70:
 19929                           	opt callstack 0
 19930  0184A0                     _putch:
 19931                           	opt callstack 13
 19932                           
 19933                           ;eadog.c: 155: void putch(char c);eadog.c: 156: {;eadog.c: 157:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 19934                           ;stkvar	_c @ sp[(0)+-1]
 19935                           
 19936                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19937                           ;incstack = 0
 19938  0184A0  0EFF               	movlw	-1
 19939  0184A2  50E3               	movf	plusw1,w,c
 19940  0184A4  6EE6               	movwf	postinc1,c
 19941  0184A6  0060  F29F  FFE6   	movff	_spi_link+6,postinc1
 19942  0184AC  0060  F2A3  FFE6   	movff	_spi_link+7,postinc1
 19943  0184B2  EC2E  F0B7         	call	_ringBufS_put_dma	;wreg free
 19944                           
 19945                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 19946  0184B6  52E5               	movf	postdec1,f,c
 19947  0184B8  0012               	return		;funcret
 19948  0184BA                     __end_of_putch:
 19949                           	opt callstack 0
 19950                           
 19951 ;; *************** function _ringBufS_put_dma *****************
 19952 ;; Defined at:
 19953 ;;		line 67 in file "ringbufs.c"
 19954 ;; Parameters:    Size  Location     Type
 19955 ;;  _this           2  [STACK] PTR struct ringBufS_t
 19956 ;;		 -> ring_buf1(67), 
 19957 ;;  c               1  [STACK] const unsigned char 
 19958 ;; Auto vars:     Size  Location     Type
 19959 ;;		None
 19960 ;; Return value:  Size  Location     Type
 19961 ;;                  1  [STACK] void 
 19962 ;; Registers used:
 19963 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 19964 ;; Tracked objects:
 19965 ;;		On entry : 0/5
 19966 ;;		On exit  : 0/0
 19967 ;;		Unchanged: 0/0
 19968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19972 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19973 ;;Total ram usage:        0 bytes
 19974 ;; Hardware stack levels used:    1
 19975 ;; Hardware stack levels required when called:    6
 19976 ;; This function calls:
 19977 ;;		Nothing
 19978 ;; This function is called by:
 19979 ;;		_putch
 19980 ;; This function uses a reentrant model
 19981 ;;
 19982                           
 19983                           	psect	text71
 19984  016E5C                     __ptext71:
 19985                           	opt callstack 0
 19986  016E5C                     _ringBufS_put_dma:
 19987                           	opt callstack 13
 19988                           
 19989                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 19990                           ;stkvar	__this @ sp[(0)+-2]
 19991                           
 19992                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19993                           ;incstack = 0
 19994  016E5C  0EFE               	movlw	-2
 19995  016E5E  006F FF8C  F03C    	movff	plusw1,btemp+10
 19996  016E64  0EFF               	movlw	-1
 19997  016E66  006F FF8C  F03D    	movff	plusw1,btemp+11
 19998  016E6C  0E42               	movlw	66
 19999  016E6E  243C               	addwf	(btemp+10)^0,w,c
 20000  016E70  6ED9               	movwf	fsr2l,c
 20001  016E72  0E00               	movlw	0
 20002  016E74  203D               	addwfc	(btemp+11)^0,w,c
 20003  016E76  6EDA               	movwf	fsr2h,c
 20004  016E78  0E40               	movlw	64
 20005  016E7A  60DF               	cpfslt	indf2,c
 20006  016E7C  D040               	goto	l1471
 20007                           
 20008                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 20009                           ;stkvar	_c @ sp[(0)+-3]
 20010                           ;stkvar	__this @ sp[(0)+-2]
 20011  016E7E  0EFE               	movlw	-2
 20012  016E80  006F FF8C  F03C    	movff	plusw1,btemp+10
 20013  016E86  0EFF               	movlw	-1
 20014  016E88  006F FF8C  F03D    	movff	plusw1,btemp+11
 20015  016E8E  0E40               	movlw	64
 20016  016E90  243C               	addwf	(btemp+10)^0,w,c
 20017  016E92  6ED9               	movwf	fsr2l,c
 20018  016E94  0E00               	movlw	0
 20019  016E96  203D               	addwfc	(btemp+11)^0,w,c
 20020  016E98  6EDA               	movwf	fsr2h,c
 20021  016E9A  50DF               	movf	indf2,w,c
 20022  016E9C  6E3D               	movwf	(btemp+11)^0,c
 20023                           
 20024                           ;stkvar	__this @ sp[(0)+-2]
 20025  016E9E  0EFE               	movlw	-2
 20026  016EA0  006F FF8C  F03A    	movff	plusw1,btemp+8
 20027  016EA6  0EFF               	movlw	-1
 20028  016EA8  006F FF8C  F03B    	movff	plusw1,btemp+9
 20029  016EAE  503D               	movf	(btemp+11)^0,w,c
 20030  016EB0  243A               	addwf	(btemp+8)^0,w,c
 20031  016EB2  6ED9               	movwf	fsr2l,c
 20032  016EB4  0E00               	movlw	0
 20033  016EB6  203B               	addwfc	(btemp+9)^0,w,c
 20034  016EB8  6EDA               	movwf	fsr2h,c
 20035  016EBA  0EFD               	movlw	-3
 20036  016EBC  006F FF8F FFDF     	movff	plusw1,indf2
 20037                           
 20038                           ;ringbufs.c: 71:   ++_this->head;
 20039                           ;stkvar	__this @ sp[(0)+-2]
 20040  016EC2  0EFE               	movlw	-2
 20041  016EC4  006F FF8C  F03C    	movff	plusw1,btemp+10
 20042  016ECA  0EFF               	movlw	-1
 20043  016ECC  006F FF8C  F03D    	movff	plusw1,btemp+11
 20044  016ED2  0E40               	movlw	64
 20045  016ED4  243C               	addwf	(btemp+10)^0,w,c
 20046  016ED6  6ED9               	movwf	fsr2l,c
 20047  016ED8  0E00               	movlw	0
 20048  016EDA  203D               	addwfc	(btemp+11)^0,w,c
 20049  016EDC  6EDA               	movwf	fsr2h,c
 20050  016EDE  2ADF               	incf	indf2,f,c
 20051                           
 20052                           ;ringbufs.c: 72:   ++_this->count;
 20053                           ;stkvar	__this @ sp[(0)+-2]
 20054  016EE0  0EFE               	movlw	-2
 20055  016EE2  006F FF8C  F03C    	movff	plusw1,btemp+10
 20056  016EE8  0EFF               	movlw	-1
 20057  016EEA  006F FF8C  F03D    	movff	plusw1,btemp+11
 20058  016EF0  0E42               	movlw	66
 20059  016EF2  243C               	addwf	(btemp+10)^0,w,c
 20060  016EF4  6ED9               	movwf	fsr2l,c
 20061  016EF6  0E00               	movlw	0
 20062  016EF8  203D               	addwfc	(btemp+11)^0,w,c
 20063  016EFA  6EDA               	movwf	fsr2h,c
 20064  016EFC  2ADF               	incf	indf2,f,c
 20065  016EFE                     l1471:
 20066                           
 20067                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 20068  016EFE  52E5               	movf	postdec1,f,c
 20069  016F00  52E5               	movf	postdec1,f,c
 20070  016F02  52E5               	movf	postdec1,f,c
 20071  016F04  0012               	return		;funcret
 20072  016F06                     __end_of_ringBufS_put_dma:
 20073                           	opt callstack 0
 20074                           
 20075 ;; *************** function _atoi *****************
 20076 ;; Defined at:
 20077 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 20078 ;; Parameters:    Size  Location     Type
 20079 ;;  s               2  [STACK] PTR const unsigned char 
 20080 ;;		 -> STR_32(3), STR_31(3), STR_30(19), STR_29(19), 
 20081 ;;		 -> STR_28(19), STR_27(19), STR_26(19), STR_25(19), 
 20082 ;;		 -> STR_24(24), STR_23(15), STR_22(15), STR_21(15), 
 20083 ;;		 -> STR_20(10), STR_19(10), STR_18(19), STR_17(19), 
 20084 ;;		 -> STR_14(3), STR_13(3), STR_12(3), STR_11(17), 
 20085 ;;		 -> STR_10(14), STR_9(14), STR_8(17), STR_6(15), 
 20086 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
 20087 ;; Auto vars:     Size  Location     Type
 20088 ;;  n               2  [STACK] int 
 20089 ;;  neg             2  [STACK] int 
 20090 ;; Return value:  Size  Location     Type
 20091 ;;                  2  [STACK] int 
 20092 ;; Registers used:
 20093 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 20094 ;; Tracked objects:
 20095 ;;		On entry : 0/5
 20096 ;;		On exit  : 0/0
 20097 ;;		Unchanged: 0/0
 20098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20103 ;;Total ram usage:        0 bytes
 20104 ;; Hardware stack levels used:    1
 20105 ;; Hardware stack levels required when called:    7
 20106 ;; This function calls:
 20107 ;;		_isdigit
 20108 ;;		_isspace
 20109 ;; This function is called by:
 20110 ;;		_vfpfcnvrt
 20111 ;; This function uses a reentrant model
 20112 ;;
 20113                           
 20114                           	psect	text72
 20115  015042                     __ptext72:
 20116                           	opt callstack 0
 20117  015042                     _atoi:
 20118                           	opt callstack 0
 20119                           
 20120                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20121  015042  0E09               	movlw	9
 20122  015044  26E1               	addwf	fsr1l,f,c
 20123  015046  0E00               	movlw	0
 20124  015048  22E2               	addwfc	fsr1h,f,c
 20125                           
 20126                           ;stkvar	_n @ sp[(-9)+5]
 20127                           
 20128                           ;incstack = 0
 20129  01504A  0EFC               	movlw	-4
 20130  01504C  6AE3               	clrf	plusw1,c
 20131  01504E  0EFD               	movlw	-3
 20132  015050  6AE3               	clrf	plusw1,c
 20133                           
 20134                           ;stkvar	_neg @ sp[(-9)+7]
 20135  015052  0EFE               	movlw	-2
 20136  015054  6AE3               	clrf	plusw1,c
 20137  015056  0EFF               	movlw	-1
 20138  015058  6AE3               	clrf	plusw1,c
 20139  01505A  D011               	goto	l10689
 20140  01505C                     l10687:
 20141                           
 20142                           ;stkvar	_s @ sp[(-9)+-2]
 20143  01505C  0EF5               	movlw	-11
 20144  01505E  50E3               	movf	plusw1,w,c
 20145  015060  0F01               	addlw	1
 20146  015062  6E32               	movwf	btemp^0,c
 20147  015064  0EF5               	movlw	-11
 20148  015066  0060  F0CB  FFE3   	movff	btemp,plusw1
 20149  01506C  6A32               	clrf	btemp^0,c
 20150  01506E  0EF6               	movlw	-10
 20151  015070  50E3               	movf	plusw1,w,c
 20152  015072  2032               	addwfc	btemp^0,w,c
 20153  015074  6E32               	movwf	btemp^0,c
 20154  015076  0EF6               	movlw	-10
 20155  015078  0060  F0CB  FFE3   	movff	btemp,plusw1
 20156  01507E                     l10689:
 20157                           
 20158                           ;stkvar	_atoi$4907 @ sp[(-9)+4]
 20159  01507E  0EFB               	movlw	-5
 20160  015080  6AE3               	clrf	plusw1,c
 20161  015082  2AE3               	incf	plusw1,f,c
 20162                           
 20163                           ;stkvar	_s @ sp[(-9)+-2]
 20164  015084  50E1               	movf	fsr1l,w,c
 20165  015086  0FF5               	addlw	-11
 20166  015088  6ED9               	movwf	fsr2l,c
 20167  01508A  50E2               	movf	fsr1h,w,c
 20168  01508C  6EDA               	movwf	fsr2h,c
 20169  01508E  0EFF               	movlw	255
 20170  015090  22DA               	addwfc	fsr2h,f,c
 20171  015092  006F FF7B FFF6     	movff	postinc2,tblptrl
 20172  015098  006F FF77 FFF7     	movff	postdec2,tblptrh
 20173  01509E                     	if	0	;tblptru may be non-zero
 20174  01509E                     	endif
 20175  01509E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20176  01509E  0E00               	movlw	low (__mediumconst shr (0+16))
 20177  0150A0  6EF8               	movwf	tblptru,c
 20178  0150A2                     	endif
 20179  0150A2  0008               	tblrd		*
 20180  0150A4  50F5               	movf	tablat,w,c
 20181  0150A6  0A20               	xorlw	32
 20182  0150A8  B4D8               	btfsc	status,2,c
 20183  0150AA  D023               	goto	l10697
 20184  0150AC  0EF7               	movlw	247
 20185  0150AE  6E3C               	movwf	(btemp+10)^0,c
 20186  0150B0  0EFF               	movlw	255
 20187  0150B2  6E3D               	movwf	(btemp+11)^0,c
 20188                           
 20189                           ;stkvar	_s @ sp[(-9)+-2]
 20190  0150B4  50E1               	movf	fsr1l,w,c
 20191  0150B6  0FF5               	addlw	-11
 20192  0150B8  6ED9               	movwf	fsr2l,c
 20193  0150BA  50E2               	movf	fsr1h,w,c
 20194  0150BC  6EDA               	movwf	fsr2h,c
 20195  0150BE  0EFF               	movlw	255
 20196  0150C0  22DA               	addwfc	fsr2h,f,c
 20197  0150C2  006F FF7B FFF6     	movff	postinc2,tblptrl
 20198  0150C8  006F FF77 FFF7     	movff	postdec2,tblptrh
 20199  0150CE                     	if	0	;tblptru may be non-zero
 20200  0150CE                     	endif
 20201  0150CE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20202  0150CE  0E00               	movlw	low (__mediumconst shr (0+16))
 20203  0150D0  6EF8               	movwf	tblptru,c
 20204  0150D2                     	endif
 20205  0150D2  0008               	tblrd		*
 20206  0150D4  50F5               	movf	tablat,w,c
 20207  0150D6  6E3A               	movwf	(btemp+8)^0,c
 20208  0150D8  6A3B               	clrf	(btemp+9)^0,c
 20209  0150DA  503C               	movf	(btemp+10)^0,w,c
 20210  0150DC  263A               	addwf	(btemp+8)^0,f,c
 20211  0150DE  503D               	movf	(btemp+11)^0,w,c
 20212  0150E0  223B               	addwfc	(btemp+9)^0,f,c
 20213  0150E2  503B               	movf	(btemp+9)^0,w,c
 20214  0150E4  E104               	bnz	u11660
 20215  0150E6  0E05               	movlw	5
 20216  0150E8  5C3A               	subwf	(btemp+8)^0,w,c
 20217  0150EA  A0D8               	btfss	status,0,c
 20218  0150EC  D002               	goto	l10697
 20219  0150EE                     u11660:
 20220                           
 20221                           ;stkvar	_atoi$4907 @ sp[(-9)+4]
 20222  0150EE  0EFB               	movlw	-5
 20223  0150F0  6AE3               	clrf	plusw1,c
 20224  0150F2                     l10697:
 20225                           
 20226                           ;stkvar	_atoi$4907 @ sp[(-9)+4]
 20227  0150F2  0EFB               	movlw	-5
 20228  0150F4  50E3               	movf	plusw1,w,c
 20229  0150F6  6E3C               	movwf	(btemp+10)^0,c
 20230  0150F8  6A3D               	clrf	(btemp+11)^0,c
 20231                           
 20232                           ;stkvar	_atoi$4906 @ sp[(-9)+2]
 20233  0150FA  0EF9               	movlw	-7
 20234  0150FC  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20235  015102  0EFA               	movlw	-6
 20236  015104  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20237                           
 20238                           ;stkvar	_atoi$4906 @ sp[(-9)+2]
 20239  01510A  0EF9               	movlw	-7
 20240  01510C  006F FF8C  F032    	movff	plusw1,btemp
 20241  015112  0EFA               	movlw	-6
 20242  015114  50E3               	movf	plusw1,w,c
 20243  015116  1032               	iorwf	btemp^0,w,c
 20244  015118  B4D8               	btfsc	status,2,c
 20245  01511A  D01F               	goto	l10707
 20246  01511C  D79F               	goto	l10687
 20247  01511E                     l10703:
 20248  01511E  0E01               	movlw	1
 20249  015120  6E3C               	movwf	(btemp+10)^0,c
 20250  015122  0E00               	movlw	0
 20251  015124  6E3D               	movwf	(btemp+11)^0,c
 20252                           
 20253                           ;stkvar	_neg @ sp[(-9)+7]
 20254  015126  0EFE               	movlw	-2
 20255  015128  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20256  01512E  0EFF               	movlw	-1
 20257  015130  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20258  015136                     l10705:
 20259                           
 20260                           ;stkvar	_s @ sp[(-9)+-2]
 20261  015136  0EF5               	movlw	-11
 20262  015138  50E3               	movf	plusw1,w,c
 20263  01513A  0F01               	addlw	1
 20264  01513C  6E32               	movwf	btemp^0,c
 20265  01513E  0EF5               	movlw	-11
 20266  015140  0060  F0CB  FFE3   	movff	btemp,plusw1
 20267  015146  6A32               	clrf	btemp^0,c
 20268  015148  0EF6               	movlw	-10
 20269  01514A  50E3               	movf	plusw1,w,c
 20270  01514C  2032               	addwfc	btemp^0,w,c
 20271  01514E  6E32               	movwf	btemp^0,c
 20272  015150  0EF6               	movlw	-10
 20273  015152  0060  F0CB  FFE3   	movff	btemp,plusw1
 20274  015158  D053               	goto	l10713
 20275  01515A                     l10707:
 20276                           
 20277                           ;stkvar	_s @ sp[(-9)+-2]
 20278  01515A  50E1               	movf	fsr1l,w,c
 20279  01515C  0FF5               	addlw	-11
 20280  01515E  6ED9               	movwf	fsr2l,c
 20281  015160  50E2               	movf	fsr1h,w,c
 20282  015162  6EDA               	movwf	fsr2h,c
 20283  015164  0EFF               	movlw	255
 20284  015166  22DA               	addwfc	fsr2h,f,c
 20285  015168  006F FF7B FFF6     	movff	postinc2,tblptrl
 20286  01516E  006F FF77 FFF7     	movff	postdec2,tblptrh
 20287  015174                     	if	0	;tblptru may be non-zero
 20288  015174                     	endif
 20289  015174                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20290  015174  0E00               	movlw	low (__mediumconst shr (0+16))
 20291  015176  6EF8               	movwf	tblptru,c
 20292  015178                     	endif
 20293  015178  0008               	tblrd		*
 20294  01517A  50F5               	movf	tablat,w,c
 20295  01517C  6E3C               	movwf	(btemp+10)^0,c
 20296  01517E  6A3D               	clrf	(btemp+11)^0,c
 20297                           
 20298                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 20299                           ; Switch size 1, requested type "simple"
 20300                           ; Number of cases is 1, Range of values is 0 to 0
 20301                           ; switch strategies available:
 20302                           ; Name         Instructions Cycles
 20303                           ; simple_byte            4     3 (average)
 20304                           ;	Chosen strategy is simple_byte
 20305  015180  503D               	movf	(btemp+11)^0,w,c
 20306  015182  0A00               	xorlw	0	; case 0
 20307  015184  A4D8               	btfss	status,2,c
 20308  015186  D03C               	goto	l10713
 20309                           
 20310                           ; Switch size 1, requested type "simple"
 20311                           ; Number of cases is 2, Range of values is 43 to 45
 20312                           ; switch strategies available:
 20313                           ; Name         Instructions Cycles
 20314                           ; simple_byte            7     4 (average)
 20315                           ;	Chosen strategy is simple_byte
 20316  015188  503C               	movf	(btemp+10)^0,w,c
 20317  01518A  0A2B               	xorlw	43	; case 43
 20318  01518C  B4D8               	btfsc	status,2,c
 20319  01518E  D7D3               	goto	l10705
 20320  015190  0A06               	xorlw	6	; case 45
 20321  015192  B4D8               	btfsc	status,2,c
 20322  015194  D7C4               	goto	l10703
 20323  015196  D034               	goto	l10713
 20324  015198                     l10709:
 20325                           
 20326                           ;stkvar	_n @ sp[(-9)+5]
 20327  015198  0EFC               	movlw	-4
 20328  01519A  006F FF8C  F03C    	movff	plusw1,btemp+10
 20329  0151A0  0EFD               	movlw	-3
 20330  0151A2  006F FF8C  F03D    	movff	plusw1,btemp+11
 20331  0151A8  0E0A               	movlw	10
 20332  0151AA  023C               	mulwf	(btemp+10)^0,c
 20333  0151AC  006F FFCC  F03A    	movff	prodl,btemp+8
 20334  0151B2  006F FFD0  F03B    	movff	prodh,btemp+9
 20335  0151B8  023D               	mulwf	(btemp+11)^0,c
 20336  0151BA  50F3               	movf	prodl,w,c
 20337  0151BC  263B               	addwf	(btemp+9)^0,f,c
 20338                           
 20339                           ;stkvar	_s @ sp[(-9)+-2]
 20340  0151BE  50E1               	movf	fsr1l,w,c
 20341  0151C0  0FF5               	addlw	-11
 20342  0151C2  6ED9               	movwf	fsr2l,c
 20343  0151C4  50E2               	movf	fsr1h,w,c
 20344  0151C6  6EDA               	movwf	fsr2h,c
 20345  0151C8  0EFF               	movlw	255
 20346  0151CA  22DA               	addwfc	fsr2h,f,c
 20347  0151CC  006F FF7B FFF6     	movff	postinc2,tblptrl
 20348  0151D2  006F FF77 FFF7     	movff	postdec2,tblptrh
 20349  0151D8                     	if	0	;tblptru may be non-zero
 20350  0151D8                     	endif
 20351  0151D8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20352  0151D8  0E00               	movlw	low (__mediumconst shr (0+16))
 20353  0151DA  6EF8               	movwf	tblptru,c
 20354  0151DC                     	endif
 20355  0151DC  0008               	tblrd		*
 20356  0151DE  50F5               	movf	tablat,w,c
 20357  0151E0  5E3A               	subwf	(btemp+8)^0,f,c
 20358  0151E2  0E00               	movlw	0
 20359  0151E4  5A3B               	subwfb	(btemp+9)^0,f,c
 20360  0151E6  0E30               	movlw	48
 20361  0151E8  263A               	addwf	(btemp+8)^0,f,c
 20362  0151EA  0E00               	movlw	0
 20363  0151EC  223B               	addwfc	(btemp+9)^0,f,c
 20364                           
 20365                           ;stkvar	_n @ sp[(-9)+5]
 20366  0151EE  0EFC               	movlw	-4
 20367  0151F0  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 20368  0151F6  0EFD               	movlw	-3
 20369  0151F8  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 20370  0151FE  D79B               	goto	l10705
 20371  015200                     l10713:
 20372  015200  0ED0               	movlw	208
 20373  015202  6E3C               	movwf	(btemp+10)^0,c
 20374  015204  0EFF               	movlw	255
 20375  015206  6E3D               	movwf	(btemp+11)^0,c
 20376                           
 20377                           ;stkvar	_s @ sp[(-9)+-2]
 20378  015208  50E1               	movf	fsr1l,w,c
 20379  01520A  0FF5               	addlw	-11
 20380  01520C  6ED9               	movwf	fsr2l,c
 20381  01520E  50E2               	movf	fsr1h,w,c
 20382  015210  6EDA               	movwf	fsr2h,c
 20383  015212  0EFF               	movlw	255
 20384  015214  22DA               	addwfc	fsr2h,f,c
 20385  015216  006F FF7B FFF6     	movff	postinc2,tblptrl
 20386  01521C  006F FF77 FFF7     	movff	postdec2,tblptrh
 20387  015222                     	if	0	;tblptru may be non-zero
 20388  015222                     	endif
 20389  015222                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20390  015222  0E00               	movlw	low (__mediumconst shr (0+16))
 20391  015224  6EF8               	movwf	tblptru,c
 20392  015226                     	endif
 20393  015226  0008               	tblrd		*
 20394  015228  50F5               	movf	tablat,w,c
 20395  01522A  6E3A               	movwf	(btemp+8)^0,c
 20396  01522C  6A3B               	clrf	(btemp+9)^0,c
 20397  01522E  503C               	movf	(btemp+10)^0,w,c
 20398  015230  263A               	addwf	(btemp+8)^0,f,c
 20399  015232  503D               	movf	(btemp+11)^0,w,c
 20400  015234  223B               	addwfc	(btemp+9)^0,f,c
 20401  015236  503B               	movf	(btemp+9)^0,w,c
 20402  015238  E106               	bnz	u11680
 20403  01523A  0E0A               	movlw	10
 20404  01523C  5C3A               	subwf	(btemp+8)^0,w,c
 20405  01523E  B0D8               	btfsc	status,0,c
 20406  015240  D002               	goto	u11680
 20407  015242  0E01               	movlw	1
 20408  015244  D001               	goto	u11690
 20409  015246                     u11680:
 20410  015246  0E00               	movlw	0
 20411  015248                     u11690:
 20412  015248  6E3C               	movwf	(btemp+10)^0,c
 20413  01524A  6A3D               	clrf	(btemp+11)^0,c
 20414                           
 20415                           ;stkvar	_atoi$4908 @ sp[(-9)+0]
 20416  01524C  0EF7               	movlw	-9
 20417  01524E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20418  015254  0EF8               	movlw	-8
 20419  015256  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20420                           
 20421                           ;stkvar	_atoi$4908 @ sp[(-9)+0]
 20422  01525C  0EF7               	movlw	-9
 20423  01525E  006F FF8C  F032    	movff	plusw1,btemp
 20424  015264  0EF8               	movlw	-8
 20425  015266  50E3               	movf	plusw1,w,c
 20426  015268  1032               	iorwf	btemp^0,w,c
 20427  01526A  A4D8               	btfss	status,2,c
 20428  01526C  D795               	goto	l10709
 20429                           
 20430                           ;stkvar	_neg @ sp[(-9)+7]
 20431  01526E  0EFE               	movlw	-2
 20432  015270  006F FF8C  F032    	movff	plusw1,btemp
 20433  015276  0EFF               	movlw	-1
 20434  015278  50E3               	movf	plusw1,w,c
 20435  01527A  1032               	iorwf	btemp^0,w,c
 20436  01527C  A4D8               	btfss	status,2,c
 20437  01527E  D00E               	goto	l10723
 20438                           
 20439                           ;stkvar	_n @ sp[(-9)+5]
 20440  015280  0EFC               	movlw	-4
 20441  015282  006F FF8C  F032    	movff	plusw1,btemp
 20442  015288  1E32               	comf	btemp^0,f,c
 20443  01528A  0EFD               	movlw	-3
 20444  01528C  006F FF8C  F033    	movff	plusw1,btemp+1
 20445  015292  1E33               	comf	(btemp+1)^0,f,c
 20446  015294  2A32               	incf	btemp^0,f,c
 20447  015296  B4D8               	btfsc	status,2,c
 20448  015298  2A33               	incf	(btemp+1)^0,f,c
 20449  01529A  D008               	goto	l2762
 20450  01529C                     l10723:
 20451                           
 20452                           ;stkvar	_n @ sp[(-9)+5]
 20453  01529C  0EFC               	movlw	-4
 20454  01529E  006F FF8C  F032    	movff	plusw1,btemp
 20455  0152A4  0EFD               	movlw	-3
 20456  0152A6  006F FF8C  F033    	movff	plusw1,btemp+1
 20457  0152AC                     l2762:
 20458                           
 20459                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 20460  0152AC  0EF5               	movlw	245
 20461  0152AE  26E1               	addwf	fsr1l,f,c
 20462  0152B0  0EFF               	movlw	255
 20463  0152B2  22E2               	addwfc	fsr1h,f,c
 20464  0152B4  0012               	return		;funcret
 20465  0152B6                     __end_of_atoi:
 20466                           	opt callstack 0
 20467                           
 20468 ;; *************** function _isspace *****************
 20469 ;; Defined at:
 20470 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 20471 ;; Parameters:    Size  Location     Type
 20472 ;;  c               2  [STACK] int 
 20473 ;; Auto vars:     Size  Location     Type
 20474 ;;		None
 20475 ;; Return value:  Size  Location     Type
 20476 ;;                  2  [STACK] int 
 20477 ;; Registers used:
 20478 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 20479 ;; Tracked objects:
 20480 ;;		On entry : 0/0
 20481 ;;		On exit  : 0/0
 20482 ;;		Unchanged: 0/0
 20483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20488 ;;Total ram usage:        0 bytes
 20489 ;; Hardware stack levels used:    1
 20490 ;; Hardware stack levels required when called:    6
 20491 ;; This function calls:
 20492 ;;		Nothing
 20493 ;; This function is called by:
 20494 ;;		_atoi
 20495 ;; This function uses a reentrant model
 20496 ;;
 20497                           
 20498                           	psect	text73
 20499  017A28                     __ptext73:
 20500                           	opt callstack 0
 20501  017A28                     _isspace:
 20502                           	opt callstack 0
 20503                           
 20504                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20505  017A28  52E6               	movf	postinc1,f,c
 20506                           
 20507                           ;stkvar	_isspace$4946 @ sp[(-1)+0]
 20508                           
 20509                           ;incstack = 0
 20510  017A2A  0EFF               	movlw	-1
 20511  017A2C  6AE3               	clrf	plusw1,c
 20512  017A2E  2AE3               	incf	plusw1,f,c
 20513                           
 20514                           ;stkvar	_c @ sp[(-1)+-2]
 20515  017A30  0EFD               	movlw	-3
 20516  017A32  006F FF8C  F032    	movff	plusw1,btemp
 20517  017A38  0E20               	movlw	32
 20518  017A3A  1832               	xorwf	btemp^0,w,c
 20519  017A3C  E104               	bnz	u10650
 20520  017A3E  0EFE               	movlw	-2
 20521  017A40  50E3               	movf	plusw1,w,c
 20522  017A42  B4D8               	btfsc	status,2,c
 20523  017A44  D012               	goto	l10173
 20524  017A46                     u10650:
 20525                           
 20526                           ;stkvar	_c @ sp[(-1)+-2]
 20527  017A46  0EFD               	movlw	-3
 20528  017A48  50E3               	movf	plusw1,w,c
 20529  017A4A  0FF7               	addlw	247
 20530  017A4C  6E3C               	movwf	(btemp+10)^0,c
 20531  017A4E  0EFE               	movlw	-2
 20532  017A50  006F FF8C  F03D    	movff	plusw1,btemp+11
 20533  017A56  0EFF               	movlw	255
 20534  017A58  223D               	addwfc	(btemp+11)^0,f,c
 20535  017A5A  503D               	movf	(btemp+11)^0,w,c
 20536  017A5C  E104               	bnz	u10660
 20537  017A5E  0E05               	movlw	5
 20538  017A60  5C3C               	subwf	(btemp+10)^0,w,c
 20539  017A62  A0D8               	btfss	status,0,c
 20540  017A64  D002               	goto	l10173
 20541  017A66                     u10660:
 20542                           
 20543                           ;stkvar	_isspace$4946 @ sp[(-1)+0]
 20544  017A66  0EFF               	movlw	-1
 20545  017A68  6AE3               	clrf	plusw1,c
 20546  017A6A                     l10173:
 20547                           
 20548                           ;stkvar	_isspace$4946 @ sp[(-1)+0]
 20549  017A6A  0EFF               	movlw	-1
 20550  017A6C  50E3               	movf	plusw1,w,c
 20551  017A6E  6E32               	movwf	btemp^0,c
 20552  017A70  6A33               	clrf	(btemp+1)^0,c
 20553                           
 20554                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 20555  017A72  52E5               	movf	postdec1,f,c
 20556  017A74  52E5               	movf	postdec1,f,c
 20557  017A76  52E5               	movf	postdec1,f,c
 20558  017A78  0012               	return		;funcret
 20559  017A7A                     __end_of_isspace:
 20560                           	opt callstack 0
 20561                           
 20562 ;; *************** function _isdigit *****************
 20563 ;; Defined at:
 20564 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 20565 ;; Parameters:    Size  Location     Type
 20566 ;;  c               2  [STACK] int 
 20567 ;; Auto vars:     Size  Location     Type
 20568 ;;		None
 20569 ;; Return value:  Size  Location     Type
 20570 ;;                  2  [STACK] int 
 20571 ;; Registers used:
 20572 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 20573 ;; Tracked objects:
 20574 ;;		On entry : 0/0
 20575 ;;		On exit  : 0/0
 20576 ;;		Unchanged: 0/0
 20577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20582 ;;Total ram usage:        0 bytes
 20583 ;; Hardware stack levels used:    1
 20584 ;; Hardware stack levels required when called:    6
 20585 ;; This function calls:
 20586 ;;		Nothing
 20587 ;; This function is called by:
 20588 ;;		_vfpfcnvrt
 20589 ;;		_atoi
 20590 ;; This function uses a reentrant model
 20591 ;;
 20592                           
 20593                           	psect	text74
 20594  017ECE                     __ptext74:
 20595                           	opt callstack 0
 20596  017ECE                     _isdigit:
 20597                           	opt callstack 18
 20598                           
 20599                           ;stkvar	_c @ sp[(0)+-2]
 20600                           
 20601                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20602                           ;incstack = 0
 20603  017ECE  0EFE               	movlw	-2
 20604  017ED0  50E3               	movf	plusw1,w,c
 20605  017ED2  0FD0               	addlw	208
 20606  017ED4  6E3C               	movwf	(btemp+10)^0,c
 20607  017ED6  0EFF               	movlw	-1
 20608  017ED8  006F FF8C  F03D    	movff	plusw1,btemp+11
 20609  017EDE  0EFF               	movlw	255
 20610  017EE0  223D               	addwfc	(btemp+11)^0,f,c
 20611  017EE2  503D               	movf	(btemp+11)^0,w,c
 20612  017EE4  E106               	bnz	u9610
 20613  017EE6  0E0A               	movlw	10
 20614  017EE8  5C3C               	subwf	(btemp+10)^0,w,c
 20615  017EEA  B0D8               	btfsc	status,0,c
 20616  017EEC  D002               	goto	u9610
 20617  017EEE  0E01               	movlw	1
 20618  017EF0  D001               	goto	u9620
 20619  017EF2                     u9610:
 20620  017EF2  0E00               	movlw	0
 20621  017EF4                     u9620:
 20622  017EF4  6E32               	movwf	btemp^0,c
 20623  017EF6  6A33               	clrf	(btemp+1)^0,c
 20624                           
 20625                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 20626  017EF8  52E5               	movf	postdec1,f,c
 20627  017EFA  52E5               	movf	postdec1,f,c
 20628  017EFC  0012               	return		;funcret
 20629  017EFE                     __end_of_isdigit:
 20630                           	opt callstack 0
 20631                           
 20632 ;; *************** function _set_vterm *****************
 20633 ;; Defined at:
 20634 ;;		line 104 in file "mconfig.c"
 20635 ;; Parameters:    Size  Location     Type
 20636 ;;  vterm           1  [STACK] const unsigned char 
 20637 ;; Auto vars:     Size  Location     Type
 20638 ;;		None
 20639 ;; Return value:  Size  Location     Type
 20640 ;;                  1  [STACK] unsigned char 
 20641 ;; Registers used:
 20642 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+11
 20643 ;; Tracked objects:
 20644 ;;		On entry : 0/1
 20645 ;;		On exit  : 3F/5
 20646 ;;		Unchanged: 0/0
 20647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20651 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20652 ;;Total ram usage:        0 bytes
 20653 ;; Hardware stack levels used:    1
 20654 ;; Hardware stack levels required when called:    6
 20655 ;; This function calls:
 20656 ;;		Nothing
 20657 ;; This function is called by:
 20658 ;;		_main
 20659 ;;		_check_help
 20660 ;; This function uses a reentrant model
 20661 ;;
 20662                           
 20663                           	psect	text75
 20664  018484                     __ptext75:
 20665                           	opt callstack 0
 20666  018484                     _set_vterm:
 20667                           	opt callstack 24
 20668                           
 20669                           ;mconfig.c: 104: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 105: {;mconfig.c: 106
      +                          :  D.vterm = vterm & 0x03;
 20670                           ;stkvar	_vterm @ sp[(0)+-1]
 20671                           
 20672                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20673                           ;incstack = 0
 20674  018484  0EFF               	movlw	-1
 20675  018486  006F FF8C  F03D    	movff	plusw1,btemp+11
 20676  01848C  0E03               	movlw	3
 20677  01848E  163D               	andwf	(btemp+11)^0,f,c
 20678  018490  0105               	movlb	5	; () banked
 20679  018492  51D8               	movf	(_D+216)& (0+255),w,b
 20680  018494  183D               	xorwf	(btemp+11)^0,w,c
 20681  018496  0BFE               	andlw	-2
 20682  018498  183D               	xorwf	(btemp+11)^0,w,c
 20683  01849A  6FD8               	movwf	(_D+216)& (0+255),b
 20684                           
 20685                           ; BSR set to: 5
 20686                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 20687  01849C  52E5               	movf	postdec1,f,c
 20688  01849E  0012               	return		;funcret
 20689  0184A0                     __end_of_set_vterm:
 20690                           	opt callstack 0
 20691                           
 20692 ;; *************** function _set_temp_display_help *****************
 20693 ;; Defined at:
 20694 ;;		line 208 in file "mconfig.c"
 20695 ;; Parameters:    Size  Location     Type
 20696 ;;  new_response    1  [STACK] const enum E16501
 20697 ;; Auto vars:     Size  Location     Type
 20698 ;;		None
 20699 ;; Return value:  Size  Location     Type
 20700 ;;                  1  [STACK] enum E16501
 20701 ;; Registers used:
 20702 ;;		wreg, fsr1l, fsr1h
 20703 ;; Tracked objects:
 20704 ;;		On entry : 0/5
 20705 ;;		On exit  : 3F/1
 20706 ;;		Unchanged: 0/0
 20707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20711 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20712 ;;Total ram usage:        0 bytes
 20713 ;; Hardware stack levels used:    1
 20714 ;; Hardware stack levels required when called:    6
 20715 ;; This function calls:
 20716 ;;		Nothing
 20717 ;; This function is called by:
 20718 ;;		_check_help
 20719 ;; This function uses a reentrant model
 20720 ;;
 20721                           
 20722                           	psect	text76
 20723  01857E                     __ptext76:
 20724                           	opt callstack 0
 20725  01857E                     _set_temp_display_help:
 20726                           	opt callstack 23
 20727                           
 20728                           ;mconfig.c: 208: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 209: {;mconfig.c: 210:  static D_CODES old_info;;mconfig.c: 212:  old_info = V.respon
      +                          se.help_temp;
 20729                           
 20730                           ; BSR set to: 5
 20731                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20732                           ;incstack = 0
 20733  01857E  0101               	movlb	1	; () banked
 20734  018580  51A4               	movf	(_V+164)& (0+255),w,b	;volatile
 20735                           
 20736                           ; BSR set to: 1
 20737                           ;mconfig.c: 213:  V.response.help_temp = new_response_info;
 20738                           ;stkvar	_new_response_info @ sp[(0)+-1]
 20739  018582  0EFF               	movlw	-1
 20740  018584  006F FF8C  F1A4    	movff	plusw1,_V+164	;volatile
 20741                           
 20742                           ; BSR set to: 1
 20743                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 20744  01858A  52E5               	movf	postdec1,f,c
 20745  01858C  0012               	return		;funcret
 20746  01858E                     __end_of_set_temp_display_help:
 20747                           	opt callstack 0
 20748                           
 20749 ;; *************** function _set_display_info *****************
 20750 ;; Defined at:
 20751 ;;		line 197 in file "mconfig.c"
 20752 ;; Parameters:    Size  Location     Type
 20753 ;;  new_response    1  [STACK] const enum E16501
 20754 ;; Auto vars:     Size  Location     Type
 20755 ;;		None
 20756 ;; Return value:  Size  Location     Type
 20757 ;;                  1  [STACK] enum E16986
 20758 ;; Registers used:
 20759 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 20760 ;; Tracked objects:
 20761 ;;		On entry : 0/39
 20762 ;;		On exit  : 0/0
 20763 ;;		Unchanged: 0/0
 20764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20768 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20769 ;;Total ram usage:        0 bytes
 20770 ;; Hardware stack levels used:    1
 20771 ;; Hardware stack levels required when called:    7
 20772 ;; This function calls:
 20773 ;;		_TimerDone
 20774 ;; This function is called by:
 20775 ;;		_main
 20776 ;;		_check_help
 20777 ;; This function uses a reentrant model
 20778 ;;
 20779                           
 20780                           	psect	text77
 20781  01840E                     __ptext77:
 20782                           	opt callstack 0
 20783  01840E                     _set_display_info:
 20784                           	opt callstack 23
 20785                           
 20786                           ;mconfig.c: 197: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 19
      +                          8: {;mconfig.c: 199:  static D_CODES old_info = DIS_STR;;mconfig.c: 201:  if (TimerDone(
      +                          TMR_INFO)) {
 20787                           
 20788                           ; BSR set to: 1
 20789                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20790                           ;incstack = 0
 20791  01840E  0E07               	movlw	7
 20792  018410  6EE6               	movwf	postinc1,c
 20793  018412  EC81  F0C1         	call	_TimerDone	;wreg free
 20794  018416  5032               	movf	btemp^0,w,c
 20795  018418  B4D8               	btfsc	status,2,c
 20796  01841A  D006               	goto	l1608
 20797                           
 20798                           ;mconfig.c: 202:   old_info = V.response.info;
 20799  01841C  0101               	movlb	1	; () banked
 20800  01841E  51A3               	movf	(_V+163)& (0+255),w,b	;volatile
 20801                           
 20802                           ; BSR set to: 1
 20803                           ;mconfig.c: 203:   V.response.info = new_response_info;
 20804                           ;stkvar	_new_response_info @ sp[(0)+-1]
 20805  018420  0EFF               	movlw	-1
 20806  018422  006F FF8C  F1A3    	movff	plusw1,_V+163	;volatile
 20807  018428                     l1608:
 20808                           
 20809                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 20810  018428  52E5               	movf	postdec1,f,c
 20811  01842A  0012               	return		;funcret
 20812  01842C                     __end_of_set_display_info:
 20813                           	opt callstack 0
 20814                           
 20815 ;; *************** function _mode_lamp_dim *****************
 20816 ;; Defined at:
 20817 ;;		line 13 in file "mconfig.c"
 20818 ;; Parameters:    Size  Location     Type
 20819 ;;  level           2  [STACK] const unsigned short 
 20820 ;; Auto vars:     Size  Location     Type
 20821 ;;		None
 20822 ;; Return value:  Size  Location     Type
 20823 ;;                  1  [STACK] void 
 20824 ;; Registers used:
 20825 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 20826 ;; Tracked objects:
 20827 ;;		On entry : 0/1
 20828 ;;		On exit  : 0/0
 20829 ;;		Unchanged: 0/0
 20830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20834 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20835 ;;Total ram usage:        0 bytes
 20836 ;; Hardware stack levels used:    1
 20837 ;; Hardware stack levels required when called:    7
 20838 ;; This function calls:
 20839 ;;		_PWM8_LoadDutyValue
 20840 ;; This function is called by:
 20841 ;;		_main
 20842 ;;		_check_help
 20843 ;; This function uses a reentrant model
 20844 ;;
 20845                           
 20846                           	psect	text78
 20847  0184D6                     __ptext78:
 20848                           	opt callstack 0
 20849  0184D6                     _mode_lamp_dim:
 20850                           	opt callstack 23
 20851                           
 20852                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 20853                           ;stkvar	_level @ sp[(0)+-2]
 20854                           
 20855                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20856                           ;incstack = 0
 20857  0184D6  0EFE               	movlw	-2
 20858  0184D8  006F FF8F FFE6     	movff	plusw1,postinc1
 20859  0184DE  006F FF8F FFE6     	movff	plusw1,postinc1
 20860  0184E4  EC32  F0BE         	call	_PWM8_LoadDutyValue	;wreg free
 20861                           
 20862                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 20863  0184E8  52E5               	movf	postdec1,f,c
 20864  0184EA  52E5               	movf	postdec1,f,c
 20865  0184EC  0012               	return		;funcret
 20866  0184EE                     __end_of_mode_lamp_dim:
 20867                           	opt callstack 0
 20868                           
 20869 ;; *************** function _mode_lamp_bright *****************
 20870 ;; Defined at:
 20871 ;;		line 18 in file "mconfig.c"
 20872 ;; Parameters:    Size  Location     Type
 20873 ;;		None
 20874 ;; Auto vars:     Size  Location     Type
 20875 ;;		None
 20876 ;; Return value:  Size  Location     Type
 20877 ;;                  1  [STACK] void 
 20878 ;; Registers used:
 20879 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 20880 ;; Tracked objects:
 20881 ;;		On entry : 0/1
 20882 ;;		On exit  : 0/0
 20883 ;;		Unchanged: 0/0
 20884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20888 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20889 ;;Total ram usage:        0 bytes
 20890 ;; Hardware stack levels used:    1
 20891 ;; Hardware stack levels required when called:    7
 20892 ;; This function calls:
 20893 ;;		_PWM8_LoadDutyValue
 20894 ;; This function is called by:
 20895 ;;		_check_help
 20896 ;; This function uses a reentrant model
 20897 ;;
 20898                           
 20899                           	psect	text79
 20900  01859C                     __ptext79:
 20901                           	opt callstack 0
 20902  01859C                     _mode_lamp_bright:
 20903                           	opt callstack 22
 20904                           
 20905                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 20906                           
 20907                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20908                           ;incstack = 0
 20909  01859C  0E2C               	movlw	44
 20910  01859E  6EE6               	movwf	postinc1,c
 20911  0185A0  0E01               	movlw	1
 20912  0185A2  6EE6               	movwf	postinc1,c
 20913  0185A4  EC32  F0BE         	call	_PWM8_LoadDutyValue	;wreg free
 20914                           
 20915                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 20916  0185A8  0012               	return		;funcret
 20917  0185AA                     __end_of_mode_lamp_bright:
 20918                           	opt callstack 0
 20919                           
 20920 ;; *************** function _PWM8_LoadDutyValue *****************
 20921 ;; Defined at:
 20922 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 20923 ;; Parameters:    Size  Location     Type
 20924 ;;  dutyValue       2  [STACK] unsigned short 
 20925 ;; Auto vars:     Size  Location     Type
 20926 ;;		None
 20927 ;; Return value:  Size  Location     Type
 20928 ;;                  1  [STACK] void 
 20929 ;; Registers used:
 20930 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 20931 ;; Tracked objects:
 20932 ;;		On entry : 0/1
 20933 ;;		On exit  : 0/0
 20934 ;;		Unchanged: 0/0
 20935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20940 ;;Total ram usage:        0 bytes
 20941 ;; Hardware stack levels used:    1
 20942 ;; Hardware stack levels required when called:    6
 20943 ;; This function calls:
 20944 ;;		Nothing
 20945 ;; This function is called by:
 20946 ;;		_mode_lamp_dim
 20947 ;;		_mode_lamp_bright
 20948 ;; This function uses a reentrant model
 20949 ;;
 20950                           
 20951                           	psect	text80
 20952  017C64                     __ptext80:
 20953                           	opt callstack 0
 20954  017C64                     _PWM8_LoadDutyValue:
 20955                           	opt callstack 23
 20956                           
 20957                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 20958                           ;stkvar	_dutyValue @ sp[(0)+-2]
 20959                           
 20960                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20961                           ;incstack = 0
 20962  017C64  0EFE               	movlw	-2
 20963  017C66  006F FF8C  F03C    	movff	plusw1,btemp+10
 20964  017C6C  0EFF               	movlw	-1
 20965  017C6E  006F FF8C  F03D    	movff	plusw1,btemp+11
 20966  017C74  90D8               	bcf	status,0,c
 20967  017C76  323D               	rrcf	(btemp+11)^0,f,c
 20968  017C78  323C               	rrcf	(btemp+10)^0,f,c
 20969  017C7A  90D8               	bcf	status,0,c
 20970  017C7C  323D               	rrcf	(btemp+11)^0,f,c
 20971  017C7E  323C               	rrcf	(btemp+10)^0,f,c
 20972  017C80  503C               	movf	(btemp+10)^0,w,c
 20973  017C82  6E61               	movwf	97,c	;volatile
 20974                           
 20975                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 20976                           ;stkvar	_dutyValue @ sp[(0)+-2]
 20977  017C84  0EFE               	movlw	-2
 20978  017C86  006F FF8C  F03D    	movff	plusw1,btemp+11
 20979  017C8C  0E03               	movlw	3
 20980  017C8E  163D               	andwf	(btemp+11)^0,f,c
 20981  017C90  0E06               	movlw	6
 20982  017C92  6E32               	movwf	btemp^0,c
 20983  017C94                     u12145:
 20984  017C94  90D8               	bcf	status,0,c
 20985  017C96  363D               	rlcf	(btemp+11)^0,f,c
 20986  017C98  2E32               	decfsz	btemp^0,f,c
 20987  017C9A  D7FC               	goto	u12145
 20988  017C9C  503D               	movf	(btemp+11)^0,w,c
 20989  017C9E  6E60               	movwf	96,c	;volatile
 20990                           
 20991                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 20992  017CA0  52E5               	movf	postdec1,f,c
 20993  017CA2  52E5               	movf	postdec1,f,c
 20994  017CA4  0012               	return		;funcret
 20995  017CA6                     __end_of_PWM8_LoadDutyValue:
 20996                           	opt callstack 0
 20997                           
 20998 ;; *************** function _help_button *****************
 20999 ;; Defined at:
 21000 ;;		line 26 in file "mconfig.c"
 21001 ;; Parameters:    Size  Location     Type
 21002 ;;		None
 21003 ;; Auto vars:     Size  Location     Type
 21004 ;;		None
 21005 ;; Return value:  Size  Location     Type
 21006 ;;                  1  [STACK] _Bool 
 21007 ;; Registers used:
 21008 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 21009 ;; Tracked objects:
 21010 ;;		On entry : 0/1
 21011 ;;		On exit  : 0/0
 21012 ;;		Unchanged: 0/0
 21013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21018 ;;Total ram usage:        0 bytes
 21019 ;; Hardware stack levels used:    1
 21020 ;; Hardware stack levels required when called:    7
 21021 ;; This function calls:
 21022 ;;		_StartTimer
 21023 ;;		_TimerDone
 21024 ;; This function is called by:
 21025 ;;		_check_help
 21026 ;; This function uses a reentrant model
 21027 ;;
 21028                           
 21029                           	psect	text81
 21030  017D62                     __ptext81:
 21031                           	opt callstack 0
 21032  017D62                     _help_button:
 21033                           	opt callstack 22
 21034                           
 21035                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 21036                           
 21037                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21038                           ;incstack = 0
 21039  017D62  B0CB               	btfsc	203,0,c	;volatile
 21040  017D64  D00C               	goto	l1551
 21041                           
 21042                           ;mconfig.c: 29:   V.help = 1;
 21043  017D66  0101               	movlb	1	; () banked
 21044  017D68  859B               	bsf	(_V+155)& (0+255),2,b	;volatile
 21045                           
 21046                           ; BSR set to: 1
 21047                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 21048  017D6A  0E08               	movlw	8
 21049  017D6C  6EE6               	movwf	postinc1,c
 21050  017D6E  EC81  F0C1         	call	_TimerDone	;wreg free
 21051  017D72  5032               	movf	btemp^0,w,c
 21052  017D74  B4D8               	btfsc	status,2,c
 21053  017D76  D003               	goto	l1551
 21054                           
 21055                           ;mconfig.c: 31:    return 1;
 21056  017D78  0E01               	movlw	1
 21057  017D7A  6E32               	movwf	btemp^0,c
 21058  017D7C  0012               	return	
 21059  017D7E                     l1551:
 21060                           
 21061                           ;mconfig.c: 34:  if (!V.help)
 21062  017D7E  0101               	movlb	1	; () banked
 21063  017D80  B59B               	btfsc	(_V+155)& (0+255),2,b	;volatile
 21064  017D82  D008               	goto	l11595
 21065                           
 21066                           ; BSR set to: 1
 21067                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 21068  017D84  0E2C               	movlw	44
 21069  017D86  6EE6               	movwf	postinc1,c
 21070  017D88  0E01               	movlw	1
 21071  017D8A  6EE6               	movwf	postinc1,c
 21072  017D8C  0E08               	movlw	8
 21073  017D8E  6EE6               	movwf	postinc1,c
 21074  017D90  EC93  F0BE         	call	_StartTimer	;wreg free
 21075  017D94                     l11595:
 21076                           
 21077                           ;mconfig.c: 37:  return 0;
 21078  017D94  0E00               	movlw	0
 21079  017D96  6E32               	movwf	btemp^0,c
 21080                           
 21081                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 21082  017D98  0012               	return		;funcret
 21083  017D9A                     __end_of_help_button:
 21084                           	opt callstack 0
 21085                           
 21086 ;; *************** function _TimerDone *****************
 21087 ;; Defined at:
 21088 ;;		line 20 in file "timers.c"
 21089 ;; Parameters:    Size  Location     Type
 21090 ;;  timer           1  [STACK] const unsigned char 
 21091 ;; Auto vars:     Size  Location     Type
 21092 ;;		None
 21093 ;; Return value:  Size  Location     Type
 21094 ;;                  1  [STACK] _Bool 
 21095 ;; Registers used:
 21096 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 21097 ;; Tracked objects:
 21098 ;;		On entry : 0/39
 21099 ;;		On exit  : 0/0
 21100 ;;		Unchanged: 0/0
 21101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21106 ;;Total ram usage:        0 bytes
 21107 ;; Hardware stack levels used:    1
 21108 ;; Hardware stack levels required when called:    6
 21109 ;; This function calls:
 21110 ;;		Nothing
 21111 ;; This function is called by:
 21112 ;;		_main
 21113 ;;		_WaitMs
 21114 ;;		_help_button
 21115 ;;		_check_help
 21116 ;;		_set_display_info
 21117 ;; This function uses a reentrant model
 21118 ;;
 21119                           
 21120                           	psect	text82
 21121  018302                     __ptext82:
 21122                           	opt callstack 0
 21123  018302                     _TimerDone:
 21124                           	opt callstack 23
 21125                           
 21126                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21127                           ;incstack = 0
 21128  018302  0004               	clrwdt		;# 
 21129                           
 21130                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 21131                           ;stkvar	_timer @ sp[(0)+-1]
 21132  018304  0EFF               	movlw	-1
 21133  018306  50E3               	movf	plusw1,w,c
 21134  018308  0D02               	mullw	2
 21135  01830A  50F3               	movf	243,w,c
 21136  01830C  0F89               	addlw	low _tickCount
 21137  01830E  6ED9               	movwf	fsr2l,c
 21138  018310  6ADA               	clrf	fsr2h,c
 21139  018312  50DE               	movf	postinc2,w,c
 21140  018314  10DE               	iorwf	postinc2,w,c
 21141  018316  A4D8               	btfss	status,2,c
 21142  018318  D002               	goto	l11009
 21143                           
 21144                           ;timers.c: 24:   return 1;
 21145  01831A  0E01               	movlw	1
 21146  01831C  D001               	goto	L19
 21147  01831E                     l11009:
 21148                           
 21149                           ;timers.c: 26:  return 0;
 21150  01831E  0E00               	movlw	0
 21151  018320                     L19:
 21152  018320  6E32               	movwf	btemp^0,c
 21153                           
 21154                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 21155  018322  52E5               	movf	postdec1,f,c
 21156  018324  0012               	return		;funcret
 21157  018326                     __end_of_TimerDone:
 21158                           	opt callstack 0
 21159                           
 21160 ;; *************** function _StartTimer *****************
 21161 ;; Defined at:
 21162 ;;		line 12 in file "timers.c"
 21163 ;; Parameters:    Size  Location     Type
 21164 ;;  timer           1  [STACK] const unsigned char 
 21165 ;;  count           2  [STACK] const unsigned short 
 21166 ;; Auto vars:     Size  Location     Type
 21167 ;;		None
 21168 ;; Return value:  Size  Location     Type
 21169 ;;                  1  [STACK] void 
 21170 ;; Registers used:
 21171 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 21172 ;; Tracked objects:
 21173 ;;		On entry : 0/5
 21174 ;;		On exit  : 0/0
 21175 ;;		Unchanged: 0/0
 21176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21181 ;;Total ram usage:        0 bytes
 21182 ;; Hardware stack levels used:    1
 21183 ;; Hardware stack levels required when called:    6
 21184 ;; This function calls:
 21185 ;;		Nothing
 21186 ;; This function is called by:
 21187 ;;		_main
 21188 ;;		_WaitMs
 21189 ;;		_help_button
 21190 ;;		_check_help
 21191 ;; This function uses a reentrant model
 21192 ;;
 21193                           
 21194                           	psect	text83
 21195  017D26                     __ptext83:
 21196                           	opt callstack 0
 21197  017D26                     _StartTimer:
 21198                           	opt callstack 21
 21199                           
 21200                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 21201                           ;stkvar	_count @ sp[(0)+-3]
 21202                           
 21203                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21204                           ;incstack = 0
 21205  017D26  0EFD               	movlw	-3
 21206  017D28  006F FF8C  F03C    	movff	plusw1,btemp+10
 21207  017D2E  0EFE               	movlw	-2
 21208  017D30  006F FF8C  F03D    	movff	plusw1,btemp+11
 21209  017D36  90D8               	bcf	status,0,c
 21210  017D38  343C               	rlcf	(btemp+10)^0,w,c
 21211  017D3A  6E3A               	movwf	(btemp+8)^0,c
 21212  017D3C  343D               	rlcf	(btemp+11)^0,w,c
 21213  017D3E  6E3B               	movwf	(btemp+9)^0,c
 21214                           
 21215                           ;stkvar	_timer @ sp[(0)+-1]
 21216  017D40  0EFF               	movlw	-1
 21217  017D42  50E3               	movf	plusw1,w,c
 21218  017D44  0D02               	mullw	2
 21219  017D46  50F3               	movf	243,w,c
 21220  017D48  0F89               	addlw	low _tickCount
 21221  017D4A  6ED9               	movwf	fsr2l,c
 21222  017D4C  6ADA               	clrf	fsr2h,c
 21223  017D4E  0060  F0EB  FFDE   	movff	btemp+8,postinc2
 21224  017D54  0060  F0EF  FFDD   	movff	btemp+9,postdec2
 21225                           
 21226                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 21227  017D5A  52E5               	movf	postdec1,f,c
 21228  017D5C  52E5               	movf	postdec1,f,c
 21229  017D5E  52E5               	movf	postdec1,f,c
 21230  017D60  0012               	return		;funcret
 21231  017D62                     __end_of_StartTimer:
 21232                           	opt callstack 0
 21233                           
 21234 ;; *************** function _display_info *****************
 21235 ;; Defined at:
 21236 ;;		line 187 in file "mconfig.c"
 21237 ;; Parameters:    Size  Location     Type
 21238 ;;		None
 21239 ;; Auto vars:     Size  Location     Type
 21240 ;;		None
 21241 ;; Return value:  Size  Location     Type
 21242 ;;                  1  [STACK] enum E16501
 21243 ;; Registers used:
 21244 ;;		btemp
 21245 ;; Tracked objects:
 21246 ;;		On entry : 0/1
 21247 ;;		On exit  : 0/0
 21248 ;;		Unchanged: 0/0
 21249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21253 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21254 ;;Total ram usage:        0 bytes
 21255 ;; Hardware stack levels used:    1
 21256 ;; Hardware stack levels required when called:    6
 21257 ;; This function calls:
 21258 ;;		Nothing
 21259 ;; This function is called by:
 21260 ;;		_check_help
 21261 ;; This function uses a reentrant model
 21262 ;;
 21263                           
 21264                           	psect	text84
 21265  018606                     __ptext84:
 21266                           	opt callstack 0
 21267  018606                     _display_info:
 21268                           	opt callstack 23
 21269                           
 21270                           ;mconfig.c: 189:  return V.response.info;
 21271                           
 21272                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21273                           ;incstack = 0
 21274  018606  0060  F68C  F032   	movff	_V+163,btemp	;volatile
 21275                           
 21276                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 21277  01860C  0012               	return		;funcret
 21278  01860E                     __end_of_display_info:
 21279                           	opt callstack 0
 21280                           
 21281 ;; *************** function _display_help *****************
 21282 ;; Defined at:
 21283 ;;		line 192 in file "mconfig.c"
 21284 ;; Parameters:    Size  Location     Type
 21285 ;;		None
 21286 ;; Auto vars:     Size  Location     Type
 21287 ;;		None
 21288 ;; Return value:  Size  Location     Type
 21289 ;;                  1  [STACK] enum E16501
 21290 ;; Registers used:
 21291 ;;		btemp
 21292 ;; Tracked objects:
 21293 ;;		On entry : 3F/1
 21294 ;;		On exit  : 0/0
 21295 ;;		Unchanged: 0/0
 21296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21300 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21301 ;;Total ram usage:        0 bytes
 21302 ;; Hardware stack levels used:    1
 21303 ;; Hardware stack levels required when called:    6
 21304 ;; This function calls:
 21305 ;;		Nothing
 21306 ;; This function is called by:
 21307 ;;		_check_help
 21308 ;; This function uses a reentrant model
 21309 ;;
 21310                           
 21311                           	psect	text85
 21312  01860E                     __ptext85:
 21313                           	opt callstack 0
 21314  01860E                     _display_help:
 21315                           	opt callstack 23
 21316                           
 21317                           ;mconfig.c: 194:  return V.response.help_temp;
 21318                           
 21319                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21320                           ;incstack = 0
 21321  01860E  0060  F690  F032   	movff	_V+164,btemp	;volatile
 21322                           
 21323                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 21324  018614  0012               	return		;funcret
 21325  018616                     __end_of_display_help:
 21326                           	opt callstack 0
 21327                           
 21328 ;; *************** function _check_adc_scan *****************
 21329 ;; Defined at:
 21330 ;;		line 56 in file "daq.c"
 21331 ;; Parameters:    Size  Location     Type
 21332 ;;		None
 21333 ;; Auto vars:     Size  Location     Type
 21334 ;;		None
 21335 ;; Return value:  Size  Location     Type
 21336 ;;                  1  [STACK] _Bool 
 21337 ;; Registers used:
 21338 ;;		btemp
 21339 ;; Tracked objects:
 21340 ;;		On entry : 0/39
 21341 ;;		On exit  : 0/0
 21342 ;;		Unchanged: 0/0
 21343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21347 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21348 ;;Total ram usage:        0 bytes
 21349 ;; Hardware stack levels used:    1
 21350 ;; Hardware stack levels required when called:    6
 21351 ;; This function calls:
 21352 ;;		Nothing
 21353 ;; This function is called by:
 21354 ;;		_main
 21355 ;; This function uses a reentrant model
 21356 ;;
 21357                           
 21358                           	psect	text86
 21359  018616                     __ptext86:
 21360                           	opt callstack 0
 21361  018616                     _check_adc_scan:
 21362                           	opt callstack 24
 21363                           
 21364                           ;daq.c: 58:  return R.done;
 21365                           
 21366                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21367                           ;incstack = 0
 21368  018616  0060  F3B8  F032   	movff	_R+39,btemp	;volatile
 21369                           
 21370                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 21371  01861C  0012               	return		;funcret
 21372  01861E                     __end_of_check_adc_scan:
 21373                           	opt callstack 0
 21374                           
 21375 ;; *************** function _SYSTEM_Initialize *****************
 21376 ;; Defined at:
 21377 ;;		line 50 in file "mcc_generated_files/mcc.c"
 21378 ;; Parameters:    Size  Location     Type
 21379 ;;		None
 21380 ;; Auto vars:     Size  Location     Type
 21381 ;;		None
 21382 ;; Return value:  Size  Location     Type
 21383 ;;                  1  [STACK] void 
 21384 ;; Registers used:
 21385 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 21386 ;; Tracked objects:
 21387 ;;		On entry : 0/0
 21388 ;;		On exit  : 3F/3C
 21389 ;;		Unchanged: 0/0
 21390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21395 ;;Total ram usage:        0 bytes
 21396 ;; Hardware stack levels used:    1
 21397 ;; Hardware stack levels required when called:    8
 21398 ;; This function calls:
 21399 ;;		_ADCC_Initialize
 21400 ;;		_CLKREF_Initialize
 21401 ;;		_DMA1_Initialize
 21402 ;;		_DMA2_Initialize
 21403 ;;		_EXT_INT_Initialize
 21404 ;;		_FVR_Initialize
 21405 ;;		_INTERRUPT_Initialize
 21406 ;;		_OSCILLATOR_Initialize
 21407 ;;		_PIN_MANAGER_Initialize
 21408 ;;		_PMD_Initialize
 21409 ;;		_PWM8_Initialize
 21410 ;;		_SPI1_Initialize
 21411 ;;		_TMR2_Initialize
 21412 ;;		_TMR5_Initialize
 21413 ;;		_TMR6_Initialize
 21414 ;;		_UART1_Initialize
 21415 ;;		_UART2_Initialize
 21416 ;; This function is called by:
 21417 ;;		_main
 21418 ;; This function uses a reentrant model
 21419 ;;
 21420                           
 21421                           	psect	text87
 21422  017B4E                     __ptext87:
 21423                           	opt callstack 0
 21424  017B4E                     _SYSTEM_Initialize:
 21425                           	opt callstack 22
 21426                           
 21427                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 21428                           
 21429                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21430                           ;incstack = 0
 21431  017B4E  EC3C  F0BB         	call	_INTERRUPT_Initialize	;wreg free
 21432                           
 21433                           ; BSR set to: 57
 21434                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 21435  017B52  ECA4  F0C2         	call	_PMD_Initialize	;wreg free
 21436                           
 21437                           ; BSR set to: 57
 21438                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 21439  017B56  EC10  F0B9         	call	_PIN_MANAGER_Initialize	;wreg free
 21440                           
 21441                           ; BSR set to: 58
 21442                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 21443  017B5A  EC99  F0C2         	call	_OSCILLATOR_Initialize	;wreg free
 21444                           
 21445                           ; BSR set to: 57
 21446                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 21447  017B5E  EC0F  F0C3         	call	_FVR_Initialize	;wreg free
 21448                           
 21449                           ; BSR set to: 62
 21450                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 21451  017B62  ECD2  F0BA         	call	_ADCC_Initialize	;wreg free
 21452                           
 21453                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
 21454  017B66  EC77  F0C2         	call	_TMR2_Initialize	;wreg free
 21455                           
 21456                           ; BSR set to: 57
 21457                           ;mcc_generated_files/mcc.c: 59:     PWM8_Initialize();
 21458  017B6A  EC8E  F0C2         	call	_PWM8_Initialize	;wreg free
 21459                           
 21460                           ; BSR set to: 63
 21461                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 21462  017B6E  EC1D  F0BF         	call	_EXT_INT_Initialize	;wreg free
 21463                           
 21464                           ; BSR set to: 57
 21465                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 21466  017B72  ECDA  F0BF         	call	_TMR6_Initialize	;wreg free
 21467                           
 21468                           ;mcc_generated_files/mcc.c: 62:     TMR5_Initialize();
 21469  017B76  ECCA  F0BD         	call	_TMR5_Initialize	;wreg free
 21470                           
 21471                           ;mcc_generated_files/mcc.c: 63:     UART1_Initialize();
 21472  017B7A  ECA1  F0BB         	call	_UART1_Initialize	;wreg free
 21473                           
 21474                           ; BSR set to: 57
 21475                           ;mcc_generated_files/mcc.c: 64:     UART2_Initialize();
 21476  017B7E  EC35  F0BC         	call	_UART2_Initialize	;wreg free
 21477                           
 21478                           ; BSR set to: 57
 21479                           ;mcc_generated_files/mcc.c: 65:     SPI1_Initialize();
 21480  017B82  EC83  F0C2         	call	_SPI1_Initialize	;wreg free
 21481                           
 21482                           ; BSR set to: 61
 21483                           ;mcc_generated_files/mcc.c: 66:     DMA2_Initialize();
 21484  017B86  EC91  F0BC         	call	_DMA2_Initialize	;wreg free
 21485                           
 21486                           ; BSR set to: 59
 21487                           ;mcc_generated_files/mcc.c: 67:     DMA1_Initialize();
 21488  017B8A  EC9D  F0BA         	call	_DMA1_Initialize	;wreg free
 21489                           
 21490                           ; BSR set to: 59
 21491                           ;mcc_generated_files/mcc.c: 68:     CLKREF_Initialize();
 21492  017B8E  ECE5  F0C2         	call	_CLKREF_Initialize	;wreg free
 21493                           
 21494                           ; BSR set to: 60
 21495                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 21496  017B92  0012               	return		;funcret
 21497  017B94                     __end_of_SYSTEM_Initialize:
 21498                           	opt callstack 0
 21499                           
 21500 ;; *************** function _UART2_Initialize *****************
 21501 ;; Defined at:
 21502 ;;		line 78 in file "mcc_generated_files/uart2.c"
 21503 ;; Parameters:    Size  Location     Type
 21504 ;;		None
 21505 ;; Auto vars:     Size  Location     Type
 21506 ;;		None
 21507 ;; Return value:  Size  Location     Type
 21508 ;;                  1  [STACK] void 
 21509 ;; Registers used:
 21510 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 21511 ;; Tracked objects:
 21512 ;;		On entry : 3F/39
 21513 ;;		On exit  : 3F/39
 21514 ;;		Unchanged: 0/0
 21515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21519 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21520 ;;Total ram usage:        0 bytes
 21521 ;; Hardware stack levels used:    1
 21522 ;; Hardware stack levels required when called:    7
 21523 ;; This function calls:
 21524 ;;		_UART2_SetRxInterruptHandler
 21525 ;;		_UART2_SetTxInterruptHandler
 21526 ;; This function is called by:
 21527 ;;		_SYSTEM_Initialize
 21528 ;; This function uses a reentrant model
 21529 ;;
 21530                           
 21531                           	psect	text88
 21532  01786A                     __ptext88:
 21533                           	opt callstack 0
 21534  01786A                     _UART2_Initialize:
 21535                           	opt callstack 22
 21536                           
 21537                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 21538                           
 21539                           ; BSR set to: 60
 21540                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21541                           ;incstack = 0
 21542  01786A  0139               	movlb	57	; () banked
 21543  01786C  9596               	bcf	150,2,b	;volatile
 21544                           
 21545                           ; BSR set to: 57
 21546                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 21547  01786E  0E4A               	movlw	low _UART2_Receive_ISR
 21548  017870  6EE6               	movwf	postinc1,c
 21549  017872  0E84               	movlw	high _UART2_Receive_ISR
 21550  017874  6EE6               	movwf	postinc1,c
 21551  017876  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 21552  017878  6EE6               	movwf	postinc1,c
 21553  01787A  EC69  F0C0         	call	_UART2_SetRxInterruptHandler	;wreg free
 21554                           
 21555                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 21556  01787E  0139               	movlb	57	; () banked
 21557  017880  9796               	bcf	150,3,b	;volatile
 21558                           
 21559                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 21560  017882  0E88               	movlw	low _UART2_Transmit_ISR
 21561  017884  6EE6               	movwf	postinc1,c
 21562  017886  0E7F               	movlw	high _UART2_Transmit_ISR
 21563  017888  6EE6               	movwf	postinc1,c
 21564  01788A  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 21565  01788C  6EE6               	movwf	postinc1,c
 21566  01788E  EC55  F0C0         	call	_UART2_SetTxInterruptHandler	;wreg free
 21567                           
 21568                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 21569  017892  013D               	movlb	61	; () banked
 21570  017894  6BD4               	clrf	212,b	;volatile
 21571                           
 21572                           ; BSR set to: 61
 21573                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 21574  017896  6BD6               	clrf	214,b	;volatile
 21575                           
 21576                           ; BSR set to: 61
 21577                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 21578  017898  6BD8               	clrf	216,b	;volatile
 21579                           
 21580                           ; BSR set to: 61
 21581                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 21582  01789A  0EB0               	movlw	176
 21583  01789C  6FDA               	movwf	218,b	;volatile
 21584                           
 21585                           ; BSR set to: 61
 21586                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 21587  01789E  0E80               	movlw	128
 21588  0178A0  6FDB               	movwf	219,b	;volatile
 21589                           
 21590                           ; BSR set to: 61
 21591                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 21592  0178A2  6BDC               	clrf	220,b	;volatile
 21593                           
 21594                           ; BSR set to: 61
 21595                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 21596  0178A4  0E82               	movlw	130
 21597  0178A6  6FDD               	movwf	221,b	;volatile
 21598                           
 21599                           ; BSR set to: 61
 21600                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 21601  0178A8  0E06               	movlw	6
 21602  0178AA  6FDE               	movwf	222,b	;volatile
 21603                           
 21604                           ; BSR set to: 61
 21605                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 21606  0178AC  6BDF               	clrf	223,b	;volatile
 21607                           
 21608                           ; BSR set to: 61
 21609                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 21610  0178AE  6BE0               	clrf	224,b	;volatile
 21611                           
 21612                           ; BSR set to: 61
 21613                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 21614  0178B0  6BE1               	clrf	225,b	;volatile
 21615                           
 21616                           ; BSR set to: 61
 21617                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 21618  0178B2  6BE2               	clrf	226,b	;volatile
 21619                           
 21620                           ; BSR set to: 61
 21621                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 21622  0178B4  6A2B               	clrf	_uart2TxHead^0,c	;volatile
 21623                           
 21624                           ; BSR set to: 61
 21625                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 21626  0178B6  6A2A               	clrf	_uart2TxTail^0,c	;volatile
 21627                           
 21628                           ; BSR set to: 61
 21629                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 21630  0178B8  0E40               	movlw	64
 21631  0178BA  6E29               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 21632                           
 21633                           ; BSR set to: 61
 21634                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 21635  0178BC  6A28               	clrf	_uart2RxHead^0,c	;volatile
 21636                           
 21637                           ; BSR set to: 61
 21638                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 21639  0178BE  6A27               	clrf	_uart2RxTail^0,c	;volatile
 21640                           
 21641                           ; BSR set to: 61
 21642                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 21643  0178C0  6A26               	clrf	_uart2RxCount^0,c	;volatile
 21644                           
 21645                           ; BSR set to: 61
 21646                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 21647  0178C2  0139               	movlb	57	; () banked
 21648  0178C4  8596               	bsf	150,2,b	;volatile
 21649                           
 21650                           ; BSR set to: 57
 21651                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 21652  0178C6  0012               	return		;funcret
 21653  0178C8                     __end_of_UART2_Initialize:
 21654                           	opt callstack 0
 21655                           
 21656 ;; *************** function _UART2_SetTxInterruptHandler *****************
 21657 ;; Defined at:
 21658 ;;		line 252 in file "mcc_generated_files/uart2.c"
 21659 ;; Parameters:    Size  Location     Type
 21660 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 21661 ;;		 -> UART2_Transmit_ISR(1), 
 21662 ;; Auto vars:     Size  Location     Type
 21663 ;;		None
 21664 ;; Return value:  Size  Location     Type
 21665 ;;                  1  [STACK] void 
 21666 ;; Registers used:
 21667 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 21668 ;; Tracked objects:
 21669 ;;		On entry : 3F/39
 21670 ;;		On exit  : 0/0
 21671 ;;		Unchanged: 0/0
 21672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21677 ;;Total ram usage:        0 bytes
 21678 ;; Hardware stack levels used:    1
 21679 ;; Hardware stack levels required when called:    6
 21680 ;; This function calls:
 21681 ;;		Nothing
 21682 ;; This function is called by:
 21683 ;;		_UART2_Initialize
 21684 ;; This function uses a reentrant model
 21685 ;;
 21686                           
 21687                           	psect	text89
 21688  0180AA                     __ptext89:
 21689                           	opt callstack 0
 21690  0180AA                     _UART2_SetTxInterruptHandler:
 21691                           	opt callstack 22
 21692                           
 21693                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 21694                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 21695                           
 21696                           ; BSR set to: 57
 21697                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21698                           ;incstack = 0
 21699  0180AA  50E1               	movf	fsr1l,w,c
 21700  0180AC  0FFD               	addlw	-3
 21701  0180AE  6ED9               	movwf	fsr2l,c
 21702  0180B0  50E2               	movf	fsr1h,w,c
 21703  0180B2  6EDA               	movwf	fsr2h,c
 21704  0180B4  0EFF               	movlw	255
 21705  0180B6  22DA               	addwfc	fsr2h,f,c
 21706  0180B8  006F FF78  F00D    	movff	postinc2,_UART2_TxInterruptHandler
 21707  0180BE  006F FF78  F00E    	movff	postinc2,_UART2_TxInterruptHandler+1
 21708  0180C4  006F FF74  F00F    	movff	postdec2,_UART2_TxInterruptHandler+2
 21709                           
 21710                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 21711  0180CA  52E5               	movf	postdec1,f,c
 21712  0180CC  52E5               	movf	postdec1,f,c
 21713  0180CE  52E5               	movf	postdec1,f,c
 21714  0180D0  0012               	return		;funcret
 21715  0180D2                     __end_of_UART2_SetTxInterruptHandler:
 21716                           	opt callstack 0
 21717                           
 21718 ;; *************** function _UART2_SetRxInterruptHandler *****************
 21719 ;; Defined at:
 21720 ;;		line 248 in file "mcc_generated_files/uart2.c"
 21721 ;; Parameters:    Size  Location     Type
 21722 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 21723 ;;		 -> UART2_Receive_ISR(1), 
 21724 ;; Auto vars:     Size  Location     Type
 21725 ;;		None
 21726 ;; Return value:  Size  Location     Type
 21727 ;;                  1  [STACK] void 
 21728 ;; Registers used:
 21729 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 21730 ;; Tracked objects:
 21731 ;;		On entry : 3F/39
 21732 ;;		On exit  : 0/0
 21733 ;;		Unchanged: 0/0
 21734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21739 ;;Total ram usage:        0 bytes
 21740 ;; Hardware stack levels used:    1
 21741 ;; Hardware stack levels required when called:    6
 21742 ;; This function calls:
 21743 ;;		Nothing
 21744 ;; This function is called by:
 21745 ;;		_UART2_Initialize
 21746 ;; This function uses a reentrant model
 21747 ;;
 21748                           
 21749                           	psect	text90
 21750  0180D2                     __ptext90:
 21751                           	opt callstack 0
 21752  0180D2                     _UART2_SetRxInterruptHandler:
 21753                           	opt callstack 22
 21754                           
 21755                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 21756                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 21757                           
 21758                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21759                           ;incstack = 0
 21760  0180D2  50E1               	movf	fsr1l,w,c
 21761  0180D4  0FFD               	addlw	-3
 21762  0180D6  6ED9               	movwf	fsr2l,c
 21763  0180D8  50E2               	movf	fsr1h,w,c
 21764  0180DA  6EDA               	movwf	fsr2h,c
 21765  0180DC  0EFF               	movlw	255
 21766  0180DE  22DA               	addwfc	fsr2h,f,c
 21767  0180E0  006F FF78  F010    	movff	postinc2,_UART2_RxInterruptHandler
 21768  0180E6  006F FF78  F011    	movff	postinc2,_UART2_RxInterruptHandler+1
 21769  0180EC  006F FF74  F012    	movff	postdec2,_UART2_RxInterruptHandler+2
 21770                           
 21771                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 21772  0180F2  52E5               	movf	postdec1,f,c
 21773  0180F4  52E5               	movf	postdec1,f,c
 21774  0180F6  52E5               	movf	postdec1,f,c
 21775  0180F8  0012               	return		;funcret
 21776  0180FA                     __end_of_UART2_SetRxInterruptHandler:
 21777                           	opt callstack 0
 21778                           
 21779 ;; *************** function _UART1_Initialize *****************
 21780 ;; Defined at:
 21781 ;;		line 79 in file "mcc_generated_files/uart1.c"
 21782 ;; Parameters:    Size  Location     Type
 21783 ;;		None
 21784 ;; Auto vars:     Size  Location     Type
 21785 ;;		None
 21786 ;; Return value:  Size  Location     Type
 21787 ;;                  1  [STACK] void 
 21788 ;; Registers used:
 21789 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 21790 ;; Tracked objects:
 21791 ;;		On entry : 0/39
 21792 ;;		On exit  : 3F/39
 21793 ;;		Unchanged: 0/0
 21794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21798 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21799 ;;Total ram usage:        0 bytes
 21800 ;; Hardware stack levels used:    1
 21801 ;; Hardware stack levels required when called:    7
 21802 ;; This function calls:
 21803 ;;		_UART1_SetRxInterruptHandler
 21804 ;;		_UART1_SetTxInterruptHandler
 21805 ;; This function is called by:
 21806 ;;		_SYSTEM_Initialize
 21807 ;; This function uses a reentrant model
 21808 ;;
 21809                           
 21810                           	psect	text91
 21811  017742                     __ptext91:
 21812                           	opt callstack 0
 21813  017742                     _UART1_Initialize:
 21814                           	opt callstack 22
 21815                           
 21816                           ;mcc_generated_files/uart1.c: 82:  PIE3bits.U1RXIE = 0;
 21817                           
 21818                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21819                           ;incstack = 0
 21820  017742  0139               	movlb	57	; () banked
 21821  017744  9793               	bcf	147,3,b	;volatile
 21822                           
 21823                           ; BSR set to: 57
 21824                           ;mcc_generated_files/uart1.c: 83:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 21825  017746  0E2C               	movlw	low _UART1_Receive_ISR
 21826  017748  6EE6               	movwf	postinc1,c
 21827  01774A  0E84               	movlw	high _UART1_Receive_ISR
 21828  01774C  6EE6               	movwf	postinc1,c
 21829  01774E  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 21830  017750  6EE6               	movwf	postinc1,c
 21831  017752  EC91  F0C0         	call	_UART1_SetRxInterruptHandler	;wreg free
 21832                           
 21833                           ;mcc_generated_files/uart1.c: 84:  PIE3bits.U1TXIE = 0;
 21834  017756  0139               	movlb	57	; () banked
 21835  017758  9993               	bcf	147,4,b	;volatile
 21836                           
 21837                           ;mcc_generated_files/uart1.c: 85:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 21838  01775A  0E5C               	movlw	low _UART1_Transmit_ISR
 21839  01775C  6EE6               	movwf	postinc1,c
 21840  01775E  0E7F               	movlw	high _UART1_Transmit_ISR
 21841  017760  6EE6               	movwf	postinc1,c
 21842  017762  0E01               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 21843  017764  6EE6               	movwf	postinc1,c
 21844  017766  EC7D  F0C0         	call	_UART1_SetTxInterruptHandler	;wreg free
 21845                           
 21846                           ;mcc_generated_files/uart1.c: 90:  U1P1L = 0x00;
 21847  01776A  013D               	movlb	61	; () banked
 21848  01776C  6BEC               	clrf	236,b	;volatile
 21849                           
 21850                           ; BSR set to: 61
 21851                           ;mcc_generated_files/uart1.c: 93:  U1P1H = 0x00;
 21852  01776E  6BED               	clrf	237,b	;volatile
 21853                           
 21854                           ; BSR set to: 61
 21855                           ;mcc_generated_files/uart1.c: 96:  U1P2L = 0x00;
 21856  017770  6BEE               	clrf	238,b	;volatile
 21857                           
 21858                           ; BSR set to: 61
 21859                           ;mcc_generated_files/uart1.c: 99:  U1P2H = 0x00;
 21860  017772  6BEF               	clrf	239,b	;volatile
 21861                           
 21862                           ; BSR set to: 61
 21863                           ;mcc_generated_files/uart1.c: 102:  U1P3L = 0x00;
 21864  017774  6BF0               	clrf	240,b	;volatile
 21865                           
 21866                           ; BSR set to: 61
 21867                           ;mcc_generated_files/uart1.c: 105:  U1P3H = 0x00;
 21868  017776  6BF1               	clrf	241,b	;volatile
 21869                           
 21870                           ; BSR set to: 61
 21871                           ;mcc_generated_files/uart1.c: 108:  U1CON0 = 0xB0;
 21872  017778  0EB0               	movlw	176
 21873  01777A  6FF2               	movwf	242,b	;volatile
 21874                           
 21875                           ; BSR set to: 61
 21876                           ;mcc_generated_files/uart1.c: 111:  U1CON1 = 0x80;
 21877  01777C  0E80               	movlw	128
 21878  01777E  6FF3               	movwf	243,b	;volatile
 21879                           
 21880                           ; BSR set to: 61
 21881                           ;mcc_generated_files/uart1.c: 114:  U1CON2 = 0x00;
 21882  017780  6BF4               	clrf	244,b	;volatile
 21883                           
 21884                           ; BSR set to: 61
 21885                           ;mcc_generated_files/uart1.c: 117:  U1BRGL = 0x82;
 21886  017782  0E82               	movlw	130
 21887  017784  6FF5               	movwf	245,b	;volatile
 21888                           
 21889                           ; BSR set to: 61
 21890                           ;mcc_generated_files/uart1.c: 120:  U1BRGH = 0x06;
 21891  017786  0E06               	movlw	6
 21892  017788  6FF6               	movwf	246,b	;volatile
 21893                           
 21894                           ; BSR set to: 61
 21895                           ;mcc_generated_files/uart1.c: 123:  U1FIFO = 0x00;
 21896  01778A  6BF7               	clrf	247,b	;volatile
 21897                           
 21898                           ; BSR set to: 61
 21899                           ;mcc_generated_files/uart1.c: 126:  U1UIR = 0x00;
 21900  01778C  6BF8               	clrf	248,b	;volatile
 21901                           
 21902                           ; BSR set to: 61
 21903                           ;mcc_generated_files/uart1.c: 129:  U1ERRIR = 0x00;
 21904  01778E  6BF9               	clrf	249,b	;volatile
 21905                           
 21906                           ; BSR set to: 61
 21907                           ;mcc_generated_files/uart1.c: 132:  U1ERRIE = 0x00;
 21908  017790  6BFA               	clrf	250,b	;volatile
 21909                           
 21910                           ; BSR set to: 61
 21911                           ;mcc_generated_files/uart1.c: 136:  uart1TxHead = 0;
 21912  017792  6A31               	clrf	_uart1TxHead^0,c	;volatile
 21913                           
 21914                           ; BSR set to: 61
 21915                           ;mcc_generated_files/uart1.c: 137:  uart1TxTail = 0;
 21916  017794  6A30               	clrf	_uart1TxTail^0,c	;volatile
 21917                           
 21918                           ; BSR set to: 61
 21919                           ;mcc_generated_files/uart1.c: 138:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 21920  017796  0E40               	movlw	64
 21921  017798  6E2F               	movwf	_uart1TxBufferRemaining^0,c	;volatile
 21922                           
 21923                           ; BSR set to: 61
 21924                           ;mcc_generated_files/uart1.c: 139:  uart1RxHead = 0;
 21925  01779A  6A2E               	clrf	_uart1RxHead^0,c	;volatile
 21926                           
 21927                           ; BSR set to: 61
 21928                           ;mcc_generated_files/uart1.c: 140:  uart1RxTail = 0;
 21929  01779C  6A2D               	clrf	_uart1RxTail^0,c	;volatile
 21930                           
 21931                           ; BSR set to: 61
 21932                           ;mcc_generated_files/uart1.c: 141:  uart1RxCount = 0;
 21933  01779E  6A2C               	clrf	_uart1RxCount^0,c	;volatile
 21934                           
 21935                           ; BSR set to: 61
 21936                           ;mcc_generated_files/uart1.c: 144:  PIE3bits.U1RXIE = 1;
 21937  0177A0  0139               	movlb	57	; () banked
 21938  0177A2  8793               	bsf	147,3,b	;volatile
 21939                           
 21940                           ; BSR set to: 57
 21941                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 21942  0177A4  0012               	return		;funcret
 21943  0177A6                     __end_of_UART1_Initialize:
 21944                           	opt callstack 0
 21945                           
 21946 ;; *************** function _UART1_SetTxInterruptHandler *****************
 21947 ;; Defined at:
 21948 ;;		line 246 in file "mcc_generated_files/uart1.c"
 21949 ;; Parameters:    Size  Location     Type
 21950 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 21951 ;;		 -> UART1_Transmit_ISR(1), 
 21952 ;; Auto vars:     Size  Location     Type
 21953 ;;		None
 21954 ;; Return value:  Size  Location     Type
 21955 ;;                  1  [STACK] void 
 21956 ;; Registers used:
 21957 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 21958 ;; Tracked objects:
 21959 ;;		On entry : 3F/39
 21960 ;;		On exit  : 0/0
 21961 ;;		Unchanged: 0/0
 21962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21967 ;;Total ram usage:        0 bytes
 21968 ;; Hardware stack levels used:    1
 21969 ;; Hardware stack levels required when called:    6
 21970 ;; This function calls:
 21971 ;;		Nothing
 21972 ;; This function is called by:
 21973 ;;		_UART1_Initialize
 21974 ;; This function uses a reentrant model
 21975 ;;
 21976                           
 21977                           	psect	text92
 21978  0180FA                     __ptext92:
 21979                           	opt callstack 0
 21980  0180FA                     _UART1_SetTxInterruptHandler:
 21981                           	opt callstack 22
 21982                           
 21983                           ;mcc_generated_files/uart1.c: 246: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 247: {;mcc_generated_files/uart1.c: 248:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 21984                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 21985                           
 21986                           ; BSR set to: 57
 21987                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21988                           ;incstack = 0
 21989  0180FA  50E1               	movf	fsr1l,w,c
 21990  0180FC  0FFD               	addlw	-3
 21991  0180FE  6ED9               	movwf	fsr2l,c
 21992  018100  50E2               	movf	fsr1h,w,c
 21993  018102  6EDA               	movwf	fsr2h,c
 21994  018104  0EFF               	movlw	255
 21995  018106  22DA               	addwfc	fsr2h,f,c
 21996  018108  006F FF78  F007    	movff	postinc2,_UART1_TxInterruptHandler
 21997  01810E  006F FF78  F008    	movff	postinc2,_UART1_TxInterruptHandler+1
 21998  018114  006F FF74  F009    	movff	postdec2,_UART1_TxInterruptHandler+2
 21999                           
 22000                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 22001  01811A  52E5               	movf	postdec1,f,c
 22002  01811C  52E5               	movf	postdec1,f,c
 22003  01811E  52E5               	movf	postdec1,f,c
 22004  018120  0012               	return		;funcret
 22005  018122                     __end_of_UART1_SetTxInterruptHandler:
 22006                           	opt callstack 0
 22007                           
 22008 ;; *************** function _UART1_SetRxInterruptHandler *****************
 22009 ;; Defined at:
 22010 ;;		line 241 in file "mcc_generated_files/uart1.c"
 22011 ;; Parameters:    Size  Location     Type
 22012 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22013 ;;		 -> UART1_Receive_ISR(1), 
 22014 ;; Auto vars:     Size  Location     Type
 22015 ;;		None
 22016 ;; Return value:  Size  Location     Type
 22017 ;;                  1  [STACK] void 
 22018 ;; Registers used:
 22019 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22020 ;; Tracked objects:
 22021 ;;		On entry : 3F/39
 22022 ;;		On exit  : 0/0
 22023 ;;		Unchanged: 0/0
 22024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22028 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22029 ;;Total ram usage:        0 bytes
 22030 ;; Hardware stack levels used:    1
 22031 ;; Hardware stack levels required when called:    6
 22032 ;; This function calls:
 22033 ;;		Nothing
 22034 ;; This function is called by:
 22035 ;;		_UART1_Initialize
 22036 ;; This function uses a reentrant model
 22037 ;;
 22038                           
 22039                           	psect	text93
 22040  018122                     __ptext93:
 22041                           	opt callstack 0
 22042  018122                     _UART1_SetRxInterruptHandler:
 22043                           	opt callstack 22
 22044                           
 22045                           ;mcc_generated_files/uart1.c: 241: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 242: {;mcc_generated_files/uart1.c: 243:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 22046                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22047                           
 22048                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22049                           ;incstack = 0
 22050  018122  50E1               	movf	fsr1l,w,c
 22051  018124  0FFD               	addlw	-3
 22052  018126  6ED9               	movwf	fsr2l,c
 22053  018128  50E2               	movf	fsr1h,w,c
 22054  01812A  6EDA               	movwf	fsr2h,c
 22055  01812C  0EFF               	movlw	255
 22056  01812E  22DA               	addwfc	fsr2h,f,c
 22057  018130  006F FF78  F00A    	movff	postinc2,_UART1_RxInterruptHandler
 22058  018136  006F FF78  F00B    	movff	postinc2,_UART1_RxInterruptHandler+1
 22059  01813C  006F FF74  F00C    	movff	postdec2,_UART1_RxInterruptHandler+2
 22060                           
 22061                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 22062  018142  52E5               	movf	postdec1,f,c
 22063  018144  52E5               	movf	postdec1,f,c
 22064  018146  52E5               	movf	postdec1,f,c
 22065  018148  0012               	return		;funcret
 22066  01814A                     __end_of_UART1_SetRxInterruptHandler:
 22067                           	opt callstack 0
 22068                           
 22069 ;; *************** function _TMR6_Initialize *****************
 22070 ;; Defined at:
 22071 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 22072 ;; Parameters:    Size  Location     Type
 22073 ;;		None
 22074 ;; Auto vars:     Size  Location     Type
 22075 ;;		None
 22076 ;; Return value:  Size  Location     Type
 22077 ;;                  1  [STACK] void 
 22078 ;; Registers used:
 22079 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 22080 ;; Tracked objects:
 22081 ;;		On entry : 3F/39
 22082 ;;		On exit  : 0/0
 22083 ;;		Unchanged: 0/0
 22084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22089 ;;Total ram usage:        0 bytes
 22090 ;; Hardware stack levels used:    1
 22091 ;; Hardware stack levels required when called:    7
 22092 ;; This function calls:
 22093 ;;		_TMR6_SetInterruptHandler
 22094 ;; This function is called by:
 22095 ;;		_SYSTEM_Initialize
 22096 ;; This function uses a reentrant model
 22097 ;;
 22098                           
 22099                           	psect	text94
 22100  017FB4                     __ptext94:
 22101                           	opt callstack 0
 22102  017FB4                     _TMR6_Initialize:
 22103                           	opt callstack 22
 22104                           
 22105                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 22106                           
 22107                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22108                           ;incstack = 0
 22109  017FB4  0E01               	movlw	1
 22110  017FB6  6E96               	movwf	150,c	;volatile
 22111                           
 22112                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 22113  017FB8  6A95               	clrf	149,c	;volatile
 22114                           
 22115                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 22116  017FBA  6A97               	clrf	151,c	;volatile
 22117                           
 22118                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 22119  017FBC  0E7C               	movlw	124
 22120  017FBE  6E93               	movwf	147,c	;volatile
 22121                           
 22122                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 22123  017FC0  6A92               	clrf	146,c	;volatile
 22124                           
 22125                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 22126  017FC2  0139               	movlb	57	; () banked
 22127  017FC4  91A9               	bcf	169,0,b	;volatile
 22128                           
 22129                           ; BSR set to: 57
 22130                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 22131  017FC6  8199               	bsf	153,0,b	;volatile
 22132                           
 22133                           ; BSR set to: 57
 22134                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 22135  017FC8  0EDA               	movlw	low _TMR6_DefaultInterruptHandler
 22136  017FCA  6EE6               	movwf	postinc1,c
 22137  017FCC  0E7B               	movlw	high _TMR6_DefaultInterruptHandler
 22138  017FCE  6EE6               	movwf	postinc1,c
 22139  017FD0  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 22140  017FD2  6EE6               	movwf	postinc1,c
 22141  017FD4  ECA5  F0C0         	call	_TMR6_SetInterruptHandler	;wreg free
 22142                           
 22143                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 22144  017FD8  0EE0               	movlw	224
 22145  017FDA  6E94               	movwf	148,c	;volatile
 22146                           
 22147                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 22148  017FDC  0012               	return		;funcret
 22149  017FDE                     __end_of_TMR6_Initialize:
 22150                           	opt callstack 0
 22151                           
 22152 ;; *************** function _TMR6_SetInterruptHandler *****************
 22153 ;; Defined at:
 22154 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 22155 ;; Parameters:    Size  Location     Type
 22156 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22157 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 22158 ;; Auto vars:     Size  Location     Type
 22159 ;;		None
 22160 ;; Return value:  Size  Location     Type
 22161 ;;                  1  [STACK] void 
 22162 ;; Registers used:
 22163 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22164 ;; Tracked objects:
 22165 ;;		On entry : 3F/39
 22166 ;;		On exit  : 0/0
 22167 ;;		Unchanged: 0/0
 22168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22173 ;;Total ram usage:        0 bytes
 22174 ;; Hardware stack levels used:    1
 22175 ;; Hardware stack levels required when called:    6
 22176 ;; This function calls:
 22177 ;;		Nothing
 22178 ;; This function is called by:
 22179 ;;		_TMR6_Initialize
 22180 ;; This function uses a reentrant model
 22181 ;;
 22182                           
 22183                           	psect	text95
 22184  01814A                     __ptext95:
 22185                           	opt callstack 0
 22186  01814A                     _TMR6_SetInterruptHandler:
 22187                           	opt callstack 22
 22188                           
 22189                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 22190                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22191                           
 22192                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22193                           ;incstack = 0
 22194  01814A  50E1               	movf	fsr1l,w,c
 22195  01814C  0FFD               	addlw	-3
 22196  01814E  6ED9               	movwf	fsr2l,c
 22197  018150  50E2               	movf	fsr1h,w,c
 22198  018152  6EDA               	movwf	fsr2h,c
 22199  018154  0EFF               	movlw	255
 22200  018156  22DA               	addwfc	fsr2h,f,c
 22201  018158  006F FF78  F0C4    	movff	postinc2,_TMR6_InterruptHandler
 22202  01815E  006F FF78  F0C5    	movff	postinc2,_TMR6_InterruptHandler+1
 22203  018164  006F FF74  F0C6    	movff	postdec2,_TMR6_InterruptHandler+2
 22204                           
 22205                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 22206  01816A  52E5               	movf	postdec1,f,c
 22207  01816C  52E5               	movf	postdec1,f,c
 22208  01816E  52E5               	movf	postdec1,f,c
 22209  018170  0012               	return		;funcret
 22210  018172                     __end_of_TMR6_SetInterruptHandler:
 22211                           	opt callstack 0
 22212                           
 22213 ;; *************** function _TMR5_Initialize *****************
 22214 ;; Defined at:
 22215 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 22216 ;; Parameters:    Size  Location     Type
 22217 ;;		None
 22218 ;; Auto vars:     Size  Location     Type
 22219 ;;		None
 22220 ;; Return value:  Size  Location     Type
 22221 ;;                  1  [STACK] void 
 22222 ;; Registers used:
 22223 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 22224 ;; Tracked objects:
 22225 ;;		On entry : 0/39
 22226 ;;		On exit  : 0/0
 22227 ;;		Unchanged: 0/0
 22228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22233 ;;Total ram usage:        0 bytes
 22234 ;; Hardware stack levels used:    1
 22235 ;; Hardware stack levels required when called:    7
 22236 ;; This function calls:
 22237 ;;		_TMR5_SetInterruptHandler
 22238 ;; This function is called by:
 22239 ;;		_SYSTEM_Initialize
 22240 ;; This function uses a reentrant model
 22241 ;;
 22242                           
 22243                           	psect	text96
 22244  017B94                     __ptext96:
 22245                           	opt callstack 0
 22246  017B94                     _TMR5_Initialize:
 22247                           	opt callstack 22
 22248                           
 22249                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 22250                           
 22251                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22252                           ;incstack = 0
 22253  017B94  6A9B               	clrf	155,c	;volatile
 22254                           
 22255                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 22256  017B96  6A9C               	clrf	156,c	;volatile
 22257                           
 22258                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 22259  017B98  0E01               	movlw	1
 22260  017B9A  6E9D               	movwf	157,c	;volatile
 22261                           
 22262                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 22263  017B9C  0E63               	movlw	99
 22264  017B9E  6E99               	movwf	153,c	;volatile
 22265                           
 22266                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 22267  017BA0  0EC0               	movlw	192
 22268  017BA2  6E98               	movwf	152,c	;volatile
 22269                           
 22270                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 22271  017BA4  5098               	movf	152,w,c	;volatile
 22272  017BA6  006F FE64  F032    	movff	16281,btemp	;volatile
 22273  017BAC  6A33               	clrf	(btemp+1)^0,c
 22274  017BAE  0060  F0C8  F033   	movff	btemp,btemp+1
 22275  017BB4  6A32               	clrf	btemp^0,c
 22276  017BB6  1032               	iorwf	btemp^0,w,c
 22277  017BB8  6E23               	movwf	_timer5ReloadVal^0,c	;volatile
 22278  017BBA  5033               	movf	(btemp+1)^0,w,c
 22279  017BBC  6E24               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 22280                           
 22281                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 22282  017BBE  0139               	movlb	57	; () banked
 22283  017BC0  9DA8               	bcf	168,6,b	;volatile
 22284                           
 22285                           ; BSR set to: 57
 22286                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 22287  017BC2  8D98               	bsf	152,6,b	;volatile
 22288                           
 22289                           ; BSR set to: 57
 22290                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 22291  017BC4  0E3A               	movlw	low _TMR5_DefaultInterruptHandler
 22292  017BC6  6EE6               	movwf	postinc1,c
 22293  017BC8  0E82               	movlw	high _TMR5_DefaultInterruptHandler
 22294  017BCA  6EE6               	movwf	postinc1,c
 22295  017BCC  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 22296  017BCE  6EE6               	movwf	postinc1,c
 22297  017BD0  ECB9  F0C0         	call	_TMR5_SetInterruptHandler	;wreg free
 22298                           
 22299                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 22300  017BD4  0E31               	movlw	49
 22301  017BD6  6E9A               	movwf	154,c	;volatile
 22302                           
 22303                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 22304  017BD8  0012               	return		;funcret
 22305  017BDA                     __end_of_TMR5_Initialize:
 22306                           	opt callstack 0
 22307                           
 22308 ;; *************** function _TMR5_SetInterruptHandler *****************
 22309 ;; Defined at:
 22310 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 22311 ;; Parameters:    Size  Location     Type
 22312 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22313 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 22314 ;; Auto vars:     Size  Location     Type
 22315 ;;		None
 22316 ;; Return value:  Size  Location     Type
 22317 ;;                  1  [STACK] void 
 22318 ;; Registers used:
 22319 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22320 ;; Tracked objects:
 22321 ;;		On entry : 3F/39
 22322 ;;		On exit  : 0/0
 22323 ;;		Unchanged: 0/0
 22324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22329 ;;Total ram usage:        0 bytes
 22330 ;; Hardware stack levels used:    1
 22331 ;; Hardware stack levels required when called:    6
 22332 ;; This function calls:
 22333 ;;		Nothing
 22334 ;; This function is called by:
 22335 ;;		_TMR5_Initialize
 22336 ;; This function uses a reentrant model
 22337 ;;
 22338                           
 22339                           	psect	text97
 22340  018172                     __ptext97:
 22341                           	opt callstack 0
 22342  018172                     _TMR5_SetInterruptHandler:
 22343                           	opt callstack 22
 22344                           
 22345                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 22346                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22347                           
 22348                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22349                           ;incstack = 0
 22350  018172  50E1               	movf	fsr1l,w,c
 22351  018174  0FFD               	addlw	-3
 22352  018176  6ED9               	movwf	fsr2l,c
 22353  018178  50E2               	movf	fsr1h,w,c
 22354  01817A  6EDA               	movwf	fsr2h,c
 22355  01817C  0EFF               	movlw	255
 22356  01817E  22DA               	addwfc	fsr2h,f,c
 22357  018180  006F FF78  F0C1    	movff	postinc2,_TMR5_InterruptHandler
 22358  018186  006F FF78  F0C2    	movff	postinc2,_TMR5_InterruptHandler+1
 22359  01818C  006F FF74  F0C3    	movff	postdec2,_TMR5_InterruptHandler+2
 22360                           
 22361                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 22362  018192  52E5               	movf	postdec1,f,c
 22363  018194  52E5               	movf	postdec1,f,c
 22364  018196  52E5               	movf	postdec1,f,c
 22365  018198  0012               	return		;funcret
 22366  01819A                     __end_of_TMR5_SetInterruptHandler:
 22367                           	opt callstack 0
 22368                           
 22369 ;; *************** function _TMR2_Initialize *****************
 22370 ;; Defined at:
 22371 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 22372 ;; Parameters:    Size  Location     Type
 22373 ;;		None
 22374 ;; Auto vars:     Size  Location     Type
 22375 ;;		None
 22376 ;; Return value:  Size  Location     Type
 22377 ;;                  1  [STACK] void 
 22378 ;; Registers used:
 22379 ;;		wreg, status,2
 22380 ;; Tracked objects:
 22381 ;;		On entry : 0/3E
 22382 ;;		On exit  : 3F/39
 22383 ;;		Unchanged: 0/0
 22384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22388 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22389 ;;Total ram usage:        0 bytes
 22390 ;; Hardware stack levels used:    1
 22391 ;; Hardware stack levels required when called:    6
 22392 ;; This function calls:
 22393 ;;		Nothing
 22394 ;; This function is called by:
 22395 ;;		_SYSTEM_Initialize
 22396 ;; This function uses a reentrant model
 22397 ;;
 22398                           
 22399                           	psect	text98
 22400  0184EE                     __ptext98:
 22401                           	opt callstack 0
 22402  0184EE                     _TMR2_Initialize:
 22403                           	opt callstack 23
 22404                           
 22405                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 22406                           
 22407                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22408                           ;incstack = 0
 22409  0184EE  0E01               	movlw	1
 22410  0184F0  6EAE               	movwf	174,c	;volatile
 22411                           
 22412                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 22413  0184F2  6AAD               	clrf	173,c	;volatile
 22414                           
 22415                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 22416  0184F4  6AAF               	clrf	175,c	;volatile
 22417                           
 22418                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 22419  0184F6  0E63               	movlw	99
 22420  0184F8  6EAB               	movwf	171,c	;volatile
 22421                           
 22422                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 22423  0184FA  6AAA               	clrf	170,c	;volatile
 22424                           
 22425                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 22426  0184FC  0139               	movlb	57	; () banked
 22427  0184FE  95A4               	bcf	164,2,b	;volatile
 22428                           
 22429                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 22430  018500  0EC0               	movlw	192
 22431  018502  6EAC               	movwf	172,c	;volatile
 22432                           
 22433                           ; BSR set to: 57
 22434                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 22435  018504  0012               	return		;funcret
 22436  018506                     __end_of_TMR2_Initialize:
 22437                           	opt callstack 0
 22438                           
 22439 ;; *************** function _SPI1_Initialize *****************
 22440 ;; Defined at:
 22441 ;;		line 64 in file "mcc_generated_files/spi1.c"
 22442 ;; Parameters:    Size  Location     Type
 22443 ;;		None
 22444 ;; Auto vars:     Size  Location     Type
 22445 ;;		None
 22446 ;; Return value:  Size  Location     Type
 22447 ;;                  1  [STACK] void 
 22448 ;; Registers used:
 22449 ;;		wreg, status,2
 22450 ;; Tracked objects:
 22451 ;;		On entry : 3F/39
 22452 ;;		On exit  : 3F/3D
 22453 ;;		Unchanged: 0/0
 22454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22459 ;;Total ram usage:        0 bytes
 22460 ;; Hardware stack levels used:    1
 22461 ;; Hardware stack levels required when called:    6
 22462 ;; This function calls:
 22463 ;;		Nothing
 22464 ;; This function is called by:
 22465 ;;		_SYSTEM_Initialize
 22466 ;; This function uses a reentrant model
 22467 ;;
 22468                           
 22469                           	psect	text99
 22470  018506                     __ptext99:
 22471                           	opt callstack 0
 22472  018506                     _SPI1_Initialize:
 22473                           	opt callstack 23
 22474                           
 22475                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 22476                           
 22477                           ; BSR set to: 57
 22478                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22479                           ;incstack = 0
 22480  018506  0E40               	movlw	64
 22481  018508  013D               	movlb	61	; () banked
 22482  01850A  6F15               	movwf	21,b	;volatile
 22483                           
 22484                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 22485  01850C  0E03               	movlw	3
 22486  01850E  6F16               	movwf	22,b	;volatile
 22487                           
 22488                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 22489  018510  0E4F               	movlw	79
 22490  018512  6F19               	movwf	25,b	;volatile
 22491                           
 22492                           ; BSR set to: 61
 22493                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 22494  018514  6B1C               	clrf	28,b	;volatile
 22495                           
 22496                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 22497  018516  0E83               	movlw	131
 22498  018518  6F14               	movwf	20,b	;volatile
 22499                           
 22500                           ; BSR set to: 61
 22501                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 22502  01851A  0012               	return		;funcret
 22503  01851C                     __end_of_SPI1_Initialize:
 22504                           	opt callstack 0
 22505                           
 22506 ;; *************** function _PWM8_Initialize *****************
 22507 ;; Defined at:
 22508 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 22509 ;; Parameters:    Size  Location     Type
 22510 ;;		None
 22511 ;; Auto vars:     Size  Location     Type
 22512 ;;		None
 22513 ;; Return value:  Size  Location     Type
 22514 ;;                  1  [STACK] void 
 22515 ;; Registers used:
 22516 ;;		wreg, status,2
 22517 ;; Tracked objects:
 22518 ;;		On entry : 3F/39
 22519 ;;		On exit  : 3F/3F
 22520 ;;		Unchanged: 0/0
 22521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22525 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22526 ;;Total ram usage:        0 bytes
 22527 ;; Hardware stack levels used:    1
 22528 ;; Hardware stack levels required when called:    6
 22529 ;; This function calls:
 22530 ;;		Nothing
 22531 ;; This function is called by:
 22532 ;;		_SYSTEM_Initialize
 22533 ;; This function uses a reentrant model
 22534 ;;
 22535                           
 22536                           	psect	text100
 22537  01851C                     __ptext100:
 22538                           	opt callstack 0
 22539  01851C                     _PWM8_Initialize:
 22540                           	opt callstack 23
 22541                           
 22542                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 22543                           
 22544                           ; BSR set to: 61
 22545                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22546                           ;incstack = 0
 22547  01851C  0E80               	movlw	128
 22548  01851E  6E62               	movwf	98,c	;volatile
 22549                           
 22550                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 22551  018520  6A61               	clrf	97,c	;volatile
 22552                           
 22553                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 22554  018522  0E40               	movlw	64
 22555  018524  6E60               	movwf	96,c	;volatile
 22556                           
 22557                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 22558  018526  013F               	movlb	63	; () banked
 22559  018528  515F               	movf	95,w,b	;volatile
 22560  01852A  0B3F               	andlw	-193
 22561  01852C  0940               	iorlw	64
 22562  01852E  6F5F               	movwf	95,b	;volatile
 22563                           
 22564                           ; BSR set to: 63
 22565                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 22566  018530  0012               	return		;funcret
 22567  018532                     __end_of_PWM8_Initialize:
 22568                           	opt callstack 0
 22569                           
 22570 ;; *************** function _PMD_Initialize *****************
 22571 ;; Defined at:
 22572 ;;		line 89 in file "mcc_generated_files/mcc.c"
 22573 ;; Parameters:    Size  Location     Type
 22574 ;;		None
 22575 ;; Auto vars:     Size  Location     Type
 22576 ;;		None
 22577 ;; Return value:  Size  Location     Type
 22578 ;;                  1  [STACK] void 
 22579 ;; Registers used:
 22580 ;;		None
 22581 ;; Tracked objects:
 22582 ;;		On entry : 3F/39
 22583 ;;		On exit  : 3F/39
 22584 ;;		Unchanged: 0/0
 22585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22589 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22590 ;;Total ram usage:        0 bytes
 22591 ;; Hardware stack levels used:    1
 22592 ;; Hardware stack levels required when called:    6
 22593 ;; This function calls:
 22594 ;;		Nothing
 22595 ;; This function is called by:
 22596 ;;		_SYSTEM_Initialize
 22597 ;; This function uses a reentrant model
 22598 ;;
 22599                           
 22600                           	psect	text101
 22601  018548                     __ptext101:
 22602                           	opt callstack 0
 22603  018548                     _PMD_Initialize:
 22604                           	opt callstack 23
 22605                           
 22606                           ;mcc_generated_files/mcc.c: 92:     PMD0 = 0x00;
 22607                           
 22608                           ; BSR set to: 63
 22609                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22610                           ;incstack = 0
 22611  018548  0139               	movlb	57	; () banked
 22612  01854A  6BC0               	clrf	192,b	;volatile
 22613                           
 22614                           ;mcc_generated_files/mcc.c: 94:     PMD1 = 0x00;
 22615  01854C  6BC1               	clrf	193,b	;volatile
 22616                           
 22617                           ;mcc_generated_files/mcc.c: 96:     PMD2 = 0x00;
 22618  01854E  6BC2               	clrf	194,b	;volatile
 22619                           
 22620                           ;mcc_generated_files/mcc.c: 98:     PMD3 = 0x00;
 22621  018550  6BC3               	clrf	195,b	;volatile
 22622                           
 22623                           ;mcc_generated_files/mcc.c: 100:     PMD4 = 0x00;
 22624  018552  6BC4               	clrf	196,b	;volatile
 22625                           
 22626                           ;mcc_generated_files/mcc.c: 102:     PMD5 = 0x00;
 22627  018554  6BC5               	clrf	197,b	;volatile
 22628                           
 22629                           ;mcc_generated_files/mcc.c: 104:     PMD6 = 0x00;
 22630  018556  6BC6               	clrf	198,b	;volatile
 22631                           
 22632                           ;mcc_generated_files/mcc.c: 106:     PMD7 = 0x00;
 22633  018558  6BC7               	clrf	199,b	;volatile
 22634                           
 22635                           ; BSR set to: 57
 22636                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 22637  01855A  0012               	return		;funcret
 22638  01855C                     __end_of_PMD_Initialize:
 22639                           	opt callstack 0
 22640                           
 22641 ;; *************** function _PIN_MANAGER_Initialize *****************
 22642 ;; Defined at:
 22643 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 22644 ;; Parameters:    Size  Location     Type
 22645 ;;		None
 22646 ;; Auto vars:     Size  Location     Type
 22647 ;;		None
 22648 ;; Return value:  Size  Location     Type
 22649 ;;                  1  [STACK] void 
 22650 ;; Registers used:
 22651 ;;		wreg, status,2
 22652 ;; Tracked objects:
 22653 ;;		On entry : 3F/39
 22654 ;;		On exit  : 3F/3A
 22655 ;;		Unchanged: 0/0
 22656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22661 ;;Total ram usage:        0 bytes
 22662 ;; Hardware stack levels used:    1
 22663 ;; Hardware stack levels required when called:    6
 22664 ;; This function calls:
 22665 ;;		Nothing
 22666 ;; This function is called by:
 22667 ;;		_SYSTEM_Initialize
 22668 ;; This function uses a reentrant model
 22669 ;;
 22670                           
 22671                           	psect	text102
 22672  017220                     __ptext102:
 22673                           	opt callstack 0
 22674  017220                     _PIN_MANAGER_Initialize:
 22675                           	opt callstack 23
 22676                           
 22677                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 22678                           
 22679                           ; BSR set to: 57
 22680                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22681                           ;incstack = 0
 22682  017220  0E07               	movlw	7
 22683  017222  6EBE               	movwf	190,c	;volatile
 22684                           
 22685                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x80;
 22686  017224  0E80               	movlw	128
 22687  017226  6EBD               	movwf	189,c	;volatile
 22688                           
 22689                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 22690  017228  6ABA               	clrf	186,c	;volatile
 22691                           
 22692                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 22693  01722A  6ABF               	clrf	191,c	;volatile
 22694                           
 22695                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 22696  01722C  6ABB               	clrf	187,c	;volatile
 22697                           
 22698                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 22699  01722E  0E07               	movlw	7
 22700  017230  6EBC               	movwf	188,c	;volatile
 22701                           
 22702                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 22703  017232  6AC6               	clrf	198,c	;volatile
 22704                           
 22705                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 22706  017234  0E0F               	movlw	15
 22707  017236  6EC7               	movwf	199,c	;volatile
 22708                           
 22709                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 22710  017238  68C2               	setf	194,c	;volatile
 22711                           
 22712                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 22713  01723A  0EBF               	movlw	191
 22714  01723C  6EC3               	movwf	195,c	;volatile
 22715                           
 22716                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 22717  01723E  0E90               	movlw	144
 22718  017240  6EC4               	movwf	196,c	;volatile
 22719                           
 22720                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 22721  017242  0E0C               	movlw	12
 22722  017244  6EC5               	movwf	197,c	;volatile
 22723                           
 22724                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 22725  017246  013A               	movlb	58	; () banked
 22726  017248  6B70               	clrf	112,b	;volatile
 22727                           
 22728                           ; BSR set to: 58
 22729                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 22730  01724A  6B60               	clrf	96,b	;volatile
 22731                           
 22732                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 22733  01724C  0E3C               	movlw	60
 22734  01724E  6F50               	movwf	80,b	;volatile
 22735                           
 22736                           ; BSR set to: 58
 22737                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 22738  017250  6B80               	clrf	128,b	;volatile
 22739                           
 22740                           ; BSR set to: 58
 22741                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 22742  017252  6B90               	clrf	144,b	;volatile
 22743                           
 22744                           ; BSR set to: 58
 22745                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 22746  017254  6940               	setf	64,b	;volatile
 22747                           
 22748                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 22749  017256  0E0C               	movlw	12
 22750  017258  6F71               	movwf	113,b	;volatile
 22751                           
 22752                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0F;
 22753  01725A  0E0F               	movlw	15
 22754  01725C  6F91               	movwf	145,b	;volatile
 22755                           
 22756                           ; BSR set to: 58
 22757                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 22758  01725E  6B81               	clrf	129,b	;volatile
 22759                           
 22760                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 22761  017260  0E83               	movlw	131
 22762  017262  6F51               	movwf	81,b	;volatile
 22763                           
 22764                           ; BSR set to: 58
 22765                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 22766  017264  6B41               	clrf	65,b	;volatile
 22767                           
 22768                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 22769  017266  0E97               	movlw	151
 22770  017268  6F61               	movwf	97,b	;volatile
 22771                           
 22772                           ; BSR set to: 58
 22773                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 22774  01726A  6B82               	clrf	130,b	;volatile
 22775                           
 22776                           ; BSR set to: 58
 22777                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 22778  01726C  6B92               	clrf	146,b	;volatile
 22779                           
 22780                           ; BSR set to: 58
 22781                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 22782  01726E  6B42               	clrf	66,b	;volatile
 22783                           
 22784                           ; BSR set to: 58
 22785                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 22786  017270  6B52               	clrf	82,b	;volatile
 22787                           
 22788                           ; BSR set to: 58
 22789                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 22790  017272  6B62               	clrf	98,b	;volatile
 22791                           
 22792                           ; BSR set to: 58
 22793                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 22794  017274  6B72               	clrf	114,b	;volatile
 22795                           
 22796                           ; BSR set to: 58
 22797                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 22798  017276  6943               	setf	67,b	;volatile
 22799                           
 22800                           ; BSR set to: 58
 22801                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 22802  017278  6953               	setf	83,b	;volatile
 22803                           
 22804                           ; BSR set to: 58
 22805                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 22806  01727A  6963               	setf	99,b	;volatile
 22807                           
 22808                           ; BSR set to: 58
 22809                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 22810  01727C  6973               	setf	115,b	;volatile
 22811                           
 22812                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 22813  01727E  0E07               	movlw	7
 22814  017280  6F83               	movwf	131,b	;volatile
 22815                           
 22816                           ; BSR set to: 58
 22817                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 22818  017282  6993               	setf	147,b	;volatile
 22819                           
 22820                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 22821  017284  0E0F               	movlw	15
 22822  017286  6FE8               	movwf	232,b	;volatile
 22823                           
 22824                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 22825  017288  0E13               	movlw	19
 22826  01728A  6FDE               	movwf	222,b	;volatile
 22827                           
 22828                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 22829  01728C  0E16               	movlw	22
 22830  01728E  6F0E               	movwf	14,b	;volatile
 22831                           
 22832                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 22833  017290  0E1E               	movlw	30
 22834  017292  6F13               	movwf	19,b	;volatile
 22835                           
 22836                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 22837  017294  0E08               	movlw	8
 22838  017296  6FC0               	movwf	192,b	;volatile
 22839                           
 22840                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 22841  017298  0E10               	movlw	16
 22842  01729A  6F19               	movwf	25,b	;volatile
 22843                           
 22844                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 22845  01729C  0E09               	movlw	9
 22846  01729E  6FC1               	movwf	193,b	;volatile
 22847                           
 22848                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 22849  0172A0  0E1F               	movlw	31
 22850  0172A2  6F15               	movwf	21,b	;volatile
 22851                           
 22852                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 22853  0172A4  0E13               	movlw	19
 22854  0172A6  6F16               	movwf	22,b	;volatile
 22855                           
 22856                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 22857  0172A8  0E17               	movlw	23
 22858  0172AA  6FE5               	movwf	229,b	;volatile
 22859                           
 22860                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 22861  0172AC  0E14               	movlw	20
 22862  0172AE  6FDF               	movwf	223,b	;volatile
 22863                           
 22864                           ; BSR set to: 58
 22865                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 22866  0172B0  0012               	return		;funcret
 22867  0172B2                     __end_of_PIN_MANAGER_Initialize:
 22868                           	opt callstack 0
 22869                           
 22870 ;; *************** function _OSCILLATOR_Initialize *****************
 22871 ;; Defined at:
 22872 ;;		line 71 in file "mcc_generated_files/mcc.c"
 22873 ;; Parameters:    Size  Location     Type
 22874 ;;		None
 22875 ;; Auto vars:     Size  Location     Type
 22876 ;;		None
 22877 ;; Return value:  Size  Location     Type
 22878 ;;                  1  [STACK] void 
 22879 ;; Registers used:
 22880 ;;		wreg, status,2
 22881 ;; Tracked objects:
 22882 ;;		On entry : 3F/3A
 22883 ;;		On exit  : 3F/39
 22884 ;;		Unchanged: 0/0
 22885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22889 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22890 ;;Total ram usage:        0 bytes
 22891 ;; Hardware stack levels used:    1
 22892 ;; Hardware stack levels required when called:    6
 22893 ;; This function calls:
 22894 ;;		Nothing
 22895 ;; This function is called by:
 22896 ;;		_SYSTEM_Initialize
 22897 ;; This function uses a reentrant model
 22898 ;;
 22899                           
 22900                           	psect	text103
 22901  018532                     __ptext103:
 22902                           	opt callstack 0
 22903  018532                     _OSCILLATOR_Initialize:
 22904                           	opt callstack 23
 22905                           
 22906                           ;mcc_generated_files/mcc.c: 74:     OSCCON1 = 0x20;
 22907                           
 22908                           ; BSR set to: 58
 22909                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22910                           ;incstack = 0
 22911  018532  0E20               	movlw	32
 22912  018534  0139               	movlb	57	; () banked
 22913  018536  6FD9               	movwf	217,b	;volatile
 22914                           
 22915                           ; BSR set to: 57
 22916                           ;mcc_generated_files/mcc.c: 76:     OSCCON3 = 0x00;
 22917  018538  6BDB               	clrf	219,b	;volatile
 22918                           
 22919                           ; BSR set to: 57
 22920                           ;mcc_generated_files/mcc.c: 78:     OSCEN = 0x00;
 22921  01853A  6BDD               	clrf	221,b	;volatile
 22922                           
 22923                           ;mcc_generated_files/mcc.c: 80:     OSCFRQ = 0x02;
 22924  01853C  0E02               	movlw	2
 22925  01853E  6FDF               	movwf	223,b	;volatile
 22926                           
 22927                           ; BSR set to: 57
 22928                           ;mcc_generated_files/mcc.c: 82:     OSCTUNE = 0x00;
 22929  018540  6BDE               	clrf	222,b	;volatile
 22930  018542                     l171:
 22931                           
 22932                           ; BSR set to: 57
 22933                           ;mcc_generated_files/mcc.c: 84:     while(PLLR == 0)
 22934  018542  B1DC               	btfsc	220,0,b	;volatile
 22935  018544  0012               	return	
 22936  018546  D7FD               	goto	l171
 22937  018548                     __end_of_OSCILLATOR_Initialize:
 22938                           	opt callstack 0
 22939                           
 22940 ;; *************** function _INTERRUPT_Initialize *****************
 22941 ;; Defined at:
 22942 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 22943 ;; Parameters:    Size  Location     Type
 22944 ;;		None
 22945 ;; Auto vars:     Size  Location     Type
 22946 ;;  state           1  [STACK] _Bool 
 22947 ;; Return value:  Size  Location     Type
 22948 ;;                  1  [STACK] void 
 22949 ;; Registers used:
 22950 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 22951 ;; Tracked objects:
 22952 ;;		On entry : 0/0
 22953 ;;		On exit  : 3F/39
 22954 ;;		Unchanged: 0/0
 22955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22960 ;;Total ram usage:        0 bytes
 22961 ;; Hardware stack levels used:    1
 22962 ;; Hardware stack levels required when called:    6
 22963 ;; This function calls:
 22964 ;;		Nothing
 22965 ;; This function is called by:
 22966 ;;		_SYSTEM_Initialize
 22967 ;; This function uses a reentrant model
 22968 ;;
 22969                           
 22970                           	psect	text104
 22971  017678                     __ptext104:
 22972                           	opt callstack 0
 22973  017678                     _INTERRUPT_Initialize:
 22974                           	opt callstack 0
 22975                           
 22976                           ; BSR set to: 57
 22977                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22978  017678  52E6               	movf	postinc1,f,c
 22979                           
 22980                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 22981                           
 22982                           ;incstack = 0
 22983  01767A  8AD2               	bsf	210,5,c	;volatile
 22984                           
 22985                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 22986  01767C  AED2               	btfss	16338,7,c	;volatile
 22987  01767E  D003               	goto	u12260
 22988  017680  6A3D               	clrf	(btemp+11)^0,c
 22989  017682  2A3D               	incf	(btemp+11)^0,f,c
 22990  017684  D001               	goto	u12278
 22991  017686                     u12260:
 22992  017686  6A3D               	clrf	(btemp+11)^0,c
 22993  017688                     u12278:
 22994                           
 22995                           ;stkvar	_state @ sp[(-1)+0]
 22996  017688  0EFF               	movlw	-1
 22997  01768A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 22998                           
 22999                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 23000  017690  9ED2               	bcf	16338,7,c	;volatile
 23001                           
 23002                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 23003  017692  0E55               	movlw	85
 23004  017694  6ED4               	movwf	212,c	;volatile
 23005                           
 23006                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 23007  017696  0EAA               	movlw	170
 23008  017698  6ED4               	movwf	212,c	;volatile
 23009                           
 23010                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 23011  01769A  90D4               	bcf	212,0,c	;volatile
 23012                           
 23013                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 23014  01769C  0138               	movlb	56	; () banked
 23015  01769E  6B9F               	clrf	159,b	;volatile
 23016                           
 23017                           ; BSR set to: 56
 23018                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 23019  0176A0  6B9E               	clrf	158,b	;volatile
 23020                           
 23021                           ; BSR set to: 56
 23022                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 23023  0176A2  0E08               	movlw	8
 23024  0176A4  6F9D               	movwf	157,b	;volatile
 23025                           
 23026                           ; BSR set to: 56
 23027                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 23028  0176A6  0E55               	movlw	85
 23029  0176A8  6ED4               	movwf	212,c	;volatile
 23030                           
 23031                           ; BSR set to: 56
 23032                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 23033  0176AA  0EAA               	movlw	170
 23034  0176AC  6ED4               	movwf	212,c	;volatile
 23035                           
 23036                           ; BSR set to: 56
 23037                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 23038  0176AE  80D4               	bsf	212,0,c	;volatile
 23039                           
 23040                           ; BSR set to: 56
 23041                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 23042                           ;stkvar	_state @ sp[(-1)+0]
 23043  0176B0  0EFF               	movlw	-1
 23044  0176B2  B0E3               	btfsc	plusw1,0,c
 23045  0176B4  D002               	bra	u12285
 23046  0176B6  9ED2               	bcf	16338,7,c	;volatile
 23047  0176B8  D001               	bra	u12286
 23048  0176BA                     u12285:
 23049  0176BA  8ED2               	bsf	16338,7,c	;volatile
 23050  0176BC                     u12286:
 23051                           
 23052                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 23053  0176BC  0139               	movlb	57	; () banked
 23054  0176BE  8782               	bsf	130,3,b	;volatile
 23055                           
 23056                           ; BSR set to: 57
 23057                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 23058  0176C0  8382               	bsf	130,1,b	;volatile
 23059                           
 23060                           ; BSR set to: 57
 23061                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 23062  0176C2  8182               	bsf	130,0,b	;volatile
 23063                           
 23064                           ; BSR set to: 57
 23065                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 23066  0176C4  8582               	bsf	130,2,b	;volatile
 23067                           
 23068                           ; BSR set to: 57
 23069                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 23070  0176C6  8786               	bsf	134,3,b	;volatile
 23071                           
 23072                           ; BSR set to: 57
 23073                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 23074  0176C8  8586               	bsf	134,2,b	;volatile
 23075                           
 23076                           ; BSR set to: 57
 23077                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 23078  0176CA  8983               	bsf	131,4,b	;volatile
 23079                           
 23080                           ; BSR set to: 57
 23081                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 23082  0176CC  8783               	bsf	131,3,b	;volatile
 23083                           
 23084                           ; BSR set to: 57
 23085                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 23086  0176CE  8181               	bsf	129,0,b	;volatile
 23087                           
 23088                           ; BSR set to: 57
 23089                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 0;
 23090  0176D0  9185               	bcf	133,0,b	;volatile
 23091                           
 23092                           ; BSR set to: 57
 23093                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR9bits.TMR6IP = 1;
 23094  0176D2  8189               	bsf	137,0,b	;volatile
 23095                           
 23096                           ; BSR set to: 57
 23097                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR8bits.TMR5IP = 0;
 23098  0176D4  9D88               	bcf	136,6,b	;volatile
 23099                           
 23100                           ; BSR set to: 57
 23101                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 23102  0176D6  8581               	bsf	129,2,b	;volatile
 23103                           
 23104                           ; BSR set to: 57
 23105                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 23106  0176D8  8781               	bsf	129,3,b	;volatile
 23107                           
 23108                           ; BSR set to: 57
 23109                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 23110  0176DA  52E5               	movf	postdec1,f,c
 23111  0176DC  0012               	return		;funcret
 23112  0176DE                     __end_of_INTERRUPT_Initialize:
 23113                           	opt callstack 0
 23114                           
 23115 ;; *************** function _FVR_Initialize *****************
 23116 ;; Defined at:
 23117 ;;		line 58 in file "mcc_generated_files/fvr.c"
 23118 ;; Parameters:    Size  Location     Type
 23119 ;;		None
 23120 ;; Auto vars:     Size  Location     Type
 23121 ;;		None
 23122 ;; Return value:  Size  Location     Type
 23123 ;;                  1  [STACK] void 
 23124 ;; Registers used:
 23125 ;;		wreg, status,2
 23126 ;; Tracked objects:
 23127 ;;		On entry : 3F/39
 23128 ;;		On exit  : 3F/3E
 23129 ;;		Unchanged: 0/0
 23130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23134 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23135 ;;Total ram usage:        0 bytes
 23136 ;; Hardware stack levels used:    1
 23137 ;; Hardware stack levels required when called:    6
 23138 ;; This function calls:
 23139 ;;		Nothing
 23140 ;; This function is called by:
 23141 ;;		_SYSTEM_Initialize
 23142 ;; This function uses a reentrant model
 23143 ;;
 23144                           
 23145                           	psect	text105
 23146  01861E                     __ptext105:
 23147                           	opt callstack 0
 23148  01861E                     _FVR_Initialize:
 23149                           	opt callstack 23
 23150                           
 23151                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 23152                           
 23153                           ; BSR set to: 57
 23154                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23155                           ;incstack = 0
 23156  01861E  0EAF               	movlw	175
 23157  018620  013E               	movlb	62	; () banked
 23158  018622  6FC1               	movwf	193,b	;volatile
 23159                           
 23160                           ; BSR set to: 62
 23161                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 23162  018624  0012               	return		;funcret
 23163  018626                     __end_of_FVR_Initialize:
 23164                           	opt callstack 0
 23165                           
 23166 ;; *************** function _EXT_INT_Initialize *****************
 23167 ;; Defined at:
 23168 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 23169 ;; Parameters:    Size  Location     Type
 23170 ;;		None
 23171 ;; Auto vars:     Size  Location     Type
 23172 ;;		None
 23173 ;; Return value:  Size  Location     Type
 23174 ;;                  1  [STACK] void 
 23175 ;; Registers used:
 23176 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23177 ;; Tracked objects:
 23178 ;;		On entry : 3F/3F
 23179 ;;		On exit  : 3F/39
 23180 ;;		Unchanged: 0/0
 23181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23186 ;;Total ram usage:        0 bytes
 23187 ;; Hardware stack levels used:    1
 23188 ;; Hardware stack levels required when called:    7
 23189 ;; This function calls:
 23190 ;;		_INT0_SetInterruptHandler
 23191 ;;		_INT1_SetInterruptHandler
 23192 ;; This function is called by:
 23193 ;;		_SYSTEM_Initialize
 23194 ;; This function uses a reentrant model
 23195 ;;
 23196                           
 23197                           	psect	text106
 23198  017E3A                     __ptext106:
 23199                           	opt callstack 0
 23200  017E3A                     _EXT_INT_Initialize:
 23201                           	opt callstack 22
 23202                           
 23203                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 23204                           
 23205                           ; BSR set to: 62
 23206                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23207                           ;incstack = 0
 23208  017E3A  0139               	movlb	57	; () banked
 23209  017E3C  91A1               	bcf	161,0,b	;volatile
 23210                           
 23211                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 23212  017E3E  90D2               	bcf	210,0,c	;volatile
 23213                           
 23214                           ; BSR set to: 57
 23215                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 23216  017E40  0E40               	movlw	low _INT0_DefaultInterruptHandler
 23217  017E42  6EE6               	movwf	postinc1,c
 23218  017E44  0E86               	movlw	high _INT0_DefaultInterruptHandler
 23219  017E46  6EE6               	movwf	postinc1,c
 23220  017E48  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 23221  017E4A  6EE6               	movwf	postinc1,c
 23222  017E4C  ECE1  F0C0         	call	_INT0_SetInterruptHandler	;wreg free
 23223                           
 23224                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 23225  017E50  0139               	movlb	57	; () banked
 23226  017E52  8191               	bsf	145,0,b	;volatile
 23227                           
 23228                           ; BSR set to: 57
 23229                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 23230  017E54  91A5               	bcf	165,0,b	;volatile
 23231                           
 23232                           ; BSR set to: 57
 23233                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 23234  017E56  92D2               	bcf	210,1,c	;volatile
 23235                           
 23236                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 23237  017E58  0E3E               	movlw	low _INT1_DefaultInterruptHandler
 23238  017E5A  6EE6               	movwf	postinc1,c
 23239  017E5C  0E86               	movlw	high _INT1_DefaultInterruptHandler
 23240  017E5E  6EE6               	movwf	postinc1,c
 23241  017E60  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 23242  017E62  6EE6               	movwf	postinc1,c
 23243  017E64  ECCD  F0C0         	call	_INT1_SetInterruptHandler	;wreg free
 23244                           
 23245                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 23246  017E68  0139               	movlb	57	; () banked
 23247  017E6A  8195               	bsf	149,0,b	;volatile
 23248                           
 23249                           ; BSR set to: 57
 23250                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 23251  017E6C  0012               	return		;funcret
 23252  017E6E                     __end_of_EXT_INT_Initialize:
 23253                           	opt callstack 0
 23254                           
 23255 ;; *************** function _INT1_SetInterruptHandler *****************
 23256 ;; Defined at:
 23257 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 23258 ;; Parameters:    Size  Location     Type
 23259 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23260 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 23261 ;; Auto vars:     Size  Location     Type
 23262 ;;		None
 23263 ;; Return value:  Size  Location     Type
 23264 ;;                  1  [STACK] void 
 23265 ;; Registers used:
 23266 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23267 ;; Tracked objects:
 23268 ;;		On entry : 3F/39
 23269 ;;		On exit  : 0/0
 23270 ;;		Unchanged: 0/0
 23271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23276 ;;Total ram usage:        0 bytes
 23277 ;; Hardware stack levels used:    1
 23278 ;; Hardware stack levels required when called:    6
 23279 ;; This function calls:
 23280 ;;		Nothing
 23281 ;; This function is called by:
 23282 ;;		_EXT_INT_Initialize
 23283 ;;		_start_switch_handler
 23284 ;; This function uses a reentrant model
 23285 ;;
 23286                           
 23287                           	psect	text107
 23288  01819A                     __ptext107:
 23289                           	opt callstack 0
 23290  01819A                     _INT1_SetInterruptHandler:
 23291                           	opt callstack 23
 23292                           
 23293                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 23294                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23295                           
 23296                           ; BSR set to: 57
 23297                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23298                           ;incstack = 0
 23299  01819A  50E1               	movf	fsr1l,w,c
 23300  01819C  0FFD               	addlw	-3
 23301  01819E  6ED9               	movwf	fsr2l,c
 23302  0181A0  50E2               	movf	fsr1h,w,c
 23303  0181A2  6EDA               	movwf	fsr2h,c
 23304  0181A4  0EFF               	movlw	255
 23305  0181A6  22DA               	addwfc	fsr2h,f,c
 23306  0181A8  006F FF78  F013    	movff	postinc2,_INT1_InterruptHandler
 23307  0181AE  006F FF78  F014    	movff	postinc2,_INT1_InterruptHandler+1
 23308  0181B4  006F FF74  F015    	movff	postdec2,_INT1_InterruptHandler+2
 23309                           
 23310                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 23311  0181BA  52E5               	movf	postdec1,f,c
 23312  0181BC  52E5               	movf	postdec1,f,c
 23313  0181BE  52E5               	movf	postdec1,f,c
 23314  0181C0  0012               	return		;funcret
 23315  0181C2                     __end_of_INT1_SetInterruptHandler:
 23316                           	opt callstack 0
 23317                           
 23318 ;; *************** function _INT0_SetInterruptHandler *****************
 23319 ;; Defined at:
 23320 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 23321 ;; Parameters:    Size  Location     Type
 23322 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23323 ;;		 -> INT0_DefaultInterruptHandler(1), 
 23324 ;; Auto vars:     Size  Location     Type
 23325 ;;		None
 23326 ;; Return value:  Size  Location     Type
 23327 ;;                  1  [STACK] void 
 23328 ;; Registers used:
 23329 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23330 ;; Tracked objects:
 23331 ;;		On entry : 3F/39
 23332 ;;		On exit  : 0/0
 23333 ;;		Unchanged: 0/0
 23334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23338 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23339 ;;Total ram usage:        0 bytes
 23340 ;; Hardware stack levels used:    1
 23341 ;; Hardware stack levels required when called:    6
 23342 ;; This function calls:
 23343 ;;		Nothing
 23344 ;; This function is called by:
 23345 ;;		_EXT_INT_Initialize
 23346 ;; This function uses a reentrant model
 23347 ;;
 23348                           
 23349                           	psect	text108
 23350  0181C2                     __ptext108:
 23351                           	opt callstack 0
 23352  0181C2                     _INT0_SetInterruptHandler:
 23353                           	opt callstack 22
 23354                           
 23355                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 23356                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23357                           
 23358                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23359                           ;incstack = 0
 23360  0181C2  50E1               	movf	fsr1l,w,c
 23361  0181C4  0FFD               	addlw	-3
 23362  0181C6  6ED9               	movwf	fsr2l,c
 23363  0181C8  50E2               	movf	fsr1h,w,c
 23364  0181CA  6EDA               	movwf	fsr2h,c
 23365  0181CC  0EFF               	movlw	255
 23366  0181CE  22DA               	addwfc	fsr2h,f,c
 23367  0181D0  006F FF78  F016    	movff	postinc2,_INT0_InterruptHandler
 23368  0181D6  006F FF78  F017    	movff	postinc2,_INT0_InterruptHandler+1
 23369  0181DC  006F FF74  F018    	movff	postdec2,_INT0_InterruptHandler+2
 23370                           
 23371                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 23372  0181E2  52E5               	movf	postdec1,f,c
 23373  0181E4  52E5               	movf	postdec1,f,c
 23374  0181E6  52E5               	movf	postdec1,f,c
 23375  0181E8  0012               	return		;funcret
 23376  0181EA                     __end_of_INT0_SetInterruptHandler:
 23377                           	opt callstack 0
 23378                           
 23379 ;; *************** function _DMA2_Initialize *****************
 23380 ;; Defined at:
 23381 ;;		line 61 in file "mcc_generated_files/dma2.c"
 23382 ;; Parameters:    Size  Location     Type
 23383 ;;		None
 23384 ;; Auto vars:     Size  Location     Type
 23385 ;;		None
 23386 ;; Return value:  Size  Location     Type
 23387 ;;                  1  [STACK] void 
 23388 ;; Registers used:
 23389 ;;		wreg, status,2
 23390 ;; Tracked objects:
 23391 ;;		On entry : 3F/3D
 23392 ;;		On exit  : 3F/3B
 23393 ;;		Unchanged: 0/0
 23394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23398 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23399 ;;Total ram usage:        0 bytes
 23400 ;; Hardware stack levels used:    1
 23401 ;; Hardware stack levels required when called:    6
 23402 ;; This function calls:
 23403 ;;		Nothing
 23404 ;; This function is called by:
 23405 ;;		_SYSTEM_Initialize
 23406 ;; This function uses a reentrant model
 23407 ;;
 23408                           
 23409                           	psect	text109
 23410  017922                     __ptext109:
 23411                           	opt callstack 0
 23412  017922                     _DMA2_Initialize:
 23413                           	opt callstack 23
 23414                           
 23415                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 23416                           
 23417                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23418                           ;incstack = 0
 23419  017922  0E00               	movlw	0
 23420  017924  013B               	movlb	59	; () banked
 23421  017926  6FD9               	movwf	217,b	;volatile
 23422  017928  0E10               	movlw	16
 23423  01792A  6FDA               	movwf	218,b	;volatile
 23424  01792C  0E00               	movlw	0
 23425  01792E  6FDB               	movwf	219,b	;volatile
 23426                           
 23427                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 23428  017930  0E3F               	movlw	63
 23429  017932  6FD1               	movwf	209,b	;volatile
 23430  017934  0EBB               	movlw	187
 23431  017936  6FD0               	movwf	208,b	;volatile
 23432                           
 23433                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 23434  017938  0E03               	movlw	3
 23435  01793A  6FDD               	movwf	221,b	;volatile
 23436                           
 23437                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 23438  01793C  0E00               	movlw	0
 23439  01793E  6FD8               	movwf	216,b	;volatile
 23440  017940  0E01               	movlw	1
 23441  017942  6FD7               	movwf	215,b	;volatile
 23442                           
 23443                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 23444  017944  0E00               	movlw	0
 23445  017946  6FCF               	movwf	207,b	;volatile
 23446  017948  0E01               	movlw	1
 23447  01794A  6FCE               	movwf	206,b	;volatile
 23448                           
 23449                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x46;
 23450  01794C  0E46               	movlw	70
 23451  01794E  6FDF               	movwf	223,b	;volatile
 23452                           
 23453                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 23454  017950  0E3D               	movlw	61
 23455  017952  6FDE               	movwf	222,b	;volatile
 23456                           
 23457                           ; BSR set to: 59
 23458                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 23459  017954  0139               	movlb	57	; () banked
 23460  017956  97A5               	bcf	165,3,b	;volatile
 23461                           
 23462                           ; BSR set to: 57
 23463                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 23464  017958  95A5               	bcf	165,2,b	;volatile
 23465                           
 23466                           ; BSR set to: 57
 23467                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 23468  01795A  9BA5               	bcf	165,5,b	;volatile
 23469                           
 23470                           ; BSR set to: 57
 23471                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 23472  01795C  99A5               	bcf	165,4,b	;volatile
 23473                           
 23474                           ; BSR set to: 57
 23475                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 23476  01795E  9795               	bcf	149,3,b	;volatile
 23477                           
 23478                           ; BSR set to: 57
 23479                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 23480  017960  9595               	bcf	149,2,b	;volatile
 23481                           
 23482                           ; BSR set to: 57
 23483                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 23484  017962  9B95               	bcf	149,5,b	;volatile
 23485                           
 23486                           ; BSR set to: 57
 23487                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 23488  017964  9995               	bcf	149,4,b	;volatile
 23489  017966  9ED2               	bcf	16338,7,c	;# 
 23490  017968  0139               	banksel	14831	;# 
 23491  01796A  0E55               	movlw	85	;# 
 23492  01796C  6FEF               	movwf	14831,b	;# 
 23493  01796E  0EAA               	movlw	170	;# 
 23494  017970  6FEF               	movwf	14831,b	;# 
 23495  017972  81EF               	bsf	14831,0,b	;# 
 23496  017974  8ED2               	bsf	16338,7,c	;# 
 23497                           
 23498                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 23499  017976  013B               	movlb	59	; () banked
 23500  017978  6BDC               	clrf	220,b	;volatile
 23501                           
 23502                           ; BSR set to: 59
 23503                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23504  01797A  0012               	return		;funcret
 23505  01797C                     __end_of_DMA2_Initialize:
 23506                           	opt callstack 0
 23507                           
 23508 ;; *************** function _DMA1_Initialize *****************
 23509 ;; Defined at:
 23510 ;;		line 86 in file "mcc_generated_files/dma1.c"
 23511 ;; Parameters:    Size  Location     Type
 23512 ;;		None
 23513 ;; Auto vars:     Size  Location     Type
 23514 ;;		None
 23515 ;; Return value:  Size  Location     Type
 23516 ;;                  1  [STACK] void 
 23517 ;; Registers used:
 23518 ;;		wreg, status,2
 23519 ;; Tracked objects:
 23520 ;;		On entry : 3F/3B
 23521 ;;		On exit  : 3F/3B
 23522 ;;		Unchanged: 0/0
 23523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23528 ;;Total ram usage:        0 bytes
 23529 ;; Hardware stack levels used:    1
 23530 ;; Hardware stack levels required when called:    6
 23531 ;; This function calls:
 23532 ;;		Nothing
 23533 ;; This function is called by:
 23534 ;;		_SYSTEM_Initialize
 23535 ;; This function uses a reentrant model
 23536 ;;
 23537                           
 23538                           	psect	text110
 23539  01753A                     __ptext110:
 23540                           	opt callstack 0
 23541  01753A                     _DMA1_Initialize:
 23542                           	opt callstack 23
 23543                           
 23544                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 23545                           
 23546                           ; BSR set to: 59
 23547                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23548                           ;incstack = 0
 23549  01753A  0E00               	movlw	0
 23550  01753C  013B               	movlb	59	; () banked
 23551  01753E  6FF9               	movwf	249,b	;volatile
 23552  017540  0E10               	movlw	16
 23553  017542  6FFA               	movwf	250,b	;volatile
 23554  017544  0E00               	movlw	0
 23555  017546  6FFB               	movwf	251,b	;volatile
 23556                           
 23557                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 23558  017548  0E3D               	movlw	61
 23559  01754A  6FF1               	movwf	241,b	;volatile
 23560  01754C  0E11               	movlw	17
 23561  01754E  6FF0               	movwf	240,b	;volatile
 23562                           
 23563                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 23564  017550  0E03               	movlw	3
 23565  017552  6FFD               	movwf	253,b	;volatile
 23566                           
 23567                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 23568  017554  0E00               	movlw	0
 23569  017556  6FF8               	movwf	248,b	;volatile
 23570  017558  0E01               	movlw	1
 23571  01755A  6FF7               	movwf	247,b	;volatile
 23572                           
 23573                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 23574  01755C  0E00               	movlw	0
 23575  01755E  6FEF               	movwf	239,b	;volatile
 23576  017560  0E01               	movlw	1
 23577  017562  6FEE               	movwf	238,b	;volatile
 23578                           
 23579                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 23580  017564  0E15               	movlw	21
 23581  017566  6FFF               	movwf	255,b	;volatile
 23582                           
 23583                           ; BSR set to: 59
 23584                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 23585  017568  6BFE               	clrf	254,b	;volatile
 23586                           
 23587                           ; BSR set to: 59
 23588                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 23589  01756A  0139               	movlb	57	; () banked
 23590  01756C  93A2               	bcf	162,1,b	;volatile
 23591                           
 23592                           ; BSR set to: 57
 23593                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 23594  01756E  91A2               	bcf	162,0,b	;volatile
 23595                           
 23596                           ; BSR set to: 57
 23597                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 23598  017570  97A2               	bcf	162,3,b	;volatile
 23599                           
 23600                           ; BSR set to: 57
 23601                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 23602  017572  95A2               	bcf	162,2,b	;volatile
 23603                           
 23604                           ; BSR set to: 57
 23605                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 23606  017574  8392               	bsf	146,1,b	;volatile
 23607                           
 23608                           ; BSR set to: 57
 23609                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 23610  017576  8192               	bsf	146,0,b	;volatile
 23611                           
 23612                           ; BSR set to: 57
 23613                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 23614  017578  8792               	bsf	146,3,b	;volatile
 23615                           
 23616                           ; BSR set to: 57
 23617                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 23618  01757A  8592               	bsf	146,2,b	;volatile
 23619                           
 23620                           ; BSR set to: 57
 23621                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 23622  01757C  6BF1               	clrf	241,b	;volatile
 23623                           
 23624                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 23625  01757E  0E01               	movlw	1
 23626  017580  6FF2               	movwf	242,b	;volatile
 23627                           
 23628                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 23629  017582  0E04               	movlw	4
 23630  017584  6FF3               	movwf	243,b	;volatile
 23631                           
 23632                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 23633  017586  0E02               	movlw	2
 23634  017588  6FF4               	movwf	244,b	;volatile
 23635                           
 23636                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 23637  01758A  0E03               	movlw	3
 23638  01758C  6FF7               	movwf	247,b	;volatile
 23639  01758E  9ED2               	bcf	16338,7,c	;# 
 23640  017590  0139               	banksel	14831	;# 
 23641  017592  0E55               	movlw	85	;# 
 23642  017594  6FEF               	movwf	14831,b	;# 
 23643  017596  0EAA               	movlw	170	;# 
 23644  017598  6FEF               	movwf	14831,b	;# 
 23645  01759A  81EF               	bsf	14831,0,b	;# 
 23646  01759C  8ED2               	bsf	16338,7,c	;# 
 23647                           
 23648                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 23649  01759E  013B               	movlb	59	; () banked
 23650  0175A0  6BFC               	clrf	252,b	;volatile
 23651                           
 23652                           ; BSR set to: 59
 23653                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23654  0175A2  0012               	return		;funcret
 23655  0175A4                     __end_of_DMA1_Initialize:
 23656                           	opt callstack 0
 23657                           
 23658 ;; *************** function _CLKREF_Initialize *****************
 23659 ;; Defined at:
 23660 ;;		line 58 in file "mcc_generated_files/clkref.c"
 23661 ;; Parameters:    Size  Location     Type
 23662 ;;		None
 23663 ;; Auto vars:     Size  Location     Type
 23664 ;;		None
 23665 ;; Return value:  Size  Location     Type
 23666 ;;                  1  [STACK] void 
 23667 ;; Registers used:
 23668 ;;		wreg, status,2
 23669 ;; Tracked objects:
 23670 ;;		On entry : 3F/3B
 23671 ;;		On exit  : 3F/3C
 23672 ;;		Unchanged: 0/0
 23673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23677 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23678 ;;Total ram usage:        0 bytes
 23679 ;; Hardware stack levels used:    1
 23680 ;; Hardware stack levels required when called:    6
 23681 ;; This function calls:
 23682 ;;		Nothing
 23683 ;; This function is called by:
 23684 ;;		_SYSTEM_Initialize
 23685 ;; This function uses a reentrant model
 23686 ;;
 23687                           
 23688                           	psect	text111
 23689  0185CA                     __ptext111:
 23690                           	opt callstack 0
 23691  0185CA                     _CLKREF_Initialize:
 23692                           	opt callstack 23
 23693                           
 23694                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 23695                           
 23696                           ; BSR set to: 59
 23697                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23698                           ;incstack = 0
 23699  0185CA  013C               	movlb	60	; () banked
 23700  0185CC  6BE6               	clrf	230,b	;volatile
 23701                           
 23702                           ; BSR set to: 60
 23703                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 23704  0185CE  0E94               	movlw	148
 23705  0185D0  6FE5               	movwf	229,b	;volatile
 23706                           
 23707                           ; BSR set to: 60
 23708                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 23709  0185D2  0012               	return		;funcret
 23710  0185D4                     __end_of_CLKREF_Initialize:
 23711                           	opt callstack 0
 23712                           
 23713 ;; *************** function _ADCC_Initialize *****************
 23714 ;; Defined at:
 23715 ;;		line 65 in file "mcc_generated_files/adcc.c"
 23716 ;; Parameters:    Size  Location     Type
 23717 ;;		None
 23718 ;; Auto vars:     Size  Location     Type
 23719 ;;		None
 23720 ;; Return value:  Size  Location     Type
 23721 ;;                  1  [STACK] void 
 23722 ;; Registers used:
 23723 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 23724 ;; Tracked objects:
 23725 ;;		On entry : 3F/3E
 23726 ;;		On exit  : 0/0
 23727 ;;		Unchanged: 0/0
 23728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23732 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23733 ;;Total ram usage:        0 bytes
 23734 ;; Hardware stack levels used:    1
 23735 ;; Hardware stack levels required when called:    7
 23736 ;; This function calls:
 23737 ;;		_ADCC_SetADIInterruptHandler
 23738 ;;		_ADCC_SetADTIInterruptHandler
 23739 ;; This function is called by:
 23740 ;;		_SYSTEM_Initialize
 23741 ;; This function uses a reentrant model
 23742 ;;
 23743                           
 23744                           	psect	text112
 23745  0175A4                     __ptext112:
 23746                           	opt callstack 0
 23747  0175A4                     _ADCC_Initialize:
 23748                           	opt callstack 22
 23749                           
 23750                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 23751                           
 23752                           ; BSR set to: 60
 23753                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23754                           ;incstack = 0
 23755  0175A4  013E               	movlb	62	; () banked
 23756  0175A6  6BDE               	clrf	222,b	;volatile
 23757                           
 23758                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 23759  0175A8  6BDF               	clrf	223,b	;volatile
 23760                           
 23761                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 23762  0175AA  6BE0               	clrf	224,b	;volatile
 23763                           
 23764                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 23765  0175AC  6BE1               	clrf	225,b	;volatile
 23766                           
 23767                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 23768  0175AE  6BE4               	clrf	228,b	;volatile
 23769                           
 23770                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 23771  0175B0  6BE5               	clrf	229,b	;volatile
 23772                           
 23773                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 23774  0175B2  6BEA               	clrf	234,b	;volatile
 23775                           
 23776                           ; BSR set to: 62
 23777                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 23778  0175B4  0E40               	movlw	64
 23779  0175B6  6FEC               	movwf	236,b	;volatile
 23780                           
 23781                           ; BSR set to: 62
 23782                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 23783  0175B8  6BF1               	clrf	241,b	;volatile
 23784                           
 23785                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 23786  0175BA  0E20               	movlw	32
 23787  0175BC  6FF3               	movwf	243,b	;volatile
 23788                           
 23789                           ; BSR set to: 62
 23790                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 23791  0175BE  6BF4               	clrf	244,b	;volatile
 23792                           
 23793                           ; BSR set to: 62
 23794                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 23795  0175C0  6BF5               	clrf	245,b	;volatile
 23796                           
 23797                           ; BSR set to: 62
 23798                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 23799  0175C2  6BF6               	clrf	246,b	;volatile
 23800                           
 23801                           ; BSR set to: 62
 23802                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 23803  0175C4  6BF7               	clrf	247,b	;volatile
 23804                           
 23805                           ; BSR set to: 62
 23806                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 23807  0175C6  6BF9               	clrf	249,b	;volatile
 23808                           
 23809                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 23810  0175C8  0E5B               	movlw	91
 23811  0175CA  6FFA               	movwf	250,b	;volatile
 23812                           
 23813                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 23814  0175CC  0E27               	movlw	39
 23815  0175CE  6FFB               	movwf	251,b	;volatile
 23816                           
 23817                           ; BSR set to: 62
 23818                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 23819  0175D0  6BFC               	clrf	252,b	;volatile
 23820                           
 23821                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 23822  0175D2  0E02               	movlw	2
 23823  0175D4  6FFD               	movwf	253,b	;volatile
 23824                           
 23825                           ; BSR set to: 62
 23826                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 23827  0175D6  6BFE               	clrf	254,b	;volatile
 23828                           
 23829                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 23830  0175D8  0E07               	movlw	7
 23831  0175DA  6FFF               	movwf	255,b	;volatile
 23832                           
 23833                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 23834  0175DC  0E84               	movlw	132
 23835  0175DE  6FF8               	movwf	248,b	;volatile
 23836                           
 23837                           ; BSR set to: 62
 23838                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 23839  0175E0  0139               	movlb	57	; () banked
 23840  0175E2  95A1               	bcf	161,2,b	;volatile
 23841                           
 23842                           ; BSR set to: 57
 23843                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 23844  0175E4  8591               	bsf	145,2,b	;volatile
 23845                           
 23846                           ; BSR set to: 57
 23847                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 23848  0175E6  0E42               	movlw	low _ADCC_DefaultInterruptHandler
 23849  0175E8  6EE6               	movwf	postinc1,c
 23850  0175EA  0E86               	movlw	high _ADCC_DefaultInterruptHandler
 23851  0175EC  6EE6               	movwf	postinc1,c
 23852  0175EE  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 23853  0175F0  6EE6               	movwf	postinc1,c
 23854  0175F2  EC09  F0C1         	call	_ADCC_SetADIInterruptHandler	;wreg free
 23855                           
 23856                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 23857  0175F6  0139               	movlb	57	; () banked
 23858  0175F8  97A1               	bcf	161,3,b	;volatile
 23859                           
 23860                           ; BSR set to: 57
 23861                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 23862  0175FA  8791               	bsf	145,3,b	;volatile
 23863                           
 23864                           ; BSR set to: 57
 23865                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 23866  0175FC  0E42               	movlw	low _ADCC_DefaultInterruptHandler
 23867  0175FE  6EE6               	movwf	postinc1,c
 23868  017600  0E86               	movlw	high _ADCC_DefaultInterruptHandler
 23869  017602  6EE6               	movwf	postinc1,c
 23870  017604  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 23871  017606  6EE6               	movwf	postinc1,c
 23872  017608  ECF5  F0C0         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 23873                           
 23874                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23875  01760C  0012               	return		;funcret
 23876  01760E                     __end_of_ADCC_Initialize:
 23877                           	opt callstack 0
 23878                           
 23879 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 23880 ;; Defined at:
 23881 ;;		line 336 in file "mcc_generated_files/adcc.c"
 23882 ;; Parameters:    Size  Location     Type
 23883 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23884 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 23885 ;; Auto vars:     Size  Location     Type
 23886 ;;		None
 23887 ;; Return value:  Size  Location     Type
 23888 ;;                  1  [STACK] void 
 23889 ;; Registers used:
 23890 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23891 ;; Tracked objects:
 23892 ;;		On entry : 0/0
 23893 ;;		On exit  : 0/0
 23894 ;;		Unchanged: 0/0
 23895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23900 ;;Total ram usage:        0 bytes
 23901 ;; Hardware stack levels used:    1
 23902 ;; Hardware stack levels required when called:    6
 23903 ;; This function calls:
 23904 ;;		Nothing
 23905 ;; This function is called by:
 23906 ;;		_ADCC_Initialize
 23907 ;;		_start_adc_scan
 23908 ;; This function uses a reentrant model
 23909 ;;
 23910                           
 23911                           	psect	text113
 23912  0181EA                     __ptext113:
 23913                           	opt callstack 0
 23914  0181EA                     _ADCC_SetADTIInterruptHandler:
 23915                           	opt callstack 23
 23916                           
 23917                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 23918                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23919                           
 23920                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23921                           ;incstack = 0
 23922  0181EA  50E1               	movf	fsr1l,w,c
 23923  0181EC  0FFD               	addlw	-3
 23924  0181EE  6ED9               	movwf	fsr2l,c
 23925  0181F0  50E2               	movf	fsr1h,w,c
 23926  0181F2  6EDA               	movwf	fsr2h,c
 23927  0181F4  0EFF               	movlw	255
 23928  0181F6  22DA               	addwfc	fsr2h,f,c
 23929  0181F8  006F FF78  F001    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 23930  0181FE  006F FF78  F002    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 23931  018204  006F FF74  F003    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 23932                           
 23933                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 23934  01820A  52E5               	movf	postdec1,f,c
 23935  01820C  52E5               	movf	postdec1,f,c
 23936  01820E  52E5               	movf	postdec1,f,c
 23937  018210  0012               	return		;funcret
 23938  018212                     __end_of_ADCC_SetADTIInterruptHandler:
 23939                           	opt callstack 0
 23940                           
 23941 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 23942 ;; Defined at:
 23943 ;;		line 323 in file "mcc_generated_files/adcc.c"
 23944 ;; Parameters:    Size  Location     Type
 23945 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23946 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 23947 ;; Auto vars:     Size  Location     Type
 23948 ;;		None
 23949 ;; Return value:  Size  Location     Type
 23950 ;;                  1  [STACK] void 
 23951 ;; Registers used:
 23952 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23953 ;; Tracked objects:
 23954 ;;		On entry : 6/0
 23955 ;;		On exit  : 0/0
 23956 ;;		Unchanged: 0/0
 23957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23962 ;;Total ram usage:        0 bytes
 23963 ;; Hardware stack levels used:    1
 23964 ;; Hardware stack levels required when called:    6
 23965 ;; This function calls:
 23966 ;;		Nothing
 23967 ;; This function is called by:
 23968 ;;		_ADCC_Initialize
 23969 ;;		_start_adc_scan
 23970 ;; This function uses a reentrant model
 23971 ;;
 23972                           
 23973                           	psect	text114
 23974  018212                     __ptext114:
 23975                           	opt callstack 0
 23976  018212                     _ADCC_SetADIInterruptHandler:
 23977                           	opt callstack 23
 23978                           
 23979                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 23980                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23981                           
 23982                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23983                           ;incstack = 0
 23984  018212  50E1               	movf	fsr1l,w,c
 23985  018214  0FFD               	addlw	-3
 23986  018216  6ED9               	movwf	fsr2l,c
 23987  018218  50E2               	movf	fsr1h,w,c
 23988  01821A  6EDA               	movwf	fsr2h,c
 23989  01821C  0EFF               	movlw	255
 23990  01821E  22DA               	addwfc	fsr2h,f,c
 23991  018220  006F FF78  F004    	movff	postinc2,_ADCC_ADI_InterruptHandler
 23992  018226  006F FF78  F005    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 23993  01822C  006F FF74  F006    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 23994                           
 23995                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 23996  018232  52E5               	movf	postdec1,f,c
 23997  018234  52E5               	movf	postdec1,f,c
 23998  018236  52E5               	movf	postdec1,f,c
 23999  018238  0012               	return		;funcret
 24000  01823A                     __end_of_ADCC_SetADIInterruptHandler:
 24001                           	opt callstack 0
 24002                           
 24003 ;; *************** function _INT1_ISR *****************
 24004 ;; Defined at:
 24005 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 24006 ;; Parameters:    Size  Location     Type
 24007 ;;		None
 24008 ;; Auto vars:     Size  Location     Type
 24009 ;;		None
 24010 ;; Return value:  Size  Location     Type
 24011 ;;                  1    wreg      void 
 24012 ;; Registers used:
 24013 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 24014 ;; Tracked objects:
 24015 ;;		On entry : 0/0
 24016 ;;		On exit  : 0/0
 24017 ;;		Unchanged: 0/0
 24018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24021 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24022 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24023 ;;Total ram usage:        4 bytes
 24024 ;; Hardware stack levels used:    1
 24025 ;; Hardware stack levels required when called:    5
 24026 ;; This function calls:
 24027 ;;		_INT1_CallBack
 24028 ;; This function is called by:
 24029 ;;		Interrupt level 1
 24030 ;; This function uses a non-reentrant model
 24031 ;;
 24032                           
 24033                           	psect	text115
 24034  017CE8                     __ptext115:
 24035                           	opt callstack 0
 24036  017CE8                     _INT1_ISR:
 24037                           	opt callstack 12
 24038                           
 24039                           ;incstack = 0
 24040  017CE8  006F FF60  F0F6    	movff	status,??_INT1_ISR
 24041  017CEE  0060  F0C8  F0F7   	movff	btemp,??_INT1_ISR+1
 24042  017CF4  0060  F0F0  F0F8   	movff	btemp+10,??_INT1_ISR+2
 24043  017CFA  0060  F0F4  F0F9   	movff	btemp+11,??_INT1_ISR+3
 24044  017D00  EE16  F000         	lfsr	1,___intlo_sp
 24045                           
 24046                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 24047  017D04  0139               	movlb	57	; () banked
 24048  017D06  91A5               	bcf	165,0,b	;volatile
 24049                           
 24050                           ; BSR set to: 57
 24051                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 24052  017D08  ECB7  F0C1         	call	_INT1_CallBack	;wreg free
 24053  017D0C  0060  F3E4  F03D   	movff	??_INT1_ISR+3,btemp+11
 24054  017D12  0060  F3E0  F03C   	movff	??_INT1_ISR+2,btemp+10
 24055  017D18  0060  F3DC  F032   	movff	??_INT1_ISR+1,btemp
 24056  017D1E  0060  F3DB  FFD8   	movff	??_INT1_ISR,status
 24057  017D24  0011               	retfie		f
 24058  017D26                     __end_of_INT1_ISR:
 24059                           	opt callstack 0
 24060                           
 24061 ;; *************** function _INT1_CallBack *****************
 24062 ;; Defined at:
 24063 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 24064 ;; Parameters:    Size  Location     Type
 24065 ;;		None
 24066 ;; Auto vars:     Size  Location     Type
 24067 ;;		None
 24068 ;; Return value:  Size  Location     Type
 24069 ;;                  1  [STACK] void 
 24070 ;; Registers used:
 24071 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 24072 ;; Tracked objects:
 24073 ;;		On entry : 3F/39
 24074 ;;		On exit  : 0/0
 24075 ;;		Unchanged: 0/0
 24076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24081 ;;Total ram usage:        0 bytes
 24082 ;; Hardware stack levels used:    1
 24083 ;; Hardware stack levels required when called:    4
 24084 ;; This function calls:
 24085 ;;		Absolute function
 24086 ;;		_INT1_DefaultInterruptHandler
 24087 ;;		_switch_handler
 24088 ;; This function is called by:
 24089 ;;		_INT1_ISR
 24090 ;; This function uses a reentrant model
 24091 ;;
 24092                           
 24093                           	psect	text116
 24094  01836E                     __ptext116:
 24095                           	opt callstack 0
 24096  01836E                     _INT1_CallBack:
 24097                           	opt callstack 12
 24098                           
 24099                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 24100                           
 24101                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24102                           ;incstack = 0
 24103  01836E  5013               	movf	_INT1_InterruptHandler^0,w,c
 24104  018370  1014               	iorwf	(_INT1_InterruptHandler+1)^0,w,c
 24105  018372  1015               	iorwf	(_INT1_InterruptHandler+2)^0,w,c
 24106  018374  B4D8               	btfsc	status,2,c
 24107  018376  0012               	return	
 24108                           
 24109                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 24110  018378  D801               	call	u830_28
 24111  01837A  0012               	return	
 24112  01837C                     u830_28:
 24113  01837C  0005               	push	
 24114  01837E  6EFA               	movwf	pclath,c
 24115  018380  5013               	movf	_INT1_InterruptHandler^0,w,c
 24116  018382  6EFD               	movwf	tosl,c
 24117  018384  5014               	movf	(_INT1_InterruptHandler+1)^0,w,c
 24118  018386  6EFE               	movwf	tosh,c
 24119  018388  5015               	movf	(_INT1_InterruptHandler+2)^0,w,c
 24120  01838A  6EFF               	movwf	tosu,c
 24121  01838C  50FA               	movf	pclath,w,c
 24122  01838E  0012               	return		;indir
 24123  018390                     __end_of_INT1_CallBack:
 24124                           	opt callstack 0
 24125                           
 24126 ;; *************** function _INT1_DefaultInterruptHandler *****************
 24127 ;; Defined at:
 24128 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 24129 ;; Parameters:    Size  Location     Type
 24130 ;;		None
 24131 ;; Auto vars:     Size  Location     Type
 24132 ;;		None
 24133 ;; Return value:  Size  Location     Type
 24134 ;;                  1  [STACK] void 
 24135 ;; Registers used:
 24136 ;;		None
 24137 ;; Tracked objects:
 24138 ;;		On entry : 0/39
 24139 ;;		On exit  : 0/0
 24140 ;;		Unchanged: 0/0
 24141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24145 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24146 ;;Total ram usage:        0 bytes
 24147 ;; Hardware stack levels used:    1
 24148 ;; Hardware stack levels required when called:    3
 24149 ;; This function calls:
 24150 ;;		Nothing
 24151 ;; This function is called by:
 24152 ;;		_EXT_INT_Initialize
 24153 ;;		_INT1_CallBack
 24154 ;; This function uses a reentrant model
 24155 ;;
 24156                           
 24157                           	psect	text117
 24158  01863E                     __ptext117:
 24159                           	opt callstack 0
 24160  01863E                     _INT1_DefaultInterruptHandler:
 24161                           	opt callstack 12
 24162                           
 24163                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 24164                           
 24165                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24166                           ;incstack = 0
 24167  01863E  0012               	return		;funcret
 24168  018640                     __end_of_INT1_DefaultInterruptHandler:
 24169                           	opt callstack 0
 24170                           
 24171 ;; *************** function _switch_handler *****************
 24172 ;; Defined at:
 24173 ;;		line 58 in file "dio.c"
 24174 ;; Parameters:    Size  Location     Type
 24175 ;;		None
 24176 ;; Auto vars:     Size  Location     Type
 24177 ;;  i               1  [STACK] unsigned char 
 24178 ;;  sw_value        1  [STACK] unsigned char 
 24179 ;; Return value:  Size  Location     Type
 24180 ;;                  1  [STACK] void 
 24181 ;; Registers used:
 24182 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 24183 ;; Tracked objects:
 24184 ;;		On entry : 0/39
 24185 ;;		On exit  : 0/0
 24186 ;;		Unchanged: 0/0
 24187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24192 ;;Total ram usage:        0 bytes
 24193 ;; Hardware stack levels used:    1
 24194 ;; Hardware stack levels required when called:    3
 24195 ;; This function calls:
 24196 ;;		Nothing
 24197 ;; This function is called by:
 24198 ;;		_start_switch_handler
 24199 ;;		_INT1_CallBack
 24200 ;; This function uses a reentrant model
 24201 ;;
 24202                           
 24203                           	psect	text118
 24204  01624C                     __ptext118:
 24205                           	opt callstack 0
 24206  01624C                     _switch_handler:
 24207                           	opt callstack 0
 24208                           
 24209                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24210  01624C  52E6               	movf	postinc1,f,c
 24211  01624E  52E6               	movf	postinc1,f,c
 24212                           
 24213                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 24214                           ;stkvar	_i @ sp[(-2)+0]
 24215                           
 24216                           ;incstack = 0
 24217  016250  0EFE               	movlw	-2
 24218  016252  6AE3               	clrf	plusw1,c
 24219  016254  9EBD               	bcf	189,7,c	;volatile
 24220  016256  82BE               	bsf	190,1,c	;volatile
 24221                           
 24222                           ;dio.c: 72:  __nop();
 24223  016258  F000               	nop	
 24224                           
 24225                           ;dio.c: 73:  __nop();
 24226  01625A  F000               	nop	
 24227                           
 24228                           ;dio.c: 74:  __nop();
 24229  01625C  F000               	nop	
 24230  01625E  D019               	goto	l8643
 24231  016260                     l8631:
 24232                           
 24233                           ;dio.c: 79:    sw_value = PORTFbits.RF3;
 24234  016260  A6CF               	btfss	207,3,c	;volatile
 24235  016262  D011               	goto	u822_20
 24236  016264  D00D               	goto	u822_21
 24237  016266                     u819_28:
 24238                           
 24239                           ;stkvar	_sw_value @ sp[(-2)+1]
 24240  016266  0EFF               	movlw	-1
 24241  016268  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 24242                           
 24243                           ;dio.c: 80:    break;
 24244  01626E  D027               	goto	l8645
 24245  016270                     l8633:
 24246                           
 24247                           ;dio.c: 82:    sw_value = PORTFbits.RF2;
 24248  016270  A4CF               	btfss	207,2,c	;volatile
 24249  016272  D009               	goto	u822_20
 24250  016274  D005               	goto	u822_21
 24251  016276                     l8635:
 24252                           
 24253                           ;dio.c: 85:    sw_value = PORTFbits.RF1;
 24254  016276  A2CF               	btfss	207,1,c	;volatile
 24255  016278  D006               	goto	u822_20
 24256  01627A  D002               	goto	u822_21
 24257  01627C                     l8637:
 24258                           
 24259                           ;dio.c: 88:    sw_value = PORTFbits.RF0;
 24260  01627C  A0CF               	btfss	207,0,c	;volatile
 24261  01627E  D003               	goto	u822_20
 24262  016280                     u822_21:
 24263  016280  6A3D               	clrf	(btemp+11)^0,c
 24264  016282  2A3D               	incf	(btemp+11)^0,f,c
 24265  016284  D7F0               	goto	u819_28
 24266  016286                     u822_20:
 24267  016286  6A3D               	clrf	(btemp+11)^0,c
 24268  016288  D7EE               	goto	u819_28
 24269  01628A                     l8639:
 24270                           
 24271                           ;dio.c: 91:    sw_value = 1;
 24272                           ;stkvar	_sw_value @ sp[(-2)+1]
 24273  01628A  0EFF               	movlw	-1
 24274  01628C  6AE3               	clrf	plusw1,c
 24275  01628E  2AE3               	incf	plusw1,f,c
 24276                           
 24277                           ;dio.c: 92:    break;
 24278  016290  D016               	goto	l8645
 24279  016292                     l8643:
 24280                           
 24281                           ;stkvar	_i @ sp[(-2)+0]
 24282  016292  0EFE               	movlw	-2
 24283  016294  50E3               	movf	plusw1,w,c
 24284  016296  6E3C               	movwf	(btemp+10)^0,c
 24285  016298  6A3D               	clrf	(btemp+11)^0,c
 24286                           
 24287                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24288                           ; Switch size 1, requested type "simple"
 24289                           ; Number of cases is 1, Range of values is 0 to 0
 24290                           ; switch strategies available:
 24291                           ; Name         Instructions Cycles
 24292                           ; simple_byte            4     3 (average)
 24293                           ;	Chosen strategy is simple_byte
 24294  01629A  503D               	movf	(btemp+11)^0,w,c
 24295  01629C  0A00               	xorlw	0	; case 0
 24296  01629E  A4D8               	btfss	status,2,c
 24297  0162A0  D7F4               	goto	l8639
 24298                           
 24299                           ; Switch size 1, requested type "simple"
 24300                           ; Number of cases is 4, Range of values is 0 to 3
 24301                           ; switch strategies available:
 24302                           ; Name         Instructions Cycles
 24303                           ; simple_byte           13     7 (average)
 24304                           ;	Chosen strategy is simple_byte
 24305  0162A2  503C               	movf	(btemp+10)^0,w,c
 24306  0162A4  0A00               	xorlw	0	; case 0
 24307  0162A6  B4D8               	btfsc	status,2,c
 24308  0162A8  D7E9               	goto	l8637
 24309  0162AA  0A01               	xorlw	1	; case 1
 24310  0162AC  B4D8               	btfsc	status,2,c
 24311  0162AE  D7E3               	goto	l8635
 24312  0162B0  0A03               	xorlw	3	; case 2
 24313  0162B2  B4D8               	btfsc	status,2,c
 24314  0162B4  D7DD               	goto	l8633
 24315  0162B6  0A01               	xorlw	1	; case 3
 24316  0162B8  B4D8               	btfsc	status,2,c
 24317  0162BA  D7D2               	goto	l8631
 24318  0162BC  D7E6               	goto	l8639
 24319  0162BE                     l8645:
 24320                           
 24321                           ;dio.c: 96:   if (sw_value) {
 24322                           ;stkvar	_sw_value @ sp[(-2)+1]
 24323  0162BE  0EFF               	movlw	-1
 24324  0162C0  50E3               	movf	plusw1,w,c
 24325  0162C2  B4D8               	btfsc	status,2,c
 24326  0162C4  D014               	goto	l8651
 24327                           
 24328                           ;dio.c: 97:    if (S.button[i].sw == SW_ON) {
 24329                           ;stkvar	_i @ sp[(-2)+0]
 24330  0162C6  0EFE               	movlw	-2
 24331  0162C8  50E3               	movf	plusw1,w,c
 24332  0162CA  0D05               	mullw	5
 24333  0162CC  50F3               	movf	243,w,c
 24334  0162CE  0F60               	addlw	low _S
 24335  0162D0  6ED9               	movwf	fsr2l,c
 24336  0162D2  6ADA               	clrf	fsr2h,c
 24337  0162D4  04DE               	decf	postinc2,w,c
 24338  0162D6  A4D8               	btfss	status,2,c
 24339  0162D8  D041               	goto	l8659
 24340                           
 24341                           ;dio.c: 98:     S.button[i].sw = SW_OFF;
 24342                           ;stkvar	_i @ sp[(-2)+0]
 24343  0162DA  0EFE               	movlw	-2
 24344  0162DC  50E3               	movf	plusw1,w,c
 24345  0162DE  0D05               	mullw	5
 24346  0162E0  50F3               	movf	243,w,c
 24347  0162E2  0F60               	addlw	low _S
 24348  0162E4  6ED9               	movwf	fsr2l,c
 24349  0162E6  6ADA               	clrf	fsr2h,c
 24350  0162E8  0E00               	movlw	0
 24351  0162EA  6EDF               	movwf	indf2,c
 24352  0162EC  D037               	goto	l8659
 24353  0162EE                     l8651:
 24354                           
 24355                           ;dio.c: 101:    if (S.button[i].sw == SW_OFF) {
 24356                           ;stkvar	_i @ sp[(-2)+0]
 24357  0162EE  0EFE               	movlw	-2
 24358  0162F0  50E3               	movf	plusw1,w,c
 24359  0162F2  0D05               	mullw	5
 24360  0162F4  50F3               	movf	243,w,c
 24361  0162F6  0F60               	addlw	low _S
 24362  0162F8  6ED9               	movwf	fsr2l,c
 24363  0162FA  6ADA               	clrf	fsr2h,c
 24364  0162FC  50DF               	movf	indf2,w,c
 24365  0162FE  A4D8               	btfss	status,2,c
 24366  016300  D02D               	goto	l8659
 24367                           
 24368                           ;dio.c: 102:     S.button[i].sw = SW_ON;
 24369                           ;stkvar	_i @ sp[(-2)+0]
 24370  016302  0EFE               	movlw	-2
 24371  016304  50E3               	movf	plusw1,w,c
 24372  016306  0D05               	mullw	5
 24373  016308  50F3               	movf	243,w,c
 24374  01630A  0F60               	addlw	low _S
 24375  01630C  6ED9               	movwf	fsr2l,c
 24376  01630E  6ADA               	clrf	fsr2h,c
 24377  016310  0E01               	movlw	1
 24378  016312  6EDF               	movwf	indf2,c
 24379                           
 24380                           ;dio.c: 103:     S.button[i].count = V.timerint_count;
 24381  016314  EE20  F1B7         	lfsr	2,_V+183	;volatile
 24382                           
 24383                           ;stkvar	_i @ sp[(-2)+0]
 24384  016318  0EFE               	movlw	-2
 24385  01631A  50E3               	movf	plusw1,w,c
 24386  01631C  0D05               	mullw	5
 24387  01631E  50F3               	movf	243,w,c
 24388  016320  0F61               	addlw	low (_S+1)
 24389  016322  6EE9               	movwf	fsr0l,c
 24390  016324  6AEA               	clrf	fsr0h,c
 24391  016326  006F FF7B FFEE     	movff	postinc2,postinc0
 24392  01632C  006F FF7B FFEE     	movff	postinc2,postinc0
 24393  016332  006F FF7B FFEE     	movff	postinc2,postinc0
 24394  016338  006F FF7B FFEE     	movff	postinc2,postinc0
 24395                           
 24396                           ;dio.c: 104:     S.sw_bitmap |= 1 << i;
 24397                           ;stkvar	_i @ sp[(-2)+0]
 24398  01633E  0EFE               	movlw	-2
 24399  016340  006F FF8C  F03D    	movff	plusw1,btemp+11
 24400  016346  0E01               	movlw	1
 24401  016348  6E3C               	movwf	(btemp+10)^0,c
 24402  01634A  2A3D               	incf	(btemp+11)^0,f,c
 24403  01634C  D002               	goto	u826_24
 24404  01634E                     u826_25:
 24405  01634E  90D8               	bcf	status,0,c
 24406  016350  363C               	rlcf	(btemp+10)^0,f,c
 24407  016352                     u826_24:
 24408  016352  2E3D               	decfsz	(btemp+11)^0,f,c
 24409  016354  D7FC               	goto	u826_25
 24410  016356  503C               	movf	(btemp+10)^0,w,c
 24411  016358  0100               	movlb	0	; () banked
 24412  01635A  1388               	iorwf	(_S+40)& (0+255),f,b	;volatile
 24413  01635C                     l8659:
 24414                           
 24415                           ;dio.c: 107:  } while (++i < 4);
 24416                           ;stkvar	_i @ sp[(-2)+0]
 24417  01635C  0EFE               	movlw	-2
 24418  01635E  2AE3               	incf	plusw1,f,c
 24419  016360  0EFE               	movlw	-2
 24420  016362  006F FF8C  F032    	movff	plusw1,btemp
 24421  016368  0E03               	movlw	3
 24422  01636A  6432               	cpfsgt	btemp^0,c
 24423  01636C  D792               	goto	l8643
 24424                           
 24425                           ;dio.c: 110:  do { LATEbits.LATE1 = 0; } while(0);
 24426  01636E  92BE               	bcf	190,1,c	;volatile
 24427  016370  A4BE               	btfss	190,2,c	;volatile
 24428  016372  D002               	goto	u828_20
 24429  016374  0E01               	movlw	1
 24430  016376  D001               	goto	u828_26
 24431  016378                     u828_20:
 24432  016378  0E00               	movlw	0
 24433  01637A                     u828_26:
 24434  01637A  0AFF               	xorlw	255
 24435  01637C  6E3D               	movwf	(btemp+11)^0,c
 24436  01637E  463D               	rlncf	(btemp+11)^0,f,c
 24437  016380  463D               	rlncf	(btemp+11)^0,f,c
 24438  016382  50BE               	movf	190,w,c	;volatile
 24439  016384  183D               	xorwf	(btemp+11)^0,w,c
 24440  016386  0BFB               	andlw	-5
 24441  016388  183D               	xorwf	(btemp+11)^0,w,c
 24442  01638A  6EBE               	movwf	190,c	;volatile
 24443  01638C  8EBD               	bsf	189,7,c	;volatile
 24444                           
 24445                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 24446  01638E  52E5               	movf	postdec1,f,c
 24447  016390  52E5               	movf	postdec1,f,c
 24448  016392  0012               	return		;funcret
 24449  016394                     __end_of_switch_handler:
 24450                           	opt callstack 0
 24451                           
 24452 ;; *************** function _TMR5_ISR *****************
 24453 ;; Defined at:
 24454 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 24455 ;; Parameters:    Size  Location     Type
 24456 ;;		None
 24457 ;; Auto vars:     Size  Location     Type
 24458 ;;		None
 24459 ;; Return value:  Size  Location     Type
 24460 ;;                  1    wreg      void 
 24461 ;; Registers used:
 24462 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 24463 ;; Tracked objects:
 24464 ;;		On entry : 0/0
 24465 ;;		On exit  : 0/0
 24466 ;;		Unchanged: 0/0
 24467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24470 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24471 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24472 ;;Total ram usage:        4 bytes
 24473 ;; Hardware stack levels used:    1
 24474 ;; Hardware stack levels required when called:    5
 24475 ;; This function calls:
 24476 ;;		_TMR5_CallBack
 24477 ;;		_TMR5_WriteTimer
 24478 ;; This function is called by:
 24479 ;;		Interrupt level 1
 24480 ;; This function uses a non-reentrant model
 24481 ;;
 24482                           
 24483                           	psect	text119
 24484  01797C                     __ptext119:
 24485                           	opt callstack 0
 24486  01797C                     _TMR5_ISR:
 24487                           	opt callstack 12
 24488                           
 24489                           ;incstack = 0
 24490  01797C  006F FF60  F1C5    	movff	status,??_TMR5_ISR+2
 24491  017982  0060  F0F4  F1C6   	movff	btemp+11,??_TMR5_ISR+3
 24492  017988  EE16  F000         	lfsr	1,___intlo_sp
 24493                           
 24494                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 24495  01798C  0139               	movlb	57	; () banked
 24496  01798E  9DA8               	bcf	168,6,b	;volatile
 24497                           
 24498                           ; BSR set to: 57
 24499                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 24500  017990  0060  F08F  FFE6   	movff	_timer5ReloadVal,postinc1
 24501  017996  0060  F093  FFE6   	movff	_timer5ReloadVal+1,postinc1
 24502  01799C  EC53  F0BE         	call	_TMR5_WriteTimer	;wreg free
 24503                           
 24504                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 24505  0179A0  0101               	movlb	1	; () banked
 24506  0179A2  51A9               	movf	(_V+169)& (0+255),w,b	;volatile
 24507  0179A4  6FC3               	movwf	??_TMR5_ISR& (0+255),b
 24508  0179A6  6BC4               	clrf	(??_TMR5_ISR+1)& (0+255),b
 24509  0179A8  0E05               	movlw	5
 24510  0179AA  27C3               	addwf	??_TMR5_ISR& (0+255),f,b
 24511  0179AC  0E00               	movlw	0
 24512  0179AE  23C4               	addwfc	(??_TMR5_ISR+1)& (0+255),f,b
 24513  0179B0  4A21               	infsnz	TMR5_ISR@CountCallBack^0,f,c	;volatile
 24514  0179B2  2A22               	incf	(TMR5_ISR@CountCallBack+1)^0,f,c	;volatile
 24515  0179B4  51C3               	movf	??_TMR5_ISR& (0+255),w,b
 24516  0179B6  5C21               	subwf	TMR5_ISR@CountCallBack^0,w,c	;volatile
 24517  0179B8  51C4               	movf	(??_TMR5_ISR+1)& (0+255),w,b
 24518  0179BA  5822               	subwfb	(TMR5_ISR@CountCallBack+1)^0,w,c	;volatile
 24519  0179BC  A0D8               	btfss	status,0,c
 24520  0179BE  D004               	goto	i1l1045
 24521                           
 24522                           ; BSR set to: 1
 24523                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 24524  0179C0  EC93  F0C1         	call	_TMR5_CallBack	;wreg free
 24525                           
 24526                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 24527  0179C4  6A21               	clrf	TMR5_ISR@CountCallBack^0,c	;volatile
 24528  0179C6  6A22               	clrf	(TMR5_ISR@CountCallBack+1)^0,c	;volatile
 24529  0179C8                     i1l1045:
 24530  0179C8  0060  F718  F03D   	movff	??_TMR5_ISR+3,btemp+11
 24531  0179CE  0060  F717  FFD8   	movff	??_TMR5_ISR+2,status
 24532  0179D4  0011               	retfie		f
 24533  0179D6                     __end_of_TMR5_ISR:
 24534                           	opt callstack 0
 24535                           
 24536 ;; *************** function _TMR5_WriteTimer *****************
 24537 ;; Defined at:
 24538 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 24539 ;; Parameters:    Size  Location     Type
 24540 ;;  timerVal        2  [STACK] unsigned short 
 24541 ;; Auto vars:     Size  Location     Type
 24542 ;;		None
 24543 ;; Return value:  Size  Location     Type
 24544 ;;                  1  [STACK] void 
 24545 ;; Registers used:
 24546 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 24547 ;; Tracked objects:
 24548 ;;		On entry : 3F/39
 24549 ;;		On exit  : 0/0
 24550 ;;		Unchanged: 0/0
 24551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24555 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24556 ;;Total ram usage:        0 bytes
 24557 ;; Hardware stack levels used:    1
 24558 ;; Hardware stack levels required when called:    3
 24559 ;; This function calls:
 24560 ;;		Nothing
 24561 ;; This function is called by:
 24562 ;;		_TMR5_ISR
 24563 ;; This function uses a reentrant model
 24564 ;;
 24565                           
 24566                           	psect	text120
 24567  017CA6                     __ptext120:
 24568                           	opt callstack 0
 24569  017CA6                     _TMR5_WriteTimer:
 24570                           	opt callstack 13
 24571                           
 24572                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 24573                           
 24574                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24575                           ;incstack = 0
 24576  017CA6  A49A               	btfss	154,2,c	;volatile
 24577  017CA8  D00F               	goto	l8765
 24578                           
 24579                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 24580  017CAA  909A               	bcf	154,0,c	;volatile
 24581                           
 24582                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 24583                           ;stkvar	_timerVal @ sp[(0)+-2]
 24584  017CAC  0EFF               	movlw	255
 24585  017CAE  24E1               	addwf	fsr1l,w,c
 24586  017CB0  6ED9               	movwf	fsr2l,c
 24587  017CB2  0EFF               	movlw	255
 24588  017CB4  20E2               	addwfc	fsr1h,w,c
 24589  017CB6  6EDA               	movwf	fsr2h,c
 24590  017CB8  50DF               	movf	indf2,w,c
 24591  017CBA  6E99               	movwf	153,c	;volatile
 24592                           
 24593                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 24594                           ;stkvar	_timerVal @ sp[(0)+-2]
 24595  017CBC  0EFE               	movlw	-2
 24596  017CBE  006F FF8F FF98     	movff	plusw1,16280	;volatile
 24597                           
 24598                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 24599  017CC4  809A               	bsf	154,0,c	;volatile
 24600                           
 24601                           ;mcc_generated_files/tmr5.c: 142:  } else {
 24602  017CC6  D00C               	goto	l1028
 24603  017CC8                     l8765:
 24604                           
 24605                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 24606                           ;stkvar	_timerVal @ sp[(0)+-2]
 24607  017CC8  0EFF               	movlw	255
 24608  017CCA  24E1               	addwf	fsr1l,w,c
 24609  017CCC  6ED9               	movwf	fsr2l,c
 24610  017CCE  0EFF               	movlw	255
 24611  017CD0  20E2               	addwfc	fsr1h,w,c
 24612  017CD2  6EDA               	movwf	fsr2h,c
 24613  017CD4  50DF               	movf	indf2,w,c
 24614  017CD6  6E99               	movwf	153,c	;volatile
 24615                           
 24616                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 24617                           ;stkvar	_timerVal @ sp[(0)+-2]
 24618  017CD8  0EFE               	movlw	-2
 24619  017CDA  006F FF8F FF98     	movff	plusw1,16280	;volatile
 24620  017CE0                     l1028:
 24621                           
 24622                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 24623  017CE0  52E5               	movf	postdec1,f,c
 24624  017CE2  52E5               	movf	postdec1,f,c
 24625  017CE4  0012               	return		;funcret
 24626  017CE6                     __end_of_TMR5_WriteTimer:
 24627                           	opt callstack 0
 24628                           
 24629 ;; *************** function _TMR5_CallBack *****************
 24630 ;; Defined at:
 24631 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 24632 ;; Parameters:    Size  Location     Type
 24633 ;;		None
 24634 ;; Auto vars:     Size  Location     Type
 24635 ;;		None
 24636 ;; Return value:  Size  Location     Type
 24637 ;;                  1  [STACK] void 
 24638 ;; Registers used:
 24639 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 24640 ;; Tracked objects:
 24641 ;;		On entry : 3F/1
 24642 ;;		On exit  : 0/0
 24643 ;;		Unchanged: 0/0
 24644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24649 ;;Total ram usage:        0 bytes
 24650 ;; Hardware stack levels used:    1
 24651 ;; Hardware stack levels required when called:    4
 24652 ;; This function calls:
 24653 ;;		Absolute function
 24654 ;;		_TMR5_DefaultInterruptHandler
 24655 ;; This function is called by:
 24656 ;;		_TMR5_ISR
 24657 ;; This function uses a reentrant model
 24658 ;;
 24659                           
 24660                           	psect	text121
 24661  018326                     __ptext121:
 24662                           	opt callstack 0
 24663  018326                     _TMR5_CallBack:
 24664                           	opt callstack 12
 24665                           
 24666                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 24667                           
 24668                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24669                           ;incstack = 0
 24670  018326  0100               	movlb	0	; () banked
 24671  018328  51C1               	movf	_TMR5_InterruptHandler& (0+255),w,b
 24672  01832A  11C2               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 24673  01832C  11C3               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 24674  01832E  B4D8               	btfsc	status,2,c
 24675  018330  0012               	return	
 24676                           
 24677                           ; BSR set to: 0
 24678                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 24679  018332  D801               	call	u841_28
 24680  018334  0012               	return	
 24681  018336                     u841_28:
 24682  018336  0005               	push	
 24683  018338  6EFA               	movwf	pclath,c
 24684  01833A  51C1               	movf	_TMR5_InterruptHandler& (0+255),w,b
 24685  01833C  6EFD               	movwf	tosl,c
 24686  01833E  51C2               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 24687  018340  6EFE               	movwf	tosh,c
 24688  018342  51C3               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 24689  018344  6EFF               	movwf	tosu,c
 24690  018346  50FA               	movf	pclath,w,c
 24691  018348  0012               	return		;indir
 24692  01834A                     __end_of_TMR5_CallBack:
 24693                           	opt callstack 0
 24694                           
 24695 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 24696 ;; Defined at:
 24697 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 24698 ;; Parameters:    Size  Location     Type
 24699 ;;		None
 24700 ;; Auto vars:     Size  Location     Type
 24701 ;;		None
 24702 ;; Return value:  Size  Location     Type
 24703 ;;                  1  [STACK] void 
 24704 ;; Registers used:
 24705 ;;		wreg, status,2, status,0, btemp+11
 24706 ;; Tracked objects:
 24707 ;;		On entry : 3F/0
 24708 ;;		On exit  : 3F/1
 24709 ;;		Unchanged: 0/0
 24710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24715 ;;Total ram usage:        0 bytes
 24716 ;; Hardware stack levels used:    1
 24717 ;; Hardware stack levels required when called:    3
 24718 ;; This function calls:
 24719 ;;		Nothing
 24720 ;; This function is called by:
 24721 ;;		_TMR5_Initialize
 24722 ;;		_TMR5_CallBack
 24723 ;; This function uses a reentrant model
 24724 ;;
 24725                           
 24726                           	psect	text122
 24727  01823A                     __ptext122:
 24728                           	opt callstack 0
 24729  01823A                     _TMR5_DefaultInterruptHandler:
 24730                           	opt callstack 12
 24731                           
 24732                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 24733                           
 24734                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24735                           ;incstack = 0
 24736  01823A  A0BE               	btfss	190,0,c	;volatile
 24737  01823C  D002               	goto	u797_20
 24738  01823E  0E01               	movlw	1
 24739  018240  D001               	goto	u797_26
 24740  018242                     u797_20:
 24741  018242  0E00               	movlw	0
 24742  018244                     u797_26:
 24743  018244  0AFF               	xorlw	255
 24744  018246  6E3D               	movwf	(btemp+11)^0,c
 24745  018248  50BE               	movf	190,w,c	;volatile
 24746  01824A  183D               	xorwf	(btemp+11)^0,w,c
 24747  01824C  0BFE               	andlw	-2
 24748  01824E  183D               	xorwf	(btemp+11)^0,w,c
 24749  018250  6EBE               	movwf	190,c	;volatile
 24750                           
 24751                           ;mcc_generated_files/tmr5.c: 200:  V.timerint_count++;
 24752  018252  0E01               	movlw	1
 24753  018254  0101               	movlb	1	; () banked
 24754  018256  27B7               	addwf	(_V+183)& (0+255),f,b	;volatile
 24755  018258  0E00               	movlw	0
 24756  01825A  23B8               	addwfc	(_V+184)& (0+255),f,b	;volatile
 24757  01825C  23B9               	addwfc	(_V+185)& (0+255),f,b	;volatile
 24758  01825E  23BA               	addwfc	(_V+186)& (0+255),f,b	;volatile
 24759                           
 24760                           ; BSR set to: 1
 24761                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 24762  018260  0012               	return		;funcret
 24763  018262                     __end_of_TMR5_DefaultInterruptHandler:
 24764                           	opt callstack 0
 24765                           
 24766 ;; *************** function _INT0_ISR *****************
 24767 ;; Defined at:
 24768 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 24769 ;; Parameters:    Size  Location     Type
 24770 ;;		None
 24771 ;; Auto vars:     Size  Location     Type
 24772 ;;		None
 24773 ;; Return value:  Size  Location     Type
 24774 ;;                  1    wreg      void 
 24775 ;; Registers used:
 24776 ;;		wreg, status,2, status,0, pclath, tosl
 24777 ;; Tracked objects:
 24778 ;;		On entry : 0/0
 24779 ;;		On exit  : 0/0
 24780 ;;		Unchanged: 0/0
 24781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24785 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24786 ;;Total ram usage:        0 bytes
 24787 ;; Hardware stack levels used:    1
 24788 ;; Hardware stack levels required when called:    2
 24789 ;; This function calls:
 24790 ;;		_INT0_CallBack
 24791 ;; This function is called by:
 24792 ;;		Interrupt level 2
 24793 ;; This function uses a non-reentrant model
 24794 ;;
 24795                           
 24796                           	psect	text123
 24797  0185AC                     __ptext123:
 24798                           	opt callstack 0
 24799  0185AC                     _INT0_ISR:
 24800                           	opt callstack 12
 24801                           
 24802                           ; BSR set to: 1
 24803                           ;incstack = 0
 24804  0185AC  EE14  F000         	lfsr	1,___inthi_sp
 24805                           
 24806                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 24807  0185B0  0139               	movlb	57	; () banked
 24808  0185B2  91A1               	bcf	161,0,b	;volatile
 24809                           
 24810                           ; BSR set to: 57
 24811                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 24812  0185B4  ECC8  F0C1         	call	_INT0_CallBack	;wreg free
 24813  0185B8  0011               	retfie		f
 24814  0185BA                     __end_of_INT0_ISR:
 24815                           	opt callstack 0
 24816                           
 24817 ;; *************** function _INT0_CallBack *****************
 24818 ;; Defined at:
 24819 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 24820 ;; Parameters:    Size  Location     Type
 24821 ;;		None
 24822 ;; Auto vars:     Size  Location     Type
 24823 ;;		None
 24824 ;; Return value:  Size  Location     Type
 24825 ;;                  1  [STACK] void 
 24826 ;; Registers used:
 24827 ;;		wreg, status,2, status,0, pclath, tosl
 24828 ;; Tracked objects:
 24829 ;;		On entry : 3F/39
 24830 ;;		On exit  : 0/0
 24831 ;;		Unchanged: 0/0
 24832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24836 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24837 ;;Total ram usage:        0 bytes
 24838 ;; Hardware stack levels used:    1
 24839 ;; Hardware stack levels required when called:    1
 24840 ;; This function calls:
 24841 ;;		Absolute function
 24842 ;;		_INT0_DefaultInterruptHandler
 24843 ;; This function is called by:
 24844 ;;		_INT0_ISR
 24845 ;; This function uses a reentrant model
 24846 ;;
 24847                           
 24848                           	psect	text124
 24849  018390                     __ptext124:
 24850                           	opt callstack 0
 24851  018390                     _INT0_CallBack:
 24852                           	opt callstack 12
 24853                           
 24854                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 24855                           
 24856                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24857                           ;incstack = 0
 24858  018390  5016               	movf	_INT0_InterruptHandler^0,w,c
 24859  018392  1017               	iorwf	(_INT0_InterruptHandler+1)^0,w,c
 24860  018394  1018               	iorwf	(_INT0_InterruptHandler+2)^0,w,c
 24861  018396  B4D8               	btfsc	status,2,c
 24862  018398  0012               	return	
 24863                           
 24864                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 24865  01839A  D801               	call	u391_48
 24866  01839C  0012               	return	
 24867  01839E                     u391_48:
 24868  01839E  0005               	push	
 24869  0183A0  6EFA               	movwf	pclath,c
 24870  0183A2  5016               	movf	_INT0_InterruptHandler^0,w,c
 24871  0183A4  6EFD               	movwf	tosl,c
 24872  0183A6  5017               	movf	(_INT0_InterruptHandler+1)^0,w,c
 24873  0183A8  6EFE               	movwf	tosh,c
 24874  0183AA  5018               	movf	(_INT0_InterruptHandler+2)^0,w,c
 24875  0183AC  6EFF               	movwf	tosu,c
 24876  0183AE  50FA               	movf	pclath,w,c
 24877  0183B0  0012               	return		;indir
 24878  0183B2                     __end_of_INT0_CallBack:
 24879                           	opt callstack 0
 24880                           
 24881 ;; *************** function _INT0_DefaultInterruptHandler *****************
 24882 ;; Defined at:
 24883 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 24884 ;; Parameters:    Size  Location     Type
 24885 ;;		None
 24886 ;; Auto vars:     Size  Location     Type
 24887 ;;		None
 24888 ;; Return value:  Size  Location     Type
 24889 ;;                  1  [STACK] void 
 24890 ;; Registers used:
 24891 ;;		None
 24892 ;; Tracked objects:
 24893 ;;		On entry : 0/39
 24894 ;;		On exit  : 0/0
 24895 ;;		Unchanged: 0/0
 24896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24900 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24901 ;;Total ram usage:        0 bytes
 24902 ;; Hardware stack levels used:    1
 24903 ;; This function calls:
 24904 ;;		Nothing
 24905 ;; This function is called by:
 24906 ;;		_EXT_INT_Initialize
 24907 ;;		_INT0_CallBack
 24908 ;; This function uses a reentrant model
 24909 ;;
 24910                           
 24911                           	psect	text125
 24912  018640                     __ptext125:
 24913                           	opt callstack 0
 24914  018640                     _INT0_DefaultInterruptHandler:
 24915                           	opt callstack 12
 24916                           
 24917                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 24918                           
 24919                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24920                           ;incstack = 0
 24921  018640  0012               	return		;funcret
 24922  018642                     __end_of_INT0_DefaultInterruptHandler:
 24923                           	opt callstack 0
 24924                           
 24925 ;; *************** function _Default_ISR *****************
 24926 ;; Defined at:
 24927 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 24928 ;; Parameters:    Size  Location     Type
 24929 ;;		None
 24930 ;; Auto vars:     Size  Location     Type
 24931 ;;		None
 24932 ;; Return value:  Size  Location     Type
 24933 ;;                  1    wreg      void 
 24934 ;; Registers used:
 24935 ;;		None
 24936 ;; Tracked objects:
 24937 ;;		On entry : 0/0
 24938 ;;		On exit  : 0/0
 24939 ;;		Unchanged: 0/0
 24940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24944 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24945 ;;Total ram usage:        0 bytes
 24946 ;; Hardware stack levels used:    1
 24947 ;; This function calls:
 24948 ;;		Nothing
 24949 ;; This function is called by:
 24950 ;;		Interrupt level 2
 24951 ;; This function uses a non-reentrant model
 24952 ;;
 24953                           
 24954                           	psect	text126
 24955  018638                     __ptext126:
 24956                           	opt callstack 0
 24957  018638                     _Default_ISR:
 24958                           	opt callstack 14
 24959                           
 24960                           ;incstack = 0
 24961  018638  EE14  F000         	lfsr	1,___inthi_sp
 24962  01863C  0011               	retfie		f
 24963  01863E                     __end_of_Default_ISR:
 24964                           	opt callstack 0
 24965                           
 24966 ;; *************** function _ADCC_ISR *****************
 24967 ;; Defined at:
 24968 ;;		line 314 in file "mcc_generated_files/adcc.c"
 24969 ;; Parameters:    Size  Location     Type
 24970 ;;		None
 24971 ;; Auto vars:     Size  Location     Type
 24972 ;;		None
 24973 ;; Return value:  Size  Location     Type
 24974 ;;                  1    wreg      void 
 24975 ;; Registers used:
 24976 ;;		wreg, status,2, status,0, pclath, tosl
 24977 ;; Tracked objects:
 24978 ;;		On entry : 0/0
 24979 ;;		On exit  : 0/0
 24980 ;;		Unchanged: 0/0
 24981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24986 ;;Total ram usage:        0 bytes
 24987 ;; Hardware stack levels used:    1
 24988 ;; Hardware stack levels required when called:    1
 24989 ;; This function calls:
 24990 ;;		Absolute function
 24991 ;;		_ADCC_DefaultInterruptHandler
 24992 ;;		_adc_int_handler
 24993 ;; This function is called by:
 24994 ;;		Interrupt level 2
 24995 ;; This function uses a non-reentrant model
 24996 ;;
 24997                           
 24998                           	psect	text127
 24999  017FE0                     __ptext127:
 25000                           	opt callstack 0
 25001  017FE0                     _ADCC_ISR:
 25002                           	opt callstack 13
 25003                           
 25004                           ;incstack = 0
 25005  017FE0  EE14  F000         	lfsr	1,___inthi_sp
 25006                           
 25007                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 25008  017FE4  0139               	movlb	57	; () banked
 25009  017FE6  95A1               	bcf	161,2,b	;volatile
 25010                           
 25011                           ; BSR set to: 57
 25012                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 25013  017FE8  5004               	movf	_ADCC_ADI_InterruptHandler^0,w,c
 25014  017FEA  1005               	iorwf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
 25015  017FEC  1006               	iorwf	(_ADCC_ADI_InterruptHandler+2)^0,w,c
 25016  017FEE  B4D8               	btfsc	status,2,c
 25017  017FF0  0011               	retfie		f
 25018                           
 25019                           ; BSR set to: 57
 25020                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 25021  017FF2  D801               	call	i2u420_48
 25022  017FF4  0011               	retfie		f
 25023  017FF6                     i2u420_48:
 25024  017FF6  0005               	push	
 25025  017FF8  6EFA               	movwf	pclath,c
 25026  017FFA  5004               	movf	_ADCC_ADI_InterruptHandler^0,w,c
 25027  017FFC  6EFD               	movwf	tosl,c
 25028  017FFE  5005               	movf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
 25029  018000  6EFE               	movwf	tosh,c
 25030  018002  5006               	movf	(_ADCC_ADI_InterruptHandler+2)^0,w,c
 25031  018004  6EFF               	movwf	tosu,c
 25032  018006  50FA               	movf	pclath,w,c
 25033  018008  0012               	return		;indir
 25034  01800A                     __end_of_ADCC_ISR:
 25035                           	opt callstack 0
 25036                           
 25037 ;; *************** function _adc_int_t_handler *****************
 25038 ;; Defined at:
 25039 ;;		line 127 in file "daq.c"
 25040 ;; Parameters:    Size  Location     Type
 25041 ;;		None
 25042 ;; Auto vars:     Size  Location     Type
 25043 ;;		None
 25044 ;; Return value:  Size  Location     Type
 25045 ;;                  1  [STACK] void 
 25046 ;; Registers used:
 25047 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 25048 ;; Tracked objects:
 25049 ;;		On entry : 3F/39
 25050 ;;		On exit  : 1/0
 25051 ;;		Unchanged: 0/0
 25052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25057 ;;Total ram usage:        0 bytes
 25058 ;; Hardware stack levels used:    1
 25059 ;; Hardware stack levels required when called:    1
 25060 ;; This function calls:
 25061 ;;		_ADCC_DischargeSampleCapacitor
 25062 ;;		_ADCC_StartConversion
 25063 ;; This function is called by:
 25064 ;;		_start_adc_scan
 25065 ;;		_ADCC_ThresholdISR
 25066 ;; This function uses a reentrant model
 25067 ;;
 25068                           
 25069                           	psect	text128
 25070  017442                     __ptext128:
 25071                           	opt callstack 0
 25072  017442                     _adc_int_t_handler:
 25073                           	opt callstack 12
 25074                           
 25075                           ;daq.c: 132:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 25076                           
 25077                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25078                           ;incstack = 0
 25079  017442  013E               	movlb	62	; () banked
 25080  017444  51E6               	movf	230,w,b	;volatile
 25081  017446  006F FB9C  F032    	movff	16103,btemp	;volatile
 25082  01744C  6A33               	clrf	(btemp+1)^0,c
 25083  01744E  0060  F0C8  F033   	movff	btemp,btemp+1
 25084  017454  6A32               	clrf	btemp^0,c
 25085  017456  2632               	addwf	btemp^0,f,c
 25086  017458  0E00               	movlw	0
 25087  01745A  2233               	addwfc	(btemp+1)^0,f,c
 25088  01745C  0100               	movlb	0	; () banked
 25089  01745E  51EB               	movf	(_R+36)& (0+255),w,b	;volatile
 25090  017460  0D02               	mullw	2
 25091  017462  50F3               	movf	243,w,c
 25092  017464  0FC7               	addlw	low _R
 25093  017466  6ED9               	movwf	fsr2l,c
 25094  017468  6ADA               	clrf	fsr2h,c
 25095  01746A  0060  F0CB  FFDE   	movff	btemp,postinc2
 25096  017470  0060  F0CF  FFDD   	movff	btemp+1,postdec2
 25097  017476                     l11915:
 25098                           
 25099                           ;daq.c: 134:   if (++R.scan_index > 0XD) {
 25100  017476  0100               	movlb	0	; () banked
 25101  017478  2BEB               	incf	(_R+36)& (0+255),f,b	;volatile
 25102  01747A  0E0D               	movlw	13
 25103  01747C  65EB               	cpfsgt	(_R+36)& (0+255),b	;volatile
 25104  01747E  D003               	goto	l11921
 25105                           
 25106                           ; BSR set to: 0
 25107                           ;daq.c: 135:    R.done = 1;
 25108  017480  0E01               	movlw	1
 25109  017482  6FEE               	movwf	(_R+39)& (0+255),b	;volatile
 25110  017484  0012               	return	
 25111  017486                     l11921:
 25112                           
 25113                           ; BSR set to: 0
 25114                           ;daq.c: 141:  } while (!((R.scan_select >> R.scan_index) &0x1));
 25115  017486  0060  F3AC  F03D   	movff	_R+36,btemp+11	;volatile
 25116  01748C  EE20  F0EC         	lfsr	2,_R+37	;volatile
 25117  017490  006F FF78  F03A    	movff	postinc2,btemp+8
 25118  017496  006F FF74  F03B    	movff	postdec2,btemp+9
 25119  01749C  2A3D               	incf	(btemp+11)^0,f,c
 25120  01749E  D003               	goto	u1263_44
 25121  0174A0                     u1263_45:
 25122  0174A0  90D8               	bcf	status,0,c
 25123  0174A2  323B               	rrcf	(btemp+9)^0,f,c
 25124  0174A4  323A               	rrcf	(btemp+8)^0,f,c
 25125  0174A6                     u1263_44:
 25126  0174A6  2E3D               	decfsz	(btemp+11)^0,f,c
 25127  0174A8  D7FB               	goto	u1263_45
 25128  0174AA  A03A               	btfss	(btemp+8)^0,0,c
 25129  0174AC  D7E4               	goto	l11915
 25130                           
 25131                           ;daq.c: 142:  ADCC_DischargeSampleCapacitor();
 25132  0174AE  ECFB  F0C2         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 25133                           
 25134                           ; BSR set to: 62
 25135                           ;daq.c: 143:  ADCC_StartConversion(R.scan_index & 0xf);
 25136  0174B2  0100               	movlb	0	; () banked
 25137  0174B4  51EB               	movf	(_R+36)& (0+255),w,b	;volatile
 25138  0174B6  0B0F               	andlw	15
 25139  0174B8  6EE6               	movwf	postinc1,c
 25140  0174BA  ECAE  F0C2         	call	_ADCC_StartConversion	;wreg free
 25141                           
 25142                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 25143  0174BE  0012               	return		;funcret
 25144  0174C0                     __end_of_adc_int_t_handler:
 25145                           	opt callstack 0
 25146                           
 25147 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 25148 ;; Defined at:
 25149 ;;		line 339 in file "mcc_generated_files/adcc.c"
 25150 ;; Parameters:    Size  Location     Type
 25151 ;;		None
 25152 ;; Auto vars:     Size  Location     Type
 25153 ;;		None
 25154 ;; Return value:  Size  Location     Type
 25155 ;;                  1  [STACK] void 
 25156 ;; Registers used:
 25157 ;;		None
 25158 ;; Tracked objects:
 25159 ;;		On entry : 3F/39
 25160 ;;		On exit  : 0/0
 25161 ;;		Unchanged: 0/0
 25162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25167 ;;Total ram usage:        0 bytes
 25168 ;; Hardware stack levels used:    1
 25169 ;; This function calls:
 25170 ;;		Nothing
 25171 ;; This function is called by:
 25172 ;;		_ADCC_Initialize
 25173 ;;		_ADCC_ISR
 25174 ;;		_ADCC_ThresholdISR
 25175 ;; This function uses a reentrant model
 25176 ;;
 25177                           
 25178                           	psect	text129
 25179  018642                     __ptext129:
 25180                           	opt callstack 0
 25181  018642                     _ADCC_DefaultInterruptHandler:
 25182                           	opt callstack 13
 25183                           
 25184                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 25185                           
 25186                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25187                           ;incstack = 0
 25188  018642  0012               	return		;funcret
 25189  018644                     __end_of_ADCC_DefaultInterruptHandler:
 25190                           	opt callstack 0
 25191                           
 25192 ;; *************** function _adc_int_handler *****************
 25193 ;; Defined at:
 25194 ;;		line 117 in file "daq.c"
 25195 ;; Parameters:    Size  Location     Type
 25196 ;;		None
 25197 ;; Auto vars:     Size  Location     Type
 25198 ;;		None
 25199 ;; Return value:  Size  Location     Type
 25200 ;;                  1  [STACK] void 
 25201 ;; Registers used:
 25202 ;;		None
 25203 ;; Tracked objects:
 25204 ;;		On entry : 3F/39
 25205 ;;		On exit  : 0/0
 25206 ;;		Unchanged: 0/0
 25207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25211 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25212 ;;Total ram usage:        0 bytes
 25213 ;; Hardware stack levels used:    1
 25214 ;; This function calls:
 25215 ;;		Nothing
 25216 ;; This function is called by:
 25217 ;;		_start_adc_scan
 25218 ;;		_ADCC_ISR
 25219 ;; This function uses a reentrant model
 25220 ;;
 25221                           
 25222                           	psect	text130
 25223  018644                     __ptext130:
 25224                           	opt callstack 0
 25225  018644                     _adc_int_handler:
 25226                           	opt callstack 13
 25227                           
 25228                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25229                           
 25230                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25231                           ;incstack = 0
 25232  018644  0012               	return		;funcret
 25233  018646                     __end_of_adc_int_handler:
 25234                           	opt callstack 0
 25235                           
 25236 ;; *************** function _ADCC_ThresholdISR *****************
 25237 ;; Defined at:
 25238 ;;		line 327 in file "mcc_generated_files/adcc.c"
 25239 ;; Parameters:    Size  Location     Type
 25240 ;;		None
 25241 ;; Auto vars:     Size  Location     Type
 25242 ;;		None
 25243 ;; Return value:  Size  Location     Type
 25244 ;;                  1    wreg      void 
 25245 ;; Registers used:
 25246 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 25247 ;; Tracked objects:
 25248 ;;		On entry : 0/0
 25249 ;;		On exit  : 0/0
 25250 ;;		Unchanged: 0/0
 25251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25254 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25255 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25256 ;;Total ram usage:        5 bytes
 25257 ;; Hardware stack levels used:    1
 25258 ;; Hardware stack levels required when called:    2
 25259 ;; This function calls:
 25260 ;;		Absolute function
 25261 ;;		_ADCC_DefaultInterruptHandler
 25262 ;;		_adc_int_t_handler
 25263 ;; This function is called by:
 25264 ;;		Interrupt level 2
 25265 ;; This function uses a non-reentrant model
 25266 ;;
 25267                           
 25268                           	psect	text131
 25269  017610                     __ptext131:
 25270                           	opt callstack 0
 25271  017610                     _ADCC_ThresholdISR:
 25272                           	opt callstack 12
 25273                           
 25274                           ;incstack = 0
 25275  017610  0060  F0C8  F052   	movff	btemp,??_ADCC_ThresholdISR
 25276  017616  0060  F0CC  F053   	movff	btemp+1,??_ADCC_ThresholdISR+1
 25277  01761C  0060  F0E8  F054   	movff	btemp+8,??_ADCC_ThresholdISR+2
 25278  017622  0060  F0EC  F055   	movff	btemp+9,??_ADCC_ThresholdISR+3
 25279  017628  0060  F0F4  F056   	movff	btemp+11,??_ADCC_ThresholdISR+4
 25280  01762E  EE14  F000         	lfsr	1,___inthi_sp
 25281                           
 25282                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 25283  017632  0139               	movlb	57	; () banked
 25284  017634  97A1               	bcf	161,3,b	;volatile
 25285                           
 25286                           ; BSR set to: 57
 25287                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 25288  017636  5001               	movf	_ADCC_ADTI_InterruptHandler^0,w,c
 25289  017638  1002               	iorwf	(_ADCC_ADTI_InterruptHandler+1)^0,w,c
 25290  01763A  1003               	iorwf	(_ADCC_ADTI_InterruptHandler+2)^0,w,c
 25291  01763C  B4D8               	btfsc	status,2,c
 25292  01763E  D00C               	goto	i2u1266_49
 25293                           
 25294                           ; BSR set to: 57
 25295                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 25296  017640  D801               	call	i2u1266_48
 25297  017642  D00A               	goto	i2u1266_49
 25298  017644                     i2u1266_48:
 25299  017644  0005               	push	
 25300  017646  6EFA               	movwf	pclath,c
 25301  017648  5001               	movf	_ADCC_ADTI_InterruptHandler^0,w,c
 25302  01764A  6EFD               	movwf	tosl,c
 25303  01764C  5002               	movf	(_ADCC_ADTI_InterruptHandler+1)^0,w,c
 25304  01764E  6EFE               	movwf	tosh,c
 25305  017650  5003               	movf	(_ADCC_ADTI_InterruptHandler+2)^0,w,c
 25306  017652  6EFF               	movwf	tosu,c
 25307  017654  50FA               	movf	pclath,w,c
 25308  017656  0012               	return		;indir
 25309  017658                     i2u1266_49:
 25310  017658  0060  F158  F03D   	movff	??_ADCC_ThresholdISR+4,btemp+11
 25311  01765E  0060  F154  F03B   	movff	??_ADCC_ThresholdISR+3,btemp+9
 25312  017664  0060  F150  F03A   	movff	??_ADCC_ThresholdISR+2,btemp+8
 25313  01766A  0060  F14C  F033   	movff	??_ADCC_ThresholdISR+1,btemp+1
 25314  017670  0060  F148  F032   	movff	??_ADCC_ThresholdISR,btemp
 25315  017676  0011               	retfie		f
 25316  017678                     __end_of_ADCC_ThresholdISR:
 25317                           	opt callstack 0
 25318                           
 25319 ;; *************** function _UART1_tx_vect_isr *****************
 25320 ;; Defined at:
 25321 ;;		line 199 in file "mcc_generated_files/uart1.c"
 25322 ;; Parameters:    Size  Location     Type
 25323 ;;		None
 25324 ;; Auto vars:     Size  Location     Type
 25325 ;;		None
 25326 ;; Return value:  Size  Location     Type
 25327 ;;                  1    wreg      void 
 25328 ;; Registers used:
 25329 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 25330 ;; Tracked objects:
 25331 ;;		On entry : 0/0
 25332 ;;		On exit  : 0/0
 25333 ;;		Unchanged: 0/0
 25334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25338 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25339 ;;Total ram usage:        0 bytes
 25340 ;; Hardware stack levels used:    1
 25341 ;; Hardware stack levels required when called:    1
 25342 ;; This function calls:
 25343 ;;		Absolute function
 25344 ;;		_UART1_Transmit_ISR
 25345 ;; This function is called by:
 25346 ;;		Interrupt level 2
 25347 ;; This function uses a non-reentrant model
 25348 ;;
 25349                           
 25350                           	psect	text132
 25351  018264                     __ptext132:
 25352                           	opt callstack 0
 25353  018264                     _UART1_tx_vect_isr:
 25354                           	opt callstack 13
 25355                           
 25356                           ;incstack = 0
 25357  018264  EE14  F000         	lfsr	1,___inthi_sp
 25358                           
 25359                           ;mcc_generated_files/uart1.c: 201:  if (UART1_TxInterruptHandler) {
 25360  018268  5007               	movf	_UART1_TxInterruptHandler^0,w,c
 25361  01826A  1008               	iorwf	(_UART1_TxInterruptHandler+1)^0,w,c
 25362  01826C  1009               	iorwf	(_UART1_TxInterruptHandler+2)^0,w,c
 25363  01826E  B4D8               	btfsc	status,2,c
 25364  018270  0011               	retfie		f
 25365                           
 25366                           ;mcc_generated_files/uart1.c: 202:   UART1_TxInterruptHandler();
 25367  018272  D801               	call	i2u859_48
 25368  018274  0011               	retfie		f
 25369  018276                     i2u859_48:
 25370  018276  0005               	push	
 25371  018278  6EFA               	movwf	pclath,c
 25372  01827A  5007               	movf	_UART1_TxInterruptHandler^0,w,c
 25373  01827C  6EFD               	movwf	tosl,c
 25374  01827E  5008               	movf	(_UART1_TxInterruptHandler+1)^0,w,c
 25375  018280  6EFE               	movwf	tosh,c
 25376  018282  5009               	movf	(_UART1_TxInterruptHandler+2)^0,w,c
 25377  018284  6EFF               	movwf	tosu,c
 25378  018286  50FA               	movf	pclath,w,c
 25379  018288  0012               	return		;indir
 25380  01828A                     __end_of_UART1_tx_vect_isr:
 25381                           	opt callstack 0
 25382                           
 25383 ;; *************** function _UART1_Transmit_ISR *****************
 25384 ;; Defined at:
 25385 ;;		line 213 in file "mcc_generated_files/uart1.c"
 25386 ;; Parameters:    Size  Location     Type
 25387 ;;		None
 25388 ;; Auto vars:     Size  Location     Type
 25389 ;;		None
 25390 ;; Return value:  Size  Location     Type
 25391 ;;                  1  [STACK] void 
 25392 ;; Registers used:
 25393 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25394 ;; Tracked objects:
 25395 ;;		On entry : 0/0
 25396 ;;		On exit  : 3B/39
 25397 ;;		Unchanged: 0/0
 25398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25403 ;;Total ram usage:        0 bytes
 25404 ;; Hardware stack levels used:    1
 25405 ;; This function calls:
 25406 ;;		Nothing
 25407 ;; This function is called by:
 25408 ;;		_UART1_Initialize
 25409 ;;		_UART1_tx_vect_isr
 25410 ;; This function uses a reentrant model
 25411 ;;
 25412                           
 25413                           	psect	text133
 25414  017F5C                     __ptext133:
 25415                           	opt callstack 0
 25416  017F5C                     _UART1_Transmit_ISR:
 25417                           	opt callstack 13
 25418                           
 25419                           ;mcc_generated_files/uart1.c: 216:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 25420                           
 25421                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25422                           ;incstack = 0
 25423  017F5C  0E40               	movlw	64
 25424  017F5E  602F               	cpfslt	_uart1TxBufferRemaining^0,c
 25425  017F60  D010               	goto	l581
 25426                           
 25427                           ;mcc_generated_files/uart1.c: 217:   U1TXB = uart1TxBuffer[uart1TxTail++];
 25428  017F62  0EAC               	movlw	low _uart1TxBuffer
 25429  017F64  2430               	addwf	_uart1TxTail^0,w,c	;volatile
 25430  017F66  6ED9               	movwf	fsr2l,c
 25431  017F68  6ADA               	clrf	fsr2h,c
 25432  017F6A  0E03               	movlw	high _uart1TxBuffer
 25433  017F6C  22DA               	addwfc	fsr2h,f,c
 25434  017F6E  50DF               	movf	indf2,w,c
 25435  017F70  013D               	movlb	61	; () banked
 25436  017F72  6FEA               	movwf	234,b	;volatile
 25437                           
 25438                           ; BSR set to: 61
 25439  017F74  2A30               	incf	_uart1TxTail^0,f,c	;volatile
 25440                           
 25441                           ; BSR set to: 61
 25442                           ;mcc_generated_files/uart1.c: 218:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 25443  017F76  0E3F               	movlw	63
 25444  017F78  6430               	cpfsgt	_uart1TxTail^0,c
 25445  017F7A  D001               	goto	l8717
 25446                           
 25447                           ; BSR set to: 61
 25448                           ;mcc_generated_files/uart1.c: 219:    uart1TxTail = 0;
 25449  017F7C  6A30               	clrf	_uart1TxTail^0,c	;volatile
 25450  017F7E                     l8717:
 25451                           
 25452                           ; BSR set to: 61
 25453                           ;mcc_generated_files/uart1.c: 221:   uart1TxBufferRemaining++;
 25454  017F7E  2A2F               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 25455                           
 25456                           ;mcc_generated_files/uart1.c: 222:  } else {
 25457  017F80  0012               	return	
 25458  017F82                     l581:
 25459                           
 25460                           ;mcc_generated_files/uart1.c: 223:   PIE3bits.U1TXIE = 0;
 25461  017F82  0139               	movlb	57	; () banked
 25462  017F84  9993               	bcf	147,4,b	;volatile
 25463                           
 25464                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 25465  017F86  0012               	return		;funcret
 25466  017F88                     __end_of_UART1_Transmit_ISR:
 25467                           	opt callstack 0
 25468                           
 25469 ;; *************** function _UART1_rx_vect_isr *****************
 25470 ;; Defined at:
 25471 ;;		line 206 in file "mcc_generated_files/uart1.c"
 25472 ;; Parameters:    Size  Location     Type
 25473 ;;		None
 25474 ;; Auto vars:     Size  Location     Type
 25475 ;;		None
 25476 ;; Return value:  Size  Location     Type
 25477 ;;                  1    wreg      void 
 25478 ;; Registers used:
 25479 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 25480 ;; Tracked objects:
 25481 ;;		On entry : 0/0
 25482 ;;		On exit  : 0/0
 25483 ;;		Unchanged: 0/0
 25484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25489 ;;Total ram usage:        0 bytes
 25490 ;; Hardware stack levels used:    1
 25491 ;; Hardware stack levels required when called:    1
 25492 ;; This function calls:
 25493 ;;		Absolute function
 25494 ;;		_UART1_Receive_ISR
 25495 ;; This function is called by:
 25496 ;;		Interrupt level 2
 25497 ;; This function uses a non-reentrant model
 25498 ;;
 25499                           
 25500                           	psect	text134
 25501  01828C                     __ptext134:
 25502                           	opt callstack 0
 25503  01828C                     _UART1_rx_vect_isr:
 25504                           	opt callstack 13
 25505                           
 25506                           ;incstack = 0
 25507  01828C  EE14  F000         	lfsr	1,___inthi_sp
 25508                           
 25509                           ;mcc_generated_files/uart1.c: 208:  if (UART1_RxInterruptHandler) {
 25510  018290  500A               	movf	_UART1_RxInterruptHandler^0,w,c
 25511  018292  100B               	iorwf	(_UART1_RxInterruptHandler+1)^0,w,c
 25512  018294  100C               	iorwf	(_UART1_RxInterruptHandler+2)^0,w,c
 25513  018296  B4D8               	btfsc	status,2,c
 25514  018298  0011               	retfie		f
 25515                           
 25516                           ;mcc_generated_files/uart1.c: 209:   UART1_RxInterruptHandler();
 25517  01829A  D801               	call	i2u861_48
 25518  01829C  0011               	retfie		f
 25519  01829E                     i2u861_48:
 25520  01829E  0005               	push	
 25521  0182A0  6EFA               	movwf	pclath,c
 25522  0182A2  500A               	movf	_UART1_RxInterruptHandler^0,w,c
 25523  0182A4  6EFD               	movwf	tosl,c
 25524  0182A6  500B               	movf	(_UART1_RxInterruptHandler+1)^0,w,c
 25525  0182A8  6EFE               	movwf	tosh,c
 25526  0182AA  500C               	movf	(_UART1_RxInterruptHandler+2)^0,w,c
 25527  0182AC  6EFF               	movwf	tosu,c
 25528  0182AE  50FA               	movf	pclath,w,c
 25529  0182B0  0012               	return		;indir
 25530  0182B2                     __end_of_UART1_rx_vect_isr:
 25531                           	opt callstack 0
 25532                           
 25533 ;; *************** function _UART1_Receive_ISR *****************
 25534 ;; Defined at:
 25535 ;;		line 229 in file "mcc_generated_files/uart1.c"
 25536 ;; Parameters:    Size  Location     Type
 25537 ;;		None
 25538 ;; Auto vars:     Size  Location     Type
 25539 ;;		None
 25540 ;; Return value:  Size  Location     Type
 25541 ;;                  1  [STACK] void 
 25542 ;; Registers used:
 25543 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25544 ;; Tracked objects:
 25545 ;;		On entry : 0/0
 25546 ;;		On exit  : 0/0
 25547 ;;		Unchanged: 0/0
 25548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25552 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25553 ;;Total ram usage:        0 bytes
 25554 ;; Hardware stack levels used:    1
 25555 ;; This function calls:
 25556 ;;		Nothing
 25557 ;; This function is called by:
 25558 ;;		_UART1_Initialize
 25559 ;;		_UART1_rx_vect_isr
 25560 ;; This function uses a reentrant model
 25561 ;;
 25562                           
 25563                           	psect	text135
 25564  01842C                     __ptext135:
 25565                           	opt callstack 0
 25566  01842C                     _UART1_Receive_ISR:
 25567                           	opt callstack 13
 25568                           
 25569                           ;mcc_generated_files/uart1.c: 232:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 25570                           
 25571                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25572                           ;incstack = 0
 25573  01842C  0E00               	movlw	low _uart1RxBuffer
 25574  01842E  242E               	addwf	_uart1RxHead^0,w,c	;volatile
 25575  018430  6ED9               	movwf	fsr2l,c
 25576  018432  6ADA               	clrf	fsr2h,c
 25577  018434  0E06               	movlw	high _uart1RxBuffer
 25578  018436  22DA               	addwfc	fsr2h,f,c
 25579  018438  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 25580  01843E  2A2E               	incf	_uart1RxHead^0,f,c	;volatile
 25581                           
 25582                           ;mcc_generated_files/uart1.c: 233:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 25583  018440  282E               	incf	_uart1RxHead^0,w,c
 25584  018442  B4D8               	btfsc	status,2,c
 25585                           
 25586                           ;mcc_generated_files/uart1.c: 234:   uart1RxHead = 0;
 25587  018444  6A2E               	clrf	_uart1RxHead^0,c	;volatile
 25588                           
 25589                           ;mcc_generated_files/uart1.c: 236:  uart1RxCount++;
 25590  018446  2A2C               	incf	_uart1RxCount^0,f,c	;volatile
 25591                           
 25592                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 25593  018448  0012               	return		;funcret
 25594  01844A                     __end_of_UART1_Receive_ISR:
 25595                           	opt callstack 0
 25596                           
 25597 ;; *************** function _UART2_tx_vect_isr *****************
 25598 ;; Defined at:
 25599 ;;		line 195 in file "mcc_generated_files/uart2.c"
 25600 ;; Parameters:    Size  Location     Type
 25601 ;;		None
 25602 ;; Auto vars:     Size  Location     Type
 25603 ;;		None
 25604 ;; Return value:  Size  Location     Type
 25605 ;;                  1    wreg      void 
 25606 ;; Registers used:
 25607 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 25608 ;; Tracked objects:
 25609 ;;		On entry : 0/0
 25610 ;;		On exit  : 0/0
 25611 ;;		Unchanged: 0/0
 25612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25617 ;;Total ram usage:        0 bytes
 25618 ;; Hardware stack levels used:    1
 25619 ;; Hardware stack levels required when called:    1
 25620 ;; This function calls:
 25621 ;;		Absolute function
 25622 ;;		_UART2_Transmit_ISR
 25623 ;; This function is called by:
 25624 ;;		Interrupt level 2
 25625 ;; This function uses a non-reentrant model
 25626 ;;
 25627                           
 25628                           	psect	text136
 25629  0182B4                     __ptext136:
 25630                           	opt callstack 0
 25631  0182B4                     _UART2_tx_vect_isr:
 25632                           	opt callstack 13
 25633                           
 25634                           ;incstack = 0
 25635  0182B4  EE14  F000         	lfsr	1,___inthi_sp
 25636                           
 25637                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 25638  0182B8  500D               	movf	_UART2_TxInterruptHandler^0,w,c
 25639  0182BA  100E               	iorwf	(_UART2_TxInterruptHandler+1)^0,w,c
 25640  0182BC  100F               	iorwf	(_UART2_TxInterruptHandler+2)^0,w,c
 25641  0182BE  B4D8               	btfsc	status,2,c
 25642  0182C0  0011               	retfie		f
 25643                           
 25644                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 25645  0182C2  D801               	call	i2u863_48
 25646  0182C4  0011               	retfie		f
 25647  0182C6                     i2u863_48:
 25648  0182C6  0005               	push	
 25649  0182C8  6EFA               	movwf	pclath,c
 25650  0182CA  500D               	movf	_UART2_TxInterruptHandler^0,w,c
 25651  0182CC  6EFD               	movwf	tosl,c
 25652  0182CE  500E               	movf	(_UART2_TxInterruptHandler+1)^0,w,c
 25653  0182D0  6EFE               	movwf	tosh,c
 25654  0182D2  500F               	movf	(_UART2_TxInterruptHandler+2)^0,w,c
 25655  0182D4  6EFF               	movwf	tosu,c
 25656  0182D6  50FA               	movf	pclath,w,c
 25657  0182D8  0012               	return		;indir
 25658  0182DA                     __end_of_UART2_tx_vect_isr:
 25659                           	opt callstack 0
 25660                           
 25661 ;; *************** function _UART2_Transmit_ISR *****************
 25662 ;; Defined at:
 25663 ;;		line 213 in file "mcc_generated_files/uart2.c"
 25664 ;; Parameters:    Size  Location     Type
 25665 ;;		None
 25666 ;; Auto vars:     Size  Location     Type
 25667 ;;		None
 25668 ;; Return value:  Size  Location     Type
 25669 ;;                  1  [STACK] void 
 25670 ;; Registers used:
 25671 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25672 ;; Tracked objects:
 25673 ;;		On entry : 0/0
 25674 ;;		On exit  : 3B/39
 25675 ;;		Unchanged: 0/0
 25676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25681 ;;Total ram usage:        0 bytes
 25682 ;; Hardware stack levels used:    1
 25683 ;; This function calls:
 25684 ;;		Nothing
 25685 ;; This function is called by:
 25686 ;;		_UART2_Initialize
 25687 ;;		_UART2_tx_vect_isr
 25688 ;; This function uses a reentrant model
 25689 ;;
 25690                           
 25691                           	psect	text137
 25692  017F88                     __ptext137:
 25693                           	opt callstack 0
 25694  017F88                     _UART2_Transmit_ISR:
 25695                           	opt callstack 13
 25696                           
 25697                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 25698                           
 25699                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25700                           ;incstack = 0
 25701  017F88  0E40               	movlw	64
 25702  017F8A  6029               	cpfslt	_uart2TxBufferRemaining^0,c
 25703  017F8C  D010               	goto	l701
 25704                           
 25705                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 25706  017F8E  0E6C               	movlw	low _uart2TxBuffer
 25707  017F90  242A               	addwf	_uart2TxTail^0,w,c	;volatile
 25708  017F92  6ED9               	movwf	fsr2l,c
 25709  017F94  6ADA               	clrf	fsr2h,c
 25710  017F96  0E03               	movlw	high _uart2TxBuffer
 25711  017F98  22DA               	addwfc	fsr2h,f,c
 25712  017F9A  50DF               	movf	indf2,w,c
 25713  017F9C  013D               	movlb	61	; () banked
 25714  017F9E  6FD2               	movwf	210,b	;volatile
 25715                           
 25716                           ; BSR set to: 61
 25717  017FA0  2A2A               	incf	_uart2TxTail^0,f,c	;volatile
 25718                           
 25719                           ; BSR set to: 61
 25720                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 25721  017FA2  0E3F               	movlw	63
 25722  017FA4  642A               	cpfsgt	_uart2TxTail^0,c
 25723  017FA6  D001               	goto	l8739
 25724                           
 25725                           ; BSR set to: 61
 25726                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 25727  017FA8  6A2A               	clrf	_uart2TxTail^0,c	;volatile
 25728  017FAA                     l8739:
 25729                           
 25730                           ; BSR set to: 61
 25731                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 25732  017FAA  2A29               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 25733                           
 25734                           ;mcc_generated_files/uart2.c: 224:     }
 25735  017FAC  0012               	return	
 25736  017FAE                     l701:
 25737                           
 25738                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 25739  017FAE  0139               	movlb	57	; () banked
 25740  017FB0  9796               	bcf	150,3,b	;volatile
 25741                           
 25742                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 25743  017FB2  0012               	return		;funcret
 25744  017FB4                     __end_of_UART2_Transmit_ISR:
 25745                           	opt callstack 0
 25746                           
 25747 ;; *************** function _UART2_rx_vect_isr *****************
 25748 ;; Defined at:
 25749 ;;		line 203 in file "mcc_generated_files/uart2.c"
 25750 ;; Parameters:    Size  Location     Type
 25751 ;;		None
 25752 ;; Auto vars:     Size  Location     Type
 25753 ;;		None
 25754 ;; Return value:  Size  Location     Type
 25755 ;;                  1    wreg      void 
 25756 ;; Registers used:
 25757 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 25758 ;; Tracked objects:
 25759 ;;		On entry : 0/0
 25760 ;;		On exit  : 0/0
 25761 ;;		Unchanged: 0/0
 25762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25767 ;;Total ram usage:        0 bytes
 25768 ;; Hardware stack levels used:    1
 25769 ;; Hardware stack levels required when called:    1
 25770 ;; This function calls:
 25771 ;;		Absolute function
 25772 ;;		_UART2_Receive_ISR
 25773 ;; This function is called by:
 25774 ;;		Interrupt level 2
 25775 ;; This function uses a non-reentrant model
 25776 ;;
 25777                           
 25778                           	psect	text138
 25779  0182DC                     __ptext138:
 25780                           	opt callstack 0
 25781  0182DC                     _UART2_rx_vect_isr:
 25782                           	opt callstack 13
 25783                           
 25784                           ;incstack = 0
 25785  0182DC  EE14  F000         	lfsr	1,___inthi_sp
 25786                           
 25787                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 25788  0182E0  5010               	movf	_UART2_RxInterruptHandler^0,w,c
 25789  0182E2  1011               	iorwf	(_UART2_RxInterruptHandler+1)^0,w,c
 25790  0182E4  1012               	iorwf	(_UART2_RxInterruptHandler+2)^0,w,c
 25791  0182E6  B4D8               	btfsc	status,2,c
 25792  0182E8  0011               	retfie		f
 25793                           
 25794                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 25795  0182EA  D801               	call	i2u865_48
 25796  0182EC  0011               	retfie		f
 25797  0182EE                     i2u865_48:
 25798  0182EE  0005               	push	
 25799  0182F0  6EFA               	movwf	pclath,c
 25800  0182F2  5010               	movf	_UART2_RxInterruptHandler^0,w,c
 25801  0182F4  6EFD               	movwf	tosl,c
 25802  0182F6  5011               	movf	(_UART2_RxInterruptHandler+1)^0,w,c
 25803  0182F8  6EFE               	movwf	tosh,c
 25804  0182FA  5012               	movf	(_UART2_RxInterruptHandler+2)^0,w,c
 25805  0182FC  6EFF               	movwf	tosu,c
 25806  0182FE  50FA               	movf	pclath,w,c
 25807  018300  0012               	return		;indir
 25808  018302                     __end_of_UART2_rx_vect_isr:
 25809                           	opt callstack 0
 25810                           
 25811 ;; *************** function _UART2_Receive_ISR *****************
 25812 ;; Defined at:
 25813 ;;		line 233 in file "mcc_generated_files/uart2.c"
 25814 ;; Parameters:    Size  Location     Type
 25815 ;;		None
 25816 ;; Auto vars:     Size  Location     Type
 25817 ;;		None
 25818 ;; Return value:  Size  Location     Type
 25819 ;;                  1  [STACK] void 
 25820 ;; Registers used:
 25821 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25822 ;; Tracked objects:
 25823 ;;		On entry : 0/0
 25824 ;;		On exit  : 0/0
 25825 ;;		Unchanged: 0/0
 25826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25831 ;;Total ram usage:        0 bytes
 25832 ;; Hardware stack levels used:    1
 25833 ;; This function calls:
 25834 ;;		Nothing
 25835 ;; This function is called by:
 25836 ;;		_UART2_Initialize
 25837 ;;		_UART2_rx_vect_isr
 25838 ;; This function uses a reentrant model
 25839 ;;
 25840                           
 25841                           	psect	text139
 25842  01844A                     __ptext139:
 25843                           	opt callstack 0
 25844  01844A                     _UART2_Receive_ISR:
 25845                           	opt callstack 13
 25846                           
 25847                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 25848                           
 25849                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25850                           ;incstack = 0
 25851  01844A  0E00               	movlw	low _uart2RxBuffer
 25852  01844C  2428               	addwf	_uart2RxHead^0,w,c	;volatile
 25853  01844E  6ED9               	movwf	fsr2l,c
 25854  018450  6ADA               	clrf	fsr2h,c
 25855  018452  0E07               	movlw	high _uart2RxBuffer
 25856  018454  22DA               	addwfc	fsr2h,f,c
 25857  018456  006F F743 FFDF     	movff	15824,indf2	;volatile
 25858  01845C  2A28               	incf	_uart2RxHead^0,f,c	;volatile
 25859                           
 25860                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 25861  01845E  2828               	incf	_uart2RxHead^0,w,c
 25862  018460  B4D8               	btfsc	status,2,c
 25863                           
 25864                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 25865  018462  6A28               	clrf	_uart2RxHead^0,c	;volatile
 25866                           
 25867                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 25868  018464  2A26               	incf	_uart2RxCount^0,f,c	;volatile
 25869                           
 25870                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 25871  018466  0012               	return		;funcret
 25872  018468                     __end_of_UART2_Receive_ISR:
 25873                           	opt callstack 0
 25874                           
 25875 ;; *************** function _TMR6_ISR *****************
 25876 ;; Defined at:
 25877 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 25878 ;; Parameters:    Size  Location     Type
 25879 ;;		None
 25880 ;; Auto vars:     Size  Location     Type
 25881 ;;		None
 25882 ;; Return value:  Size  Location     Type
 25883 ;;                  1    wreg      void 
 25884 ;; Registers used:
 25885 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 25886 ;; Tracked objects:
 25887 ;;		On entry : 0/0
 25888 ;;		On exit  : 0/0
 25889 ;;		Unchanged: 0/0
 25890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25893 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25894 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25895 ;;Total ram usage:        1 bytes
 25896 ;; Hardware stack levels used:    1
 25897 ;; Hardware stack levels required when called:    2
 25898 ;; This function calls:
 25899 ;;		_TMR6_CallBack
 25900 ;; This function is called by:
 25901 ;;		Interrupt level 2
 25902 ;; This function uses a non-reentrant model
 25903 ;;
 25904                           
 25905                           	psect	text140
 25906  0184BC                     __ptext140:
 25907                           	opt callstack 0
 25908  0184BC                     _TMR6_ISR:
 25909                           	opt callstack 12
 25910                           
 25911                           ;incstack = 0
 25912  0184BC  0060  F0C8  F057   	movff	btemp,??_TMR6_ISR
 25913  0184C2  EE14  F000         	lfsr	1,___inthi_sp
 25914                           
 25915                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 25916  0184C6  0139               	movlb	57	; () banked
 25917  0184C8  91A9               	bcf	169,0,b	;volatile
 25918                           
 25919                           ; BSR set to: 57
 25920                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 25921  0184CA  ECA5  F0C1         	call	_TMR6_CallBack	;wreg free
 25922  0184CE  0060  F15C  F032   	movff	??_TMR6_ISR,btemp
 25923  0184D4  0011               	retfie		f
 25924  0184D6                     __end_of_TMR6_ISR:
 25925                           	opt callstack 0
 25926                           
 25927 ;; *************** function _TMR6_CallBack *****************
 25928 ;; Defined at:
 25929 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 25930 ;; Parameters:    Size  Location     Type
 25931 ;;		None
 25932 ;; Auto vars:     Size  Location     Type
 25933 ;;		None
 25934 ;; Return value:  Size  Location     Type
 25935 ;;                  1  [STACK] void 
 25936 ;; Registers used:
 25937 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 25938 ;; Tracked objects:
 25939 ;;		On entry : 3F/39
 25940 ;;		On exit  : 0/0
 25941 ;;		Unchanged: 0/0
 25942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25946 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25947 ;;Total ram usage:        0 bytes
 25948 ;; Hardware stack levels used:    1
 25949 ;; Hardware stack levels required when called:    1
 25950 ;; This function calls:
 25951 ;;		Absolute function
 25952 ;;		_TMR6_DefaultInterruptHandler
 25953 ;; This function is called by:
 25954 ;;		_TMR6_ISR
 25955 ;; This function uses a reentrant model
 25956 ;;
 25957                           
 25958                           	psect	text141
 25959  01834A                     __ptext141:
 25960                           	opt callstack 0
 25961  01834A                     _TMR6_CallBack:
 25962                           	opt callstack 12
 25963                           
 25964                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 25965                           
 25966                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25967                           ;incstack = 0
 25968  01834A  0100               	movlb	0	; () banked
 25969  01834C  51C4               	movf	_TMR6_InterruptHandler& (0+255),w,b
 25970  01834E  11C5               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 25971  018350  11C6               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 25972  018352  B4D8               	btfsc	status,2,c
 25973  018354  0012               	return	
 25974                           
 25975                           ; BSR set to: 0
 25976                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 25977  018356  D801               	call	u838_48
 25978  018358  0012               	return	
 25979  01835A                     u838_48:
 25980  01835A  0005               	push	
 25981  01835C  6EFA               	movwf	pclath,c
 25982  01835E  51C4               	movf	_TMR6_InterruptHandler& (0+255),w,b
 25983  018360  6EFD               	movwf	tosl,c
 25984  018362  51C5               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 25985  018364  6EFE               	movwf	tosh,c
 25986  018366  51C6               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 25987  018368  6EFF               	movwf	tosu,c
 25988  01836A  50FA               	movf	pclath,w,c
 25989  01836C  0012               	return		;indir
 25990  01836E                     __end_of_TMR6_CallBack:
 25991                           	opt callstack 0
 25992                           
 25993 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 25994 ;; Defined at:
 25995 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 25996 ;; Parameters:    Size  Location     Type
 25997 ;;		None
 25998 ;; Auto vars:     Size  Location     Type
 25999 ;;  i               1  [STACK] unsigned char 
 26000 ;; Return value:  Size  Location     Type
 26001 ;;                  1  [STACK] void 
 26002 ;; Registers used:
 26003 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 26004 ;; Tracked objects:
 26005 ;;		On entry : 3F/0
 26006 ;;		On exit  : 0/0
 26007 ;;		Unchanged: 0/0
 26008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26012 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26013 ;;Total ram usage:        0 bytes
 26014 ;; Hardware stack levels used:    1
 26015 ;; This function calls:
 26016 ;;		Nothing
 26017 ;; This function is called by:
 26018 ;;		_TMR6_Initialize
 26019 ;;		_TMR6_CallBack
 26020 ;; This function uses a reentrant model
 26021 ;;
 26022                           
 26023                           	psect	text142
 26024  017BDA                     __ptext142:
 26025                           	opt callstack 0
 26026  017BDA                     _TMR6_DefaultInterruptHandler:
 26027                           	opt callstack 0
 26028                           
 26029                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26030  017BDA  52E6               	movf	postinc1,f,c
 26031                           
 26032                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 26033                           ;stkvar	_i @ sp[(-1)+0]
 26034                           
 26035                           ;incstack = 0
 26036  017BDC  0EFF               	movlw	-1
 26037  017BDE  6AE3               	clrf	plusw1,c
 26038  017BE0                     l8419:
 26039                           
 26040                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 26041                           ;stkvar	_i @ sp[(-1)+0]
 26042  017BE0  0EFF               	movlw	-1
 26043  017BE2  50E3               	movf	plusw1,w,c
 26044  017BE4  0D02               	mullw	2
 26045  017BE6  50F3               	movf	243,w,c
 26046  017BE8  0F89               	addlw	low _tickCount
 26047  017BEA  6ED9               	movwf	fsr2l,c
 26048  017BEC  6ADA               	clrf	fsr2h,c
 26049  017BEE  50DE               	movf	postinc2,w,c
 26050  017BF0  10DE               	iorwf	postinc2,w,c
 26051  017BF2  B4D8               	btfsc	status,2,c
 26052  017BF4  D00A               	goto	l8423
 26053                           
 26054                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 26055                           ;stkvar	_i @ sp[(-1)+0]
 26056  017BF6  0EFF               	movlw	-1
 26057  017BF8  50E3               	movf	plusw1,w,c
 26058  017BFA  0D02               	mullw	2
 26059  017BFC  50F3               	movf	243,w,c
 26060  017BFE  0F89               	addlw	low _tickCount
 26061  017C00  6ED9               	movwf	fsr2l,c
 26062  017C02  6ADA               	clrf	fsr2h,c
 26063  017C04  06DE               	decf	postinc2,f,c
 26064  017C06  0E00               	movlw	0
 26065  017C08  5ADD               	subwfb	postdec2,f,c
 26066  017C0A                     l8423:
 26067                           
 26068                           ;mcc_generated_files/tmr6.c: 207:  }
 26069                           ;stkvar	_i @ sp[(-1)+0]
 26070  017C0A  0EFF               	movlw	-1
 26071  017C0C  2AE3               	incf	plusw1,f,c
 26072                           
 26073                           ;stkvar	_i @ sp[(-1)+0]
 26074  017C0E  0EFF               	movlw	-1
 26075  017C10  006F FF8C  F032    	movff	plusw1,btemp
 26076  017C16  0E0B               	movlw	11
 26077  017C18  6432               	cpfsgt	btemp^0,c
 26078  017C1A  D7E2               	goto	l8419
 26079                           
 26080                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 26081  017C1C  52E5               	movf	postdec1,f,c
 26082  017C1E  0012               	return		;funcret
 26083  017C20                     __end_of_TMR6_DefaultInterruptHandler:
 26084                           	opt callstack 0
 26085                           
 26086 ;; *************** function _DMA1_DMASCNT_ISR *****************
 26087 ;; Defined at:
 26088 ;;		line 126 in file "mcc_generated_files/dma1.c"
 26089 ;; Parameters:    Size  Location     Type
 26090 ;;		None
 26091 ;; Auto vars:     Size  Location     Type
 26092 ;;		None
 26093 ;; Return value:  Size  Location     Type
 26094 ;;                  1    wreg      void 
 26095 ;; Registers used:
 26096 ;;		None
 26097 ;; Tracked objects:
 26098 ;;		On entry : 0/0
 26099 ;;		On exit  : 3F/0
 26100 ;;		Unchanged: 0/0
 26101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26106 ;;Total ram usage:        0 bytes
 26107 ;; Hardware stack levels used:    1
 26108 ;; This function calls:
 26109 ;;		Nothing
 26110 ;; This function is called by:
 26111 ;;		Interrupt level 2
 26112 ;; This function uses a non-reentrant model
 26113 ;;
 26114                           
 26115                           	psect	text143
 26116  0185BC                     __ptext143:
 26117                           	opt callstack 0
 26118  0185BC                     _DMA1_DMASCNT_ISR:
 26119                           	opt callstack 14
 26120                           
 26121                           ;incstack = 0
 26122  0185BC  EE14  F000         	lfsr	1,___inthi_sp
 26123                           
 26124                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 26125  0185C0  0139               	movlb	57	; () banked
 26126  0185C2  91A2               	bcf	162,0,b	;volatile
 26127                           
 26128                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 26129  0185C4  0100               	movlb	0	; () banked
 26130  0185C6  97A1               	bcf	_spi_link& (0+255),3,b	;volatile
 26131                           
 26132                           ; BSR set to: 0
 26133  0185C8  0011               	retfie		f
 26134  0185CA                     __end_of_DMA1_DMASCNT_ISR:
 26135                           	opt callstack 0
 26136                           
 26137 ;; *************** function _DMA1_DMADCNT_ISR *****************
 26138 ;; Defined at:
 26139 ;;		line 134 in file "mcc_generated_files/dma1.c"
 26140 ;; Parameters:    Size  Location     Type
 26141 ;;		None
 26142 ;; Auto vars:     Size  Location     Type
 26143 ;;		None
 26144 ;; Return value:  Size  Location     Type
 26145 ;;                  1    wreg      void 
 26146 ;; Registers used:
 26147 ;;		None
 26148 ;; Tracked objects:
 26149 ;;		On entry : 0/0
 26150 ;;		On exit  : 3F/39
 26151 ;;		Unchanged: 0/0
 26152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26156 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26157 ;;Total ram usage:        0 bytes
 26158 ;; Hardware stack levels used:    1
 26159 ;; This function calls:
 26160 ;;		Nothing
 26161 ;; This function is called by:
 26162 ;;		Interrupt level 2
 26163 ;; This function uses a non-reentrant model
 26164 ;;
 26165                           
 26166                           	psect	text144
 26167  0185D4                     __ptext144:
 26168                           	opt callstack 0
 26169  0185D4                     _DMA1_DMADCNT_ISR:
 26170                           	opt callstack 14
 26171                           
 26172                           ; BSR set to: 0
 26173                           ;incstack = 0
 26174  0185D4  EE14  F000         	lfsr	1,___inthi_sp
 26175                           
 26176                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 26177  0185D8  0139               	movlb	57	; () banked
 26178  0185DA  93A2               	bcf	162,1,b	;volatile
 26179                           
 26180                           ; BSR set to: 57
 26181  0185DC  0011               	retfie		f
 26182  0185DE                     __end_of_DMA1_DMADCNT_ISR:
 26183                           	opt callstack 0
 26184                           
 26185 ;; *************** function _DMA1_DMAA_ISR *****************
 26186 ;; Defined at:
 26187 ;;		line 144 in file "mcc_generated_files/dma1.c"
 26188 ;; Parameters:    Size  Location     Type
 26189 ;;		None
 26190 ;; Auto vars:     Size  Location     Type
 26191 ;;		None
 26192 ;; Return value:  Size  Location     Type
 26193 ;;                  1    wreg      void 
 26194 ;; Registers used:
 26195 ;;		None
 26196 ;; Tracked objects:
 26197 ;;		On entry : 0/0
 26198 ;;		On exit  : 3F/39
 26199 ;;		Unchanged: 0/0
 26200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26205 ;;Total ram usage:        0 bytes
 26206 ;; Hardware stack levels used:    1
 26207 ;; This function calls:
 26208 ;;		Nothing
 26209 ;; This function is called by:
 26210 ;;		Interrupt level 2
 26211 ;; This function uses a non-reentrant model
 26212 ;;
 26213                           
 26214                           	psect	text145
 26215  0185E0                     __ptext145:
 26216                           	opt callstack 0
 26217  0185E0                     _DMA1_DMAA_ISR:
 26218                           	opt callstack 14
 26219                           
 26220                           ; BSR set to: 57
 26221                           ;incstack = 0
 26222  0185E0  EE14  F000         	lfsr	1,___inthi_sp
 26223                           
 26224                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 26225  0185E4  0139               	movlb	57	; () banked
 26226  0185E6  97A2               	bcf	162,3,b	;volatile
 26227                           
 26228                           ; BSR set to: 57
 26229  0185E8  0011               	retfie		f
 26230  0185EA                     __end_of_DMA1_DMAA_ISR:
 26231                           	opt callstack 0
 26232                           
 26233 ;; *************** function _DMA1_DMAOR_ISR *****************
 26234 ;; Defined at:
 26235 ;;		line 155 in file "mcc_generated_files/dma1.c"
 26236 ;; Parameters:    Size  Location     Type
 26237 ;;		None
 26238 ;; Auto vars:     Size  Location     Type
 26239 ;;		None
 26240 ;; Return value:  Size  Location     Type
 26241 ;;                  1    wreg      void 
 26242 ;; Registers used:
 26243 ;;		None
 26244 ;; Tracked objects:
 26245 ;;		On entry : 0/0
 26246 ;;		On exit  : 3F/39
 26247 ;;		Unchanged: 0/0
 26248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26253 ;;Total ram usage:        0 bytes
 26254 ;; Hardware stack levels used:    1
 26255 ;; This function calls:
 26256 ;;		Nothing
 26257 ;; This function is called by:
 26258 ;;		Interrupt level 2
 26259 ;; This function uses a non-reentrant model
 26260 ;;
 26261                           
 26262                           	psect	text146
 26263  0185EC                     __ptext146:
 26264                           	opt callstack 0
 26265  0185EC                     _DMA1_DMAOR_ISR:
 26266                           	opt callstack 14
 26267                           
 26268                           ; BSR set to: 57
 26269                           ;incstack = 0
 26270  0185EC  EE14  F000         	lfsr	1,___inthi_sp
 26271                           
 26272                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 26273  0185F0  0139               	movlb	57	; () banked
 26274  0185F2  95A2               	bcf	162,2,b	;volatile
 26275                           
 26276                           ; BSR set to: 57
 26277  0185F4  0011               	retfie		f
 26278  0185F6                     __end_of_DMA1_DMAOR_ISR:
 26279                           	opt callstack 0
 26280                           
 26281                           ;
 26282                           ; Interrupt Vector Table @ 0x8
 26283                           ;
 26284                           
 26285                           	psect	ivt0x8
 26286  000008                     __pivt0x8:
 26287                           	opt callstack 0
 26288  000008                     ivt0x8_base:
 26289                           	opt callstack 0
 26290                           
 26291                           ; Vector 0 : SWINT
 26292  000008  618E               	dw	_Default_ISR shr (0+2)
 26293                           
 26294                           ; Vector 1 : HLVD
 26295  00000A  618E               	dw	_Default_ISR shr (0+2)
 26296                           
 26297                           ; Vector 2 : OSF
 26298  00000C  618E               	dw	_Default_ISR shr (0+2)
 26299                           
 26300                           ; Vector 3 : CSW
 26301  00000E  618E               	dw	_Default_ISR shr (0+2)
 26302                           
 26303                           ; Vector 4 : NVM
 26304  000010  618E               	dw	_Default_ISR shr (0+2)
 26305                           
 26306                           ; Vector 5 : SCAN
 26307  000012  618E               	dw	_Default_ISR shr (0+2)
 26308                           
 26309                           ; Vector 6 : CRC
 26310  000014  618E               	dw	_Default_ISR shr (0+2)
 26311                           
 26312                           ; Vector 7 : IOC
 26313  000016  618E               	dw	_Default_ISR shr (0+2)
 26314                           
 26315                           ; Vector 8 : INT0
 26316  000018  616B               	dw	_INT0_ISR shr (0+2)
 26317                           
 26318                           ; Vector 9 : ZCD
 26319  00001A  618E               	dw	_Default_ISR shr (0+2)
 26320                           
 26321                           ; Vector 10 : AD
 26322  00001C  5FF8               	dw	_ADCC_ISR shr (0+2)
 26323                           
 26324                           ; Vector 11 : ADT
 26325  00001E  5D84               	dw	_ADCC_ThresholdISR shr (0+2)
 26326                           
 26327                           ; Vector 12 : CMP1
 26328  000020  618E               	dw	_Default_ISR shr (0+2)
 26329                           
 26330                           ; Vector 13 : SMT1
 26331  000022  618E               	dw	_Default_ISR shr (0+2)
 26332                           
 26333                           ; Vector 14 : SMT1PRA
 26334  000024  618E               	dw	_Default_ISR shr (0+2)
 26335                           
 26336                           ; Vector 15 : SMT1PRW
 26337  000026  618E               	dw	_Default_ISR shr (0+2)
 26338                           
 26339                           ; Vector 16 : DMA1SCNT
 26340  000028  616F               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 26341                           
 26342                           ; Vector 17 : DMA1DCNT
 26343  00002A  6175               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 26344                           
 26345                           ; Vector 18 : DMA1OR
 26346  00002C  617B               	dw	_DMA1_DMAOR_ISR shr (0+2)
 26347                           
 26348                           ; Vector 19 : DMA1A
 26349  00002E  6178               	dw	_DMA1_DMAA_ISR shr (0+2)
 26350                           
 26351                           ; Vector 20 : SPI1RX
 26352  000030  618E               	dw	_Default_ISR shr (0+2)
 26353                           
 26354                           ; Vector 21 : SPI1TX
 26355  000032  618E               	dw	_Default_ISR shr (0+2)
 26356                           
 26357                           ; Vector 22 : SPI1
 26358  000034  618E               	dw	_Default_ISR shr (0+2)
 26359                           
 26360                           ; Vector 23 : I2C1RX
 26361  000036  618E               	dw	_Default_ISR shr (0+2)
 26362                           
 26363                           ; Vector 24 : I2C1TX
 26364  000038  618E               	dw	_Default_ISR shr (0+2)
 26365                           
 26366                           ; Vector 25 : I2C1
 26367  00003A  618E               	dw	_Default_ISR shr (0+2)
 26368                           
 26369                           ; Vector 26 : I2C1E
 26370  00003C  618E               	dw	_Default_ISR shr (0+2)
 26371                           
 26372                           ; Vector 27 : U1RX
 26373  00003E  60A3               	dw	_UART1_rx_vect_isr shr (0+2)
 26374                           
 26375                           ; Vector 28 : U1TX
 26376  000040  6099               	dw	_UART1_tx_vect_isr shr (0+2)
 26377                           
 26378                           ; Vector 29 : U1E
 26379  000042  618E               	dw	_Default_ISR shr (0+2)
 26380                           
 26381                           ; Vector 30 : U1
 26382  000044  618E               	dw	_Default_ISR shr (0+2)
 26383                           
 26384                           ; Vector 31 : TMR0
 26385  000046  618E               	dw	_Default_ISR shr (0+2)
 26386                           
 26387                           ; Vector 32 : TMR1
 26388  000048  618E               	dw	_Default_ISR shr (0+2)
 26389                           
 26390                           ; Vector 33 : TMR1G
 26391  00004A  618E               	dw	_Default_ISR shr (0+2)
 26392                           
 26393                           ; Vector 34 : TMR2
 26394  00004C  618E               	dw	_Default_ISR shr (0+2)
 26395                           
 26396                           ; Vector 35 : CCP1
 26397  00004E  618E               	dw	_Default_ISR shr (0+2)
 26398                           
 26399                           ; Vector 36 : Undefined
 26400  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 26401                           
 26402                           ; Vector 37 : NCO1
 26403  000052  618E               	dw	_Default_ISR shr (0+2)
 26404                           
 26405                           ; Vector 38 : CWG1
 26406  000054  618E               	dw	_Default_ISR shr (0+2)
 26407                           
 26408                           ; Vector 39 : CLC1
 26409  000056  618E               	dw	_Default_ISR shr (0+2)
 26410                           
 26411                           ; Vector 40 : INT1
 26412  000058  5F3A               	dw	_INT1_ISR shr (0+2)
 26413                           
 26414                           ; Vector 41 : CMP2
 26415  00005A  618E               	dw	_Default_ISR shr (0+2)
 26416                           
 26417                           ; Vector 42 : DMA2SCNT
 26418  00005C  618E               	dw	_Default_ISR shr (0+2)
 26419                           
 26420                           ; Vector 43 : DMA2DCNT
 26421  00005E  618E               	dw	_Default_ISR shr (0+2)
 26422                           
 26423                           ; Vector 44 : DMA2OR
 26424  000060  618E               	dw	_Default_ISR shr (0+2)
 26425                           
 26426                           ; Vector 45 : DMA2A
 26427  000062  618E               	dw	_Default_ISR shr (0+2)
 26428                           
 26429                           ; Vector 46 : I2C2RX
 26430  000064  618E               	dw	_Default_ISR shr (0+2)
 26431                           
 26432                           ; Vector 47 : I2C2TX
 26433  000066  618E               	dw	_Default_ISR shr (0+2)
 26434                           
 26435                           ; Vector 48 : I2C2
 26436  000068  618E               	dw	_Default_ISR shr (0+2)
 26437                           
 26438                           ; Vector 49 : I2C2E
 26439  00006A  618E               	dw	_Default_ISR shr (0+2)
 26440                           
 26441                           ; Vector 50 : U2RX
 26442  00006C  60B7               	dw	_UART2_rx_vect_isr shr (0+2)
 26443                           
 26444                           ; Vector 51 : U2TX
 26445  00006E  60AD               	dw	_UART2_tx_vect_isr shr (0+2)
 26446                           
 26447                           ; Vector 52 : U2E
 26448  000070  618E               	dw	_Default_ISR shr (0+2)
 26449                           
 26450                           ; Vector 53 : U2
 26451  000072  618E               	dw	_Default_ISR shr (0+2)
 26452                           
 26453                           ; Vector 54 : TMR3
 26454  000074  618E               	dw	_Default_ISR shr (0+2)
 26455                           
 26456                           ; Vector 55 : TMR3G
 26457  000076  618E               	dw	_Default_ISR shr (0+2)
 26458                           
 26459                           ; Vector 56 : TMR4
 26460  000078  618E               	dw	_Default_ISR shr (0+2)
 26461                           
 26462                           ; Vector 57 : CCP2
 26463  00007A  618E               	dw	_Default_ISR shr (0+2)
 26464                           
 26465                           ; Vector 58 : Undefined
 26466  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 26467                           
 26468                           ; Vector 59 : CWG2
 26469  00007E  618E               	dw	_Default_ISR shr (0+2)
 26470                           
 26471                           ; Vector 60 : CLC2
 26472  000080  618E               	dw	_Default_ISR shr (0+2)
 26473                           
 26474                           ; Vector 61 : INT2
 26475  000082  618E               	dw	_Default_ISR shr (0+2)
 26476                           
 26477                           ; Vector 62 : Undefined
 26478  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 26479                           
 26480                           ; Vector 63 : Undefined
 26481  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 26482                           
 26483                           ; Vector 64 : Undefined
 26484  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 26485                           
 26486                           ; Vector 65 : Undefined
 26487  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 26488                           
 26489                           ; Vector 66 : Undefined
 26490  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 26491                           
 26492                           ; Vector 67 : Undefined
 26493  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 26494                           
 26495                           ; Vector 68 : Undefined
 26496  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 26497                           
 26498                           ; Vector 69 : Undefined
 26499  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 26500                           
 26501                           ; Vector 70 : TMR5
 26502  000094  5E5F               	dw	_TMR5_ISR shr (0+2)
 26503                           
 26504                           ; Vector 71 : TMR5G
 26505  000096  618E               	dw	_Default_ISR shr (0+2)
 26506                           
 26507                           ; Vector 72 : TMR6
 26508  000098  612F               	dw	_TMR6_ISR shr (0+2)
 26509                           
 26510                           ; Vector 73 : CCP3
 26511  00009A  618E               	dw	_Default_ISR shr (0+2)
 26512                           
 26513                           ; Vector 74 : CWG3
 26514  00009C  618E               	dw	_Default_ISR shr (0+2)
 26515                           
 26516                           ; Vector 75 : CLC3
 26517  00009E  618E               	dw	_Default_ISR shr (0+2)
 26518                           
 26519                           ; Vector 76 : Undefined
 26520  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 26521                           
 26522                           ; Vector 77 : Undefined
 26523  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 26524                           
 26525                           ; Vector 78 : Undefined
 26526  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 26527                           
 26528                           ; Vector 79 : Undefined
 26529  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 26530                           
 26531                           ; Vector 80 : CCP4
 26532  0000A8  618E               	dw	_Default_ISR shr (0+2)
 26533                           
 26534                           ; Vector 81 : CLC4
 26535  0000AA  618E               	dw	_Default_ISR shr (0+2)
 26536  0000AC                     ivt0x8_undefint:
 26537                           	opt callstack 0
 26538  0000AC  00FF               	reset	
 26539                           
 26540                           	psect	text147
 26541  000000                     __ptext147:
 26542                           	opt callstack 0
 26543                           
 26544                           	psect	rparam
 26545  0000                     
 26546                           	psect	temp
 26547  000032                     btemp:
 26548                           	opt callstack 0
 26549  000032                     	ds	32
 26550  0000                     wtemp0	set	btemp
 26551  0000                     wtemp1	set	btemp+2
 26552  0000                     wtemp2	set	btemp+4
 26553  0000                     wtemp3	set	btemp+6
 26554  0000                     wtemp4	set	btemp+8
 26555  0000                     wtemp5	set	btemp+10
 26556  0000                     wtemp8	set	btemp+1
 26557  0000                     ttemp0	set	btemp
 26558  0000                     ttemp1	set	btemp+3
 26559  0000                     ttemp2	set	btemp+6
 26560  0000                     ttemp3	set	btemp+9
 26561  0000                     ttemp5	set	btemp+1
 26562  0000                     ttemp6	set	btemp+4
 26563  0000                     ttemp7	set	btemp+8
 26564  0000                     ltemp0	set	btemp
 26565  0000                     ltemp1	set	btemp+4
 26566  0000                     ltemp2	set	btemp+8
 26567  0000                     lltemp0	set	btemp
 26568  0000                     lltemp1	set	btemp+8
 26569  0000                     lltemp2	set	btemp+16
 26570  0000                     lltemp3	set	btemp+24
 26571                           tosu	equ	0x3FFF
 26572                           tosh	equ	0x3FFE
 26573                           tosl	equ	0x3FFD
 26574                           stkptr	equ	0x3FFC
 26575                           pclatu	equ	0x3FFB
 26576                           pclath	equ	0x3FFA
 26577                           pcl	equ	0x3FF9
 26578                           tblptru	equ	0x3FF8
 26579                           tblptrh	equ	0x3FF7
 26580                           tblptrl	equ	0x3FF6
 26581                           tablat	equ	0x3FF5
 26582                           prodh	equ	0x3FF4
 26583                           prodl	equ	0x3FF3
 26584                           indf0	equ	0x3FEF
 26585                           postinc0	equ	0x3FEE
 26586                           postdec0	equ	0x3FED
 26587                           preinc0	equ	0x3FEC
 26588                           plusw0	equ	0x3FEB
 26589                           fsr0h	equ	0x3FEA
 26590                           fsr0l	equ	0x3FE9
 26591                           wreg	equ	0x3FE8
 26592                           indf1	equ	0x3FE7
 26593                           postinc1	equ	0x3FE6
 26594                           postdec1	equ	0x3FE5
 26595                           preinc1	equ	0x3FE4
 26596                           plusw1	equ	0x3FE3
 26597                           fsr1h	equ	0x3FE2
 26598                           fsr1l	equ	0x3FE1
 26599                           bsr	equ	0x3FE0
 26600                           indf2	equ	0x3FDF
 26601                           postinc2	equ	0x3FDE
 26602                           postdec2	equ	0x3FDD
 26603                           preinc2	equ	0x3FDC
 26604                           plusw2	equ	0x3FDB
 26605                           fsr2h	equ	0x3FDA
 26606                           fsr2l	equ	0x3FD9
 26607                           status	equ	0x3FD8


Data Sizes:
    Strings     271
    Constant    144
    Data        250
    BSS         1402
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63      6      55
    BANK0           160      4     154
    BANK1           256      4     199
    BANK2           256      0     160
    BANK3           256      0     236
    BANK4           256      0     134
    BANK5           256      0     218
    BANK6           256      0     255
    BANK7           256      0     255
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_33(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_44(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_44(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 3
		 -> ct(STACK[3]), 

    l	PTR const unsigned char  size(2) Largest target is 3
		 -> ct(STACK[3]), 

    s	PTR const unsigned char  size(2) Largest target is 218
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> STR_16(CODE[9]), STR_15(CODE[12]), D.lcd(BANK5[216]), D(BANK5[218]), 
		 -> T(CODE[144]), STR_7(CODE[5]), STR_3(CODE[5]), V(BANK1[187]), 

    a	PTR const unsigned char  size(2) Largest target is 218
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> STR_16(CODE[9]), STR_15(CODE[12]), D.lcd(BANK5[216]), D(BANK5[218]), 
		 -> T(CODE[144]), STR_7(CODE[5]), STR_3(CODE[5]), V(BANK1[187]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_39(CODE[4]), STR_38(CODE[4]), STR_35(CODE[4]), STR_34(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_39(CODE[4]), STR_38(CODE[4]), STR_35(CODE[4]), STR_34(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), 
		 -> STR_24(CODE[24]), STR_23(CODE[15]), STR_22(CODE[15]), STR_21(CODE[15]), 
		 -> STR_20(CODE[10]), STR_19(CODE[10]), STR_18(CODE[19]), STR_17(CODE[19]), 
		 -> STR_11(CODE[17]), STR_10(CODE[14]), STR_9(CODE[14]), STR_8(CODE[17]), 
		 -> STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    s	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), V(BANK1[187]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), V(BANK1[187]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S4974_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D(BANK5[218]), V(BANK1[187]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D(BANK5[218]), V(BANK1[187]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), 
		 -> STR_24(CODE[24]), STR_23(CODE[15]), STR_22(CODE[15]), STR_21(CODE[15]), 
		 -> STR_20(CODE[10]), STR_19(CODE[10]), STR_18(CODE[19]), STR_17(CODE[19]), 
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[17]), 
		 -> STR_10(CODE[14]), STR_9(CODE[14]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), 
		 -> STR_24(CODE[24]), STR_23(CODE[15]), STR_22(CODE[15]), STR_21(CODE[15]), 
		 -> STR_20(CODE[10]), STR_19(CODE[10]), STR_18(CODE[19]), STR_17(CODE[19]), 
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[17]), 
		 -> STR_10(CODE[14]), STR_9(CODE[14]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(2) Largest target is 24
		 -> STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), 
		 -> STR_24(CODE[24]), STR_23(CODE[15]), STR_22(CODE[15]), STR_21(CODE[15]), 
		 -> STR_20(CODE[10]), STR_19(CODE[10]), STR_18(CODE[19]), STR_17(CODE[19]), 
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[17]), 
		 -> STR_10(CODE[14]), STR_9(CODE[14]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_16(CODE[9]), STR_15(CODE[12]), 
		 -> D.lcd(BANK5[216]), D(BANK5[218]), T(CODE[144]), STR_7(CODE[5]), 
		 -> STR_3(CODE[5]), V(BANK1[187]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_16(CODE[9]), STR_15(CODE[12]), 
		 -> D.lcd(BANK5[216]), D(BANK5[218]), T(CODE[144]), STR_7(CODE[5]), 
		 -> STR_3(CODE[5]), V(BANK1[187]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_16(CODE[9]), 
		 -> STR_15(CODE[12]), D.lcd(BANK5[216]), D(BANK5[218]), T(CODE[144]), 
		 -> STR_7(CODE[5]), STR_3(CODE[5]), V(BANK1[187]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    S3987tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_16(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_15(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), V(BANK1[187]), 

    strPtr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), V(BANK1[187]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1930spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    S1930spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  346948
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                     _check_adc_scan
                         _check_help
                     _check_switches
                     _clear_adc_scan
                   _convert_adc_data
                _eaDogM_WriteCommand
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                       _init_display
                      _mode_lamp_dim
                   _set_display_info
                          _set_vterm
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      31
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      93
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (19) _ADCC_StartConversion                                1     0      1      31
 ---------------------------------------------------------------------------------
 (19) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      31
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1358
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1     124
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1     124
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      31
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _get_switch                                           1     0      1      62
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   32950
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   16232
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (2) _lp_filter                                           10     4      6    8399
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (2) _conv_raw_result                                      2     0      2    7706
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (3) _nanf                                                 6     4      2      34
 ---------------------------------------------------------------------------------
 (1) _get_raw_result                                       1     0      1      31
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            10     5      5     476
 ---------------------------------------------------------------------------------
 (1) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_switches                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_help                                           1     0      1  197030
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   98219
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    10     12   31879
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      62
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2     124
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   66374
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     0      4   66092
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   32919
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      62
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      62
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   33080
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   31654
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             8     2      6   31525
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           45    39      6   31193
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _xtoa
 ---------------------------------------------------------------------------------
 (7) _xtoa                                                31    20     11    2780
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (8) _toupper                                              4     2      2     192
                            _islower
 ---------------------------------------------------------------------------------
 (9) _islower                                              2     0      2      31
 ---------------------------------------------------------------------------------
 (8) _isalpha                                              2     0      2      31
 ---------------------------------------------------------------------------------
 (7) _strncmp                                             10     4      6     325
 ---------------------------------------------------------------------------------
 (7) _stoa                                                21    17      4    1329
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _efgtoa                                              63    56      7   17820
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              4     2      2     192
                            _isupper
 ---------------------------------------------------------------------------------
 (8) _isupper                                              2     0      2      31
 ---------------------------------------------------------------------------------
 (8) _strcpy                                               8     4      4     137
 ---------------------------------------------------------------------------------
 (8) _floorf                                              14    10      4     489
 ---------------------------------------------------------------------------------
 (8) ___fpclassifyf                                       10     6      4     195
 ---------------------------------------------------------------------------------
 (8) ___fltol                                              6     2      4     337
 ---------------------------------------------------------------------------------
 (8) ___flsub                                              8     0      8    2976
                            ___fladd
 ---------------------------------------------------------------------------------
 (9) ___fladd                                             12     4      8    2911
 ---------------------------------------------------------------------------------
 (8) ___flneg                                              4     0      4      65
 ---------------------------------------------------------------------------------
 (8) ___flmul                                             21    13      8    2165
 ---------------------------------------------------------------------------------
 (8) ___flge                                               8     0      8     266
 ---------------------------------------------------------------------------------
 (8) ___fleq                                               8     0      8     130
 ---------------------------------------------------------------------------------
 (8) ___fldiv                                             21    13      8    1652
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              6     2      4     433
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     445
 ---------------------------------------------------------------------------------
 (7) _dtoa                                                28    18     10    3327
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (8) _abs                                                  2     0      2      93
 ---------------------------------------------------------------------------------
 (8) ___aomod                                             18     2     16     433
 ---------------------------------------------------------------------------------
 (8) ___aodiv                                             26    10     16     445
 ---------------------------------------------------------------------------------
 (7) _ctoa                                                 7     4      3    1790
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                 10     4      6    1691
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (9) _strlen                                               4     2      2     130
 ---------------------------------------------------------------------------------
 (9) _fputs                                                7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (10) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (11) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (12) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (7) _atoi                                                11     9      2     603
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (8) _isspace                                              3     1      2      99
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              2     0      2      31
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      31
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      31
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      62
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      93
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      62
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      62
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      93
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      31
 ---------------------------------------------------------------------------------
 (4) _StartTimer                                           3     0      3      62
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     344
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      62
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      31
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      31
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      62
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      31
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      31
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      31
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      31
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      31
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      31
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      34
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      62
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      31
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      31
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      62
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      31
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      31
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            4     4      0     204
                                              0 BANK0      4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0     204
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (16) _switch_handler                                      2     2      0     204
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            4     4      0      90
                                              0 BANK1      4     4      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (18) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (18) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _ADCC_ThresholdISR                                   5     5      0      31
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (18) _adc_int_t_handler                                   0     0      0      31
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (19) _ADCC_StartConversion                                1     0      1      31
 ---------------------------------------------------------------------------------
 (19) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (18) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   _check_adc_scan
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _check_switches
   _clear_adc_scan
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_display_info
     _TimerDone
   _set_vterm
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _wait_lcd_done
       _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0      FF      19       99.6%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0      FF      17       99.6%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      DA      15       85.2%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      86      13       52.3%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      EC      11       92.2%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      A0       9       62.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100      4      C7       7       77.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      4      9A       5       96.2%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      6      37       1       87.3%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     682      58        0.0%
DATA                 0      0     682       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Nov 23 22:05:24 2019

                     _SPI1_Exchange8bit 83D2                __end_of_set_display_info 842C  
                                     _C 0300                                       _D 0500  
                                     _P 00BD                                       _R 00C7  
                                     _S 0060                                       _T FE5F  
                                     _V 0100        __end_of_TMR5_SetInterruptHandler 819A  
          __end_of_start_switch_handler 83D2                             __CFG_CP$OFF 000000  
               __size_of_ringBufS_flush 0092                  __end_of_FVR_Initialize 8626  
                           __CFG_LVP$ON 000000                                     l171 8542  
                                   l701 7FAE                                     l581 7F82  
                                   l835 83E0                                     _GIE 01FE97  
                                   _abs 7B08                                     _pad 66FE  
               __size_of_PMD_Initialize 0014                         _TMR2_Initialize 84EE  
                                   prod 003FF3                                     tosl 003FFD  
                                   wreg 003FE8                           _INT0_CallBack 8390  
                    _UART1_Transmit_ISR 7F5C                           __CFG_BBEN$OFF 000000  
                         _INT1_CallBack 836E                            __CFG_ZCD$OFF 000000  
                                  l1028 7CE0                                    l2017 1D78  
                                  l2301 6D96                                    l1335 78D2  
                                  l2312 60F4                                    l1256 3EDC  
                                  l1248 3D2C                                    l2305 6020  
                                  l1258 3EE2                                    l1551 7D7E  
                                  l1471 6EFE                                    l1608 8428  
                                  l1560 55A8                                    l1490 7DB2  
                                  l2339 5F92                                    l1475 7218  
                                  l1564 5704                                    l2700 5902  
                                  l1654 32E8                                    l1808 675A  
                                  l2624 385E                                    l1568 691C  
                                  l2731 7B48                                    l2723 5E20  
                                  l1828 3946                                    l2660 25A2  
                                  l1908 0B1A                                    l2900 73B4  
                                  l1693 5C8A                    _ADCC_StartConversion 855C  
                                  l2591 2BEE                                    l1864 123A  
                                  l2762 52AC                                    l2826 65DC  
                                  l1946 4BEE                                    l2579 2D5E  
                                  l1893 066A                                    l1967 4136  
                                  l2872 5ACA                                    l2887 7438  
                                  l9203 64F2                                    l8423 7C0A  
                                  l9215 707A                                    l9225 7106  
                                  l9217 709C                                    l8419 7BE0  
                                  l9403 2C2E                                    l9331 297C  
                                  l9315 28D8                                    l9243 2602  
                                  l9229 7144                                    l9413 2C56  
                                  l9325 294A                                    l9261 26C0  
                                  l9253 2658                                    l8631 6260  
                                  l9335 2986                                    l9255 2688  
                                  l9503 5DC2                                    l8633 6270  
                                  l9417 2C5C                                    l9329 296A  
                                  l9273 2732                                    l9249 2642  
                                  l8651 62EE                                    l8635 6276  
                                  l8643 6292                                    l9611 4EBE  
                                  l9451 2D3E                                    l9443 2CFE  
                                  l9363 2A6E                                    l9339 29B6  
                                  l9267 26F2                                    l9515 6C50  
                                  l8717 7F7E                                    l8637 627C  
                                  l8645 62BE                                    l9605 4E78  
                                  l9445 2D0E                                    l9429 2CBA  
                                  l9381 2B9E                                    l9357 2A52  
                                  l9285 279A                                    l9277 2748  
                                  l9509 5E18                                    l9541 45CA  
                                  l8639 628A                                    l9463 672A  
                                  l9623 4F90                                    l9711 34A8  
                                  l9439 2CE6                                    l9359 2A64  
                                  l9367 2AA0                                    l9279 2778  
                                  l9527 7428                                    l9473 67A0  
                                  l9705 3462                                    l9561 4780  
                                  l8739 7FAA                                    l8659 635C  
                                  l9467 6752                                    l9651 539C  
                                  l9643 5314                                    l9811 380A  
                                  l9731 353A                                    l9723 3520  
                                  l9379 2B78                                    l9555 46E8  
                                  l8765 7CC8                                    l9477 67EA  
                                  l9469 6764                                    l9485 7B38  
                                  l9805 37DA                                    l9741 35CA  
                                  l9717 34E6                                    l9709 3478  
                                  l9397 2C10                                    l9389 2BD2  
                                  l9565 47EE                                    l9557 4738  
                                  l9751 3612                                    l9399 2C22  
                                  l9583 73A4                                    l9817 3832  
                                  l9841 1E18                                    l9659 5448  
                                  l9819 3842                                    l9771 36B4  
                                  l9691 33CA                                    l9923 2396  
                                  l9843 1E1E                                    l9835 1DD8  
                                  l9499 5DBE                                    l9765 3698  
                                  l9757 3666                                    l9749 3600  
                                  l9685 3384                                    l9933 23D8  
                                  l9861 1EEC                                    l9853 1EA6  
                                  l9845 1E4E                                    l9599 4E24  
                                  l9775 36DA                                    l9759 366A  
                                  l9679 3344                                    l9943 2422  
                                  l9871 1F3E                                    l9863 1F1C  
                                  STR_1 FF62                                    STR_2 FFA4  
                                  l9785 3724                                    l9689 339A  
                                  l9961 24E2                                    l9929 23B2  
                                  STR_3 FFE0                                    STR_4 FF51  
                                  l9699 3422                                    l9947 2428  
                                  l9859 1EE6                                    STR_5 FF73  
                                  STR_6 FFA4                                    l9789 372A  
                                  l9957 249C                                    STR_7 FFE0  
                                  STR_8 FF40                                    l9799 379E  
                                  l9975 2550                                    l9967 250C  
                                  STR_9 FFB3                                    l9977 256A  
                                  l9997 6122                                    _LATA 003FBA  
                                  _LATB 003FBB                                    _LATC 003FBC  
                                  _LATD 003FBD                                    _LATE 003FBE  
                                  _LATF 003FBF                                    _T2PR 003FAB  
                                  _T6PR 003F93                                    _PMD0 0039C0  
                                  _PMD1 0039C1                                    _PMD2 0039C2  
                                  _PMD3 0039C3                                    _PMD4 0039C4  
                                  _PMD5 0039C5                                    _PMD6 0039C6  
                                  _PMD7 0039C7                                    u9000 29CE  
                                  u9100 2BC0                                    u9200 2CAA  
                                  u9140 2C34                                    u9060 2A96  
                                  u9205 2C9A                                    u9230 2CCA  
                                  u9160 2C4E                                    u9400 5E12  
                                  u9065 2A86                                    u9330 7B1C  
                                  u9410 6CCA                                    u9340 5D42  
                                  u9510 468E                                    u9430 73E6  
                                  u9270 7E92                                    u8800 70CA  
                                  u9440 73E8                                    u9280 7E94  
                                  u9345 5D38                                    u9417 6CBC  
                                  u9610 7EF2                                    u9530 4766  
                                  u9515 4684                                    u9620 7EF4  
                                  u9460 4562                                    u9710 4FC8  
                                  u9390 5E10                                    u9470 45AE  
                                  u8830 7EC2                                    u8807 70BC  
                                  u9535 475C                                    u9640 4E1E  
                                  u9800 53C8                                    u8840 7EC4  
                                  u9560 7C58                                    u9385 5DF2  
                                  u9465 4558                                    u8770 64E6  
                                  u9730 501A                                    u9570 7C5A  
                                  _PLLR 01CEE0                                    u9660 4E74  
                                  u9820 5480                                    u8940 28FE  
                                  u9580 7362                                    u8790 6562  
                                  u8950 291E                                    u9590 7364  
                                  u9671 4E7E                                    u8951 2918  
                                  u9495 45E8                                    u9680 4EB8  
                                  u9840 54D2                                    u9760 530E  
                                  u9496 45EE                                    u9497 45FC  
                                  u9690 4EEA                                    u9780 5364  
                                  u9790 5396                                    u8990 29AE  
                                  u8968 2920                                    u8995 299E  
                                  u9980 3692                                    _WPUA 003A41  
                                  _WPUB 003A51                                    _WPUC 003A61  
                                  _WPUD 003A71                                    _WPUE 003A81  
                                  _WPUF 003A91                        __end_of_ADCC_ISR 800A  
                         __CFG_FCMEN$ON 000000                                    _dbuf 0240  
                                  _atoi 5042                                    _ctoa 72B2  
                                  _main 3CE8                                    _dtoa 3868  
                                  _nanf 77A6                                    _seed 01BB  
                                  _prec 001D                                    _nout 0019  
                                  fsr0h 003FEA                                    fsr1h 003FE2  
                                  indf0 003FEF                                    fsr2h 003FDA  
                                  fsr0l 003FE9                                    indf1 003FE7  
                                  indf2 003FDF                                    fsr1l 003FE1  
                                  fsr2l 003FD9                                    _stoa 4B04  
                                  btemp 0032                                    _xtoa 40F2  
                __end_of_check_adc_scan 861E                           ___fpclassifyf 5C94  
                                  prodh 003FF4                                    prodl 003FF3  
                                  start 00AE                         _timer5ReloadVal 0023  
             __end_of_SPI1_Exchange8bit 83F0                          _check_switches 85FE  
                         __CFG_CSWEN$ON 000000                       _UART1_rx_vect_isr 828C  
                          ___param_bank 000000                      ?_UART1_rx_vect_isr 0052  
                      __end_of_INT0_ISR 85BA                        __end_of_INT1_ISR 7D26  
        __size_of_OSCILLATOR_Initialize 0016                __end_of_ringBufS_put_dma 6F06  
         __end_of_OSCILLATOR_Initialize 8548                                   l10003 6138  
                                 l10031 6232                                   l10023 61FE  
                                 l10111 60F2                                   l10103 60BC  
                                 l10009 6158                                   l10051 6630  
                                 l10043 6606                                   l10061 66B0  
                                 l10301 022C                                   l10215 3980  
                                 l10207 3936                                   l10047 6618  
                                 l10119 7A98                                   l11009 831E  
                                 l10081 6D60                                   l10153 5F2A  
                                 l10145 5EFE                                   l10129 5E7C  
                                 l10401 077A                                   l10305 0258  
                                 l10219 399E                                   l10155 5F40  
                                 l10147 5F1A                                   l10411 0926  
                                 l10331 0396                                   l10315 02FC  
                                 l10323 032A                                   l12011 3EE6  
                                 l10173 7A6A                                   l10181 72D0  
                                 l10253 3C9E                                   l10229 3BB0  
                                 l10069 66E4                                   l10085 6D94  
                                 l10077 6D1E                                   l10093 5FDE  
                                 l10341 04D2                                   l11045 7006  
                                 l11141 5800                                   l12013 3F14  
                                 l10183 72FC                                   l10511 0FD6  
                                 l10335 0406                                   l11151 5862  
                                 l11135 57BE                                   l11127 5752  
                                 l10249 3C62                                   l10513 0FF0  
                                 l10433 0B12                                   l10425 0A48  
                                 l10353 0554                                   l10337 0470  
                                 l11137 57CC                                   l12033 3F6C  
                                 l12025 3F48                                   l10099 606E  
                                 l10523 1092                                   l10435 0B34  
                                 l10267 00AC                                   l10603 4D46  
                                 l11147 582E                                   l11139 57E2  
                                 l12043 40AC                                   l10533 10E2  
                                 l10461 0CBA                                   l10373 05F6  
                                 l10365 0594                                   l10357 057C  
                                 l10621 4126                                   l11149 584C  
                                 l10703 511E                                   l10391 06B8  
                                 l10375 0602                                   l10359 058E  
                                 l10279 00F0                                   l10287 0146  
                                 l10607 4D82                                   l11159 5880  
                                 l12055 40E0                                   l10713 5200  
                                 l10705 5136                                   l10449 0C32  
                                 l10297 01EA                                   l10641 41FC  
                                 l10633 419C                                   l11089 7DBC  
                                 l11169 58E2                                   l10723 529C  
                                 l10707 515A                                   l10395 06F0  
                                 l10299 0216                                   l10627 4160  
                                 l10709 5198                                   l10549 119A  
                                 l10469 0D24                                   l10477 0D90  
                                 l10485 0EA2                                   l10741 5A00  
                                 l10901 1D04                                   l10813 165C  
                                 l10823 16F2                                   l11543 6834  
                                 l11711 5B50                                   l10497 0F3A  
                                 l10593 4C90                                   l10585 4C24  
                                 l10569 4B70                                   l10681 4462  
                                 l10657 42F2                                   l10665 4378  
                                 l10739 5994                                   l10843 18E8  
                                 l10835 1830                                   l10771 1326  
                                 l10907 1D24                                   l11635 2D98  
                                 l11707 5B38                                   l10589 4C60  
                                 l10773 1360                                   l11661 30E2  
                                 l11645 2EE2                                   PRLOCK 0039EF  
                                 l10687 505C                                   l10599 4D1A  
                                 l10847 191C                                   l10775 1376  
                                 l10951 49D8                                   l11921 7486  
                                 l10697 50F2                                   l10689 507E  
                                 l10793 14A8                                   l10945 496E  
                                 l11657 301A                                   l11649 2FE8  
                                 l11915 7476                                   l11595 7D94  
                                 l10891 1CA6                                   l10867 1A7C  
                                 l10795 14E2                                   l10971 6F30  
                                 l10939 48B0                                   l11675 32B6  
                                 l11683 32C8                                   l10877 1B2A  
                                 l10797 14F8                                   l10973 6F70  
                                 l11669 31EE                                   l11845 74C6  
                                 l10959 4A86                                   l10897 1D00  
                                 l11857 8094                                   l11961 3D0E  
                                 l11699 5B0C                                   l11963 3D16  
                                 l11885 5578                                   l11967 3D34  
                                 l11897 56A0                                   l11969 3D46  
                       __end_of___aodiv 5042                                   _ADCAP 003EF5  
                                 _ADACT 003EFE                         __end_of___fladd 2D68  
                                 _ADCLK 003EFF                         __end_of___aomod 54F6  
                                 _ADPCH 003EF1                         __end_of___fldiv 3868  
                                 _ADREF 003EFD                         __end_of___awdiv 624C  
                       __end_of___flneg 7AC2                                   STR_10 FFB3  
                                 STR_11 FF84                                   STR_20 FFCD  
                                 STR_12 FFFB                                   STR_13 FFF8  
                                 STR_21 FF95                                   STR_22 FF95  
                                 STR_23 FF95                                   STR_15 FFC1  
                                 STR_16 FFD7                                   STR_24 FEEF  
                                 STR_33 FF19                                   STR_17 FF1A  
                         __CFG_WDTE$OFF 000000                                   STR_18 FF1A  
                                 STR_42 FFF5                                   STR_34 FFE5  
                                 STR_26 FF2D                                   STR_35 FFED  
                                 STR_19 FFCD                                   STR_27 FF07  
                                 STR_44 FFF5                         __end_of___awmod 66FE  
                                 STR_38 FFE9                                   STR_39 FFF1  
                                 _ADRPT 003EEC                         __end_of___flmul 25AC  
                       __end_of___flsub 7B08                         __end_of___fltol 5F9C  
                                 u10020 371C                                   u10060 3778  
                                 u10300 24F6                                   u11020 0562  
                                 u10205 2350                                   u10070 37B2  
                                 u10080 37EE                                   u10240 241A  
                                 u12000 1B7E                                   u10065 3768  
                                 u10170 1F2C                                   u11050 05C6  
                                 u10420 665C                                   u10350 6184  
                                 u10440 66D0                                   u10280 2476  
                                 u11320 10B8                                   u11160 0A18  
                                 u12120 6FE6                                   u10185 20C0  
                                 u10370 621E                                   u10290 24B0  
                                 u11090 0648                                   u10195 2188  
                                 u10700 389A                                   u10540 7A94  
                                 u10620 5F48                                   u11340 116E  
                                 u11260 0EE4                                   u11420 4C86  
                                 u12220 5876                                   u10285 2466  
                                 u10550 5E5C                                   u11350 1170  
                                 u11430 4CCC                                   u11510 41F4  
                                 u12070 4AFA                                   u10800 3C1E  
                                 u10720 390A                                   u10480 6D90  
                                 u10640 5F72                                   u10560 5E70  
                                 u11520 4248                                   u12145 7C94  
                                 u11601 43C4                                   u10650 7A46  
                                 u10810 3C22                                   u10570 5EAA  
                                 u11610 43DA                                   u11530 424A  
                                 _U1P1H 003DED                                   u10555 5E52  
                                 u11611 43D8                                   u12260 7686  
                                 u10660 7A66                                   u10740 391C  
                                 u10900 0194                                   u11460 4DA8  
                                 u11620 43EE                                   u12404 2DD4  
                                 _U1P2H 003DEF                                   u11437 4CBE  
                                 u12405 2DCE                                   u10830 3C38  
                                 u10910 0196                                   u11630 43F2  
                                 u11550 42A8                                   _U1P1L 003DEC  
                                 _U1P3H 003DF1                                   u10575 5EA0  
                                 u10760 396C                                   u11560 42AA  
                                 u11480 410C                                   u11800 13BE  
                                 u12600 56F0                                   u12424 3002  
                                 _T2CON 003FAC                                   _U1P2L 003DEE  
                                 u12425 2FFC                                   u10770 3BC4  
                                 u10690 3898                                   u11810 13C0  
                                 u12610 56F2                                   _U1P3L 003DF0  
                                 u11660 50EE                                   u10940 02A6  
                                 u11580 4374                                   u11820 13E6  
                                 u12444 30FC                                   u12364 2D82  
                                 u12285 76BA                                   u10781 3BF4  
                                 u12445 30F6                                   u12365 2D7C  
                                 u12286 76BC                                   u12278 7688  
                                 u10790 3C0A                                   u10950 02A8  
                                 u10870 00DA                                   u11590 4394  
                                 u12470 3126                                   _U2P1L 003DD4  
                                 u10791 3C08                                   u11680 5246  
                                 u11760 5A8C                                   u11920 1746  
                                 u12464 311E                                   u12384 2DB2  
                                 u12480 5AEA                                   _U2P2L 003DD6  
                                 u11585 4356                                   u12465 3118  
                                 u12385 2DAC                                   u11690 5248  
                                 u11850 1540                                   _U2P3L 003DD8  
                                 u11860 1542                                   u10990 050E  
                                 u11950 19D6                                   u11870 1568  
                                 _T5CLK 003F9D                                   u11960 19D8  
                                 _T2HLT 003FAD                                   _T5CON 003F9A  
                                 _T6CON 003F94                          __CFG_DEBUG$OFF 000000  
                                 _T6HLT 003F95              _ADCC_ADTI_InterruptHandler 0001  
                                 _T2TMR 003FAA                                   _U1UIR 003DF8  
                                 _T2RST 003FAF                                   _U1RXB 003DE8  
                                 _U2UIR 003DE0                                   _U1TXB 003DEA  
                                 _U2RXB 003DD0                                   _U2TXB 003DD2  
                                 _T6TMR 003F92                                   _T6RST 003F97  
                   ??_UART1_rx_vect_isr 0057                                   _ISRPR 0039F1  
                                 _OSCEN 0039DD                                   _TMR5H 003F99  
                                 _TMR5L 003F98                                   _TRISA 003FC2  
                                 _TRISB 003FC3                                   _TRISC 003FC4  
                                 _TRISD 003FC5                                   _TRISE 003FC6  
                                 _TRISF 003FC7                             _Default_ISR 8638  
               __size_of_clear_adc_scan 0006       __size_of_TMR6_SetInterruptHandler 0028  
                     _UART1_tx_vect_isr 8264                           __CFG_WRTB$OFF 000000  
                         __CFG_WRTC$OFF 000000                           __CFG_WRTD$OFF 000000  
                      __end_of_TMR5_ISR 79D6                            _DMA1CON0bits 003BFC  
                      __end_of_TMR6_ISR 84D6                            _DMA1CON1bits 003BFD  
                                 _flags 001F                                   _fputc 64C2  
            __size_of_send_lcd_cmd_long 0028                         __end_of_isalpha 7C64  
                                 _fputs 70F6                         __end_of_isdigit 7EFE  
                    __CFG_MCLRE$EXTMCLR 000000                      ?_UART1_tx_vect_isr 0052  
                                 _srand 7E06                                   _width 001B  
                                 _putch 84A0                         __end_of_islower 7E9E  
                       __end_of_isspace 7A7A                _INT1_SetInterruptHandler 819A  
                       __end_of_isupper 7ECE                                   pclath 003FFA  
                                 tablat 003FF5                                   ltemp0 0032  
                                 ltemp1 0036                                   ltemp2 003A  
              __size_of_DMA1_Initialize 006A                                   plusw1 003FE3  
                                 plusw2 003FDB                                   ttemp0 0032  
                                 ttemp1 0035                                   ttemp2 0038  
                                 ttemp3 003B                                   ttemp5 0033  
                                 ttemp6 0036                                   ttemp7 003A  
                                 status 003FD8     __end_of_UART1_SetRxInterruptHandler 814A  
           _UART1_SetRxInterruptHandler 8122                                   wtemp0 0032  
                                 wtemp1 0034                                   wtemp2 0036  
                                 wtemp3 0038                                   wtemp4 003A  
                                 wtemp5 003C                                   wtemp8 0033  
                       __end_of_sprintf 6A2A                         __end_of_tolower 7442  
                __end_of_check_switches 8606                         __end_of_strncmp 5AD4  
                       __end_of_toupper 73BE                     ??_UART1_tx_vect_isr 0057  
             __size_of_DMA1_DMADCNT_ISR 000A               __end_of_UART1_rx_vect_isr 82B2  
              __size_of_SPI1_Initialize 0016                         _TMR5_Initialize 7B94  
                 __end_of_ringBufS_init 8082                         __initialization 6A2A  
                     _UART2_rx_vect_isr 82DC                            __end_of_atoi 52B6  
                          __end_of_ctoa 733A                            __end_of_main 40F2  
                          __end_of_dtoa 3CE8                            __end_of_nanf 7808  
                          __end_of_stoa 4DC2                            __end_of_xtoa 44AC  
                        __CFG_SAFEN$OFF 000000                      ?_UART2_rx_vect_isr 0052  
               __end_of_TMR2_Initialize 8506                __size_of_DMA2_Initialize 005A  
              _TMR5_SetInterruptHandler 8172                           __activetblptr 000003  
             __size_of_DMA1_DMASCNT_ISR 000E    __size_of_UART1_SetTxInterruptHandler 0028  
                   ??_UART2_rx_vect_isr 0057               __end_of_UART1_tx_vect_isr 828A  
                                INTCON0 003FD2    __size_of_UART2_SetRxInterruptHandler 0028  
                        __CFG_MVECEN$ON 000000                         _TMR6_Initialize 7FB4  
                       _PWM8_Initialize 851C                        _UART1_Initialize 7742  
                     _UART2_tx_vect_isr 82B4                      _UART2_Transmit_ISR 7F88  
                                _ADACCU 003EEA                                  _ADACQH 003EF4  
                                _ADACQL 003EF3                                  _ADCON0 003EF8  
                                _ADCON1 003EF9                                  _ADCON2 003EFA  
                                _ADCON3 003EFB                          _start_adc_scan 76DE  
                                _ADLTHH 003EDF                                  _ADLTHL 003EDE  
                                _ADPREH 003EF7                                  _ADPREL 003EF6  
                                _DMA1PR 0039F3                                  _DMA2PR 0039F4  
                                _ADSTAT 003EFC                                  _ADUTHH 003EE1  
                                _ADUTHL 003EE0                      _PWM8_LoadDutyValue 7C64  
                                _ANSELA 003A40                                  _ANSELB 003A50  
                                _ANSELC 003A60                                  _ANSELD 003A70  
                                _ANSELE 003A80                                  _ANSELF 003A90  
                    ?_UART2_tx_vect_isr 0052                                  _U1CON0 003DF2  
                                _U1CON1 003DF3                                  _U1CON2 003DF4  
                                _U1BRGH 003DF6                                  _U1FIFO 003DF7  
                                _U2CON0 003DDA                                  _U2CON1 003DDB  
                                _U1BRGL 003DF5                                  _U2CON2 003DDC  
                                _U2BRGH 003DDE                                  _U2FIFO 003DDF  
                                _U2BRGL 003DDD                                  _T5GATE 003F9C  
                                _T5GCON 003F9B                                  _MAINPR 0039F2  
                                _RC3PPS 003A13                                  _RD1PPS 003A19  
                                _RB6PPS 003A0E                                  i1l1045 79C8  
                  _start_switch_handler 83B2                                  _RC5PPS 003A15  
                                _ODCONA 003A42                                  _ODCONB 003A52  
                                _ODCONC 003A62                                  _RC6PPS 003A16  
                                _ODCOND 003A72                                  _ODCONE 003A82  
                                _ODCONF 003A92                          __CFG_WDTCCS$SC 000000  
                                _FVRCON 003EC1                        _mode_lamp_bright 859C  
                                _SCANPR 0039F7                                  _IVTADH 00389E  
                                _IVTADL 00389D                                  _IVTADU 00389F  
                                u391_48 839E            __size_of_eaDogM_WriteCommand 000E  
                                _OSCFRQ 0039DF                                  u822_20 6286  
                                u822_21 6280                                  u830_28 837C  
                                u841_28 8336                                  u826_24 6352  
                                u826_25 634E                                  u828_20 6378  
                                u819_28 6266                                  u828_26 637A  
                                u838_48 835A                                  u797_20 8242  
                                u797_26 8244                        __end_of___xxtofl 590C  
 __end_of_ADCC_DischargeSampleCapacitor 85FE  __size_of_ADCC_DischargeSampleCapacitor 0008  
         _ADCC_DischargeSampleCapacitor 85F6                __end_of_send_lcd_cmd_dma 7A28  
                   ??_UART2_tx_vect_isr 0057               __end_of_UART2_rx_vect_isr 8302  
            __size_of_SPI1_Exchange8bit 001E                  __size_of_DMA1_DMAA_ISR 000A  
                        __CFG_XINST$OFF 000000                       _CLKREF_Initialize 85CA  
                      _UART2_Initialize 786A                                  _WaitMs 7D9A  
                       _conv_raw_result 2D68                            _CCPTMRS1bits 003F5F  
  __size_of_ADCC_SetADIInterruptHandler 0028                                  ___flge 5F9C  
                                ___fleq 6CDC                       _ADCC_ThresholdISR 7610  
                        __CFG_STVREN$ON 000000                          _ringBufS_flush 718E  
                                _efgtoa 0000                                  _floorf 44AC  
                    ?_ADCC_ThresholdISR 0052                                  _memset 4818  
                  __size_of_help_button 0038                                  clear_0 6A98  
                                clear_1 6AAC                                  clear_2 6ABE  
                                clear_3 6ACA                                  clear_4 6AD6  
                                clear_5 6AE2                                  clear_6 6AEE  
                                clear_7 6AFA                                  clear_8 6B06  
                                _printf 7808                      _eaDogM_WriteString 6FAE  
                                _strcpy 6C08                               ?_ADCC_ISR 0052  
                                _strlen 7054                      __size_of_TimerDone 0024  
                       _ADCC_Initialize 75A4                          _PMD_Initialize 8548  
             __end_of_UART2_tx_vect_isr 82DA                                  lltemp0 0032  
                                lltemp1 003A                                  lltemp2 0042  
                                lltemp3 004A                     ??_ADCC_ThresholdISR 0052  
                __end_of_start_adc_scan 7742                            __mediumconst FE5E  
                                preinc2 003FDC                                  tblptrh 003FF7  
                                tblptrl 003FF6                                  tblptru 003FF8  
                      __end_of_wdtdelay 7922                        __end_of_vfprintf 6FAE  
                            _StartTimer 7D26           __size_of_INTERRUPT_Initialize 0066  
               __end_of_TMR5_Initialize 7BDA                       _SYSTEM_Initialize 7B4E  
                            __accesstop 0060                 __end_of__initialization 6B18  
                             ?_INT0_ISR 0052                               ?_INT1_ISR 0052  
                  __end_of_display_help 8616                    __end_of_display_info 860E  
             __end_of_CLKREF_Initialize 85D4                           ___rparam_used 000001  
            __size_of_UART1_rx_vect_isr 0026                         _TMR5_WriteTimer 7CA6  
                 _set_temp_display_help 857E               __end_of_ADCC_ThresholdISR 7678  
                __end_of_ringBufS_flush 7220                          __pcstackCOMRAM 0052  
                            ___inthi_sp 1000                              ___intlo_sp 1800  
                          __pidataBANK0 7EFE                            __pidataBANK1 6DA0  
                          __pidataBANK2 856E                               ?_TMR5_ISR 0052  
                             ?_TMR6_ISR 0052                          ivt0x8_undefint 00AC  
                         __end_of_fputc 65E6                           __end_of_fputs 718E  
                         __end_of_srand 7E3A                   __end_of_TMR5_CallBack 834A  
                         __end_of_putch 84BA                 __end_of_PWM8_Initialize 8532  
               __end_of_TMR6_Initialize 7FDE                       _adc_int_t_handler 7442  
                __end_of_PMD_Initialize 855C                              ??_ADCC_ISR 0052  
                 __end_of_TMR6_CallBack 836E             __size_of_EXT_INT_Initialize 0034  
            __size_of_UART1_tx_vect_isr 0026                           _DMA1_DMAA_ISR 85E0  
                        _clear_adc_scan 8626                  __size_of_mode_lamp_dim 0018  
              _UART2_RxInterruptHandler 0010               __end_of_SYSTEM_Initialize 7B94  
                       __CFG_PR1WAY$OFF 000000                         __CFG_IVT1WAY$ON 000000  
                            __pbssBANK0 0060                              __pbssBANK1 01BB  
                            __pbssBANK2 0200                              __pbssBANK3 0300  
                            __pbssBANK4 0400                              __pbssBANK5 0500  
                            __pbssBANK6 0600                              __pbssBANK7 0700  
                            _check_help 54F6                 __end_of_conv_raw_result 32EE  
                 _INT0_InterruptHandler 0016                              ??_INT0_ISR 0052  
                            ??_INT1_ISR 00F6                       __end_of_TimerDone 8326  
                      _DMA1_DMADCNT_ISR 85D4              __size_of_UART2_rx_vect_isr 0026  
                               IVTBASEH 003FD6                                 IVTBASEL 003FD5  
                               IVTBASEU 003FD7                      __size_of_lp_filter 01C0  
                 __end_of_wait_lcd_done 8484                         __CFG_PPS1WAY$ON 000000  
      __end_of_TMR6_SetInterruptHandler 8172                 __end_of_ADCC_Initialize 760E  
                            ??_TMR5_ISR 01C3               __end_of_adc_int_t_handler 74C0  
                            ??_TMR6_ISR 0057                                 _ADFLTRH 003EE7  
                               _ADFLTRL 003EE6                                 _DMA1DSA 003BF0  
                               _DMA2DSA 003BD0                                 _DMA1DSZ 003BEE  
                               _DMA2DSZ 003BCE                                 _DMA1SSA 003BF9  
                               _DMA2SSA 003BD9    __end_of_ADCC_SetADTIInterruptHandler 8212  
 __size_of_ADCC_SetADTIInterruptHandler 0028            _ADCC_SetADTIInterruptHandler 81EA  
                               _DMA1SSZ 003BF7                                 _DMA2SSZ 003BD7  
                               _ADSTPTH 003EE5                                 _ADSTPTL 003EE4  
                     _UART1_Receive_ISR 842C                                 _CLKRCLK 003CE6  
                               _CLKRCON 003CE5                  __end_of_clear_adc_scan 862C  
                        ?_DMA1_DMAA_ISR 0052                        _DMA1_DMASCNT_ISR 85BC  
                               _U1ERRIE 003DFA                      __size_of_set_vterm 001C  
                               _U1ERRIR 003DF9                                 _U2ERRIE 003DE2  
                               _U2ERRIR 003DE1                                 u1263_44 74A6  
                               u1263_45 74A0                                 _INT0PPS 003AC0  
                   __CFG_PWRTS$PWRT_OFF 000000                                 _INT1PPS 003AC1  
                          ?_Default_ISR 0052              __size_of_UART2_tx_vect_isr 0026  
                               _U1RXPPS 003AE5                                 _U2RXPPS 003AE8  
                               _OSCCON1 0039D9                                 _OSCCON3 0039DB  
                               _IVTLOCK 003FD4                      __size_of_vfpfcnvrt 0B3E  
                               _SPI1CLK 003D1C                                 _SPI1RXB 003D10  
                               _SPI1TXB 003D11                                 _OSCTUNE 0039DE  
                               _PWM8DCH 003F61                                 _PWM8DCL 003F60  
                               _PWM8CON 003F62                                 _SLRCONA 003A43  
                               _SLRCONB 003A53                                 _SLRCONC 003A63  
                               _SLRCOND 003A73                                 _SLRCONE 003A83  
                               _SLRCONF 003A93                              _get_switch 8082  
                    __size_of_start_lcd 0006                 __end_of_TMR5_WriteTimer 7CE6  
               __size_of_switch_handler 0148       __size_of_INT0_SetInterruptHandler 0028  
            __size_of_CLKREF_Initialize 000A                 __size_of_DMA1_DMAOR_ISR 000A  
                               __Hparam 0000              __size_of_ADCC_ThresholdISR 0068  
                         _mode_lamp_dim 84D6                                 __Lparam 0000  
              __end_of_UART1_Initialize 77A6                         __size_of_WaitMs 0036  
                       __size_of___flge 0162                         __size_of___fleq 00C4  
                               ___aodiv 4DC2                                 ___fladd 25AC  
                               ___aomod 52B6                                 ___fldiv 32EE  
                               ___awdiv 60FE                                 ___flneg 7A7A  
                               ___awmod 65E6                                 ___flmul 1D82  
                               ___flsub 7AC2                                 ___fltol 5E2A  
             __end_of_UART1_Receive_ISR 844A                         __size_of_efgtoa 1244  
                       __size_of_floorf 036C                    __end_of_init_display 6C08  
                               __pcinit 6A2A                __end_of_mode_lamp_bright 85AA  
                       __size_of_memset 02EC                __size_of_adc_int_handler 0002  
                   _eaDogM_WriteCommand 858E                                 __ramtop 2000  
           __size_of_UART1_Transmit_ISR 002C                                 __ptext0 3CE8  
                               __ptext1 83B2                                 __ptext2 76DE  
                               __ptext3 855C                                 __ptext4 85F6  
                               __ptext5 7E06                                 __ptext6 6B1E  
                               __ptext7 800A                                 __ptext8 8032  
                               __ptext9 83D2                       _UART2_Receive_ISR 844A  
                       __size_of_printf 0062                         __CFG_WRTAPP$OFF 000000  
                       __size_of_strcpy 00D4                         __size_of_strlen 00A2  
                 _OSCILLATOR_Initialize 8532                            __size_of_abs 0046  
                          __size_of_pad 0114                                 _isalpha 7C20  
                               _isdigit 7ECE                                 _mode_sw 0025  
                               us974999 502C                                 us985999 54E4  
                     __end_of_lp_filter 5C94                                 _islower 7E6E  
                               _isspace 7A28                         __CFG_WRTSAF$OFF 000000  
                             _T5CONbits 003F9A                __end_of_UART2_Initialize 78C8  
                               _isupper 7E9E              __size_of_SYSTEM_Initialize 0046  
                               _sprintf 6920                                 _tolower 73BE  
                 __size_of_display_help 0008                                 _utctime 00B5  
                 __size_of_display_info 0008                                 _strncmp 590C  
                               _toupper 733A                    end_of_initialization 6B18  
             __size_of_convert_adc_data 007A     __end_of_UART1_SetTxInterruptHandler 8122  
           _UART1_SetTxInterruptHandler 80FA     __end_of_UART2_SetRxInterruptHandler 80FA  
           _UART2_SetRxInterruptHandler 80D2                               i2u1266_48 7644  
                             i2u1266_49 7658                       __end_of_set_vterm 84A0  
                     __end_of_vfpfcnvrt 1D82                               _SPI1TCNTL 003D12  
                               postdec0 003FED                                 postdec1 003FE5  
                               postdec2 003FDD                                 postinc0 003FEE  
                               postinc1 003FE6                                 postinc2 003FDE  
            __size_of_adc_int_t_handler 007E                     __size_of_StartTimer 003C  
                     __end_of_start_lcd 8638               __end_of_UART2_Receive_ISR 8468  
                        wdtdelay@dcount 00B9                   __CFG_WDTCPS$WDTCPS_31 000000  
                       ??_DMA1_DMAA_ISR 0058                   _INT1_InterruptHandler 0013  
                             _PORTBbits 003FCB                               _PORTFbits 003FCF  
              _TMR6_SetInterruptHandler 814A                            _display_help 860E  
                 _TMR5_InterruptHandler 00C1                            _display_info 8606  
  __size_of_UART2_SetTxInterruptHandler 0028                       __size_of_ADCC_ISR 002A  
   __end_of_ADCC_SetADIInterruptHandler 823A             _ADCC_SetADIInterruptHandler 8212  
                            _update_lcd 6812                  __size_of_ringBufS_init 0028  
                      __CFG_FEXTOSC$ECH 000000                         _DMA1_Initialize 753A  
                       _SPI1_Initialize 8506                   __end_of_get_vterm_ptr 7F5C  
                     __size_of_INT0_ISR 000E                       __size_of_INT1_ISR 003E  
                        __end_of_WaitMs 7DD0            __end_of_INTERRUPT_Initialize 76DE  
                            _vterm_dump 6394                          __end_of___flge 60FE  
                        __end_of___fleq 6DA0    __end_of_INT0_DefaultInterruptHandler 8642  
 __size_of_INT0_DefaultInterruptHandler 0002            _INT0_DefaultInterruptHandler 8640  
            __size_of_UART1_Receive_ISR 001E                         _DMA2_Initialize 7922  
                        __end_of_efgtoa 1244                       __size_of_TMR5_ISR 005A  
                     __size_of_TMR6_ISR 001A                     __size_of_check_help 0212  
                        __end_of_floorf 4818             __size_of_UART2_Transmit_ISR 002C  
                            floorf@F524 00AD                          __end_of_memset 4B04  
                        __end_of_printf 786A                __end_of_DMA1_DMADCNT_ISR 85DE  
           __size_of_PWM8_LoadDutyValue 0042                   __end_of_INT0_CallBack 83B2  
                        __end_of_strcpy 6CDC                          __end_of_strlen 70F6  
                   start_initialization 6A2A    __end_of_TMR5_DefaultInterruptHandler 8262  
 __size_of_TMR5_DefaultInterruptHandler 0028            _TMR5_DefaultInterruptHandler 823A  
       __size_of_PIN_MANAGER_Initialize 0092                             __end_of_abs 7B4E  
                 __end_of_INT1_CallBack 8390               __size_of_set_display_info 001E  
                           __end_of_pad 6812                    __size_of_Default_ISR 0006  
                  __end_of_send_lcd_cmd 805A                          _switch_handler 624C  
         __size_of_ADCC_StartConversion 0012                              ivt0x8_base 0008  
                         _uart1RxBuffer 0600                   __end_of___fpclassifyf 5E2A  
                         _uart2RxBuffer 0700                           _uart1TxBuffer 03AC  
              __end_of_DMA1_DMASCNT_ISR 85CA                           _uart2TxBuffer 036C  
                        _DMA1_DMAOR_ISR 85EC                        __CFG_LPBOREN$OFF 000000  
                 __size_of_init_display 00EA             __size_of_eaDogM_WriteString 00A6  
                             _TimerDone 8302                           _ringBufS_init 805A  
                           __pdataBANK0 00C7                             __pdataBANK1 0100  
                           __pdataBANK2 0290              __size_of_UART2_Receive_ISR 001E  
                   __size_of_get_switch 0028              __end_of_EXT_INT_Initialize 7E6E  
                   __end_of_help_button 7D9A         __end_of_eaDogM_WriteStringAtPos 7E06  
               __end_of_DMA1_Initialize 75A4                             __pbssCOMRAM 0001  
      __end_of_INT0_SetInterruptHandler 81EA                           __pcstackBANK0 00F6  
                         __pcstackBANK1 01C3                __size_of_TMR2_Initialize 0018  
                __end_of_switch_handler 6394                       __size_of___xxtofl 0204  
               __end_of_SPI1_Initialize 851C                _UART1_RxInterruptHandler 000A  
              _UART2_TxInterruptHandler 000D                               __end_of_T FEEF  
                      _convert_adc_data 74C0               __size_of_ringBufS_put_dma 00AA  
                          _init_display 6B1E                  __end_of_DMA1_DMAOR_ISR 85F6  
                __size_of_TMR5_CallBack 0024                   _TMR6_InterruptHandler 00C4  
                __size_of_TMR6_CallBack 0024                 __end_of_DMA2_Initialize 797C  
                _PIN_MANAGER_Initialize 7220                    __end_of_wait_lcd_set 8632  
                         __pmediumconst FE5E                               __ptext100 851C  
                             __ptext101 8548                               __ptext110 753A  
                             __ptext102 7220                               __ptext111 85CA  
                             __ptext103 8532                               __ptext120 7CA6  
                             __ptext112 75A4                               __ptext104 7678  
                             __ptext121 8326                               __ptext113 81EA  
                             __ptext105 861E                               __ptext130 8644  
                             __ptext122 823A                               __ptext114 8212  
                             __ptext106 7E3A                               __ptext131 7610  
                             __ptext123 85AC                               __ptext115 7CE8  
                             __ptext107 819A                               __ptext140 84BC  
                             __ptext132 8264                               __ptext124 8390  
                             __ptext116 836E                               __ptext108 81C2  
                             __ptext141 834A                               __ptext133 7F5C  
                             __ptext125 8640                               __ptext117 863E  
                             __ptext109 7922                               __ptext142 7BDA  
                             __ptext134 828C                               __ptext126 8638  
                             __ptext118 624C                               __ptext143 85BC  
                             __ptext135 842C                               __ptext127 7FE0  
                             __ptext119 797C                               __ptext144 85D4  
                             __ptext136 82B4                               __ptext128 7442  
                             __ptext145 85E0                               __ptext137 7F88  
                             __ptext129 8642                               __ptext146 85EC  
                             __ptext138 82DC                               __ptext147 0000  
                             __ptext139 844A                      __end_of_StartTimer 7D62  
                     __size_of_wdtdelay 005A                       __size_of_vfprintf 00A8  
                              _ADCC_ISR 7FE0                  __CFG_BBSIZE$BBSIZE_512 000000  
                              _DMA1CON0 003BFC                                _DMA1CON1 003BFD  
                              _DMA1AIRQ 003BFE                                _DMA2CON0 003BDC  
                              _DMA2CON1 003BDD                                _DMA2AIRQ 003BDE  
                              _DMA1SIRQ 003BFF                                _DMA2SIRQ 003BDF  
               __size_of_get_raw_result 001E                  __size_of_wait_lcd_done 001C  
                        __size_of_fputc 0124                                _T2CLKCON 003FAE  
                        __size_of_fputs 0098                               _lp_filter 5AD4  
                        __size_of_srand 0034                          __size_of_putch 001A  
                  _INTERRUPT_Initialize 7678                                _T6CLKCON 003F96  
         __size_of_start_switch_handler 0020                         ?_DMA1_DMAOR_ISR 0052  
                              _INT0_ISR 85AC                                _INT1_ISR 7CE8  
                              _LATCbits 003FBC                                _LATDbits 003FBD  
                              _LATEbits 003FBE       __size_of_INT1_SetInterruptHandler 0028  
                              _IPR1bits 003981                                _IPR2bits 003982  
                              _PIE1bits 003991                                _IPR3bits 003983  
                              _PIE2bits 003992                                _IPR5bits 003985  
                              _PIE3bits 003993                               _tickCount 0089  
                              _IPR6bits 003986                                _PIE5bits 003995  
                              _IPR8bits 003988                                _PIE6bits 003996  
                              _IPR9bits 003989                                _PIE8bits 003998  
                   __CFG_BORV$VBOR_2P45 000000                                _PIE9bits 003999  
                             _ring_buf1 0443                               _ring_buf2 0400  
                              i2u420_48 7FF6                                _PIR1bits 0039A1  
                              _PIR2bits 0039A2                                _SPI1BAUD 003D19  
                              _PIR4bits 0039A4                                _SPI1CON0 003D14  
                              _SPI1CON1 003D15                                _SPI1CON2 003D16  
                              _PIR5bits 0039A5                                _PIR8bits 0039A8  
                              _PIR9bits 0039A9                                i2u861_48 829E  
                              i2u863_48 82C6                                i2u865_48 82EE  
                              i2u859_48 8276                __size_of_TMR5_Initialize 0046  
                             _set_vterm 8484                     __size_of_update_lcd 010E  
                           _help_button 7D62              __end_of_UART1_Transmit_ISR 7F88  
                              _TMR5_ISR 797C                                _TMR6_ISR 84BC  
                             _port_data 0290                               _vfpfcnvrt 1244  
                          _SPI1INTFbits 003D1A                           _TMR5_CallBack 8326  
                            _ADCON0bits 003EF8                      __end_of_check_help 5708  
                             _start_lcd 8632                 __size_of_FVR_Initialize 0008  
             __size_of_send_lcd_cmd_dma 0052                           _TMR6_CallBack 834A  
                 __size_of_send_lcd_cmd 0028       __size_of_TMR5_SetInterruptHandler 0028  
                      _set_display_info 840E                __size_of_PWM8_Initialize 0016  
              __size_of_TMR6_Initialize 002A                             _INTCON0bits 003FD2  
                             copy_data0 6A3E                               copy_data1 6A60  
                             copy_data2 6A82                _INT0_SetInterruptHandler 81C2  
                   __size_of_vterm_dump 012E                  _uart1TxBufferRemaining 002F  
   __end_of_UART2_SetTxInterruptHandler 80D2             _UART2_SetTxInterruptHandler 80AA  
                          _uart1RxCount 002C                            _uart2RxCount 0026  
                              __Hrparam 0000        __size_of_eaDogM_WriteStringAtPos 0036  
               __CFG_RSTOSC$EXTOSC_4PLL 000000                                __Lrparam 0000  
               __size_of_check_adc_scan 0008                      __CFG_BOREN$SBORDIS 000000  
              __size_of_conv_raw_result 0586                           _wait_lcd_done 8468  
                          _send_lcd_cmd 8032                        __size_of___aodiv 0280  
                      __size_of___fladd 07BC                        __size_of___aomod 0240  
                       _adc_int_handler 8644                        __size_of___fldiv 057A  
                      __size_of___awdiv 014E                        __size_of___flneg 0048  
                      __size_of___awmod 0118                        __size_of___flmul 082A  
                      __size_of___flsub 0046                        __size_of___fltol 0172  
                    __end_of_get_switch 80AA                   __end_of_DMA1_DMAA_ISR 85EA  
                    ___fpclassifyf@F463 00B1    __size_of_UART1_SetRxInterruptHandler 0028  
                       lp_filter@smooth 0200                                ___xxtofl 5708  
                     ?_DMA1_DMADCNT_ISR 0052                __size_of_ADCC_Initialize 006A  
           __end_of_eaDogM_WriteCommand 859C                        __size_of_isalpha 0044  
                      __size_of_isdigit 0030                                __pivt0x8 0008  
                      __size_of_islower 0030                        __size_of_isspace 0052  
                    ??_DMA1_DMADCNT_ISR 0058                                __ptext10 805A  
                              __ptext11 8082                                __ptext20 85FE  
                              __ptext12 858E                                __ptext21 54F6  
                              __ptext13 74C0                                __ptext30 78C8  
                              __ptext22 6394                                __ptext14 5AD4  
                              __ptext31 6FAE                                __ptext23 6920  
                              __ptext15 2D68                                __ptext40 733A  
                              __ptext32 862C                                __ptext24 7F2E  
                              __ptext16 77A6                                __ptext41 7E6E  
                              __ptext33 8632                                __ptext25 7D9A  
                              __ptext17 83F0                                __ptext50 5C94  
                              __ptext42 7C20                                __ptext34 718E  
                              __ptext26 6812                                __ptext18 5708  
                              __ptext51 5E2A                                __ptext43 590C  
                              __ptext35 4818                                __ptext27 7DD0  
                              __ptext19 8626                                __ptext60 60FE  
                              __ptext52 7AC2                                __ptext44 4B04  
                              __ptext36 7808                                __ptext28 79D6  
                              __ptext61 3868                                __ptext53 25AC  
                              __ptext45 0000                                __ptext37 6F06  
                              __ptext29 8468                                __ptext70 84A0  
                              __ptext62 7B08                                __ptext54 7A7A  
                              __ptext46 73BE                                __ptext38 1244  
                              __ptext71 6E5C                                __ptext63 52B6  
                              __ptext55 1D82                                __ptext47 7E9E  
                              __ptext39 40F2                                __ptext80 7C64  
                              __ptext72 5042                                __ptext64 4DC2  
                              __ptext56 5F9C                                __ptext48 6C08  
                              __ptext81 7D62                                __ptext73 7A28  
                              __ptext65 72B2                                __ptext57 6CDC  
                              __ptext49 44AC                                __ptext90 80D2  
                              __ptext82 8302                                __ptext74 7ECE  
                              __ptext66 66FE                                __ptext58 32EE  
                              __ptext91 7742                                __ptext83 7D26  
                              __ptext75 8484                                __ptext67 7054  
                              __ptext59 65E6                                __ptext92 80FA  
                              __ptext84 8606                                __ptext76 857E  
                              __ptext68 70F6                                __ptext93 8122  
                              __ptext85 860E                                __ptext77 840E  
                              __ptext69 64C2                                __ptext94 7FB4  
                              __ptext86 8616                                __ptext78 84D6  
                              __ptext95 814A                                __ptext87 7B4E  
                              __ptext79 859C                                __ptext96 7B94  
                              __ptext88 786A                                __ptext97 8172  
                              __ptext89 80AA                                __ptext98 84EE  
                              __ptext99 8506                        __size_of_isupper 0030  
                              us1150999 4172                        __size_of_sprintf 010A  
                      __size_of_tolower 0084                                us1137999 4B16  
                              us1068999 3882                        __size_of_strncmp 01C8  
                      __size_of_toupper 0084                        _ringBufS_put_dma 6E5C  
                         __size_of_atoi 0274                           __size_of_ctoa 0088  
                         __size_of_main 040A                           __size_of_dtoa 0480  
                         __size_of_nanf 0062                   __size_of_wait_lcd_set 0006  
                         __size_of_stoa 02BE                           __size_of_xtoa 03BA  
                  __CFG_WDTCWS$WDTCWS_7 000000                       ?_DMA1_DMASCNT_ISR 0052  
                           _IVTLOCKbits 003FD4                __size_of_TMR5_WriteTimer 0040  
               __size_of_check_switches 0008               _ADCC_ADI_InterruptHandler 0004  
                             stoa@F1166 00EF                      ??_DMA1_DMASCNT_ISR 0058  
          __end_of_ADCC_StartConversion 856E                                _spi_link 00A1  
                              _wdtdelay 78C8              __end_of_UART2_Transmit_ISR 7FB4  
                              _vfprintf 6F06                __end_of_convert_adc_data 753A  
            __end_of_PWM8_LoadDutyValue 7CA6    __end_of_INT1_DefaultInterruptHandler 8640  
 __size_of_INT1_DefaultInterruptHandler 0002            _INT1_DefaultInterruptHandler 863E  
                         ??_Default_ISR 0052                             _uart1RxHead 002E  
                __size_of_get_vterm_ptr 002E                             _uart1TxHead 0031  
                           _uart2RxHead 0028                             _uart1RxTail 002D  
                        _get_raw_result 83F0                             _uart2TxHead 002B  
                           _uart1TxTail 0030                             _uart2RxTail 0027  
                           _uart2TxTail 002A                            _wait_lcd_set 862C  
                    _EXT_INT_Initialize 7E3A    __end_of_TMR6_DefaultInterruptHandler 7C20  
 __size_of_TMR6_DefaultInterruptHandler 0046            _TMR6_DefaultInterruptHandler 7BDA  
  __end_of_ADCC_DefaultInterruptHandler 8644   __size_of_ADCC_DefaultInterruptHandler 0002  
          _ADCC_DefaultInterruptHandler 8642                                intlevel1 0000  
                              intlevel2 0000                       _send_lcd_cmd_long 800A  
        __size_of_set_temp_display_help 0010           __end_of_set_temp_display_help 858E  
                     __CFG_CLKOUTEN$OFF 000000              __end_of_eaDogM_WriteString 7054  
                 __end_of_mode_lamp_dim 84EE                 __end_of_adc_int_handler 8646  
                __size_of_INT0_CallBack 0022                              _SPI1SCKPPS 003ADE  
                            _SPI1SDIPPS 003ADF                  __size_of_INT1_CallBack 0022  
                    __end_of_update_lcd 6920                  _uart2TxBufferRemaining 0029  
                        _FVR_Initialize 861E                  __end_of_get_raw_result 840E  
                      _send_lcd_cmd_dma 79D6                  __size_of___fpclassifyf 0196  
                 TMR5_ISR@CountCallBack 0021        __end_of_INT1_SetInterruptHandler 81C2  
             __size_of_UART1_Initialize 0064                        ??_DMA1_DMAOR_ISR 0058  
              _UART1_TxInterruptHandler 0007               __end_of_send_lcd_cmd_long 8032  
               __size_of_start_adc_scan 0064                     __end_of_Default_ISR 863E  
        __end_of_PIN_MANAGER_Initialize 72B2               __size_of_mode_lamp_bright 000E  
                    __end_of_vterm_dump 64C2                 _eaDogM_WriteStringAtPos 7DD0  
                         _get_vterm_ptr 7F2E                          _check_adc_scan 8616  
             __size_of_UART2_Initialize 005E  
