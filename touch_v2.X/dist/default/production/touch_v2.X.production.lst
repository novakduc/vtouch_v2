

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Mar  9 01:05:49 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1,inline
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1,inline
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1
    85                           	psect	text66,global,reloc=2,class=CODE,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,delta=1
    91                           	psect	text72,global,reloc=2,class=CODE,delta=1
    92                           	psect	text73,global,reloc=2,class=CODE,delta=1
    93                           	psect	text74,global,reloc=2,class=CODE,delta=1
    94                           	psect	text75,global,reloc=2,class=CODE,delta=1
    95                           	psect	text76,global,reloc=2,class=CODE,delta=1
    96                           	psect	text77,global,reloc=2,class=CODE,delta=1
    97                           	psect	text78,global,reloc=2,class=CODE,delta=1
    98                           	psect	text79,global,reloc=2,class=CODE,delta=1
    99                           	psect	text80,global,reloc=2,class=CODE,delta=1
   100                           	psect	text81,global,reloc=4,class=CODE,delta=1
   101                           	psect	text82,global,reloc=2,class=CODE,delta=1
   102                           	psect	text83,global,reloc=2,class=CODE,delta=1
   103                           	psect	text84,global,reloc=4,class=CODE,delta=1
   104                           	psect	text85,global,reloc=2,class=CODE,delta=1
   105                           	psect	text86,global,reloc=2,class=CODE,delta=1
   106                           	psect	text87,global,reloc=4,class=CODE,delta=1
   107                           	psect	text88,global,reloc=2,class=CODE,delta=1
   108                           	psect	text89,global,reloc=2,class=CODE,delta=1
   109                           	psect	text90,global,reloc=4,class=CODE,delta=1
   110                           	psect	text91,global,reloc=4,class=CODE,delta=1
   111                           	psect	text92,global,reloc=2,class=CODE,delta=1
   112                           	psect	text93,global,reloc=4,class=CODE,delta=1
   113                           	psect	text94,global,reloc=2,class=CODE,delta=1
   114                           	psect	text95,global,reloc=4,class=CODE,delta=1
   115                           	psect	text96,global,reloc=2,class=CODE,delta=1
   116                           	psect	text97,global,reloc=4,class=CODE,delta=1
   117                           	psect	text98,global,reloc=2,class=CODE,delta=1
   118                           	psect	text99,global,reloc=4,class=CODE,delta=1
   119                           	psect	text100,global,reloc=2,class=CODE,delta=1
   120                           	psect	text101,global,reloc=4,class=CODE,delta=1
   121                           	psect	text102,global,reloc=2,class=CODE,delta=1
   122                           	psect	text103,global,reloc=2,class=CODE,delta=1
   123                           	psect	text104,global,reloc=4,class=CODE,delta=1
   124                           	psect	text105,global,reloc=4,class=CODE,delta=1
   125                           	psect	text106,global,reloc=4,class=CODE,delta=1
   126                           	psect	text107,global,reloc=4,class=CODE,delta=1
   127                           	psect	text108,global,reloc=4,class=CODE,delta=1
   128                           	psect	text109,global,reloc=2,class=CODE,delta=1
   129                           	psect	text110,global,reloc=2,class=CODE,delta=1
   130                           	psect	text111,global,reloc=2,class=CODE,delta=1
   131                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   132                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   133                           	psect	text112,global,reloc=2,class=CODE,delta=1
   134                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   135                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   136  0000                     
   137                           ; Version 2.05
   138                           ; Generated 20/12/2018 GMT
   139                           ; 
   140                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   141                           ; All rights reserved.
   142                           ; 
   143                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   144                           ; 
   145                           ; Redistribution and use in source and binary forms, with or without modification, are
   146                           ; permitted provided that the following conditions are met:
   147                           ; 
   148                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   149                           ;        conditions and the following disclaimer.
   150                           ; 
   151                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   152                           ;        of conditions and the following disclaimer in the documentation and/or other
   153                           ;        materials provided with the distribution.
   154                           ; 
   155                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   156                           ;        software without specific prior written permission.
   157                           ; 
   158                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   159                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   160                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   161                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   162                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   163                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   164                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   165                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   166                           ; 
   167                           ; 
   168                           ; Code-generator required, PIC18F57K42 Definitions
   169                           ; 
   170                           ; SFR Addresses
   171  0000                     
   172 ;;_sum	offset	0
   173 ;;_mode	offset	2
   174 ;;_block	offset	0
   175 ;;_rxData	offset	3
   176 ;;_t_link	offset=-1 (param)
   177 ;;_stream	offset=-1 (param)
   178 ;;_function	offset=-2 (param)
   179 ;;_f	offset	0
   180 ;;_ap	offset	5
   181 ;;_s	offset=-2 (param)
   182 ;;_fmt	offset=-3 (param)
   183 ;;_rxData	offset	0
   184 ;;_r_link	offset=-1 (param)
   185 ;;_k	offset	0
   186 ;;_checksum	offset	2
   187 ;;_i	offset	4
   188 ;;_byte_block	offset=-2 (param)
   189 ;;_length	offset=-3 (param)
   190 ;;_fake	offset=-4 (param)
   191 ;;_i	offset	0
   192 ;;_sum	offset	2
   193 ;;_byte_block	offset=-2 (param)
   194 ;;_byte_count	offset=-4 (param)
   195 ;;_bufData	offset=-1 (param)
   196 ;;_txData	offset=-1 (param)
   197 ;;_byte_block	offset=-1 (param)
   198 ;;_clear	offset=-2 (param)
   199 ;;_numMilliseconds	offset=-2 (param)
   200 ;;_timer	offset=-1 (param)
   201 ;;_timer	offset=-1 (param)
   202 ;;_count	offset=-3 (param)
   203 ;;_readValue	offset	0
   204 ;;_cmd	offset=-1 (param)
   205 ;;_cmd	offset=-1 (param)
   206 ;;_data	offset=-1 (param)
   207 ;;__this	offset=-2 (param)
   208 ;;_r	offset=-1 (param)
   209 ;;_c	offset=-2 (param)
   210 ;;_strPtr	offset=-3 (param)
   211 ;;_strPtr	offset=-1 (param)
   212 ;;_cmd	offset=-1 (param)
   213 ;;_strPtr	offset=-1 (param)
   214 ;;_delay	offset=-4 (param)
   215 ;;__this	offset=-2 (param)
   216 ;;_clearBuffer	offset=-3 (param)
   217 ;;_s	offset	0
   218 ;;_k	offset	2
   219 ;;_dest	offset=-2 (param)
   220 ;;_c	offset=-4 (param)
   221 ;;_n	offset=-6 (param)
   222 ;;_ap	offset	0
   223 ;;_fmt	offset=-2 (param)
   224 ;;_cfmt	offset	0
   225 ;;_fp	offset=-2 (param)
   226 ;;_fmt	offset=-3 (param)
   227 ;;_ap	offset=-5 (param)
   228 ;;_vfpfcnvrt$3838	offset	0
   229 ;;_llu	offset	2
   230 ;;_ll	offset	10
   231 ;;_done	offset	18
   232 ;;_cp	offset	20
   233 ;;_c	offset	22
   234 ;;_fp	offset=-2 (param)
   235 ;;_fmt	offset=-4 (param)
   236 ;;_ap	offset=-6 (param)
   237 ;;_xtoa$3824	offset	0
   238 ;;_xtoa$3823	offset	2
   239 ;;_n	offset	4
   240 ;;_c	offset	12
   241 ;;_i	offset	14
   242 ;;_w	offset	16
   243 ;;_p	offset	18
   244 ;;_fp	offset=-2 (param)
   245 ;;_d	offset=-10 (param)
   246 ;;_x	offset=-11 (param)
   247 ;;_toupper$4413	offset	0
   248 ;;_c	offset=-2 (param)
   249 ;;_c	offset=-2 (param)
   250 ;;_c	offset=-2 (param)
   251 ;;_c	offset=-2 (param)
   252 ;;_nuls	offset	0
   253 ;;_l	offset	7
   254 ;;_p	offset	9
   255 ;;_cp	offset	11
   256 ;;_w	offset	13
   257 ;;_i	offset	15
   258 ;;_fp	offset=-2 (param)
   259 ;;_s	offset=-4 (param)
   260 ;;_dtoa$3803	offset	0
   261 ;;_n	offset	2
   262 ;;_i	offset	10
   263 ;;_s	offset	12
   264 ;;_w	offset	14
   265 ;;_p	offset	16
   266 ;;_fp	offset=-2 (param)
   267 ;;_d	offset=-10 (param)
   268 ;;_a	offset=-2 (param)
   269 ;;_sign	offset	0
   270 ;;_counter	offset	1
   271 ;;_dividend	offset=-8 (param)
   272 ;;_divisor	offset=-16 (param)
   273 ;;_quotient	offset	0
   274 ;;_sign	offset	8
   275 ;;_counter	offset	9
   276 ;;_dividend	offset=-8 (param)
   277 ;;_divisor	offset=-16 (param)
   278 ;;_w	offset	0
   279 ;;_fp	offset=-2 (param)
   280 ;;_c	offset=-3 (param)
   281 ;;_w	offset	0
   282 ;;_i	offset	2
   283 ;;_fp	offset=-2 (param)
   284 ;;_buf	offset=-3 (param)
   285 ;;_p	offset=-5 (param)
   286 ;;_a	offset	0
   287 ;;_s	offset=-2 (param)
   288 ;;_i	offset	0
   289 ;;_c	offset	2
   290 ;;_s	offset=-1 (param)
   291 ;;_fp	offset=-3 (param)
   292 ;;_c	offset=-2 (param)
   293 ;;_fp	offset=-4 (param)
   294 ;;_c	offset=-1 (param)
   295 ;;__this	offset=-2 (param)
   296 ;;_c	offset=-3 (param)
   297 ;;_atoi$4300	offset	0
   298 ;;_atoi$4298	offset	2
   299 ;;_atoi$4299	offset	4
   300 ;;_n	offset	5
   301 ;;_neg	offset	7
   302 ;;_s	offset=-1 (param)
   303 ;;_isspace$4325	offset	0
   304 ;;_c	offset=-2 (param)
   305 ;;_c	offset=-2 (param)
   306 ;;_InterruptHandler	offset=-3 (param)
   307 ;;_InterruptHandler	offset=-3 (param)
   308 ;;_InterruptHandler	offset=-3 (param)
   309 ;;_InterruptHandler	offset=-3 (param)
   310 ;;_InterruptHandler	offset=-3 (param)
   311 ;;_InterruptHandler	offset=-3 (param)
   312 ;;_state	offset	0
   313 ;;_InterruptHandler	offset=-3 (param)
   314 ;;_InterruptHandler	offset=-3 (param)
   315 ;;_InterruptHandler	offset=-3 (param)
   316 ;;_InterruptHandler	offset=-3 (param)
   317 ;;_i	offset	0
   318 ;;_timerVal	offset=-2 (param)
   319                           
   320                           	psect	idataBANK0
   321  005FBE                     __pidataBANK0:
   322                           	opt callstack 0
   323                           
   324                           ;initializer for stoa@F1144
   325  005FBE  28                 	db	40
   326  005FBF  6E                 	db	110
   327  005FC0  75                 	db	117
   328  005FC1  6C                 	db	108
   329  005FC2  6C                 	db	108
   330  005FC3  29                 	db	41
   331  005FC4  00                 	db	0
   332                           
   333                           	psect	idataBANK1
   334  004D7C                     __pidataBANK1:
   335                           	opt callstack 0
   336                           
   337                           ;initializer for _H10
   338  004D7C  0000               	dw	0
   339  004D7E  9F75               	dw	40821
   340  004D80  000C               	dw	12
   341  004D82  01                 	db	1
   342  004D83  80                 	db	128
   343  004D84  01                 	db	1
   344  004D85  81                 	db	129
   345  004D86  00                 	db	0
   346  004D87  00                 	db	0
   347  004D88  0A                 	db	10
   348  004D89  0000               	dw	0
   349  004D8B  00                 	db	0
   350  004D8C  00                 	db	0
   351  004D8D  00                 	db	0
   352  004D8E  00                 	db	0
   353  004D8F  00                 	db	0
   354  004D90  00                 	db	0
   355  004D91  00                 	db	0
   356  004D92  00                 	db	0
   357  004D93  00                 	db	0
   358  004D94  00                 	db	0
   359  004D95  0A                 	db	10
   360  004D96  0000               	dw	0
   361  004D98  0001               	dw	1
   362  004D9A  0000               	dw	0
   363  004D9C  01                 	db	1
   364  004D9D  80                 	db	128
   365  004D9E  00                 	db	0
   366  004D9F  01                 	db	1
   367  004DA0  00                 	db	0
   368  004DA1  00                 	db	0
   369  004DA2  0A                 	db	10
   370  004DA3  0000               	dw	0
   371  004DA5  0D89               	dw	3465
   372  004DA7  0000               	dw	0
   373  004DA9  01                 	db	1
   374  004DAA  80                 	db	128
   375  004DAB  01                 	db	1
   376  004DAC  81                 	db	129
   377  004DAD  00                 	db	0
   378  004DAE  80                 	db	128
   379  004DAF  0A                 	db	10
   380  004DB0  0000               	dw	0
   381  004DB2  0D89               	dw	3465
   382  004DB4  0000               	dw	0
   383  004DB6  01                 	db	1
   384  004DB7  80                 	db	128
   385  004DB8  11                 	db	17
   386  004DB9  82                 	db	130
   387  004DBA  00                 	db	0
   388  004DBB  00                 	db	0
   389  004DBC  0A                 	db	10
   390                           
   391                           ;initializer for _H24
   392  004DBD  0000               	dw	0
   393  004DBF  30                 	db	48
   394  004DC0  31                 	db	49
   395  004DC1  30                 	db	48
   396  004DC2  39                 	db	57
   397  004DC3  31                 	db	49
   398  004DC4  31                 	db	49
   399  004DC5  30                 	db	48
   400  004DC6  38                 	db	56
   401  004DC7  34                 	db	52
   402  004DC8  36                 	db	54
   403  004DC9  30                 	db	48
   404  004DCA  30                 	db	48
   405  004DCB  00                 	db	0
   406  004DCC  00                 	db	0
   407  004DCD  0001               	dw	1
   408  004DCF  0000               	dw	0
   409  004DD1  01                 	db	1
   410  004DD2  80                 	db	128
   411  004DD3  12                 	db	18
   412  004DD4  82                 	db	130
   413  004DD5  00                 	db	0
   414  004DD6  00                 	db	0
   415  004DD7  18                 	db	24
   416                           
   417                           ;initializer for _H18
   418  004DD8  0000               	dw	0
   419  004DDA  00                 	db	0
   420  004DDB  00                 	db	0
   421  004DDC  00                 	db	0
   422  004DDD  00                 	db	0
   423  004DDE  00                 	db	0
   424  004DDF  00                 	db	0
   425  004DE0  00                 	db	0
   426  004DE1  00                 	db	0
   427  004DE2  0001               	dw	1
   428  004DE4  0000               	dw	0
   429  004DE6  01                 	db	1
   430  004DE7  80                 	db	128
   431  004DE8  03                 	db	3
   432  004DE9  81                 	db	129
   433  004DEA  00                 	db	0
   434  004DEB  00                 	db	0
   435  004DEC  12                 	db	18
   436                           
   437                           ;initializer for _H14
   438  004DED  0000               	dw	0
   439  004DEF  00                 	db	0
   440  004DF0  41                 	db	65
   441  004DF1  11                 	db	17
   442  004DF2  01                 	db	1
   443  004DF3  0001               	dw	1
   444  004DF5  0000               	dw	0
   445  004DF7  01                 	db	1
   446  004DF8  80                 	db	128
   447  004DF9  04                 	db	4
   448  004DFA  81                 	db	129
   449  004DFB  00                 	db	0
   450  004DFC  00                 	db	0
   451  004DFD  0E                 	db	14
   452                           
   453                           ;initializer for _H13
   454  004DFE  0000               	dw	0
   455  004E00  00                 	db	0
   456  004E01  01                 	db	1
   457  004E02  21                 	db	33
   458  004E03  0001               	dw	1
   459  004E05  0000               	dw	0
   460  004E07  01                 	db	1
   461  004E08  80                 	db	128
   462  004E09  0C                 	db	12
   463  004E0A  86                 	db	134
   464  004E0B  00                 	db	0
   465  004E0C  00                 	db	0
   466  004E0D  0D                 	db	13
   467                           
   468                           ;initializer for _H12
   469  004E0E  0000               	dw	0
   470  004E10  00                 	db	0
   471  004E11  01                 	db	1
   472  004E12  0001               	dw	1
   473  004E14  0000               	dw	0
   474  004E16  01                 	db	1
   475  004E17  80                 	db	128
   476  004E18  02                 	db	2
   477  004E19  81                 	db	129
   478  004E1A  00                 	db	0
   479  004E1B  00                 	db	0
   480  004E1C  0C                 	db	12
   481                           
   482                           	psect	idataBANK3
   483  0051EE                     __pidataBANK3:
   484                           	opt callstack 0
   485                           
   486                           ;initializer for _H53
   487  0051EE  0000               	dw	0
   488  0051F0  00                 	db	0
   489  0051F1  00                 	db	0
   490  0051F2  00                 	db	0
   491  0051F3  00                 	db	0
   492  0051F4  00                 	db	0
   493  0051F5  00                 	db	0
   494  0051F6  00                 	db	0
   495  0051F7  00                 	db	0
   496  0051F8  00                 	db	0
   497  0051F9  00                 	db	0
   498  0051FA  00                 	db	0
   499  0051FB  00                 	db	0
   500  0051FC  00                 	db	0
   501  0051FD  00                 	db	0
   502  0051FE  00                 	db	0
   503  0051FF  00                 	db	0
   504  005200  00                 	db	0
   505  005201  00                 	db	0
   506  005202  00                 	db	0
   507  005203  00                 	db	0
   508  005204  00                 	db	0
   509  005205  00                 	db	0
   510  005206  00                 	db	0
   511  005207  00                 	db	0
   512  005208  00                 	db	0
   513  005209  00                 	db	0
   514  00520A  00                 	db	0
   515  00520B  00                 	db	0
   516  00520C  00                 	db	0
   517  00520D  00                 	db	0
   518  00520E  00                 	db	0
   519  00520F  00                 	db	0
   520  005210  00                 	db	0
   521  005211  00                 	db	0
   522  005212  00                 	db	0
   523  005213  00                 	db	0
   524  005214  00                 	db	0
   525  005215  00                 	db	0
   526  005216  00                 	db	0
   527  005217  00                 	db	0
   528  005218  00                 	db	0
   529  005219  00                 	db	0
   530  00521A  00                 	db	0
   531  00521B  0001               	dw	1
   532  00521D  0000               	dw	0
   533  00521F  01                 	db	1
   534  005220  80                 	db	128
   535  005221  0B                 	db	11
   536  005222  81                 	db	129
   537  005223  00                 	db	0
   538  005224  00                 	db	0
   539  005225  35                 	db	53
   540  005226  0000               	dw	0
   541  005228  00                 	db	0
   542  005229  16                 	db	22
   543  00522A  20                 	db	32
   544  00522B  4E                 	db	78
   545  00522C  6F                 	db	111
   546  00522D  77                 	db	119
   547  00522E  20                 	db	32
   548  00522F  57                 	db	87
   549  005230  65                 	db	101
   550  005231  20                 	db	32
   551  005232  41                 	db	65
   552  005233  72                 	db	114
   553  005234  65                 	db	101
   554  005235  20                 	db	32
   555  005236  54                 	db	84
   556  005237  61                 	db	97
   557  005238  6C                 	db	108
   558  005239  6B                 	db	107
   559  00523A  69                 	db	105
   560  00523B  6E                 	db	110
   561  00523C  67                 	db	103
   562  00523D  2E                 	db	46
   563  00523E  2E                 	db	46
   564  00523F  2E                 	db	46
   565  005240  00                 	db	0
   566  005241  00                 	db	0
   567  005242  00                 	db	0
   568  005243  00                 	db	0
   569  005244  00                 	db	0
   570  005245  00                 	db	0
   571  005246  00                 	db	0
   572  005247  00                 	db	0
   573  005248  00                 	db	0
   574  005249  00                 	db	0
   575  00524A  00                 	db	0
   576  00524B  00                 	db	0
   577  00524C  00                 	db	0
   578  00524D  00                 	db	0
   579  00524E  00                 	db	0
   580  00524F  00                 	db	0
   581  005250  00                 	db	0
   582  005251  00                 	db	0
   583  005252  00                 	db	0
   584  005253  0001               	dw	1
   585  005255  0000               	dw	0
   586  005257  01                 	db	1
   587  005258  80                 	db	128
   588  005259  03                 	db	3
   589  00525A  8A                 	db	138
   590  00525B  00                 	db	0
   591  00525C  00                 	db	0
   592  00525D  35                 	db	53
   593  0000                     _IVTADL	set	14493
   594  0000                     _IVTADH	set	14494
   595  0000                     _IVTADU	set	14495
   596  0000                     _PIE8bits	set	14744
   597  0000                     _PIR8bits	set	14760
   598  0000                     _SCANPR	set	14839
   599  0000                     _DMA2PR	set	14836
   600  0000                     _DMA1PR	set	14835
   601  0000                     _MAINPR	set	14834
   602  0000                     _ISRPR	set	14833
   603  0000                     _PIE2bits	set	14738
   604  0000                     _PIR2bits	set	14754
   605  0000                     _PIE9bits	set	14745
   606  0000                     _PIR9bits	set	14761
   607  0000                     _PIE6bits	set	14742
   608  0000                     _PIE3bits	set	14739
   609  0000                     _PMD7	set	14791
   610  0000                     _PMD6	set	14790
   611  0000                     _PMD5	set	14789
   612  0000                     _PMD4	set	14788
   613  0000                     _PMD3	set	14787
   614  0000                     _PMD2	set	14786
   615  0000                     _PMD1	set	14785
   616  0000                     _PMD0	set	14784
   617  0000                     _OSCTUNE	set	14814
   618  0000                     _OSCFRQ	set	14815
   619  0000                     _OSCEN	set	14813
   620  0000                     _OSCCON3	set	14811
   621  0000                     _OSCCON1	set	14809
   622  0000                     _IPR8bits	set	14728
   623  0000                     _IPR9bits	set	14729
   624  0000                     _IPR7bits	set	14727
   625  0000                     _IPR5bits	set	14725
   626  0000                     _IPR1bits	set	14721
   627  0000                     _IPR3bits	set	14723
   628  0000                     _IPR6bits	set	14726
   629  0000                     _IPR2bits	set	14722
   630  0000                     _PIE7bits	set	14743
   631  0000                     _PIE5bits	set	14741
   632  0000                     _PIE1bits	set	14737
   633  0000                     _PIR7bits	set	14759
   634  0000                     _PIR5bits	set	14757
   635  0000                     _PIR1bits	set	14753
   636  0000                     _PLLR	set	118496
   637  0000                     _SPI1SDIPPS	set	15071
   638  0000                     _RC6PPS	set	14870
   639  0000                     _RC5PPS	set	14869
   640  0000                     _RA6PPS	set	14854
   641  0000                     _RA5PPS	set	14853
   642  0000                     _RA4PPS	set	14852
   643  0000                     _SPI1SCKPPS	set	15070
   644  0000                     _U1RXPPS	set	15077
   645  0000                     _INT1PPS	set	15041
   646  0000                     _INT2PPS	set	15042
   647  0000                     _INT0PPS	set	15040
   648  0000                     _RC3PPS	set	14867
   649  0000                     _RB6PPS	set	14862
   650  0000                     _U2RXPPS	set	15080
   651  0000                     _SLRCONF	set	14995
   652  0000                     _SLRCONE	set	14979
   653  0000                     _SLRCOND	set	14963
   654  0000                     _SLRCONC	set	14947
   655  0000                     _SLRCONB	set	14931
   656  0000                     _SLRCONA	set	14915
   657  0000                     _ODCOND	set	14962
   658  0000                     _ODCONC	set	14946
   659  0000                     _ODCONB	set	14930
   660  0000                     _ODCONA	set	14914
   661  0000                     _ODCONF	set	14994
   662  0000                     _ODCONE	set	14978
   663  0000                     _WPUC	set	14945
   664  0000                     _WPUA	set	14913
   665  0000                     _WPUB	set	14929
   666  0000                     _WPUE	set	14977
   667  0000                     _WPUF	set	14993
   668  0000                     _WPUD	set	14961
   669  0000                     _ANSELA	set	14912
   670  0000                     _ANSELF	set	14992
   671  0000                     _ANSELE	set	14976
   672  0000                     _ANSELB	set	14928
   673  0000                     _ANSELC	set	14944
   674  0000                     _ANSELD	set	14960
   675  0000                     _DMA1SSA	set	15353
   676  0000                     _DMA1DSZ	set	15342
   677  0000                     _DMA1SSZ	set	15351
   678  0000                     _DMA1DSA	set	15344
   679  0000                     _DMA1CON0bits	set	15356
   680  0000                     _DMA1CON1bits	set	15357
   681  0000                     _DMA1CON0	set	15356
   682  0000                     _DMA1AIRQ	set	15358
   683  0000                     _DMA1SIRQ	set	15359
   684  0000                     _DMA1CON1	set	15357
   685  0000                     _CLC1CON	set	15476
   686  0000                     _CLC1GLS3	set	15485
   687  0000                     _CLC1GLS2	set	15484
   688  0000                     _CLC1GLS1	set	15483
   689  0000                     _CLC1GLS0	set	15482
   690  0000                     _CLC1SEL3	set	15481
   691  0000                     _CLC1SEL2	set	15480
   692  0000                     _CLC1SEL1	set	15479
   693  0000                     _CLC1SEL0	set	15478
   694  0000                     _CLC1POL	set	15477
   695  0000                     _CLKRCON	set	15589
   696  0000                     _CLKRCLK	set	15590
   697  0000                     _MD1CARL	set	15613
   698  0000                     _MD1CARH	set	15614
   699  0000                     _MD1SRC	set	15612
   700  0000                     _MD1CON1bits	set	15611
   701  0000                     _MD1CON0bits	set	15610
   702  0000                     _SPI1INTFbits	set	15642
   703  0000                     _SPI1RXB	set	15632
   704  0000                     _SPI1TXB	set	15633
   705  0000                     _SPI1TCNTL	set	15634
   706  0000                     _SPI1CON0	set	15636
   707  0000                     _SPI1CLK	set	15644
   708  0000                     _SPI1BAUD	set	15641
   709  0000                     _SPI1CON2	set	15638
   710  0000                     _SPI1CON1	set	15637
   711  0000                     _U2RXB	set	15824
   712  0000                     _U2TXB	set	15826
   713  0000                     _U2ERRIE	set	15842
   714  0000                     _U2ERRIR	set	15841
   715  0000                     _U2UIR	set	15840
   716  0000                     _U2FIFO	set	15839
   717  0000                     _U2BRGH	set	15838
   718  0000                     _U2BRGL	set	15837
   719  0000                     _U2CON2	set	15836
   720  0000                     _U2CON1	set	15835
   721  0000                     _U2CON0	set	15834
   722  0000                     _U2P3L	set	15832
   723  0000                     _U2P2L	set	15830
   724  0000                     _U2P1L	set	15828
   725  0000                     _U1RXB	set	15848
   726  0000                     _U1TXB	set	15850
   727  0000                     _U1ERRIE	set	15866
   728  0000                     _U1ERRIR	set	15865
   729  0000                     _U1UIR	set	15864
   730  0000                     _U1FIFO	set	15863
   731  0000                     _U1BRGH	set	15862
   732  0000                     _U1BRGL	set	15861
   733  0000                     _U1CON2	set	15860
   734  0000                     _U1CON1	set	15859
   735  0000                     _U1CON0	set	15858
   736  0000                     _U1P3H	set	15857
   737  0000                     _U1P3L	set	15856
   738  0000                     _U1P2H	set	15855
   739  0000                     _U1P2L	set	15854
   740  0000                     _U1P1H	set	15853
   741  0000                     _U1P1L	set	15852
   742  0000                     _ADCON0	set	16120
   743  0000                     _ADCLK	set	16127
   744  0000                     _ADACT	set	16126
   745  0000                     _ADREF	set	16125
   746  0000                     _ADSTAT	set	16124
   747  0000                     _ADCON3	set	16123
   748  0000                     _ADCON2	set	16122
   749  0000                     _ADCON1	set	16121
   750  0000                     _ADPREH	set	16119
   751  0000                     _ADPREL	set	16118
   752  0000                     _ADCAP	set	16117
   753  0000                     _ADACQH	set	16116
   754  0000                     _ADACQL	set	16115
   755  0000                     _ADPCH	set	16113
   756  0000                     _ADRPT	set	16108
   757  0000                     _ADACCU	set	16106
   758  0000                     _ADSTPTH	set	16101
   759  0000                     _ADSTPTL	set	16100
   760  0000                     _ADUTHH	set	16097
   761  0000                     _ADUTHL	set	16096
   762  0000                     _ADLTHH	set	16095
   763  0000                     _ADLTHL	set	16094
   764  0000                     _NCO1CONbits	set	16190
   765  0000                     _NCO1INCL	set	16187
   766  0000                     _NCO1INCH	set	16188
   767  0000                     _NCO1INCU	set	16189
   768  0000                     _NCO1ACCL	set	16184
   769  0000                     _NCO1ACCH	set	16185
   770  0000                     _NCO1ACCU	set	16186
   771  0000                     _NCO1CLK	set	16191
   772  0000                     _NCO1CON	set	16190
   773  0000                     _LATCbits	set	16316
   774  0000                     _PORTDbits	set	16333
   775  0000                     _LATDbits	set	16317
   776  0000                     _T5CONbits	set	16282
   777  0000                     _T5CON	set	16282
   778  0000                     _TMR5L	set	16280
   779  0000                     _TMR5H	set	16281
   780  0000                     _T5CLK	set	16285
   781  0000                     _T5GATE	set	16284
   782  0000                     _T5GCON	set	16283
   783  0000                     _LATEbits	set	16318
   784  0000                     _T6CON	set	16276
   785  0000                     _T6TMR	set	16274
   786  0000                     _T6PR	set	16275
   787  0000                     _T6RST	set	16279
   788  0000                     _T6HLT	set	16277
   789  0000                     _T6CLKCON	set	16278
   790  0000                     _TRISD	set	16325
   791  0000                     _TRISC	set	16324
   792  0000                     _TRISB	set	16323
   793  0000                     _TRISA	set	16322
   794  0000                     _TRISF	set	16327
   795  0000                     _TRISE	set	16326
   796  0000                     _LATC	set	16316
   797  0000                     _LATB	set	16315
   798  0000                     _LATF	set	16319
   799  0000                     _LATA	set	16314
   800  0000                     _LATD	set	16317
   801  0000                     _LATE	set	16318
   802  0000                     _IVTLOCKbits	set	16340
   803  0000                     _IVTLOCK	set	16340
   804  0000                     _INTCON0bits	set	16338
   805  0000                     _GIE	set	130711
   806                           
   807                           	psect	smallconst
   808  002000                     __psmallconst:
   809                           	opt callstack 0
   810  002000  00                 	db	0
   811  002001                     STR_1:
   812  002001  4D                 	db	77	;'M'
   813  002002  20                 	db	32
   814  002003  25                 	db	37
   815  002004  64                 	db	100	;'d'
   816  002005  2C                 	db	44
   817  002006  20                 	db	32
   818  002007  48                 	db	72	;'H'
   819  002008  20                 	db	32
   820  002009  25                 	db	37
   821  00200A  30                 	db	48	;'0'
   822  00200B  32                 	db	50	;'2'
   823  00200C  78                 	db	120	;'x'
   824  00200D  25                 	db	37
   825  00200E  30                 	db	48	;'0'
   826  00200F  32                 	db	50	;'2'
   827  002010  78                 	db	120	;'x'
   828  002011  25                 	db	37
   829  002012  30                 	db	48	;'0'
   830  002013  32                 	db	50	;'2'
   831  002014  78                 	db	120	;'x'
   832  002015  25                 	db	37
   833  002016  30                 	db	48	;'0'
   834  002017  32                 	db	50	;'2'
   835  002018  78                 	db	120	;'x'
   836  002019  25                 	db	37
   837  00201A  30                 	db	48	;'0'
   838  00201B  32                 	db	50	;'2'
   839  00201C  78                 	db	120	;'x'
   840  00201D  25                 	db	37
   841  00201E  30                 	db	48	;'0'
   842  00201F  32                 	db	50	;'2'
   843  002020  78                 	db	120	;'x'
   844  002021  25                 	db	37
   845  002022  30                 	db	48	;'0'
   846  002023  32                 	db	50	;'2'
   847  002024  78                 	db	120	;'x'
   848  002025  25                 	db	37
   849  002026  30                 	db	48	;'0'
   850  002027  32                 	db	50	;'2'
   851  002028  78                 	db	120	;'x'
   852  002029  25                 	db	37
   853  00202A  30                 	db	48	;'0'
   854  00202B  32                 	db	50	;'2'
   855  00202C  78                 	db	120	;'x'
   856  00202D  25                 	db	37
   857  00202E  30                 	db	48	;'0'
   858  00202F  32                 	db	50	;'2'
   859  002030  78                 	db	120	;'x'
   860  002031  2C                 	db	44
   861  002032  20                 	db	32
   862  002033  43                 	db	67	;'C'
   863  002034  20                 	db	32
   864  002035  30                 	db	48	;'0'
   865  002036  78                 	db	120	;'x'
   866  002037  25                 	db	37
   867  002038  30                 	db	48	;'0'
   868  002039  34                 	db	52	;'4'
   869  00203A  78                 	db	120	;'x'
   870  00203B  20                 	db	32
   871  00203C  23                 	db	35
   872  00203D  00                 	db	0
   873  00203E                     STR_5:
   874  00203E  20                 	db	32
   875  00203F  45                 	db	69	;'E'
   876  002040  52                 	db	82	;'R'
   877  002041  52                 	db	82	;'R'
   878  002042  20                 	db	32
   879  002043  52                 	db	82	;'R'
   880  002044  25                 	db	37
   881  002045  64                 	db	100	;'d'
   882  002046  20                 	db	32
   883  002047  54                 	db	84	;'T'
   884  002048  25                 	db	37
   885  002049  64                 	db	100	;'d'
   886  00204A  20                 	db	32
   887  00204B  45                 	db	69	;'E'
   888  00204C  25                 	db	37
   889  00204D  64                 	db	100	;'d'
   890  00204E  20                 	db	32
   891  00204F  41                 	db	65	;'A'
   892  002050  25                 	db	37
   893  002051  64                 	db	100	;'d'
   894  002052  20                 	db	32
   895  002053  23                 	db	35
   896  002054  00                 	db	0
   897  002055                     STR_9:
   898  002055  20                 	db	32
   899  002056  52                 	db	82	;'R'
   900  002057  25                 	db	37
   901  002058  64                 	db	100	;'d'
   902  002059  20                 	db	32
   903  00205A  54                 	db	84	;'T'
   904  00205B  25                 	db	37
   905  00205C  64                 	db	100	;'d'
   906  00205D  20                 	db	32
   907  00205E  45                 	db	69	;'E'
   908  00205F  25                 	db	37
   909  002060  64                 	db	100	;'d'
   910  002061  20                 	db	32
   911  002062  41                 	db	65	;'A'
   912  002063  25                 	db	37
   913  002064  64                 	db	100	;'d'
   914  002065  20                 	db	32
   915  002066  20                 	db	32
   916  002067  20                 	db	32
   917  002068  23                 	db	35
   918  002069  00                 	db	0
   919  00206A                     STR_8:
   920  00206A  20                 	db	32
   921  00206B  4C                 	db	76	;'L'
   922  00206C  4F                 	db	79	;'O'
   923  00206D  47                 	db	71	;'G'
   924  00206E  20                 	db	32
   925  00206F  4D                 	db	77	;'M'
   926  002070  4F                 	db	79	;'O'
   927  002071  44                 	db	68	;'D'
   928  002072  45                 	db	69	;'E'
   929  002073  20                 	db	32
   930  002074  20                 	db	32
   931  002075  20                 	db	32
   932  002076  20                 	db	32
   933  002077  20                 	db	32
   934  002078  20                 	db	32
   935  002079  23                 	db	35
   936  00207A  00                 	db	0
   937  00207B                     STR_6:
   938  00207B  20                 	db	32
   939  00207C  48                 	db	72	;'H'
   940  00207D  4F                 	db	79	;'O'
   941  00207E  53                 	db	83	;'S'
   942  00207F  54                 	db	84	;'T'
   943  002080  20                 	db	32
   944  002081  4D                 	db	77	;'M'
   945  002082  4F                 	db	79	;'O'
   946  002083  44                 	db	68	;'D'
   947  002084  45                 	db	69	;'E'
   948  002085  20                 	db	32
   949  002086  20                 	db	32
   950  002087  20                 	db	32
   951  002088  20                 	db	32
   952  002089  20                 	db	32
   953  00208A  23                 	db	35
   954  00208B  00                 	db	0
   955  00208C                     STR_7:
   956  00208C  20                 	db	32
   957  00208D  45                 	db	69	;'E'
   958  00208E  51                 	db	81	;'Q'
   959  00208F  55                 	db	85	;'U'
   960  002090  49                 	db	73	;'I'
   961  002091  50                 	db	80	;'P'
   962  002092  20                 	db	32
   963  002093  4D                 	db	77	;'M'
   964  002094  4F                 	db	79	;'O'
   965  002095  44                 	db	68	;'D'
   966  002096  45                 	db	69	;'E'
   967  002097  20                 	db	32
   968  002098  20                 	db	32
   969  002099  20                 	db	32
   970  00209A  20                 	db	32
   971  00209B  23                 	db	35
   972  00209C  00                 	db	0
   973  00209D                     STR_3:
   974  00209D  20                 	db	32
   975  00209E  53                 	db	83	;'S'
   976  00209F  25                 	db	37
   977  0020A0  64                 	db	100	;'d'
   978  0020A1  46                 	db	70	;'F'
   979  0020A2  25                 	db	37
   980  0020A3  64                 	db	100	;'d'
   981  0020A4  20                 	db	32
   982  0020A5  23                 	db	35
   983  0020A6  20                 	db	32
   984  0020A7  20                 	db	32
   985  0020A8  20                 	db	32
   986  0020A9  20                 	db	32
   987  0020AA  00                 	db	0
   988  0020AB                     STR_4:
   989  0020AB  20                 	db	32
   990  0020AC  4F                 	db	79	;'O'
   991  0020AD  4B                 	db	75	;'K'
   992  0020AE  20                 	db	32
   993  0020AF  23                 	db	35
   994  0020B0  00                 	db	0
   995  0020B1                     STR_11:
   996  0020B1  25                 	db	37
   997  0020B2  63                 	db	99	;'c'
   998  0020B3  00                 	db	0
   999  0020B4                     STR_10:
  1000  0020B4  25                 	db	37
  1001  0020B5  73                 	db	115	;'s'
  1002  0020B6  00                 	db	0
  1003  0000                     
  1004                           ; #config settings
  1005  0020B7  00                 	db	0	; dummy byte at the end
  1006  0000                     
  1007                           	psect	cinit
  1008  004B72                     __pcinit:
  1009                           	opt callstack 0
  1010  004B72                     start_initialization:
  1011                           	opt callstack 0
  1012  004B72                     __initialization:
  1013                           	opt callstack 0
  1014                           
  1015                           ; Initialize objects allocated to BANK3 (112 bytes)
  1016                           ; load TBLPTR registers with __pidataBANK3
  1017  004B72  0EEE               	movlw	low __pidataBANK3
  1018  004B74  6EF6               	movwf	tblptrl,c
  1019  004B76  0E51               	movlw	high __pidataBANK3
  1020  004B78  6EF7               	movwf	tblptrh,c
  1021  004B7A  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  1022  004B7C  6EF8               	movwf	tblptru,c
  1023  004B7E  EE00  F386         	lfsr	0,__pdataBANK3
  1024  004B82  EE20 F070          	lfsr	2,112
  1025  004B86                     copy_data0:
  1026  004B86  0009               	tblrd		*+
  1027  004B88  006F FFD7 FFEE     	movff	tablat,postinc0
  1028  004B8E  50DD               	movf	postdec2,w,c
  1029  004B90  50D9               	movf	fsr2l,w,c
  1030  004B92  E1F9               	bnz	copy_data0
  1031                           
  1032                           ; Initialize objects allocated to BANK1 (161 bytes)
  1033                           ; load TBLPTR registers with __pidataBANK1
  1034  004B94  0E7C               	movlw	low __pidataBANK1
  1035  004B96  6EF6               	movwf	tblptrl,c
  1036  004B98  0E4D               	movlw	high __pidataBANK1
  1037  004B9A  6EF7               	movwf	tblptrh,c
  1038  004B9C  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1039  004B9E  6EF8               	movwf	tblptru,c
  1040  004BA0  EE00  F100         	lfsr	0,__pdataBANK1
  1041  004BA4  EE20 F0A1          	lfsr	2,161
  1042  004BA8                     copy_data1:
  1043  004BA8  0009               	tblrd		*+
  1044  004BAA  006F FFD7 FFEE     	movff	tablat,postinc0
  1045  004BB0  50DD               	movf	postdec2,w,c
  1046  004BB2  50D9               	movf	fsr2l,w,c
  1047  004BB4  E1F9               	bnz	copy_data1
  1048                           
  1049                           ; Initialize objects allocated to BANK0 (7 bytes)
  1050                           ; load TBLPTR registers with __pidataBANK0
  1051  004BB6  0EBE               	movlw	low __pidataBANK0
  1052  004BB8  6EF6               	movwf	tblptrl,c
  1053  004BBA  0E5F               	movlw	high __pidataBANK0
  1054  004BBC  6EF7               	movwf	tblptrh,c
  1055  004BBE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1056  004BC0  6EF8               	movwf	tblptru,c
  1057  004BC2  EE00  F0F9         	lfsr	0,__pdataBANK0
  1058  004BC6  EE20 F007          	lfsr	2,7
  1059  004BCA                     copy_data2:
  1060  004BCA  0009               	tblrd		*+
  1061  004BCC  006F FFD7 FFEE     	movff	tablat,postinc0
  1062  004BD2  50DD               	movf	postdec2,w,c
  1063  004BD4  50D9               	movf	fsr2l,w,c
  1064  004BD6  E1F9               	bnz	copy_data2
  1065                           
  1066                           ; Clear objects allocated to BANK3 (134 bytes)
  1067  004BD8  EE00  F300         	lfsr	0,__pbssBANK3
  1068  004BDC  0E86               	movlw	134
  1069  004BDE                     clear_0:
  1070  004BDE  6AEE               	clrf	postinc0,c
  1071  004BE0  06E8               	decf	wreg,f,c
  1072  004BE2  E1FD               	bnz	clear_0
  1073                           
  1074                           ; Clear objects allocated to BANK2 (192 bytes)
  1075  004BE4  EE00  F200         	lfsr	0,__pbssBANK2
  1076  004BE8  0EC0               	movlw	192
  1077  004BEA                     clear_1:
  1078  004BEA  6AEE               	clrf	postinc0,c
  1079  004BEC  06E8               	decf	wreg,f,c
  1080  004BEE  E1FD               	bnz	clear_1
  1081                           
  1082                           ; Clear objects allocated to BANK1 (64 bytes)
  1083  004BF0  EE00  F1A1         	lfsr	0,__pbssBANK1
  1084  004BF4  0E40               	movlw	64
  1085  004BF6                     clear_2:
  1086  004BF6  6AEE               	clrf	postinc0,c
  1087  004BF8  06E8               	decf	wreg,f,c
  1088  004BFA  E1FD               	bnz	clear_2
  1089                           
  1090                           ; Clear objects allocated to BANK0 (153 bytes)
  1091  004BFC  EE00  F060         	lfsr	0,__pbssBANK0
  1092  004C00  0E99               	movlw	153
  1093  004C02                     clear_3:
  1094  004C02  6AEE               	clrf	postinc0,c
  1095  004C04  06E8               	decf	wreg,f,c
  1096  004C06  E1FD               	bnz	clear_3
  1097                           
  1098                           ; Clear objects allocated to COMRAM (60 bytes)
  1099  004C08  EE00  F001         	lfsr	0,__pbssCOMRAM
  1100  004C0C  0E3C               	movlw	60
  1101  004C0E                     clear_4:
  1102  004C0E  6AEE               	clrf	postinc0,c
  1103  004C10  06E8               	decf	wreg,f,c
  1104  004C12  E1FD               	bnz	clear_4
  1105                           
  1106                           ;
  1107                           ; Setup IVTBASE
  1108                           ;
  1109  004C14  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1110  004C16  6ED5               	movwf	213,c
  1111  004C18  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1112  004C1A  6ED6               	movwf	214,c
  1113  004C1C  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1114  004C1E  6ED7               	movwf	215,c
  1115  004C20                     end_of_initialization:
  1116                           	opt callstack 0
  1117  004C20                     __end_of__initialization:
  1118                           	opt callstack 0
  1119  004C20  0100               	movlb	0
  1120  004C22  EFF2  F015         	goto	_main	;jump to C main() function
  1121                           
  1122                           	psect	bssCOMRAM
  1123  000001                     __pbssCOMRAM:
  1124                           	opt callstack 0
  1125  000001                     secs_II_message@block:
  1126                           	opt callstack 0
  1127  000001                     	ds	3
  1128  000004                     _TMR5_InterruptHandler:
  1129                           	opt callstack 0
  1130  000004                     	ds	3
  1131  000007                     _TMR6_InterruptHandler:
  1132                           	opt callstack 0
  1133  000007                     	ds	3
  1134  00000A                     _ADCC_ADI_InterruptHandler:
  1135                           	opt callstack 0
  1136  00000A                     	ds	3
  1137  00000D                     _UART1_TxInterruptHandler:
  1138                           	opt callstack 0
  1139  00000D                     	ds	3
  1140  000010                     _UART1_RxInterruptHandler:
  1141                           	opt callstack 0
  1142  000010                     	ds	3
  1143  000013                     _UART2_TxInterruptHandler:
  1144                           	opt callstack 0
  1145  000013                     	ds	3
  1146  000016                     _UART2_RxInterruptHandler:
  1147                           	opt callstack 0
  1148  000016                     	ds	3
  1149  000019                     _INT2_InterruptHandler:
  1150                           	opt callstack 0
  1151  000019                     	ds	3
  1152  00001C                     _INT1_InterruptHandler:
  1153                           	opt callstack 0
  1154  00001C                     	ds	3
  1155  00001F                     _INT0_InterruptHandler:
  1156                           	opt callstack 0
  1157  00001F                     	ds	3
  1158  000022                     _nout:
  1159                           	opt callstack 0
  1160  000022                     	ds	2
  1161  000024                     _width:
  1162                           	opt callstack 0
  1163  000024                     	ds	2
  1164  000026                     _prec:
  1165                           	opt callstack 0
  1166  000026                     	ds	2
  1167  000028                     _flags:
  1168                           	opt callstack 0
  1169  000028                     	ds	2
  1170  00002A                     run_checksum@sum:
  1171                           	opt callstack 0
  1172  00002A                     	ds	2
  1173  00002C                     TMR5_ISR@CountCallBack:
  1174                           	opt callstack 0
  1175  00002C                     	ds	2
  1176  00002E                     _timer5ReloadVal:
  1177                           	opt callstack 0
  1178  00002E                     	ds	2
  1179  000030                     r_protocol@rxData_l:
  1180                           	opt callstack 0
  1181  000030                     	ds	1
  1182  000031                     _uart2RxCount:
  1183                           	opt callstack 0
  1184  000031                     	ds	1
  1185  000032                     _uart2RxTail:
  1186                           	opt callstack 0
  1187  000032                     	ds	1
  1188  000033                     _uart2RxHead:
  1189                           	opt callstack 0
  1190  000033                     	ds	1
  1191  000034                     _uart2TxBufferRemaining:
  1192                           	opt callstack 0
  1193  000034                     	ds	1
  1194  000035                     _uart2TxTail:
  1195                           	opt callstack 0
  1196  000035                     	ds	1
  1197  000036                     _uart2TxHead:
  1198                           	opt callstack 0
  1199  000036                     	ds	1
  1200  000037                     _uart1RxCount:
  1201                           	opt callstack 0
  1202  000037                     	ds	1
  1203  000038                     _uart1RxTail:
  1204                           	opt callstack 0
  1205  000038                     	ds	1
  1206  000039                     _uart1RxHead:
  1207                           	opt callstack 0
  1208  000039                     	ds	1
  1209  00003A                     _uart1TxBufferRemaining:
  1210                           	opt callstack 0
  1211  00003A                     	ds	1
  1212  00003B                     _uart1TxTail:
  1213                           	opt callstack 0
  1214  00003B                     	ds	1
  1215  00003C                     _uart1TxHead:
  1216                           	opt callstack 0
  1217  00003C                     	ds	1
  1218                           
  1219                           	psect	bssBANK0
  1220  000060                     __pbssBANK0:
  1221                           	opt callstack 0
  1222  000060                     _r_block:
  1223                           	opt callstack 0
  1224  000060                     	ds	13
  1225  00006D                     _spi_link:
  1226                           	opt callstack 0
  1227  00006D                     	ds	12
  1228  000079                     _tickCount:
  1229                           	opt callstack 0
  1230  000079                     	ds	12
  1231  000085                     wdtdelay@dcount:
  1232                           	opt callstack 0
  1233  000085                     	ds	4
  1234  000089                     _V:
  1235                           	opt callstack 0
  1236  000089                     	ds	80
  1237  0000D9                     _dbuf:
  1238                           	opt callstack 0
  1239  0000D9                     	ds	32
  1240                           
  1241                           	psect	dataBANK0
  1242  0000F9                     __pdataBANK0:
  1243                           	opt callstack 0
  1244  0000F9                     stoa@F1144:
  1245                           	opt callstack 0
  1246  0000F9                     	ds	7
  1247                           
  1248                           	psect	bssBANK1
  1249  0001A1                     __pbssBANK1:
  1250                           	opt callstack 0
  1251  0001A1                     _uart1RxBuffer:
  1252                           	opt callstack 0
  1253  0001A1                     	ds	64
  1254                           
  1255                           	psect	dataBANK1
  1256  000100                     __pdataBANK1:
  1257                           	opt callstack 0
  1258  000100                     _H10:
  1259                           	opt callstack 0
  1260  000100                     	ds	65
  1261  000141                     _H24:
  1262                           	opt callstack 0
  1263  000141                     	ds	27
  1264  00015C                     _H18:
  1265                           	opt callstack 0
  1266  00015C                     	ds	21
  1267  000171                     _H14:
  1268                           	opt callstack 0
  1269  000171                     	ds	17
  1270  000182                     _H13:
  1271                           	opt callstack 0
  1272  000182                     	ds	16
  1273  000192                     _H12:
  1274                           	opt callstack 0
  1275  000192                     	ds	15
  1276                           
  1277                           	psect	bssBANK2
  1278  000200                     __pbssBANK2:
  1279                           	opt callstack 0
  1280  000200                     _uart2RxBuffer:
  1281                           	opt callstack 0
  1282  000200                     	ds	64
  1283  000240                     _uart2TxBuffer:
  1284                           	opt callstack 0
  1285  000240                     	ds	64
  1286  000280                     _uart1TxBuffer:
  1287                           	opt callstack 0
  1288  000280                     	ds	64
  1289                           
  1290                           	psect	bssBANK3
  1291  000300                     __pbssBANK3:
  1292                           	opt callstack 0
  1293  000300                     _ring_buf2:
  1294                           	opt callstack 0
  1295  000300                     	ds	67
  1296  000343                     _ring_buf1:
  1297                           	opt callstack 0
  1298  000343                     	ds	67
  1299                           
  1300                           	psect	dataBANK3
  1301  000386                     __pdataBANK3:
  1302                           	opt callstack 0
  1303  000386                     _H53:
  1304                           	opt callstack 0
  1305  000386                     	ds	112
  1306                           
  1307                           	psect	cstackCOMRAM
  1308  00005D                     __pcstackCOMRAM:
  1309                           	opt callstack 0
  1310  00005D                     ??_TMR6_ISR:
  1311  00005D                     
  1312                           ; 1 bytes @ 0x0
  1313  00005D                     	ds	1
  1314  00005E                     ??_TMR5_ISR:
  1315                           
  1316                           ; 1 bytes @ 0x1
  1317  00005E                     	ds	1
  1318                           
  1319 ;;
  1320 ;;Main: autosize = 3, tempsize = 0, incstack = 0, save=0
  1321 ;;
  1322 ;; *************** function _main *****************
  1323 ;; Defined at:
  1324 ;;		line 246 in file "main.c"
  1325 ;; Parameters:    Size  Location     Type
  1326 ;;		None
  1327 ;; Auto vars:     Size  Location     Type
  1328 ;;  j               1    0        unsigned char 
  1329 ;;  sum             2  [STACK] unsigned short 
  1330 ;;  mode            1  [STACK] enum E16894
  1331 ;; Return value:  Size  Location     Type
  1332 ;;                  1  [STACK] void 
  1333 ;; Registers used:
  1334 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+6, btemp+7, btemp
      ++8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl
      +, tblptrh, tblptru, prodl, prodh
  1335 ;; Tracked objects:
  1336 ;;		On entry : 0/0
  1337 ;;		On exit  : 3F/0
  1338 ;;		Unchanged: 0/0
  1339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1344 ;;Total ram usage:        0 bytes
  1345 ;; Hardware stack levels required when called:   14
  1346 ;; This function calls:
  1347 ;;		_SYSTEM_Initialize
  1348 ;;		_UART1_Write
  1349 ;;		_UART1_put_buffer
  1350 ;;		_WaitMs
  1351 ;;		_block_checksum
  1352 ;;		_eaDogM_WriteCommand
  1353 ;;		_eaDogM_WriteString
  1354 ;;		_eaDogM_WriteStringAtPos
  1355 ;;		_init_display
  1356 ;;		_r_protocol
  1357 ;;		_secs_send
  1358 ;;		_sprintf
  1359 ;;		_t_protocol
  1360 ;;		_wait_lcd_done
  1361 ;; This function is called by:
  1362 ;;		Startup code after reset
  1363 ;; This function uses a reentrant model
  1364 ;;
  1365                           
  1366                           	psect	text0
  1367  002BE4                     __ptext0:
  1368                           	opt callstack 0
  1369  002BE4                     _main:
  1370                           	opt callstack 0
  1371                           
  1372                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1373  002BE4  52E6               	movf	postinc1,f,c
  1374  002BE6  52E6               	movf	postinc1,f,c
  1375  002BE8  52E6               	movf	postinc1,f,c
  1376                           
  1377                           ;main.c: 248:  uint16_t sum;;main.c: 249:  UI_STATES mode;;main.c: 252:  SYSTEM_Initiali
      +                          ze();
  1378                           
  1379                           ;incstack = 0
  1380  002BEA  EC7E  F02B         	call	_SYSTEM_Initialize	;wreg free
  1381                           
  1382                           ; BSR set to: 60
  1383                           ;main.c: 255:  (INTCON0bits.GIEH = 1);
  1384  002BEE  8ED2               	bsf	16338,7,c	;volatile
  1385                           
  1386                           ; BSR set to: 60
  1387                           ;main.c: 258:  (INTCON0bits.GIEL = 1);
  1388  002BF0  8CD2               	bsf	16338,6,c	;volatile
  1389                           
  1390                           ; BSR set to: 60
  1391                           ;main.c: 260:  V.ui_state = UI_STATE_INIT;
  1392  002BF2  0100               	movlb	0	; () banked
  1393  002BF4  6B8A               	clrf	(_V+1)& (0+255),b	;volatile
  1394  002BF6  D181               	goto	l7964
  1395  002BF8                     l7846:
  1396                           
  1397                           ; BSR set to: 0
  1398                           ;main.c: 265:    init_display();
  1399  002BF8  EC77  F024         	call	_init_display	;wreg free
  1400                           
  1401                           ; BSR set to: 61
  1402                           ;main.c: 266:    eaDogM_WriteCommand(0b00001100);
  1403  002BFC  0E0C               	movlw	12
  1404  002BFE  6EE6               	movwf	postinc1,c
  1405  002C00  EC98  F02F         	call	_eaDogM_WriteCommand	;wreg free
  1406                           
  1407                           ; BSR set to: 0
  1408  002C04  90BD               	bcf	16317,0,c	;volatile
  1409                           
  1410                           ; BSR set to: 0
  1411                           ;main.c: 268:    mode = PORTDbits.RD2 + UI_STATE_EQUIP;
  1412  002C06  A4CD               	btfss	16333,2,c	;volatile
  1413  002C08  D003               	goto	u4960
  1414  002C0A  6A48               	clrf	btemp+11,c
  1415  002C0C  2A48               	incf	btemp+11,f,c
  1416  002C0E  D001               	goto	u4968
  1417  002C10                     u4960:
  1418  002C10  6A48               	clrf	btemp+11,c
  1419  002C12                     u4968:
  1420  002C12  0E01               	movlw	1
  1421  002C14  2648               	addwf	btemp+11,f,c
  1422                           
  1423                           ;stkvar	_mode @ sp[(-3)+2]
  1424  002C16  0EFF               	movlw	-1
  1425  002C18  0060  F123  FFE3   	movff	btemp+11,plusw1
  1426                           
  1427                           ;main.c: 269:    if (!PORTDbits.RD3) {
  1428  002C1E  B6CD               	btfsc	16333,3,c	;volatile
  1429  002C20  D004               	goto	l7858
  1430                           
  1431                           ;main.c: 270:     do { LATDbits.LATD0 = 1; } while(0);
  1432  002C22  80BD               	bsf	16317,0,c	;volatile
  1433                           
  1434                           ;main.c: 271:     mode = UI_STATE_LOG;
  1435                           ;stkvar	_mode @ sp[(-3)+2]
  1436  002C24  0EFF               	movlw	-1
  1437  002C26  6AE3               	clrf	plusw1,c
  1438  002C28  84E3               	bsf	plusw1,2,c
  1439  002C2A                     l7858:
  1440                           
  1441                           ;main.c: 273:    V.ui_state = mode;
  1442                           ;stkvar	_mode @ sp[(-3)+2]
  1443  002C2A  0EFF               	movlw	-1
  1444  002C2C  006F FF8C  F08A    	movff	plusw1,_V+1	;volatile
  1445                           
  1446                           ;main.c: 274:    V.s_state = SEQ_STATE_INIT;
  1447  002C32  0100               	movlb	0	; () banked
  1448  002C34  6B89               	clrf	_V& (0+255),b	;volatile
  1449                           
  1450                           ; BSR set to: 0
  1451                           ;main.c: 279:    sum = block_checksum((uint8_t*) & H10[j].block.block, sizeof(block10));
  1452                           
  1453                           ; BSR set to: 0
  1454  002C36  0E0A               	movlw	10
  1455  002C38  6EE6               	movwf	postinc1,c
  1456  002C3A  0E00               	movlw	0
  1457  002C3C  6EE6               	movwf	postinc1,c
  1458  002C3E  0E29               	movlw	low (_H10+41)
  1459  002C40  6EE6               	movwf	postinc1,c
  1460  002C42  0E01               	movlw	high (_H10+41)
  1461  002C44  6EE6               	movwf	postinc1,c
  1462  002C46  ECEC  F024         	call	_block_checksum	;wreg free
  1463                           
  1464                           ;stkvar	_sum @ sp[(-3)+0]
  1465  002C4A  0EFD               	movlw	-3
  1466  002C4C  0060  F0F7  FFE3   	movff	btemp,plusw1
  1467  002C52  0EFE               	movlw	-2
  1468  002C54  0060  F0FB  FFE3   	movff	btemp+1,plusw1
  1469                           
  1470                           ;main.c: 280:    H10[j].checksum = sum;
  1471                           ;stkvar	_sum @ sp[(-3)+0]
  1472  002C5A  0EFD               	movlw	-3
  1473  002C5C  006F FF8C  F127    	movff	plusw1,_H10+39
  1474  002C62  0EFE               	movlw	-2
  1475  002C64  006F FF8C  F128    	movff	plusw1,_H10+40
  1476                           
  1477                           ;main.c: 281:    sprintf(V.buf, "M %d, H %02x%02x%02x%02x%02x%02x%02x%02x%02x%02x, C 0x%
      +                          04x #",
  1478                           ;stkvar	_sum @ sp[(-3)+0]
  1479  002C6A  0EFD               	movlw	-3
  1480  002C6C  006F FF8F FFE6     	movff	plusw1,postinc1
  1481  002C72  006F FF8F FFE6     	movff	plusw1,postinc1
  1482  002C78  0101               	movlb	1	; () banked
  1483  002C7A  5129               	movf	(_H10+41)& (0+255),w,b
  1484  002C7C  6EE6               	movwf	postinc1,c
  1485  002C7E  0E00               	movlw	0
  1486  002C80  6EE6               	movwf	postinc1,c
  1487  002C82  512A               	movf	(_H10+42)& (0+255),w,b
  1488  002C84  6EE6               	movwf	postinc1,c
  1489  002C86  0E00               	movlw	0
  1490  002C88  6EE6               	movwf	postinc1,c
  1491  002C8A  512B               	movf	(_H10+43)& (0+255),w,b
  1492  002C8C  6EE6               	movwf	postinc1,c
  1493  002C8E  0E00               	movlw	0
  1494  002C90  6EE6               	movwf	postinc1,c
  1495  002C92  512C               	movf	(_H10+44)& (0+255),w,b
  1496  002C94  6EE6               	movwf	postinc1,c
  1497  002C96  0E00               	movlw	0
  1498  002C98  6EE6               	movwf	postinc1,c
  1499  002C9A  512D               	movf	(_H10+45)& (0+255),w,b
  1500  002C9C  6EE6               	movwf	postinc1,c
  1501  002C9E  0E00               	movlw	0
  1502  002CA0  6EE6               	movwf	postinc1,c
  1503  002CA2  512E               	movf	(_H10+46)& (0+255),w,b
  1504  002CA4  6EE6               	movwf	postinc1,c
  1505  002CA6  0E00               	movlw	0
  1506  002CA8  6EE6               	movwf	postinc1,c
  1507  002CAA  512F               	movf	(_H10+47)& (0+255),w,b
  1508  002CAC  6EE6               	movwf	postinc1,c
  1509  002CAE  0E00               	movlw	0
  1510  002CB0  6EE6               	movwf	postinc1,c
  1511  002CB2  5130               	movf	(_H10+48)& (0+255),w,b
  1512  002CB4  6EE6               	movwf	postinc1,c
  1513  002CB6  0E00               	movlw	0
  1514  002CB8  6EE6               	movwf	postinc1,c
  1515  002CBA  5131               	movf	(_H10+49)& (0+255),w,b
  1516  002CBC  6EE6               	movwf	postinc1,c
  1517  002CBE  0E00               	movlw	0
  1518  002CC0  6EE6               	movwf	postinc1,c
  1519  002CC2  5132               	movf	(_H10+50)& (0+255),w,b
  1520  002CC4  6EE6               	movwf	postinc1,c
  1521  002CC6  0E00               	movlw	0
  1522  002CC8  6EE6               	movwf	postinc1,c
  1523                           
  1524                           ;stkvar	_mode @ sp[(-25)+2]
  1525  002CCA  0EE9               	movlw	-23
  1526  002CCC  50E3               	movf	plusw1,w,c
  1527  002CCE  6EE6               	movwf	postinc1,c
  1528  002CD0  0E00               	movlw	0
  1529  002CD2  6EE6               	movwf	postinc1,c
  1530  002CD4  0E01               	movlw	STR_1& (0+255)
  1531  002CD6  6EE6               	movwf	postinc1,c
  1532  002CD8  0E89               	movlw	_V& (0+255)
  1533  002CDA  0F04               	addlw	4
  1534  002CDC  6EE6               	movwf	postinc1,c
  1535  002CDE  0E1A               	movlw	26
  1536  002CE0  6EE6               	movwf	postinc1,c
  1537  002CE2  EC55  F025         	call	_sprintf	;wreg free
  1538                           
  1539                           ;main.c: 294:    wait_lcd_done();
  1540  002CE6  EC27  F02F         	call	_wait_lcd_done	;wreg free
  1541                           
  1542                           ; BSR set to: 0
  1543                           ;main.c: 295:    eaDogM_WriteString(V.buf);
  1544  002CEA  0E89               	movlw	_V& (0+255)
  1545  002CEC  0F04               	addlw	4
  1546  002CEE  6EE6               	movwf	postinc1,c
  1547  002CF0  EC13  F026         	call	_eaDogM_WriteString	;wreg free
  1548                           
  1549                           ; BSR set to: 0
  1550                           ;main.c: 297:    secs_send((uint8_t*) & H10[j], sizeof(header10), 0);
  1551  002CF4  0E00               	movlw	0
  1552  002CF6  6EE6               	movwf	postinc1,c
  1553  002CF8  0E0D               	movlw	13
  1554  002CFA  6EE6               	movwf	postinc1,c
  1555  002CFC  0E27               	movlw	low (_H10+39)
  1556  002CFE  6EE6               	movwf	postinc1,c
  1557  002D00  0E01               	movlw	high (_H10+39)
  1558  002D02  6EE6               	movwf	postinc1,c
  1559  002D04  EC08  F022         	call	_secs_send	;wreg free
  1560                           
  1561                           ;main.c: 298:    sprintf(V.buf, " C 0x%04x #", V.t_checksum);
  1562  002D08  0060  F35F  FFE6   	movff	_V+78,postinc1
  1563  002D0E  0060  F363  FFE6   	movff	_V+79,postinc1
  1564  002D14  0E32               	movlw	(STR_1+49)& (0+255)
  1565  002D16  6EE6               	movwf	postinc1,c
  1566  002D18  0E89               	movlw	_V& (0+255)
  1567  002D1A  0F04               	addlw	4
  1568  002D1C  6EE6               	movwf	postinc1,c
  1569  002D1E  0E04               	movlw	4
  1570  002D20  6EE6               	movwf	postinc1,c
  1571  002D22  EC55  F025         	call	_sprintf	;wreg free
  1572                           
  1573                           ;main.c: 299:    wait_lcd_done();
  1574  002D26  EC27  F02F         	call	_wait_lcd_done	;wreg free
  1575                           
  1576                           ; BSR set to: 0
  1577                           ;main.c: 300:    eaDogM_WriteString(V.buf);
  1578  002D2A  0E89               	movlw	_V& (0+255)
  1579  002D2C  0F04               	addlw	4
  1580  002D2E  6EE6               	movwf	postinc1,c
  1581  002D30  EC13  F026         	call	_eaDogM_WriteString	;wreg free
  1582                           
  1583                           ;main.c: 303:    break;
  1584  002D34  D0F8               	goto	l7966
  1585  002D36                     l1227:
  1586                           
  1587                           ; BSR set to: 0
  1588                           ;main.c: 307:     V.r_l_state = LINK_STATE_IDLE;
  1589  002D36  6B8B               	clrf	(_V+2)& (0+255),b	;volatile
  1590                           
  1591                           ;main.c: 308:     V.t_l_state = LINK_STATE_IDLE;
  1592  002D38  6B8C               	clrf	(_V+3)& (0+255),b	;volatile
  1593                           
  1594                           ; BSR set to: 0
  1595                           ;main.c: 309:     V.s_state = SEQ_STATE_RX;
  1596  002D3A  0E01               	movlw	1
  1597  002D3C  6F89               	movwf	_V& (0+255),b	;volatile
  1598                           
  1599                           ; BSR set to: 0
  1600                           ;main.c: 311:     WaitMs(50);
  1601  002D3E  0E32               	movlw	50
  1602  002D40  6EE6               	movwf	postinc1,c
  1603  002D42  0E00               	movlw	0
  1604  002D44  6EE6               	movwf	postinc1,c
  1605  002D46  ECDA  F02C         	call	_WaitMs	;wreg free
  1606                           
  1607                           ;main.c: 312:     UART1_put_buffer(0x05);
  1608  002D4A  0E05               	movlw	5
  1609  002D4C  6EE6               	movwf	postinc1,c
  1610  002D4E  ECC5  F02C         	call	_UART1_put_buffer	;wreg free
  1611                           
  1612                           ;main.c: 314:     break;
  1613  002D52  D0A6               	goto	l7938
  1614  002D54                     l7888:
  1615                           
  1616                           ; BSR set to: 0
  1617                           ;main.c: 319:     if (r_protocol(&V.r_l_state) == LINK_STATE_DONE) {
  1618  002D54  0E89               	movlw	_V& (0+255)
  1619  002D56  0F02               	addlw	2
  1620  002D58  6EE6               	movwf	postinc1,c
  1621  002D5A  EC83  F01D         	call	_r_protocol	;wreg free
  1622  002D5E  0E04               	movlw	4
  1623  002D60  183D               	xorwf	btemp,w,c
  1624  002D62  A4D8               	btfss	status,2,c
  1625  002D64  D028               	goto	l7902
  1626                           
  1627                           ;main.c: 320:      sprintf(V.buf, " S%dF%d #    ", V.stream, V.function);
  1628  002D66  0100               	movlb	0	; () banked
  1629  002D68  51D2               	movf	(_V+73)& (0+255),w,b	;volatile
  1630  002D6A  6EE6               	movwf	postinc1,c
  1631  002D6C  0E00               	movlw	0
  1632  002D6E  6EE6               	movwf	postinc1,c
  1633  002D70  51D1               	movf	(_V+72)& (0+255),w,b	;volatile
  1634  002D72  6EE6               	movwf	postinc1,c
  1635  002D74  0E00               	movlw	0
  1636  002D76  6EE6               	movwf	postinc1,c
  1637  002D78  0E9D               	movlw	STR_3& (0+255)
  1638  002D7A  6EE6               	movwf	postinc1,c
  1639  002D7C  0E89               	movlw	_V& (0+255)
  1640  002D7E  0F04               	addlw	4
  1641  002D80  6EE6               	movwf	postinc1,c
  1642  002D82  0E06               	movlw	6
  1643  002D84  6EE6               	movwf	postinc1,c
  1644  002D86  EC55  F025         	call	_sprintf	;wreg free
  1645                           
  1646                           ;main.c: 321:      V.buf[11] = 0;
  1647  002D8A  0100               	movlb	0	; () banked
  1648  002D8C  6B98               	clrf	(_V+15)& (0+255),b	;volatile
  1649                           
  1650                           ; BSR set to: 0
  1651                           ;main.c: 322:      wait_lcd_done();
  1652  002D8E  EC27  F02F         	call	_wait_lcd_done	;wreg free
  1653                           
  1654                           ; BSR set to: 0
  1655                           ;main.c: 323:      eaDogM_WriteStringAtPos(0, 0, V.buf);
  1656  002D92  0E89               	movlw	_V& (0+255)
  1657  002D94  0F04               	addlw	4
  1658  002D96  6EE6               	movwf	postinc1,c
  1659  002D98  0E00               	movlw	0
  1660  002D9A  6EE6               	movwf	postinc1,c
  1661  002D9C  0E00               	movlw	0
  1662  002D9E  6EE6               	movwf	postinc1,c
  1663  002DA0  EC83  F02C         	call	_eaDogM_WriteStringAtPos	;wreg free
  1664                           
  1665                           ; BSR set to: 0
  1666                           ;main.c: 325:      WaitMs(5);
  1667  002DA4  0E05               	movlw	5
  1668  002DA6  6EE6               	movwf	postinc1,c
  1669  002DA8  0E00               	movlw	0
  1670  002DAA  6EE6               	movwf	postinc1,c
  1671  002DAC  ECDA  F02C         	call	_WaitMs	;wreg free
  1672                           
  1673                           ;main.c: 327:      V.s_state = SEQ_STATE_TX;
  1674  002DB0  0E02               	movlw	2
  1675  002DB2  0100               	movlb	0	; () banked
  1676  002DB4  6F89               	movwf	_V& (0+255),b	;volatile
  1677  002DB6                     l7902:
  1678                           
  1679                           ;main.c: 329:     if (V.r_l_state == LINK_STATE_ERROR)
  1680  002DB6  0E06               	movlw	6
  1681  002DB8  0100               	movlb	0	; () banked
  1682  002DBA  198B               	xorwf	(_V+2)& (0+255),w,b	;volatile
  1683  002DBC  D00F               	goto	L24
  1684  002DBE                     l7906:
  1685                           
  1686                           ; BSR set to: 0
  1687                           ;main.c: 336:     if (t_protocol(&V.t_l_state) == LINK_STATE_DONE) {
  1688  002DBE  0E89               	movlw	_V& (0+255)
  1689  002DC0  0F03               	addlw	3
  1690  002DC2  6EE6               	movwf	postinc1,c
  1691  002DC4  ECF9  F020         	call	_t_protocol	;wreg free
  1692  002DC8  0E04               	movlw	4
  1693  002DCA  183D               	xorwf	btemp,w,c
  1694  002DCC  A4D8               	btfss	status,2,c
  1695  002DCE  D003               	goto	l7910
  1696                           
  1697                           ;main.c: 337:      V.s_state = SEQ_STATE_TRIGGER;
  1698  002DD0  0E03               	movlw	3
  1699  002DD2  0100               	movlb	0	; () banked
  1700  002DD4  6F89               	movwf	_V& (0+255),b	;volatile
  1701  002DD6                     l7910:
  1702                           
  1703                           ;main.c: 339:     if (V.t_l_state == LINK_STATE_ERROR)
  1704  002DD6  0E06               	movlw	6
  1705  002DD8  0100               	movlb	0	; () banked
  1706  002DDA  198C               	xorwf	(_V+3)& (0+255),w,b	;volatile
  1707  002DDC                     L24:
  1708  002DDC  A4D8               	btfss	status,2,c
  1709  002DDE  D060               	goto	l7938
  1710                           
  1711                           ; BSR set to: 0
  1712                           ;main.c: 340:      V.s_state = SEQ_STATE_ERROR;
  1713  002DE0  0E05               	movlw	5
  1714  002DE2  6F89               	movwf	_V& (0+255),b	;volatile
  1715  002DE4  D05D               	goto	l7938
  1716  002DE6                     l1236:
  1717                           
  1718                           ; BSR set to: 0
  1719  002DE6  82BE               	bsf	16318,1,c	;volatile
  1720                           
  1721                           ; BSR set to: 0
  1722                           ;main.c: 344:     sprintf(V.buf, " OK #");
  1723  002DE8  0EAB               	movlw	STR_4& (0+255)
  1724  002DEA  6EE6               	movwf	postinc1,c
  1725  002DEC  0E89               	movlw	_V& (0+255)
  1726  002DEE  0F04               	addlw	4
  1727  002DF0  6EE6               	movwf	postinc1,c
  1728  002DF2  0E02               	movlw	2
  1729  002DF4  6EE6               	movwf	postinc1,c
  1730  002DF6  EC55  F025         	call	_sprintf	;wreg free
  1731                           
  1732                           ;main.c: 345:     wait_lcd_done();
  1733  002DFA  EC27  F02F         	call	_wait_lcd_done	;wreg free
  1734                           
  1735                           ; BSR set to: 0
  1736                           ;main.c: 346:     eaDogM_WriteStringAtPos(0, 11, V.buf);
  1737  002DFE  0E89               	movlw	_V& (0+255)
  1738  002E00  0F04               	addlw	4
  1739  002E02  6EE6               	movwf	postinc1,c
  1740  002E04  0E0B               	movlw	11
  1741  002E06  6EE6               	movwf	postinc1,c
  1742  002E08  0E00               	movlw	0
  1743  002E0A  6EE6               	movwf	postinc1,c
  1744  002E0C  EC83  F02C         	call	_eaDogM_WriteStringAtPos	;wreg free
  1745                           
  1746                           ; BSR set to: 0
  1747                           ;main.c: 347:     V.s_state = SEQ_STATE_DONE;
  1748  002E10  0E04               	movlw	4
  1749  002E12  6F89               	movwf	_V& (0+255),b	;volatile
  1750                           
  1751                           ; BSR set to: 0
  1752  002E14  92BE               	bcf	16318,1,c	;volatile
  1753  002E16  D044               	goto	l7938
  1754  002E18                     l7924:
  1755                           
  1756                           ; BSR set to: 0
  1757                           ;main.c: 355:     UART1_Write(0x15);
  1758  002E18  0E15               	movlw	21
  1759  002E1A  6EE6               	movwf	postinc1,c
  1760  002E1C  ECBF  F02B         	call	_UART1_Write	;wreg free
  1761                           
  1762                           ; BSR set to: 57
  1763                           ;main.c: 356:     sprintf(V.buf, " ERR R%d T%d E%d A%d #", V.r_l_state, V.t_l_state, V.e
      +                          rror, V.abort);
  1764  002E20  0100               	movlb	0	; () banked
  1765  002E22  51D4               	movf	(_V+75)& (0+255),w,b	;volatile
  1766  002E24  6EE6               	movwf	postinc1,c
  1767  002E26  0E00               	movlw	0
  1768  002E28  6EE6               	movwf	postinc1,c
  1769  002E2A  51D3               	movf	(_V+74)& (0+255),w,b	;volatile
  1770  002E2C  6EE6               	movwf	postinc1,c
  1771  002E2E  0E00               	movlw	0
  1772  002E30  6EE6               	movwf	postinc1,c
  1773  002E32  518C               	movf	(_V+3)& (0+255),w,b	;volatile
  1774  002E34  6EE6               	movwf	postinc1,c
  1775  002E36  0E00               	movlw	0
  1776  002E38  6EE6               	movwf	postinc1,c
  1777  002E3A  518B               	movf	(_V+2)& (0+255),w,b	;volatile
  1778  002E3C  6EE6               	movwf	postinc1,c
  1779  002E3E  0E00               	movlw	0
  1780  002E40  6EE6               	movwf	postinc1,c
  1781  002E42  0E3E               	movlw	STR_5& (0+255)
  1782  002E44  6EE6               	movwf	postinc1,c
  1783  002E46  0E89               	movlw	_V& (0+255)
  1784  002E48  0F04               	addlw	4
  1785  002E4A  6EE6               	movwf	postinc1,c
  1786  002E4C  0E0A               	movlw	10
  1787  002E4E  6EE6               	movwf	postinc1,c
  1788  002E50  EC55  F025         	call	_sprintf	;wreg free
  1789                           
  1790                           ;main.c: 357:     wait_lcd_done();
  1791  002E54  EC27  F02F         	call	_wait_lcd_done	;wreg free
  1792                           
  1793                           ; BSR set to: 0
  1794                           ;main.c: 358:     eaDogM_WriteStringAtPos(0, 0, V.buf);
  1795  002E58  0E89               	movlw	_V& (0+255)
  1796  002E5A  0F04               	addlw	4
  1797  002E5C  6EE6               	movwf	postinc1,c
  1798  002E5E  0E00               	movlw	0
  1799  002E60  6EE6               	movwf	postinc1,c
  1800  002E62  0E00               	movlw	0
  1801  002E64  6EE6               	movwf	postinc1,c
  1802  002E66  EC83  F02C         	call	_eaDogM_WriteStringAtPos	;wreg free
  1803  002E6A                     l7932:
  1804                           
  1805                           ; BSR set to: 0
  1806                           ;main.c: 359:     V.s_state = SEQ_STATE_INIT;
  1807  002E6A  6B89               	clrf	_V& (0+255),b	;volatile
  1808                           
  1809                           ;main.c: 360:     break;
  1810  002E6C  D019               	goto	l7938
  1811  002E6E                     l7936:
  1812                           
  1813                           ; BSR set to: 0
  1814  002E6E  5189               	movf	_V& (0+255),w,b	;volatile
  1815  002E70  6E47               	movwf	btemp+10,c
  1816  002E72  6A48               	clrf	btemp+11,c
  1817                           
  1818                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1819                           ; Switch size 1, requested type "simple"
  1820                           ; Number of cases is 1, Range of values is 0 to 0
  1821                           ; switch strategies available:
  1822                           ; Name         Instructions Cycles
  1823                           ; simple_byte            4     3 (average)
  1824                           ;	Chosen strategy is simple_byte
  1825  002E74  5048               	movf	btemp+11,w,c
  1826  002E76  0A00               	xorlw	0	; case 0
  1827  002E78  A4D8               	btfss	status,2,c
  1828  002E7A  D7CE               	goto	l7924
  1829                           
  1830                           ; BSR set to: 0
  1831                           ; Switch size 1, requested type "simple"
  1832                           ; Number of cases is 6, Range of values is 0 to 5
  1833                           ; switch strategies available:
  1834                           ; Name         Instructions Cycles
  1835                           ; simple_byte           19    10 (average)
  1836                           ;	Chosen strategy is simple_byte
  1837  002E7C  5047               	movf	btemp+10,w,c
  1838  002E7E  0A00               	xorlw	0	; case 0
  1839  002E80  B4D8               	btfsc	status,2,c
  1840  002E82  D759               	goto	l1227
  1841  002E84  0A01               	xorlw	1	; case 1
  1842  002E86  B4D8               	btfsc	status,2,c
  1843  002E88  D765               	goto	l7888
  1844  002E8A  0A03               	xorlw	3	; case 2
  1845  002E8C  B4D8               	btfsc	status,2,c
  1846  002E8E  D797               	goto	l7906
  1847  002E90  0A01               	xorlw	1	; case 3
  1848  002E92  B4D8               	btfsc	status,2,c
  1849  002E94  D7A8               	goto	l1236
  1850  002E96  0A07               	xorlw	7	; case 4
  1851  002E98  B4D8               	btfsc	status,2,c
  1852  002E9A  D7E7               	goto	l7932
  1853  002E9C  0A01               	xorlw	1	; case 5
  1854  002E9E  D7BC               	goto	l7924
  1855  002EA0                     l7938:
  1856                           
  1857                           ;main.c: 362:    sprintf(V.buf, " HOST MODE     #");
  1858  002EA0  0E7B               	movlw	STR_6& (0+255)
  1859  002EA2  6EE6               	movwf	postinc1,c
  1860  002EA4  0E89               	movlw	_V& (0+255)
  1861  002EA6  0F04               	addlw	4
  1862  002EA8  6EE6               	movwf	postinc1,c
  1863  002EAA  0E02               	movlw	2
  1864  002EAC  6EE6               	movwf	postinc1,c
  1865  002EAE  EC55  F025         	call	_sprintf	;wreg free
  1866  002EB2                     l7940:
  1867                           
  1868                           ;main.c: 363:    V.buf[16] = 0;
  1869  002EB2  0100               	movlb	0	; () banked
  1870  002EB4  6B9D               	clrf	(_V+20)& (0+255),b	;volatile
  1871                           
  1872                           ; BSR set to: 0
  1873                           ;main.c: 364:    wait_lcd_done();
  1874  002EB6  EC27  F02F         	call	_wait_lcd_done	;wreg free
  1875                           
  1876                           ; BSR set to: 0
  1877                           ;main.c: 365:    eaDogM_WriteStringAtPos(2, 0, V.buf);
  1878  002EBA  0E89               	movlw	_V& (0+255)
  1879  002EBC  0F04               	addlw	4
  1880  002EBE  6EE6               	movwf	postinc1,c
  1881  002EC0  0E00               	movlw	0
  1882  002EC2  6EE6               	movwf	postinc1,c
  1883  002EC4  0E02               	movlw	2
  1884  002EC6  6EE6               	movwf	postinc1,c
  1885  002EC8  EC83  F02C         	call	_eaDogM_WriteStringAtPos	;wreg free
  1886                           
  1887                           ;main.c: 366:    break;
  1888  002ECC  D02C               	goto	l7966
  1889  002ECE                     l7946:
  1890                           
  1891                           ; BSR set to: 0
  1892                           ;main.c: 368:    sprintf(V.buf, " EQUIP MODE    #");
  1893  002ECE  0E8C               	movlw	STR_7& (0+255)
  1894  002ED0  6EE6               	movwf	postinc1,c
  1895  002ED2  0E89               	movlw	_V& (0+255)
  1896  002ED4  0F04               	addlw	4
  1897  002ED6  6EE6               	movwf	postinc1,c
  1898  002ED8  0E02               	movlw	2
  1899  002EDA  6EE6               	movwf	postinc1,c
  1900  002EDC  EC55  F025         	call	_sprintf	;wreg free
  1901  002EE0  D7E8               	goto	l7940
  1902  002EE2                     l7954:
  1903                           
  1904                           ; BSR set to: 0
  1905                           ;main.c: 374:    sprintf(V.buf, " LOG MODE      #");
  1906  002EE2  0E6A               	movlw	STR_8& (0+255)
  1907  002EE4  6EE6               	movwf	postinc1,c
  1908  002EE6  0E89               	movlw	_V& (0+255)
  1909  002EE8  0F04               	addlw	4
  1910  002EEA  6EE6               	movwf	postinc1,c
  1911  002EEC  0E02               	movlw	2
  1912  002EEE  6EE6               	movwf	postinc1,c
  1913  002EF0  EC55  F025         	call	_sprintf	;wreg free
  1914  002EF4  D7DE               	goto	l7940
  1915  002EF6                     l1246:
  1916                           
  1917                           ; BSR set to: 0
  1918                           ;main.c: 381:    V.ui_state = UI_STATE_INIT;
  1919  002EF6  6B8A               	clrf	(_V+1)& (0+255),b	;volatile
  1920                           
  1921                           ;main.c: 382:    break;
  1922  002EF8  D016               	goto	l7966
  1923  002EFA                     l7964:
  1924                           
  1925                           ; BSR set to: 0
  1926  002EFA  518A               	movf	(_V+1)& (0+255),w,b	;volatile
  1927  002EFC  6E47               	movwf	btemp+10,c
  1928  002EFE  6A48               	clrf	btemp+11,c
  1929                           
  1930                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1931                           ; Switch size 1, requested type "simple"
  1932                           ; Number of cases is 1, Range of values is 0 to 0
  1933                           ; switch strategies available:
  1934                           ; Name         Instructions Cycles
  1935                           ; simple_byte            4     3 (average)
  1936                           ;	Chosen strategy is simple_byte
  1937  002F00  5048               	movf	btemp+11,w,c
  1938  002F02  0A00               	xorlw	0	; case 0
  1939  002F04  A4D8               	btfss	status,2,c
  1940  002F06  D7F7               	goto	l1246
  1941                           
  1942                           ; BSR set to: 0
  1943                           ; Switch size 1, requested type "simple"
  1944                           ; Number of cases is 5, Range of values is 0 to 5
  1945                           ; switch strategies available:
  1946                           ; Name         Instructions Cycles
  1947                           ; simple_byte           16     9 (average)
  1948                           ;	Chosen strategy is simple_byte
  1949  002F08  5047               	movf	btemp+10,w,c
  1950  002F0A  0A00               	xorlw	0	; case 0
  1951  002F0C  B4D8               	btfsc	status,2,c
  1952  002F0E  D674               	goto	l7846
  1953  002F10  0A01               	xorlw	1	; case 1
  1954  002F12  B4D8               	btfsc	status,2,c
  1955  002F14  D7DC               	goto	l7946
  1956  002F16  0A03               	xorlw	3	; case 2
  1957  002F18  B4D8               	btfsc	status,2,c
  1958  002F1A  D7A9               	goto	l7936
  1959  002F1C  0A06               	xorlw	6	; case 4
  1960  002F1E  B4D8               	btfsc	status,2,c
  1961  002F20  D7E0               	goto	l7954
  1962  002F22  0A01               	xorlw	1	; case 5
  1963  002F24  D7E8               	goto	l1246
  1964  002F26                     l7966:
  1965                           
  1966                           ; BSR set to: 0
  1967                           ;main.c: 384:   sprintf(V.buf, " R%d T%d E%d A%d   #", V.r_l_state, V.t_l_state, V.error
      +                          , V.abort);
  1968  002F26  51D4               	movf	(_V+75)& (0+255),w,b	;volatile
  1969  002F28  6EE6               	movwf	postinc1,c
  1970  002F2A  0E00               	movlw	0
  1971  002F2C  6EE6               	movwf	postinc1,c
  1972  002F2E  51D3               	movf	(_V+74)& (0+255),w,b	;volatile
  1973  002F30  6EE6               	movwf	postinc1,c
  1974  002F32  0E00               	movlw	0
  1975  002F34  6EE6               	movwf	postinc1,c
  1976  002F36  518C               	movf	(_V+3)& (0+255),w,b	;volatile
  1977  002F38  6EE6               	movwf	postinc1,c
  1978  002F3A  0E00               	movlw	0
  1979  002F3C  6EE6               	movwf	postinc1,c
  1980  002F3E  518B               	movf	(_V+2)& (0+255),w,b	;volatile
  1981  002F40  6EE6               	movwf	postinc1,c
  1982  002F42  0E00               	movlw	0
  1983  002F44  6EE6               	movwf	postinc1,c
  1984  002F46  0E55               	movlw	STR_9& (0+255)
  1985  002F48  6EE6               	movwf	postinc1,c
  1986  002F4A  0E89               	movlw	_V& (0+255)
  1987  002F4C  0F04               	addlw	4
  1988  002F4E  6EE6               	movwf	postinc1,c
  1989  002F50  0E0A               	movlw	10
  1990  002F52  6EE6               	movwf	postinc1,c
  1991  002F54  EC55  F025         	call	_sprintf	;wreg free
  1992                           
  1993                           ;main.c: 385:   V.buf[16] = 0;
  1994  002F58  0100               	movlb	0	; () banked
  1995  002F5A  6B9D               	clrf	(_V+20)& (0+255),b	;volatile
  1996                           
  1997                           ; BSR set to: 0
  1998                           ;main.c: 386:   wait_lcd_done();
  1999  002F5C  EC27  F02F         	call	_wait_lcd_done	;wreg free
  2000                           
  2001                           ; BSR set to: 0
  2002                           ;main.c: 387:   eaDogM_WriteStringAtPos(1, 0, V.buf);
  2003  002F60  0E89               	movlw	_V& (0+255)
  2004  002F62  0F04               	addlw	4
  2005  002F64  6EE6               	movwf	postinc1,c
  2006  002F66  0E00               	movlw	0
  2007  002F68  6EE6               	movwf	postinc1,c
  2008  002F6A  0E01               	movlw	1
  2009  002F6C  6EE6               	movwf	postinc1,c
  2010  002F6E  EC83  F02C         	call	_eaDogM_WriteStringAtPos	;wreg free
  2011  002F72  D7C3               	goto	l7964
  2012  002F74                     __end_of_main:
  2013                           	opt callstack 0
  2014                           
  2015 ;; *************** function _t_protocol *****************
  2016 ;; Defined at:
  2017 ;;		line 126 in file "gemsecs.c"
  2018 ;; Parameters:    Size  Location     Type
  2019 ;;  t_link          1  [STACK] PTR enum E16164
  2020 ;;		 -> V(80), 
  2021 ;; Auto vars:     Size  Location     Type
  2022 ;;  block           3  [STACK] struct response_type
  2023 ;;  rxData          1  [STACK] unsigned char 
  2024 ;; Return value:  Size  Location     Type
  2025 ;;                  1  [STACK] enum E16902
  2026 ;; Registers used:
  2027 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+6, btemp+7, btemp
      ++8, btemp+9, btemp+10, btemp+11, prodl, prodh
  2028 ;; Tracked objects:
  2029 ;;		On entry : 0/0
  2030 ;;		On exit  : 0/0
  2031 ;;		Unchanged: 0/0
  2032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2036 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2037 ;;Total ram usage:        0 bytes
  2038 ;; Hardware stack levels used:    1
  2039 ;; Hardware stack levels required when called:    5
  2040 ;; This function calls:
  2041 ;;		_StartTimer
  2042 ;;		_TimerDone
  2043 ;;		_UART1_Read
  2044 ;;		_UART1_Write
  2045 ;;		_UART1_is_rx_ready
  2046 ;;		_UART1_put_buffer
  2047 ;;		_WaitMs
  2048 ;;		_secs_II_message
  2049 ;;		_secs_send
  2050 ;; This function is called by:
  2051 ;;		_main
  2052 ;; This function uses a reentrant model
  2053 ;;
  2054                           
  2055                           	psect	text1
  2056  0041F2                     __ptext1:
  2057                           	opt callstack 0
  2058  0041F2                     _t_protocol:
  2059                           	opt callstack 0
  2060                           
  2061                           ; BSR set to: 0
  2062                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2063  0041F2  52E6               	movf	postinc1,f,c
  2064  0041F4  52E6               	movf	postinc1,f,c
  2065  0041F6  52E6               	movf	postinc1,f,c
  2066  0041F8  52E6               	movf	postinc1,f,c
  2067                           
  2068                           ;gemsecs.c: 126: LINK_STATES t_protocol(LINK_STATES * t_link);gemsecs.c: 127: {;gemsecs.
      +                          c: 128:  uint8_t rxData;;gemsecs.c: 129:  response_type block;;gemsecs.c: 131:  switch (
      +                          *t_link) {
  2069                           
  2070                           ;incstack = 0
  2071  0041FA  D0DE               	goto	l7826
  2072  0041FC                     l1541:
  2073                           
  2074                           ;gemsecs.c: 133:   V.error = LINK_ERROR_NONE;
  2075  0041FC  0100               	movlb	0	; () banked
  2076  0041FE  6BD3               	clrf	(_V+74)& (0+255),b	;volatile
  2077                           
  2078                           ; BSR set to: 0
  2079                           ;gemsecs.c: 134:   UART1_Write(0x05);
  2080  004200  0E05               	movlw	5
  2081  004202  6EE6               	movwf	postinc1,c
  2082  004204  ECBF  F02B         	call	_UART1_Write	;wreg free
  2083                           
  2084                           ; BSR set to: 57
  2085                           ;gemsecs.c: 135:   StartTimer(TMR_T2, 2000);
  2086  004208  0ED0               	movlw	208
  2087  00420A  6EE6               	movwf	postinc1,c
  2088  00420C  0E07               	movlw	7
  2089  00420E  6EE6               	movwf	postinc1,c
  2090  004210  0E02               	movlw	2
  2091  004212  6EE6               	movwf	postinc1,c
  2092  004214  EC1D  F02C         	call	_StartTimer	;wreg free
  2093                           
  2094                           ;gemsecs.c: 136:   *t_link = LINK_STATE_ENQ;
  2095                           ;stkvar	_t_link @ sp[(-4)+-1]
  2096  004218  0EFB               	movlw	-5
  2097  00421A  50E3               	movf	plusw1,w,c
  2098  00421C  6ED9               	movwf	fsr2l,c
  2099  00421E  6ADA               	clrf	fsr2h,c
  2100  004220  0E01               	movlw	1
  2101  004222  6EDF               	movwf	indf2,c
  2102                           
  2103                           ;gemsecs.c: 138:   WaitMs(5);
  2104  004224  0E05               	movlw	5
  2105  004226  6EE6               	movwf	postinc1,c
  2106  004228  0E00               	movlw	0
  2107  00422A  6EE6               	movwf	postinc1,c
  2108  00422C  ECDA  F02C         	call	_WaitMs	;wreg free
  2109                           
  2110                           ;gemsecs.c: 139:   UART1_put_buffer(0x04);
  2111  004230  0E04               	movlw	4
  2112  004232  6EE6               	movwf	postinc1,c
  2113  004234  ECC5  F02C         	call	_UART1_put_buffer	;wreg free
  2114                           
  2115                           ;gemsecs.c: 141:   break;
  2116  004238  D0E0               	goto	l7828
  2117  00423A                     l7766:
  2118                           
  2119                           ;gemsecs.c: 143:   if (TimerDone(TMR_T2)) {
  2120  00423A  0E02               	movlw	2
  2121  00423C  6EE6               	movwf	postinc1,c
  2122  00423E  EC81  F02E         	call	_TimerDone	;wreg free
  2123  004242  503D               	movf	btemp,w,c
  2124  004244  B4D8               	btfsc	status,2,c
  2125  004246  D009               	goto	l7772
  2126                           
  2127                           ;gemsecs.c: 144:    V.error = LINK_ERROR_T2;
  2128  004248  0E02               	movlw	2
  2129  00424A  0100               	movlb	0	; () banked
  2130  00424C  6FD3               	movwf	(_V+74)& (0+255),b	;volatile
  2131                           
  2132                           ; BSR set to: 0
  2133                           ;gemsecs.c: 145:    *t_link = LINK_STATE_NAK;
  2134                           ;stkvar	_t_link @ sp[(-4)+-1]
  2135  00424E  0EFB               	movlw	-5
  2136  004250  50E3               	movf	plusw1,w,c
  2137  004252  6ED9               	movwf	fsr2l,c
  2138  004254  6ADA               	clrf	fsr2h,c
  2139  004256  0E05               	movlw	5
  2140  004258  D0AD               	goto	L5
  2141  00425A                     l7772:
  2142                           
  2143                           ;gemsecs.c: 147:    if (UART1_is_rx_ready()) {
  2144  00425A  ECDB  F02F         	call	_UART1_is_rx_ready	;wreg free
  2145  00425E  503D               	movf	btemp,w,c
  2146  004260  B4D8               	btfsc	status,2,c
  2147  004262  D0CB               	goto	l7828
  2148                           
  2149                           ;gemsecs.c: 148:     rxData = UART1_Read();
  2150  004264  ECDE  F02B         	call	_UART1_Read	;wreg free
  2151                           
  2152                           ;stkvar	_rxData @ sp[(-4)+3]
  2153  004268  0EFF               	movlw	-1
  2154  00426A  0060  F0F7  FFE3   	movff	btemp,plusw1
  2155                           
  2156                           ; BSR set to: 57
  2157                           ;gemsecs.c: 149:     if (rxData == 0x04) {
  2158                           ;stkvar	_rxData @ sp[(-4)+3]
  2159  004270  0EFF               	movlw	-1
  2160  004272  006F FF8C  F03D    	movff	plusw1,btemp
  2161  004278  0E04               	movlw	4
  2162  00427A  183D               	xorwf	btemp,w,c
  2163  00427C  A4D8               	btfss	status,2,c
  2164  00427E  D0BD               	goto	l7828
  2165                           
  2166                           ; BSR set to: 57
  2167                           ;gemsecs.c: 150:      StartTimer(TMR_T3, 5000);
  2168  004280  0E88               	movlw	136
  2169  004282  6EE6               	movwf	postinc1,c
  2170  004284  0E13               	movlw	19
  2171  004286  6EE6               	movwf	postinc1,c
  2172  004288  0E03               	movlw	3
  2173  00428A  6EE6               	movwf	postinc1,c
  2174  00428C  EC1D  F02C         	call	_StartTimer	;wreg free
  2175                           
  2176                           ;gemsecs.c: 151:      *t_link = LINK_STATE_EOT;
  2177                           ;stkvar	_t_link @ sp[(-4)+-1]
  2178  004290  0EFB               	movlw	-5
  2179  004292  50E3               	movf	plusw1,w,c
  2180  004294  6ED9               	movwf	fsr2l,c
  2181  004296  6ADA               	clrf	fsr2h,c
  2182  004298  0E02               	movlw	2
  2183  00429A  D08C               	goto	L5
  2184  00429C                     l7782:
  2185                           
  2186                           ;gemsecs.c: 157:   block = secs_II_message(V.stream, V.function);
  2187  00429C  0100               	movlb	0	; () banked
  2188  00429E  51D2               	movf	(_V+73)& (0+255),w,b	;volatile
  2189  0042A0  6EE6               	movwf	postinc1,c
  2190  0042A2  51D1               	movf	(_V+72)& (0+255),w,b	;volatile
  2191  0042A4  6EE6               	movwf	postinc1,c
  2192  0042A6  ECE4  F022         	call	_secs_II_message	;wreg free
  2193                           
  2194                           ;stkvar	_block @ sp[(-4)+0]
  2195  0042AA  0EFC               	movlw	-4
  2196  0042AC  0060  F0F7  FFE3   	movff	btemp,plusw1
  2197  0042B2  0EFD               	movlw	-3
  2198  0042B4  0060  F0FB  FFE3   	movff	btemp+1,plusw1
  2199  0042BA  0EFE               	movlw	-2
  2200  0042BC  0060  F0FF  FFE3   	movff	btemp+2,plusw1
  2201                           
  2202                           ; BSR set to: 0
  2203                           ;gemsecs.c: 158:   if (V.abort == LINK_ERROR_ABORT) {
  2204  0042C2  0E07               	movlw	7
  2205  0042C4  19D4               	xorwf	(_V+75)& (0+255),w,b	;volatile
  2206  0042C6  A4D8               	btfss	status,2,c
  2207  0042C8  D019               	goto	l7790
  2208                           
  2209                           ; BSR set to: 0
  2210                           ;gemsecs.c: 159:    secs_send((uint8_t*) block.header, block.length, 0);
  2211  0042CA  0E00               	movlw	0
  2212  0042CC  6EE6               	movwf	postinc1,c
  2213                           
  2214                           ;stkvar	_block @ sp[(-5)+0]
  2215  0042CE  0EFD               	movlw	253
  2216  0042D0  24E1               	addwf	fsr1l,w,c
  2217  0042D2  6ED9               	movwf	fsr2l,c
  2218  0042D4  0EFF               	movlw	255
  2219  0042D6  20E2               	addwfc	fsr1h,w,c
  2220  0042D8  6EDA               	movwf	fsr2h,c
  2221  0042DA  50DF               	movf	indf2,w,c
  2222  0042DC  6EE6               	movwf	postinc1,c
  2223                           
  2224                           ;stkvar	_block @ sp[(-6)+0]
  2225  0042DE  0EFA               	movlw	-6
  2226  0042E0  006F FF8F FFE6     	movff	plusw1,postinc1
  2227  0042E6  006F FF8F FFE6     	movff	plusw1,postinc1
  2228  0042EC  EC08  F022         	call	_secs_send	;wreg free
  2229  0042F0                     l7788:
  2230                           
  2231                           ;gemsecs.c: 160:    *t_link = LINK_STATE_ERROR;
  2232                           ;stkvar	_t_link @ sp[(-4)+-1]
  2233  0042F0  0EFB               	movlw	-5
  2234  0042F2  50E3               	movf	plusw1,w,c
  2235  0042F4  6ED9               	movwf	fsr2l,c
  2236  0042F6  6ADA               	clrf	fsr2h,c
  2237  0042F8  0E06               	movlw	6
  2238  0042FA  D01C               	goto	L3
  2239  0042FC                     l7790:
  2240                           
  2241                           ; BSR set to: 0
  2242                           ;gemsecs.c: 162:    secs_send((uint8_t*) block.header, block.length, 0);
  2243  0042FC  0E00               	movlw	0
  2244  0042FE  6EE6               	movwf	postinc1,c
  2245                           
  2246                           ;stkvar	_block @ sp[(-5)+0]
  2247  004300  0EFD               	movlw	253
  2248  004302  24E1               	addwf	fsr1l,w,c
  2249  004304  6ED9               	movwf	fsr2l,c
  2250  004306  0EFF               	movlw	255
  2251  004308  20E2               	addwfc	fsr1h,w,c
  2252  00430A  6EDA               	movwf	fsr2h,c
  2253  00430C  50DF               	movf	indf2,w,c
  2254  00430E  6EE6               	movwf	postinc1,c
  2255                           
  2256                           ;stkvar	_block @ sp[(-6)+0]
  2257  004310  0EFA               	movlw	-6
  2258  004312  006F FF8F FFE6     	movff	plusw1,postinc1
  2259  004318  006F FF8F FFE6     	movff	plusw1,postinc1
  2260  00431E  EC08  F022         	call	_secs_send	;wreg free
  2261                           
  2262                           ;gemsecs.c: 163:    if (V.error == LINK_ERROR_NONE) {
  2263  004322  0100               	movlb	0	; () banked
  2264  004324  51D3               	movf	(_V+74)& (0+255),w,b	;volatile
  2265  004326  A4D8               	btfss	status,2,c
  2266  004328  D7E3               	goto	l7788
  2267                           
  2268                           ; BSR set to: 0
  2269                           ;gemsecs.c: 164:     *t_link = LINK_STATE_ACK;
  2270                           ;stkvar	_t_link @ sp[(-4)+-1]
  2271  00432A  0EFB               	movlw	-5
  2272  00432C  50E3               	movf	plusw1,w,c
  2273  00432E  6ED9               	movwf	fsr2l,c
  2274  004330  6ADA               	clrf	fsr2h,c
  2275  004332  0E03               	movlw	3
  2276  004334                     L3:
  2277  004334  6EDF               	movwf	indf2,c
  2278                           
  2279                           ;gemsecs.c: 170:   WaitMs(5);
  2280                           
  2281                           ;gemsecs.c: 165:    } else {
  2282  004336  0E05               	movlw	5
  2283  004338  6EE6               	movwf	postinc1,c
  2284  00433A  0E00               	movlw	0
  2285  00433C  6EE6               	movwf	postinc1,c
  2286  00433E  ECDA  F02C         	call	_WaitMs	;wreg free
  2287                           
  2288                           ;gemsecs.c: 171:   UART1_put_buffer(0x06);
  2289  004342  0E06               	movlw	6
  2290  004344  6EE6               	movwf	postinc1,c
  2291  004346  ECC5  F02C         	call	_UART1_put_buffer	;wreg free
  2292                           
  2293                           ;gemsecs.c: 173:   break;
  2294  00434A  D057               	goto	l7828
  2295  00434C                     l7802:
  2296                           
  2297                           ;gemsecs.c: 175:   if (TimerDone(TMR_T3)) {
  2298  00434C  0E03               	movlw	3
  2299  00434E  6EE6               	movwf	postinc1,c
  2300  004350  EC81  F02E         	call	_TimerDone	;wreg free
  2301  004354  503D               	movf	btemp,w,c
  2302  004356  B4D8               	btfsc	status,2,c
  2303  004358  D002               	goto	l7808
  2304                           
  2305                           ;gemsecs.c: 176:    V.error = LINK_ERROR_T3;
  2306  00435A  0E03               	movlw	3
  2307  00435C  D776               	goto	L4
  2308  00435E                     l7808:
  2309                           
  2310                           ;gemsecs.c: 179:    if (UART1_is_rx_ready()) {
  2311  00435E  ECDB  F02F         	call	_UART1_is_rx_ready	;wreg free
  2312  004362  503D               	movf	btemp,w,c
  2313  004364  B4D8               	btfsc	status,2,c
  2314  004366  D049               	goto	l7828
  2315                           
  2316                           ;gemsecs.c: 180:     rxData = UART1_Read();
  2317  004368  ECDE  F02B         	call	_UART1_Read	;wreg free
  2318                           
  2319                           ;stkvar	_rxData @ sp[(-4)+3]
  2320  00436C  0EFF               	movlw	-1
  2321  00436E  0060  F0F7  FFE3   	movff	btemp,plusw1
  2322                           
  2323                           ; BSR set to: 57
  2324                           ;gemsecs.c: 181:     if (rxData == 0x06) {
  2325                           ;stkvar	_rxData @ sp[(-4)+3]
  2326  004374  0EFF               	movlw	-1
  2327  004376  006F FF8C  F03D    	movff	plusw1,btemp
  2328  00437C  0E06               	movlw	6
  2329  00437E  183D               	xorwf	btemp,w,c
  2330  004380  A4D8               	btfss	status,2,c
  2331  004382  D03B               	goto	l7828
  2332                           
  2333                           ; BSR set to: 57
  2334                           ;gemsecs.c: 182:      *t_link = LINK_STATE_DONE;
  2335                           ;stkvar	_t_link @ sp[(-4)+-1]
  2336  004384  0EFB               	movlw	-5
  2337  004386  50E3               	movf	plusw1,w,c
  2338  004388  6ED9               	movwf	fsr2l,c
  2339  00438A  6ADA               	clrf	fsr2h,c
  2340  00438C  0E04               	movlw	4
  2341  00438E  D012               	goto	L5
  2342  004390                     l7816:
  2343                           
  2344                           ;gemsecs.c: 188:   *t_link = LINK_STATE_ERROR;
  2345                           ;stkvar	_t_link @ sp[(-4)+-1]
  2346  004390  0EFB               	movlw	-5
  2347  004392  50E3               	movf	plusw1,w,c
  2348  004394  6ED9               	movwf	fsr2l,c
  2349  004396  6ADA               	clrf	fsr2h,c
  2350  004398  0E06               	movlw	6
  2351  00439A  6EDF               	movwf	indf2,c
  2352                           
  2353                           ;gemsecs.c: 189:   while ((uart1RxCount)) {
  2354  00439C  D002               	goto	l7820
  2355  00439E                     l7818:
  2356                           
  2357                           ;gemsecs.c: 190:    UART1_Read();
  2358  00439E  ECDE  F02B         	call	_UART1_Read	;wreg free
  2359  0043A2                     l7820:
  2360                           
  2361                           ;gemsecs.c: 189:   while ((uart1RxCount)) {
  2362  0043A2  5037               	movf	_uart1RxCount,w,c	;volatile
  2363  0043A4  B4D8               	btfsc	status,2,c
  2364  0043A6  D029               	goto	l7828
  2365  0043A8  D7FA               	goto	l7818
  2366  0043AA                     l7822:
  2367                           
  2368                           ;gemsecs.c: 198:   *t_link = LINK_STATE_IDLE;
  2369                           ;stkvar	_t_link @ sp[(-4)+-1]
  2370  0043AA  0EFB               	movlw	-5
  2371  0043AC  50E3               	movf	plusw1,w,c
  2372  0043AE  6ED9               	movwf	fsr2l,c
  2373  0043B0  6ADA               	clrf	fsr2h,c
  2374  0043B2  0E00               	movlw	0
  2375  0043B4                     L5:
  2376  0043B4  6EDF               	movwf	indf2,c
  2377                           
  2378                           ;gemsecs.c: 199:   break;
  2379  0043B6  D021               	goto	l7828
  2380  0043B8                     l7826:
  2381                           
  2382                           ;stkvar	_t_link @ sp[(-4)+-1]
  2383  0043B8  0EFB               	movlw	-5
  2384  0043BA  50E3               	movf	plusw1,w,c
  2385  0043BC  6ED9               	movwf	fsr2l,c
  2386  0043BE  6ADA               	clrf	fsr2h,c
  2387  0043C0  50DF               	movf	indf2,w,c
  2388  0043C2  6E47               	movwf	btemp+10,c
  2389  0043C4  6A48               	clrf	btemp+11,c
  2390                           
  2391                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2392                           ; Switch size 1, requested type "simple"
  2393                           ; Number of cases is 1, Range of values is 0 to 0
  2394                           ; switch strategies available:
  2395                           ; Name         Instructions Cycles
  2396                           ; simple_byte            4     3 (average)
  2397                           ;	Chosen strategy is simple_byte
  2398  0043C6  5048               	movf	btemp+11,w,c
  2399  0043C8  0A00               	xorlw	0	; case 0
  2400  0043CA  A4D8               	btfss	status,2,c
  2401  0043CC  D7EE               	goto	l7822
  2402                           
  2403                           ; Switch size 1, requested type "simple"
  2404                           ; Number of cases is 7, Range of values is 0 to 6
  2405                           ; switch strategies available:
  2406                           ; Name         Instructions Cycles
  2407                           ; simple_byte           22    12 (average)
  2408                           ;	Chosen strategy is simple_byte
  2409  0043CE  5047               	movf	btemp+10,w,c
  2410  0043D0  0A00               	xorlw	0	; case 0
  2411  0043D2  B4D8               	btfsc	status,2,c
  2412  0043D4  D713               	goto	l1541
  2413  0043D6  0A01               	xorlw	1	; case 1
  2414  0043D8  B4D8               	btfsc	status,2,c
  2415  0043DA  D72F               	goto	l7766
  2416  0043DC  0A03               	xorlw	3	; case 2
  2417  0043DE  B4D8               	btfsc	status,2,c
  2418  0043E0  D75D               	goto	l7782
  2419  0043E2  0A01               	xorlw	1	; case 3
  2420  0043E4  B4D8               	btfsc	status,2,c
  2421  0043E6  D7B2               	goto	l7802
  2422  0043E8  0A07               	xorlw	7	; case 4
  2423  0043EA  B4D8               	btfsc	status,2,c
  2424  0043EC  D006               	goto	l7828
  2425  0043EE  0A01               	xorlw	1	; case 5
  2426  0043F0  B4D8               	btfsc	status,2,c
  2427  0043F2  D7CE               	goto	l7816
  2428  0043F4  0A03               	xorlw	3	; case 6
  2429  0043F6  A4D8               	btfss	status,2,c
  2430  0043F8  D7D8               	goto	l7822
  2431  0043FA                     l7828:
  2432                           
  2433                           ;gemsecs.c: 202:  return *t_link;
  2434                           ;stkvar	_t_link @ sp[(-4)+-1]
  2435  0043FA  0EFB               	movlw	-5
  2436  0043FC  50E3               	movf	plusw1,w,c
  2437  0043FE  6ED9               	movwf	fsr2l,c
  2438  004400  6ADA               	clrf	fsr2h,c
  2439  004402  50DF               	movf	indf2,w,c
  2440  004404  6E3D               	movwf	btemp,c
  2441                           
  2442                           ; _t_protocol: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  2443  004406  0EFB               	movlw	251
  2444  004408  26E1               	addwf	fsr1l,f,c
  2445  00440A  0EFF               	movlw	255
  2446  00440C  22E2               	addwfc	fsr1h,f,c
  2447  00440E  0012               	return		;funcret
  2448  004410                     __end_of_t_protocol:
  2449                           	opt callstack 0
  2450                           
  2451 ;; *************** function _secs_II_message *****************
  2452 ;; Defined at:
  2453 ;;		line 244 in file "gemsecs.c"
  2454 ;; Parameters:    Size  Location     Type
  2455 ;;  stream          1  [STACK] unsigned char 
  2456 ;;  function        1  [STACK] unsigned char 
  2457 ;; Auto vars:     Size  Location     Type
  2458 ;;		None
  2459 ;; Return value:  Size  Location     Type
  2460 ;;                  3  [STACK] struct response_type
  2461 ;; Registers used:
  2462 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+10, btemp+11
  2463 ;; Tracked objects:
  2464 ;;		On entry : 3F/0
  2465 ;;		On exit  : 3F/0
  2466 ;;		Unchanged: 0/0
  2467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2471 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2472 ;;Total ram usage:        0 bytes
  2473 ;; Hardware stack levels used:    1
  2474 ;; Hardware stack levels required when called:    3
  2475 ;; This function calls:
  2476 ;;		Nothing
  2477 ;; This function is called by:
  2478 ;;		_t_protocol
  2479 ;; This function uses a reentrant model
  2480 ;;
  2481                           
  2482                           	psect	text2
  2483  0045C8                     __ptext2:
  2484                           	opt callstack 0
  2485  0045C8                     _secs_II_message:
  2486                           	opt callstack 26
  2487                           
  2488                           ;gemsecs.c: 244: response_type secs_II_message(uint8_t stream, uint8_t function);gemsecs
      +                          .c: 245: {;gemsecs.c: 246:  static response_type block;;gemsecs.c: 248:  V.abort = LINK_
      +                          ERROR_NONE;
  2489                           
  2490                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2491                           ;incstack = 0
  2492  0045C8  0100               	movlb	0	; () banked
  2493  0045CA  6BD4               	clrf	(_V+75)& (0+255),b	;volatile
  2494                           
  2495                           ;gemsecs.c: 250:  switch (stream) {
  2496  0045CC  D067               	goto	l6154
  2497  0045CE                     l6088:
  2498                           
  2499                           ; BSR set to: 0
  2500                           ;gemsecs.c: 254:    block.header = (uint8_t*) & H12[0];
  2501  0045CE  0E92               	movlw	low _H12
  2502  0045D0  6E01               	movwf	secs_II_message@block,c
  2503  0045D2  0E01               	movlw	high _H12
  2504  0045D4  6E02               	movwf	secs_II_message@block+1,c
  2505                           
  2506                           ; BSR set to: 0
  2507                           ;gemsecs.c: 255:    block.length = sizeof(header12);
  2508  0045D6  0E0F               	movlw	15
  2509  0045D8  D04F               	goto	L11
  2510  0045DA                     l6092:
  2511                           
  2512                           ; BSR set to: 0
  2513                           ;gemsecs.c: 258:    block.header = (uint8_t*) & H10[0];
  2514  0045DA  0E00               	movlw	low _H10
  2515  0045DC  6E01               	movwf	secs_II_message@block,c
  2516  0045DE  0E01               	movlw	high _H10
  2517  0045E0  6E02               	movwf	secs_II_message@block+1,c
  2518                           
  2519                           ; BSR set to: 0
  2520                           ;gemsecs.c: 259:    block.length = sizeof(header10);
  2521  0045E2  0E0D               	movlw	13
  2522  0045E4  D049               	goto	L11
  2523  0045E6                     l6096:
  2524                           
  2525                           ; BSR set to: 0
  2526                           ;gemsecs.c: 262:    block.header = (uint8_t*) & H14[0];
  2527  0045E6  0E71               	movlw	low _H14
  2528  0045E8  6E01               	movwf	secs_II_message@block,c
  2529  0045EA  0E01               	movlw	high _H14
  2530  0045EC  6E02               	movwf	secs_II_message@block+1,c
  2531                           
  2532                           ; BSR set to: 0
  2533                           ;gemsecs.c: 263:    block.length = sizeof(header14);
  2534  0045EE  0E11               	movlw	17
  2535  0045F0  D043               	goto	L11
  2536  0045F2                     l6100:
  2537                           
  2538                           ; BSR set to: 0
  2539                           ;gemsecs.c: 266:    block.header = (uint8_t*) & H18[0];
  2540  0045F2  0E5C               	movlw	low _H18
  2541  0045F4  6E01               	movwf	secs_II_message@block,c
  2542  0045F6  0E01               	movlw	high _H18
  2543  0045F8  6E02               	movwf	secs_II_message@block+1,c
  2544                           
  2545                           ; BSR set to: 0
  2546                           ;gemsecs.c: 267:    block.length = sizeof(header18);
  2547  0045FA  0E15               	movlw	21
  2548  0045FC  D03D               	goto	L11
  2549  0045FE                     l6104:
  2550                           
  2551                           ; BSR set to: 0
  2552                           ;gemsecs.c: 270:    block.header = (uint8_t*) & H10[2];
  2553  0045FE  0E1A               	movlw	low (_H10+26)
  2554  004600  6E01               	movwf	secs_II_message@block,c
  2555  004602  0E01               	movlw	high (_H10+26)
  2556  004604  6E02               	movwf	secs_II_message@block+1,c
  2557                           
  2558                           ; BSR set to: 0
  2559                           ;gemsecs.c: 271:    block.length = sizeof(header10);
  2560  004606  0E0D               	movlw	13
  2561  004608  6E03               	movwf	secs_II_message@block+2,c
  2562                           
  2563                           ; BSR set to: 0
  2564                           ;gemsecs.c: 272:    V.abort = LINK_ERROR_ABORT;
  2565  00460A  0E07               	movlw	7
  2566  00460C  6FD4               	movwf	(_V+75)& (0+255),b	;volatile
  2567                           
  2568                           ;gemsecs.c: 273:    break;
  2569  00460E  D059               	goto	l6156
  2570  004610                     l6112:
  2571                           
  2572                           ; BSR set to: 0
  2573                           ;stkvar	_function @ sp[(0)+-2]
  2574  004610  0EFE               	movlw	-2
  2575  004612  50E3               	movf	plusw1,w,c
  2576  004614  6E47               	movwf	btemp+10,c
  2577  004616  6A48               	clrf	btemp+11,c
  2578                           
  2579                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2580                           ; Switch size 1, requested type "simple"
  2581                           ; Number of cases is 1, Range of values is 0 to 0
  2582                           ; switch strategies available:
  2583                           ; Name         Instructions Cycles
  2584                           ; simple_byte            4     3 (average)
  2585                           ;	Chosen strategy is simple_byte
  2586  004618  5048               	movf	btemp+11,w,c
  2587  00461A  0A00               	xorlw	0	; case 0
  2588  00461C  A4D8               	btfss	status,2,c
  2589  00461E  D7EF               	goto	l6104
  2590                           
  2591                           ; BSR set to: 0
  2592                           ; Switch size 1, requested type "simple"
  2593                           ; Number of cases is 4, Range of values is 1 to 4
  2594                           ; switch strategies available:
  2595                           ; Name         Instructions Cycles
  2596                           ; simple_byte           13     7 (average)
  2597                           ;	Chosen strategy is simple_byte
  2598  004620  5047               	movf	btemp+10,w,c
  2599  004622  0A01               	xorlw	1	; case 1
  2600  004624  B4D8               	btfsc	status,2,c
  2601  004626  D7D3               	goto	l6088
  2602  004628  0A03               	xorlw	3	; case 2
  2603  00462A  B4D8               	btfsc	status,2,c
  2604  00462C  D7D6               	goto	l6092
  2605  00462E  0A01               	xorlw	1	; case 3
  2606  004630  B4D8               	btfsc	status,2,c
  2607  004632  D7D9               	goto	l6096
  2608  004634  0A07               	xorlw	7	; case 4
  2609  004636  B4D8               	btfsc	status,2,c
  2610  004638  D7DC               	goto	l6100
  2611  00463A  D7E1               	goto	l6104
  2612  00463C                     l6114:
  2613                           
  2614                           ; BSR set to: 0
  2615                           ;gemsecs.c: 279:    block.header = (uint8_t*) & H24[0];
  2616  00463C  0E41               	movlw	low _H24
  2617  00463E  6E01               	movwf	secs_II_message@block,c
  2618  004640  0E01               	movlw	high _H24
  2619  004642  6E02               	movwf	secs_II_message@block+1,c
  2620                           
  2621                           ; BSR set to: 0
  2622                           ;gemsecs.c: 280:    block.length = sizeof(header24);
  2623  004644  0E1B               	movlw	27
  2624  004646  D018               	goto	L11
  2625  004648                     l6126:
  2626                           
  2627                           ; BSR set to: 0
  2628                           ;stkvar	_function @ sp[(0)+-2]
  2629  004648  0EFE               	movlw	-2
  2630  00464A  50E3               	movf	plusw1,w,c
  2631  00464C  6E47               	movwf	btemp+10,c
  2632  00464E  6A48               	clrf	btemp+11,c
  2633                           
  2634                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2635                           ; Switch size 1, requested type "simple"
  2636                           ; Number of cases is 1, Range of values is 0 to 0
  2637                           ; switch strategies available:
  2638                           ; Name         Instructions Cycles
  2639                           ; simple_byte            4     3 (average)
  2640                           ;	Chosen strategy is simple_byte
  2641  004650  5048               	movf	btemp+11,w,c
  2642  004652  0A00               	xorlw	0	; case 0
  2643  004654  A4D8               	btfss	status,2,c
  2644  004656  D7D3               	goto	l6104
  2645                           
  2646                           ; BSR set to: 0
  2647                           ; Switch size 1, requested type "simple"
  2648                           ; Number of cases is 1, Range of values is 17 to 17
  2649                           ; switch strategies available:
  2650                           ; Name         Instructions Cycles
  2651                           ; simple_byte            4     3 (average)
  2652                           ;	Chosen strategy is simple_byte
  2653  004658  5047               	movf	btemp+10,w,c
  2654  00465A  0A11               	xorlw	17	; case 17
  2655  00465C  B4D8               	btfsc	status,2,c
  2656  00465E  D7EE               	goto	l6114
  2657  004660  D7CE               	goto	l6104
  2658  004662                     l6128:
  2659                           
  2660                           ; BSR set to: 0
  2661                           ;gemsecs.c: 292:    block.header = (uint8_t*) & H13[0];
  2662  004662  0E82               	movlw	low _H13
  2663  004664  6E01               	movwf	secs_II_message@block,c
  2664  004666  0E01               	movlw	high _H13
  2665  004668  6E02               	movwf	secs_II_message@block+1,c
  2666                           
  2667                           ; BSR set to: 0
  2668                           ;gemsecs.c: 293:    block.length = sizeof(header13);
  2669  00466A  0E10               	movlw	16
  2670  00466C  D005               	goto	L11
  2671  00466E                     l6132:
  2672                           
  2673                           ; BSR set to: 0
  2674                           ;gemsecs.c: 296:    block.header = (uint8_t*) & H53[0];
  2675  00466E  0E86               	movlw	low _H53
  2676  004670  6E01               	movwf	secs_II_message@block,c
  2677  004672  0E03               	movlw	high _H53
  2678  004674  6E02               	movwf	secs_II_message@block+1,c
  2679                           
  2680                           ; BSR set to: 0
  2681                           ;gemsecs.c: 297:    block.length = sizeof(header53);
  2682  004676  0E38               	movlw	56
  2683  004678                     L11:
  2684  004678  6E03               	movwf	secs_II_message@block+2,c
  2685                           
  2686                           ;gemsecs.c: 298:    break;
  2687  00467A  D023               	goto	l6156
  2688  00467C                     l6144:
  2689                           
  2690                           ; BSR set to: 0
  2691                           ;stkvar	_function @ sp[(0)+-2]
  2692  00467C  0EFE               	movlw	-2
  2693  00467E  50E3               	movf	plusw1,w,c
  2694  004680  6E47               	movwf	btemp+10,c
  2695  004682  6A48               	clrf	btemp+11,c
  2696                           
  2697                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2698                           ; Switch size 1, requested type "simple"
  2699                           ; Number of cases is 1, Range of values is 0 to 0
  2700                           ; switch strategies available:
  2701                           ; Name         Instructions Cycles
  2702                           ; simple_byte            4     3 (average)
  2703                           ;	Chosen strategy is simple_byte
  2704  004684  5048               	movf	btemp+11,w,c
  2705  004686  0A00               	xorlw	0	; case 0
  2706  004688  A4D8               	btfss	status,2,c
  2707  00468A  D7B9               	goto	l6104
  2708                           
  2709                           ; BSR set to: 0
  2710                           ; Switch size 1, requested type "simple"
  2711                           ; Number of cases is 2, Range of values is 11 to 12
  2712                           ; switch strategies available:
  2713                           ; Name         Instructions Cycles
  2714                           ; simple_byte            7     4 (average)
  2715                           ;	Chosen strategy is simple_byte
  2716  00468C  5047               	movf	btemp+10,w,c
  2717  00468E  0A0B               	xorlw	11	; case 11
  2718  004690  B4D8               	btfsc	status,2,c
  2719  004692  D7E7               	goto	l6128
  2720  004694  0A07               	xorlw	7	; case 12
  2721  004696  B4D8               	btfsc	status,2,c
  2722  004698  D7EA               	goto	l6132
  2723  00469A  D7B1               	goto	l6104
  2724  00469C                     l6154:
  2725                           
  2726                           ; BSR set to: 0
  2727                           ;stkvar	_stream @ sp[(0)+-1]
  2728  00469C  0EFF               	movlw	-1
  2729  00469E  50E3               	movf	plusw1,w,c
  2730  0046A0  6E47               	movwf	btemp+10,c
  2731  0046A2  6A48               	clrf	btemp+11,c
  2732                           
  2733                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2734                           ; Switch size 1, requested type "simple"
  2735                           ; Number of cases is 1, Range of values is 0 to 0
  2736                           ; switch strategies available:
  2737                           ; Name         Instructions Cycles
  2738                           ; simple_byte            4     3 (average)
  2739                           ;	Chosen strategy is simple_byte
  2740  0046A4  5048               	movf	btemp+11,w,c
  2741  0046A6  0A00               	xorlw	0	; case 0
  2742  0046A8  A4D8               	btfss	status,2,c
  2743  0046AA  D7A9               	goto	l6104
  2744                           
  2745                           ; BSR set to: 0
  2746                           ; Switch size 1, requested type "simple"
  2747                           ; Number of cases is 3, Range of values is 1 to 6
  2748                           ; switch strategies available:
  2749                           ; Name         Instructions Cycles
  2750                           ; simple_byte           10     6 (average)
  2751                           ;	Chosen strategy is simple_byte
  2752  0046AC  5047               	movf	btemp+10,w,c
  2753  0046AE  0A01               	xorlw	1	; case 1
  2754  0046B0  B4D8               	btfsc	status,2,c
  2755  0046B2  D7AE               	goto	l6112
  2756  0046B4  0A03               	xorlw	3	; case 2
  2757  0046B6  B4D8               	btfsc	status,2,c
  2758  0046B8  D7C7               	goto	l6126
  2759  0046BA  0A04               	xorlw	4	; case 6
  2760  0046BC  B4D8               	btfsc	status,2,c
  2761  0046BE  D7DE               	goto	l6144
  2762  0046C0  D79E               	goto	l6104
  2763  0046C2                     l6156:
  2764                           
  2765                           ; BSR set to: 0
  2766                           ;gemsecs.c: 313:  return(block);
  2767  0046C2  0060  F004  F03D   	movff	secs_II_message@block,btemp
  2768  0046C8  0060  F008  F03E   	movff	secs_II_message@block+1,btemp+1
  2769  0046CE  0060  F00C  F03F   	movff	secs_II_message@block+2,btemp+2
  2770                           
  2771                           ; BSR set to: 0
  2772                           ; _secs_II_message: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  2773  0046D4  52E5               	movf	postdec1,f,c
  2774  0046D6  52E5               	movf	postdec1,f,c
  2775  0046D8  0012               	return		;funcret
  2776  0046DA                     __end_of_secs_II_message:
  2777                           	opt callstack 0
  2778                           
  2779 ;; *************** function _sprintf *****************
  2780 ;; Defined at:
  2781 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_sprintf.c"
  2782 ;; Parameters:    Size  Location     Type
  2783 ;;  s               1  [STACK] PTR unsigned char 
  2784 ;;		 -> V(80), 
  2785 ;;  fmt             1  [STACK] PTR const unsigned char 
  2786 ;;		 -> STR_9(21), STR_8(17), STR_7(17), STR_6(17), 
  2787 ;;		 -> STR_5(23), STR_4(6), STR_3(14), STR_2(12), 
  2788 ;;		 -> STR_1(61), 
  2789 ;; Auto vars:     Size  Location     Type
  2790 ;;  f               5  [STACK] struct _IO_FILE
  2791 ;;  ap              2  [STACK] PTR void [1]
  2792 ;;		 -> ?_printf(2), ?_sprintf(2), 
  2793 ;;  ret             2    0        int 
  2794 ;; Return value:  Size  Location     Type
  2795 ;;                  2  [STACK] int 
  2796 ;; Registers used:
  2797 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  2798 ;; Tracked objects:
  2799 ;;		On entry : 0/1
  2800 ;;		On exit  : 0/0
  2801 ;;		Unchanged: 0/0
  2802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2807 ;;Total ram usage:        0 bytes
  2808 ;; Hardware stack levels used:    1
  2809 ;; Hardware stack levels required when called:   11
  2810 ;; This function calls:
  2811 ;;		_vfprintf
  2812 ;; This function is called by:
  2813 ;;		_main
  2814 ;; This function uses a reentrant model
  2815 ;;
  2816                           
  2817                           	psect	text3
  2818  004AAA                     __ptext3:
  2819                           	opt callstack 0
  2820  004AAA                     _sprintf:
  2821                           	opt callstack 0
  2822                           
  2823                           ; BSR set to: 0
  2824                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 26, argsize = 2 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  2825  004AAA  0E07               	movlw	7
  2826  004AAC  26E1               	addwf	fsr1l,f,c
  2827  004AAE  0E00               	movlw	0
  2828  004AB0  22E2               	addwfc	fsr1h,f,c
  2829                           
  2830                           ;stkvar	?_sprintf @ sp[(-7)+-3]
  2831                           
  2832                           ;incstack = 0
  2833  004AB2  0EF6               	movlw	246
  2834  004AB4  24E1               	addwf	fsr1l,w,c
  2835  004AB6  6E47               	movwf	btemp+10,c
  2836  004AB8  0EFF               	movlw	255
  2837  004ABA  20E2               	addwfc	fsr1h,w,c
  2838  004ABC  6E48               	movwf	btemp+11,c
  2839                           
  2840                           ;stkvar	_ap @ sp[(-7)+5]
  2841  004ABE  0EFF               	movlw	-1
  2842  004AC0  0060  F123  FFE3   	movff	btemp+11,plusw1
  2843  004AC6  0EFE               	movlw	-2
  2844  004AC8  0060  F11F  FFE3   	movff	btemp+10,plusw1
  2845                           
  2846                           ;stkvar	_s @ sp[(-7)+-2]
  2847  004ACE  0EF7               	movlw	-9
  2848  004AD0  006F FF8C  F048    	movff	plusw1,btemp+11
  2849                           
  2850                           ;stkvar	_f @ sp[(-7)+0]
  2851  004AD6  0EF9               	movlw	-7
  2852  004AD8  0060  F123  FFE3   	movff	btemp+11,plusw1
  2853                           
  2854                           ;stkvar	_f @ sp[(-7)+0]
  2855  004ADE  0EFA               	movlw	250
  2856  004AE0  24E1               	addwf	fsr1l,w,c
  2857  004AE2  6ED9               	movwf	fsr2l,c
  2858  004AE4  0EFF               	movlw	255
  2859  004AE6  20E2               	addwfc	fsr1h,w,c
  2860  004AE8  6EDA               	movwf	fsr2h,c
  2861  004AEA  0E00               	movlw	0
  2862  004AEC  6EDE               	movwf	postinc2,c
  2863  004AEE  0E00               	movlw	0
  2864  004AF0  6EDD               	movwf	postdec2,c
  2865                           
  2866                           ;stkvar	_f @ sp[(-7)+0]
  2867  004AF2  0EFC               	movlw	252
  2868  004AF4  24E1               	addwf	fsr1l,w,c
  2869  004AF6  6ED9               	movwf	fsr2l,c
  2870  004AF8  0EFF               	movlw	255
  2871  004AFA  20E2               	addwfc	fsr1h,w,c
  2872  004AFC  6EDA               	movwf	fsr2h,c
  2873  004AFE  0E00               	movlw	0
  2874  004B00  6EDE               	movwf	postinc2,c
  2875  004B02  0E00               	movlw	0
  2876  004B04  6EDD               	movwf	postdec2,c
  2877                           
  2878                           ;stkvar	_ap @ sp[(-7)+5]
  2879  004B06  0EFE               	movlw	254
  2880  004B08  24E1               	addwf	fsr1l,w,c
  2881  004B0A  6E3D               	movwf	btemp,c
  2882  004B0C  0EFF               	movlw	255
  2883  004B0E  20E2               	addwfc	fsr1h,w,c
  2884  004B10  6E3E               	movwf	btemp+1,c
  2885  004B12  0060  F0F7  FFE6   	movff	btemp,postinc1
  2886  004B18  0060  F0FB  FFE6   	movff	btemp+1,postinc1
  2887                           
  2888                           ;stkvar	_fmt @ sp[(-9)+-3]
  2889  004B1E  0EF4               	movlw	-12
  2890  004B20  50E3               	movf	plusw1,w,c
  2891  004B22  6EE6               	movwf	postinc1,c
  2892                           
  2893                           ;stkvar	_f @ sp[(-10)+0]
  2894  004B24  0EF6               	movlw	246
  2895  004B26  24E1               	addwf	fsr1l,w,c
  2896  004B28  6E3D               	movwf	btemp,c
  2897  004B2A  0EFF               	movlw	255
  2898  004B2C  20E2               	addwfc	fsr1h,w,c
  2899  004B2E  6E3E               	movwf	btemp+1,c
  2900  004B30  0060  F0F7  FFE6   	movff	btemp,postinc1
  2901  004B36  0060  F0FB  FFE6   	movff	btemp+1,postinc1
  2902  004B3C  EC5F  F027         	call	_vfprintf	;wreg free
  2903                           
  2904                           ;stkvar	_f @ sp[(-7)+0]
  2905  004B40  0EFA               	movlw	250
  2906  004B42  24E1               	addwf	fsr1l,w,c
  2907  004B44  6ED9               	movwf	fsr2l,c
  2908  004B46  0EFF               	movlw	255
  2909  004B48  20E2               	addwfc	fsr1h,w,c
  2910  004B4A  6EDA               	movwf	fsr2h,c
  2911  004B4C  50DF               	movf	indf2,w,c
  2912  004B4E  6E48               	movwf	btemp+11,c
  2913                           
  2914                           ;stkvar	_s @ sp[(-7)+-2]
  2915  004B50  0EF7               	movlw	-9
  2916  004B52  50E3               	movf	plusw1,w,c
  2917  004B54  2448               	addwf	btemp+11,w,c
  2918  004B56  6ED9               	movwf	fsr2l,c
  2919  004B58  6ADA               	clrf	fsr2h,c
  2920  004B5A  0E00               	movlw	0
  2921  004B5C  6EDF               	movwf	indf2,c
  2922                           
  2923                           ; _sprintf: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 26, args
      +                          ize = 2, vargsize = 0
  2924  004B5E  0EF9               	movlw	249
  2925  004B60  26E1               	addwf	fsr1l,f,c
  2926  004B62  0EFF               	movlw	255
  2927  004B64  22E2               	addwfc	fsr1h,f,c
  2928  004B66  52E5               	movf	postdec1,f,c
  2929  004B68  50E7               	movf	indf1,w,c
  2930  004B6A  5EE1               	subwf	fsr1l,f,c
  2931  004B6C  0E00               	movlw	0
  2932  004B6E  5AE2               	subwfb	fsr1h,f,c
  2933  004B70  0012               	return		;funcret
  2934  004B72                     __end_of_sprintf:
  2935                           	opt callstack 0
  2936                           
  2937 ;; *************** function _r_protocol *****************
  2938 ;; Defined at:
  2939 ;;		line 40 in file "gemsecs.c"
  2940 ;; Parameters:    Size  Location     Type
  2941 ;;  r_link          1  [STACK] PTR enum E16164
  2942 ;;		 -> V(80), 
  2943 ;; Auto vars:     Size  Location     Type
  2944 ;;  rxData          1  [STACK] unsigned char 
  2945 ;; Return value:  Size  Location     Type
  2946 ;;                  1  [STACK] enum E16902
  2947 ;; Registers used:
  2948 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  2949 ;; Tracked objects:
  2950 ;;		On entry : 0/0
  2951 ;;		On exit  : 0/0
  2952 ;;		Unchanged: 0/0
  2953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2957 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2958 ;;Total ram usage:        0 bytes
  2959 ;; Hardware stack levels used:    1
  2960 ;; Hardware stack levels required when called:    5
  2961 ;; This function calls:
  2962 ;;		_StartTimer
  2963 ;;		_TimerDone
  2964 ;;		_UART1_Read
  2965 ;;		_UART1_Write
  2966 ;;		_UART1_is_rx_ready
  2967 ;;		_WaitMs
  2968 ;;		_run_checksum
  2969 ;;		_secs_send
  2970 ;; This function is called by:
  2971 ;;		_main
  2972 ;; This function uses a reentrant model
  2973 ;;
  2974                           
  2975                           	psect	text4
  2976  003B06                     __ptext4:
  2977                           	opt callstack 0
  2978  003B06                     _r_protocol:
  2979                           	opt callstack 0
  2980                           
  2981                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2982  003B06  52E6               	movf	postinc1,f,c
  2983                           
  2984                           ;gemsecs.c: 40: LINK_STATES r_protocol(LINK_STATES *r_link);gemsecs.c: 41: {;gemsecs.c: 
      +                          42:  uint8_t rxData;;gemsecs.c: 43:  static uint8_t rxData_l = 0;;gemsecs.c: 45:  switch
      +                           (*r_link) {
  2985                           
  2986                           ;incstack = 0
  2987  003B08  D113               	goto	l7740
  2988  003B0A                     l7656:
  2989                           
  2990                           ;gemsecs.c: 47:   if (UART1_is_rx_ready()) {
  2991  003B0A  ECDB  F02F         	call	_UART1_is_rx_ready	;wreg free
  2992  003B0E  503D               	movf	btemp,w,c
  2993  003B10  B4D8               	btfsc	status,2,c
  2994  003B12  D12F               	goto	l7742
  2995                           
  2996                           ;gemsecs.c: 48:    rxData = UART1_Read();
  2997  003B14  ECDE  F02B         	call	_UART1_Read	;wreg free
  2998                           
  2999                           ;stkvar	_rxData @ sp[(-1)+0]
  3000  003B18  0EFF               	movlw	-1
  3001  003B1A  0060  F0F7  FFE3   	movff	btemp,plusw1
  3002                           
  3003                           ; BSR set to: 57
  3004                           ;gemsecs.c: 49:    if (rxData == 0x05) {
  3005                           ;stkvar	_rxData @ sp[(-1)+0]
  3006  003B20  0EFF               	movlw	-1
  3007  003B22  006F FF8C  F03D    	movff	plusw1,btemp
  3008  003B28  0E05               	movlw	5
  3009  003B2A  183D               	xorwf	btemp,w,c
  3010  003B2C  A4D8               	btfss	status,2,c
  3011  003B2E  D121               	goto	l7742
  3012                           
  3013                           ; BSR set to: 57
  3014                           ;gemsecs.c: 50:     V.error = LINK_ERROR_NONE;
  3015  003B30  0100               	movlb	0	; () banked
  3016  003B32  6BD3               	clrf	(_V+74)& (0+255),b	;volatile
  3017                           
  3018                           ; BSR set to: 0
  3019                           ;gemsecs.c: 51:     *r_link = LINK_STATE_ENQ;
  3020                           ;stkvar	_r_link @ sp[(-1)+-1]
  3021  003B34  0EFE               	movlw	-2
  3022  003B36  50E3               	movf	plusw1,w,c
  3023  003B38  6ED9               	movwf	fsr2l,c
  3024  003B3A  6ADA               	clrf	fsr2h,c
  3025  003B3C  0E01               	movlw	1
  3026  003B3E  D0F6               	goto	L16
  3027  003B40                     l1515:
  3028                           
  3029                           ;gemsecs.c: 56:   rxData_l = 0;
  3030  003B40  6A30               	clrf	r_protocol@rxData_l,c
  3031                           
  3032                           ;gemsecs.c: 57:   UART1_Write(0x04);
  3033  003B42  0E04               	movlw	4
  3034  003B44  6EE6               	movwf	postinc1,c
  3035  003B46  ECBF  F02B         	call	_UART1_Write	;wreg free
  3036                           
  3037                           ; BSR set to: 57
  3038                           ;gemsecs.c: 58:   StartTimer(TMR_T2, 2000);
  3039  003B4A  0ED0               	movlw	208
  3040  003B4C  6EE6               	movwf	postinc1,c
  3041  003B4E  0E07               	movlw	7
  3042  003B50  6EE6               	movwf	postinc1,c
  3043  003B52  0E02               	movlw	2
  3044  003B54  6EE6               	movwf	postinc1,c
  3045  003B56  EC1D  F02C         	call	_StartTimer	;wreg free
  3046                           
  3047                           ;gemsecs.c: 59:   *r_link = LINK_STATE_EOT;
  3048                           ;stkvar	_r_link @ sp[(-1)+-1]
  3049  003B5A  0EFE               	movlw	-2
  3050  003B5C  50E3               	movf	plusw1,w,c
  3051  003B5E  6ED9               	movwf	fsr2l,c
  3052  003B60  6ADA               	clrf	fsr2h,c
  3053  003B62  0E02               	movlw	2
  3054  003B64  6EDF               	movwf	indf2,c
  3055                           
  3056                           ;gemsecs.c: 61:   WaitMs(5);
  3057  003B66  0E05               	movlw	5
  3058  003B68  6EE6               	movwf	postinc1,c
  3059  003B6A  0E00               	movlw	0
  3060  003B6C  6EE6               	movwf	postinc1,c
  3061  003B6E  ECDA  F02C         	call	_WaitMs	;wreg free
  3062                           
  3063                           ;gemsecs.c: 62:   secs_send((uint8_t*) & H10[3], sizeof(header10), 1);
  3064  003B72  0E01               	movlw	1
  3065  003B74  6EE6               	movwf	postinc1,c
  3066  003B76  0E0D               	movlw	13
  3067  003B78  6EE6               	movwf	postinc1,c
  3068  003B7A  0E27               	movlw	low (_H10+39)
  3069  003B7C  6EE6               	movwf	postinc1,c
  3070  003B7E  0E01               	movlw	high (_H10+39)
  3071  003B80  6EE6               	movwf	postinc1,c
  3072  003B82  EC08  F022         	call	_secs_send	;wreg free
  3073                           
  3074                           ;gemsecs.c: 64:   break;
  3075  003B86  D0F5               	goto	l7742
  3076  003B88                     l7676:
  3077                           
  3078                           ;gemsecs.c: 66:   if (TimerDone(TMR_T2)) {
  3079  003B88  0E02               	movlw	2
  3080  003B8A  6EE6               	movwf	postinc1,c
  3081  003B8C  EC81  F02E         	call	_TimerDone	;wreg free
  3082  003B90  503D               	movf	btemp,w,c
  3083  003B92  B4D8               	btfsc	status,2,c
  3084  003B94  D009               	goto	l7682
  3085                           
  3086                           ;gemsecs.c: 67:    V.error = LINK_ERROR_T2;
  3087  003B96  0E02               	movlw	2
  3088  003B98  0100               	movlb	0	; () banked
  3089  003B9A  6FD3               	movwf	(_V+74)& (0+255),b	;volatile
  3090                           
  3091                           ; BSR set to: 0
  3092                           ;gemsecs.c: 68:    *r_link = LINK_STATE_NAK;
  3093                           ;stkvar	_r_link @ sp[(-1)+-1]
  3094  003B9C  0EFE               	movlw	-2
  3095  003B9E  50E3               	movf	plusw1,w,c
  3096  003BA0  6ED9               	movwf	fsr2l,c
  3097  003BA2  6ADA               	clrf	fsr2h,c
  3098  003BA4  0E05               	movlw	5
  3099  003BA6  D0C2               	goto	L16
  3100  003BA8                     l7682:
  3101                           
  3102                           ;gemsecs.c: 70:    if (UART1_is_rx_ready()) {
  3103  003BA8  ECDB  F02F         	call	_UART1_is_rx_ready	;wreg free
  3104  003BAC  503D               	movf	btemp,w,c
  3105  003BAE  B4D8               	btfsc	status,2,c
  3106  003BB0  D0E0               	goto	l7742
  3107                           
  3108                           ;gemsecs.c: 71:     rxData = UART1_Read();
  3109  003BB2  ECDE  F02B         	call	_UART1_Read	;wreg free
  3110                           
  3111                           ;stkvar	_rxData @ sp[(-1)+0]
  3112  003BB6  0EFF               	movlw	-1
  3113  003BB8  0060  F0F7  FFE3   	movff	btemp,plusw1
  3114                           
  3115                           ; BSR set to: 57
  3116                           ;gemsecs.c: 72:     if (rxData_l == 0) {
  3117  003BBE  5030               	movf	r_protocol@rxData_l,w,c
  3118  003BC0  A4D8               	btfss	status,2,c
  3119  003BC2  D00C               	goto	l7694
  3120                           
  3121                           ; BSR set to: 57
  3122                           ;gemsecs.c: 73:      r_block.length = rxData;
  3123                           ;stkvar	_rxData @ sp[(-1)+0]
  3124  003BC4  0EFF               	movlw	-1
  3125  003BC6  006F FF8C  F06C    	movff	plusw1,_r_block+12
  3126                           
  3127                           ; BSR set to: 57
  3128                           ;gemsecs.c: 74:      run_checksum(0, 1);
  3129  003BCC  0E01               	movlw	1
  3130  003BCE  6EE6               	movwf	postinc1,c
  3131  003BD0  0E00               	movlw	0
  3132  003BD2  6EE6               	movwf	postinc1,c
  3133  003BD4  EC05  F02D         	call	_run_checksum	;wreg free
  3134                           
  3135                           ;gemsecs.c: 75:      rxData_l++;
  3136  003BD8  2A30               	incf	r_protocol@rxData_l,f,c
  3137                           
  3138                           ;gemsecs.c: 76:     } else {
  3139  003BDA  D0CB               	goto	l7742
  3140  003BDC                     l7694:
  3141                           
  3142                           ; BSR set to: 57
  3143                           ;gemsecs.c: 80:      if (rxData_l <= 10)
  3144  003BDC  0E0B               	movlw	11
  3145  003BDE  6030               	cpfslt	r_protocol@rxData_l,c
  3146  003BE0  D018               	goto	l7698
  3147                           
  3148                           ; BSR set to: 57
  3149                           ;gemsecs.c: 81:       H10[1].block.b[r_block.length - rxData_l] = rxData;
  3150                           ;stkvar	_rxData @ sp[(-1)+0]
  3151  003BE2  0E00               	movlw	low _H10
  3152  003BE4  6E47               	movwf	btemp+10,c
  3153  003BE6  0E01               	movlw	high _H10
  3154  003BE8  6E48               	movwf	btemp+11,c
  3155  003BEA  0E0F               	movlw	15
  3156  003BEC  2647               	addwf	btemp+10,f,c
  3157  003BEE  0E00               	movlw	0
  3158  003BF0  2248               	addwfc	btemp+11,f,c
  3159  003BF2  0100               	movlb	0	; () banked
  3160  003BF4  516C               	movf	(_r_block+12)& (0+255),w,b
  3161  003BF6  2647               	addwf	btemp+10,f,c
  3162  003BF8  0E00               	movlw	0
  3163  003BFA  2248               	addwfc	btemp+11,f,c
  3164  003BFC  5030               	movf	r_protocol@rxData_l,w,c
  3165  003BFE  5C47               	subwf	btemp+10,w,c
  3166  003C00  6ED9               	movwf	fsr2l,c
  3167  003C02  5048               	movf	btemp+11,w,c
  3168  003C04  A0D8               	btfss	status,0,c
  3169  003C06  0448               	decf	btemp+11,w,c
  3170  003C08  6EDA               	movwf	fsr2h,c
  3171  003C0A  0EFF               	movlw	-1
  3172  003C0C  006F FF8F FFDF     	movff	plusw1,indf2
  3173  003C12                     l7698:
  3174                           
  3175                           ;gemsecs.c: 82:      if (rxData_l <= r_block.length)
  3176  003C12  5030               	movf	r_protocol@rxData_l,w,c
  3177  003C14  0100               	movlb	0	; () banked
  3178  003C16  5D6C               	subwf	(_r_block+12)& (0+255),w,b
  3179  003C18  A0D8               	btfss	status,0,c
  3180  003C1A  D00D               	goto	l7702
  3181                           
  3182                           ; BSR set to: 0
  3183                           ;gemsecs.c: 83:       V.r_checksum = run_checksum(rxData, 0);
  3184  003C1C  0E00               	movlw	0
  3185  003C1E  6EE6               	movwf	postinc1,c
  3186                           
  3187                           ;stkvar	_rxData @ sp[(-2)+0]
  3188  003C20  0EFE               	movlw	-2
  3189  003C22  50E3               	movf	plusw1,w,c
  3190  003C24  6EE6               	movwf	postinc1,c
  3191  003C26  EC05  F02D         	call	_run_checksum	;wreg free
  3192  003C2A  0060  F0F4  F0D5   	movff	btemp,_V+76	;volatile
  3193  003C30  0060  F0F8  F0D6   	movff	btemp+1,_V+77	;volatile
  3194  003C36                     l7702:
  3195                           
  3196                           ;gemsecs.c: 85:      if (rxData_l == r_block.length + 1)
  3197  003C36  5030               	movf	r_protocol@rxData_l,w,c
  3198  003C38  6E47               	movwf	btemp+10,c
  3199  003C3A  6A48               	clrf	btemp+11,c
  3200  003C3C  0100               	movlb	0	; () banked
  3201  003C3E  516C               	movf	(_r_block+12)& (0+255),w,b
  3202  003C40  6E45               	movwf	btemp+8,c
  3203  003C42  6A46               	clrf	btemp+9,c
  3204  003C44  0E01               	movlw	1
  3205  003C46  2645               	addwf	btemp+8,f,c
  3206  003C48  0E00               	movlw	0
  3207  003C4A  2246               	addwfc	btemp+9,f,c
  3208  003C4C  5047               	movf	btemp+10,w,c
  3209  003C4E  1845               	xorwf	btemp+8,w,c
  3210  003C50  E109               	bnz	l7706
  3211  003C52  5048               	movf	btemp+11,w,c
  3212  003C54  1846               	xorwf	btemp+9,w,c
  3213  003C56  A4D8               	btfss	status,2,c
  3214  003C58  D005               	goto	l7706
  3215                           
  3216                           ; BSR set to: 0
  3217                           ;gemsecs.c: 86:       H10[1].checksum = (uint16_t) rxData << 8;
  3218                           ;stkvar	_rxData @ sp[(-1)+0]
  3219  003C5A  0EFF               	movlw	-1
  3220  003C5C  50E3               	movf	plusw1,w,c
  3221  003C5E  0101               	movlb	1	; () banked
  3222  003C60  6F0E               	movwf	(_H10+14)& (0+255),b
  3223  003C62  6B0D               	clrf	(_H10+13)& (0+255),b
  3224  003C64                     l7706:
  3225                           
  3226                           ;gemsecs.c: 87:      if (rxData_l == r_block.length + 2)
  3227  003C64  5030               	movf	r_protocol@rxData_l,w,c
  3228  003C66  6E47               	movwf	btemp+10,c
  3229  003C68  6A48               	clrf	btemp+11,c
  3230  003C6A  0100               	movlb	0	; () banked
  3231  003C6C  516C               	movf	(_r_block+12)& (0+255),w,b
  3232  003C6E  6E45               	movwf	btemp+8,c
  3233  003C70  6A46               	clrf	btemp+9,c
  3234  003C72  0E02               	movlw	2
  3235  003C74  2645               	addwf	btemp+8,f,c
  3236  003C76  0E00               	movlw	0
  3237  003C78  2246               	addwfc	btemp+9,f,c
  3238  003C7A  5047               	movf	btemp+10,w,c
  3239  003C7C  1845               	xorwf	btemp+8,w,c
  3240  003C7E  E10A               	bnz	l7710
  3241  003C80  5048               	movf	btemp+11,w,c
  3242  003C82  1846               	xorwf	btemp+9,w,c
  3243  003C84  A4D8               	btfss	status,2,c
  3244  003C86  D006               	goto	l7710
  3245                           
  3246                           ; BSR set to: 0
  3247                           ;gemsecs.c: 88:       H10[1].checksum += rxData;
  3248                           ;stkvar	_rxData @ sp[(-1)+0]
  3249  003C88  0EFF               	movlw	-1
  3250  003C8A  50E3               	movf	plusw1,w,c
  3251  003C8C  0101               	movlb	1	; () banked
  3252  003C8E  270D               	addwf	(_H10+13)& (0+255),f,b
  3253  003C90  0E00               	movlw	0
  3254  003C92  230E               	addwfc	(_H10+14)& (0+255),f,b
  3255  003C94                     l7710:
  3256                           
  3257                           ;gemsecs.c: 90:      rxData_l++;
  3258  003C94  2A30               	incf	r_protocol@rxData_l,f,c
  3259                           
  3260                           ;gemsecs.c: 91:      if (rxData_l > (r_block.length + 2)) {
  3261  003C96  5030               	movf	r_protocol@rxData_l,w,c
  3262  003C98  6E47               	movwf	btemp+10,c
  3263  003C9A  6A48               	clrf	btemp+11,c
  3264  003C9C  0100               	movlb	0	; () banked
  3265  003C9E  516C               	movf	(_r_block+12)& (0+255),w,b
  3266  003CA0  6E45               	movwf	btemp+8,c
  3267  003CA2  6A46               	clrf	btemp+9,c
  3268  003CA4  0E02               	movlw	2
  3269  003CA6  2645               	addwf	btemp+8,f,c
  3270  003CA8  0E00               	movlw	0
  3271  003CAA  2246               	addwfc	btemp+9,f,c
  3272  003CAC  5047               	movf	btemp+10,w,c
  3273  003CAE  5C45               	subwf	btemp+8,w,c
  3274  003CB0  5046               	movf	btemp+9,w,c
  3275  003CB2  0A80               	xorlw	128
  3276  003CB4  6E3D               	movwf	btemp,c
  3277  003CB6  5048               	movf	btemp+11,w,c
  3278  003CB8  0A80               	xorlw	128
  3279  003CBA  583D               	subwfb	btemp,w,c
  3280  003CBC  B0D8               	btfsc	status,0,c
  3281  003CBE  D059               	goto	l7742
  3282                           
  3283                           ; BSR set to: 0
  3284                           ;gemsecs.c: 92:       if (V.r_checksum == H10[1].checksum) {
  3285  003CC0  0101               	movlb	1	; () banked
  3286  003CC2  510D               	movf	(_H10+13)& (0+255),w,b
  3287  003CC4  0100               	movlb	0	; () banked
  3288  003CC6  19D5               	xorwf	(_V+76)& (0+255),w,b	;volatile
  3289  003CC8  E10C               	bnz	l7718
  3290  003CCA  0101               	movlb	1	; () banked
  3291  003CCC  510E               	movf	(_H10+14)& (0+255),w,b
  3292  003CCE  0100               	movlb	0	; () banked
  3293  003CD0  19D6               	xorwf	(_V+77)& (0+255),w,b	;volatile
  3294  003CD2  A4D8               	btfss	status,2,c
  3295  003CD4  D006               	goto	l7718
  3296                           
  3297                           ; BSR set to: 0
  3298                           ;gemsecs.c: 93:        *r_link = LINK_STATE_ACK;
  3299                           ;stkvar	_r_link @ sp[(-1)+-1]
  3300  003CD6  0EFE               	movlw	-2
  3301  003CD8  50E3               	movf	plusw1,w,c
  3302  003CDA  6ED9               	movwf	fsr2l,c
  3303  003CDC  6ADA               	clrf	fsr2h,c
  3304  003CDE  0E03               	movlw	3
  3305  003CE0  D025               	goto	L16
  3306  003CE2                     l7718:
  3307                           
  3308                           ; BSR set to: 0
  3309                           ;gemsecs.c: 95:        V.error = LINK_ERROR_CHECKSUM;
  3310  003CE2  0E05               	movlw	5
  3311  003CE4  D75A               	goto	L15
  3312  003CE6                     l7722:
  3313                           
  3314                           ;gemsecs.c: 104:   V.stream = H10[1].block.block.stream;
  3315  003CE6  0101               	movlb	1	; () banked
  3316  003CE8  5116               	movf	(_H10+22)& (0+255),w,b
  3317  003CEA  0B7F               	andlw	127
  3318  003CEC  0100               	movlb	0	; () banked
  3319  003CEE  6FD1               	movwf	(_V+72)& (0+255),b	;volatile
  3320                           
  3321                           ; BSR set to: 0
  3322                           ;gemsecs.c: 105:   V.function = H10[1].block.block.function;
  3323  003CF0  C115  F0D2         	movff	_H10+21,_V+73	;volatile
  3324                           
  3325                           ; BSR set to: 0
  3326                           ;gemsecs.c: 106:   UART1_Write(0x06);
  3327  003CF4  0E06               	movlw	6
  3328  003CF6  6EE6               	movwf	postinc1,c
  3329  003CF8  ECBF  F02B         	call	_UART1_Write	;wreg free
  3330                           
  3331                           ; BSR set to: 57
  3332                           ;gemsecs.c: 107:   *r_link = LINK_STATE_DONE;
  3333                           ;stkvar	_r_link @ sp[(-1)+-1]
  3334  003CFC  0EFE               	movlw	-2
  3335  003CFE  50E3               	movf	plusw1,w,c
  3336  003D00  6ED9               	movwf	fsr2l,c
  3337  003D02  6ADA               	clrf	fsr2h,c
  3338  003D04  0E04               	movlw	4
  3339  003D06  D012               	goto	L16
  3340  003D08                     l7730:
  3341                           
  3342                           ;gemsecs.c: 110:   *r_link = LINK_STATE_ERROR;
  3343                           ;stkvar	_r_link @ sp[(-1)+-1]
  3344  003D08  0EFE               	movlw	-2
  3345  003D0A  50E3               	movf	plusw1,w,c
  3346  003D0C  6ED9               	movwf	fsr2l,c
  3347  003D0E  6ADA               	clrf	fsr2h,c
  3348  003D10  0E06               	movlw	6
  3349  003D12  6EDF               	movwf	indf2,c
  3350                           
  3351                           ;gemsecs.c: 111:   while ((uart1RxCount)) {
  3352  003D14  D002               	goto	l7734
  3353  003D16                     l7732:
  3354                           
  3355                           ;gemsecs.c: 112:    UART1_Read();
  3356  003D16  ECDE  F02B         	call	_UART1_Read	;wreg free
  3357  003D1A                     l7734:
  3358                           
  3359                           ;gemsecs.c: 111:   while ((uart1RxCount)) {
  3360  003D1A  5037               	movf	_uart1RxCount,w,c	;volatile
  3361  003D1C  B4D8               	btfsc	status,2,c
  3362  003D1E  D029               	goto	l7742
  3363  003D20  D7FA               	goto	l7732
  3364  003D22                     l7736:
  3365                           
  3366                           ;gemsecs.c: 119:   *r_link = LINK_STATE_IDLE;
  3367                           ;stkvar	_r_link @ sp[(-1)+-1]
  3368  003D22  0EFE               	movlw	-2
  3369  003D24  50E3               	movf	plusw1,w,c
  3370  003D26  6ED9               	movwf	fsr2l,c
  3371  003D28  6ADA               	clrf	fsr2h,c
  3372  003D2A  0E00               	movlw	0
  3373  003D2C                     L16:
  3374  003D2C  6EDF               	movwf	indf2,c
  3375                           
  3376                           ;gemsecs.c: 120:   break;
  3377  003D2E  D021               	goto	l7742
  3378  003D30                     l7740:
  3379                           
  3380                           ;stkvar	_r_link @ sp[(-1)+-1]
  3381  003D30  0EFE               	movlw	-2
  3382  003D32  50E3               	movf	plusw1,w,c
  3383  003D34  6ED9               	movwf	fsr2l,c
  3384  003D36  6ADA               	clrf	fsr2h,c
  3385  003D38  50DF               	movf	indf2,w,c
  3386  003D3A  6E47               	movwf	btemp+10,c
  3387  003D3C  6A48               	clrf	btemp+11,c
  3388                           
  3389                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3390                           ; Switch size 1, requested type "simple"
  3391                           ; Number of cases is 1, Range of values is 0 to 0
  3392                           ; switch strategies available:
  3393                           ; Name         Instructions Cycles
  3394                           ; simple_byte            4     3 (average)
  3395                           ;	Chosen strategy is simple_byte
  3396  003D3E  5048               	movf	btemp+11,w,c
  3397  003D40  0A00               	xorlw	0	; case 0
  3398  003D42  A4D8               	btfss	status,2,c
  3399  003D44  D7EE               	goto	l7736
  3400                           
  3401                           ; Switch size 1, requested type "simple"
  3402                           ; Number of cases is 7, Range of values is 0 to 6
  3403                           ; switch strategies available:
  3404                           ; Name         Instructions Cycles
  3405                           ; simple_byte           22    12 (average)
  3406                           ;	Chosen strategy is simple_byte
  3407  003D46  5047               	movf	btemp+10,w,c
  3408  003D48  0A00               	xorlw	0	; case 0
  3409  003D4A  B4D8               	btfsc	status,2,c
  3410  003D4C  D6DE               	goto	l7656
  3411  003D4E  0A01               	xorlw	1	; case 1
  3412  003D50  B4D8               	btfsc	status,2,c
  3413  003D52  D6F6               	goto	l1515
  3414  003D54  0A03               	xorlw	3	; case 2
  3415  003D56  B4D8               	btfsc	status,2,c
  3416  003D58  D717               	goto	l7676
  3417  003D5A  0A01               	xorlw	1	; case 3
  3418  003D5C  B4D8               	btfsc	status,2,c
  3419  003D5E  D7C3               	goto	l7722
  3420  003D60  0A07               	xorlw	7	; case 4
  3421  003D62  B4D8               	btfsc	status,2,c
  3422  003D64  D7DE               	goto	l7736
  3423  003D66  0A01               	xorlw	1	; case 5
  3424  003D68  B4D8               	btfsc	status,2,c
  3425  003D6A  D7CE               	goto	l7730
  3426  003D6C  0A03               	xorlw	3	; case 6
  3427  003D6E  A4D8               	btfss	status,2,c
  3428  003D70  D7D8               	goto	l7736
  3429  003D72                     l7742:
  3430                           
  3431                           ;gemsecs.c: 123:  return *r_link;
  3432                           ;stkvar	_r_link @ sp[(-1)+-1]
  3433  003D72  0EFE               	movlw	-2
  3434  003D74  50E3               	movf	plusw1,w,c
  3435  003D76  6ED9               	movwf	fsr2l,c
  3436  003D78  6ADA               	clrf	fsr2h,c
  3437  003D7A  50DF               	movf	indf2,w,c
  3438  003D7C  6E3D               	movwf	btemp,c
  3439                           
  3440                           ; _r_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  3441  003D7E  52E5               	movf	postdec1,f,c
  3442  003D80  52E5               	movf	postdec1,f,c
  3443  003D82  0012               	return		;funcret
  3444  003D84                     __end_of_r_protocol:
  3445                           	opt callstack 0
  3446                           
  3447 ;; *************** function _secs_send *****************
  3448 ;; Defined at:
  3449 ;;		line 206 in file "gemsecs.c"
  3450 ;; Parameters:    Size  Location     Type
  3451 ;;  byte_block      2  [STACK] PTR unsigned char 
  3452 ;;		 -> H53(112), H24(27), H18(21), H14(17), 
  3453 ;;		 -> H13(16), H12(15), H10(65), 
  3454 ;;  length          1  [STACK] unsigned char 
  3455 ;;  fake            1  [STACK] _Bool 
  3456 ;; Auto vars:     Size  Location     Type
  3457 ;;  k               2  [STACK] PTR unsigned char 
  3458 ;;		 -> H53(112), H24(27), H18(21), H14(17), 
  3459 ;;		 -> H13(16), H12(15), H10(65), 
  3460 ;;  checksum        2  [STACK] unsigned short 
  3461 ;;  i               1  [STACK] unsigned char 
  3462 ;; Return value:  Size  Location     Type
  3463 ;;                  1  [STACK] _Bool 
  3464 ;; Registers used:
  3465 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11
  3466 ;; Tracked objects:
  3467 ;;		On entry : 0/0
  3468 ;;		On exit  : 0/0
  3469 ;;		Unchanged: 0/0
  3470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3474 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3475 ;;Total ram usage:        0 bytes
  3476 ;; Hardware stack levels used:    1
  3477 ;; Hardware stack levels required when called:    4
  3478 ;; This function calls:
  3479 ;;		_UART1_Write
  3480 ;;		_UART1_is_tx_ready
  3481 ;;		_UART1_put_buffer
  3482 ;;		_block_checksum
  3483 ;; This function is called by:
  3484 ;;		_main
  3485 ;;		_r_protocol
  3486 ;;		_t_protocol
  3487 ;; This function uses a reentrant model
  3488 ;;
  3489                           
  3490                           	psect	text5
  3491  004410                     __ptext5:
  3492                           	opt callstack 0
  3493  004410                     _secs_send:
  3494                           	opt callstack 0
  3495                           
  3496                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3497  004410  0E05               	movlw	5
  3498  004412  26E1               	addwf	fsr1l,f,c
  3499  004414  0E00               	movlw	0
  3500  004416  22E2               	addwfc	fsr1h,f,c
  3501                           
  3502                           ;gemsecs.c: 206: _Bool secs_send(uint8_t *byte_block, uint8_t length, _Bool fake);gemsec
      +                          s.c: 207: {;gemsecs.c: 208:  uint8_t i, *k;;gemsecs.c: 209:  uint16_t checksum;;gemsecs.
      +                          c: 211:  k = (uint8_t *) byte_block;
  3503                           ;stkvar	_byte_block @ sp[(-5)+-2]
  3504                           
  3505                           ;incstack = 0
  3506  004418  0EF9               	movlw	-7
  3507  00441A  006F FF8C  F047    	movff	plusw1,btemp+10
  3508  004420  0EFA               	movlw	-6
  3509  004422  006F FF8C  F048    	movff	plusw1,btemp+11
  3510                           
  3511                           ;stkvar	_k @ sp[(-5)+0]
  3512  004428  0EFC               	movlw	-4
  3513  00442A  0060  F123  FFE3   	movff	btemp+11,plusw1
  3514  004430  0EFB               	movlw	-5
  3515  004432  0060  F11F  FFE3   	movff	btemp+10,plusw1
  3516                           
  3517                           ;gemsecs.c: 213:  V.error = LINK_ERROR_NONE;
  3518  004438  0100               	movlb	0	; () banked
  3519  00443A  6BD3               	clrf	(_V+74)& (0+255),b	;volatile
  3520                           
  3521                           ; BSR set to: 0
  3522                           ;gemsecs.c: 214:  if ((length - 3) != k[length - 1]) {
  3523                           ;stkvar	_length @ sp[(-5)+-3]
  3524  00443C  0EF8               	movlw	-8
  3525  00443E  50E3               	movf	plusw1,w,c
  3526  004440  6E47               	movwf	btemp+10,c
  3527  004442  6A48               	clrf	btemp+11,c
  3528                           
  3529                           ;stkvar	_k @ sp[(-5)+0]
  3530  004444  0EFB               	movlw	-5
  3531  004446  50E3               	movf	plusw1,w,c
  3532  004448  2647               	addwf	btemp+10,f,c
  3533  00444A  0EFC               	movlw	-4
  3534  00444C  50E3               	movf	plusw1,w,c
  3535  00444E  2248               	addwfc	btemp+11,f,c
  3536  004450  0EFF               	movlw	255
  3537  004452  2447               	addwf	btemp+10,w,c
  3538  004454  6ED9               	movwf	fsr2l,c
  3539  004456  0EFF               	movlw	255
  3540  004458  2048               	addwfc	btemp+11,w,c
  3541  00445A  6EDA               	movwf	fsr2h,c
  3542  00445C  50DF               	movf	indf2,w,c
  3543  00445E  6E47               	movwf	btemp+10,c
  3544  004460  6A48               	clrf	btemp+11,c
  3545  004462  0EFD               	movlw	253
  3546  004464  6E45               	movwf	btemp+8,c
  3547  004466  0EFF               	movlw	255
  3548  004468  6E46               	movwf	btemp+9,c
  3549                           
  3550                           ;stkvar	_length @ sp[(-5)+-3]
  3551  00446A  0EF8               	movlw	-8
  3552  00446C  50E3               	movf	plusw1,w,c
  3553  00446E  6E43               	movwf	btemp+6,c
  3554  004470  6A44               	clrf	btemp+7,c
  3555  004472  5045               	movf	btemp+8,w,c
  3556  004474  2643               	addwf	btemp+6,f,c
  3557  004476  5046               	movf	btemp+9,w,c
  3558  004478  2244               	addwfc	btemp+7,f,c
  3559  00447A  5047               	movf	btemp+10,w,c
  3560  00447C  1843               	xorwf	btemp+6,w,c
  3561  00447E  E104               	bnz	u4710
  3562  004480  5048               	movf	btemp+11,w,c
  3563  004482  1844               	xorwf	btemp+7,w,c
  3564  004484  B4D8               	btfsc	status,2,c
  3565  004486  D003               	goto	l7526
  3566  004488                     u4710:
  3567                           
  3568                           ; BSR set to: 0
  3569                           ;gemsecs.c: 215:   V.error = LINK_ERROR_SEND;
  3570  004488  0E08               	movlw	8
  3571  00448A  6FD3               	movwf	(_V+74)& (0+255),b	;volatile
  3572  00448C  D098               	goto	l1569
  3573  00448E                     l7526:
  3574                           
  3575                           ; BSR set to: 0
  3576                           ;gemsecs.c: 224:  checksum = block_checksum(&k[2], length - 3);
  3577  00448E  0EFD               	movlw	253
  3578  004490  6E47               	movwf	btemp+10,c
  3579  004492  0EFF               	movlw	255
  3580  004494  6E48               	movwf	btemp+11,c
  3581                           
  3582                           ;stkvar	_length @ sp[(-5)+-3]
  3583  004496  0EF8               	movlw	-8
  3584  004498  50E3               	movf	plusw1,w,c
  3585  00449A  6E45               	movwf	btemp+8,c
  3586  00449C  6A46               	clrf	btemp+9,c
  3587  00449E  5047               	movf	btemp+10,w,c
  3588  0044A0  2645               	addwf	btemp+8,f,c
  3589  0044A2  5048               	movf	btemp+11,w,c
  3590  0044A4  2246               	addwfc	btemp+9,f,c
  3591  0044A6  0060  F117  FFE6   	movff	btemp+8,postinc1
  3592  0044AC  0060  F11B  FFE6   	movff	btemp+9,postinc1
  3593                           
  3594                           ;stkvar	_k @ sp[(-7)+0]
  3595  0044B2  0EF9               	movlw	-7
  3596  0044B4  50E3               	movf	plusw1,w,c
  3597  0044B6  0F02               	addlw	2
  3598  0044B8  6E47               	movwf	btemp+10,c
  3599  0044BA  0EFA               	movlw	-6
  3600  0044BC  006F FF8C  F048    	movff	plusw1,btemp+11
  3601  0044C2  0E00               	movlw	0
  3602  0044C4  2248               	addwfc	btemp+11,f,c
  3603  0044C6  0060  F11F  FFE6   	movff	btemp+10,postinc1
  3604  0044CC  0060  F123  FFE6   	movff	btemp+11,postinc1
  3605  0044D2  ECEC  F024         	call	_block_checksum	;wreg free
  3606                           
  3607                           ;stkvar	_checksum @ sp[(-5)+2]
  3608  0044D6  0EFD               	movlw	-3
  3609  0044D8  0060  F0F7  FFE3   	movff	btemp,plusw1
  3610  0044DE  0EFE               	movlw	-2
  3611  0044E0  0060  F0FB  FFE3   	movff	btemp+1,plusw1
  3612                           
  3613                           ;gemsecs.c: 225:  k[0] = checksum & 0xff;
  3614                           ;stkvar	_checksum @ sp[(-5)+2]
  3615                           ;stkvar	_k @ sp[(-5)+0]
  3616  0044E6  0EFB               	movlw	-5
  3617  0044E8  006F FF8F FFD9     	movff	plusw1,fsr2l
  3618  0044EE  0EFC               	movlw	-4
  3619  0044F0  006F FF8F FFDA     	movff	plusw1,fsr2h
  3620  0044F6  0EFD               	movlw	-3
  3621  0044F8  006F FF8F FFDF     	movff	plusw1,indf2
  3622                           
  3623                           ;gemsecs.c: 226:  k[1] = (checksum >> 8)&0xff;
  3624                           ;stkvar	_checksum @ sp[(-5)+2]
  3625  0044FE  0EFE               	movlw	254
  3626  004500  24E1               	addwf	fsr1l,w,c
  3627  004502  6ED9               	movwf	fsr2l,c
  3628  004504  0EFF               	movlw	255
  3629  004506  20E2               	addwfc	fsr1h,w,c
  3630  004508  6EDA               	movwf	fsr2h,c
  3631                           
  3632                           ;stkvar	_k @ sp[(-5)+0]
  3633  00450A  0EFB               	movlw	-5
  3634  00450C  006F FF8C  F047    	movff	plusw1,btemp+10
  3635  004512  0EFC               	movlw	-4
  3636  004514  006F FF8C  F048    	movff	plusw1,btemp+11
  3637  00451A  0E01               	movlw	1
  3638  00451C  2447               	addwf	btemp+10,w,c
  3639  00451E  6EE9               	movwf	fsr0l,c
  3640  004520  0E00               	movlw	0
  3641  004522  2048               	addwfc	btemp+11,w,c
  3642  004524  6EEA               	movwf	fsr0h,c
  3643  004526  006F FF7F FFEF     	movff	indf2,indf0
  3644                           
  3645                           ;gemsecs.c: 227:  V.t_checksum = checksum;
  3646                           ;stkvar	_checksum @ sp[(-5)+2]
  3647  00452C  0EFD               	movlw	-3
  3648  00452E  006F FF8C  F0D7    	movff	plusw1,_V+78	;volatile
  3649  004534  0EFE               	movlw	-2
  3650  004536  006F FF8C  F0D8    	movff	plusw1,_V+79	;volatile
  3651  00453C                     l7534:
  3652  00453C  ECD7  F02F         	call	_UART1_is_tx_ready	;wreg free
  3653  004540  0E3F               	movlw	63
  3654  004542  643D               	cpfsgt	btemp,c
  3655  004544  D7FB               	goto	l7534
  3656                           
  3657                           ;gemsecs.c: 230:  for (i = length; i > 0; i--) {
  3658                           ;stkvar	_length @ sp[(-5)+-3]
  3659                           ;stkvar	_i @ sp[(-5)+4]
  3660  004546  0EF8               	movlw	-8
  3661  004548  006F FF8C  F03D    	movff	plusw1,btemp
  3662  00454E  0EFF               	movlw	-1
  3663  004550  0060  F0F7  FFE3   	movff	btemp,plusw1
  3664  004556                     l7538:
  3665                           
  3666                           ;stkvar	_i @ sp[(-5)+4]
  3667  004556  0EFF               	movlw	-1
  3668  004558  50E3               	movf	plusw1,w,c
  3669  00455A  B4D8               	btfsc	status,2,c
  3670  00455C  D030               	goto	l1569
  3671                           
  3672                           ;gemsecs.c: 231:   if (fake) {
  3673                           ;stkvar	_fake @ sp[(-5)+-4]
  3674  00455E  0EF7               	movlw	-9
  3675  004560  50E3               	movf	plusw1,w,c
  3676  004562  B4D8               	btfsc	status,2,c
  3677  004564  D015               	goto	l7546
  3678                           
  3679                           ;gemsecs.c: 232:    UART1_put_buffer(k[i - 1]);
  3680                           ;stkvar	_i @ sp[(-5)+4]
  3681  004566  0EFF               	movlw	-1
  3682  004568  50E3               	movf	plusw1,w,c
  3683  00456A  6E47               	movwf	btemp+10,c
  3684  00456C  6A48               	clrf	btemp+11,c
  3685                           
  3686                           ;stkvar	_k @ sp[(-5)+0]
  3687  00456E  0EFB               	movlw	-5
  3688  004570  50E3               	movf	plusw1,w,c
  3689  004572  2647               	addwf	btemp+10,f,c
  3690  004574  0EFC               	movlw	-4
  3691  004576  50E3               	movf	plusw1,w,c
  3692  004578  2248               	addwfc	btemp+11,f,c
  3693  00457A  0EFF               	movlw	255
  3694  00457C  2447               	addwf	btemp+10,w,c
  3695  00457E  6ED9               	movwf	fsr2l,c
  3696  004580  0EFF               	movlw	255
  3697  004582  2048               	addwfc	btemp+11,w,c
  3698  004584  6EDA               	movwf	fsr2h,c
  3699  004586  50DF               	movf	indf2,w,c
  3700  004588  6EE6               	movwf	postinc1,c
  3701  00458A  ECC5  F02C         	call	_UART1_put_buffer	;wreg free
  3702                           
  3703                           ;gemsecs.c: 233:   } else {
  3704  00458E  D014               	goto	l7548
  3705  004590                     l7546:
  3706                           
  3707                           ;gemsecs.c: 234:    UART1_Write(k[i - 1]);
  3708                           ;stkvar	_i @ sp[(-5)+4]
  3709  004590  0EFF               	movlw	-1
  3710  004592  50E3               	movf	plusw1,w,c
  3711  004594  6E47               	movwf	btemp+10,c
  3712  004596  6A48               	clrf	btemp+11,c
  3713                           
  3714                           ;stkvar	_k @ sp[(-5)+0]
  3715  004598  0EFB               	movlw	-5
  3716  00459A  50E3               	movf	plusw1,w,c
  3717  00459C  2647               	addwf	btemp+10,f,c
  3718  00459E  0EFC               	movlw	-4
  3719  0045A0  50E3               	movf	plusw1,w,c
  3720  0045A2  2248               	addwfc	btemp+11,f,c
  3721  0045A4  0EFF               	movlw	255
  3722  0045A6  2447               	addwf	btemp+10,w,c
  3723  0045A8  6ED9               	movwf	fsr2l,c
  3724  0045AA  0EFF               	movlw	255
  3725  0045AC  2048               	addwfc	btemp+11,w,c
  3726  0045AE  6EDA               	movwf	fsr2h,c
  3727  0045B0  50DF               	movf	indf2,w,c
  3728  0045B2  6EE6               	movwf	postinc1,c
  3729  0045B4  ECBF  F02B         	call	_UART1_Write	;wreg free
  3730  0045B8                     l7548:
  3731                           
  3732                           ; BSR set to: 57
  3733                           ;gemsecs.c: 236:  }
  3734                           ;stkvar	_i @ sp[(-5)+4]
  3735  0045B8  0EFF               	movlw	-1
  3736  0045BA  06E3               	decf	plusw1,f,c
  3737  0045BC  D7CC               	goto	l7538
  3738  0045BE                     l1569:
  3739                           
  3740                           ; _secs_send: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  3741  0045BE  0EF7               	movlw	247
  3742  0045C0  26E1               	addwf	fsr1l,f,c
  3743  0045C2  0EFF               	movlw	255
  3744  0045C4  22E2               	addwfc	fsr1h,f,c
  3745  0045C6  0012               	return		;funcret
  3746  0045C8                     __end_of_secs_send:
  3747                           	opt callstack 0
  3748                           
  3749 ;; *************** function _block_checksum *****************
  3750 ;; Defined at:
  3751 ;;		line 16 in file "gemsecs.c"
  3752 ;; Parameters:    Size  Location     Type
  3753 ;;  byte_block      2  [STACK] PTR unsigned char 
  3754 ;;		 -> H53(112), H24(27), H18(21), H14(17), 
  3755 ;;		 -> H13(16), H12(15), H10.block(10), H10(65), 
  3756 ;;  byte_count      2  [STACK] unsigned short 
  3757 ;; Auto vars:     Size  Location     Type
  3758 ;;  i               2  [STACK] unsigned short 
  3759 ;;  sum             2  [STACK] unsigned short 
  3760 ;; Return value:  Size  Location     Type
  3761 ;;                  2  [STACK] unsigned short 
  3762 ;; Registers used:
  3763 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
  3764 ;; Tracked objects:
  3765 ;;		On entry : 3F/0
  3766 ;;		On exit  : 0/0
  3767 ;;		Unchanged: 0/0
  3768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3773 ;;Total ram usage:        0 bytes
  3774 ;; Hardware stack levels used:    1
  3775 ;; Hardware stack levels required when called:    3
  3776 ;; This function calls:
  3777 ;;		Nothing
  3778 ;; This function is called by:
  3779 ;;		_main
  3780 ;;		_secs_send
  3781 ;; This function uses a reentrant model
  3782 ;;
  3783                           
  3784                           	psect	text6
  3785  0049D8                     __ptext6:
  3786                           	opt callstack 0
  3787  0049D8                     _block_checksum:
  3788                           	opt callstack 0
  3789                           
  3790                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3791  0049D8  52E6               	movf	postinc1,f,c
  3792  0049DA  52E6               	movf	postinc1,f,c
  3793  0049DC  52E6               	movf	postinc1,f,c
  3794  0049DE  52E6               	movf	postinc1,f,c
  3795                           
  3796                           ;gemsecs.c: 16: uint16_t block_checksum(uint8_t *byte_block, uint16_t byte_count);gemsec
      +                          s.c: 17: {;gemsecs.c: 18:  uint16_t sum = 0, i;
  3797                           ;stkvar	_sum @ sp[(-4)+2]
  3798                           
  3799                           ;incstack = 0
  3800  0049E0  0EFE               	movlw	-2
  3801  0049E2  6AE3               	clrf	plusw1,c
  3802  0049E4  0EFF               	movlw	-1
  3803  0049E6  6AE3               	clrf	plusw1,c
  3804                           
  3805                           ;gemsecs.c: 20:  for (i = 0; i < byte_count; i++) {
  3806                           ;stkvar	_i @ sp[(-4)+0]
  3807  0049E8  0EFC               	movlw	-4
  3808  0049EA  6AE3               	clrf	plusw1,c
  3809  0049EC  0EFD               	movlw	-3
  3810  0049EE  6AE3               	clrf	plusw1,c
  3811  0049F0  D039               	goto	l7474
  3812  0049F2                     l7470:
  3813                           
  3814                           ;gemsecs.c: 21:   sum += byte_block[i];
  3815                           ;stkvar	_i @ sp[(-4)+0]
  3816  0049F2  0EFC               	movlw	-4
  3817  0049F4  006F FF8C  F047    	movff	plusw1,btemp+10
  3818  0049FA  0EFD               	movlw	-3
  3819  0049FC  006F FF8C  F048    	movff	plusw1,btemp+11
  3820                           
  3821                           ;stkvar	_byte_block @ sp[(-4)+-2]
  3822  004A02  0EFA               	movlw	-6
  3823  004A04  006F FF8C  F045    	movff	plusw1,btemp+8
  3824  004A0A  0EFB               	movlw	-5
  3825  004A0C  006F FF8C  F046    	movff	plusw1,btemp+9
  3826  004A12  5047               	movf	btemp+10,w,c
  3827  004A14  2445               	addwf	btemp+8,w,c
  3828  004A16  6ED9               	movwf	fsr2l,c
  3829  004A18  5048               	movf	btemp+11,w,c
  3830  004A1A  2046               	addwfc	btemp+9,w,c
  3831  004A1C  6EDA               	movwf	fsr2h,c
  3832  004A1E  50DF               	movf	indf2,w,c
  3833  004A20  6E48               	movwf	btemp+11,c
  3834                           
  3835                           ;stkvar	_sum @ sp[(-4)+2]
  3836  004A22  0EFE               	movlw	-2
  3837  004A24  50E3               	movf	plusw1,w,c
  3838  004A26  2448               	addwf	btemp+11,w,c
  3839  004A28  6E3D               	movwf	btemp,c
  3840  004A2A  0EFE               	movlw	-2
  3841  004A2C  0060  F0F7  FFE3   	movff	btemp,plusw1
  3842  004A32  6A3D               	clrf	btemp,c
  3843  004A34  0EFF               	movlw	-1
  3844  004A36  50E3               	movf	plusw1,w,c
  3845  004A38  223D               	addwfc	btemp,f,c
  3846  004A3A  0EFF               	movlw	-1
  3847  004A3C  0060  F0F7  FFE3   	movff	btemp,plusw1
  3848                           
  3849                           ;gemsecs.c: 22:  }
  3850                           ;stkvar	_i @ sp[(-4)+0]
  3851  004A42  0EFC               	movlw	-4
  3852  004A44  50E3               	movf	plusw1,w,c
  3853  004A46  0F01               	addlw	1
  3854  004A48  6E3D               	movwf	btemp,c
  3855  004A4A  0EFC               	movlw	-4
  3856  004A4C  0060  F0F7  FFE3   	movff	btemp,plusw1
  3857  004A52  6A3D               	clrf	btemp,c
  3858  004A54  0EFD               	movlw	-3
  3859  004A56  50E3               	movf	plusw1,w,c
  3860  004A58  203D               	addwfc	btemp,w,c
  3861  004A5A  6E3D               	movwf	btemp,c
  3862  004A5C  0EFD               	movlw	-3
  3863  004A5E  0060  F0F7  FFE3   	movff	btemp,plusw1
  3864  004A64                     l7474:
  3865                           
  3866                           ;stkvar	_byte_count @ sp[(-4)+-4]
  3867  004A64  0EF8               	movlw	-8
  3868  004A66  006F FF8C  F047    	movff	plusw1,btemp+10
  3869  004A6C  0EF9               	movlw	-7
  3870  004A6E  006F FF8C  F048    	movff	plusw1,btemp+11
  3871                           
  3872                           ;stkvar	_i @ sp[(-4)+0]
  3873  004A74  0EFC               	movlw	-4
  3874  004A76  006F FF8C  F045    	movff	plusw1,btemp+8
  3875  004A7C  0EFD               	movlw	-3
  3876  004A7E  006F FF8C  F046    	movff	plusw1,btemp+9
  3877  004A84  5047               	movf	btemp+10,w,c
  3878  004A86  5C45               	subwf	btemp+8,w,c
  3879  004A88  5048               	movf	btemp+11,w,c
  3880  004A8A  5846               	subwfb	btemp+9,w,c
  3881  004A8C  A0D8               	btfss	status,0,c
  3882  004A8E  D7B1               	goto	l7470
  3883                           
  3884                           ;gemsecs.c: 23:  return sum;
  3885                           ;stkvar	_sum @ sp[(-4)+2]
  3886  004A90  0EFE               	movlw	-2
  3887  004A92  006F FF8C  F03D    	movff	plusw1,btemp
  3888  004A98  0EFF               	movlw	-1
  3889  004A9A  006F FF8C  F03E    	movff	plusw1,btemp+1
  3890                           
  3891                           ; _block_checksum: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4
      +                          , argsize = 4, vargsize = 0
  3892  004AA0  0EF8               	movlw	248
  3893  004AA2  26E1               	addwf	fsr1l,f,c
  3894  004AA4  0EFF               	movlw	255
  3895  004AA6  22E2               	addwfc	fsr1h,f,c
  3896  004AA8  0012               	return		;funcret
  3897  004AAA                     __end_of_block_checksum:
  3898                           	opt callstack 0
  3899                           
  3900 ;; *************** function _UART1_put_buffer *****************
  3901 ;; Defined at:
  3902 ;;		line 250 in file "mcc_generated_files/uart1.c"
  3903 ;; Parameters:    Size  Location     Type
  3904 ;;  bufData         1  [STACK] unsigned char 
  3905 ;; Auto vars:     Size  Location     Type
  3906 ;;		None
  3907 ;; Return value:  Size  Location     Type
  3908 ;;                  1  [STACK] void 
  3909 ;; Registers used:
  3910 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3911 ;; Tracked objects:
  3912 ;;		On entry : 0/0
  3913 ;;		On exit  : 3F/39
  3914 ;;		Unchanged: 0/0
  3915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3919 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3920 ;;Total ram usage:        0 bytes
  3921 ;; Hardware stack levels used:    1
  3922 ;; Hardware stack levels required when called:    3
  3923 ;; This function calls:
  3924 ;;		Nothing
  3925 ;; This function is called by:
  3926 ;;		_main
  3927 ;;		_t_protocol
  3928 ;;		_secs_send
  3929 ;; This function uses a reentrant model
  3930 ;;
  3931                           
  3932                           	psect	text7
  3933  00598A                     __ptext7:
  3934                           	opt callstack 0
  3935  00598A                     _UART1_put_buffer:
  3936                           	opt callstack 25
  3937                           
  3938                           ;mcc_generated_files/uart1.c: 250: void UART1_put_buffer(uint8_t bufData);mcc_generated_
      +                          files/uart1.c: 251: {;mcc_generated_files/uart1.c: 252:  PIE3bits.U1RXIE = 0;
  3939                           
  3940                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3941                           ;incstack = 0
  3942  00598A  0139               	movlb	57	; () banked
  3943  00598C  9793               	bcf	147,3,b	;volatile
  3944                           
  3945                           ; BSR set to: 57
  3946                           ;mcc_generated_files/uart1.c: 253:  uart1RxBuffer[uart1RxHead++] = bufData;
  3947                           ;stkvar	_bufData @ sp[(0)+-1]
  3948  00598E  0EA1               	movlw	low _uart1RxBuffer
  3949  005990  2439               	addwf	_uart1RxHead,w,c	;volatile
  3950  005992  6ED9               	movwf	fsr2l,c
  3951  005994  6ADA               	clrf	fsr2h,c
  3952  005996  0E01               	movlw	high _uart1RxBuffer
  3953  005998  22DA               	addwfc	fsr2h,f,c
  3954  00599A  0EFF               	movlw	-1
  3955  00599C  006F FF8F FFDF     	movff	plusw1,indf2
  3956                           
  3957                           ; BSR set to: 57
  3958  0059A2  2A39               	incf	_uart1RxHead,f,c	;volatile
  3959                           
  3960                           ; BSR set to: 57
  3961                           ;mcc_generated_files/uart1.c: 254:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
  3962  0059A4  0E3F               	movlw	63
  3963  0059A6  6439               	cpfsgt	_uart1RxHead,c
  3964  0059A8  D001               	goto	l5550
  3965                           
  3966                           ; BSR set to: 57
  3967                           ;mcc_generated_files/uart1.c: 255:   uart1RxHead = 0;
  3968  0059AA  6A39               	clrf	_uart1RxHead,c	;volatile
  3969  0059AC                     l5550:
  3970                           
  3971                           ; BSR set to: 57
  3972                           ;mcc_generated_files/uart1.c: 258:  uart1RxCount++;
  3973  0059AC  2A37               	incf	_uart1RxCount,f,c	;volatile
  3974                           
  3975                           ; BSR set to: 57
  3976                           ;mcc_generated_files/uart1.c: 259:  PIE3bits.U1RXIE = 1;
  3977  0059AE  8793               	bsf	147,3,b	;volatile
  3978                           
  3979                           ; BSR set to: 57
  3980                           ; _UART1_put_buffer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  3981  0059B0  52E5               	movf	postdec1,f,c
  3982  0059B2  0012               	return		;funcret
  3983  0059B4                     __end_of_UART1_put_buffer:
  3984                           	opt callstack 0
  3985                           
  3986 ;; *************** function _UART1_is_tx_ready *****************
  3987 ;; Defined at:
  3988 ;;		line 151 in file "mcc_generated_files/uart1.c"
  3989 ;; Parameters:    Size  Location     Type
  3990 ;;		None
  3991 ;; Auto vars:     Size  Location     Type
  3992 ;;		None
  3993 ;; Return value:  Size  Location     Type
  3994 ;;                  1  [STACK] unsigned char 
  3995 ;; Registers used:
  3996 ;;		btemp
  3997 ;; Tracked objects:
  3998 ;;		On entry : 0/0
  3999 ;;		On exit  : 0/0
  4000 ;;		Unchanged: 0/0
  4001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4005 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4006 ;;Total ram usage:        0 bytes
  4007 ;; Hardware stack levels used:    1
  4008 ;; Hardware stack levels required when called:    3
  4009 ;; This function calls:
  4010 ;;		Nothing
  4011 ;; This function is called by:
  4012 ;;		_secs_send
  4013 ;; This function uses a reentrant model
  4014 ;;
  4015                           
  4016                           	psect	text8
  4017  005FAE                     __ptext8:
  4018                           	opt callstack 0
  4019  005FAE                     _UART1_is_tx_ready:
  4020                           	opt callstack 25
  4021                           
  4022                           ;mcc_generated_files/uart1.c: 153:  return uart1TxBufferRemaining;
  4023                           
  4024                           ; BSR set to: 57
  4025                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4026                           ;incstack = 0
  4027  005FAE  0060  F0E8  F03D   	movff	_uart1TxBufferRemaining,btemp	;volatile
  4028                           
  4029                           ; _UART1_is_tx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  4030  005FB4  0012               	return		;funcret
  4031  005FB6                     __end_of_UART1_is_tx_ready:
  4032                           	opt callstack 0
  4033                           
  4034 ;; *************** function _UART1_Write *****************
  4035 ;; Defined at:
  4036 ;;		line 179 in file "mcc_generated_files/uart1.c"
  4037 ;; Parameters:    Size  Location     Type
  4038 ;;  txData          1  [STACK] unsigned char 
  4039 ;; Auto vars:     Size  Location     Type
  4040 ;;		None
  4041 ;; Return value:  Size  Location     Type
  4042 ;;                  1  [STACK] void 
  4043 ;; Registers used:
  4044 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4045 ;; Tracked objects:
  4046 ;;		On entry : 0/0
  4047 ;;		On exit  : 3F/39
  4048 ;;		Unchanged: 0/0
  4049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4054 ;;Total ram usage:        0 bytes
  4055 ;; Hardware stack levels used:    1
  4056 ;; Hardware stack levels required when called:    3
  4057 ;; This function calls:
  4058 ;;		Nothing
  4059 ;; This function is called by:
  4060 ;;		_main
  4061 ;;		_r_protocol
  4062 ;;		_t_protocol
  4063 ;;		_secs_send
  4064 ;; This function uses a reentrant model
  4065 ;;
  4066                           
  4067                           	psect	text9
  4068  00577E                     __ptext9:
  4069                           	opt callstack 0
  4070  00577E                     _UART1_Write:
  4071                           	opt callstack 25
  4072                           
  4073                           ;mcc_generated_files/uart1.c: 181:  while (0 == uart1TxBufferRemaining) {
  4074                           
  4075                           ;mcc_generated_files/uart1.c: 179: void UART1_Write(uint8_t txData);mcc_generated_files/
      +                          uart1.c: 180: {;mcc_generated_files/uart1.c: 181:  while (0 == uart1TxBufferRemaining) {
  4076                           
  4077                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4078                           ;incstack = 0
  4079  00577E  503A               	movf	_uart1TxBufferRemaining,w,c	;volatile
  4080  005780  B4D8               	btfsc	status,2,c
  4081  005782  D7FD               	goto	_UART1_Write
  4082                           
  4083                           ;mcc_generated_files/uart1.c: 184:  if (0 == PIE3bits.U1TXIE) {
  4084  005784  0139               	movlb	57	; () banked
  4085  005786  B993               	btfsc	147,4,b	;volatile
  4086  005788  D005               	goto	l579
  4087                           
  4088                           ; BSR set to: 57
  4089                           ;mcc_generated_files/uart1.c: 185:   U1TXB = txData;
  4090                           ;stkvar	_txData @ sp[(0)+-1]
  4091  00578A  0EFF               	movlw	-1
  4092  00578C  006F FF8F FDEA     	movff	plusw1,15850	;volatile
  4093                           
  4094                           ;mcc_generated_files/uart1.c: 186:  } else {
  4095  005792  D011               	goto	l5538
  4096  005794                     l579:
  4097                           
  4098                           ; BSR set to: 57
  4099                           ;mcc_generated_files/uart1.c: 187:   PIE3bits.U1TXIE = 0;
  4100  005794  9993               	bcf	147,4,b	;volatile
  4101                           
  4102                           ; BSR set to: 57
  4103                           ;mcc_generated_files/uart1.c: 188:   uart1TxBuffer[uart1TxHead++] = txData;
  4104                           ;stkvar	_txData @ sp[(0)+-1]
  4105  005796  0E80               	movlw	low _uart1TxBuffer
  4106  005798  243C               	addwf	_uart1TxHead,w,c	;volatile
  4107  00579A  6ED9               	movwf	fsr2l,c
  4108  00579C  6ADA               	clrf	fsr2h,c
  4109  00579E  0E02               	movlw	high _uart1TxBuffer
  4110  0057A0  22DA               	addwfc	fsr2h,f,c
  4111  0057A2  0EFF               	movlw	-1
  4112  0057A4  006F FF8F FFDF     	movff	plusw1,indf2
  4113                           
  4114                           ; BSR set to: 57
  4115  0057AA  2A3C               	incf	_uart1TxHead,f,c	;volatile
  4116                           
  4117                           ; BSR set to: 57
  4118                           ;mcc_generated_files/uart1.c: 189:   if (sizeof(uart1TxBuffer) <= uart1TxHead) {
  4119  0057AC  0E3F               	movlw	63
  4120  0057AE  643C               	cpfsgt	_uart1TxHead,c
  4121  0057B0  D001               	goto	l5536
  4122                           
  4123                           ; BSR set to: 57
  4124                           ;mcc_generated_files/uart1.c: 190:    uart1TxHead = 0;
  4125  0057B2  6A3C               	clrf	_uart1TxHead,c	;volatile
  4126  0057B4                     l5536:
  4127                           
  4128                           ; BSR set to: 57
  4129                           ;mcc_generated_files/uart1.c: 192:   uart1TxBufferRemaining--;
  4130  0057B4  063A               	decf	_uart1TxBufferRemaining,f,c	;volatile
  4131  0057B6                     l5538:
  4132                           
  4133                           ; BSR set to: 57
  4134                           ;mcc_generated_files/uart1.c: 194:  PIE3bits.U1TXIE = 1;
  4135  0057B6  8993               	bsf	147,4,b	;volatile
  4136                           
  4137                           ; BSR set to: 57
  4138                           ; _UART1_Write: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  4139  0057B8  52E5               	movf	postdec1,f,c
  4140  0057BA  0012               	return		;funcret
  4141  0057BC                     __end_of_UART1_Write:
  4142                           	opt callstack 0
  4143                           
  4144 ;; *************** function _run_checksum *****************
  4145 ;; Defined at:
  4146 ;;		line 29 in file "gemsecs.c"
  4147 ;; Parameters:    Size  Location     Type
  4148 ;;  byte_block      1  [STACK] unsigned char 
  4149 ;;  clear           1  [STACK] _Bool 
  4150 ;; Auto vars:     Size  Location     Type
  4151 ;;		None
  4152 ;; Return value:  Size  Location     Type
  4153 ;;                  2  [STACK] unsigned short 
  4154 ;; Registers used:
  4155 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
  4156 ;; Tracked objects:
  4157 ;;		On entry : 6/39
  4158 ;;		On exit  : 0/0
  4159 ;;		Unchanged: 0/0
  4160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4164 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4165 ;;Total ram usage:        0 bytes
  4166 ;; Hardware stack levels used:    1
  4167 ;; Hardware stack levels required when called:    3
  4168 ;; This function calls:
  4169 ;;		Nothing
  4170 ;; This function is called by:
  4171 ;;		_r_protocol
  4172 ;; This function uses a reentrant model
  4173 ;;
  4174                           
  4175                           	psect	text10
  4176  005A0A                     __ptext10:
  4177                           	opt callstack 0
  4178  005A0A                     _run_checksum:
  4179                           	opt callstack 26
  4180                           
  4181                           ;gemsecs.c: 29: uint16_t run_checksum(uint8_t byte_block, _Bool clear);gemsecs.c: 30: {;
      +                          gemsecs.c: 31:  static uint16_t sum = 0;;gemsecs.c: 33:  if (clear)
  4182                           ;stkvar	_clear @ sp[(0)+-2]
  4183                           
  4184                           ; BSR set to: 57
  4185                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4186                           ;incstack = 0
  4187  005A0A  0EFE               	movlw	-2
  4188  005A0C  50E3               	movf	plusw1,w,c
  4189  005A0E  B4D8               	btfsc	status,2,c
  4190  005A10  D002               	goto	l6080
  4191                           
  4192                           ;gemsecs.c: 34:   sum = 0;
  4193  005A12  6A2A               	clrf	run_checksum@sum,c
  4194  005A14  6A2B               	clrf	run_checksum@sum+1,c
  4195  005A16                     l6080:
  4196                           
  4197                           ;gemsecs.c: 36:  sum += byte_block;
  4198                           ;stkvar	_byte_block @ sp[(0)+-1]
  4199  005A16  0EFF               	movlw	-1
  4200  005A18  50E3               	movf	plusw1,w,c
  4201  005A1A  262A               	addwf	run_checksum@sum,f,c
  4202  005A1C  0E00               	movlw	0
  4203  005A1E  222B               	addwfc	run_checksum@sum+1,f,c
  4204                           
  4205                           ;gemsecs.c: 37:  return sum;
  4206  005A20  0060  F0A8  F03D   	movff	run_checksum@sum,btemp
  4207  005A26  0060  F0AC  F03E   	movff	run_checksum@sum+1,btemp+1
  4208                           
  4209                           ; _run_checksum: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, 
      +                          argsize = 2, vargsize = 0
  4210  005A2C  52E5               	movf	postdec1,f,c
  4211  005A2E  52E5               	movf	postdec1,f,c
  4212  005A30  0012               	return		;funcret
  4213  005A32                     __end_of_run_checksum:
  4214                           	opt callstack 0
  4215                           
  4216 ;; *************** function _WaitMs *****************
  4217 ;; Defined at:
  4218 ;;		line 31 in file "timers.c"
  4219 ;; Parameters:    Size  Location     Type
  4220 ;;  numMilliseco    2  [STACK] unsigned short 
  4221 ;; Auto vars:     Size  Location     Type
  4222 ;;		None
  4223 ;; Return value:  Size  Location     Type
  4224 ;;                  1  [STACK] void 
  4225 ;; Registers used:
  4226 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  4227 ;; Tracked objects:
  4228 ;;		On entry : 0/0
  4229 ;;		On exit  : 0/0
  4230 ;;		Unchanged: 0/0
  4231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4235 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4236 ;;Total ram usage:        0 bytes
  4237 ;; Hardware stack levels used:    1
  4238 ;; Hardware stack levels required when called:    4
  4239 ;; This function calls:
  4240 ;;		_StartTimer
  4241 ;;		_TimerDone
  4242 ;; This function is called by:
  4243 ;;		_main
  4244 ;;		_r_protocol
  4245 ;;		_t_protocol
  4246 ;; This function uses a reentrant model
  4247 ;;
  4248                           
  4249                           	psect	text11
  4250  0059B4                     __ptext11:
  4251                           	opt callstack 0
  4252  0059B4                     _WaitMs:
  4253                           	opt callstack 25
  4254                           
  4255                           ;timers.c: 31: void WaitMs(uint16_t numMilliseconds);timers.c: 32: {;timers.c: 33:  Star
      +                          tTimer(TMR_INTERNAL, numMilliseconds);
  4256                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  4257                           
  4258                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4259                           ;incstack = 0
  4260  0059B4  0EFE               	movlw	-2
  4261  0059B6  006F FF8F FFE6     	movff	plusw1,postinc1
  4262  0059BC  006F FF8F FFE6     	movff	plusw1,postinc1
  4263  0059C2  0E00               	movlw	0
  4264  0059C4  6EE6               	movwf	postinc1,c
  4265  0059C6  EC1D  F02C         	call	_StartTimer	;wreg free
  4266  0059CA                     l6036:
  4267                           
  4268                           ;timers.c: 34:  while (!TimerDone(TMR_INTERNAL)) {
  4269  0059CA  0E00               	movlw	0
  4270  0059CC  6EE6               	movwf	postinc1,c
  4271  0059CE  EC81  F02E         	call	_TimerDone	;wreg free
  4272  0059D2  503D               	movf	btemp,w,c
  4273  0059D4  B4D8               	btfsc	status,2,c
  4274  0059D6  D7F9               	goto	l6036
  4275                           
  4276                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  4277  0059D8  52E5               	movf	postdec1,f,c
  4278  0059DA  52E5               	movf	postdec1,f,c
  4279  0059DC  0012               	return		;funcret
  4280  0059DE                     __end_of_WaitMs:
  4281                           	opt callstack 0
  4282                           
  4283 ;; *************** function _TimerDone *****************
  4284 ;; Defined at:
  4285 ;;		line 20 in file "timers.c"
  4286 ;; Parameters:    Size  Location     Type
  4287 ;;  timer           1  [STACK] unsigned char 
  4288 ;; Auto vars:     Size  Location     Type
  4289 ;;		None
  4290 ;; Return value:  Size  Location     Type
  4291 ;;                  1  [STACK] _Bool 
  4292 ;; Registers used:
  4293 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  4294 ;; Tracked objects:
  4295 ;;		On entry : 0/0
  4296 ;;		On exit  : 0/0
  4297 ;;		Unchanged: 0/0
  4298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4302 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4303 ;;Total ram usage:        0 bytes
  4304 ;; Hardware stack levels used:    1
  4305 ;; Hardware stack levels required when called:    3
  4306 ;; This function calls:
  4307 ;;		Nothing
  4308 ;; This function is called by:
  4309 ;;		_r_protocol
  4310 ;;		_t_protocol
  4311 ;;		_WaitMs
  4312 ;; This function uses a reentrant model
  4313 ;;
  4314                           
  4315                           	psect	text12
  4316  005D02                     __ptext12:
  4317                           	opt callstack 0
  4318  005D02                     _TimerDone:
  4319                           	opt callstack 25
  4320                           
  4321                           ;timers.c: 20: __attribute__((inline)) _Bool TimerDone(uint8_t timer);timers.c: 21: {;ti
      +                          mers.c: 22:  if (tickCount[timer] == 0) {
  4322                           ;stkvar	_timer @ sp[(0)+-1]
  4323                           
  4324                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4325                           ;incstack = 0
  4326  005D02  0EFF               	movlw	-1
  4327  005D04  50E3               	movf	plusw1,w,c
  4328  005D06  0D02               	mullw	2
  4329  005D08  50F3               	movf	prodl,w,c
  4330  005D0A  0F79               	addlw	low _tickCount
  4331  005D0C  6ED9               	movwf	fsr2l,c
  4332  005D0E  6ADA               	clrf	fsr2h,c
  4333  005D10  50DE               	movf	postinc2,w,c
  4334  005D12  10DE               	iorwf	postinc2,w,c
  4335  005D14  A4D8               	btfss	status,2,c
  4336  005D16  D002               	goto	l5610
  4337                           
  4338                           ;timers.c: 23:   return 1;
  4339  005D18  0E01               	movlw	1
  4340  005D1A  D001               	goto	L17
  4341  005D1C                     l5610:
  4342                           
  4343                           ;timers.c: 25:  return 0;
  4344  005D1C  0E00               	movlw	0
  4345  005D1E                     L17:
  4346  005D1E  6E3D               	movwf	btemp,c
  4347                           
  4348                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  4349  005D20  52E5               	movf	postdec1,f,c
  4350  005D22  0012               	return		;funcret
  4351  005D24                     __end_of_TimerDone:
  4352                           	opt callstack 0
  4353                           
  4354 ;; *************** function _StartTimer *****************
  4355 ;; Defined at:
  4356 ;;		line 12 in file "timers.c"
  4357 ;; Parameters:    Size  Location     Type
  4358 ;;  timer           1  [STACK] unsigned char 
  4359 ;;  count           2  [STACK] unsigned short 
  4360 ;; Auto vars:     Size  Location     Type
  4361 ;;		None
  4362 ;; Return value:  Size  Location     Type
  4363 ;;                  1  [STACK] void 
  4364 ;; Registers used:
  4365 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  4366 ;; Tracked objects:
  4367 ;;		On entry : 0/39
  4368 ;;		On exit  : 0/0
  4369 ;;		Unchanged: 0/0
  4370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4375 ;;Total ram usage:        0 bytes
  4376 ;; Hardware stack levels used:    1
  4377 ;; Hardware stack levels required when called:    3
  4378 ;; This function calls:
  4379 ;;		Nothing
  4380 ;; This function is called by:
  4381 ;;		_r_protocol
  4382 ;;		_t_protocol
  4383 ;;		_WaitMs
  4384 ;; This function uses a reentrant model
  4385 ;;
  4386                           
  4387                           	psect	text13
  4388  00583A                     __ptext13:
  4389                           	opt callstack 0
  4390  00583A                     _StartTimer:
  4391                           	opt callstack 25
  4392                           
  4393                           ;timers.c: 12: __attribute__((inline)) void StartTimer(uint8_t timer, uint16_t count);ti
      +                          mers.c: 13: {;timers.c: 14:  tickCount[timer] = count << 1;
  4394                           ;stkvar	_count @ sp[(0)+-3]
  4395                           
  4396                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4397                           ;incstack = 0
  4398  00583A  0EFD               	movlw	-3
  4399  00583C  006F FF8C  F047    	movff	plusw1,btemp+10
  4400  005842  0EFE               	movlw	-2
  4401  005844  006F FF8C  F048    	movff	plusw1,btemp+11
  4402  00584A  90D8               	bcf	status,0,c
  4403  00584C  3447               	rlcf	btemp+10,w,c
  4404  00584E  6E45               	movwf	btemp+8,c
  4405  005850  3448               	rlcf	btemp+11,w,c
  4406  005852  6E46               	movwf	btemp+9,c
  4407                           
  4408                           ;stkvar	_timer @ sp[(0)+-1]
  4409  005854  0EFF               	movlw	-1
  4410  005856  50E3               	movf	plusw1,w,c
  4411  005858  0D02               	mullw	2
  4412  00585A  50F3               	movf	prodl,w,c
  4413  00585C  0F79               	addlw	low _tickCount
  4414  00585E  6ED9               	movwf	fsr2l,c
  4415  005860  6ADA               	clrf	fsr2h,c
  4416  005862  0060  F117  FFDE   	movff	btemp+8,postinc2
  4417  005868  0060  F11B  FFDD   	movff	btemp+9,postdec2
  4418                           
  4419                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
  4420  00586E  52E5               	movf	postdec1,f,c
  4421  005870  52E5               	movf	postdec1,f,c
  4422  005872  52E5               	movf	postdec1,f,c
  4423  005874  0012               	return		;funcret
  4424  005876                     __end_of_StartTimer:
  4425                           	opt callstack 0
  4426                           
  4427 ;; *************** function _UART1_is_rx_ready *****************
  4428 ;; Defined at:
  4429 ;;		line 146 in file "mcc_generated_files/uart1.c"
  4430 ;; Parameters:    Size  Location     Type
  4431 ;;		None
  4432 ;; Auto vars:     Size  Location     Type
  4433 ;;		None
  4434 ;; Return value:  Size  Location     Type
  4435 ;;                  1  [STACK] unsigned char 
  4436 ;; Registers used:
  4437 ;;		btemp
  4438 ;; Tracked objects:
  4439 ;;		On entry : 0/0
  4440 ;;		On exit  : 0/0
  4441 ;;		Unchanged: 0/0
  4442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4447 ;;Total ram usage:        0 bytes
  4448 ;; Hardware stack levels used:    1
  4449 ;; Hardware stack levels required when called:    3
  4450 ;; This function calls:
  4451 ;;		Nothing
  4452 ;; This function is called by:
  4453 ;;		_r_protocol
  4454 ;;		_t_protocol
  4455 ;; This function uses a reentrant model
  4456 ;;
  4457                           
  4458                           	psect	text14
  4459  005FB6                     __ptext14:
  4460                           	opt callstack 0
  4461  005FB6                     _UART1_is_rx_ready:
  4462                           	opt callstack 26
  4463                           
  4464                           ;mcc_generated_files/uart1.c: 148:  return uart1RxCount;
  4465                           
  4466                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4467                           ;incstack = 0
  4468  005FB6  0060  F0DC  F03D   	movff	_uart1RxCount,btemp	;volatile
  4469                           
  4470                           ; _UART1_is_rx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  4471  005FBC  0012               	return		;funcret
  4472  005FBE                     __end_of_UART1_is_rx_ready:
  4473                           	opt callstack 0
  4474                           
  4475 ;; *************** function _UART1_Read *****************
  4476 ;; Defined at:
  4477 ;;		line 161 in file "mcc_generated_files/uart1.c"
  4478 ;; Parameters:    Size  Location     Type
  4479 ;;		None
  4480 ;; Auto vars:     Size  Location     Type
  4481 ;;  readValue       1  [STACK] unsigned char 
  4482 ;; Return value:  Size  Location     Type
  4483 ;;                  1  [STACK] unsigned char 
  4484 ;; Registers used:
  4485 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11
  4486 ;; Tracked objects:
  4487 ;;		On entry : 0/0
  4488 ;;		On exit  : 3F/39
  4489 ;;		Unchanged: 0/0
  4490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4494 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4495 ;;Total ram usage:        0 bytes
  4496 ;; Hardware stack levels used:    1
  4497 ;; Hardware stack levels required when called:    3
  4498 ;; This function calls:
  4499 ;;		Nothing
  4500 ;; This function is called by:
  4501 ;;		_r_protocol
  4502 ;;		_t_protocol
  4503 ;; This function uses a reentrant model
  4504 ;;
  4505                           
  4506                           	psect	text15
  4507  0057BC                     __ptext15:
  4508                           	opt callstack 0
  4509  0057BC                     _UART1_Read:
  4510                           	opt callstack 0
  4511                           
  4512                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4513  0057BC  52E6               	movf	postinc1,f,c
  4514  0057BE                     
  4515                           ;mcc_generated_files/uart1.c: 165:  while (0 == uart1RxCount) {
  4516                           
  4517                           ;mcc_generated_files/uart1.c: 165:  while (0 == uart1RxCount) {
  4518  0057BE  5037               	movf	_uart1RxCount,w,c	;volatile
  4519  0057C0  B4D8               	btfsc	status,2,c
  4520  0057C2  D7FD               	goto	l5940
  4521                           
  4522                           ;mcc_generated_files/uart1.c: 168:  readValue = uart1RxBuffer[uart1RxTail++];
  4523  0057C4  0EA1               	movlw	low _uart1RxBuffer
  4524  0057C6  2438               	addwf	_uart1RxTail,w,c	;volatile
  4525  0057C8  6ED9               	movwf	fsr2l,c
  4526  0057CA  6ADA               	clrf	fsr2h,c
  4527  0057CC  0E01               	movlw	high _uart1RxBuffer
  4528  0057CE  22DA               	addwfc	fsr2h,f,c
  4529  0057D0  50DF               	movf	indf2,w,c
  4530  0057D2  6E48               	movwf	btemp+11,c
  4531                           
  4532                           ;stkvar	_readValue @ sp[(-1)+0]
  4533  0057D4  0EFF               	movlw	-1
  4534  0057D6  0060  F123  FFE3   	movff	btemp+11,plusw1
  4535  0057DC  2A38               	incf	_uart1RxTail,f,c	;volatile
  4536                           
  4537                           ;mcc_generated_files/uart1.c: 169:  if (sizeof(uart1RxBuffer) <= uart1RxTail) {
  4538  0057DE  0E3F               	movlw	63
  4539  0057E0  6438               	cpfsgt	_uart1RxTail,c
  4540  0057E2  D001               	goto	l572
  4541                           
  4542                           ;mcc_generated_files/uart1.c: 170:   uart1RxTail = 0;
  4543  0057E4  6A38               	clrf	_uart1RxTail,c	;volatile
  4544  0057E6                     l572:
  4545                           
  4546                           ;mcc_generated_files/uart1.c: 172:  PIE3bits.U1RXIE = 0;
  4547  0057E6  0139               	movlb	57	; () banked
  4548  0057E8  9793               	bcf	147,3,b	;volatile
  4549                           
  4550                           ; BSR set to: 57
  4551                           ;mcc_generated_files/uart1.c: 173:  uart1RxCount--;
  4552  0057EA  0637               	decf	_uart1RxCount,f,c	;volatile
  4553                           
  4554                           ; BSR set to: 57
  4555                           ;mcc_generated_files/uart1.c: 174:  PIE3bits.U1RXIE = 1;
  4556  0057EC  8793               	bsf	147,3,b	;volatile
  4557                           
  4558                           ; BSR set to: 57
  4559                           ;mcc_generated_files/uart1.c: 176:  return readValue;
  4560                           ;stkvar	_readValue @ sp[(-1)+0]
  4561  0057EE  0EFF               	movlw	-1
  4562  0057F0  006F FF8C  F03D    	movff	plusw1,btemp
  4563                           
  4564                           ; BSR set to: 57
  4565                           ; _UART1_Read: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  4566  0057F6  52E5               	movf	postdec1,f,c
  4567  0057F8  0012               	return		;funcret
  4568  0057FA                     __end_of_UART1_Read:
  4569                           	opt callstack 0
  4570                           
  4571 ;; *************** function _init_display *****************
  4572 ;; Defined at:
  4573 ;;		line 35 in file "eadog.c"
  4574 ;; Parameters:    Size  Location     Type
  4575 ;;		None
  4576 ;; Auto vars:     Size  Location     Type
  4577 ;;		None
  4578 ;; Return value:  Size  Location     Type
  4579 ;;                  1  [STACK] void 
  4580 ;; Registers used:
  4581 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  4582 ;; Tracked objects:
  4583 ;;		On entry : 0/0
  4584 ;;		On exit  : 3F/3D
  4585 ;;		Unchanged: 0/0
  4586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4590 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4591 ;;Total ram usage:        0 bytes
  4592 ;; Hardware stack levels used:    1
  4593 ;; Hardware stack levels required when called:    5
  4594 ;; This function calls:
  4595 ;;		_ringBufS_init
  4596 ;;		_send_lcd_cmd
  4597 ;;		_send_lcd_cmd_long
  4598 ;;		_wdtdelay
  4599 ;; This function is called by:
  4600 ;;		_main
  4601 ;; This function uses a reentrant model
  4602 ;;
  4603                           
  4604                           	psect	text16
  4605  0048EE                     __ptext16:
  4606                           	opt callstack 0
  4607  0048EE                     _init_display:
  4608                           	opt callstack 25
  4609                           
  4610                           ;eadog.c: 37:  spi_link.tx1a = &ring_buf1;
  4611                           
  4612                           ; BSR set to: 57
  4613                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4614                           ;incstack = 0
  4615  0048EE  0E43               	movlw	low _ring_buf1
  4616  0048F0  0100               	movlb	0	; () banked
  4617  0048F2  6F73               	movwf	(_spi_link+6)& (0+255),b	;volatile
  4618  0048F4  0E03               	movlw	high _ring_buf1
  4619  0048F6  6F74               	movwf	(_spi_link+7)& (0+255),b	;volatile
  4620                           
  4621                           ;eadog.c: 38:  spi_link.tx1b = &ring_buf2;
  4622  0048F8  0E00               	movlw	low _ring_buf2
  4623  0048FA  6F71               	movwf	(_spi_link+4)& (0+255),b	;volatile
  4624  0048FC  0E03               	movlw	high _ring_buf2
  4625  0048FE  6F72               	movwf	(_spi_link+5)& (0+255),b	;volatile
  4626                           
  4627                           ; BSR set to: 0
  4628                           ;eadog.c: 39:  ringBufS_init(spi_link.tx1a);
  4629  004900  0060  F1CF  FFE6   	movff	_spi_link+6,postinc1
  4630  004906  0060  F1D3  FFE6   	movff	_spi_link+7,postinc1
  4631  00490C  EC41  F02D         	call	_ringBufS_init	;wreg free
  4632                           
  4633                           ;eadog.c: 40:  ringBufS_init(spi_link.tx1b);
  4634  004910  0060  F1C7  FFE6   	movff	_spi_link+4,postinc1
  4635  004916  0060  F1CB  FFE6   	movff	_spi_link+5,postinc1
  4636  00491C  EC41  F02D         	call	_ringBufS_init	;wreg free
  4637                           
  4638                           ;eadog.c: 42:  LATEbits.LATE0 = 1;
  4639  004920  80BE               	bsf	16318,0,c	;volatile
  4640  004922  84BC               	bsf	16316,2,c	;volatile
  4641                           
  4642                           ;eadog.c: 44:  wdtdelay(350000);
  4643  004924  0E30               	movlw	48
  4644  004926  6EE6               	movwf	postinc1,c
  4645  004928  0E57               	movlw	87
  4646  00492A  6EE6               	movwf	postinc1,c
  4647  00492C  0E05               	movlw	5
  4648  00492E  6EE6               	movwf	postinc1,c
  4649  004930  0E00               	movlw	0
  4650  004932  6EE6               	movwf	postinc1,c
  4651  004934  EC29  F02A         	call	_wdtdelay	;wreg free
  4652                           
  4653                           ; BSR set to: 0
  4654                           ;eadog.c: 45:  send_lcd_cmd(0x39);
  4655  004938  0E39               	movlw	57
  4656  00493A  6EE6               	movwf	postinc1,c
  4657  00493C  EC2D  F02D         	call	_send_lcd_cmd	;wreg free
  4658                           
  4659                           ; BSR set to: 0
  4660                           ;eadog.c: 46:  send_lcd_cmd(0x1d);
  4661  004940  0E1D               	movlw	29
  4662  004942  6EE6               	movwf	postinc1,c
  4663  004944  EC2D  F02D         	call	_send_lcd_cmd	;wreg free
  4664                           
  4665                           ; BSR set to: 0
  4666                           ;eadog.c: 47:  send_lcd_cmd(0x50);
  4667  004948  0E50               	movlw	80
  4668  00494A  6EE6               	movwf	postinc1,c
  4669  00494C  EC2D  F02D         	call	_send_lcd_cmd	;wreg free
  4670                           
  4671                           ; BSR set to: 0
  4672                           ;eadog.c: 48:  send_lcd_cmd(0x6c);
  4673  004950  0E6C               	movlw	108
  4674  004952  6EE6               	movwf	postinc1,c
  4675  004954  EC2D  F02D         	call	_send_lcd_cmd	;wreg free
  4676                           
  4677                           ; BSR set to: 0
  4678                           ;eadog.c: 49:  send_lcd_cmd(0x76);
  4679  004958  0E76               	movlw	118
  4680  00495A  6EE6               	movwf	postinc1,c
  4681  00495C  EC2D  F02D         	call	_send_lcd_cmd	;wreg free
  4682                           
  4683                           ; BSR set to: 0
  4684                           ;eadog.c: 50:  send_lcd_cmd_long(0x38);
  4685  004960  0E38               	movlw	56
  4686  004962  6EE6               	movwf	postinc1,c
  4687  004964  EC19  F02D         	call	_send_lcd_cmd_long	;wreg free
  4688                           
  4689                           ; BSR set to: 0
  4690                           ;eadog.c: 51:  send_lcd_cmd(0x0f);
  4691  004968  0E0F               	movlw	15
  4692  00496A  6EE6               	movwf	postinc1,c
  4693  00496C  EC2D  F02D         	call	_send_lcd_cmd	;wreg free
  4694                           
  4695                           ; BSR set to: 0
  4696                           ;eadog.c: 52:  send_lcd_cmd_long(0x01);
  4697  004970  0E01               	movlw	1
  4698  004972  6EE6               	movwf	postinc1,c
  4699  004974  EC19  F02D         	call	_send_lcd_cmd_long	;wreg free
  4700                           
  4701                           ; BSR set to: 0
  4702                           ;eadog.c: 53:  send_lcd_cmd(0x02);
  4703  004978  0E02               	movlw	2
  4704  00497A  6EE6               	movwf	postinc1,c
  4705  00497C  EC2D  F02D         	call	_send_lcd_cmd	;wreg free
  4706                           
  4707                           ; BSR set to: 0
  4708                           ;eadog.c: 54:  send_lcd_cmd(0x06);
  4709  004980  0E06               	movlw	6
  4710  004982  6EE6               	movwf	postinc1,c
  4711  004984  EC2D  F02D         	call	_send_lcd_cmd	;wreg free
  4712                           
  4713                           ; BSR set to: 0
  4714                           ;eadog.c: 55:  wdtdelay(30);
  4715  004988  0E1E               	movlw	30
  4716  00498A  6EE6               	movwf	postinc1,c
  4717  00498C  0E00               	movlw	0
  4718  00498E  6EE6               	movwf	postinc1,c
  4719  004990  0E00               	movlw	0
  4720  004992  6EE6               	movwf	postinc1,c
  4721  004994  0E00               	movlw	0
  4722  004996  6EE6               	movwf	postinc1,c
  4723  004998  EC29  F02A         	call	_wdtdelay	;wreg free
  4724                           
  4725                           ; BSR set to: 0
  4726                           ;eadog.c: 56:  SPI1CON2 = 0x02;
  4727  00499C  0E02               	movlw	2
  4728  00499E  013D               	movlb	61	; () banked
  4729  0049A0  6F16               	movwf	22,b	;volatile
  4730                           
  4731                           ; BSR set to: 61
  4732                           ;eadog.c: 57:  SPI1CON1 = 0x40;
  4733  0049A2  0E40               	movlw	64
  4734  0049A4  6F15               	movwf	21,b	;volatile
  4735                           
  4736                           ; BSR set to: 61
  4737                           ;eadog.c: 58:  SPI1CON0 = 0x83;
  4738  0049A6  0E83               	movlw	131
  4739  0049A8  6F14               	movwf	20,b	;volatile
  4740                           
  4741                           ; BSR set to: 61
  4742                           ;eadog.c: 59:  SPI1INTFbits.SPI1TXUIF = 0;
  4743  0049AA  931A               	bcf	26,1,b	;volatile
  4744                           
  4745                           ; BSR set to: 61
  4746                           ;eadog.c: 60:  DMA1CON1bits.DMODE = 0;
  4747  0049AC  0E3F               	movlw	-193
  4748  0049AE  013B               	movlb	59	; () banked
  4749  0049B0  17FD               	andwf	253,f,b	;volatile
  4750                           
  4751                           ; BSR set to: 59
  4752                           ;eadog.c: 61:  DMA1CON1bits.DSTP = 0;
  4753  0049B2  9BFD               	bcf	253,5,b	;volatile
  4754                           
  4755                           ; BSR set to: 59
  4756                           ;eadog.c: 62:  DMA1CON1bits.SMODE = 1;
  4757  0049B4  51FD               	movf	253,w,b	;volatile
  4758  0049B6  0BF9               	andlw	-7
  4759  0049B8  0902               	iorlw	2
  4760  0049BA  6FFD               	movwf	253,b	;volatile
  4761                           
  4762                           ; BSR set to: 59
  4763                           ;eadog.c: 63:  DMA1CON1bits.SMR = 0;
  4764  0049BC  0EE7               	movlw	-25
  4765  0049BE  17FD               	andwf	253,f,b	;volatile
  4766                           
  4767                           ; BSR set to: 59
  4768                           ;eadog.c: 64:  DMA1CON1bits.SSTP = 1;
  4769  0049C0  81FD               	bsf	253,0,b	;volatile
  4770                           
  4771                           ; BSR set to: 59
  4772                           ;eadog.c: 65:  DMA1SSA = (uint32_t) & ring_buf1;
  4773  0049C2  0E43               	movlw	low _ring_buf1
  4774  0049C4  6FF9               	movwf	249,b	;volatile
  4775  0049C6  0E03               	movlw	high _ring_buf1
  4776  0049C8  6FFA               	movwf	250,b	;volatile
  4777  0049CA  0E00               	movlw	low (_ring_buf1 shr (0+16))
  4778  0049CC  6FFB               	movwf	251,b	;volatile
  4779                           
  4780                           ; BSR set to: 59
  4781                           ;eadog.c: 66:  DMA1CON0bits.DGO = 0;
  4782  0049CE  9BFC               	bcf	252,5,b	;volatile
  4783                           
  4784                           ; BSR set to: 59
  4785                           ;eadog.c: 67:  SPI1INTFbits.SPI1TXUIF = 1;
  4786  0049D0  013D               	movlb	61	; () banked
  4787  0049D2  831A               	bsf	26,1,b	;volatile
  4788                           
  4789                           ; BSR set to: 61
  4790                           ;eadog.c: 68:  LATEbits.LATE0 = 0;
  4791  0049D4  90BE               	bcf	16318,0,c	;volatile
  4792                           
  4793                           ; BSR set to: 61
  4794                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  4795  0049D6  0012               	return		;funcret
  4796  0049D8                     __end_of_init_display:
  4797                           	opt callstack 0
  4798                           
  4799 ;; *************** function _send_lcd_cmd_long *****************
  4800 ;; Defined at:
  4801 ;;		line 97 in file "eadog.c"
  4802 ;; Parameters:    Size  Location     Type
  4803 ;;  cmd             1  [STACK] unsigned char 
  4804 ;; Auto vars:     Size  Location     Type
  4805 ;;		None
  4806 ;; Return value:  Size  Location     Type
  4807 ;;                  1  [STACK] void 
  4808 ;; Registers used:
  4809 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  4810 ;; Tracked objects:
  4811 ;;		On entry : 3F/0
  4812 ;;		On exit  : 3F/0
  4813 ;;		Unchanged: 0/0
  4814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4818 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4819 ;;Total ram usage:        0 bytes
  4820 ;; Hardware stack levels used:    1
  4821 ;; Hardware stack levels required when called:    4
  4822 ;; This function calls:
  4823 ;;		_SPI1_Exchange8bit
  4824 ;;		_wdtdelay
  4825 ;; This function is called by:
  4826 ;;		_init_display
  4827 ;; This function uses a reentrant model
  4828 ;;
  4829                           
  4830                           	psect	text17
  4831  005A32                     __ptext17:
  4832                           	opt callstack 0
  4833  005A32                     _send_lcd_cmd_long:
  4834                           	opt callstack 25
  4835                           
  4836                           ; BSR set to: 61
  4837                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4838                           ;incstack = 0
  4839                           ;eadog.c: 97: static void send_lcd_cmd_long(uint8_t cmd);eadog.c: 98: {;eadog.c: 99:  do
      +                           { LATCbits.LATC1 = 0; } while(0);
  4840  005A32  92BC               	bcf	16316,1,c	;volatile
  4841                           
  4842                           ;eadog.c: 100:  do { LATCbits.LATC2 = 0; } while(0);
  4843  005A34  94BC               	bcf	16316,2,c	;volatile
  4844                           
  4845                           ;eadog.c: 101:  SPI1_Exchange8bit(cmd);
  4846                           ;stkvar	_cmd @ sp[(0)+-1]
  4847  005A36  0EFF               	movlw	-1
  4848  005A38  50E3               	movf	plusw1,w,c
  4849  005A3A  6EE6               	movwf	postinc1,c
  4850  005A3C  EC18  F02F         	call	_SPI1_Exchange8bit	;wreg free
  4851                           
  4852                           ; BSR set to: 57
  4853                           ;eadog.c: 102:  wdtdelay(800);
  4854  005A40  0E20               	movlw	32
  4855  005A42  6EE6               	movwf	postinc1,c
  4856  005A44  0E03               	movlw	3
  4857  005A46  6EE6               	movwf	postinc1,c
  4858  005A48  0E00               	movlw	0
  4859  005A4A  6EE6               	movwf	postinc1,c
  4860  005A4C  0E00               	movlw	0
  4861  005A4E  6EE6               	movwf	postinc1,c
  4862  005A50  EC29  F02A         	call	_wdtdelay	;wreg free
  4863                           
  4864                           ; BSR set to: 0
  4865  005A54  82BC               	bsf	16316,1,c	;volatile
  4866                           
  4867                           ; BSR set to: 0
  4868                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  4869  005A56  52E5               	movf	postdec1,f,c
  4870  005A58  0012               	return		;funcret
  4871  005A5A                     __end_of_send_lcd_cmd_long:
  4872                           	opt callstack 0
  4873                           
  4874 ;; *************** function _send_lcd_cmd *****************
  4875 ;; Defined at:
  4876 ;;		line 85 in file "eadog.c"
  4877 ;; Parameters:    Size  Location     Type
  4878 ;;  cmd             1  [STACK] unsigned char 
  4879 ;; Auto vars:     Size  Location     Type
  4880 ;;		None
  4881 ;; Return value:  Size  Location     Type
  4882 ;;                  1  [STACK] void 
  4883 ;; Registers used:
  4884 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  4885 ;; Tracked objects:
  4886 ;;		On entry : 3F/0
  4887 ;;		On exit  : 3F/0
  4888 ;;		Unchanged: 0/0
  4889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4894 ;;Total ram usage:        0 bytes
  4895 ;; Hardware stack levels used:    1
  4896 ;; Hardware stack levels required when called:    4
  4897 ;; This function calls:
  4898 ;;		_SPI1_Exchange8bit
  4899 ;;		_wdtdelay
  4900 ;; This function is called by:
  4901 ;;		_init_display
  4902 ;; This function uses a reentrant model
  4903 ;;
  4904                           
  4905                           	psect	text18
  4906  005A5A                     __ptext18:
  4907                           	opt callstack 0
  4908  005A5A                     _send_lcd_cmd:
  4909                           	opt callstack 25
  4910                           
  4911                           ; BSR set to: 0
  4912                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4913                           ;incstack = 0
  4914                           ;eadog.c: 85: static void send_lcd_cmd(uint8_t cmd);eadog.c: 86: {;eadog.c: 87:  do { LA
      +                          TCbits.LATC1 = 0; } while(0);
  4915  005A5A  92BC               	bcf	16316,1,c	;volatile
  4916                           
  4917                           ;eadog.c: 88:  do { LATCbits.LATC2 = 0; } while(0);
  4918  005A5C  94BC               	bcf	16316,2,c	;volatile
  4919                           
  4920                           ;eadog.c: 89:  SPI1_Exchange8bit(cmd);
  4921                           ;stkvar	_cmd @ sp[(0)+-1]
  4922  005A5E  0EFF               	movlw	-1
  4923  005A60  50E3               	movf	plusw1,w,c
  4924  005A62  6EE6               	movwf	postinc1,c
  4925  005A64  EC18  F02F         	call	_SPI1_Exchange8bit	;wreg free
  4926                           
  4927                           ; BSR set to: 57
  4928                           ;eadog.c: 90:  wdtdelay(30);
  4929  005A68  0E1E               	movlw	30
  4930  005A6A  6EE6               	movwf	postinc1,c
  4931  005A6C  0E00               	movlw	0
  4932  005A6E  6EE6               	movwf	postinc1,c
  4933  005A70  0E00               	movlw	0
  4934  005A72  6EE6               	movwf	postinc1,c
  4935  005A74  0E00               	movlw	0
  4936  005A76  6EE6               	movwf	postinc1,c
  4937  005A78  EC29  F02A         	call	_wdtdelay	;wreg free
  4938                           
  4939                           ; BSR set to: 0
  4940  005A7C  82BC               	bsf	16316,1,c	;volatile
  4941                           
  4942                           ; BSR set to: 0
  4943                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  4944  005A7E  52E5               	movf	postdec1,f,c
  4945  005A80  0012               	return		;funcret
  4946  005A82                     __end_of_send_lcd_cmd:
  4947                           	opt callstack 0
  4948                           
  4949 ;; *************** function _SPI1_Exchange8bit *****************
  4950 ;; Defined at:
  4951 ;;		line 79 in file "mcc_generated_files/spi1.c"
  4952 ;; Parameters:    Size  Location     Type
  4953 ;;  data            1  [STACK] unsigned char 
  4954 ;; Auto vars:     Size  Location     Type
  4955 ;;		None
  4956 ;; Return value:  Size  Location     Type
  4957 ;;                  1  [STACK] unsigned char 
  4958 ;; Registers used:
  4959 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  4960 ;; Tracked objects:
  4961 ;;		On entry : 0/0
  4962 ;;		On exit  : 3F/39
  4963 ;;		Unchanged: 0/0
  4964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4968 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4969 ;;Total ram usage:        0 bytes
  4970 ;; Hardware stack levels used:    1
  4971 ;; Hardware stack levels required when called:    3
  4972 ;; This function calls:
  4973 ;;		Nothing
  4974 ;; This function is called by:
  4975 ;;		_send_lcd_cmd
  4976 ;;		_send_lcd_cmd_long
  4977 ;; This function uses a reentrant model
  4978 ;;
  4979                           
  4980                           	psect	text19
  4981  005E30                     __ptext19:
  4982                           	opt callstack 0
  4983  005E30                     _SPI1_Exchange8bit:
  4984                           	opt callstack 25
  4985                           
  4986                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  4987                           
  4988                           ; BSR set to: 0
  4989                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4990                           ;incstack = 0
  4991  005E30  0E01               	movlw	1
  4992  005E32  013D               	movlb	61	; () banked
  4993  005E34  6F12               	movwf	18,b	;volatile
  4994                           
  4995                           ; BSR set to: 61
  4996                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  4997                           ;stkvar	_data @ sp[(0)+-1]
  4998  005E36  0EFF               	movlw	-1
  4999  005E38  006F FF8F FD11     	movff	plusw1,15633	;volatile
  5000  005E3E                     l847:
  5001                           
  5002                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  5003  005E3E  0139               	movlb	57	; () banked
  5004  005E40  A9A2               	btfss	162,4,b	;volatile
  5005  005E42  D7FD               	goto	l847
  5006                           
  5007                           ; BSR set to: 57
  5008                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  5009  005E44  006F F440  F03D    	movff	15632,btemp	;volatile
  5010                           
  5011                           ; BSR set to: 57
  5012                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  5013  005E4A  52E5               	movf	postdec1,f,c
  5014  005E4C  0012               	return		;funcret
  5015  005E4E                     __end_of_SPI1_Exchange8bit:
  5016                           	opt callstack 0
  5017                           
  5018 ;; *************** function _ringBufS_init *****************
  5019 ;; Defined at:
  5020 ;;		line 22 in file "ringbufs.c"
  5021 ;; Parameters:    Size  Location     Type
  5022 ;;  _this           2  [STACK] PTR volatile struct ring
  5023 ;;		 -> ring_buf2(67), ring_buf1(67), 
  5024 ;; Auto vars:     Size  Location     Type
  5025 ;;		None
  5026 ;; Return value:  Size  Location     Type
  5027 ;;                  1  [STACK] void 
  5028 ;; Registers used:
  5029 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  5030 ;; Tracked objects:
  5031 ;;		On entry : 0/0
  5032 ;;		On exit  : 0/0
  5033 ;;		Unchanged: 0/0
  5034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5038 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5039 ;;Total ram usage:        0 bytes
  5040 ;; Hardware stack levels used:    1
  5041 ;; Hardware stack levels required when called:    4
  5042 ;; This function calls:
  5043 ;;		_memset
  5044 ;; This function is called by:
  5045 ;;		_init_display
  5046 ;; This function uses a reentrant model
  5047 ;;
  5048                           
  5049                           	psect	text20
  5050  005A82                     __ptext20:
  5051                           	opt callstack 0
  5052  005A82                     _ringBufS_init:
  5053                           	opt callstack 25
  5054                           
  5055                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  5056                           
  5057                           ; BSR set to: 57
  5058                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5059                           ;incstack = 0
  5060  005A82  0E43               	movlw	67
  5061  005A84  6EE6               	movwf	postinc1,c
  5062  005A86  0E00               	movlw	0
  5063  005A88  6EE6               	movwf	postinc1,c
  5064  005A8A  0E00               	movlw	0
  5065  005A8C  6EE6               	movwf	postinc1,c
  5066  005A8E  0E00               	movlw	0
  5067  005A90  6EE6               	movwf	postinc1,c
  5068                           
  5069                           ;stkvar	__this @ sp[(-4)+-2]
  5070  005A92  0EFA               	movlw	-6
  5071  005A94  006F FF8F FFE6     	movff	plusw1,postinc1
  5072  005A9A  006F FF8F FFE6     	movff	plusw1,postinc1
  5073  005AA0  EC7C  F019         	call	_memset	;wreg free
  5074                           
  5075                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  5076  005AA4  52E5               	movf	postdec1,f,c
  5077  005AA6  52E5               	movf	postdec1,f,c
  5078  005AA8  0012               	return		;funcret
  5079  005AAA                     __end_of_ringBufS_init:
  5080                           	opt callstack 0
  5081                           
  5082 ;; *************** function _eaDogM_WriteStringAtPos *****************
  5083 ;; Defined at:
  5084 ;;		line 222 in file "eadog.c"
  5085 ;; Parameters:    Size  Location     Type
  5086 ;;  r               1  [STACK] unsigned char 
  5087 ;;  c               1  [STACK] unsigned char 
  5088 ;;  strPtr          1  [STACK] PTR unsigned char 
  5089 ;;		 -> V(80), 
  5090 ;; Auto vars:     Size  Location     Type
  5091 ;;		None
  5092 ;; Return value:  Size  Location     Type
  5093 ;;                  1  [STACK] void 
  5094 ;; Registers used:
  5095 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  5096 ;; Tracked objects:
  5097 ;;		On entry : 3F/0
  5098 ;;		On exit  : 3F/0
  5099 ;;		Unchanged: 0/0
  5100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5105 ;;Total ram usage:        0 bytes
  5106 ;; Hardware stack levels used:    1
  5107 ;; Hardware stack levels required when called:   13
  5108 ;; This function calls:
  5109 ;;		_eaDogM_WriteString
  5110 ;;		_send_lcd_cmd_dma
  5111 ;; This function is called by:
  5112 ;;		_main
  5113 ;; This function uses a reentrant model
  5114 ;;
  5115                           
  5116                           	psect	text21
  5117  005906                     __ptext21:
  5118                           	opt callstack 0
  5119  005906                     _eaDogM_WriteStringAtPos:
  5120                           	opt callstack 17
  5121                           
  5122                           ;eadog.c: 222: void eaDogM_WriteStringAtPos(uint8_t r, uint8_t c, char *strPtr);eadog.c:
      +                           223: {;eadog.c: 224:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  5123                           ;stkvar	_c @ sp[(0)+-2]
  5124                           
  5125                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5126                           ;incstack = 0
  5127  005906  0EFE               	movlw	-2
  5128  005908  006F FF8C  F048    	movff	plusw1,btemp+11
  5129                           
  5130                           ;stkvar	_r @ sp[(0)+-1]
  5131  00590E  0EFF               	movlw	-1
  5132  005910  50E3               	movf	plusw1,w,c
  5133  005912  0D10               	mullw	16
  5134  005914  50F3               	movf	prodl,w,c
  5135  005916  2448               	addwf	btemp+11,w,c
  5136  005918  0F80               	addlw	128
  5137  00591A  6EE6               	movwf	postinc1,c
  5138  00591C  EC80  F02A         	call	_send_lcd_cmd_dma	;wreg free
  5139                           
  5140                           ;eadog.c: 225:  eaDogM_WriteString(strPtr);
  5141                           ;stkvar	_strPtr @ sp[(0)+-3]
  5142  005920  0EFD               	movlw	-3
  5143  005922  50E3               	movf	plusw1,w,c
  5144  005924  6EE6               	movwf	postinc1,c
  5145  005926  EC13  F026         	call	_eaDogM_WriteString	;wreg free
  5146                           
  5147                           ; BSR set to: 0
  5148                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 3, argsize = 3, vargsize = 0
  5149  00592A  52E5               	movf	postdec1,f,c
  5150  00592C  52E5               	movf	postdec1,f,c
  5151  00592E  52E5               	movf	postdec1,f,c
  5152  005930  0012               	return		;funcret
  5153  005932                     __end_of_eaDogM_WriteStringAtPos:
  5154                           	opt callstack 0
  5155                           
  5156 ;; *************** function _eaDogM_WriteString *****************
  5157 ;; Defined at:
  5158 ;;		line 167 in file "eadog.c"
  5159 ;; Parameters:    Size  Location     Type
  5160 ;;  strPtr          1  [STACK] PTR unsigned char 
  5161 ;;		 -> V(80), 
  5162 ;; Auto vars:     Size  Location     Type
  5163 ;;		None
  5164 ;; Return value:  Size  Location     Type
  5165 ;;                  1  [STACK] void 
  5166 ;; Registers used:
  5167 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  5168 ;; Tracked objects:
  5169 ;;		On entry : 3F/0
  5170 ;;		On exit  : 3F/0
  5171 ;;		Unchanged: 0/0
  5172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5177 ;;Total ram usage:        0 bytes
  5178 ;; Hardware stack levels used:    1
  5179 ;; Hardware stack levels required when called:   12
  5180 ;; This function calls:
  5181 ;;		_printf
  5182 ;;		_ringBufS_flush
  5183 ;;		_start_lcd
  5184 ;;		_strlen
  5185 ;;		_wait_lcd_set
  5186 ;; This function is called by:
  5187 ;;		_main
  5188 ;;		_eaDogM_WriteStringAtPos
  5189 ;; This function uses a reentrant model
  5190 ;;
  5191                           
  5192                           	psect	text22
  5193  004C26                     __ptext22:
  5194                           	opt callstack 0
  5195  004C26                     _eaDogM_WriteString:
  5196                           	opt callstack 17
  5197                           
  5198                           ;eadog.c: 167: void eaDogM_WriteString(char *strPtr);eadog.c: 168: {;eadog.c: 169:  wait
      +                          _lcd_set();
  5199                           
  5200                           ; BSR set to: 0
  5201                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5202                           ;incstack = 0
  5203  004C26  ECE3  F02F         	call	_wait_lcd_set	;wreg free
  5204                           
  5205                           ; BSR set to: 0
  5206                           ;eadog.c: 171:  ringBufS_flush(spi_link.tx1a, 0);
  5207  004C2A  0E00               	movlw	0
  5208  004C2C  6EE6               	movwf	postinc1,c
  5209  004C2E  0060  F1CF  FFE6   	movff	_spi_link+6,postinc1
  5210  004C34  0060  F1D3  FFE6   	movff	_spi_link+7,postinc1
  5211  004C3A  ECA9  F027         	call	_ringBufS_flush	;wreg free
  5212  004C3E  94BC               	bcf	16316,2,c	;volatile
  5213                           
  5214                           ;eadog.c: 173:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  5215                           ;stkvar	_strPtr @ sp[(0)+-1]
  5216  004C40  0EFF               	movlw	-1
  5217  004C42  006F FF8C  F048    	movff	plusw1,btemp+11
  5218  004C48  0060  F123  FFE6   	movff	btemp+11,postinc1
  5219  004C4E  0E00               	movlw	0
  5220  004C50  6EE6               	movwf	postinc1,c
  5221  004C52  EC76  F028         	call	_strlen	;wreg free
  5222  004C56  503E               	movf	btemp+1,w,c
  5223  004C58  E104               	bnz	u4700
  5224  004C5A  0E41               	movlw	65
  5225  004C5C  5C3D               	subwf	btemp,w,c
  5226  004C5E  A0D8               	btfss	status,0,c
  5227  004C60  D008               	goto	l7502
  5228  004C62                     u4700:
  5229                           
  5230                           ;stkvar	_strPtr @ sp[(0)+-1]
  5231  004C62  0EFF               	movlw	-1
  5232  004C64  50E3               	movf	plusw1,w,c
  5233  004C66  6ED9               	movwf	fsr2l,c
  5234  004C68  6ADA               	clrf	fsr2h,c
  5235  004C6A  0E40               	movlw	64
  5236  004C6C  26D9               	addwf	fsr2l,f,c
  5237  004C6E  0E00               	movlw	0
  5238  004C70  6EDF               	movwf	indf2,c
  5239  004C72                     l7502:
  5240                           
  5241                           ;eadog.c: 174:  DMA1CON0bits.EN = 0;
  5242  004C72  013B               	movlb	59	; () banked
  5243  004C74  9FFC               	bcf	252,7,b	;volatile
  5244                           
  5245                           ; BSR set to: 59
  5246                           ;eadog.c: 175:  DMA1SSZ = strlen(strPtr);
  5247                           ;stkvar	_strPtr @ sp[(0)+-1]
  5248  004C76  0EFF               	movlw	-1
  5249  004C78  006F FF8C  F048    	movff	plusw1,btemp+11
  5250  004C7E  0060  F123  FFE6   	movff	btemp+11,postinc1
  5251  004C84  0E00               	movlw	0
  5252  004C86  6EE6               	movwf	postinc1,c
  5253  004C88  EC76  F028         	call	_strlen	;wreg free
  5254  004C8C  0060  F0F7  FBF7   	movff	btemp,15351	;volatile
  5255  004C92  0060  F0FB  FBF8   	movff	btemp+1,15352	;volatile
  5256                           
  5257                           ;eadog.c: 176:  DMA1CON0bits.EN = 1;
  5258  004C98  013B               	movlb	59	; () banked
  5259  004C9A  8FFC               	bsf	252,7,b	;volatile
  5260                           
  5261                           ; BSR set to: 59
  5262                           ;eadog.c: 177:  printf("%s", strPtr);
  5263                           ;stkvar	_strPtr @ sp[(0)+-1]
  5264  004C9C  0EFF               	movlw	-1
  5265  004C9E  006F FF8C  F048    	movff	plusw1,btemp+11
  5266  004CA4  0060  F123  FFE6   	movff	btemp+11,postinc1
  5267  004CAA  0E00               	movlw	0
  5268  004CAC  6EE6               	movwf	postinc1,c
  5269  004CAE  0EB4               	movlw	STR_10& (0+255)
  5270  004CB0  6EE6               	movwf	postinc1,c
  5271  004CB2  0E03               	movlw	3
  5272  004CB4  6EE6               	movwf	postinc1,c
  5273  004CB6  ECC9  F029         	call	_printf	;wreg free
  5274  004CBA  94BE               	bcf	16318,2,c	;volatile
  5275                           
  5276                           ;eadog.c: 179:  start_lcd();
  5277  004CBC  ECE6  F02F         	call	_start_lcd	;wreg free
  5278                           
  5279                           ; BSR set to: 59
  5280                           ;eadog.c: 180:  ++V.ticks;
  5281  004CC0  0E01               	movlw	1
  5282  004CC2  0100               	movlb	0	; () banked
  5283  004CC4  27CD               	addwf	(_V+68)& (0+255),f,b	;volatile
  5284  004CC6  0E00               	movlw	0
  5285  004CC8  23CE               	addwfc	(_V+69)& (0+255),f,b	;volatile
  5286  004CCA  23CF               	addwfc	(_V+70)& (0+255),f,b	;volatile
  5287  004CCC  23D0               	addwfc	(_V+71)& (0+255),f,b	;volatile
  5288                           
  5289                           ; BSR set to: 0
  5290                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  5291  004CCE  52E5               	movf	postdec1,f,c
  5292  004CD0  0012               	return		;funcret
  5293  004CD2                     __end_of_eaDogM_WriteString:
  5294                           	opt callstack 0
  5295                           
  5296 ;; *************** function _eaDogM_WriteCommand *****************
  5297 ;; Defined at:
  5298 ;;		line 143 in file "eadog.c"
  5299 ;; Parameters:    Size  Location     Type
  5300 ;;  cmd             1  [STACK] unsigned char 
  5301 ;; Auto vars:     Size  Location     Type
  5302 ;;		None
  5303 ;; Return value:  Size  Location     Type
  5304 ;;                  1  [STACK] void 
  5305 ;; Registers used:
  5306 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  5307 ;; Tracked objects:
  5308 ;;		On entry : 3F/3D
  5309 ;;		On exit  : 3F/0
  5310 ;;		Unchanged: 0/0
  5311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5316 ;;Total ram usage:        0 bytes
  5317 ;; Hardware stack levels used:    1
  5318 ;; Hardware stack levels required when called:   13
  5319 ;; This function calls:
  5320 ;;		_send_lcd_cmd_dma
  5321 ;; This function is called by:
  5322 ;;		_main
  5323 ;; This function uses a reentrant model
  5324 ;;
  5325                           
  5326                           	psect	text23
  5327  005F30                     __ptext23:
  5328                           	opt callstack 0
  5329  005F30                     _eaDogM_WriteCommand:
  5330                           	opt callstack 17
  5331                           
  5332                           ;eadog.c: 143: void eaDogM_WriteCommand(uint8_t cmd);eadog.c: 144: {;eadog.c: 145:  send
      +                          _lcd_cmd_dma(cmd);
  5333                           ;stkvar	_cmd @ sp[(0)+-1]
  5334                           
  5335                           ; BSR set to: 0
  5336                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5337                           ;incstack = 0
  5338  005F30  0EFF               	movlw	-1
  5339  005F32  50E3               	movf	plusw1,w,c
  5340  005F34  6EE6               	movwf	postinc1,c
  5341  005F36  EC80  F02A         	call	_send_lcd_cmd_dma	;wreg free
  5342                           
  5343                           ; BSR set to: 0
  5344                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  5345  005F3A  52E5               	movf	postdec1,f,c
  5346  005F3C  0012               	return		;funcret
  5347  005F3E                     __end_of_eaDogM_WriteCommand:
  5348                           	opt callstack 0
  5349                           
  5350 ;; *************** function _send_lcd_cmd_dma *****************
  5351 ;; Defined at:
  5352 ;;		line 186 in file "eadog.c"
  5353 ;; Parameters:    Size  Location     Type
  5354 ;;  strPtr          1  [STACK] unsigned char 
  5355 ;; Auto vars:     Size  Location     Type
  5356 ;;		None
  5357 ;; Return value:  Size  Location     Type
  5358 ;;                  1  [STACK] void 
  5359 ;; Registers used:
  5360 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  5361 ;; Tracked objects:
  5362 ;;		On entry : 0/0
  5363 ;;		On exit  : 3F/0
  5364 ;;		Unchanged: 0/0
  5365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5369 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5370 ;;Total ram usage:        0 bytes
  5371 ;; Hardware stack levels used:    1
  5372 ;; Hardware stack levels required when called:   12
  5373 ;; This function calls:
  5374 ;;		_printf
  5375 ;;		_ringBufS_flush
  5376 ;;		_start_lcd
  5377 ;;		_wait_lcd_done
  5378 ;;		_wait_lcd_set
  5379 ;; This function is called by:
  5380 ;;		_eaDogM_WriteCommand
  5381 ;;		_eaDogM_WriteStringAtPos
  5382 ;; This function uses a reentrant model
  5383 ;;
  5384                           
  5385                           	psect	text24
  5386  005500                     __ptext24:
  5387                           	opt callstack 0
  5388  005500                     _send_lcd_cmd_dma:
  5389                           	opt callstack 17
  5390                           
  5391                           ;eadog.c: 186: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 187: {;eadog.c: 188:  wait
      +                          _lcd_set();
  5392                           
  5393                           ; BSR set to: 0
  5394                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5395                           ;incstack = 0
  5396  005500  ECE3  F02F         	call	_wait_lcd_set	;wreg free
  5397                           
  5398                           ; BSR set to: 0
  5399                           ;eadog.c: 190:  ringBufS_flush(spi_link.tx1a, 0);
  5400  005504  0E00               	movlw	0
  5401  005506  6EE6               	movwf	postinc1,c
  5402  005508  0060  F1CF  FFE6   	movff	_spi_link+6,postinc1
  5403  00550E  0060  F1D3  FFE6   	movff	_spi_link+7,postinc1
  5404  005514  ECA9  F027         	call	_ringBufS_flush	;wreg free
  5405  005518  92BC               	bcf	16316,1,c	;volatile
  5406  00551A  94BC               	bcf	16316,2,c	;volatile
  5407                           
  5408                           ;eadog.c: 193:  DMA1CON0bits.EN = 0;
  5409  00551C  013B               	movlb	59	; () banked
  5410  00551E  9FFC               	bcf	252,7,b	;volatile
  5411                           
  5412                           ; BSR set to: 59
  5413                           ;eadog.c: 194:  DMA1SSZ = 1;
  5414  005520  0E00               	movlw	0
  5415  005522  6FF8               	movwf	248,b	;volatile
  5416  005524  0E01               	movlw	1
  5417  005526  6FF7               	movwf	247,b	;volatile
  5418                           
  5419                           ; BSR set to: 59
  5420                           ;eadog.c: 195:  DMA1CON0bits.EN = 1;
  5421  005528  8FFC               	bsf	252,7,b	;volatile
  5422                           
  5423                           ; BSR set to: 59
  5424                           ;eadog.c: 196:  printf("%c", strPtr);
  5425                           ;stkvar	_strPtr @ sp[(0)+-1]
  5426  00552A  0EFF               	movlw	-1
  5427  00552C  50E3               	movf	plusw1,w,c
  5428  00552E  6EE6               	movwf	postinc1,c
  5429  005530  0E00               	movlw	0
  5430  005532  6EE6               	movwf	postinc1,c
  5431  005534  0EB1               	movlw	STR_11& (0+255)
  5432  005536  6EE6               	movwf	postinc1,c
  5433  005538  0E03               	movlw	3
  5434  00553A  6EE6               	movwf	postinc1,c
  5435  00553C  ECC9  F029         	call	_printf	;wreg free
  5436  005540  94BE               	bcf	16318,2,c	;volatile
  5437                           
  5438                           ;eadog.c: 198:  start_lcd();
  5439  005542  ECE6  F02F         	call	_start_lcd	;wreg free
  5440                           
  5441                           ; BSR set to: 59
  5442                           ;eadog.c: 199:  wait_lcd_done();
  5443  005546  EC27  F02F         	call	_wait_lcd_done	;wreg free
  5444                           
  5445                           ; BSR set to: 0
  5446  00554A  82BC               	bsf	16316,1,c	;volatile
  5447                           
  5448                           ; BSR set to: 0
  5449                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  5450  00554C  52E5               	movf	postdec1,f,c
  5451  00554E  0012               	return		;funcret
  5452  005550                     __end_of_send_lcd_cmd_dma:
  5453                           	opt callstack 0
  5454                           
  5455 ;; *************** function _wait_lcd_set *****************
  5456 ;; Defined at:
  5457 ;;		line 114 in file "eadog.c"
  5458 ;; Parameters:    Size  Location     Type
  5459 ;;		None
  5460 ;; Auto vars:     Size  Location     Type
  5461 ;;		None
  5462 ;; Return value:  Size  Location     Type
  5463 ;;                  1  [STACK] void 
  5464 ;; Registers used:
  5465 ;;		None
  5466 ;; Tracked objects:
  5467 ;;		On entry : 0/0
  5468 ;;		On exit  : 3F/0
  5469 ;;		Unchanged: 0/0
  5470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5474 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5475 ;;Total ram usage:        0 bytes
  5476 ;; Hardware stack levels used:    1
  5477 ;; Hardware stack levels required when called:    3
  5478 ;; This function calls:
  5479 ;;		Nothing
  5480 ;; This function is called by:
  5481 ;;		_eaDogM_WriteString
  5482 ;;		_send_lcd_cmd_dma
  5483 ;; This function uses a reentrant model
  5484 ;;
  5485                           
  5486                           	psect	text25
  5487  005FC6                     __ptext25:
  5488                           	opt callstack 0
  5489  005FC6                     _wait_lcd_set:
  5490                           	opt callstack 25
  5491                           
  5492                           ;eadog.c: 116:  spi_link.LCD_DATA = 1;
  5493                           
  5494                           ; BSR set to: 0
  5495                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5496                           ;incstack = 0
  5497  005FC6  0100               	movlb	0	; () banked
  5498  005FC8  876D               	bsf	_spi_link& (0+255),3,b	;volatile
  5499                           
  5500                           ; BSR set to: 0
  5501                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  5502  005FCA  0012               	return		;funcret
  5503  005FCC                     __end_of_wait_lcd_set:
  5504                           	opt callstack 0
  5505                           
  5506 ;; *************** function _wait_lcd_done *****************
  5507 ;; Defined at:
  5508 ;;		line 124 in file "eadog.c"
  5509 ;; Parameters:    Size  Location     Type
  5510 ;;		None
  5511 ;; Auto vars:     Size  Location     Type
  5512 ;;		None
  5513 ;; Return value:  Size  Location     Type
  5514 ;;                  1  [STACK] void 
  5515 ;; Registers used:
  5516 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5517 ;; Tracked objects:
  5518 ;;		On entry : 0/0
  5519 ;;		On exit  : 3F/0
  5520 ;;		Unchanged: 0/0
  5521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5525 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5526 ;;Total ram usage:        0 bytes
  5527 ;; Hardware stack levels used:    1
  5528 ;; Hardware stack levels required when called:    4
  5529 ;; This function calls:
  5530 ;;		_wdtdelay
  5531 ;; This function is called by:
  5532 ;;		_main
  5533 ;;		_send_lcd_cmd_dma
  5534 ;; This function uses a reentrant model
  5535 ;;
  5536                           
  5537                           	psect	text26
  5538  005E4E                     __ptext26:
  5539                           	opt callstack 0
  5540  005E4E                     _wait_lcd_done:
  5541                           	opt callstack 26
  5542                           
  5543                           ;eadog.c: 126:  while (spi_link.LCD_DATA);
  5544                           
  5545                           ; BSR set to: 0
  5546                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5547                           ;incstack = 0
  5548  005E4E  0100               	movlb	0	; () banked
  5549  005E50  B76D               	btfsc	_spi_link& (0+255),3,b	;volatile
  5550  005E52  D7FD               	goto	_wait_lcd_done
  5551                           
  5552                           ; BSR set to: 0
  5553                           ;eadog.c: 127:  wdtdelay(50);
  5554  005E54  0E32               	movlw	50
  5555  005E56  6EE6               	movwf	postinc1,c
  5556  005E58  0E00               	movlw	0
  5557  005E5A  6EE6               	movwf	postinc1,c
  5558  005E5C  0E00               	movlw	0
  5559  005E5E  6EE6               	movwf	postinc1,c
  5560  005E60  0E00               	movlw	0
  5561  005E62  6EE6               	movwf	postinc1,c
  5562  005E64  EC29  F02A         	call	_wdtdelay	;wreg free
  5563                           
  5564                           ; BSR set to: 0
  5565                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  5566  005E68  0012               	return		;funcret
  5567  005E6A                     __end_of_wait_lcd_done:
  5568                           	opt callstack 0
  5569                           
  5570 ;; *************** function _wdtdelay *****************
  5571 ;; Defined at:
  5572 ;;		line 21 in file "eadog.c"
  5573 ;; Parameters:    Size  Location     Type
  5574 ;;  delay           4  [STACK] unsigned long 
  5575 ;; Auto vars:     Size  Location     Type
  5576 ;;		None
  5577 ;; Return value:  Size  Location     Type
  5578 ;;                  1  [STACK] void 
  5579 ;; Registers used:
  5580 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5581 ;; Tracked objects:
  5582 ;;		On entry : 0/0
  5583 ;;		On exit  : 3F/0
  5584 ;;		Unchanged: 0/0
  5585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5589 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5590 ;;Total ram usage:        0 bytes
  5591 ;; Hardware stack levels used:    1
  5592 ;; Hardware stack levels required when called:    3
  5593 ;; This function calls:
  5594 ;;		Nothing
  5595 ;; This function is called by:
  5596 ;;		_init_display
  5597 ;;		_send_lcd_cmd
  5598 ;;		_send_lcd_cmd_long
  5599 ;;		_wait_lcd_done
  5600 ;; This function uses a reentrant model
  5601 ;;
  5602                           
  5603                           	psect	text27
  5604  005452                     __ptext27:
  5605                           	opt callstack 0
  5606  005452                     _wdtdelay:
  5607                           	opt callstack 26
  5608                           
  5609                           ;eadog.c: 21: void wdtdelay(uint32_t delay);eadog.c: 22: {;eadog.c: 23:  static uint32_t
      +                           dcount;;eadog.c: 25:  for (dcount = 0; dcount <= delay; dcount++) {
  5610                           
  5611                           ; BSR set to: 0
  5612                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5613                           ;incstack = 0
  5614  005452  0100               	movlb	0	; () banked
  5615  005454  6B85               	clrf	wdtdelay@dcount& (0+255),b
  5616  005456  6B86               	clrf	(wdtdelay@dcount+1)& (0+255),b
  5617  005458  6B87               	clrf	(wdtdelay@dcount+2)& (0+255),b
  5618  00545A  6B88               	clrf	(wdtdelay@dcount+3)& (0+255),b
  5619  00545C  D009               	goto	l5450
  5620  00545E                     l1305:
  5621                           
  5622                           ; BSR set to: 0
  5623                           ;eadog.c: 26:   __nop();
  5624  00545E  F000               	nop	
  5625  005460  0004               	clrwdt		;# 
  5626                           
  5627                           ;eadog.c: 28:  };
  5628  005462  0E01               	movlw	1
  5629  005464  0100               	movlb	0	; () banked
  5630  005466  2785               	addwf	wdtdelay@dcount& (0+255),f,b
  5631  005468  0E00               	movlw	0
  5632  00546A  2386               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  5633  00546C  2387               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  5634  00546E  2388               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  5635  005470                     l5450:
  5636                           
  5637                           ; BSR set to: 0
  5638                           ;stkvar	_delay @ sp[(0)+-4]
  5639  005470  0EFC               	movlw	-4
  5640  005472  006F FF8C  F03D    	movff	plusw1,btemp
  5641  005478  5185               	movf	wdtdelay@dcount& (0+255),w,b
  5642  00547A  5C3D               	subwf	btemp,w,c
  5643  00547C  0EFD               	movlw	-3
  5644  00547E  006F FF8C  F03D    	movff	plusw1,btemp
  5645  005484  5186               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  5646  005486  583D               	subwfb	btemp,w,c
  5647  005488  0EFE               	movlw	-2
  5648  00548A  006F FF8C  F03D    	movff	plusw1,btemp
  5649  005490  5187               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  5650  005492  583D               	subwfb	btemp,w,c
  5651  005494  0EFF               	movlw	-1
  5652  005496  006F FF8C  F03D    	movff	plusw1,btemp
  5653  00549C  5188               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  5654  00549E  583D               	subwfb	btemp,w,c
  5655  0054A0  B0D8               	btfsc	status,0,c
  5656  0054A2  D7DD               	goto	l1305
  5657                           
  5658                           ; BSR set to: 0
  5659                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  5660  0054A4  52E5               	movf	postdec1,f,c
  5661  0054A6  52E5               	movf	postdec1,f,c
  5662  0054A8  52E5               	movf	postdec1,f,c
  5663  0054AA  52E5               	movf	postdec1,f,c
  5664  0054AC  0012               	return		;funcret
  5665  0054AE                     __end_of_wdtdelay:
  5666                           	opt callstack 0
  5667                           
  5668 ;; *************** function _start_lcd *****************
  5669 ;; Defined at:
  5670 ;;		line 109 in file "eadog.c"
  5671 ;; Parameters:    Size  Location     Type
  5672 ;;		None
  5673 ;; Auto vars:     Size  Location     Type
  5674 ;;		None
  5675 ;; Return value:  Size  Location     Type
  5676 ;;                  1  [STACK] void 
  5677 ;; Registers used:
  5678 ;;		None
  5679 ;; Tracked objects:
  5680 ;;		On entry : 0/3B
  5681 ;;		On exit  : 3F/3B
  5682 ;;		Unchanged: 0/0
  5683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5687 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5688 ;;Total ram usage:        0 bytes
  5689 ;; Hardware stack levels used:    1
  5690 ;; Hardware stack levels required when called:    3
  5691 ;; This function calls:
  5692 ;;		Nothing
  5693 ;; This function is called by:
  5694 ;;		_eaDogM_WriteString
  5695 ;;		_send_lcd_cmd_dma
  5696 ;; This function uses a reentrant model
  5697 ;;
  5698                           
  5699                           	psect	text28
  5700  005FCC                     __ptext28:
  5701                           	opt callstack 0
  5702  005FCC                     _start_lcd:
  5703                           	opt callstack 25
  5704                           
  5705                           ;eadog.c: 111:  DMA1CON0bits.DMA1SIRQEN = 1;
  5706                           
  5707                           ; BSR set to: 0
  5708                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5709                           ;incstack = 0
  5710  005FCC  013B               	movlb	59	; () banked
  5711  005FCE  8DFC               	bsf	252,6,b	;volatile
  5712                           
  5713                           ; BSR set to: 59
  5714                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  5715  005FD0  0012               	return		;funcret
  5716  005FD2                     __end_of_start_lcd:
  5717                           	opt callstack 0
  5718                           
  5719 ;; *************** function _ringBufS_flush *****************
  5720 ;; Defined at:
  5721 ;;		line 76 in file "ringbufs.c"
  5722 ;; Parameters:    Size  Location     Type
  5723 ;;  _this           2  [STACK] PTR struct ringBufS_t
  5724 ;;		 -> ring_buf1(67), 
  5725 ;;  clearBuffer     1  [STACK] const char 
  5726 ;; Auto vars:     Size  Location     Type
  5727 ;;		None
  5728 ;; Return value:  Size  Location     Type
  5729 ;;                  1  [STACK] void 
  5730 ;; Registers used:
  5731 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  5732 ;; Tracked objects:
  5733 ;;		On entry : 3F/0
  5734 ;;		On exit  : 0/0
  5735 ;;		Unchanged: 0/0
  5736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5741 ;;Total ram usage:        0 bytes
  5742 ;; Hardware stack levels used:    1
  5743 ;; Hardware stack levels required when called:    4
  5744 ;; This function calls:
  5745 ;;		_memset
  5746 ;; This function is called by:
  5747 ;;		_eaDogM_WriteString
  5748 ;;		_send_lcd_cmd_dma
  5749 ;; This function uses a reentrant model
  5750 ;;
  5751                           
  5752                           	psect	text29
  5753  004F52                     __ptext29:
  5754                           	opt callstack 0
  5755  004F52                     _ringBufS_flush:
  5756                           	opt callstack 24
  5757                           
  5758                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  5759                           ;stkvar	__this @ sp[(0)+-2]
  5760                           
  5761                           ; BSR set to: 59
  5762                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5763                           ;incstack = 0
  5764  004F52  0EFE               	movlw	-2
  5765  004F54  006F FF8C  F047    	movff	plusw1,btemp+10
  5766  004F5A  0EFF               	movlw	-1
  5767  004F5C  006F FF8C  F048    	movff	plusw1,btemp+11
  5768  004F62  0E42               	movlw	66
  5769  004F64  2447               	addwf	btemp+10,w,c
  5770  004F66  6ED9               	movwf	fsr2l,c
  5771  004F68  0E00               	movlw	0
  5772  004F6A  2048               	addwfc	btemp+11,w,c
  5773  004F6C  6EDA               	movwf	fsr2h,c
  5774  004F6E  0E00               	movlw	0
  5775  004F70  6EDF               	movwf	indf2,c
  5776                           
  5777                           ;ringbufs.c: 79:  _this->head = 0;
  5778                           ;stkvar	__this @ sp[(0)+-2]
  5779  004F72  0EFE               	movlw	-2
  5780  004F74  006F FF8C  F047    	movff	plusw1,btemp+10
  5781  004F7A  0EFF               	movlw	-1
  5782  004F7C  006F FF8C  F048    	movff	plusw1,btemp+11
  5783  004F82  0E40               	movlw	64
  5784  004F84  2447               	addwf	btemp+10,w,c
  5785  004F86  6ED9               	movwf	fsr2l,c
  5786  004F88  0E00               	movlw	0
  5787  004F8A  2048               	addwfc	btemp+11,w,c
  5788  004F8C  6EDA               	movwf	fsr2h,c
  5789  004F8E  0E00               	movlw	0
  5790  004F90  6EDF               	movwf	indf2,c
  5791                           
  5792                           ;ringbufs.c: 80:  _this->tail = 0;
  5793                           ;stkvar	__this @ sp[(0)+-2]
  5794  004F92  0EFE               	movlw	-2
  5795  004F94  006F FF8C  F047    	movff	plusw1,btemp+10
  5796  004F9A  0EFF               	movlw	-1
  5797  004F9C  006F FF8C  F048    	movff	plusw1,btemp+11
  5798  004FA2  0E41               	movlw	65
  5799  004FA4  2447               	addwf	btemp+10,w,c
  5800  004FA6  6ED9               	movwf	fsr2l,c
  5801  004FA8  0E00               	movlw	0
  5802  004FAA  2048               	addwfc	btemp+11,w,c
  5803  004FAC  6EDA               	movwf	fsr2h,c
  5804  004FAE  0E00               	movlw	0
  5805  004FB0  6EDF               	movwf	indf2,c
  5806                           
  5807                           ;ringbufs.c: 81:  if (clearBuffer) {
  5808                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  5809  004FB2  0EFD               	movlw	-3
  5810  004FB4  50E3               	movf	plusw1,w,c
  5811  004FB6  B4D8               	btfsc	status,2,c
  5812  004FB8  D011               	goto	l1445
  5813                           
  5814                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  5815  004FBA  0E40               	movlw	64
  5816  004FBC  6EE6               	movwf	postinc1,c
  5817  004FBE  0E00               	movlw	0
  5818  004FC0  6EE6               	movwf	postinc1,c
  5819  004FC2  0E00               	movlw	0
  5820  004FC4  6EE6               	movwf	postinc1,c
  5821  004FC6  0E00               	movlw	0
  5822  004FC8  6EE6               	movwf	postinc1,c
  5823                           
  5824                           ;stkvar	__this @ sp[(-4)+-2]
  5825  004FCA  0EFA               	movlw	-6
  5826  004FCC  006F FF8F FFE6     	movff	plusw1,postinc1
  5827  004FD2  006F FF8F FFE6     	movff	plusw1,postinc1
  5828  004FD8  EC7C  F019         	call	_memset	;wreg free
  5829  004FDC                     l1445:
  5830                           
  5831                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  5832  004FDC  52E5               	movf	postdec1,f,c
  5833  004FDE  52E5               	movf	postdec1,f,c
  5834  004FE0  52E5               	movf	postdec1,f,c
  5835  004FE2  0012               	return		;funcret
  5836  004FE4                     __end_of_ringBufS_flush:
  5837                           	opt callstack 0
  5838                           
  5839 ;; *************** function _memset *****************
  5840 ;; Defined at:
  5841 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/memset.c"
  5842 ;; Parameters:    Size  Location     Type
  5843 ;;  dest            2  [STACK] PTR void 
  5844 ;;		 -> ring_buf2(67), ring_buf1(67), 
  5845 ;;  c               2  [STACK] int 
  5846 ;;  n               2  [STACK] unsigned int 
  5847 ;; Auto vars:     Size  Location     Type
  5848 ;;  s               2  [STACK] PTR unsigned char 
  5849 ;;		 -> ring_buf2(67), ring_buf1(67), 
  5850 ;;  k               2  [STACK] unsigned int 
  5851 ;; Return value:  Size  Location     Type
  5852 ;;                  2  [STACK] PTR void 
  5853 ;; Registers used:
  5854 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  5855 ;; Tracked objects:
  5856 ;;		On entry : 0/0
  5857 ;;		On exit  : 0/0
  5858 ;;		Unchanged: 0/0
  5859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5863 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5864 ;;Total ram usage:        0 bytes
  5865 ;; Hardware stack levels used:    1
  5866 ;; Hardware stack levels required when called:    3
  5867 ;; This function calls:
  5868 ;;		Nothing
  5869 ;; This function is called by:
  5870 ;;		_ringBufS_init
  5871 ;;		_ringBufS_flush
  5872 ;; This function uses a reentrant model
  5873 ;;
  5874                           
  5875                           	psect	text30
  5876  0032F8                     __ptext30:
  5877                           	opt callstack 0
  5878  0032F8                     _memset:
  5879                           	opt callstack 0
  5880                           
  5881                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5882  0032F8  52E6               	movf	postinc1,f,c
  5883  0032FA  52E6               	movf	postinc1,f,c
  5884  0032FC  52E6               	movf	postinc1,f,c
  5885  0032FE  52E6               	movf	postinc1,f,c
  5886                           
  5887                           ;stkvar	_dest @ sp[(-4)+-2]
  5888                           
  5889                           ;incstack = 0
  5890  003300  0EFA               	movlw	-6
  5891  003302  006F FF8C  F047    	movff	plusw1,btemp+10
  5892  003308  0EFB               	movlw	-5
  5893  00330A  006F FF8C  F048    	movff	plusw1,btemp+11
  5894                           
  5895                           ;stkvar	_s @ sp[(-4)+0]
  5896  003310  0EFD               	movlw	-3
  5897  003312  0060  F123  FFE3   	movff	btemp+11,plusw1
  5898  003318  0EFC               	movlw	-4
  5899  00331A  0060  F11F  FFE3   	movff	btemp+10,plusw1
  5900                           
  5901                           ;stkvar	_n @ sp[(-4)+-6]
  5902  003320  0EF6               	movlw	-10
  5903  003322  006F FF8C  F03D    	movff	plusw1,btemp
  5904  003328  0EF7               	movlw	-9
  5905  00332A  50E3               	movf	plusw1,w,c
  5906  00332C  103D               	iorwf	btemp,w,c
  5907  00332E  B4D8               	btfsc	status,2,c
  5908  003330  D154               	goto	u4660
  5909                           
  5910                           ;stkvar	_c @ sp[(-4)+-4]
  5911                           ;stkvar	_s @ sp[(-4)+0]
  5912  003332  0EFC               	movlw	-4
  5913  003334  006F FF8F FFD9     	movff	plusw1,fsr2l
  5914  00333A  0EFD               	movlw	-3
  5915  00333C  006F FF8F FFDA     	movff	plusw1,fsr2h
  5916  003342  0EF8               	movlw	-8
  5917  003344  006F FF8F FFDF     	movff	plusw1,indf2
  5918                           
  5919                           ;stkvar	_c @ sp[(-4)+-4]
  5920                           ;stkvar	_n @ sp[(-4)+-6]
  5921                           ;stkvar	_s @ sp[(-4)+0]
  5922  00334A  0EFC               	movlw	-4
  5923  00334C  006F FF8C  F047    	movff	plusw1,btemp+10
  5924  003352  0EFD               	movlw	-3
  5925  003354  006F FF8C  F048    	movff	plusw1,btemp+11
  5926  00335A  0EF6               	movlw	-10
  5927  00335C  50E3               	movf	plusw1,w,c
  5928  00335E  2647               	addwf	btemp+10,f,c
  5929  003360  0EF7               	movlw	-9
  5930  003362  50E3               	movf	plusw1,w,c
  5931  003364  2248               	addwfc	btemp+11,f,c
  5932  003366  0EFF               	movlw	255
  5933  003368  2447               	addwf	btemp+10,w,c
  5934  00336A  6ED9               	movwf	fsr2l,c
  5935  00336C  0EFF               	movlw	255
  5936  00336E  2048               	addwfc	btemp+11,w,c
  5937  003370  6EDA               	movwf	fsr2h,c
  5938  003372  0EF8               	movlw	-8
  5939  003374  006F FF8F FFDF     	movff	plusw1,indf2
  5940                           
  5941                           ;stkvar	_n @ sp[(-4)+-6]
  5942  00337A  0EF7               	movlw	-9
  5943  00337C  50E3               	movf	plusw1,w,c
  5944  00337E  E108               	bnz	l7428
  5945  003380  0EF6               	movlw	-10
  5946  003382  006F FF8C  F03D    	movff	plusw1,btemp
  5947  003388  0E03               	movlw	3
  5948  00338A  5E3D               	subwf	btemp,f,c
  5949  00338C  A0D8               	btfss	status,0,c
  5950  00338E  D125               	goto	u4660
  5951  003390                     l7428:
  5952                           
  5953                           ;stkvar	_c @ sp[(-4)+-4]
  5954                           ;stkvar	_s @ sp[(-4)+0]
  5955  003390  0EFC               	movlw	-4
  5956  003392  006F FF8C  F047    	movff	plusw1,btemp+10
  5957  003398  0EFD               	movlw	-3
  5958  00339A  006F FF8C  F048    	movff	plusw1,btemp+11
  5959  0033A0  0E01               	movlw	1
  5960  0033A2  2447               	addwf	btemp+10,w,c
  5961  0033A4  6ED9               	movwf	fsr2l,c
  5962  0033A6  0E00               	movlw	0
  5963  0033A8  2048               	addwfc	btemp+11,w,c
  5964  0033AA  6EDA               	movwf	fsr2h,c
  5965  0033AC  0EF8               	movlw	-8
  5966  0033AE  006F FF8F FFDF     	movff	plusw1,indf2
  5967                           
  5968                           ;stkvar	_c @ sp[(-4)+-4]
  5969                           ;stkvar	_s @ sp[(-4)+0]
  5970  0033B4  0EFC               	movlw	-4
  5971  0033B6  006F FF8C  F047    	movff	plusw1,btemp+10
  5972  0033BC  0EFD               	movlw	-3
  5973  0033BE  006F FF8C  F048    	movff	plusw1,btemp+11
  5974  0033C4  0E02               	movlw	2
  5975  0033C6  2447               	addwf	btemp+10,w,c
  5976  0033C8  6ED9               	movwf	fsr2l,c
  5977  0033CA  0E00               	movlw	0
  5978  0033CC  2048               	addwfc	btemp+11,w,c
  5979  0033CE  6EDA               	movwf	fsr2h,c
  5980  0033D0  0EF8               	movlw	-8
  5981  0033D2  006F FF8F FFDF     	movff	plusw1,indf2
  5982                           
  5983                           ;stkvar	_c @ sp[(-4)+-4]
  5984                           ;stkvar	_n @ sp[(-4)+-6]
  5985                           ;stkvar	_s @ sp[(-4)+0]
  5986  0033D8  0EFC               	movlw	-4
  5987  0033DA  006F FF8C  F047    	movff	plusw1,btemp+10
  5988  0033E0  0EFD               	movlw	-3
  5989  0033E2  006F FF8C  F048    	movff	plusw1,btemp+11
  5990  0033E8  0EF6               	movlw	-10
  5991  0033EA  50E3               	movf	plusw1,w,c
  5992  0033EC  2647               	addwf	btemp+10,f,c
  5993  0033EE  0EF7               	movlw	-9
  5994  0033F0  50E3               	movf	plusw1,w,c
  5995  0033F2  2248               	addwfc	btemp+11,f,c
  5996  0033F4  0EFE               	movlw	254
  5997  0033F6  2447               	addwf	btemp+10,w,c
  5998  0033F8  6ED9               	movwf	fsr2l,c
  5999  0033FA  0EFF               	movlw	255
  6000  0033FC  2048               	addwfc	btemp+11,w,c
  6001  0033FE  6EDA               	movwf	fsr2h,c
  6002  003400  0EF8               	movlw	-8
  6003  003402  006F FF8F FFDF     	movff	plusw1,indf2
  6004                           
  6005                           ;stkvar	_c @ sp[(-4)+-4]
  6006                           ;stkvar	_n @ sp[(-4)+-6]
  6007                           ;stkvar	_s @ sp[(-4)+0]
  6008  003408  0EFC               	movlw	-4
  6009  00340A  006F FF8C  F047    	movff	plusw1,btemp+10
  6010  003410  0EFD               	movlw	-3
  6011  003412  006F FF8C  F048    	movff	plusw1,btemp+11
  6012  003418  0EF6               	movlw	-10
  6013  00341A  50E3               	movf	plusw1,w,c
  6014  00341C  2647               	addwf	btemp+10,f,c
  6015  00341E  0EF7               	movlw	-9
  6016  003420  50E3               	movf	plusw1,w,c
  6017  003422  2248               	addwfc	btemp+11,f,c
  6018  003424  0EFD               	movlw	253
  6019  003426  2447               	addwf	btemp+10,w,c
  6020  003428  6ED9               	movwf	fsr2l,c
  6021  00342A  0EFF               	movlw	255
  6022  00342C  2048               	addwfc	btemp+11,w,c
  6023  00342E  6EDA               	movwf	fsr2h,c
  6024  003430  0EF8               	movlw	-8
  6025  003432  006F FF8F FFDF     	movff	plusw1,indf2
  6026                           
  6027                           ;stkvar	_n @ sp[(-4)+-6]
  6028  003438  0EF7               	movlw	-9
  6029  00343A  50E3               	movf	plusw1,w,c
  6030  00343C  E108               	bnz	l7434
  6031  00343E  0EF6               	movlw	-10
  6032  003440  006F FF8C  F03D    	movff	plusw1,btemp
  6033  003446  0E07               	movlw	7
  6034  003448  5E3D               	subwf	btemp,f,c
  6035  00344A  A0D8               	btfss	status,0,c
  6036  00344C  D0C6               	goto	u4660
  6037  00344E                     l7434:
  6038                           
  6039                           ;stkvar	_c @ sp[(-4)+-4]
  6040                           ;stkvar	_s @ sp[(-4)+0]
  6041  00344E  0EFC               	movlw	-4
  6042  003450  006F FF8C  F047    	movff	plusw1,btemp+10
  6043  003456  0EFD               	movlw	-3
  6044  003458  006F FF8C  F048    	movff	plusw1,btemp+11
  6045  00345E  0E03               	movlw	3
  6046  003460  2447               	addwf	btemp+10,w,c
  6047  003462  6ED9               	movwf	fsr2l,c
  6048  003464  0E00               	movlw	0
  6049  003466  2048               	addwfc	btemp+11,w,c
  6050  003468  6EDA               	movwf	fsr2h,c
  6051  00346A  0EF8               	movlw	-8
  6052  00346C  006F FF8F FFDF     	movff	plusw1,indf2
  6053                           
  6054                           ;stkvar	_c @ sp[(-4)+-4]
  6055                           ;stkvar	_n @ sp[(-4)+-6]
  6056                           ;stkvar	_s @ sp[(-4)+0]
  6057  003472  0EFC               	movlw	-4
  6058  003474  006F FF8C  F047    	movff	plusw1,btemp+10
  6059  00347A  0EFD               	movlw	-3
  6060  00347C  006F FF8C  F048    	movff	plusw1,btemp+11
  6061  003482  0EF6               	movlw	-10
  6062  003484  50E3               	movf	plusw1,w,c
  6063  003486  2647               	addwf	btemp+10,f,c
  6064  003488  0EF7               	movlw	-9
  6065  00348A  50E3               	movf	plusw1,w,c
  6066  00348C  2248               	addwfc	btemp+11,f,c
  6067  00348E  0EFC               	movlw	252
  6068  003490  2447               	addwf	btemp+10,w,c
  6069  003492  6ED9               	movwf	fsr2l,c
  6070  003494  0EFF               	movlw	255
  6071  003496  2048               	addwfc	btemp+11,w,c
  6072  003498  6EDA               	movwf	fsr2h,c
  6073  00349A  0EF8               	movlw	-8
  6074  00349C  006F FF8F FFDF     	movff	plusw1,indf2
  6075                           
  6076                           ;stkvar	_n @ sp[(-4)+-6]
  6077  0034A2  0EF7               	movlw	-9
  6078  0034A4  50E3               	movf	plusw1,w,c
  6079  0034A6  E108               	bnz	l7440
  6080  0034A8  0EF6               	movlw	-10
  6081  0034AA  006F FF8C  F03D    	movff	plusw1,btemp
  6082  0034B0  0E09               	movlw	9
  6083  0034B2  5E3D               	subwf	btemp,f,c
  6084  0034B4  A0D8               	btfss	status,0,c
  6085  0034B6  D091               	goto	u4660
  6086  0034B8                     l7440:
  6087                           
  6088                           ;stkvar	_s @ sp[(-4)+0]
  6089  0034B8  0EFC               	movlw	-4
  6090  0034BA  006F FF8C  F047    	movff	plusw1,btemp+10
  6091  0034C0  1E47               	comf	btemp+10,f,c
  6092  0034C2  0EFD               	movlw	-3
  6093  0034C4  006F FF8C  F048    	movff	plusw1,btemp+11
  6094  0034CA  1E48               	comf	btemp+11,f,c
  6095  0034CC  2A47               	incf	btemp+10,f,c
  6096  0034CE  B4D8               	btfsc	status,2,c
  6097  0034D0  2A48               	incf	btemp+11,f,c
  6098  0034D2  0E03               	movlw	3
  6099  0034D4  1647               	andwf	btemp+10,f,c
  6100  0034D6  0E00               	movlw	0
  6101  0034D8  1648               	andwf	btemp+11,f,c
  6102                           
  6103                           ;stkvar	_k @ sp[(-4)+2]
  6104  0034DA  0EFE               	movlw	-2
  6105  0034DC  0060  F11F  FFE3   	movff	btemp+10,plusw1
  6106  0034E2  0EFF               	movlw	-1
  6107  0034E4  0060  F123  FFE3   	movff	btemp+11,plusw1
  6108                           
  6109                           ;stkvar	_k @ sp[(-4)+2]
  6110                           ;stkvar	_s @ sp[(-4)+0]
  6111  0034EA  0EFC               	movlw	-4
  6112  0034EC  50E3               	movf	plusw1,w,c
  6113  0034EE  6E3D               	movwf	btemp,c
  6114  0034F0  0EFE               	movlw	-2
  6115  0034F2  50E3               	movf	plusw1,w,c
  6116  0034F4  263D               	addwf	btemp,f,c
  6117  0034F6  0EFC               	movlw	-4
  6118  0034F8  0060  F0F7  FFE3   	movff	btemp,plusw1
  6119  0034FE  0EFD               	movlw	-3
  6120  003500  50E3               	movf	plusw1,w,c
  6121  003502  6E3D               	movwf	btemp,c
  6122  003504  0EFF               	movlw	-1
  6123  003506  50E3               	movf	plusw1,w,c
  6124  003508  223D               	addwfc	btemp,f,c
  6125  00350A  0EFD               	movlw	-3
  6126  00350C  0060  F0F7  FFE3   	movff	btemp,plusw1
  6127                           
  6128                           ;stkvar	_k @ sp[(-4)+2]
  6129                           ;stkvar	_n @ sp[(-4)+-6]
  6130  003512  0EF6               	movlw	-10
  6131  003514  50E3               	movf	plusw1,w,c
  6132  003516  6E3D               	movwf	btemp,c
  6133  003518  0EFE               	movlw	-2
  6134  00351A  50E3               	movf	plusw1,w,c
  6135  00351C  5E3D               	subwf	btemp,f,c
  6136  00351E  0EF6               	movlw	-10
  6137  003520  0060  F0F7  FFE3   	movff	btemp,plusw1
  6138  003526  0EF7               	movlw	-9
  6139  003528  50E3               	movf	plusw1,w,c
  6140  00352A  6E3D               	movwf	btemp,c
  6141  00352C  0EFF               	movlw	-1
  6142  00352E  50E3               	movf	plusw1,w,c
  6143  003530  5A3D               	subwfb	btemp,f,c
  6144  003532  0EF7               	movlw	-9
  6145  003534  0060  F0F7  FFE3   	movff	btemp,plusw1
  6146  00353A  0EFC               	movlw	252
  6147  00353C  6E47               	movwf	btemp+10,c
  6148  00353E  0EFF               	movlw	255
  6149  003540  6E48               	movwf	btemp+11,c
  6150                           
  6151                           ;stkvar	_n @ sp[(-4)+-6]
  6152  003542  0EF6               	movlw	-10
  6153  003544  006F FF8C  F03D    	movff	plusw1,btemp
  6154  00354A  5047               	movf	btemp+10,w,c
  6155  00354C  163D               	andwf	btemp,f,c
  6156  00354E  0EF6               	movlw	-10
  6157  003550  0060  F0F7  FFE3   	movff	btemp,plusw1
  6158  003556  0EF7               	movlw	-9
  6159  003558  006F FF8C  F03D    	movff	plusw1,btemp
  6160  00355E  5048               	movf	btemp+11,w,c
  6161  003560  163D               	andwf	btemp,f,c
  6162  003562  0EF7               	movlw	-9
  6163  003564  D02E               	goto	L18
  6164  003566                     l7448:
  6165                           
  6166                           ;stkvar	_c @ sp[(-4)+-4]
  6167                           ;stkvar	_s @ sp[(-4)+0]
  6168  003566  0EFC               	movlw	-4
  6169  003568  006F FF8F FFD9     	movff	plusw1,fsr2l
  6170  00356E  0EFD               	movlw	-3
  6171  003570  006F FF8F FFDA     	movff	plusw1,fsr2h
  6172  003576  0EF8               	movlw	-8
  6173  003578  006F FF8F FFDF     	movff	plusw1,indf2
  6174                           
  6175                           ;stkvar	_n @ sp[(-4)+-6]
  6176  00357E  0EF6               	movlw	-10
  6177  003580  006F FF8C  F03D    	movff	plusw1,btemp
  6178  003586  0E01               	movlw	1
  6179  003588  5E3D               	subwf	btemp,f,c
  6180  00358A  0EF6               	movlw	-10
  6181  00358C  0060  F0F7  FFE3   	movff	btemp,plusw1
  6182  003592  0EF7               	movlw	-9
  6183  003594  006F FF8C  F03D    	movff	plusw1,btemp
  6184  00359A  0E00               	movlw	0
  6185  00359C  5A3D               	subwfb	btemp,f,c
  6186  00359E  0EF7               	movlw	-9
  6187  0035A0  0060  F0F7  FFE3   	movff	btemp,plusw1
  6188                           
  6189                           ;stkvar	_s @ sp[(-4)+0]
  6190  0035A6  0EFC               	movlw	-4
  6191  0035A8  50E3               	movf	plusw1,w,c
  6192  0035AA  0F01               	addlw	1
  6193  0035AC  6E3D               	movwf	btemp,c
  6194  0035AE  0EFC               	movlw	-4
  6195  0035B0  0060  F0F7  FFE3   	movff	btemp,plusw1
  6196  0035B6  6A3D               	clrf	btemp,c
  6197  0035B8  0EFD               	movlw	-3
  6198  0035BA  50E3               	movf	plusw1,w,c
  6199  0035BC  203D               	addwfc	btemp,w,c
  6200  0035BE  6E3D               	movwf	btemp,c
  6201  0035C0  0EFD               	movlw	-3
  6202  0035C2                     L18:
  6203  0035C2  0060  F0F7  FFE3   	movff	btemp,plusw1
  6204                           
  6205                           ;stkvar	_n @ sp[(-4)+-6]
  6206  0035C8  0EF6               	movlw	-10
  6207  0035CA  006F FF8C  F03D    	movff	plusw1,btemp
  6208  0035D0  0EF7               	movlw	-9
  6209  0035D2  50E3               	movf	plusw1,w,c
  6210  0035D4  103D               	iorwf	btemp,w,c
  6211  0035D6  A4D8               	btfss	status,2,c
  6212  0035D8  D7C6               	goto	l7448
  6213  0035DA                     u4660:
  6214                           
  6215                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  6216  0035DA  0EF6               	movlw	246
  6217  0035DC  26E1               	addwf	fsr1l,f,c
  6218  0035DE  0EFF               	movlw	255
  6219  0035E0  22E2               	addwfc	fsr1h,f,c
  6220  0035E2  0012               	return		;funcret
  6221  0035E4                     __end_of_memset:
  6222                           	opt callstack 0
  6223                           
  6224 ;; *************** function _printf *****************
  6225 ;; Defined at:
  6226 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/printf.c"
  6227 ;; Parameters:    Size  Location     Type
  6228 ;;  fmt             1  [STACK] PTR const unsigned char 
  6229 ;;		 -> STR_12(3), STR_11(3), STR_10(3), 
  6230 ;; Auto vars:     Size  Location     Type
  6231 ;;  ap              2  [STACK] PTR void [1]
  6232 ;;		 -> ?_printf(2), ?_sprintf(2), 
  6233 ;;  ret             2    0        int 
  6234 ;; Return value:  Size  Location     Type
  6235 ;;                  2  [STACK] int 
  6236 ;; Registers used:
  6237 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  6238 ;; Tracked objects:
  6239 ;;		On entry : 3F/3B
  6240 ;;		On exit  : 0/0
  6241 ;;		Unchanged: 0/0
  6242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6247 ;;Total ram usage:        0 bytes
  6248 ;; Hardware stack levels used:    1
  6249 ;; Hardware stack levels required when called:   11
  6250 ;; This function calls:
  6251 ;;		_vfprintf
  6252 ;; This function is called by:
  6253 ;;		_eaDogM_WriteString
  6254 ;;		_send_lcd_cmd_dma
  6255 ;; This function uses a reentrant model
  6256 ;;
  6257                           
  6258                           	psect	text31
  6259  005392                     __ptext31:
  6260                           	opt callstack 0
  6261  005392                     _printf:
  6262                           	opt callstack 0
  6263                           
  6264                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6265  005392  52E6               	movf	postinc1,f,c
  6266  005394  52E6               	movf	postinc1,f,c
  6267                           
  6268                           ;stkvar	?_printf @ sp[(-2)+-3]
  6269                           
  6270                           ;incstack = 0
  6271  005396  0EFB               	movlw	251
  6272  005398  24E1               	addwf	fsr1l,w,c
  6273  00539A  6E47               	movwf	btemp+10,c
  6274  00539C  0EFF               	movlw	255
  6275  00539E  20E2               	addwfc	fsr1h,w,c
  6276  0053A0  6E48               	movwf	btemp+11,c
  6277  0053A2  0E01               	movlw	1
  6278  0053A4  2647               	addwf	btemp+10,f,c
  6279  0053A6  0E00               	movlw	0
  6280  0053A8  2248               	addwfc	btemp+11,f,c
  6281                           
  6282                           ;stkvar	_ap @ sp[(-2)+0]
  6283  0053AA  0EFF               	movlw	-1
  6284  0053AC  0060  F123  FFE3   	movff	btemp+11,plusw1
  6285  0053B2  0EFE               	movlw	-2
  6286  0053B4  0060  F11F  FFE3   	movff	btemp+10,plusw1
  6287                           
  6288                           ;stkvar	_ap @ sp[(-2)+0]
  6289  0053BA  0EFE               	movlw	254
  6290  0053BC  24E1               	addwf	fsr1l,w,c
  6291  0053BE  6E3D               	movwf	btemp,c
  6292  0053C0  0EFF               	movlw	255
  6293  0053C2  20E2               	addwfc	fsr1h,w,c
  6294  0053C4  6E3E               	movwf	btemp+1,c
  6295  0053C6  0060  F0F7  FFE6   	movff	btemp,postinc1
  6296  0053CC  0060  F0FB  FFE6   	movff	btemp+1,postinc1
  6297                           
  6298                           ;stkvar	_fmt @ sp[(-4)+-2]
  6299  0053D2  0EFA               	movlw	-6
  6300  0053D4  50E3               	movf	plusw1,w,c
  6301  0053D6  6EE6               	movwf	postinc1,c
  6302  0053D8  0E00               	movlw	0
  6303  0053DA  6EE6               	movwf	postinc1,c
  6304  0053DC  0E00               	movlw	0
  6305  0053DE  6EE6               	movwf	postinc1,c
  6306  0053E0  EC5F  F027         	call	_vfprintf	;wreg free
  6307                           
  6308                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsiz
      +                          e = 1, vargsize = 0
  6309  0053E4  52E5               	movf	postdec1,f,c
  6310  0053E6  52E5               	movf	postdec1,f,c
  6311  0053E8  52E5               	movf	postdec1,f,c
  6312  0053EA  50E7               	movf	indf1,w,c
  6313  0053EC  5EE1               	subwf	fsr1l,f,c
  6314  0053EE  0E00               	movlw	0
  6315  0053F0  5AE2               	subwfb	fsr1h,f,c
  6316  0053F2  0012               	return		;funcret
  6317  0053F4                     __end_of_printf:
  6318                           	opt callstack 0
  6319                           
  6320 ;; *************** function _vfprintf *****************
  6321 ;; Defined at:
  6322 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  6323 ;; Parameters:    Size  Location     Type
  6324 ;;  fp              2  [STACK] PTR struct _IO_FILE
  6325 ;;		 -> f(5), NULL(0), 
  6326 ;;  fmt             1  [STACK] PTR const unsigned char 
  6327 ;;		 -> STR_12(3), STR_11(3), STR_10(3), STR_9(21), 
  6328 ;;		 -> STR_8(17), STR_7(17), STR_6(17), STR_5(23), 
  6329 ;;		 -> STR_4(6), STR_3(14), STR_2(12), STR_1(61), 
  6330 ;;  ap              2  [STACK] PTR PTR void 
  6331 ;;		 -> ap(2), ap(2), 
  6332 ;; Auto vars:     Size  Location     Type
  6333 ;;  cfmt            1  [STACK] PTR unsigned char 
  6334 ;;		 -> STR_12(3), STR_11(3), STR_10(3), STR_9(21), 
  6335 ;;		 -> STR_8(17), STR_7(17), STR_6(17), STR_5(23), 
  6336 ;;		 -> STR_4(6), STR_3(14), STR_2(12), STR_1(61), 
  6337 ;; Return value:  Size  Location     Type
  6338 ;;                  2  [STACK] int 
  6339 ;; Registers used:
  6340 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  6341 ;; Tracked objects:
  6342 ;;		On entry : 0/1
  6343 ;;		On exit  : 0/0
  6344 ;;		Unchanged: 0/0
  6345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6349 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6350 ;;Total ram usage:        0 bytes
  6351 ;; Hardware stack levels used:    1
  6352 ;; Hardware stack levels required when called:   10
  6353 ;; This function calls:
  6354 ;;		_vfpfcnvrt
  6355 ;; This function is called by:
  6356 ;;		_sprintf
  6357 ;;		_printf
  6358 ;; This function uses a reentrant model
  6359 ;;
  6360                           
  6361                           	psect	text32
  6362  004EBE                     __ptext32:
  6363                           	opt callstack 0
  6364  004EBE                     _vfprintf:
  6365                           	opt callstack 0
  6366                           
  6367                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6368  004EBE  52E6               	movf	postinc1,f,c
  6369                           
  6370                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  6371                           ;stkvar	_fmt @ sp[(-1)+-3]
  6372                           
  6373                           ;incstack = 0
  6374  004EC0  0EFC               	movlw	-4
  6375  004EC2  006F FF8C  F048    	movff	plusw1,btemp+11
  6376                           
  6377                           ;stkvar	_cfmt @ sp[(-1)+0]
  6378  004EC8  0EFF               	movlw	-1
  6379  004ECA  0060  F123  FFE3   	movff	btemp+11,plusw1
  6380                           
  6381                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  6382  004ED0  6A22               	clrf	_nout,c
  6383  004ED2  6A23               	clrf	_nout+1,c
  6384                           
  6385                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  6386  004ED4  D020               	goto	l7462
  6387  004ED6                     l7460:
  6388                           
  6389                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  6390                           ;stkvar	_ap @ sp[(-1)+-5]
  6391  004ED6  0EFA               	movlw	-6
  6392  004ED8  006F FF8F FFE6     	movff	plusw1,postinc1
  6393  004EDE  006F FF8F FFE6     	movff	plusw1,postinc1
  6394                           
  6395                           ;stkvar	_cfmt @ sp[(-3)+0]
  6396  004EE4  0EFD               	movlw	253
  6397  004EE6  24E1               	addwf	fsr1l,w,c
  6398  004EE8  6E3D               	movwf	btemp,c
  6399  004EEA  0EFF               	movlw	255
  6400  004EEC  20E2               	addwfc	fsr1h,w,c
  6401  004EEE  6E3E               	movwf	btemp+1,c
  6402  004EF0  0060  F0F7  FFE6   	movff	btemp,postinc1
  6403  004EF6  0060  F0FB  FFE6   	movff	btemp+1,postinc1
  6404                           
  6405                           ;stkvar	_fp @ sp[(-5)+-2]
  6406  004EFC  0EF9               	movlw	-7
  6407  004EFE  006F FF8F FFE6     	movff	plusw1,postinc1
  6408  004F04  006F FF8F FFE6     	movff	plusw1,postinc1
  6409  004F0A  EC5C  F010         	call	_vfpfcnvrt	;wreg free
  6410  004F0E  503D               	movf	btemp,w,c
  6411  004F10  2622               	addwf	_nout,f,c
  6412  004F12  503E               	movf	btemp+1,w,c
  6413  004F14  2223               	addwfc	_nout+1,f,c
  6414  004F16                     l7462:
  6415                           
  6416                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  6417                           ;stkvar	_cfmt @ sp[(-1)+0]
  6418  004F16  50E1               	movf	fsr1l,w,c
  6419  004F18  0FFF               	addlw	-1
  6420  004F1A  6ED9               	movwf	fsr2l,c
  6421  004F1C  50E2               	movf	fsr1h,w,c
  6422  004F1E  6EDA               	movwf	fsr2h,c
  6423  004F20  0EFF               	movlw	255
  6424  004F22  22DA               	addwfc	fsr2h,f,c
  6425  004F24  006F FF7F FFF6     	movff	indf2,tblptrl
  6426  004F2A                     	if	1	;There is more than 1 active tblptr byte
  6427  004F2A  0E20               	movlw	high __smallconst
  6428  004F2C  6EF7               	movwf	tblptrh,c
  6429  004F2E                     	endif
  6430  004F2E                     	if	0	;tblptru may be non-zero
  6431  004F2E                     	endif
  6432  004F2E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6433  004F2E  0E00               	movlw	low (__smallconst shr (0+16))
  6434  004F30  6EF8               	movwf	tblptru,c
  6435  004F32                     	endif
  6436  004F32  0008               	tblrd		*
  6437  004F34  50F5               	movf	tablat,w,c
  6438  004F36  0900               	iorlw	0
  6439  004F38  A4D8               	btfss	status,2,c
  6440  004F3A  D7CD               	goto	l7460
  6441                           
  6442                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  6443  004F3C  0060  F088  F03D   	movff	_nout,btemp
  6444  004F42  0060  F08C  F03E   	movff	_nout+1,btemp+1
  6445                           
  6446                           ; _vfprintf: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
  6447  004F48  0EFA               	movlw	250
  6448  004F4A  26E1               	addwf	fsr1l,f,c
  6449  004F4C  0EFF               	movlw	255
  6450  004F4E  22E2               	addwfc	fsr1h,f,c
  6451  004F50  0012               	return		;funcret
  6452  004F52                     __end_of_vfprintf:
  6453                           	opt callstack 0
  6454                           
  6455 ;; *************** function _vfpfcnvrt *****************
  6456 ;; Defined at:
  6457 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  6458 ;; Parameters:    Size  Location     Type
  6459 ;;  fp              2  [STACK] PTR struct _IO_FILE
  6460 ;;		 -> f(5), NULL(0), 
  6461 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  6462 ;;		 -> cfmt(1), 
  6463 ;;  ap              2  [STACK] PTR PTR void 
  6464 ;;		 -> ap(2), ap(2), 
  6465 ;; Auto vars:     Size  Location     Type
  6466 ;;  llu             8  [STACK] unsigned long long 
  6467 ;;  ll              8  [STACK] long long 
  6468 ;;  f               4    0        long long 
  6469 ;;  vp              3    0        PTR void 
  6470 ;;  ct              3    0        unsigned char [3]
  6471 ;;  done            2  [STACK] int 
  6472 ;;  cp              2  [STACK] PTR unsigned char 
  6473 ;;		 -> ?_printf(2), ?_sprintf(2), V(80), 
  6474 ;;  i               2    0        int 
  6475 ;;  c               1  [STACK] unsigned char 
  6476 ;; Return value:  Size  Location     Type
  6477 ;;                  2  [STACK] int 
  6478 ;; Registers used:
  6479 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  6480 ;; Tracked objects:
  6481 ;;		On entry : 0/1
  6482 ;;		On exit  : 0/0
  6483 ;;		Unchanged: 0/0
  6484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6489 ;;Total ram usage:        0 bytes
  6490 ;; Hardware stack levels used:    1
  6491 ;; Hardware stack levels required when called:    9
  6492 ;; This function calls:
  6493 ;;		_atoi
  6494 ;;		_ctoa
  6495 ;;		_dtoa
  6496 ;;		_fputc
  6497 ;;		_isdigit
  6498 ;;		_stoa
  6499 ;;		_xtoa
  6500 ;; This function is called by:
  6501 ;;		_vfprintf
  6502 ;; This function uses a reentrant model
  6503 ;;
  6504                           
  6505                           	psect	text33
  6506  0020B8                     __ptext33:
  6507                           	opt callstack 0
  6508  0020B8                     _vfpfcnvrt:
  6509                           	opt callstack 0
  6510                           
  6511                           ; autosize = 23, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  6512  0020B8  0E17               	movlw	23
  6513  0020BA  26E1               	addwf	fsr1l,f,c
  6514  0020BC  0E00               	movlw	0
  6515  0020BE  22E2               	addwfc	fsr1h,f,c
  6516                           
  6517                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  6518                           ;stkvar	_fmt @ sp[(-23)+-4]
  6519                           
  6520                           ;incstack = 0
  6521  0020C0  0EE5               	movlw	-27
  6522  0020C2  006F FF8F FFD9     	movff	plusw1,fsr2l
  6523  0020C8  0EE6               	movlw	-26
  6524  0020CA  006F FF8F FFDA     	movff	plusw1,fsr2h
  6525  0020D0  006F FF7F FFF6     	movff	indf2,tblptrl
  6526  0020D6                     	if	1	;There is more than 1 active tblptr byte
  6527  0020D6  0E20               	movlw	high __smallconst
  6528  0020D8  6EF7               	movwf	tblptrh,c
  6529  0020DA                     	endif
  6530  0020DA                     	if	0	;tblptru may be non-zero
  6531  0020DA                     	endif
  6532  0020DA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6533  0020DA  0E00               	movlw	low (__smallconst shr (0+16))
  6534  0020DC  6EF8               	movwf	tblptru,c
  6535  0020DE                     	endif
  6536  0020DE  0008               	tblrd		*
  6537  0020E0  50F5               	movf	tablat,w,c
  6538  0020E2  0A25               	xorlw	37
  6539  0020E4  A4D8               	btfss	status,2,c
  6540  0020E6  D327               	goto	l7402
  6541                           
  6542                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  6543                           ;stkvar	_fmt @ sp[(-23)+-4]
  6544  0020E8  0EE5               	movlw	-27
  6545  0020EA  006F FF8F FFD9     	movff	plusw1,fsr2l
  6546  0020F0  0EE6               	movlw	-26
  6547  0020F2  006F FF8F FFDA     	movff	plusw1,fsr2h
  6548  0020F8  2ADF               	incf	indf2,f,c
  6549                           
  6550                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  6551  0020FA  6A24               	clrf	_width,c
  6552  0020FC  6A25               	clrf	_width+1,c
  6553  0020FE  6A28               	clrf	_flags,c
  6554  002100  6A29               	clrf	_flags+1,c
  6555                           
  6556                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  6557  002102  6826               	setf	_prec,c
  6558  002104  6827               	setf	_prec+1,c
  6559                           
  6560                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 688:         done = 0;
  6561                           ;stkvar	_done @ sp[(-23)+18]
  6562  002106  0EFB               	movlw	-5
  6563  002108  6AE3               	clrf	plusw1,c
  6564  00210A  0EFC               	movlw	-4
  6565  00210C  6AE3               	clrf	plusw1,c
  6566                           
  6567                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 689:         while (!done) {
  6568  00210E  D048               	goto	l7316
  6569  002110                     l7290:
  6570                           
  6571                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 692:                     flag
      +                          s |= (1 << 0);
  6572  002110  8028               	bsf	_flags,0,c
  6573  002112                     l7292:
  6574                           
  6575                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 693:                     ++*f
      +                          mt;
  6576                           ;stkvar	_fmt @ sp[(-23)+-4]
  6577  002112  0EE5               	movlw	-27
  6578  002114  006F FF8F FFD9     	movff	plusw1,fsr2l
  6579  00211A  0EE6               	movlw	-26
  6580  00211C  006F FF8F FFDA     	movff	plusw1,fsr2h
  6581  002122  2ADF               	incf	indf2,f,c
  6582                           
  6583                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 694:                     brea
      +                          k;
  6584  002124  D03D               	goto	l7316
  6585  002126                     l7294:
  6586                           
  6587                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 696:                     flag
      +                          s |= (1 << 1);
  6588  002126  8228               	bsf	_flags,1,c
  6589  002128  D7F4               	goto	l7292
  6590  00212A                     l7298:
  6591                           
  6592                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 700:                     flag
      +                          s |= (1 << 2);
  6593  00212A  8428               	bsf	_flags,2,c
  6594  00212C  D7F2               	goto	l7292
  6595  00212E                     l7302:
  6596                           
  6597                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 704:                     flag
      +                          s |= (1 << 3);
  6598  00212E  8628               	bsf	_flags,3,c
  6599  002130  D7F0               	goto	l7292
  6600  002132                     l7306:
  6601                           
  6602                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 708:                     flag
      +                          s |= (1 << 4);
  6603  002132  8828               	bsf	_flags,4,c
  6604  002134  D7EE               	goto	l7292
  6605  002136                     l7310:
  6606                           
  6607                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 712:                     done
      +                           = 1;
  6608  002136  0E01               	movlw	1
  6609  002138  6E47               	movwf	btemp+10,c
  6610  00213A  0E00               	movlw	0
  6611  00213C  6E48               	movwf	btemp+11,c
  6612                           
  6613                           ;stkvar	_done @ sp[(-23)+18]
  6614  00213E  0EFB               	movlw	-5
  6615  002140  0060  F11F  FFE3   	movff	btemp+10,plusw1
  6616  002146  0EFC               	movlw	-4
  6617  002148  0060  F123  FFE3   	movff	btemp+11,plusw1
  6618                           
  6619                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 713:                     brea
      +                          k;
  6620  00214E  D028               	goto	l7316
  6621  002150                     l7314:
  6622                           
  6623                           ;stkvar	_fmt @ sp[(-23)+-4]
  6624  002150  0EE5               	movlw	-27
  6625  002152  006F FF8F FFD9     	movff	plusw1,fsr2l
  6626  002158  0EE6               	movlw	-26
  6627  00215A  006F FF8F FFDA     	movff	plusw1,fsr2h
  6628  002160  006F FF7F FFF6     	movff	indf2,tblptrl
  6629  002166                     	if	1	;There is more than 1 active tblptr byte
  6630  002166  0E20               	movlw	high __smallconst
  6631  002168  6EF7               	movwf	tblptrh,c
  6632  00216A                     	endif
  6633  00216A                     	if	0	;tblptru may be non-zero
  6634  00216A                     	endif
  6635  00216A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6636  00216A  0E00               	movlw	low (__smallconst shr (0+16))
  6637  00216C  6EF8               	movwf	tblptru,c
  6638  00216E                     	endif
  6639  00216E  0008               	tblrd		*
  6640  002170  50F5               	movf	tablat,w,c
  6641  002172  6E47               	movwf	btemp+10,c
  6642  002174  6A48               	clrf	btemp+11,c
  6643                           
  6644                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6645                           ; Switch size 1, requested type "simple"
  6646                           ; Number of cases is 1, Range of values is 0 to 0
  6647                           ; switch strategies available:
  6648                           ; Name         Instructions Cycles
  6649                           ; simple_byte            4     3 (average)
  6650                           ;	Chosen strategy is simple_byte
  6651  002176  5048               	movf	btemp+11,w,c
  6652  002178  0A00               	xorlw	0	; case 0
  6653  00217A  A4D8               	btfss	status,2,c
  6654  00217C  D7DC               	goto	l7310
  6655                           
  6656                           ; Switch size 1, requested type "simple"
  6657                           ; Number of cases is 5, Range of values is 32 to 48
  6658                           ; switch strategies available:
  6659                           ; Name         Instructions Cycles
  6660                           ; simple_byte           16     9 (average)
  6661                           ;	Chosen strategy is simple_byte
  6662  00217E  5047               	movf	btemp+10,w,c
  6663  002180  0A20               	xorlw	32	; case 32
  6664  002182  B4D8               	btfsc	status,2,c
  6665  002184  D7D4               	goto	l7302
  6666  002186  0A03               	xorlw	3	; case 35
  6667  002188  B4D8               	btfsc	status,2,c
  6668  00218A  D7D3               	goto	l7306
  6669  00218C  0A08               	xorlw	8	; case 43
  6670  00218E  B4D8               	btfsc	status,2,c
  6671  002190  D7CC               	goto	l7298
  6672  002192  0A06               	xorlw	6	; case 45
  6673  002194  B4D8               	btfsc	status,2,c
  6674  002196  D7BC               	goto	l7290
  6675  002198  0A1D               	xorlw	29	; case 48
  6676  00219A  B4D8               	btfsc	status,2,c
  6677  00219C  D7C4               	goto	l7294
  6678  00219E  D7CB               	goto	l7310
  6679  0021A0                     l7316:
  6680                           
  6681                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 689:         while (!done) {
  6682                           ;stkvar	_done @ sp[(-23)+18]
  6683  0021A0  0EFB               	movlw	-5
  6684  0021A2  006F FF8C  F03D    	movff	plusw1,btemp
  6685  0021A8  0EFC               	movlw	-4
  6686  0021AA  50E3               	movf	plusw1,w,c
  6687  0021AC  103D               	iorwf	btemp,w,c
  6688  0021AE  B4D8               	btfsc	status,2,c
  6689  0021B0  D7CF               	goto	l7314
  6690                           
  6691                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 716:         if (flags & (1 <
      +                          < 0)) {
  6692  0021B2  B028               	btfsc	_flags,0,c
  6693                           
  6694                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 717:             flags &= ~(1
      +                           << 1);
  6695  0021B4  9228               	bcf	_flags,1,c
  6696                           
  6697                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  6698                           ;stkvar	_fmt @ sp[(-23)+-4]
  6699  0021B6  0EE5               	movlw	-27
  6700  0021B8  006F FF8F FFD9     	movff	plusw1,fsr2l
  6701  0021BE  0EE6               	movlw	-26
  6702  0021C0  006F FF8F FFDA     	movff	plusw1,fsr2h
  6703  0021C6  006F FF7F FFF6     	movff	indf2,tblptrl
  6704  0021CC                     	if	1	;There is more than 1 active tblptr byte
  6705  0021CC  0E20               	movlw	high __smallconst
  6706  0021CE  6EF7               	movwf	tblptrh,c
  6707  0021D0                     	endif
  6708  0021D0                     	if	0	;tblptru may be non-zero
  6709  0021D0                     	endif
  6710  0021D0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6711  0021D0  0E00               	movlw	low (__smallconst shr (0+16))
  6712  0021D2  6EF8               	movwf	tblptru,c
  6713  0021D4                     	endif
  6714  0021D4  0008               	tblrd		*
  6715  0021D6  50F5               	movf	tablat,w,c
  6716  0021D8  0A2A               	xorlw	42
  6717  0021DA  A4D8               	btfss	status,2,c
  6718  0021DC  D02F               	goto	l7330
  6719                           
  6720                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  6721                           ;stkvar	_fmt @ sp[(-23)+-4]
  6722  0021DE  0EE5               	movlw	-27
  6723  0021E0  006F FF8F FFD9     	movff	plusw1,fsr2l
  6724  0021E6  0EE6               	movlw	-26
  6725  0021E8  006F FF8F FFDA     	movff	plusw1,fsr2h
  6726  0021EE  2ADF               	incf	indf2,f,c
  6727                           
  6728                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  6729                           ;stkvar	_ap @ sp[(-23)+-6]
  6730  0021F0  0EE3               	movlw	-29
  6731  0021F2  006F FF8F FFD9     	movff	plusw1,fsr2l
  6732  0021F8  0EE4               	movlw	-28
  6733  0021FA  006F FF8F FFDA     	movff	plusw1,fsr2h
  6734  002200  0E02               	movlw	2
  6735  002202  5EDE               	subwf	postinc2,f,c
  6736  002204  0E00               	movlw	0
  6737  002206  5ADD               	subwfb	postdec2,f,c
  6738  002208  006F FF78  F047    	movff	postinc2,btemp+10
  6739  00220E  006F FF74  F048    	movff	postdec2,btemp+11
  6740  002214  0060  F11F  FFD9   	movff	btemp+10,fsr2l
  6741  00221A  0060  F123  FFDA   	movff	btemp+11,fsr2h
  6742  002220  006F FF78  F024    	movff	postinc2,_width
  6743  002226  006F FF74  F025    	movff	postdec2,_width+1
  6744                           
  6745                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  6746  00222C  AE25               	btfss	_width+1,7,c
  6747  00222E  D059               	goto	u4540
  6748                           
  6749                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
  6750  002230  8028               	bsf	_flags,0,c
  6751                           
  6752                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
  6753  002232  6C24               	negf	_width,c
  6754  002234  1E25               	comf	_width+1,f,c
  6755  002236  B0D8               	btfsc	status,0,c
  6756  002238  2A25               	incf	_width+1,f,c
  6757  00223A  D053               	goto	u4540
  6758  00223C                     l7330:
  6759                           
  6760                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
  6761                           ;stkvar	_fmt @ sp[(-23)+-4]
  6762  00223C  0EE5               	movlw	-27
  6763  00223E  006F FF8F FFD9     	movff	plusw1,fsr2l
  6764  002244  0EE6               	movlw	-26
  6765  002246  006F FF8F FFDA     	movff	plusw1,fsr2h
  6766  00224C  50DF               	movf	indf2,w,c
  6767  00224E  6EE6               	movwf	postinc1,c
  6768  002250  ECE2  F01F         	call	_atoi	;wreg free
  6769  002254  0060  F0F4  F024   	movff	btemp,_width
  6770  00225A  0060  F0F8  F025   	movff	btemp+1,_width+1
  6771                           
  6772                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6773  002260  D009               	goto	l7334
  6774  002262                     l7332:
  6775                           
  6776                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
  6777                           ;stkvar	_fmt @ sp[(-23)+-4]
  6778  002262  0EE5               	movlw	-27
  6779  002264  006F FF8F FFD9     	movff	plusw1,fsr2l
  6780  00226A  0EE6               	movlw	-26
  6781  00226C  006F FF8F FFDA     	movff	plusw1,fsr2h
  6782  002272  2ADF               	incf	indf2,f,c
  6783  002274                     l7334:
  6784  002274  0ED0               	movlw	208
  6785  002276  6E47               	movwf	btemp+10,c
  6786  002278  0EFF               	movlw	255
  6787  00227A  6E48               	movwf	btemp+11,c
  6788                           
  6789                           ;stkvar	_fmt @ sp[(-23)+-4]
  6790  00227C  0EE5               	movlw	-27
  6791  00227E  006F FF8F FFD9     	movff	plusw1,fsr2l
  6792  002284  0EE6               	movlw	-26
  6793  002286  006F FF8F FFDA     	movff	plusw1,fsr2h
  6794  00228C  006F FF7F FFF6     	movff	indf2,tblptrl
  6795  002292                     	if	1	;There is more than 1 active tblptr byte
  6796  002292  0E20               	movlw	high __smallconst
  6797  002294  6EF7               	movwf	tblptrh,c
  6798  002296                     	endif
  6799  002296                     	if	0	;tblptru may be non-zero
  6800  002296                     	endif
  6801  002296                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6802  002296  0E00               	movlw	low (__smallconst shr (0+16))
  6803  002298  6EF8               	movwf	tblptru,c
  6804  00229A                     	endif
  6805  00229A  0008               	tblrd		*
  6806  00229C  50F5               	movf	tablat,w,c
  6807  00229E  6E45               	movwf	btemp+8,c
  6808  0022A0  6A46               	clrf	btemp+9,c
  6809  0022A2  5047               	movf	btemp+10,w,c
  6810  0022A4  2645               	addwf	btemp+8,f,c
  6811  0022A6  5048               	movf	btemp+11,w,c
  6812  0022A8  2246               	addwfc	btemp+9,f,c
  6813  0022AA  5046               	movf	btemp+9,w,c
  6814  0022AC  E106               	bnz	u4520
  6815  0022AE  0E0A               	movlw	10
  6816  0022B0  5C45               	subwf	btemp+8,w,c
  6817  0022B2  B0D8               	btfsc	status,0,c
  6818  0022B4  D002               	goto	u4520
  6819  0022B6  0E01               	movlw	1
  6820  0022B8  D001               	goto	u4530
  6821  0022BA                     u4520:
  6822  0022BA  0E00               	movlw	0
  6823  0022BC                     u4530:
  6824  0022BC  6E47               	movwf	btemp+10,c
  6825  0022BE  6A48               	clrf	btemp+11,c
  6826                           
  6827                           ;stkvar	_vfpfcnvrt$3838 @ sp[(-23)+0]
  6828  0022C0  0EE9               	movlw	-23
  6829  0022C2  0060  F11F  FFE3   	movff	btemp+10,plusw1
  6830  0022C8  0EEA               	movlw	-22
  6831  0022CA  0060  F123  FFE3   	movff	btemp+11,plusw1
  6832                           
  6833                           ;stkvar	_vfpfcnvrt$3838 @ sp[(-23)+0]
  6834  0022D0  0EE9               	movlw	-23
  6835  0022D2  006F FF8C  F03D    	movff	plusw1,btemp
  6836  0022D8  0EEA               	movlw	-22
  6837  0022DA  50E3               	movf	plusw1,w,c
  6838  0022DC  103D               	iorwf	btemp,w,c
  6839  0022DE  A4D8               	btfss	status,2,c
  6840  0022E0  D7C0               	goto	l7332
  6841  0022E2                     u4540:
  6842                           
  6843                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  6844                           ;stkvar	_fmt @ sp[(-23)+-4]
  6845  0022E2  0EE5               	movlw	-27
  6846  0022E4  006F FF8F FFD9     	movff	plusw1,fsr2l
  6847  0022EA  0EE6               	movlw	-26
  6848  0022EC  006F FF8F FFDA     	movff	plusw1,fsr2h
  6849  0022F2  006F FF7F FFF6     	movff	indf2,tblptrl
  6850  0022F8                     	if	1	;There is more than 1 active tblptr byte
  6851  0022F8  0E20               	movlw	high __smallconst
  6852  0022FA  6EF7               	movwf	tblptrh,c
  6853  0022FC                     	endif
  6854  0022FC                     	if	0	;tblptru may be non-zero
  6855  0022FC                     	endif
  6856  0022FC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6857  0022FC  0E00               	movlw	low (__smallconst shr (0+16))
  6858  0022FE  6EF8               	movwf	tblptru,c
  6859  002300                     	endif
  6860  002300  0008               	tblrd		*
  6861  002302  50F5               	movf	tablat,w,c
  6862  002304  0A63               	xorlw	99
  6863  002306  A4D8               	btfss	status,2,c
  6864  002308  D034               	goto	l7350
  6865                           
  6866                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  6867                           ;stkvar	_fmt @ sp[(-23)+-4]
  6868  00230A  0EE5               	movlw	-27
  6869  00230C  006F FF8F FFD9     	movff	plusw1,fsr2l
  6870  002312  0EE6               	movlw	-26
  6871  002314  006F FF8F FFDA     	movff	plusw1,fsr2h
  6872  00231A  2ADF               	incf	indf2,f,c
  6873                           
  6874                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  6875                           ;stkvar	_ap @ sp[(-23)+-6]
  6876  00231C  0EE3               	movlw	-29
  6877  00231E  006F FF8F FFD9     	movff	plusw1,fsr2l
  6878  002324  0EE4               	movlw	-28
  6879  002326  006F FF8F FFDA     	movff	plusw1,fsr2h
  6880  00232C  0E02               	movlw	2
  6881  00232E  5EDE               	subwf	postinc2,f,c
  6882  002330  0E00               	movlw	0
  6883  002332  5ADD               	subwfb	postdec2,f,c
  6884  002334  006F FF78  F047    	movff	postinc2,btemp+10
  6885  00233A  006F FF74  F048    	movff	postdec2,btemp+11
  6886  002340  0060  F11F  FFD9   	movff	btemp+10,fsr2l
  6887  002346  0060  F123  FFDA   	movff	btemp+11,fsr2h
  6888  00234C  50DF               	movf	indf2,w,c
  6889  00234E  6E48               	movwf	btemp+11,c
  6890                           
  6891                           ;stkvar	_c @ sp[(-23)+22]
  6892  002350  0EFF               	movlw	-1
  6893  002352  0060  F123  FFE3   	movff	btemp+11,plusw1
  6894                           
  6895                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  6896                           ;stkvar	_c @ sp[(-23)+22]
  6897  002358  0EFF               	movlw	-1
  6898  00235A  50E3               	movf	plusw1,w,c
  6899  00235C  6EE6               	movwf	postinc1,c
  6900                           
  6901                           ;stkvar	_fp @ sp[(-24)+-2]
  6902  00235E  0EE6               	movlw	-26
  6903  002360  006F FF8F FFE6     	movff	plusw1,postinc1
  6904  002366  006F FF8F FFE6     	movff	plusw1,postinc1
  6905  00236C  EC34  F028         	call	_ctoa	;wreg free
  6906  002370  D209               	goto	l1773
  6907  002372                     l7350:
  6908                           
  6909                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  6910                           ;stkvar	_fmt @ sp[(-23)+-4]
  6911  002372  0EE5               	movlw	-27
  6912  002374  006F FF8F FFD9     	movff	plusw1,fsr2l
  6913  00237A  0EE6               	movlw	-26
  6914  00237C  006F FF8F FFDA     	movff	plusw1,fsr2h
  6915  002382  006F FF7F FFF6     	movff	indf2,tblptrl
  6916  002388                     	if	1	;There is more than 1 active tblptr byte
  6917  002388  0E20               	movlw	high __smallconst
  6918  00238A  6EF7               	movwf	tblptrh,c
  6919  00238C                     	endif
  6920  00238C                     	if	0	;tblptru may be non-zero
  6921  00238C                     	endif
  6922  00238C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6923  00238C  0E00               	movlw	low (__smallconst shr (0+16))
  6924  00238E  6EF8               	movwf	tblptru,c
  6925  002390                     	endif
  6926  002390  0008               	tblrd		*
  6927  002392  50F5               	movf	tablat,w,c
  6928  002394  0A64               	xorlw	100
  6929  002396  B4D8               	btfsc	status,2,c
  6930  002398  D014               	goto	u4570
  6931                           
  6932                           ;stkvar	_fmt @ sp[(-23)+-4]
  6933  00239A  0EE5               	movlw	-27
  6934  00239C  006F FF8F FFD9     	movff	plusw1,fsr2l
  6935  0023A2  0EE6               	movlw	-26
  6936  0023A4  006F FF8F FFDA     	movff	plusw1,fsr2h
  6937  0023AA  006F FF7F FFF6     	movff	indf2,tblptrl
  6938  0023B0                     	if	1	;There is more than 1 active tblptr byte
  6939  0023B0  0E20               	movlw	high __smallconst
  6940  0023B2  6EF7               	movwf	tblptrh,c
  6941  0023B4                     	endif
  6942  0023B4                     	if	0	;tblptru may be non-zero
  6943  0023B4                     	endif
  6944  0023B4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6945  0023B4  0E00               	movlw	low (__smallconst shr (0+16))
  6946  0023B6  6EF8               	movwf	tblptru,c
  6947  0023B8                     	endif
  6948  0023B8  0008               	tblrd		*
  6949  0023BA  50F5               	movf	tablat,w,c
  6950  0023BC  0A69               	xorlw	105
  6951  0023BE  A4D8               	btfss	status,2,c
  6952  0023C0  D073               	goto	l7362
  6953  0023C2                     u4570:
  6954                           
  6955                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  6956                           ;stkvar	_fmt @ sp[(-23)+-4]
  6957  0023C2  0EE5               	movlw	-27
  6958  0023C4  006F FF8F FFD9     	movff	plusw1,fsr2l
  6959  0023CA  0EE6               	movlw	-26
  6960  0023CC  006F FF8F FFDA     	movff	plusw1,fsr2h
  6961  0023D2  2ADF               	incf	indf2,f,c
  6962                           
  6963                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  6964                           ;stkvar	_ap @ sp[(-23)+-6]
  6965  0023D4  0EE3               	movlw	-29
  6966  0023D6  006F FF8F FFD9     	movff	plusw1,fsr2l
  6967  0023DC  0EE4               	movlw	-28
  6968  0023DE  006F FF8F FFDA     	movff	plusw1,fsr2h
  6969  0023E4  0E02               	movlw	2
  6970  0023E6  5EDE               	subwf	postinc2,f,c
  6971  0023E8  0E00               	movlw	0
  6972  0023EA  5ADD               	subwfb	postdec2,f,c
  6973  0023EC  006F FF78  F047    	movff	postinc2,btemp+10
  6974  0023F2  006F FF74  F048    	movff	postdec2,btemp+11
  6975  0023F8  0060  F11F  FFD9   	movff	btemp+10,fsr2l
  6976  0023FE  0060  F123  FFDA   	movff	btemp+11,fsr2h
  6977  002404  006F FF78  F047    	movff	postinc2,btemp+10
  6978  00240A  006F FF74  F048    	movff	postdec2,btemp+11
  6979                           
  6980                           ;stkvar	_ll @ sp[(-23)+10]
  6981  002410  0EF3               	movlw	-13
  6982  002412  0060  F11F  FFE3   	movff	btemp+10,plusw1
  6983  002418  0EF4               	movlw	-12
  6984  00241A  0060  F123  FFE3   	movff	btemp+11,plusw1
  6985  002420  6A3D               	clrf	btemp,c
  6986  002422  BEE3               	btfsc	plusw1,7,c
  6987  002424  683D               	setf	btemp,c
  6988  002426  0EF5               	movlw	-11
  6989  002428  0060  F0F7  FFE3   	movff	btemp,plusw1
  6990  00242E  0EF6               	movlw	-10
  6991  002430  0060  F0F7  FFE3   	movff	btemp,plusw1
  6992  002436  0EF7               	movlw	-9
  6993  002438  0060  F0F7  FFE3   	movff	btemp,plusw1
  6994  00243E  0EF8               	movlw	-8
  6995  002440  0060  F0F7  FFE3   	movff	btemp,plusw1
  6996  002446  0EF9               	movlw	-7
  6997  002448  0060  F0F7  FFE3   	movff	btemp,plusw1
  6998  00244E  0EFA               	movlw	-6
  6999  002450  0060  F0F7  FFE3   	movff	btemp,plusw1
  7000                           
  7001                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  7002                           ;stkvar	_ll @ sp[(-23)+10]
  7003  002456  50E1               	movf	fsr1l,w,c
  7004  002458  0FF3               	addlw	-13
  7005  00245A  6ED9               	movwf	fsr2l,c
  7006  00245C  50E2               	movf	fsr1h,w,c
  7007  00245E  6EDA               	movwf	fsr2h,c
  7008  002460  0EFF               	movlw	255
  7009  002462  22DA               	addwfc	fsr2h,f,c
  7010  002464  006F FF7B FFE6     	movff	postinc2,postinc1
  7011  00246A  006F FF7B FFE6     	movff	postinc2,postinc1
  7012  002470  006F FF7B FFE6     	movff	postinc2,postinc1
  7013  002476  006F FF7B FFE6     	movff	postinc2,postinc1
  7014  00247C  006F FF7B FFE6     	movff	postinc2,postinc1
  7015  002482  006F FF7B FFE6     	movff	postinc2,postinc1
  7016  002488  006F FF7B FFE6     	movff	postinc2,postinc1
  7017  00248E  006F FF7B FFE6     	movff	postinc2,postinc1
  7018                           
  7019                           ;stkvar	_fp @ sp[(-31)+-2]
  7020  002494  0EDF               	movlw	-33
  7021  002496  006F FF8F FFE6     	movff	plusw1,postinc1
  7022  00249C  006F FF8F FFE6     	movff	plusw1,postinc1
  7023  0024A2  ECC7  F013         	call	_dtoa	;wreg free
  7024  0024A6  D16E               	goto	l1773
  7025  0024A8                     l7362:
  7026                           
  7027                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  7028                           ;stkvar	_fmt @ sp[(-23)+-4]
  7029  0024A8  0EE5               	movlw	-27
  7030  0024AA  006F FF8F FFD9     	movff	plusw1,fsr2l
  7031  0024B0  0EE6               	movlw	-26
  7032  0024B2  006F FF8F FFDA     	movff	plusw1,fsr2h
  7033  0024B8  006F FF7F FFF6     	movff	indf2,tblptrl
  7034  0024BE                     	if	1	;There is more than 1 active tblptr byte
  7035  0024BE  0E20               	movlw	high __smallconst
  7036  0024C0  6EF7               	movwf	tblptrh,c
  7037  0024C2                     	endif
  7038  0024C2                     	if	0	;tblptru may be non-zero
  7039  0024C2                     	endif
  7040  0024C2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7041  0024C2  0E00               	movlw	low (__smallconst shr (0+16))
  7042  0024C4  6EF8               	movwf	tblptru,c
  7043  0024C6                     	endif
  7044  0024C6  0008               	tblrd		*
  7045  0024C8  50F5               	movf	tablat,w,c
  7046  0024CA  0A73               	xorlw	115
  7047  0024CC  A4D8               	btfss	status,2,c
  7048  0024CE  D040               	goto	l7372
  7049                           
  7050                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  7051                           ;stkvar	_fmt @ sp[(-23)+-4]
  7052  0024D0  0EE5               	movlw	-27
  7053  0024D2  006F FF8F FFD9     	movff	plusw1,fsr2l
  7054  0024D8  0EE6               	movlw	-26
  7055  0024DA  006F FF8F FFDA     	movff	plusw1,fsr2h
  7056  0024E0  2ADF               	incf	indf2,f,c
  7057                           
  7058                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  7059                           ;stkvar	_ap @ sp[(-23)+-6]
  7060  0024E2  0EE3               	movlw	-29
  7061  0024E4  006F FF8F FFD9     	movff	plusw1,fsr2l
  7062  0024EA  0EE4               	movlw	-28
  7063  0024EC  006F FF8F FFDA     	movff	plusw1,fsr2h
  7064  0024F2  0E02               	movlw	2
  7065  0024F4  5EDE               	subwf	postinc2,f,c
  7066  0024F6  0E00               	movlw	0
  7067  0024F8  5ADD               	subwfb	postdec2,f,c
  7068  0024FA  006F FF78  F047    	movff	postinc2,btemp+10
  7069  002500  006F FF74  F048    	movff	postdec2,btemp+11
  7070  002506  0060  F11F  FFD9   	movff	btemp+10,fsr2l
  7071  00250C  0060  F123  FFDA   	movff	btemp+11,fsr2h
  7072  002512  006F FF78  F047    	movff	postinc2,btemp+10
  7073  002518  006F FF74  F048    	movff	postdec2,btemp+11
  7074                           
  7075                           ;stkvar	_cp @ sp[(-23)+20]
  7076  00251E  0EFE               	movlw	-2
  7077  002520  0060  F123  FFE3   	movff	btemp+11,plusw1
  7078  002526  0EFD               	movlw	-3
  7079  002528  0060  F11F  FFE3   	movff	btemp+10,plusw1
  7080                           
  7081                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  7082                           ;stkvar	_cp @ sp[(-23)+20]
  7083  00252E  0EFD               	movlw	-3
  7084  002530  006F FF8F FFE6     	movff	plusw1,postinc1
  7085  002536  006F FF8F FFE6     	movff	plusw1,postinc1
  7086                           
  7087                           ;stkvar	_fp @ sp[(-25)+-2]
  7088  00253C  0EE5               	movlw	-27
  7089  00253E  006F FF8F FFE6     	movff	plusw1,postinc1
  7090  002544  006F FF8F FFE6     	movff	plusw1,postinc1
  7091  00254A  ECF2  F01A         	call	_stoa	;wreg free
  7092  00254E  D11A               	goto	l1773
  7093  002550                     l7372:
  7094                           
  7095                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
  7096                           ;stkvar	_fmt @ sp[(-23)+-4]
  7097  002550  0EE5               	movlw	-27
  7098  002552  006F FF8F FFD9     	movff	plusw1,fsr2l
  7099  002558  0EE6               	movlw	-26
  7100  00255A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7101  002560  006F FF7F FFF6     	movff	indf2,tblptrl
  7102  002566                     	if	1	;There is more than 1 active tblptr byte
  7103  002566  0E20               	movlw	high __smallconst
  7104  002568  6EF7               	movwf	tblptrh,c
  7105  00256A                     	endif
  7106  00256A                     	if	0	;tblptru may be non-zero
  7107  00256A                     	endif
  7108  00256A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7109  00256A  0E00               	movlw	low (__smallconst shr (0+16))
  7110  00256C  6EF8               	movwf	tblptru,c
  7111  00256E                     	endif
  7112  00256E  0008               	tblrd		*
  7113  002570  50F5               	movf	tablat,w,c
  7114  002572  0A78               	xorlw	120
  7115  002574  B4D8               	btfsc	status,2,c
  7116  002576  D014               	goto	u4600
  7117                           
  7118                           ;stkvar	_fmt @ sp[(-23)+-4]
  7119  002578  0EE5               	movlw	-27
  7120  00257A  006F FF8F FFD9     	movff	plusw1,fsr2l
  7121  002580  0EE6               	movlw	-26
  7122  002582  006F FF8F FFDA     	movff	plusw1,fsr2h
  7123  002588  006F FF7F FFF6     	movff	indf2,tblptrl
  7124  00258E                     	if	1	;There is more than 1 active tblptr byte
  7125  00258E  0E20               	movlw	high __smallconst
  7126  002590  6EF7               	movwf	tblptrh,c
  7127  002592                     	endif
  7128  002592                     	if	0	;tblptru may be non-zero
  7129  002592                     	endif
  7130  002592                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7131  002592  0E00               	movlw	low (__smallconst shr (0+16))
  7132  002594  6EF8               	movwf	tblptru,c
  7133  002596                     	endif
  7134  002596  0008               	tblrd		*
  7135  002598  50F5               	movf	tablat,w,c
  7136  00259A  0A58               	xorlw	88
  7137  00259C  A4D8               	btfss	status,2,c
  7138  00259E  D091               	goto	l7386
  7139  0025A0                     u4600:
  7140                           
  7141                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
  7142                           ;stkvar	_fmt @ sp[(-23)+-4]
  7143  0025A0  0EE5               	movlw	-27
  7144  0025A2  006F FF8F FFD9     	movff	plusw1,fsr2l
  7145  0025A8  0EE6               	movlw	-26
  7146  0025AA  006F FF8F FFDA     	movff	plusw1,fsr2h
  7147  0025B0  006F FF7F FFF6     	movff	indf2,tblptrl
  7148  0025B6                     	if	1	;There is more than 1 active tblptr byte
  7149  0025B6  0E20               	movlw	high __smallconst
  7150  0025B8  6EF7               	movwf	tblptrh,c
  7151  0025BA                     	endif
  7152  0025BA                     	if	0	;tblptru may be non-zero
  7153  0025BA                     	endif
  7154  0025BA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7155  0025BA  0E00               	movlw	low (__smallconst shr (0+16))
  7156  0025BC  6EF8               	movwf	tblptru,c
  7157  0025BE                     	endif
  7158                           
  7159                           ;stkvar	_c @ sp[(-23)+22]
  7160  0025BE  0008               	tblrd		*
  7161  0025C0  0EFF               	movlw	-1
  7162  0025C2  006F FFD7 FFE3     	movff	tablat,plusw1
  7163                           
  7164                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
  7165                           ;stkvar	_fmt @ sp[(-23)+-4]
  7166  0025C8  0EE5               	movlw	-27
  7167  0025CA  006F FF8F FFD9     	movff	plusw1,fsr2l
  7168  0025D0  0EE6               	movlw	-26
  7169  0025D2  006F FF8F FFDA     	movff	plusw1,fsr2h
  7170  0025D8  2ADF               	incf	indf2,f,c
  7171                           
  7172                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  7173                           ;stkvar	_ap @ sp[(-23)+-6]
  7174  0025DA  0EE3               	movlw	-29
  7175  0025DC  006F FF8F FFD9     	movff	plusw1,fsr2l
  7176  0025E2  0EE4               	movlw	-28
  7177  0025E4  006F FF8F FFDA     	movff	plusw1,fsr2h
  7178  0025EA  0E02               	movlw	2
  7179  0025EC  5EDE               	subwf	postinc2,f,c
  7180  0025EE  0E00               	movlw	0
  7181  0025F0  5ADD               	subwfb	postdec2,f,c
  7182  0025F2  006F FF78  F047    	movff	postinc2,btemp+10
  7183  0025F8  006F FF74  F048    	movff	postdec2,btemp+11
  7184  0025FE  0060  F11F  FFD9   	movff	btemp+10,fsr2l
  7185  002604  0060  F123  FFDA   	movff	btemp+11,fsr2h
  7186  00260A  006F FF78  F047    	movff	postinc2,btemp+10
  7187  002610  006F FF74  F048    	movff	postdec2,btemp+11
  7188  002616  5047               	movf	btemp+10,w,c
  7189  002618  6E4D               	movwf	btemp+16,c
  7190  00261A  5048               	movf	btemp+11,w,c
  7191  00261C  6E4E               	movwf	btemp+17,c
  7192  00261E  6A4F               	clrf	btemp+18,c
  7193  002620  6A50               	clrf	btemp+19,c
  7194  002622  6A51               	clrf	btemp+20,c
  7195  002624  6A52               	clrf	btemp+21,c
  7196  002626  6A53               	clrf	btemp+22,c
  7197  002628  6A54               	clrf	btemp+23,c
  7198                           
  7199                           ;stkvar	_llu @ sp[(-23)+2]
  7200  00262A  0EEB               	movlw	-21
  7201  00262C  0060  F137  FFE3   	movff	btemp+16,plusw1
  7202  002632  0EEC               	movlw	-20
  7203  002634  0060  F13B  FFE3   	movff	btemp+17,plusw1
  7204  00263A  0EED               	movlw	-19
  7205  00263C  0060  F13F  FFE3   	movff	btemp+18,plusw1
  7206  002642  0EEE               	movlw	-18
  7207  002644  0060  F143  FFE3   	movff	btemp+19,plusw1
  7208  00264A  0EEF               	movlw	-17
  7209  00264C  0060  F147  FFE3   	movff	btemp+20,plusw1
  7210  002652  0EF0               	movlw	-16
  7211  002654  0060  F14B  FFE3   	movff	btemp+21,plusw1
  7212  00265A  0EF1               	movlw	-15
  7213  00265C  0060  F14F  FFE3   	movff	btemp+22,plusw1
  7214  002662  0EF2               	movlw	-14
  7215  002664  0060  F153  FFE3   	movff	btemp+23,plusw1
  7216                           
  7217                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
  7218                           ;stkvar	_c @ sp[(-23)+22]
  7219  00266A  0EFF               	movlw	-1
  7220  00266C  50E3               	movf	plusw1,w,c
  7221  00266E  6EE6               	movwf	postinc1,c
  7222                           
  7223                           ;stkvar	_llu @ sp[(-24)+2]
  7224  002670  50E1               	movf	fsr1l,w,c
  7225  002672  0FEA               	addlw	-22
  7226  002674  6ED9               	movwf	fsr2l,c
  7227  002676  50E2               	movf	fsr1h,w,c
  7228  002678  6EDA               	movwf	fsr2h,c
  7229  00267A  0EFF               	movlw	255
  7230  00267C  22DA               	addwfc	fsr2h,f,c
  7231  00267E  006F FF7B FFE6     	movff	postinc2,postinc1
  7232  002684  006F FF7B FFE6     	movff	postinc2,postinc1
  7233  00268A  006F FF7B FFE6     	movff	postinc2,postinc1
  7234  002690  006F FF7B FFE6     	movff	postinc2,postinc1
  7235  002696  006F FF7B FFE6     	movff	postinc2,postinc1
  7236  00269C  006F FF7B FFE6     	movff	postinc2,postinc1
  7237  0026A2  006F FF7B FFE6     	movff	postinc2,postinc1
  7238  0026A8  006F FF7B FFE6     	movff	postinc2,postinc1
  7239                           
  7240                           ;stkvar	_fp @ sp[(-32)+-2]
  7241  0026AE  0EDE               	movlw	-34
  7242  0026B0  006F FF8F FFE6     	movff	plusw1,postinc1
  7243  0026B6  006F FF8F FFE6     	movff	plusw1,postinc1
  7244  0026BC  ECBA  F017         	call	_xtoa	;wreg free
  7245  0026C0  D061               	goto	l1773
  7246  0026C2                     l7386:
  7247                           
  7248                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  7249                           ;stkvar	_fmt @ sp[(-23)+-4]
  7250  0026C2  0EE5               	movlw	-27
  7251  0026C4  006F FF8F FFD9     	movff	plusw1,fsr2l
  7252  0026CA  0EE6               	movlw	-26
  7253  0026CC  006F FF8F FFDA     	movff	plusw1,fsr2h
  7254  0026D2  006F FF7F FFF6     	movff	indf2,tblptrl
  7255  0026D8                     	if	1	;There is more than 1 active tblptr byte
  7256  0026D8  0E20               	movlw	high __smallconst
  7257  0026DA  6EF7               	movwf	tblptrh,c
  7258  0026DC                     	endif
  7259  0026DC                     	if	0	;tblptru may be non-zero
  7260  0026DC                     	endif
  7261  0026DC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7262  0026DC  0E00               	movlw	low (__smallconst shr (0+16))
  7263  0026DE  6EF8               	movwf	tblptru,c
  7264  0026E0                     	endif
  7265  0026E0  0008               	tblrd		*
  7266  0026E2  50F5               	movf	tablat,w,c
  7267  0026E4  0A25               	xorlw	37
  7268  0026E6  A4D8               	btfss	status,2,c
  7269  0026E8  D018               	goto	l7396
  7270                           
  7271                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  7272                           ;stkvar	_fmt @ sp[(-23)+-4]
  7273  0026EA  0EE5               	movlw	-27
  7274  0026EC  006F FF8F FFD9     	movff	plusw1,fsr2l
  7275  0026F2  0EE6               	movlw	-26
  7276  0026F4  006F FF8F FFDA     	movff	plusw1,fsr2h
  7277  0026FA  2ADF               	incf	indf2,f,c
  7278                           
  7279                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  7280                           ;stkvar	_fp @ sp[(-23)+-2]
  7281  0026FC  0EE7               	movlw	-25
  7282  0026FE  006F FF8F FFE6     	movff	plusw1,postinc1
  7283  002704  006F FF8F FFE6     	movff	plusw1,postinc1
  7284  00270A  0E25               	movlw	37
  7285  00270C  6EE6               	movwf	postinc1,c
  7286  00270E  0E00               	movlw	0
  7287  002710  6EE6               	movwf	postinc1,c
  7288  002712  EC6D  F023         	call	_fputc	;wreg free
  7289  002716                     l7392:
  7290                           
  7291                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  7292  002716  0E01               	movlw	1
  7293  002718  D00A               	goto	L19
  7294  00271A                     l7396:
  7295                           
  7296                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  7297                           ;stkvar	_fmt @ sp[(-23)+-4]
  7298  00271A  0EE5               	movlw	-27
  7299  00271C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7300  002722  0EE6               	movlw	-26
  7301  002724  006F FF8F FFDA     	movff	plusw1,fsr2h
  7302  00272A  2ADF               	incf	indf2,f,c
  7303                           
  7304                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  7305  00272C  0E00               	movlw	0
  7306  00272E                     L19:
  7307  00272E  6E3D               	movwf	btemp,c
  7308  002730  0E00               	movlw	0
  7309  002732  6E3E               	movwf	btemp+1,c
  7310  002734  D027               	goto	l1773
  7311  002736                     l7402:
  7312                           
  7313                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  7314                           ;stkvar	_fp @ sp[(-23)+-2]
  7315  002736  0EE7               	movlw	-25
  7316  002738  006F FF8F FFE6     	movff	plusw1,postinc1
  7317  00273E  006F FF8F FFE6     	movff	plusw1,postinc1
  7318                           
  7319                           ;stkvar	_fmt @ sp[(-25)+-4]
  7320  002744  0EE3               	movlw	-29
  7321  002746  006F FF8F FFD9     	movff	plusw1,fsr2l
  7322  00274C  0EE4               	movlw	-28
  7323  00274E  006F FF8F FFDA     	movff	plusw1,fsr2h
  7324  002754  006F FF7F FFF6     	movff	indf2,tblptrl
  7325  00275A                     	if	1	;There is more than 1 active tblptr byte
  7326  00275A  0E20               	movlw	high __smallconst
  7327  00275C  6EF7               	movwf	tblptrh,c
  7328  00275E                     	endif
  7329  00275E                     	if	0	;tblptru may be non-zero
  7330  00275E                     	endif
  7331  00275E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7332  00275E  0E00               	movlw	low (__smallconst shr (0+16))
  7333  002760  6EF8               	movwf	tblptru,c
  7334  002762                     	endif
  7335  002762  0008               	tblrd		*
  7336  002764  50F5               	movf	tablat,w,c
  7337  002766  6EE6               	movwf	postinc1,c
  7338  002768  0E00               	movlw	0
  7339  00276A  6EE6               	movwf	postinc1,c
  7340  00276C  EC6D  F023         	call	_fputc	;wreg free
  7341                           
  7342                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  7343                           ;stkvar	_fmt @ sp[(-23)+-4]
  7344  002770  0EE5               	movlw	-27
  7345  002772  006F FF8F FFD9     	movff	plusw1,fsr2l
  7346  002778  0EE6               	movlw	-26
  7347  00277A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7348  002780  2ADF               	incf	indf2,f,c
  7349  002782  D7C9               	goto	l7392
  7350  002784                     l1773:
  7351                           
  7352                           ; _vfpfcnvrt: autosize = 23, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
  7353  002784  0EE3               	movlw	227
  7354  002786  26E1               	addwf	fsr1l,f,c
  7355  002788  0EFF               	movlw	255
  7356  00278A  22E2               	addwfc	fsr1h,f,c
  7357  00278C  0012               	return		;funcret
  7358  00278E                     __end_of_vfpfcnvrt:
  7359                           	opt callstack 0
  7360                           
  7361 ;; *************** function _xtoa *****************
  7362 ;; Defined at:
  7363 ;;		line 623 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  7364 ;; Parameters:    Size  Location     Type
  7365 ;;  fp              2  [STACK] PTR struct _IO_FILE
  7366 ;;		 -> f(5), NULL(0), 
  7367 ;;  d               8  [STACK] unsigned long long 
  7368 ;;  x               1  [STACK] unsigned char 
  7369 ;; Auto vars:     Size  Location     Type
  7370 ;;  n               8  [STACK] unsigned long long 
  7371 ;;  c               2  [STACK] int 
  7372 ;;  i               2  [STACK] int 
  7373 ;;  w               2  [STACK] int 
  7374 ;;  p               2  [STACK] int 
  7375 ;; Return value:  Size  Location     Type
  7376 ;;                  2  [STACK] int 
  7377 ;; Registers used:
  7378 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, prodl
  7379 ;; Tracked objects:
  7380 ;;		On entry : 0/1
  7381 ;;		On exit  : 0/0
  7382 ;;		Unchanged: 0/0
  7383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7388 ;;Total ram usage:        0 bytes
  7389 ;; Hardware stack levels used:    1
  7390 ;; Hardware stack levels required when called:    8
  7391 ;; This function calls:
  7392 ;;		_isalpha
  7393 ;;		_isupper
  7394 ;;		_pad
  7395 ;;		_toupper
  7396 ;; This function is called by:
  7397 ;;		_vfpfcnvrt
  7398 ;; This function uses a reentrant model
  7399 ;;
  7400                           
  7401                           	psect	text34
  7402  002F74                     __ptext34:
  7403                           	opt callstack 0
  7404  002F74                     _xtoa:
  7405                           	opt callstack 0
  7406                           
  7407                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
  7408  002F74  0E14               	movlw	20
  7409  002F76  26E1               	addwf	fsr1l,f,c
  7410  002F78  0E00               	movlw	0
  7411  002F7A  22E2               	addwfc	fsr1h,f,c
  7412                           
  7413                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
  7414                           
  7415                           ;incstack = 0
  7416  002F7C  AE27               	btfss	_prec+1,7,c
  7417                           
  7418                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
  7419  002F7E  9228               	bcf	_flags,1,c
  7420                           
  7421                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
  7422  002F80  BE27               	btfsc	_prec+1,7,c
  7423  002F82  D005               	goto	u4300
  7424  002F84  5027               	movf	_prec+1,w,c
  7425  002F86  E110               	bnz	l7216
  7426  002F88  0426               	decf	_prec,w,c
  7427  002F8A  B0D8               	btfsc	status,0,c
  7428  002F8C  D00D               	goto	l7216
  7429  002F8E                     u4300:
  7430  002F8E  0E01               	movlw	1
  7431  002F90  6E47               	movwf	btemp+10,c
  7432  002F92  0E00               	movlw	0
  7433  002F94  6E48               	movwf	btemp+11,c
  7434                           
  7435                           ;stkvar	_p @ sp[(-20)+18]
  7436  002F96  0EFE               	movlw	-2
  7437  002F98  0060  F11F  FFE3   	movff	btemp+10,plusw1
  7438  002F9E  0EFF               	movlw	-1
  7439  002FA0  0060  F123  FFE3   	movff	btemp+11,plusw1
  7440  002FA6  D008               	goto	l1723
  7441  002FA8                     l7216:
  7442                           
  7443                           ;stkvar	_p @ sp[(-20)+18]
  7444  002FA8  0EFE               	movlw	-2
  7445  002FAA  0060  F09B  FFE3   	movff	_prec,plusw1
  7446  002FB0  0EFF               	movlw	-1
  7447  002FB2  0060  F09F  FFE3   	movff	_prec+1,plusw1
  7448  002FB8                     l1723:
  7449                           
  7450                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 633:     w = width;
  7451                           ;stkvar	_w @ sp[(-20)+16]
  7452  002FB8  0EFC               	movlw	-4
  7453  002FBA  0060  F093  FFE3   	movff	_width,plusw1
  7454  002FC0  0EFD               	movlw	-3
  7455  002FC2  0060  F097  FFE3   	movff	_width+1,plusw1
  7456                           
  7457                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
  7458  002FC8  A828               	btfss	_flags,4,c
  7459  002FCA  D00B               	goto	l7222
  7460                           
  7461                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
  7462                           ;stkvar	_w @ sp[(-20)+16]
  7463  002FCC  50E1               	movf	fsr1l,w,c
  7464  002FCE  0FFC               	addlw	-4
  7465  002FD0  6ED9               	movwf	fsr2l,c
  7466  002FD2  50E2               	movf	fsr1h,w,c
  7467  002FD4  6EDA               	movwf	fsr2h,c
  7468  002FD6  0EFF               	movlw	255
  7469  002FD8  22DA               	addwfc	fsr2h,f,c
  7470  002FDA  0EFE               	movlw	254
  7471  002FDC  26DE               	addwf	postinc2,f,c
  7472  002FDE  0EFF               	movlw	255
  7473  002FE0  22DD               	addwfc	postdec2,f,c
  7474  002FE2                     l7222:
  7475                           
  7476                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 639:     n = d;
  7477                           ;stkvar	_d @ sp[(-20)+-10]
  7478  002FE2  0EE2               	movlw	226
  7479  002FE4  24E1               	addwf	fsr1l,w,c
  7480  002FE6  6ED9               	movwf	fsr2l,c
  7481  002FE8  0EFF               	movlw	255
  7482  002FEA  20E2               	addwfc	fsr1h,w,c
  7483  002FEC  6EDA               	movwf	fsr2h,c
  7484                           
  7485                           ;stkvar	_n @ sp[(-20)+4]
  7486  002FEE  0E08               	movlw	8
  7487  002FF0  6E3D               	movwf	btemp,c
  7488  002FF2  0EF0               	movlw	-16
  7489  002FF4                     us432999:
  7490  002FF4  006F FF7B FFE3     	movff	postinc2,plusw1
  7491  002FFA  28E8               	incf	wreg,w,c
  7492  002FFC  2E3D               	decfsz	btemp,f,c
  7493  002FFE  D7FA               	bra	us432999
  7494                           
  7495                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
  7496  003000  0E1F               	movlw	31
  7497  003002  6E47               	movwf	btemp+10,c
  7498  003004  0E00               	movlw	0
  7499  003006  6E48               	movwf	btemp+11,c
  7500                           
  7501                           ;stkvar	_i @ sp[(-20)+14]
  7502  003008  0EFA               	movlw	-6
  7503  00300A  0060  F11F  FFE3   	movff	btemp+10,plusw1
  7504  003010  0EFB               	movlw	-5
  7505  003012  0060  F123  FFE3   	movff	btemp+11,plusw1
  7506                           
  7507                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
  7508  003018  0100               	movlb	0	; () banked
  7509  00301A  6BF8               	clrf	(_dbuf+31)& (0+255),b
  7510                           
  7511                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7512  00301C  D0E8               	goto	l7260
  7513  00301E                     l7228:
  7514                           
  7515                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 643:         --i;
  7516                           ;stkvar	_i @ sp[(-20)+14]
  7517  00301E  50E1               	movf	fsr1l,w,c
  7518  003020  0FFA               	addlw	-6
  7519  003022  6ED9               	movwf	fsr2l,c
  7520  003024  50E2               	movf	fsr1h,w,c
  7521  003026  6EDA               	movwf	fsr2h,c
  7522  003028  0EFF               	movlw	255
  7523  00302A  22DA               	addwfc	fsr2h,f,c
  7524  00302C  06DE               	decf	postinc2,f,c
  7525  00302E  0E00               	movlw	0
  7526  003030  5ADD               	subwfb	postdec2,f,c
  7527                           
  7528                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
  7529                           ;stkvar	_n @ sp[(-20)+4]
  7530  003032  0EF0               	movlw	-16
  7531  003034  006F FF8C  F047    	movff	plusw1,btemp+10
  7532  00303A  0EF1               	movlw	-15
  7533  00303C  006F FF8C  F048    	movff	plusw1,btemp+11
  7534  003042  0E0F               	movlw	15
  7535  003044  1647               	andwf	btemp+10,f,c
  7536  003046  0E00               	movlw	0
  7537  003048  1648               	andwf	btemp+11,f,c
  7538                           
  7539                           ;stkvar	_c @ sp[(-20)+12]
  7540  00304A  0EF8               	movlw	-8
  7541  00304C  0060  F11F  FFE3   	movff	btemp+10,plusw1
  7542  003052  0EF9               	movlw	-7
  7543  003054  0060  F123  FFE3   	movff	btemp+11,plusw1
  7544                           
  7545                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
  7546                           ;stkvar	_c @ sp[(-20)+12]
  7547  00305A  0EF9               	movlw	-7
  7548  00305C  BEE3               	btfsc	plusw1,7,c
  7549  00305E  D00F               	goto	l7236
  7550  003060  0EF9               	movlw	-7
  7551  003062  50E3               	movf	plusw1,w,c
  7552  003064  E108               	bnz	u4330
  7553  003066  0EF8               	movlw	-8
  7554  003068  006F FF8C  F03D    	movff	plusw1,btemp
  7555  00306E  0E0A               	movlw	10
  7556  003070  5E3D               	subwf	btemp,f,c
  7557  003072  A0D8               	btfss	status,0,c
  7558  003074  D004               	goto	l7236
  7559  003076                     u4330:
  7560                           
  7561                           ;stkvar	_c @ sp[(-20)+12]
  7562  003076  0EF8               	movlw	-8
  7563  003078  50E3               	movf	plusw1,w,c
  7564  00307A  0F57               	addlw	87
  7565  00307C  D003               	goto	L20
  7566  00307E                     l7236:
  7567                           
  7568                           ;stkvar	_c @ sp[(-20)+12]
  7569  00307E  0EF8               	movlw	-8
  7570  003080  50E3               	movf	plusw1,w,c
  7571  003082  0F30               	addlw	48
  7572  003084                     L20:
  7573  003084  6E47               	movwf	btemp+10,c
  7574  003086  0EF9               	movlw	-7
  7575  003088  006F FF8C  F048    	movff	plusw1,btemp+11
  7576  00308E  0E00               	movlw	0
  7577  003090  2248               	addwfc	btemp+11,f,c
  7578                           
  7579                           ;stkvar	_c @ sp[(-20)+12]
  7580  003092  0EF8               	movlw	-8
  7581  003094  0060  F11F  FFE3   	movff	btemp+10,plusw1
  7582  00309A  0EF9               	movlw	-7
  7583  00309C  0060  F123  FFE3   	movff	btemp+11,plusw1
  7584  0030A2  0EBF               	movlw	191
  7585  0030A4  6E47               	movwf	btemp+10,c
  7586  0030A6  0EFF               	movlw	255
  7587  0030A8  6E48               	movwf	btemp+11,c
  7588                           
  7589                           ;stkvar	_x @ sp[(-20)+-11]
  7590  0030AA  0EE1               	movlw	-31
  7591  0030AC  50E3               	movf	plusw1,w,c
  7592  0030AE  6E45               	movwf	btemp+8,c
  7593  0030B0  6A46               	clrf	btemp+9,c
  7594  0030B2  5047               	movf	btemp+10,w,c
  7595  0030B4  2645               	addwf	btemp+8,f,c
  7596  0030B6  5048               	movf	btemp+11,w,c
  7597  0030B8  2246               	addwfc	btemp+9,f,c
  7598  0030BA  5046               	movf	btemp+9,w,c
  7599  0030BC  E106               	bnz	u4340
  7600  0030BE  0E1A               	movlw	26
  7601  0030C0  5C45               	subwf	btemp+8,w,c
  7602  0030C2  B0D8               	btfsc	status,0,c
  7603  0030C4  D002               	goto	u4340
  7604  0030C6  0E01               	movlw	1
  7605  0030C8  D001               	goto	u4350
  7606  0030CA                     u4340:
  7607  0030CA  0E00               	movlw	0
  7608  0030CC                     u4350:
  7609  0030CC  6E47               	movwf	btemp+10,c
  7610  0030CE  6A48               	clrf	btemp+11,c
  7611                           
  7612                           ;stkvar	_xtoa$3823 @ sp[(-20)+2]
  7613  0030D0  0EEE               	movlw	-18
  7614  0030D2  0060  F11F  FFE3   	movff	btemp+10,plusw1
  7615  0030D8  0EEF               	movlw	-17
  7616  0030DA  0060  F123  FFE3   	movff	btemp+11,plusw1
  7617                           
  7618                           ;stkvar	_xtoa$3823 @ sp[(-20)+2]
  7619  0030E0  0EEE               	movlw	-18
  7620  0030E2  006F FF8C  F03D    	movff	plusw1,btemp
  7621  0030E8  0EEF               	movlw	-17
  7622  0030EA  50E3               	movf	plusw1,w,c
  7623  0030EC  103D               	iorwf	btemp,w,c
  7624  0030EE  B4D8               	btfsc	status,2,c
  7625  0030F0  D041               	goto	l7252
  7626  0030F2  0E9F               	movlw	159
  7627  0030F4  6E47               	movwf	btemp+10,c
  7628  0030F6  0EFF               	movlw	255
  7629  0030F8  6E48               	movwf	btemp+11,c
  7630                           
  7631                           ;stkvar	_c @ sp[(-20)+12]
  7632  0030FA  0EF8               	movlw	-8
  7633  0030FC  006F FF8C  F045    	movff	plusw1,btemp+8
  7634  003102  0EF9               	movlw	-7
  7635  003104  006F FF8C  F046    	movff	plusw1,btemp+9
  7636  00310A  0E20               	movlw	32
  7637  00310C  1245               	iorwf	btemp+8,f,c
  7638  00310E  0E00               	movlw	0
  7639  003110  1246               	iorwf	btemp+9,f,c
  7640  003112  5047               	movf	btemp+10,w,c
  7641  003114  2645               	addwf	btemp+8,f,c
  7642  003116  5048               	movf	btemp+11,w,c
  7643  003118  2246               	addwfc	btemp+9,f,c
  7644  00311A  5046               	movf	btemp+9,w,c
  7645  00311C  E106               	bnz	u4370
  7646  00311E  0E1A               	movlw	26
  7647  003120  5C45               	subwf	btemp+8,w,c
  7648  003122  B0D8               	btfsc	status,0,c
  7649  003124  D002               	goto	u4370
  7650  003126  0E01               	movlw	1
  7651  003128  D001               	goto	u4380
  7652  00312A                     u4370:
  7653  00312A  0E00               	movlw	0
  7654  00312C                     u4380:
  7655  00312C  6E47               	movwf	btemp+10,c
  7656  00312E  6A48               	clrf	btemp+11,c
  7657                           
  7658                           ;stkvar	_xtoa$3824 @ sp[(-20)+0]
  7659  003130  0EEC               	movlw	-20
  7660  003132  0060  F11F  FFE3   	movff	btemp+10,plusw1
  7661  003138  0EED               	movlw	-19
  7662  00313A  0060  F123  FFE3   	movff	btemp+11,plusw1
  7663                           
  7664                           ;stkvar	_xtoa$3824 @ sp[(-20)+0]
  7665  003140  0EEC               	movlw	-20
  7666  003142  006F FF8C  F03D    	movff	plusw1,btemp
  7667  003148  0EED               	movlw	-19
  7668  00314A  50E3               	movf	plusw1,w,c
  7669  00314C  103D               	iorwf	btemp,w,c
  7670  00314E  B4D8               	btfsc	status,2,c
  7671  003150  D011               	goto	l7252
  7672                           
  7673                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
  7674                           ;stkvar	_c @ sp[(-20)+12]
  7675  003152  0EF8               	movlw	-8
  7676  003154  006F FF8F FFE6     	movff	plusw1,postinc1
  7677  00315A  006F FF8F FFE6     	movff	plusw1,postinc1
  7678  003160  ECF2  F027         	call	_toupper	;wreg free
  7679                           
  7680                           ;stkvar	_c @ sp[(-20)+12]
  7681  003164  0EF8               	movlw	-8
  7682  003166  0060  F0F7  FFE3   	movff	btemp,plusw1
  7683  00316C  0EF9               	movlw	-7
  7684  00316E  0060  F0FB  FFE3   	movff	btemp+1,plusw1
  7685  003174                     l7252:
  7686                           
  7687                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
  7688                           ;stkvar	_c @ sp[(-20)+12]
  7689                           ;stkvar	_i @ sp[(-20)+14]
  7690  003174  0EFA               	movlw	-6
  7691  003176  006F FF8C  F048    	movff	plusw1,btemp+11
  7692  00317C  5048               	movf	btemp+11,w,c
  7693  00317E  0FD9               	addlw	low _dbuf
  7694  003180  6ED9               	movwf	fsr2l,c
  7695  003182  6ADA               	clrf	fsr2h,c
  7696  003184  0EF8               	movlw	-8
  7697  003186  006F FF8F FFDF     	movff	plusw1,indf2
  7698                           
  7699                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 650:         --p;
  7700                           ;stkvar	_p @ sp[(-20)+18]
  7701  00318C  50E1               	movf	fsr1l,w,c
  7702  00318E  0FFE               	addlw	-2
  7703  003190  6ED9               	movwf	fsr2l,c
  7704  003192  50E2               	movf	fsr1h,w,c
  7705  003194  6EDA               	movwf	fsr2h,c
  7706  003196  0EFF               	movlw	255
  7707  003198  22DA               	addwfc	fsr2h,f,c
  7708  00319A  06DE               	decf	postinc2,f,c
  7709  00319C  0E00               	movlw	0
  7710  00319E  5ADD               	subwfb	postdec2,f,c
  7711                           
  7712                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 651:         --w;
  7713                           ;stkvar	_w @ sp[(-20)+16]
  7714  0031A0  50E1               	movf	fsr1l,w,c
  7715  0031A2  0FFC               	addlw	-4
  7716  0031A4  6ED9               	movwf	fsr2l,c
  7717  0031A6  50E2               	movf	fsr1h,w,c
  7718  0031A8  6EDA               	movwf	fsr2h,c
  7719  0031AA  0EFF               	movlw	255
  7720  0031AC  22DA               	addwfc	fsr2h,f,c
  7721  0031AE  06DE               	decf	postinc2,f,c
  7722  0031B0  0E00               	movlw	0
  7723  0031B2  5ADD               	subwfb	postdec2,f,c
  7724                           
  7725                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
  7726  0031B4  0E04               	movlw	4
  7727  0031B6  6E48               	movwf	btemp+11,c
  7728                           
  7729                           ;stkvar	_n @ sp[(-20)+4]
  7730  0031B8  50E1               	movf	fsr1l,w,c
  7731  0031BA  0FF0               	addlw	-16
  7732  0031BC  6ED9               	movwf	fsr2l,c
  7733  0031BE  50E2               	movf	fsr1h,w,c
  7734  0031C0  6EDA               	movwf	fsr2h,c
  7735  0031C2  0EFF               	movlw	255
  7736  0031C4  22DA               	addwfc	fsr2h,f,c
  7737  0031C6  2848               	incf	btemp+11,w,c
  7738  0031C8  52DE               	movf	postinc2,f,c
  7739  0031CA  D00F               	goto	u4400
  7740  0031CC                     u4405:
  7741  0031CC  52DE               	movf	postinc2,f,c
  7742  0031CE  52DE               	movf	postinc2,f,c
  7743  0031D0  52DE               	movf	postinc2,f,c
  7744  0031D2  52DE               	movf	postinc2,f,c
  7745  0031D4  52DE               	movf	postinc2,f,c
  7746  0031D6  52DE               	movf	postinc2,f,c
  7747  0031D8  90D8               	bcf	status,0,c
  7748  0031DA  32DD               	rrcf	postdec2,f,c
  7749  0031DC  32DD               	rrcf	postdec2,f,c
  7750  0031DE  32DD               	rrcf	postdec2,f,c
  7751  0031E0  32DD               	rrcf	postdec2,f,c
  7752  0031E2  32DD               	rrcf	postdec2,f,c
  7753  0031E4  32DD               	rrcf	postdec2,f,c
  7754  0031E6  32DD               	rrcf	postdec2,f,c
  7755  0031E8  32DE               	rrcf	postinc2,f,c
  7756  0031EA                     u4400:
  7757  0031EA  2EE8               	decfsz	wreg,f,c
  7758  0031EC  D7EF               	goto	u4405
  7759  0031EE                     l7260:
  7760                           
  7761                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7762                           ;stkvar	_i @ sp[(-20)+14]
  7763  0031EE  0EFB               	movlw	-5
  7764  0031F0  BEE3               	btfsc	plusw1,7,c
  7765  0031F2  D03A               	goto	u4450
  7766  0031F4  0EFB               	movlw	-5
  7767  0031F6  50E3               	movf	plusw1,w,c
  7768  0031F8  E108               	bnz	u4410
  7769  0031FA  0EFA               	movlw	-6
  7770  0031FC  006F FF8C  F03D    	movff	plusw1,btemp
  7771  003202  0E02               	movlw	2
  7772  003204  5E3D               	subwf	btemp,f,c
  7773  003206  A0D8               	btfss	status,0,c
  7774  003208  D02F               	goto	u4450
  7775  00320A                     u4410:
  7776                           
  7777                           ;stkvar	_n @ sp[(-20)+4]
  7778  00320A  0EF0               	movlw	-16
  7779  00320C  50E3               	movf	plusw1,w,c
  7780  00320E  E115               	bnz	u4421
  7781  003210  0EF1               	movlw	-15
  7782  003212  50E3               	movf	plusw1,w,c
  7783  003214  E112               	bnz	u4421
  7784  003216  0EF2               	movlw	-14
  7785  003218  50E3               	movf	plusw1,w,c
  7786  00321A  E10F               	bnz	u4421
  7787  00321C  0EF3               	movlw	-13
  7788  00321E  50E3               	movf	plusw1,w,c
  7789  003220  E10C               	bnz	u4421
  7790  003222  0EF4               	movlw	-12
  7791  003224  50E3               	movf	plusw1,w,c
  7792  003226  E109               	bnz	u4421
  7793  003228  0EF5               	movlw	-11
  7794  00322A  50E3               	movf	plusw1,w,c
  7795  00322C  E106               	bnz	u4421
  7796  00322E  0EF6               	movlw	-10
  7797  003230  50E3               	movf	plusw1,w,c
  7798  003232  E103               	bnz	u4421
  7799  003234  0EF7               	movlw	-9
  7800  003236  50E3               	movf	plusw1,w,c
  7801  003238  A4D8               	btfss	status,2,c
  7802  00323A                     u4421:
  7803  00323A  D6F1               	goto	l7228
  7804                           
  7805                           ;stkvar	_p @ sp[(-20)+18]
  7806  00323C  0EFF               	movlw	-1
  7807  00323E  BEE3               	btfsc	plusw1,7,c
  7808  003240  D007               	goto	u4430
  7809  003242  0EFF               	movlw	-1
  7810  003244  50E3               	movf	plusw1,w,c
  7811  003246  E103               	bnz	u4431
  7812  003248  0EFE               	movlw	-2
  7813  00324A  04E3               	decf	plusw1,w,c
  7814  00324C  B0D8               	btfsc	status,0,c
  7815  00324E                     u4431:
  7816  00324E  D6E7               	goto	l7228
  7817  003250                     u4430:
  7818                           
  7819                           ;stkvar	_w @ sp[(-20)+16]
  7820  003250  0EFD               	movlw	-3
  7821  003252  BEE3               	btfsc	plusw1,7,c
  7822  003254  D009               	goto	u4450
  7823  003256  0EFD               	movlw	-3
  7824  003258  50E3               	movf	plusw1,w,c
  7825  00325A  E104               	bnz	u4440
  7826  00325C  0EFC               	movlw	-4
  7827  00325E  04E3               	decf	plusw1,w,c
  7828  003260  A0D8               	btfss	status,0,c
  7829  003262  D002               	goto	u4450
  7830  003264                     u4440:
  7831  003264  B228               	btfsc	_flags,1,c
  7832  003266  D6DB               	goto	l7228
  7833  003268                     u4450:
  7834                           
  7835                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
  7836  003268  A828               	btfss	_flags,4,c
  7837  00326A  D02A               	goto	l7276
  7838                           
  7839                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 657:         --i;
  7840                           ;stkvar	_i @ sp[(-20)+14]
  7841  00326C  50E1               	movf	fsr1l,w,c
  7842  00326E  0FFA               	addlw	-6
  7843  003270  6ED9               	movwf	fsr2l,c
  7844  003272  50E2               	movf	fsr1h,w,c
  7845  003274  6EDA               	movwf	fsr2h,c
  7846  003276  0EFF               	movlw	255
  7847  003278  22DA               	addwfc	fsr2h,f,c
  7848  00327A  06DE               	decf	postinc2,f,c
  7849  00327C  0E00               	movlw	0
  7850  00327E  5ADD               	subwfb	postdec2,f,c
  7851                           
  7852                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
  7853                           ;stkvar	_x @ sp[(-20)+-11]
  7854                           ;stkvar	_i @ sp[(-20)+14]
  7855  003280  0EFA               	movlw	-6
  7856  003282  006F FF8C  F048    	movff	plusw1,btemp+11
  7857  003288  5048               	movf	btemp+11,w,c
  7858  00328A  0FD9               	addlw	low _dbuf
  7859  00328C  6ED9               	movwf	fsr2l,c
  7860  00328E  6ADA               	clrf	fsr2h,c
  7861  003290  0EE1               	movlw	-31
  7862  003292  006F FF8F FFDF     	movff	plusw1,indf2
  7863                           
  7864                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 659:         --i;
  7865                           ;stkvar	_i @ sp[(-20)+14]
  7866  003298  50E1               	movf	fsr1l,w,c
  7867  00329A  0FFA               	addlw	-6
  7868  00329C  6ED9               	movwf	fsr2l,c
  7869  00329E  50E2               	movf	fsr1h,w,c
  7870  0032A0  6EDA               	movwf	fsr2h,c
  7871  0032A2  0EFF               	movlw	255
  7872  0032A4  22DA               	addwfc	fsr2h,f,c
  7873  0032A6  06DE               	decf	postinc2,f,c
  7874  0032A8  0E00               	movlw	0
  7875  0032AA  5ADD               	subwfb	postdec2,f,c
  7876                           
  7877                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
  7878                           ;stkvar	_i @ sp[(-20)+14]
  7879  0032AC  0EFA               	movlw	-6
  7880  0032AE  006F FF8C  F048    	movff	plusw1,btemp+11
  7881  0032B4  5048               	movf	btemp+11,w,c
  7882  0032B6  0FD9               	addlw	low _dbuf
  7883  0032B8  6ED9               	movwf	fsr2l,c
  7884  0032BA  6ADA               	clrf	fsr2h,c
  7885  0032BC  0E30               	movlw	48
  7886  0032BE  6EDF               	movwf	indf2,c
  7887  0032C0                     l7276:
  7888                           
  7889                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
  7890                           ;stkvar	_w @ sp[(-20)+16]
  7891  0032C0  0EFC               	movlw	-4
  7892  0032C2  006F FF8F FFE6     	movff	plusw1,postinc1
  7893  0032C8  006F FF8F FFE6     	movff	plusw1,postinc1
  7894                           
  7895                           ;stkvar	_i @ sp[(-22)+14]
  7896  0032CE  0EF8               	movlw	-8
  7897  0032D0  006F FF8C  F048    	movff	plusw1,btemp+11
  7898  0032D6  5048               	movf	btemp+11,w,c
  7899  0032D8  0FD9               	addlw	low _dbuf
  7900  0032DA  6EE6               	movwf	postinc1,c
  7901                           
  7902                           ;stkvar	_fp @ sp[(-23)+-2]
  7903  0032DC  0EE7               	movlw	-25
  7904  0032DE  006F FF8F FFE6     	movff	plusw1,postinc1
  7905  0032E4  006F FF8F FFE6     	movff	plusw1,postinc1
  7906  0032EA  ECF3  F023         	call	_pad	;wreg free
  7907                           
  7908                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
  7909  0032EE  0EE1               	movlw	225
  7910  0032F0  26E1               	addwf	fsr1l,f,c
  7911  0032F2  0EFF               	movlw	255
  7912  0032F4  22E2               	addwfc	fsr1h,f,c
  7913  0032F6  0012               	return		;funcret
  7914  0032F8                     __end_of_xtoa:
  7915                           	opt callstack 0
  7916                           
  7917 ;; *************** function _toupper *****************
  7918 ;; Defined at:
  7919 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/toupper.c"
  7920 ;; Parameters:    Size  Location     Type
  7921 ;;  c               2  [STACK] int 
  7922 ;; Auto vars:     Size  Location     Type
  7923 ;;		None
  7924 ;; Return value:  Size  Location     Type
  7925 ;;                  2  [STACK] int 
  7926 ;; Registers used:
  7927 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
  7928 ;; Tracked objects:
  7929 ;;		On entry : 0/0
  7930 ;;		On exit  : 0/0
  7931 ;;		Unchanged: 0/0
  7932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7936 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7937 ;;Total ram usage:        0 bytes
  7938 ;; Hardware stack levels used:    1
  7939 ;; Hardware stack levels required when called:    4
  7940 ;; This function calls:
  7941 ;;		_islower
  7942 ;; This function is called by:
  7943 ;;		_xtoa
  7944 ;; This function uses a reentrant model
  7945 ;;
  7946                           
  7947                           	psect	text35
  7948  004FE4                     __ptext35:
  7949                           	opt callstack 0
  7950  004FE4                     _toupper:
  7951                           	opt callstack 0
  7952                           
  7953                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7954  004FE4  52E6               	movf	postinc1,f,c
  7955  004FE6  52E6               	movf	postinc1,f,c
  7956                           
  7957                           ;stkvar	_c @ sp[(-2)+-2]
  7958                           
  7959                           ;incstack = 0
  7960  004FE8  0EFC               	movlw	-4
  7961  004FEA  50E3               	movf	plusw1,w,c
  7962  004FEC  0F9F               	addlw	159
  7963  004FEE  6E47               	movwf	btemp+10,c
  7964  004FF0  0EFD               	movlw	-3
  7965  004FF2  006F FF8C  F048    	movff	plusw1,btemp+11
  7966  004FF8  0EFF               	movlw	255
  7967  004FFA  2248               	addwfc	btemp+11,f,c
  7968  004FFC  5048               	movf	btemp+11,w,c
  7969  004FFE  E106               	bnz	u2210
  7970  005000  0E1A               	movlw	26
  7971  005002  5C47               	subwf	btemp+10,w,c
  7972  005004  B0D8               	btfsc	status,0,c
  7973  005006  D002               	goto	u2210
  7974  005008  0E01               	movlw	1
  7975  00500A  D001               	goto	u2220
  7976  00500C                     u2210:
  7977  00500C  0E00               	movlw	0
  7978  00500E                     u2220:
  7979  00500E  6E47               	movwf	btemp+10,c
  7980  005010  6A48               	clrf	btemp+11,c
  7981                           
  7982                           ;stkvar	_toupper$4413 @ sp[(-2)+0]
  7983  005012  0EFE               	movlw	-2
  7984  005014  0060  F11F  FFE3   	movff	btemp+10,plusw1
  7985  00501A  0EFF               	movlw	-1
  7986  00501C  0060  F123  FFE3   	movff	btemp+11,plusw1
  7987                           
  7988                           ;stkvar	_toupper$4413 @ sp[(-2)+0]
  7989  005022  0EFE               	movlw	-2
  7990  005024  006F FF8C  F03D    	movff	plusw1,btemp
  7991  00502A  0EFF               	movlw	-1
  7992  00502C  50E3               	movf	plusw1,w,c
  7993  00502E  103D               	iorwf	btemp,w,c
  7994  005030  B4D8               	btfsc	status,2,c
  7995  005032  D00D               	goto	l4964
  7996                           
  7997                           ;stkvar	_c @ sp[(-2)+-2]
  7998  005034  0EFC               	movlw	-4
  7999  005036  006F FF8C  F03D    	movff	plusw1,btemp
  8000  00503C  0EFD               	movlw	-3
  8001  00503E  006F FF8C  F03E    	movff	plusw1,btemp+1
  8002  005044  0E5F               	movlw	95
  8003  005046  163D               	andwf	btemp,f,c
  8004  005048  0E00               	movlw	0
  8005  00504A  163E               	andwf	btemp+1,f,c
  8006  00504C  D008               	goto	l2585
  8007  00504E                     l4964:
  8008                           
  8009                           ;stkvar	_c @ sp[(-2)+-2]
  8010  00504E  0EFC               	movlw	-4
  8011  005050  006F FF8C  F03D    	movff	plusw1,btemp
  8012  005056  0EFD               	movlw	-3
  8013  005058  006F FF8C  F03E    	movff	plusw1,btemp+1
  8014  00505E                     l2585:
  8015                           
  8016                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  8017  00505E  52E5               	movf	postdec1,f,c
  8018  005060  52E5               	movf	postdec1,f,c
  8019  005062  52E5               	movf	postdec1,f,c
  8020  005064  52E5               	movf	postdec1,f,c
  8021  005066  0012               	return		;funcret
  8022  005068                     __end_of_toupper:
  8023                           	opt callstack 0
  8024                           
  8025 ;; *************** function _islower *****************
  8026 ;; Defined at:
  8027 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/islower.c"
  8028 ;; Parameters:    Size  Location     Type
  8029 ;;  c               2  [STACK] int 
  8030 ;; Auto vars:     Size  Location     Type
  8031 ;;		None
  8032 ;; Return value:  Size  Location     Type
  8033 ;;                  2  [STACK] int 
  8034 ;; Registers used:
  8035 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
  8036 ;; Tracked objects:
  8037 ;;		On entry : 0/0
  8038 ;;		On exit  : 0/0
  8039 ;;		Unchanged: 0/0
  8040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8045 ;;Total ram usage:        0 bytes
  8046 ;; Hardware stack levels used:    1
  8047 ;; Hardware stack levels required when called:    3
  8048 ;; This function calls:
  8049 ;;		Nothing
  8050 ;; This function is called by:
  8051 ;;		_toupper
  8052 ;; This function uses a reentrant model
  8053 ;;
  8054                           
  8055                           	psect	text36
  8056  005876                     __ptext36:
  8057                           	opt callstack 0
  8058  005876                     _islower:
  8059                           	opt callstack 22
  8060                           
  8061                           ;stkvar	_c @ sp[(0)+-2]
  8062                           
  8063                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8064                           ;incstack = 0
  8065  005876  0EFE               	movlw	-2
  8066  005878  50E3               	movf	plusw1,w,c
  8067  00587A  0F9F               	addlw	159
  8068  00587C  6E47               	movwf	btemp+10,c
  8069  00587E  0EFF               	movlw	-1
  8070  005880  006F FF8C  F048    	movff	plusw1,btemp+11
  8071  005886  0EFF               	movlw	255
  8072  005888  2248               	addwfc	btemp+11,f,c
  8073  00588A  5048               	movf	btemp+11,w,c
  8074  00588C  E106               	bnz	u2100
  8075  00588E  0E1A               	movlw	26
  8076  005890  5C47               	subwf	btemp+10,w,c
  8077  005892  B0D8               	btfsc	status,0,c
  8078  005894  D002               	goto	u2100
  8079  005896  0E01               	movlw	1
  8080  005898  D001               	goto	u2110
  8081  00589A                     u2100:
  8082  00589A  0E00               	movlw	0
  8083  00589C                     u2110:
  8084  00589C  6E3D               	movwf	btemp,c
  8085  00589E  6A3E               	clrf	btemp+1,c
  8086                           
  8087                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  8088  0058A0  52E5               	movf	postdec1,f,c
  8089  0058A2  52E5               	movf	postdec1,f,c
  8090  0058A4  0012               	return		;funcret
  8091  0058A6                     __end_of_islower:
  8092                           	opt callstack 0
  8093                           
  8094 ;; *************** function _isupper *****************
  8095 ;; Defined at:
  8096 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isupper.c"
  8097 ;; Parameters:    Size  Location     Type
  8098 ;;  c               2  [STACK] int 
  8099 ;; Auto vars:     Size  Location     Type
  8100 ;;		None
  8101 ;; Return value:  Size  Location     Type
  8102 ;;                  2  [STACK] int 
  8103 ;; Registers used:
  8104 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
  8105 ;; Tracked objects:
  8106 ;;		On entry : 0/0
  8107 ;;		On exit  : 0/0
  8108 ;;		Unchanged: 0/0
  8109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8114 ;;Total ram usage:        0 bytes
  8115 ;; Hardware stack levels used:    1
  8116 ;; Hardware stack levels required when called:    3
  8117 ;; This function calls:
  8118 ;;		Nothing
  8119 ;; This function is called by:
  8120 ;;		_xtoa
  8121 ;; This function uses a reentrant model
  8122 ;;
  8123                           
  8124                           	psect	text37
  8125  0058A6                     __ptext37:
  8126                           	opt callstack 0
  8127  0058A6                     _isupper:
  8128                           	opt callstack 23
  8129                           
  8130                           ;stkvar	_c @ sp[(0)+-2]
  8131                           
  8132                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8133                           ;incstack = 0
  8134  0058A6  0EFE               	movlw	-2
  8135  0058A8  50E3               	movf	plusw1,w,c
  8136  0058AA  0FBF               	addlw	191
  8137  0058AC  6E47               	movwf	btemp+10,c
  8138  0058AE  0EFF               	movlw	-1
  8139  0058B0  006F FF8C  F048    	movff	plusw1,btemp+11
  8140  0058B6  0EFF               	movlw	255
  8141  0058B8  2248               	addwfc	btemp+11,f,c
  8142  0058BA  5048               	movf	btemp+11,w,c
  8143  0058BC  E106               	bnz	u2170
  8144  0058BE  0E1A               	movlw	26
  8145  0058C0  5C47               	subwf	btemp+10,w,c
  8146  0058C2  B0D8               	btfsc	status,0,c
  8147  0058C4  D002               	goto	u2170
  8148  0058C6  0E01               	movlw	1
  8149  0058C8  D001               	goto	u2180
  8150  0058CA                     u2170:
  8151  0058CA  0E00               	movlw	0
  8152  0058CC                     u2180:
  8153  0058CC  6E3D               	movwf	btemp,c
  8154  0058CE  6A3E               	clrf	btemp+1,c
  8155                           
  8156                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  8157  0058D0  52E5               	movf	postdec1,f,c
  8158  0058D2  52E5               	movf	postdec1,f,c
  8159  0058D4  0012               	return		;funcret
  8160  0058D6                     __end_of_isupper:
  8161                           	opt callstack 0
  8162                           
  8163 ;; *************** function _isalpha *****************
  8164 ;; Defined at:
  8165 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isalpha.c"
  8166 ;; Parameters:    Size  Location     Type
  8167 ;;  c               2  [STACK] int 
  8168 ;; Auto vars:     Size  Location     Type
  8169 ;;		None
  8170 ;; Return value:  Size  Location     Type
  8171 ;;                  2  [STACK] int 
  8172 ;; Registers used:
  8173 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
  8174 ;; Tracked objects:
  8175 ;;		On entry : 0/0
  8176 ;;		On exit  : 0/0
  8177 ;;		Unchanged: 0/0
  8178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8183 ;;Total ram usage:        0 bytes
  8184 ;; Hardware stack levels used:    1
  8185 ;; Hardware stack levels required when called:    3
  8186 ;; This function calls:
  8187 ;;		Nothing
  8188 ;; This function is called by:
  8189 ;;		_xtoa
  8190 ;; This function uses a reentrant model
  8191 ;;
  8192                           
  8193                           	psect	text38
  8194  0056B8                     __ptext38:
  8195                           	opt callstack 0
  8196  0056B8                     _isalpha:
  8197                           	opt callstack 23
  8198                           
  8199                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8200                           ;incstack = 0
  8201  0056B8  0E9F               	movlw	159
  8202  0056BA  6E47               	movwf	btemp+10,c
  8203  0056BC  0EFF               	movlw	255
  8204  0056BE  6E48               	movwf	btemp+11,c
  8205                           
  8206                           ;stkvar	_c @ sp[(0)+-2]
  8207  0056C0  0EFE               	movlw	-2
  8208  0056C2  006F FF8C  F045    	movff	plusw1,btemp+8
  8209  0056C8  0EFF               	movlw	-1
  8210  0056CA  006F FF8C  F046    	movff	plusw1,btemp+9
  8211  0056D0  0E20               	movlw	32
  8212  0056D2  1245               	iorwf	btemp+8,f,c
  8213  0056D4  0E00               	movlw	0
  8214  0056D6  1246               	iorwf	btemp+9,f,c
  8215  0056D8  5047               	movf	btemp+10,w,c
  8216  0056DA  2645               	addwf	btemp+8,f,c
  8217  0056DC  5048               	movf	btemp+11,w,c
  8218  0056DE  2246               	addwfc	btemp+9,f,c
  8219  0056E0  5046               	movf	btemp+9,w,c
  8220  0056E2  E106               	bnz	u2190
  8221  0056E4  0E1A               	movlw	26
  8222  0056E6  5C45               	subwf	btemp+8,w,c
  8223  0056E8  B0D8               	btfsc	status,0,c
  8224  0056EA  D002               	goto	u2190
  8225  0056EC  0E01               	movlw	1
  8226  0056EE  D001               	goto	u2200
  8227  0056F0                     u2190:
  8228  0056F0  0E00               	movlw	0
  8229  0056F2                     u2200:
  8230  0056F2  6E3D               	movwf	btemp,c
  8231  0056F4  6A3E               	clrf	btemp+1,c
  8232                           
  8233                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  8234  0056F6  52E5               	movf	postdec1,f,c
  8235  0056F8  52E5               	movf	postdec1,f,c
  8236  0056FA  0012               	return		;funcret
  8237  0056FC                     __end_of_isalpha:
  8238                           	opt callstack 0
  8239                           
  8240 ;; *************** function _stoa *****************
  8241 ;; Defined at:
  8242 ;;		line 546 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  8243 ;; Parameters:    Size  Location     Type
  8244 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8245 ;;		 -> f(5), NULL(0), 
  8246 ;;  s               2  [STACK] PTR unsigned char 
  8247 ;;		 -> ?_printf(2), ?_sprintf(2), V(80), 
  8248 ;; Auto vars:     Size  Location     Type
  8249 ;;  nuls            7  [STACK] unsigned char [7]
  8250 ;;  l               2  [STACK] int 
  8251 ;;  p               2  [STACK] int 
  8252 ;;  cp              2  [STACK] PTR unsigned char 
  8253 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), V(80), 
  8254 ;;  w               2  [STACK] int 
  8255 ;;  i               2  [STACK] int 
  8256 ;; Return value:  Size  Location     Type
  8257 ;;                  2  [STACK] int 
  8258 ;; Registers used:
  8259 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, prodl
  8260 ;; Tracked objects:
  8261 ;;		On entry : 0/1
  8262 ;;		On exit  : 0/0
  8263 ;;		Unchanged: 0/0
  8264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8268 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8269 ;;Total ram usage:        0 bytes
  8270 ;; Hardware stack levels used:    1
  8271 ;; Hardware stack levels required when called:    6
  8272 ;; This function calls:
  8273 ;;		_fputc
  8274 ;;		_strlen
  8275 ;; This function is called by:
  8276 ;;		_vfpfcnvrt
  8277 ;; This function uses a reentrant model
  8278 ;;
  8279                           
  8280                           	psect	text39
  8281  0035E4                     __ptext39:
  8282                           	opt callstack 0
  8283  0035E4                     _stoa:
  8284                           	opt callstack 0
  8285                           
  8286                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  8287  0035E4  0E11               	movlw	17
  8288  0035E6  26E1               	addwf	fsr1l,f,c
  8289  0035E8  0E00               	movlw	0
  8290  0035EA  22E2               	addwfc	fsr1h,f,c
  8291                           
  8292                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
  8293                           
  8294                           ;incstack = 0
  8295  0035EC  EE20  F0F9         	lfsr	2,stoa@F1144
  8296                           
  8297                           ;stkvar	_nuls @ sp[(-17)+0]
  8298  0035F0  0E07               	movlw	7
  8299  0035F2  6E3D               	movwf	btemp,c
  8300  0035F4  0EEF               	movlw	-17
  8301  0035F6                     us420999:
  8302  0035F6  006F FF7B FFE3     	movff	postinc2,plusw1
  8303  0035FC  28E8               	incf	wreg,w,c
  8304  0035FE  2E3D               	decfsz	btemp,f,c
  8305  003600  D7FA               	bra	us420999
  8306                           
  8307                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 552:     cp = s;
  8308                           ;stkvar	_s @ sp[(-17)+-4]
  8309  003602  0EEB               	movlw	-21
  8310  003604  006F FF8C  F047    	movff	plusw1,btemp+10
  8311  00360A  0EEC               	movlw	-20
  8312  00360C  006F FF8C  F048    	movff	plusw1,btemp+11
  8313                           
  8314                           ;stkvar	_cp @ sp[(-17)+11]
  8315  003612  0EFB               	movlw	-5
  8316  003614  0060  F123  FFE3   	movff	btemp+11,plusw1
  8317  00361A  0EFA               	movlw	-6
  8318  00361C  0060  F11F  FFE3   	movff	btemp+10,plusw1
  8319                           
  8320                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
  8321                           ;stkvar	_cp @ sp[(-17)+11]
  8322  003622  0EFA               	movlw	-6
  8323  003624  006F FF8C  F03D    	movff	plusw1,btemp
  8324  00362A  0EFB               	movlw	-5
  8325  00362C  50E3               	movf	plusw1,w,c
  8326  00362E  103D               	iorwf	btemp,w,c
  8327  003630  A4D8               	btfss	status,2,c
  8328  003632  D00E               	goto	l7164
  8329                           
  8330                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
  8331                           ;stkvar	_nuls @ sp[(-17)+0]
  8332  003634  0EEF               	movlw	239
  8333  003636  24E1               	addwf	fsr1l,w,c
  8334  003638  6E47               	movwf	btemp+10,c
  8335  00363A  0EFF               	movlw	255
  8336  00363C  20E2               	addwfc	fsr1h,w,c
  8337  00363E  6E48               	movwf	btemp+11,c
  8338                           
  8339                           ;stkvar	_cp @ sp[(-17)+11]
  8340  003640  0EFB               	movlw	-5
  8341  003642  0060  F123  FFE3   	movff	btemp+11,plusw1
  8342  003648  0EFA               	movlw	-6
  8343  00364A  0060  F11F  FFE3   	movff	btemp+10,plusw1
  8344  003650                     l7164:
  8345                           
  8346                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
  8347                           ;stkvar	_cp @ sp[(-17)+11]
  8348  003650  0EFA               	movlw	-6
  8349  003652  006F FF8F FFE6     	movff	plusw1,postinc1
  8350  003658  006F FF8F FFE6     	movff	plusw1,postinc1
  8351  00365E  EC76  F028         	call	_strlen	;wreg free
  8352                           
  8353                           ;stkvar	_l @ sp[(-17)+7]
  8354  003662  0EF6               	movlw	-10
  8355  003664  0060  F0F7  FFE3   	movff	btemp,plusw1
  8356  00366A  0EF7               	movlw	-9
  8357  00366C  0060  F0FB  FFE3   	movff	btemp+1,plusw1
  8358                           
  8359                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 559:     p = prec;
  8360                           ;stkvar	_p @ sp[(-17)+9]
  8361  003672  0EF8               	movlw	-8
  8362  003674  0060  F09B  FFE3   	movff	_prec,plusw1
  8363  00367A  0EF9               	movlw	-7
  8364  00367C  0060  F09F  FFE3   	movff	_prec+1,plusw1
  8365                           
  8366                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
  8367                           ;stkvar	_p @ sp[(-17)+9]
  8368  003682  0EF9               	movlw	-7
  8369  003684  BEE3               	btfsc	plusw1,7,c
  8370  003686  D023               	goto	l1702
  8371                           
  8372                           ;stkvar	_l @ sp[(-17)+7]
  8373                           ;stkvar	_p @ sp[(-17)+9]
  8374  003688  50E1               	movf	fsr1l,w,c
  8375  00368A  0FF8               	addlw	-8
  8376  00368C  6ED9               	movwf	fsr2l,c
  8377  00368E  50E2               	movf	fsr1h,w,c
  8378  003690  6EDA               	movwf	fsr2h,c
  8379  003692  0EFF               	movlw	255
  8380  003694  22DA               	addwfc	fsr2h,f,c
  8381  003696  0EF6               	movlw	-10
  8382  003698  50E3               	movf	plusw1,w,c
  8383  00369A  5CDE               	subwf	postinc2,w,c
  8384  00369C  50DE               	movf	postinc2,w,c
  8385  00369E  0A80               	xorlw	128
  8386  0036A0  6E3D               	movwf	btemp,c
  8387  0036A2  0EF7               	movlw	-9
  8388  0036A4  50E3               	movf	plusw1,w,c
  8389  0036A6  0A80               	xorlw	128
  8390  0036A8  583D               	subwfb	btemp,w,c
  8391  0036AA  B0D8               	btfsc	status,0,c
  8392  0036AC  D010               	goto	l1702
  8393                           
  8394                           ;stkvar	_p @ sp[(-17)+9]
  8395                           ;stkvar	_l @ sp[(-17)+7]
  8396  0036AE  0EF8               	movlw	-8
  8397  0036B0  006F FF8C  F03D    	movff	plusw1,btemp
  8398  0036B6  0EF6               	movlw	-10
  8399  0036B8  0060  F0F7  FFE3   	movff	btemp,plusw1
  8400  0036BE  0EF9               	movlw	-7
  8401  0036C0  006F FF8C  F03D    	movff	plusw1,btemp
  8402  0036C6  0EF7               	movlw	-9
  8403  0036C8  0060  F0F7  FFE3   	movff	btemp,plusw1
  8404  0036CE                     l1702:
  8405                           
  8406                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 561:     p = l;
  8407                           ;stkvar	_l @ sp[(-17)+7]
  8408                           ;stkvar	_p @ sp[(-17)+9]
  8409  0036CE  0EF6               	movlw	-10
  8410  0036D0  006F FF8C  F03D    	movff	plusw1,btemp
  8411  0036D6  0EF8               	movlw	-8
  8412  0036D8  0060  F0F7  FFE3   	movff	btemp,plusw1
  8413  0036DE  0EF7               	movlw	-9
  8414  0036E0  006F FF8C  F03D    	movff	plusw1,btemp
  8415  0036E6  0EF9               	movlw	-7
  8416  0036E8  0060  F0F7  FFE3   	movff	btemp,plusw1
  8417                           
  8418                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 562:     w = width;
  8419                           ;stkvar	_w @ sp[(-17)+13]
  8420  0036EE  0EFC               	movlw	-4
  8421  0036F0  0060  F093  FFE3   	movff	_width,plusw1
  8422  0036F6  0EFD               	movlw	-3
  8423  0036F8  0060  F097  FFE3   	movff	_width+1,plusw1
  8424                           
  8425                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
  8426  0036FE  A028               	btfss	_flags,0,c
  8427  003700  D01F               	goto	l7184
  8428  003702  D031               	goto	u4250
  8429  003704                     l7180:
  8430                           
  8431                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
  8432                           ;stkvar	_fp @ sp[(-17)+-2]
  8433  003704  0EED               	movlw	-19
  8434  003706  006F FF8F FFE6     	movff	plusw1,postinc1
  8435  00370C  006F FF8F FFE6     	movff	plusw1,postinc1
  8436  003712  0E20               	movlw	32
  8437  003714  6EE6               	movwf	postinc1,c
  8438  003716  0E00               	movlw	0
  8439  003718  6EE6               	movwf	postinc1,c
  8440  00371A  EC6D  F023         	call	_fputc	;wreg free
  8441                           
  8442                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 568:             ++l;
  8443                           ;stkvar	_l @ sp[(-17)+7]
  8444  00371E  0EF6               	movlw	-10
  8445  003720  50E3               	movf	plusw1,w,c
  8446  003722  0F01               	addlw	1
  8447  003724  6E3D               	movwf	btemp,c
  8448  003726  0EF6               	movlw	-10
  8449  003728  0060  F0F7  FFE3   	movff	btemp,plusw1
  8450  00372E  6A3D               	clrf	btemp,c
  8451  003730  0EF7               	movlw	-9
  8452  003732  50E3               	movf	plusw1,w,c
  8453  003734  203D               	addwfc	btemp,w,c
  8454  003736  6E3D               	movwf	btemp,c
  8455  003738  0EF7               	movlw	-9
  8456  00373A  0060  F0F7  FFE3   	movff	btemp,plusw1
  8457  003740                     l7184:
  8458                           
  8459                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
  8460                           ;stkvar	_w @ sp[(-17)+13]
  8461                           ;stkvar	_l @ sp[(-17)+7]
  8462  003740  50E1               	movf	fsr1l,w,c
  8463  003742  0FF6               	addlw	-10
  8464  003744  6ED9               	movwf	fsr2l,c
  8465  003746  50E2               	movf	fsr1h,w,c
  8466  003748  6EDA               	movwf	fsr2h,c
  8467  00374A  0EFF               	movlw	255
  8468  00374C  22DA               	addwfc	fsr2h,f,c
  8469  00374E  0EFC               	movlw	-4
  8470  003750  50E3               	movf	plusw1,w,c
  8471  003752  5CDE               	subwf	postinc2,w,c
  8472  003754  50DE               	movf	postinc2,w,c
  8473  003756  0A80               	xorlw	128
  8474  003758  6E3D               	movwf	btemp,c
  8475  00375A  0EFD               	movlw	-3
  8476  00375C  50E3               	movf	plusw1,w,c
  8477  00375E  0A80               	xorlw	128
  8478  003760  583D               	subwfb	btemp,w,c
  8479  003762  A0D8               	btfss	status,0,c
  8480  003764  D7CF               	goto	l7180
  8481  003766                     u4250:
  8482                           
  8483                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 573:     i = 0;
  8484                           ;stkvar	_i @ sp[(-17)+15]
  8485  003766  0EFE               	movlw	-2
  8486  003768  6AE3               	clrf	plusw1,c
  8487  00376A  0EFF               	movlw	-1
  8488  00376C  6AE3               	clrf	plusw1,c
  8489                           
  8490                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  8491  00376E  D037               	goto	l7194
  8492  003770                     l7188:
  8493                           
  8494                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
  8495                           ;stkvar	_fp @ sp[(-17)+-2]
  8496  003770  0EED               	movlw	-19
  8497  003772  006F FF8F FFE6     	movff	plusw1,postinc1
  8498  003778  006F FF8F FFE6     	movff	plusw1,postinc1
  8499                           
  8500                           ;stkvar	_cp @ sp[(-19)+11]
  8501  00377E  0EF8               	movlw	-8
  8502  003780  006F FF8F FFD9     	movff	plusw1,fsr2l
  8503  003786  0EF9               	movlw	-7
  8504  003788  006F FF8F FFDA     	movff	plusw1,fsr2h
  8505  00378E  50DF               	movf	indf2,w,c
  8506  003790  6EE6               	movwf	postinc1,c
  8507  003792  0E00               	movlw	0
  8508  003794  6EE6               	movwf	postinc1,c
  8509  003796  EC6D  F023         	call	_fputc	;wreg free
  8510                           
  8511                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 576:         ++cp;
  8512                           ;stkvar	_cp @ sp[(-17)+11]
  8513  00379A  0EFA               	movlw	-6
  8514  00379C  50E3               	movf	plusw1,w,c
  8515  00379E  0F01               	addlw	1
  8516  0037A0  6E3D               	movwf	btemp,c
  8517  0037A2  0EFA               	movlw	-6
  8518  0037A4  0060  F0F7  FFE3   	movff	btemp,plusw1
  8519  0037AA  6A3D               	clrf	btemp,c
  8520  0037AC  0EFB               	movlw	-5
  8521  0037AE  50E3               	movf	plusw1,w,c
  8522  0037B0  203D               	addwfc	btemp,w,c
  8523  0037B2  6E3D               	movwf	btemp,c
  8524  0037B4  0EFB               	movlw	-5
  8525  0037B6  0060  F0F7  FFE3   	movff	btemp,plusw1
  8526                           
  8527                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 577:         ++i;
  8528                           ;stkvar	_i @ sp[(-17)+15]
  8529  0037BC  0EFE               	movlw	-2
  8530  0037BE  50E3               	movf	plusw1,w,c
  8531  0037C0  0F01               	addlw	1
  8532  0037C2  6E3D               	movwf	btemp,c
  8533  0037C4  0EFE               	movlw	-2
  8534  0037C6  0060  F0F7  FFE3   	movff	btemp,plusw1
  8535  0037CC  6A3D               	clrf	btemp,c
  8536  0037CE  0EFF               	movlw	-1
  8537  0037D0  50E3               	movf	plusw1,w,c
  8538  0037D2  203D               	addwfc	btemp,w,c
  8539  0037D4  6E3D               	movwf	btemp,c
  8540  0037D6  0EFF               	movlw	-1
  8541  0037D8  0060  F0F7  FFE3   	movff	btemp,plusw1
  8542  0037DE                     l7194:
  8543                           
  8544                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  8545                           ;stkvar	_p @ sp[(-17)+9]
  8546                           ;stkvar	_i @ sp[(-17)+15]
  8547  0037DE  50E1               	movf	fsr1l,w,c
  8548  0037E0  0FFE               	addlw	-2
  8549  0037E2  6ED9               	movwf	fsr2l,c
  8550  0037E4  50E2               	movf	fsr1h,w,c
  8551  0037E6  6EDA               	movwf	fsr2h,c
  8552  0037E8  0EFF               	movlw	255
  8553  0037EA  22DA               	addwfc	fsr2h,f,c
  8554  0037EC  0EF8               	movlw	-8
  8555  0037EE  50E3               	movf	plusw1,w,c
  8556  0037F0  5CDE               	subwf	postinc2,w,c
  8557  0037F2  50DE               	movf	postinc2,w,c
  8558  0037F4  0A80               	xorlw	128
  8559  0037F6  6E3D               	movwf	btemp,c
  8560  0037F8  0EF9               	movlw	-7
  8561  0037FA  50E3               	movf	plusw1,w,c
  8562  0037FC  0A80               	xorlw	128
  8563  0037FE  583D               	subwfb	btemp,w,c
  8564  003800  A0D8               	btfss	status,0,c
  8565  003802  D7B6               	goto	l7188
  8566                           
  8567                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
  8568  003804  B028               	btfsc	_flags,0,c
  8569  003806  D01F               	goto	l7202
  8570  003808  D031               	goto	u4280
  8571  00380A                     l7198:
  8572                           
  8573                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
  8574                           ;stkvar	_fp @ sp[(-17)+-2]
  8575  00380A  0EED               	movlw	-19
  8576  00380C  006F FF8F FFE6     	movff	plusw1,postinc1
  8577  003812  006F FF8F FFE6     	movff	plusw1,postinc1
  8578  003818  0E20               	movlw	32
  8579  00381A  6EE6               	movwf	postinc1,c
  8580  00381C  0E00               	movlw	0
  8581  00381E  6EE6               	movwf	postinc1,c
  8582  003820  EC6D  F023         	call	_fputc	;wreg free
  8583                           
  8584                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 584:             ++l;
  8585                           ;stkvar	_l @ sp[(-17)+7]
  8586  003824  0EF6               	movlw	-10
  8587  003826  50E3               	movf	plusw1,w,c
  8588  003828  0F01               	addlw	1
  8589  00382A  6E3D               	movwf	btemp,c
  8590  00382C  0EF6               	movlw	-10
  8591  00382E  0060  F0F7  FFE3   	movff	btemp,plusw1
  8592  003834  6A3D               	clrf	btemp,c
  8593  003836  0EF7               	movlw	-9
  8594  003838  50E3               	movf	plusw1,w,c
  8595  00383A  203D               	addwfc	btemp,w,c
  8596  00383C  6E3D               	movwf	btemp,c
  8597  00383E  0EF7               	movlw	-9
  8598  003840  0060  F0F7  FFE3   	movff	btemp,plusw1
  8599  003846                     l7202:
  8600                           
  8601                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
  8602                           ;stkvar	_w @ sp[(-17)+13]
  8603                           ;stkvar	_l @ sp[(-17)+7]
  8604  003846  50E1               	movf	fsr1l,w,c
  8605  003848  0FF6               	addlw	-10
  8606  00384A  6ED9               	movwf	fsr2l,c
  8607  00384C  50E2               	movf	fsr1h,w,c
  8608  00384E  6EDA               	movwf	fsr2h,c
  8609  003850  0EFF               	movlw	255
  8610  003852  22DA               	addwfc	fsr2h,f,c
  8611  003854  0EFC               	movlw	-4
  8612  003856  50E3               	movf	plusw1,w,c
  8613  003858  5CDE               	subwf	postinc2,w,c
  8614  00385A  50DE               	movf	postinc2,w,c
  8615  00385C  0A80               	xorlw	128
  8616  00385E  6E3D               	movwf	btemp,c
  8617  003860  0EFD               	movlw	-3
  8618  003862  50E3               	movf	plusw1,w,c
  8619  003864  0A80               	xorlw	128
  8620  003866  583D               	subwfb	btemp,w,c
  8621  003868  A0D8               	btfss	status,0,c
  8622  00386A  D7CF               	goto	l7198
  8623  00386C                     u4280:
  8624                           
  8625                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 588:     return l;
  8626                           ;stkvar	_l @ sp[(-17)+7]
  8627  00386C  0EF6               	movlw	-10
  8628  00386E  006F FF8C  F03D    	movff	plusw1,btemp
  8629  003874  0EF7               	movlw	-9
  8630  003876  006F FF8C  F03E    	movff	plusw1,btemp+1
  8631                           
  8632                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
  8633  00387C  0EEB               	movlw	235
  8634  00387E  26E1               	addwf	fsr1l,f,c
  8635  003880  0EFF               	movlw	255
  8636  003882  22E2               	addwfc	fsr1h,f,c
  8637  003884  0012               	return		;funcret
  8638  003886                     __end_of_stoa:
  8639                           	opt callstack 0
  8640                           
  8641 ;; *************** function _dtoa *****************
  8642 ;; Defined at:
  8643 ;;		line 274 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  8644 ;; Parameters:    Size  Location     Type
  8645 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8646 ;;		 -> f(5), NULL(0), 
  8647 ;;  d               8  [STACK] long long 
  8648 ;; Auto vars:     Size  Location     Type
  8649 ;;  n               8  [STACK] long long 
  8650 ;;  i               2  [STACK] int 
  8651 ;;  s               2  [STACK] int 
  8652 ;;  w               2  [STACK] int 
  8653 ;;  p               2  [STACK] int 
  8654 ;; Return value:  Size  Location     Type
  8655 ;;                  2  [STACK] int 
  8656 ;; Registers used:
  8657 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, prodl
  8658 ;; Tracked objects:
  8659 ;;		On entry : 0/1
  8660 ;;		On exit  : 0/0
  8661 ;;		Unchanged: 0/0
  8662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8666 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8667 ;;Total ram usage:        0 bytes
  8668 ;; Hardware stack levels used:    1
  8669 ;; Hardware stack levels required when called:    8
  8670 ;; This function calls:
  8671 ;;		___aodiv
  8672 ;;		___aomod
  8673 ;;		_abs
  8674 ;;		_pad
  8675 ;; This function is called by:
  8676 ;;		_vfpfcnvrt
  8677 ;; This function uses a reentrant model
  8678 ;;
  8679                           
  8680                           	psect	text40
  8681  00278E                     __ptext40:
  8682                           	opt callstack 0
  8683  00278E                     _dtoa:
  8684                           	opt callstack 0
  8685                           
  8686                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
  8687  00278E  0E12               	movlw	18
  8688  002790  26E1               	addwf	fsr1l,f,c
  8689  002792  0E00               	movlw	0
  8690  002794  22E2               	addwfc	fsr1h,f,c
  8691                           
  8692                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .05/pic/sources/c99/common/doprnt.c: 280:     n = d;
  8693                           ;stkvar	_d @ sp[(-18)+-10]
  8694                           
  8695                           ;incstack = 0
  8696  002796  0EE4               	movlw	228
  8697  002798  24E1               	addwf	fsr1l,w,c
  8698  00279A  6ED9               	movwf	fsr2l,c
  8699  00279C  0EFF               	movlw	255
  8700  00279E  20E2               	addwfc	fsr1h,w,c
  8701  0027A0  6EDA               	movwf	fsr2h,c
  8702                           
  8703                           ;stkvar	_n @ sp[(-18)+2]
  8704  0027A2  0E08               	movlw	8
  8705  0027A4  6E3D               	movwf	btemp,c
  8706  0027A6  0EF0               	movlw	-16
  8707  0027A8                     us403999:
  8708  0027A8  006F FF7B FFE3     	movff	postinc2,plusw1
  8709  0027AE  28E8               	incf	wreg,w,c
  8710  0027B0  2E3D               	decfsz	btemp,f,c
  8711  0027B2  D7FA               	bra	us403999
  8712                           
  8713                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
  8714                           ;stkvar	_n @ sp[(-18)+2]
  8715  0027B4  0EF7               	movlw	-9
  8716  0027B6  AEE3               	btfss	plusw1,7,c
  8717  0027B8  D002               	goto	u4040
  8718  0027BA  0E01               	movlw	1
  8719  0027BC  D001               	goto	u4050
  8720  0027BE                     u4040:
  8721  0027BE  0E00               	movlw	0
  8722  0027C0                     u4050:
  8723  0027C0  6E47               	movwf	btemp+10,c
  8724  0027C2  6A48               	clrf	btemp+11,c
  8725                           
  8726                           ;stkvar	_s @ sp[(-18)+12]
  8727  0027C4  0EFA               	movlw	-6
  8728  0027C6  0060  F11F  FFE3   	movff	btemp+10,plusw1
  8729  0027CC  0EFB               	movlw	-5
  8730  0027CE  0060  F123  FFE3   	movff	btemp+11,plusw1
  8731                           
  8732                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 282:     if (s) {
  8733                           ;stkvar	_s @ sp[(-18)+12]
  8734  0027D4  0EFA               	movlw	-6
  8735  0027D6  006F FF8C  F03D    	movff	plusw1,btemp
  8736  0027DC  0EFB               	movlw	-5
  8737  0027DE  50E3               	movf	plusw1,w,c
  8738  0027E0  103D               	iorwf	btemp,w,c
  8739  0027E2  B4D8               	btfsc	status,2,c
  8740  0027E4  D025               	goto	u4070
  8741                           
  8742                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 283:         n = -n;
  8743                           ;stkvar	_n @ sp[(-18)+2]
  8744                           ;stkvar	_n @ sp[(-18)+2]
  8745  0027E6  0EF0               	movlw	-16
  8746  0027E8  6CE3               	negf	plusw1,c
  8747  0027EA  0EF1               	movlw	-15
  8748  0027EC  1EE3               	comf	plusw1,f,c
  8749  0027EE  0EF2               	movlw	-14
  8750  0027F0  1EE3               	comf	plusw1,f,c
  8751  0027F2  0EF3               	movlw	-13
  8752  0027F4  1EE3               	comf	plusw1,f,c
  8753  0027F6  0EF4               	movlw	-12
  8754  0027F8  1EE3               	comf	plusw1,f,c
  8755  0027FA  0EF5               	movlw	-11
  8756  0027FC  1EE3               	comf	plusw1,f,c
  8757  0027FE  0EF6               	movlw	-10
  8758  002800  1EE3               	comf	plusw1,f,c
  8759  002802  0EF7               	movlw	-9
  8760  002804  1EE3               	comf	plusw1,f,c
  8761  002806  E314               	bnc	u4070
  8762  002808  0EF1               	movlw	-15
  8763  00280A  2AE3               	incf	plusw1,f,c
  8764  00280C  E311               	bnc	u4070
  8765  00280E  0EF2               	movlw	-14
  8766  002810  2AE3               	incf	plusw1,f,c
  8767  002812  E30E               	bnc	u4070
  8768  002814  0EF3               	movlw	-13
  8769  002816  2AE3               	incf	plusw1,f,c
  8770  002818  E30B               	bnc	u4070
  8771  00281A  0EF4               	movlw	-12
  8772  00281C  2AE3               	incf	plusw1,f,c
  8773  00281E  E308               	bnc	u4070
  8774  002820  0EF5               	movlw	-11
  8775  002822  2AE3               	incf	plusw1,f,c
  8776  002824  E305               	bnc	u4070
  8777  002826  0EF6               	movlw	-10
  8778  002828  2AE3               	incf	plusw1,f,c
  8779  00282A  E302               	bnc	u4070
  8780  00282C  0EF7               	movlw	-9
  8781  00282E  2AE3               	incf	plusw1,f,c
  8782  002830                     u4070:
  8783                           
  8784                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
  8785  002830  AE27               	btfss	_prec+1,7,c
  8786                           
  8787                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
  8788  002832  9228               	bcf	_flags,1,c
  8789                           
  8790                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
  8791  002834  BE27               	btfsc	_prec+1,7,c
  8792  002836  D005               	goto	u4090
  8793  002838  5027               	movf	_prec+1,w,c
  8794  00283A  E110               	bnz	l7106
  8795  00283C  0426               	decf	_prec,w,c
  8796  00283E  B0D8               	btfsc	status,0,c
  8797  002840  D00D               	goto	l7106
  8798  002842                     u4090:
  8799  002842  0E01               	movlw	1
  8800  002844  6E47               	movwf	btemp+10,c
  8801  002846  0E00               	movlw	0
  8802  002848  6E48               	movwf	btemp+11,c
  8803                           
  8804                           ;stkvar	_p @ sp[(-18)+16]
  8805  00284A  0EFE               	movlw	-2
  8806  00284C  0060  F11F  FFE3   	movff	btemp+10,plusw1
  8807  002852  0EFF               	movlw	-1
  8808  002854  0060  F123  FFE3   	movff	btemp+11,plusw1
  8809  00285A  D008               	goto	l1675
  8810  00285C                     l7106:
  8811                           
  8812                           ;stkvar	_p @ sp[(-18)+16]
  8813  00285C  0EFE               	movlw	-2
  8814  00285E  0060  F09B  FFE3   	movff	_prec,plusw1
  8815  002864  0EFF               	movlw	-1
  8816  002866  0060  F09F  FFE3   	movff	_prec+1,plusw1
  8817  00286C                     l1675:
  8818                           
  8819                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 291:     w = width;
  8820                           ;stkvar	_w @ sp[(-18)+14]
  8821  00286C  0EFC               	movlw	-4
  8822  00286E  0060  F093  FFE3   	movff	_width,plusw1
  8823  002874  0EFD               	movlw	-3
  8824  002876  0060  F097  FFE3   	movff	_width+1,plusw1
  8825                           
  8826                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
  8827                           ;stkvar	_s @ sp[(-18)+12]
  8828  00287C  0EFA               	movlw	-6
  8829  00287E  006F FF8C  F03D    	movff	plusw1,btemp
  8830  002884  0EFB               	movlw	-5
  8831  002886  50E3               	movf	plusw1,w,c
  8832  002888  103D               	iorwf	btemp,w,c
  8833  00288A  A4D8               	btfss	status,2,c
  8834  00288C  D002               	goto	u4110
  8835  00288E  A428               	btfss	_flags,2,c
  8836  002890  D00A               	goto	l7114
  8837  002892                     u4110:
  8838                           
  8839                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 293:         --w;
  8840                           ;stkvar	_w @ sp[(-18)+14]
  8841  002892  50E1               	movf	fsr1l,w,c
  8842  002894  0FFC               	addlw	-4
  8843  002896  6ED9               	movwf	fsr2l,c
  8844  002898  50E2               	movf	fsr1h,w,c
  8845  00289A  6EDA               	movwf	fsr2h,c
  8846  00289C  0EFF               	movlw	255
  8847  00289E  22DA               	addwfc	fsr2h,f,c
  8848  0028A0  06DE               	decf	postinc2,f,c
  8849  0028A2  0E00               	movlw	0
  8850  0028A4  5ADD               	subwfb	postdec2,f,c
  8851  0028A6                     l7114:
  8852                           
  8853                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
  8854  0028A6  0E1F               	movlw	31
  8855  0028A8  6E47               	movwf	btemp+10,c
  8856  0028AA  0E00               	movlw	0
  8857  0028AC  6E48               	movwf	btemp+11,c
  8858                           
  8859                           ;stkvar	_i @ sp[(-18)+10]
  8860  0028AE  0EF8               	movlw	-8
  8861  0028B0  0060  F11F  FFE3   	movff	btemp+10,plusw1
  8862  0028B6  0EF9               	movlw	-7
  8863  0028B8  0060  F123  FFE3   	movff	btemp+11,plusw1
  8864                           
  8865                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
  8866  0028BE  0100               	movlb	0	; () banked
  8867  0028C0  6BF8               	clrf	(_dbuf+31)& (0+255),b
  8868                           
  8869                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8870  0028C2  D103               	goto	l7128
  8871  0028C4                     l7118:
  8872                           
  8873                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 300:         --i;
  8874                           ;stkvar	_i @ sp[(-18)+10]
  8875  0028C4  50E1               	movf	fsr1l,w,c
  8876  0028C6  0FF8               	addlw	-8
  8877  0028C8  6ED9               	movwf	fsr2l,c
  8878  0028CA  50E2               	movf	fsr1h,w,c
  8879  0028CC  6EDA               	movwf	fsr2h,c
  8880  0028CE  0EFF               	movlw	255
  8881  0028D0  22DA               	addwfc	fsr2h,f,c
  8882  0028D2  06DE               	decf	postinc2,f,c
  8883  0028D4  0E00               	movlw	0
  8884  0028D6  5ADD               	subwfb	postdec2,f,c
  8885                           
  8886                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
  8887  0028D8  0E0A               	movlw	10
  8888  0028DA  6EE6               	movwf	postinc1,c
  8889  0028DC  0E00               	movlw	0
  8890  0028DE  6EE6               	movwf	postinc1,c
  8891  0028E0  0E00               	movlw	0
  8892  0028E2  6EE6               	movwf	postinc1,c
  8893  0028E4  0E00               	movlw	0
  8894  0028E6  6EE6               	movwf	postinc1,c
  8895  0028E8  0E00               	movlw	0
  8896  0028EA  6EE6               	movwf	postinc1,c
  8897  0028EC  0E00               	movlw	0
  8898  0028EE  6EE6               	movwf	postinc1,c
  8899  0028F0  0E00               	movlw	0
  8900  0028F2  6EE6               	movwf	postinc1,c
  8901  0028F4  0E00               	movlw	0
  8902  0028F6  6EE6               	movwf	postinc1,c
  8903                           
  8904                           ;stkvar	_n @ sp[(-26)+2]
  8905  0028F8  50E1               	movf	fsr1l,w,c
  8906  0028FA  0FE8               	addlw	-24
  8907  0028FC  6ED9               	movwf	fsr2l,c
  8908  0028FE  50E2               	movf	fsr1h,w,c
  8909  002900  6EDA               	movwf	fsr2h,c
  8910  002902  0EFF               	movlw	255
  8911  002904  22DA               	addwfc	fsr2h,f,c
  8912  002906  006F FF7B FFE6     	movff	postinc2,postinc1
  8913  00290C  006F FF7B FFE6     	movff	postinc2,postinc1
  8914  002912  006F FF7B FFE6     	movff	postinc2,postinc1
  8915  002918  006F FF7B FFE6     	movff	postinc2,postinc1
  8916  00291E  006F FF7B FFE6     	movff	postinc2,postinc1
  8917  002924  006F FF7B FFE6     	movff	postinc2,postinc1
  8918  00292A  006F FF7B FFE6     	movff	postinc2,postinc1
  8919  002930  006F FF7B FFE6     	movff	postinc2,postinc1
  8920  002936  ECC2  F01E         	call	___aomod	;wreg free
  8921  00293A  52E5               	movf	postdec1,f,c
  8922  00293C  006F FF9C  F054    	movff	indf1,btemp+23
  8923  002942  52E5               	movf	postdec1,f,c
  8924  002944  006F FF9C  F053    	movff	indf1,btemp+22
  8925  00294A  52E5               	movf	postdec1,f,c
  8926  00294C  006F FF9C  F052    	movff	indf1,btemp+21
  8927  002952  52E5               	movf	postdec1,f,c
  8928  002954  006F FF9C  F051    	movff	indf1,btemp+20
  8929  00295A  52E5               	movf	postdec1,f,c
  8930  00295C  006F FF9C  F050    	movff	indf1,btemp+19
  8931  002962  52E5               	movf	postdec1,f,c
  8932  002964  006F FF9C  F04F    	movff	indf1,btemp+18
  8933  00296A  52E5               	movf	postdec1,f,c
  8934  00296C  006F FF9C  F04E    	movff	indf1,btemp+17
  8935  002972  52E5               	movf	postdec1,f,c
  8936  002974  006F FF9C  F04D    	movff	indf1,btemp+16
  8937  00297A  0EF8               	movlw	248
  8938  00297C  26E1               	addwf	fsr1l,f,c
  8939  00297E  0EFF               	movlw	255
  8940  002980  22E2               	addwfc	fsr1h,f,c
  8941  002982  0060  F134  F047   	movff	btemp+16,btemp+10
  8942  002988  0060  F138  F048   	movff	btemp+17,btemp+11
  8943  00298E  0060  F11F  FFE6   	movff	btemp+10,postinc1
  8944  002994  0060  F123  FFE6   	movff	btemp+11,postinc1
  8945  00299A  ECF3  F02A         	call	_abs	;wreg free
  8946  00299E  0E30               	movlw	48
  8947  0029A0  263D               	addwf	btemp,f,c
  8948                           
  8949                           ;stkvar	_i @ sp[(-18)+10]
  8950  0029A2  0EF8               	movlw	-8
  8951  0029A4  006F FF8C  F048    	movff	plusw1,btemp+11
  8952  0029AA  5048               	movf	btemp+11,w,c
  8953  0029AC  0FD9               	addlw	low _dbuf
  8954  0029AE  6ED9               	movwf	fsr2l,c
  8955  0029B0  6ADA               	clrf	fsr2h,c
  8956  0029B2  0060  F0F7  FFDF   	movff	btemp,indf2
  8957                           
  8958                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 302:         --p;
  8959                           ;stkvar	_p @ sp[(-18)+16]
  8960  0029B8  50E1               	movf	fsr1l,w,c
  8961  0029BA  0FFE               	addlw	-2
  8962  0029BC  6ED9               	movwf	fsr2l,c
  8963  0029BE  50E2               	movf	fsr1h,w,c
  8964  0029C0  6EDA               	movwf	fsr2h,c
  8965  0029C2  0EFF               	movlw	255
  8966  0029C4  22DA               	addwfc	fsr2h,f,c
  8967  0029C6  06DE               	decf	postinc2,f,c
  8968  0029C8  0E00               	movlw	0
  8969  0029CA  5ADD               	subwfb	postdec2,f,c
  8970                           
  8971                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 303:         --w;
  8972                           ;stkvar	_w @ sp[(-18)+14]
  8973  0029CC  50E1               	movf	fsr1l,w,c
  8974  0029CE  0FFC               	addlw	-4
  8975  0029D0  6ED9               	movwf	fsr2l,c
  8976  0029D2  50E2               	movf	fsr1h,w,c
  8977  0029D4  6EDA               	movwf	fsr2h,c
  8978  0029D6  0EFF               	movlw	255
  8979  0029D8  22DA               	addwfc	fsr2h,f,c
  8980  0029DA  06DE               	decf	postinc2,f,c
  8981  0029DC  0E00               	movlw	0
  8982  0029DE  5ADD               	subwfb	postdec2,f,c
  8983                           
  8984                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
  8985  0029E0  0E0A               	movlw	10
  8986  0029E2  6EE6               	movwf	postinc1,c
  8987  0029E4  0E00               	movlw	0
  8988  0029E6  6EE6               	movwf	postinc1,c
  8989  0029E8  0E00               	movlw	0
  8990  0029EA  6EE6               	movwf	postinc1,c
  8991  0029EC  0E00               	movlw	0
  8992  0029EE  6EE6               	movwf	postinc1,c
  8993  0029F0  0E00               	movlw	0
  8994  0029F2  6EE6               	movwf	postinc1,c
  8995  0029F4  0E00               	movlw	0
  8996  0029F6  6EE6               	movwf	postinc1,c
  8997  0029F8  0E00               	movlw	0
  8998  0029FA  6EE6               	movwf	postinc1,c
  8999  0029FC  0E00               	movlw	0
  9000  0029FE  6EE6               	movwf	postinc1,c
  9001                           
  9002                           ;stkvar	_n @ sp[(-26)+2]
  9003  002A00  50E1               	movf	fsr1l,w,c
  9004  002A02  0FE8               	addlw	-24
  9005  002A04  6ED9               	movwf	fsr2l,c
  9006  002A06  50E2               	movf	fsr1h,w,c
  9007  002A08  6EDA               	movwf	fsr2h,c
  9008  002A0A  0EFF               	movlw	255
  9009  002A0C  22DA               	addwfc	fsr2h,f,c
  9010  002A0E  006F FF7B FFE6     	movff	postinc2,postinc1
  9011  002A14  006F FF7B FFE6     	movff	postinc2,postinc1
  9012  002A1A  006F FF7B FFE6     	movff	postinc2,postinc1
  9013  002A20  006F FF7B FFE6     	movff	postinc2,postinc1
  9014  002A26  006F FF7B FFE6     	movff	postinc2,postinc1
  9015  002A2C  006F FF7B FFE6     	movff	postinc2,postinc1
  9016  002A32  006F FF7B FFE6     	movff	postinc2,postinc1
  9017  002A38  006F FF7B FFE6     	movff	postinc2,postinc1
  9018  002A3E  EC43  F01C         	call	___aodiv	;wreg free
  9019  002A42  52E5               	movf	postdec1,f,c
  9020  002A44  006F FF9C  F054    	movff	indf1,btemp+23
  9021  002A4A  52E5               	movf	postdec1,f,c
  9022  002A4C  006F FF9C  F053    	movff	indf1,btemp+22
  9023  002A52  52E5               	movf	postdec1,f,c
  9024  002A54  006F FF9C  F052    	movff	indf1,btemp+21
  9025  002A5A  52E5               	movf	postdec1,f,c
  9026  002A5C  006F FF9C  F051    	movff	indf1,btemp+20
  9027  002A62  52E5               	movf	postdec1,f,c
  9028  002A64  006F FF9C  F050    	movff	indf1,btemp+19
  9029  002A6A  52E5               	movf	postdec1,f,c
  9030  002A6C  006F FF9C  F04F    	movff	indf1,btemp+18
  9031  002A72  52E5               	movf	postdec1,f,c
  9032  002A74  006F FF9C  F04E    	movff	indf1,btemp+17
  9033  002A7A  52E5               	movf	postdec1,f,c
  9034  002A7C  006F FF9C  F04D    	movff	indf1,btemp+16
  9035  002A82  0EF8               	movlw	248
  9036  002A84  26E1               	addwf	fsr1l,f,c
  9037  002A86  0EFF               	movlw	255
  9038  002A88  22E2               	addwfc	fsr1h,f,c
  9039                           
  9040                           ;stkvar	_n @ sp[(-18)+2]
  9041  002A8A  0EF0               	movlw	-16
  9042  002A8C  0060  F137  FFE3   	movff	btemp+16,plusw1
  9043  002A92  0EF1               	movlw	-15
  9044  002A94  0060  F13B  FFE3   	movff	btemp+17,plusw1
  9045  002A9A  0EF2               	movlw	-14
  9046  002A9C  0060  F13F  FFE3   	movff	btemp+18,plusw1
  9047  002AA2  0EF3               	movlw	-13
  9048  002AA4  0060  F143  FFE3   	movff	btemp+19,plusw1
  9049  002AAA  0EF4               	movlw	-12
  9050  002AAC  0060  F147  FFE3   	movff	btemp+20,plusw1
  9051  002AB2  0EF5               	movlw	-11
  9052  002AB4  0060  F14B  FFE3   	movff	btemp+21,plusw1
  9053  002ABA  0EF6               	movlw	-10
  9054  002ABC  0060  F14F  FFE3   	movff	btemp+22,plusw1
  9055  002AC2  0EF7               	movlw	-9
  9056  002AC4  0060  F153  FFE3   	movff	btemp+23,plusw1
  9057  002ACA                     l7128:
  9058                           
  9059                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9060                           ;stkvar	_i @ sp[(-18)+10]
  9061  002ACA  0EF9               	movlw	-7
  9062  002ACC  BEE3               	btfsc	plusw1,7,c
  9063  002ACE  D036               	goto	u4160
  9064  002AD0  0EF9               	movlw	-7
  9065  002AD2  50E3               	movf	plusw1,w,c
  9066  002AD4  E104               	bnz	u4120
  9067  002AD6  0EF8               	movlw	-8
  9068  002AD8  04E3               	decf	plusw1,w,c
  9069  002ADA  A0D8               	btfss	status,0,c
  9070  002ADC  D02F               	goto	u4160
  9071  002ADE                     u4120:
  9072                           
  9073                           ;stkvar	_n @ sp[(-18)+2]
  9074  002ADE  0EF0               	movlw	-16
  9075  002AE0  50E3               	movf	plusw1,w,c
  9076  002AE2  E115               	bnz	u4131
  9077  002AE4  0EF1               	movlw	-15
  9078  002AE6  50E3               	movf	plusw1,w,c
  9079  002AE8  E112               	bnz	u4131
  9080  002AEA  0EF2               	movlw	-14
  9081  002AEC  50E3               	movf	plusw1,w,c
  9082  002AEE  E10F               	bnz	u4131
  9083  002AF0  0EF3               	movlw	-13
  9084  002AF2  50E3               	movf	plusw1,w,c
  9085  002AF4  E10C               	bnz	u4131
  9086  002AF6  0EF4               	movlw	-12
  9087  002AF8  50E3               	movf	plusw1,w,c
  9088  002AFA  E109               	bnz	u4131
  9089  002AFC  0EF5               	movlw	-11
  9090  002AFE  50E3               	movf	plusw1,w,c
  9091  002B00  E106               	bnz	u4131
  9092  002B02  0EF6               	movlw	-10
  9093  002B04  50E3               	movf	plusw1,w,c
  9094  002B06  E103               	bnz	u4131
  9095  002B08  0EF7               	movlw	-9
  9096  002B0A  50E3               	movf	plusw1,w,c
  9097  002B0C  A4D8               	btfss	status,2,c
  9098  002B0E                     u4131:
  9099  002B0E  D6DA               	goto	l7118
  9100                           
  9101                           ;stkvar	_p @ sp[(-18)+16]
  9102  002B10  0EFF               	movlw	-1
  9103  002B12  BEE3               	btfsc	plusw1,7,c
  9104  002B14  D007               	goto	u4140
  9105  002B16  0EFF               	movlw	-1
  9106  002B18  50E3               	movf	plusw1,w,c
  9107  002B1A  E103               	bnz	u4141
  9108  002B1C  0EFE               	movlw	-2
  9109  002B1E  04E3               	decf	plusw1,w,c
  9110  002B20  B0D8               	btfsc	status,0,c
  9111  002B22                     u4141:
  9112  002B22  D6D0               	goto	l7118
  9113  002B24                     u4140:
  9114                           
  9115                           ;stkvar	_w @ sp[(-18)+14]
  9116  002B24  0EFD               	movlw	-3
  9117  002B26  BEE3               	btfsc	plusw1,7,c
  9118  002B28  D009               	goto	u4160
  9119  002B2A  0EFD               	movlw	-3
  9120  002B2C  50E3               	movf	plusw1,w,c
  9121  002B2E  E104               	bnz	u4150
  9122  002B30  0EFC               	movlw	-4
  9123  002B32  04E3               	decf	plusw1,w,c
  9124  002B34  A0D8               	btfss	status,0,c
  9125  002B36  D002               	goto	u4160
  9126  002B38                     u4150:
  9127  002B38  B228               	btfsc	_flags,1,c
  9128  002B3A  D6C4               	goto	l7118
  9129  002B3C                     u4160:
  9130                           
  9131                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
  9132                           ;stkvar	_s @ sp[(-18)+12]
  9133  002B3C  0EFA               	movlw	-6
  9134  002B3E  006F FF8C  F03D    	movff	plusw1,btemp
  9135  002B44  0EFB               	movlw	-5
  9136  002B46  50E3               	movf	plusw1,w,c
  9137  002B48  103D               	iorwf	btemp,w,c
  9138  002B4A  A4D8               	btfss	status,2,c
  9139  002B4C  D002               	goto	u4180
  9140  002B4E  A428               	btfss	_flags,2,c
  9141  002B50  D02D               	goto	l7152
  9142  002B52                     u4180:
  9143                           
  9144                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 309:         --i;
  9145                           ;stkvar	_i @ sp[(-18)+10]
  9146  002B52  50E1               	movf	fsr1l,w,c
  9147  002B54  0FF8               	addlw	-8
  9148  002B56  6ED9               	movwf	fsr2l,c
  9149  002B58  50E2               	movf	fsr1h,w,c
  9150  002B5A  6EDA               	movwf	fsr2h,c
  9151  002B5C  0EFF               	movlw	255
  9152  002B5E  22DA               	addwfc	fsr2h,f,c
  9153  002B60  06DE               	decf	postinc2,f,c
  9154  002B62  0E00               	movlw	0
  9155  002B64  5ADD               	subwfb	postdec2,f,c
  9156                           
  9157                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
  9158                           ;stkvar	_s @ sp[(-18)+12]
  9159  002B66  0EFA               	movlw	-6
  9160  002B68  006F FF8C  F03D    	movff	plusw1,btemp
  9161  002B6E  0EFB               	movlw	-5
  9162  002B70  50E3               	movf	plusw1,w,c
  9163  002B72  103D               	iorwf	btemp,w,c
  9164  002B74  A4D8               	btfss	status,2,c
  9165  002B76  D002               	goto	l7148
  9166  002B78  0E2B               	movlw	43
  9167  002B7A  D001               	goto	L21
  9168  002B7C                     l7148:
  9169  002B7C  0E2D               	movlw	45
  9170  002B7E                     L21:
  9171  002B7E  6E47               	movwf	btemp+10,c
  9172  002B80  0E00               	movlw	0
  9173  002B82  6E48               	movwf	btemp+11,c
  9174                           
  9175                           ;stkvar	_dtoa$3803 @ sp[(-18)+0]
  9176  002B84  0EEE               	movlw	-18
  9177  002B86  0060  F11F  FFE3   	movff	btemp+10,plusw1
  9178  002B8C  0EEF               	movlw	-17
  9179  002B8E  0060  F123  FFE3   	movff	btemp+11,plusw1
  9180                           
  9181                           ;stkvar	_dtoa$3803 @ sp[(-18)+0]
  9182                           ;stkvar	_i @ sp[(-18)+10]
  9183  002B94  0EF8               	movlw	-8
  9184  002B96  006F FF8C  F048    	movff	plusw1,btemp+11
  9185  002B9C  5048               	movf	btemp+11,w,c
  9186  002B9E  0FD9               	addlw	low _dbuf
  9187  002BA0  6ED9               	movwf	fsr2l,c
  9188  002BA2  6ADA               	clrf	fsr2h,c
  9189  002BA4  0EEE               	movlw	-18
  9190  002BA6  006F FF8F FFDF     	movff	plusw1,indf2
  9191  002BAC                     l7152:
  9192                           
  9193                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
  9194                           ;stkvar	_w @ sp[(-18)+14]
  9195  002BAC  0EFC               	movlw	-4
  9196  002BAE  006F FF8F FFE6     	movff	plusw1,postinc1
  9197  002BB4  006F FF8F FFE6     	movff	plusw1,postinc1
  9198                           
  9199                           ;stkvar	_i @ sp[(-20)+10]
  9200  002BBA  0EF6               	movlw	-10
  9201  002BBC  006F FF8C  F048    	movff	plusw1,btemp+11
  9202  002BC2  5048               	movf	btemp+11,w,c
  9203  002BC4  0FD9               	addlw	low _dbuf
  9204  002BC6  6EE6               	movwf	postinc1,c
  9205                           
  9206                           ;stkvar	_fp @ sp[(-21)+-2]
  9207  002BC8  0EE9               	movlw	-23
  9208  002BCA  006F FF8F FFE6     	movff	plusw1,postinc1
  9209  002BD0  006F FF8F FFE6     	movff	plusw1,postinc1
  9210  002BD6  ECF3  F023         	call	_pad	;wreg free
  9211                           
  9212                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
  9213  002BDA  0EE4               	movlw	228
  9214  002BDC  26E1               	addwf	fsr1l,f,c
  9215  002BDE  0EFF               	movlw	255
  9216  002BE0  22E2               	addwfc	fsr1h,f,c
  9217  002BE2  0012               	return		;funcret
  9218  002BE4                     __end_of_dtoa:
  9219                           	opt callstack 0
  9220                           
  9221 ;; *************** function _abs *****************
  9222 ;; Defined at:
  9223 ;;		line 1 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/abs.c"
  9224 ;; Parameters:    Size  Location     Type
  9225 ;;  a               2  [STACK] int 
  9226 ;; Auto vars:     Size  Location     Type
  9227 ;;		None
  9228 ;; Return value:  Size  Location     Type
  9229 ;;                  2  [STACK] int 
  9230 ;; Registers used:
  9231 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
  9232 ;; Tracked objects:
  9233 ;;		On entry : 0/0
  9234 ;;		On exit  : 0/0
  9235 ;;		Unchanged: 0/0
  9236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9241 ;;Total ram usage:        0 bytes
  9242 ;; Hardware stack levels used:    1
  9243 ;; Hardware stack levels required when called:    3
  9244 ;; This function calls:
  9245 ;;		Nothing
  9246 ;; This function is called by:
  9247 ;;		_dtoa
  9248 ;; This function uses a reentrant model
  9249 ;;
  9250                           
  9251                           	psect	text41
  9252  0055E6                     __ptext41:
  9253                           	opt callstack 0
  9254  0055E6                     _abs:
  9255                           	opt callstack 23
  9256                           
  9257                           ;stkvar	_a @ sp[(0)+-2]
  9258                           
  9259                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9260                           ;incstack = 0
  9261  0055E6  0EFF               	movlw	-1
  9262  0055E8  BEE3               	btfsc	plusw1,7,c
  9263  0055EA  D007               	goto	u2160
  9264  0055EC  0EFF               	movlw	-1
  9265  0055EE  50E3               	movf	plusw1,w,c
  9266  0055F0  E112               	bnz	l4942
  9267  0055F2  0EFE               	movlw	-2
  9268  0055F4  04E3               	decf	plusw1,w,c
  9269  0055F6  B0D8               	btfsc	status,0,c
  9270  0055F8  D00E               	goto	l4942
  9271  0055FA                     u2160:
  9272                           
  9273                           ;stkvar	_a @ sp[(0)+-2]
  9274  0055FA  0EFE               	movlw	-2
  9275  0055FC  006F FF8C  F03D    	movff	plusw1,btemp
  9276  005602  1E3D               	comf	btemp,f,c
  9277  005604  0EFF               	movlw	-1
  9278  005606  006F FF8C  F03E    	movff	plusw1,btemp+1
  9279  00560C  1E3E               	comf	btemp+1,f,c
  9280  00560E  2A3D               	incf	btemp,f,c
  9281  005610  B4D8               	btfsc	status,2,c
  9282  005612  2A3E               	incf	btemp+1,f,c
  9283  005614  D008               	goto	l2468
  9284  005616                     l4942:
  9285                           
  9286                           ;stkvar	_a @ sp[(0)+-2]
  9287  005616  0EFE               	movlw	-2
  9288  005618  006F FF8C  F03D    	movff	plusw1,btemp
  9289  00561E  0EFF               	movlw	-1
  9290  005620  006F FF8C  F03E    	movff	plusw1,btemp+1
  9291  005626                     l2468:
  9292                           
  9293                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
  9294  005626  52E5               	movf	postdec1,f,c
  9295  005628  52E5               	movf	postdec1,f,c
  9296  00562A  0012               	return		;funcret
  9297  00562C                     __end_of_abs:
  9298                           	opt callstack 0
  9299                           
  9300 ;; *************** function ___aomod *****************
  9301 ;; Defined at:
  9302 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aomod.c"
  9303 ;; Parameters:    Size  Location     Type
  9304 ;;  dividend        8  [STACK] long long 
  9305 ;;  divisor         8  [STACK] long long 
  9306 ;; Auto vars:     Size  Location     Type
  9307 ;;  sign            1  [STACK] unsigned char 
  9308 ;;  counter         1  [STACK] unsigned char 
  9309 ;; Return value:  Size  Location     Type
  9310 ;;                  8  [STACK] long long 
  9311 ;; Registers used:
  9312 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
  9313 ;; Tracked objects:
  9314 ;;		On entry : 0/0
  9315 ;;		On exit  : 0/0
  9316 ;;		Unchanged: 0/0
  9317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9322 ;;Total ram usage:        0 bytes
  9323 ;; Hardware stack levels used:    1
  9324 ;; Hardware stack levels required when called:    3
  9325 ;; This function calls:
  9326 ;;		Nothing
  9327 ;; This function is called by:
  9328 ;;		_dtoa
  9329 ;; This function uses a reentrant model
  9330 ;;
  9331                           
  9332                           	psect	text42
  9333  003D84                     __ptext42:
  9334                           	opt callstack 0
  9335  003D84                     ___aomod:
  9336                           	opt callstack 0
  9337                           
  9338                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
  9339  003D84  52E6               	movf	postinc1,f,c
  9340  003D86  52E6               	movf	postinc1,f,c
  9341                           
  9342                           ;stkvar	_sign @ sp[(-2)+0]
  9343                           
  9344                           ;incstack = 0
  9345  003D88  0EFE               	movlw	-2
  9346  003D8A  6AE3               	clrf	plusw1,c
  9347                           
  9348                           ;stkvar	_dividend @ sp[(-2)+-8]
  9349  003D8C  0EFD               	movlw	-3
  9350  003D8E  AEE3               	btfss	plusw1,7,c
  9351  003D90  D028               	goto	l5024
  9352                           
  9353                           ;stkvar	_dividend @ sp[(-2)+-8]
  9354                           ;stkvar	_dividend @ sp[(-2)+-8]
  9355  003D92  0EF6               	movlw	-10
  9356  003D94  6CE3               	negf	plusw1,c
  9357  003D96  0EF7               	movlw	-9
  9358  003D98  1EE3               	comf	plusw1,f,c
  9359  003D9A  0EF8               	movlw	-8
  9360  003D9C  1EE3               	comf	plusw1,f,c
  9361  003D9E  0EF9               	movlw	-7
  9362  003DA0  1EE3               	comf	plusw1,f,c
  9363  003DA2  0EFA               	movlw	-6
  9364  003DA4  1EE3               	comf	plusw1,f,c
  9365  003DA6  0EFB               	movlw	-5
  9366  003DA8  1EE3               	comf	plusw1,f,c
  9367  003DAA  0EFC               	movlw	-4
  9368  003DAC  1EE3               	comf	plusw1,f,c
  9369  003DAE  0EFD               	movlw	-3
  9370  003DB0  1EE3               	comf	plusw1,f,c
  9371  003DB2  E314               	bnc	u2390
  9372  003DB4  0EF7               	movlw	-9
  9373  003DB6  2AE3               	incf	plusw1,f,c
  9374  003DB8  E311               	bnc	u2390
  9375  003DBA  0EF8               	movlw	-8
  9376  003DBC  2AE3               	incf	plusw1,f,c
  9377  003DBE  E30E               	bnc	u2390
  9378  003DC0  0EF9               	movlw	-7
  9379  003DC2  2AE3               	incf	plusw1,f,c
  9380  003DC4  E30B               	bnc	u2390
  9381  003DC6  0EFA               	movlw	-6
  9382  003DC8  2AE3               	incf	plusw1,f,c
  9383  003DCA  E308               	bnc	u2390
  9384  003DCC  0EFB               	movlw	-5
  9385  003DCE  2AE3               	incf	plusw1,f,c
  9386  003DD0  E305               	bnc	u2390
  9387  003DD2  0EFC               	movlw	-4
  9388  003DD4  2AE3               	incf	plusw1,f,c
  9389  003DD6  E302               	bnc	u2390
  9390  003DD8  0EFD               	movlw	-3
  9391  003DDA  2AE3               	incf	plusw1,f,c
  9392  003DDC                     u2390:
  9393                           
  9394                           ;stkvar	_sign @ sp[(-2)+0]
  9395  003DDC  0EFE               	movlw	-2
  9396  003DDE  6AE3               	clrf	plusw1,c
  9397  003DE0  2AE3               	incf	plusw1,f,c
  9398  003DE2                     l5024:
  9399                           
  9400                           ;stkvar	_divisor @ sp[(-2)+-16]
  9401  003DE2  0EF5               	movlw	-11
  9402  003DE4  AEE3               	btfss	plusw1,7,c
  9403  003DE6  D025               	goto	u2410
  9404                           
  9405                           ;stkvar	_divisor @ sp[(-2)+-16]
  9406                           ;stkvar	_divisor @ sp[(-2)+-16]
  9407  003DE8  0EEE               	movlw	-18
  9408  003DEA  6CE3               	negf	plusw1,c
  9409  003DEC  0EEF               	movlw	-17
  9410  003DEE  1EE3               	comf	plusw1,f,c
  9411  003DF0  0EF0               	movlw	-16
  9412  003DF2  1EE3               	comf	plusw1,f,c
  9413  003DF4  0EF1               	movlw	-15
  9414  003DF6  1EE3               	comf	plusw1,f,c
  9415  003DF8  0EF2               	movlw	-14
  9416  003DFA  1EE3               	comf	plusw1,f,c
  9417  003DFC  0EF3               	movlw	-13
  9418  003DFE  1EE3               	comf	plusw1,f,c
  9419  003E00  0EF4               	movlw	-12
  9420  003E02  1EE3               	comf	plusw1,f,c
  9421  003E04  0EF5               	movlw	-11
  9422  003E06  1EE3               	comf	plusw1,f,c
  9423  003E08  E314               	bnc	u2410
  9424  003E0A  0EEF               	movlw	-17
  9425  003E0C  2AE3               	incf	plusw1,f,c
  9426  003E0E  E311               	bnc	u2410
  9427  003E10  0EF0               	movlw	-16
  9428  003E12  2AE3               	incf	plusw1,f,c
  9429  003E14  E30E               	bnc	u2410
  9430  003E16  0EF1               	movlw	-15
  9431  003E18  2AE3               	incf	plusw1,f,c
  9432  003E1A  E30B               	bnc	u2410
  9433  003E1C  0EF2               	movlw	-14
  9434  003E1E  2AE3               	incf	plusw1,f,c
  9435  003E20  E308               	bnc	u2410
  9436  003E22  0EF3               	movlw	-13
  9437  003E24  2AE3               	incf	plusw1,f,c
  9438  003E26  E305               	bnc	u2410
  9439  003E28  0EF4               	movlw	-12
  9440  003E2A  2AE3               	incf	plusw1,f,c
  9441  003E2C  E302               	bnc	u2410
  9442  003E2E  0EF5               	movlw	-11
  9443  003E30  2AE3               	incf	plusw1,f,c
  9444  003E32                     u2410:
  9445                           
  9446                           ;stkvar	_divisor @ sp[(-2)+-16]
  9447  003E32  0EEE               	movlw	-18
  9448  003E34  50E3               	movf	plusw1,w,c
  9449  003E36  E116               	bnz	u2420
  9450  003E38  0EEF               	movlw	-17
  9451  003E3A  50E3               	movf	plusw1,w,c
  9452  003E3C  E113               	bnz	u2420
  9453  003E3E  0EF0               	movlw	-16
  9454  003E40  50E3               	movf	plusw1,w,c
  9455  003E42  E110               	bnz	u2420
  9456  003E44  0EF1               	movlw	-15
  9457  003E46  50E3               	movf	plusw1,w,c
  9458  003E48  E10D               	bnz	u2420
  9459  003E4A  0EF2               	movlw	-14
  9460  003E4C  50E3               	movf	plusw1,w,c
  9461  003E4E  E10A               	bnz	u2420
  9462  003E50  0EF3               	movlw	-13
  9463  003E52  50E3               	movf	plusw1,w,c
  9464  003E54  E107               	bnz	u2420
  9465  003E56  0EF4               	movlw	-12
  9466  003E58  50E3               	movf	plusw1,w,c
  9467  003E5A  E104               	bnz	u2420
  9468  003E5C  0EF5               	movlw	-11
  9469  003E5E  50E3               	movf	plusw1,w,c
  9470  003E60  B4D8               	btfsc	status,2,c
  9471  003E62  D075               	goto	u2450
  9472  003E64                     u2420:
  9473                           
  9474                           ;stkvar	_counter @ sp[(-2)+1]
  9475  003E64  0EFF               	movlw	-1
  9476  003E66  6AE3               	clrf	plusw1,c
  9477  003E68  D012               	goto	L22
  9478  003E6A                     l5032:
  9479                           
  9480                           ;stkvar	_divisor @ sp[(-2)+-16]
  9481  003E6A  90D8               	bcf	status,0,c
  9482  003E6C  0EEE               	movlw	-18
  9483  003E6E  36E3               	rlcf	plusw1,f,c
  9484  003E70  0EEF               	movlw	-17
  9485  003E72  36E3               	rlcf	plusw1,f,c
  9486  003E74  0EF0               	movlw	-16
  9487  003E76  36E3               	rlcf	plusw1,f,c
  9488  003E78  0EF1               	movlw	-15
  9489  003E7A  36E3               	rlcf	plusw1,f,c
  9490  003E7C  0EF2               	movlw	-14
  9491  003E7E  36E3               	rlcf	plusw1,f,c
  9492  003E80  0EF3               	movlw	-13
  9493  003E82  36E3               	rlcf	plusw1,f,c
  9494  003E84  0EF4               	movlw	-12
  9495  003E86  36E3               	rlcf	plusw1,f,c
  9496  003E88  0EF5               	movlw	-11
  9497  003E8A  36E3               	rlcf	plusw1,f,c
  9498                           
  9499                           ;stkvar	_counter @ sp[(-2)+1]
  9500  003E8C  0EFF               	movlw	-1
  9501  003E8E                     L22:
  9502  003E8E  2AE3               	incf	plusw1,f,c
  9503                           
  9504                           ;stkvar	_divisor @ sp[(-2)+-16]
  9505  003E90  0EF5               	movlw	-11
  9506  003E92  AEE3               	btfss	plusw1,7,c
  9507  003E94  D7EA               	goto	l5032
  9508  003E96                     u2430:
  9509                           
  9510                           ;stkvar	_divisor @ sp[(-2)+-16]
  9511                           ;stkvar	_dividend @ sp[(-2)+-8]
  9512  003E96  50E1               	movf	fsr1l,w,c
  9513  003E98  0FF6               	addlw	-10
  9514  003E9A  6ED9               	movwf	fsr2l,c
  9515  003E9C  50E2               	movf	fsr1h,w,c
  9516  003E9E  6EDA               	movwf	fsr2h,c
  9517  003EA0  0EFF               	movlw	255
  9518  003EA2  22DA               	addwfc	fsr2h,f,c
  9519  003EA4  0EEE               	movlw	-18
  9520  003EA6  50E3               	movf	plusw1,w,c
  9521  003EA8  5CDE               	subwf	postinc2,w,c
  9522  003EAA  0EEF               	movlw	-17
  9523  003EAC  50E3               	movf	plusw1,w,c
  9524  003EAE  58DE               	subwfb	postinc2,w,c
  9525  003EB0  0EF0               	movlw	-16
  9526  003EB2  50E3               	movf	plusw1,w,c
  9527  003EB4  58DE               	subwfb	postinc2,w,c
  9528  003EB6  0EF1               	movlw	-15
  9529  003EB8  50E3               	movf	plusw1,w,c
  9530  003EBA  58DE               	subwfb	postinc2,w,c
  9531  003EBC  0EF2               	movlw	-14
  9532  003EBE  50E3               	movf	plusw1,w,c
  9533  003EC0  58DE               	subwfb	postinc2,w,c
  9534  003EC2  0EF3               	movlw	-13
  9535  003EC4  50E3               	movf	plusw1,w,c
  9536  003EC6  58DE               	subwfb	postinc2,w,c
  9537  003EC8  0EF4               	movlw	-12
  9538  003ECA  50E3               	movf	plusw1,w,c
  9539  003ECC  58DE               	subwfb	postinc2,w,c
  9540  003ECE  0EF5               	movlw	-11
  9541  003ED0  50E3               	movf	plusw1,w,c
  9542  003ED2  58DE               	subwfb	postinc2,w,c
  9543  003ED4  A0D8               	btfss	status,0,c
  9544  003ED6  D01F               	goto	l5040
  9545                           
  9546                           ;stkvar	_divisor @ sp[(-2)+-16]
  9547                           ;stkvar	_dividend @ sp[(-2)+-8]
  9548  003ED8  50E1               	movf	fsr1l,w,c
  9549  003EDA  0FF6               	addlw	-10
  9550  003EDC  6ED9               	movwf	fsr2l,c
  9551  003EDE  50E2               	movf	fsr1h,w,c
  9552  003EE0  6EDA               	movwf	fsr2h,c
  9553  003EE2  0EFF               	movlw	255
  9554  003EE4  22DA               	addwfc	fsr2h,f,c
  9555  003EE6  0EEE               	movlw	-18
  9556  003EE8  50E3               	movf	plusw1,w,c
  9557  003EEA  5EDE               	subwf	postinc2,f,c
  9558  003EEC  0EEF               	movlw	-17
  9559  003EEE  50E3               	movf	plusw1,w,c
  9560  003EF0  5ADE               	subwfb	postinc2,f,c
  9561  003EF2  0EF0               	movlw	-16
  9562  003EF4  50E3               	movf	plusw1,w,c
  9563  003EF6  5ADE               	subwfb	postinc2,f,c
  9564  003EF8  0EF1               	movlw	-15
  9565  003EFA  50E3               	movf	plusw1,w,c
  9566  003EFC  5ADE               	subwfb	postinc2,f,c
  9567  003EFE  0EF2               	movlw	-14
  9568  003F00  50E3               	movf	plusw1,w,c
  9569  003F02  5ADE               	subwfb	postinc2,f,c
  9570  003F04  0EF3               	movlw	-13
  9571  003F06  50E3               	movf	plusw1,w,c
  9572  003F08  5ADE               	subwfb	postinc2,f,c
  9573  003F0A  0EF4               	movlw	-12
  9574  003F0C  50E3               	movf	plusw1,w,c
  9575  003F0E  5ADE               	subwfb	postinc2,f,c
  9576  003F10  0EF5               	movlw	-11
  9577  003F12  50E3               	movf	plusw1,w,c
  9578  003F14  5ADE               	subwfb	postinc2,f,c
  9579  003F16                     l5040:
  9580                           
  9581                           ;stkvar	_divisor @ sp[(-2)+-16]
  9582  003F16  90D8               	bcf	status,0,c
  9583  003F18  0EF5               	movlw	-11
  9584  003F1A  32E3               	rrcf	plusw1,f,c
  9585  003F1C  0EF4               	movlw	-12
  9586  003F1E  32E3               	rrcf	plusw1,f,c
  9587  003F20  0EF3               	movlw	-13
  9588  003F22  32E3               	rrcf	plusw1,f,c
  9589  003F24  0EF2               	movlw	-14
  9590  003F26  32E3               	rrcf	plusw1,f,c
  9591  003F28  0EF1               	movlw	-15
  9592  003F2A  32E3               	rrcf	plusw1,f,c
  9593  003F2C  0EF0               	movlw	-16
  9594  003F2E  32E3               	rrcf	plusw1,f,c
  9595  003F30  0EEF               	movlw	-17
  9596  003F32  32E3               	rrcf	plusw1,f,c
  9597  003F34  0EEE               	movlw	-18
  9598  003F36  32E3               	rrcf	plusw1,f,c
  9599                           
  9600                           ;stkvar	_counter @ sp[(-2)+1]
  9601  003F38  0EFF               	movlw	-1
  9602  003F3A  50E3               	movf	plusw1,w,c
  9603  003F3C  6E3D               	movwf	btemp,c
  9604  003F3E  0E01               	movlw	1
  9605  003F40  5E3D               	subwf	btemp,f,c
  9606  003F42  0EFF               	movlw	-1
  9607  003F44  0060  F0F7  FFE3   	movff	btemp,plusw1
  9608  003F4A  A4D8               	btfss	status,2,c
  9609  003F4C  D7A4               	goto	u2430
  9610  003F4E                     u2450:
  9611                           
  9612                           ;stkvar	_sign @ sp[(-2)+0]
  9613  003F4E  0EFE               	movlw	-2
  9614  003F50  50E3               	movf	plusw1,w,c
  9615  003F52  B4D8               	btfsc	status,2,c
  9616  003F54  D025               	goto	u2470
  9617                           
  9618                           ;stkvar	_dividend @ sp[(-2)+-8]
  9619                           ;stkvar	_dividend @ sp[(-2)+-8]
  9620  003F56  0EF6               	movlw	-10
  9621  003F58  6CE3               	negf	plusw1,c
  9622  003F5A  0EF7               	movlw	-9
  9623  003F5C  1EE3               	comf	plusw1,f,c
  9624  003F5E  0EF8               	movlw	-8
  9625  003F60  1EE3               	comf	plusw1,f,c
  9626  003F62  0EF9               	movlw	-7
  9627  003F64  1EE3               	comf	plusw1,f,c
  9628  003F66  0EFA               	movlw	-6
  9629  003F68  1EE3               	comf	plusw1,f,c
  9630  003F6A  0EFB               	movlw	-5
  9631  003F6C  1EE3               	comf	plusw1,f,c
  9632  003F6E  0EFC               	movlw	-4
  9633  003F70  1EE3               	comf	plusw1,f,c
  9634  003F72  0EFD               	movlw	-3
  9635  003F74  1EE3               	comf	plusw1,f,c
  9636  003F76  E314               	bnc	u2470
  9637  003F78  0EF7               	movlw	-9
  9638  003F7A  2AE3               	incf	plusw1,f,c
  9639  003F7C  E311               	bnc	u2470
  9640  003F7E  0EF8               	movlw	-8
  9641  003F80  2AE3               	incf	plusw1,f,c
  9642  003F82  E30E               	bnc	u2470
  9643  003F84  0EF9               	movlw	-7
  9644  003F86  2AE3               	incf	plusw1,f,c
  9645  003F88  E30B               	bnc	u2470
  9646  003F8A  0EFA               	movlw	-6
  9647  003F8C  2AE3               	incf	plusw1,f,c
  9648  003F8E  E308               	bnc	u2470
  9649  003F90  0EFB               	movlw	-5
  9650  003F92  2AE3               	incf	plusw1,f,c
  9651  003F94  E305               	bnc	u2470
  9652  003F96  0EFC               	movlw	-4
  9653  003F98  2AE3               	incf	plusw1,f,c
  9654  003F9A  E302               	bnc	u2470
  9655  003F9C  0EFD               	movlw	-3
  9656  003F9E  2AE3               	incf	plusw1,f,c
  9657  003FA0                     u2470:
  9658                           
  9659                           ;stkvar	_dividend @ sp[(-2)+-8]
  9660  003FA0  0EF6               	movlw	246
  9661  003FA2  24E1               	addwf	fsr1l,w,c
  9662  003FA4  6ED9               	movwf	fsr2l,c
  9663  003FA6  0EFF               	movlw	255
  9664  003FA8  20E2               	addwfc	fsr1h,w,c
  9665  003FAA  6EDA               	movwf	fsr2h,c
  9666                           
  9667                           ;stkvar	?___aomod @ sp[(-2)+-8]
  9668  003FAC  0E08               	movlw	8
  9669  003FAE  6E3D               	movwf	btemp,c
  9670  003FB0  0EF6               	movlw	-10
  9671  003FB2                     us248999:
  9672  003FB2  006F FF7B FFE3     	movff	postinc2,plusw1
  9673  003FB8  28E8               	incf	wreg,w,c
  9674  003FBA  2E3D               	decfsz	btemp,f,c
  9675  003FBC  D7FA               	bra	us248999
  9676                           
  9677                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
  9678  003FBE  52E5               	movf	postdec1,f,c
  9679  003FC0  52E5               	movf	postdec1,f,c
  9680  003FC2  0012               	return		;funcret
  9681  003FC4                     __end_of___aomod:
  9682                           	opt callstack 0
  9683                           
  9684 ;; *************** function ___aodiv *****************
  9685 ;; Defined at:
  9686 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aodiv.c"
  9687 ;; Parameters:    Size  Location     Type
  9688 ;;  dividend        8  [STACK] long long 
  9689 ;;  divisor         8  [STACK] long long 
  9690 ;; Auto vars:     Size  Location     Type
  9691 ;;  quotient        8  [STACK] long long 
  9692 ;;  sign            1  [STACK] unsigned char 
  9693 ;;  counter         1  [STACK] unsigned char 
  9694 ;; Return value:  Size  Location     Type
  9695 ;;                  8  [STACK] long long 
  9696 ;; Registers used:
  9697 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
  9698 ;; Tracked objects:
  9699 ;;		On entry : 0/0
  9700 ;;		On exit  : 0/0
  9701 ;;		Unchanged: 0/0
  9702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9706 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9707 ;;Total ram usage:        0 bytes
  9708 ;; Hardware stack levels used:    1
  9709 ;; Hardware stack levels required when called:    3
  9710 ;; This function calls:
  9711 ;;		Nothing
  9712 ;; This function is called by:
  9713 ;;		_dtoa
  9714 ;; This function uses a reentrant model
  9715 ;;
  9716                           
  9717                           	psect	text43
  9718  003886                     __ptext43:
  9719                           	opt callstack 0
  9720  003886                     ___aodiv:
  9721                           	opt callstack 0
  9722                           
  9723                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
  9724  003886  0E0A               	movlw	10
  9725  003888  26E1               	addwf	fsr1l,f,c
  9726  00388A  0E00               	movlw	0
  9727  00388C  22E2               	addwfc	fsr1h,f,c
  9728                           
  9729                           ;stkvar	_sign @ sp[(-10)+8]
  9730                           
  9731                           ;incstack = 0
  9732  00388E  0EFE               	movlw	-2
  9733  003890  6AE3               	clrf	plusw1,c
  9734                           
  9735                           ;stkvar	_divisor @ sp[(-10)+-16]
  9736  003892  0EED               	movlw	-19
  9737  003894  AEE3               	btfss	plusw1,7,c
  9738  003896  D028               	goto	l4980
  9739                           
  9740                           ;stkvar	_divisor @ sp[(-10)+-16]
  9741                           ;stkvar	_divisor @ sp[(-10)+-16]
  9742  003898  0EE6               	movlw	-26
  9743  00389A  6CE3               	negf	plusw1,c
  9744  00389C  0EE7               	movlw	-25
  9745  00389E  1EE3               	comf	plusw1,f,c
  9746  0038A0  0EE8               	movlw	-24
  9747  0038A2  1EE3               	comf	plusw1,f,c
  9748  0038A4  0EE9               	movlw	-23
  9749  0038A6  1EE3               	comf	plusw1,f,c
  9750  0038A8  0EEA               	movlw	-22
  9751  0038AA  1EE3               	comf	plusw1,f,c
  9752  0038AC  0EEB               	movlw	-21
  9753  0038AE  1EE3               	comf	plusw1,f,c
  9754  0038B0  0EEC               	movlw	-20
  9755  0038B2  1EE3               	comf	plusw1,f,c
  9756  0038B4  0EED               	movlw	-19
  9757  0038B6  1EE3               	comf	plusw1,f,c
  9758  0038B8  E314               	bnc	u2270
  9759  0038BA  0EE7               	movlw	-25
  9760  0038BC  2AE3               	incf	plusw1,f,c
  9761  0038BE  E311               	bnc	u2270
  9762  0038C0  0EE8               	movlw	-24
  9763  0038C2  2AE3               	incf	plusw1,f,c
  9764  0038C4  E30E               	bnc	u2270
  9765  0038C6  0EE9               	movlw	-23
  9766  0038C8  2AE3               	incf	plusw1,f,c
  9767  0038CA  E30B               	bnc	u2270
  9768  0038CC  0EEA               	movlw	-22
  9769  0038CE  2AE3               	incf	plusw1,f,c
  9770  0038D0  E308               	bnc	u2270
  9771  0038D2  0EEB               	movlw	-21
  9772  0038D4  2AE3               	incf	plusw1,f,c
  9773  0038D6  E305               	bnc	u2270
  9774  0038D8  0EEC               	movlw	-20
  9775  0038DA  2AE3               	incf	plusw1,f,c
  9776  0038DC  E302               	bnc	u2270
  9777  0038DE  0EED               	movlw	-19
  9778  0038E0  2AE3               	incf	plusw1,f,c
  9779  0038E2                     u2270:
  9780                           
  9781                           ;stkvar	_sign @ sp[(-10)+8]
  9782  0038E2  0EFE               	movlw	-2
  9783  0038E4  6AE3               	clrf	plusw1,c
  9784  0038E6  2AE3               	incf	plusw1,f,c
  9785  0038E8                     l4980:
  9786                           
  9787                           ;stkvar	_dividend @ sp[(-10)+-8]
  9788  0038E8  0EF5               	movlw	-11
  9789  0038EA  AEE3               	btfss	plusw1,7,c
  9790  0038EC  D027               	goto	l4986
  9791                           
  9792                           ;stkvar	_dividend @ sp[(-10)+-8]
  9793                           ;stkvar	_dividend @ sp[(-10)+-8]
  9794  0038EE  0EEE               	movlw	-18
  9795  0038F0  6CE3               	negf	plusw1,c
  9796  0038F2  0EEF               	movlw	-17
  9797  0038F4  1EE3               	comf	plusw1,f,c
  9798  0038F6  0EF0               	movlw	-16
  9799  0038F8  1EE3               	comf	plusw1,f,c
  9800  0038FA  0EF1               	movlw	-15
  9801  0038FC  1EE3               	comf	plusw1,f,c
  9802  0038FE  0EF2               	movlw	-14
  9803  003900  1EE3               	comf	plusw1,f,c
  9804  003902  0EF3               	movlw	-13
  9805  003904  1EE3               	comf	plusw1,f,c
  9806  003906  0EF4               	movlw	-12
  9807  003908  1EE3               	comf	plusw1,f,c
  9808  00390A  0EF5               	movlw	-11
  9809  00390C  1EE3               	comf	plusw1,f,c
  9810  00390E  E314               	bnc	u2290
  9811  003910  0EEF               	movlw	-17
  9812  003912  2AE3               	incf	plusw1,f,c
  9813  003914  E311               	bnc	u2290
  9814  003916  0EF0               	movlw	-16
  9815  003918  2AE3               	incf	plusw1,f,c
  9816  00391A  E30E               	bnc	u2290
  9817  00391C  0EF1               	movlw	-15
  9818  00391E  2AE3               	incf	plusw1,f,c
  9819  003920  E30B               	bnc	u2290
  9820  003922  0EF2               	movlw	-14
  9821  003924  2AE3               	incf	plusw1,f,c
  9822  003926  E308               	bnc	u2290
  9823  003928  0EF3               	movlw	-13
  9824  00392A  2AE3               	incf	plusw1,f,c
  9825  00392C  E305               	bnc	u2290
  9826  00392E  0EF4               	movlw	-12
  9827  003930  2AE3               	incf	plusw1,f,c
  9828  003932  E302               	bnc	u2290
  9829  003934  0EF5               	movlw	-11
  9830  003936  2AE3               	incf	plusw1,f,c
  9831  003938                     u2290:
  9832                           
  9833                           ;stkvar	_sign @ sp[(-10)+8]
  9834  003938  0EFE               	movlw	-2
  9835  00393A  70E3               	btg	plusw1,0,c
  9836  00393C                     l4986:
  9837                           
  9838                           ;stkvar	_quotient @ sp[(-10)+0]
  9839  00393C  0E07               	movlw	7
  9840  00393E  6E3D               	movwf	btemp,c
  9841  003940  0EF6               	movlw	-10
  9842  003942                     u2301:
  9843  003942  6AE3               	clrf	plusw1,c
  9844  003944  2AE8               	incf	wreg,f,c
  9845  003946  063D               	decf	btemp,f,c
  9846  003948  E2FC               	bc	u2301
  9847                           
  9848                           ;stkvar	_divisor @ sp[(-10)+-16]
  9849  00394A  0EE6               	movlw	-26
  9850  00394C  50E3               	movf	plusw1,w,c
  9851  00394E  E116               	bnz	u2310
  9852  003950  0EE7               	movlw	-25
  9853  003952  50E3               	movf	plusw1,w,c
  9854  003954  E113               	bnz	u2310
  9855  003956  0EE8               	movlw	-24
  9856  003958  50E3               	movf	plusw1,w,c
  9857  00395A  E110               	bnz	u2310
  9858  00395C  0EE9               	movlw	-23
  9859  00395E  50E3               	movf	plusw1,w,c
  9860  003960  E10D               	bnz	u2310
  9861  003962  0EEA               	movlw	-22
  9862  003964  50E3               	movf	plusw1,w,c
  9863  003966  E10A               	bnz	u2310
  9864  003968  0EEB               	movlw	-21
  9865  00396A  50E3               	movf	plusw1,w,c
  9866  00396C  E107               	bnz	u2310
  9867  00396E  0EEC               	movlw	-20
  9868  003970  50E3               	movf	plusw1,w,c
  9869  003972  E104               	bnz	u2310
  9870  003974  0EED               	movlw	-19
  9871  003976  50E3               	movf	plusw1,w,c
  9872  003978  B4D8               	btfsc	status,2,c
  9873  00397A  D088               	goto	u2340
  9874  00397C                     u2310:
  9875                           
  9876                           ;stkvar	_counter @ sp[(-10)+9]
  9877  00397C  0EFF               	movlw	-1
  9878  00397E  6AE3               	clrf	plusw1,c
  9879  003980  D012               	goto	L23
  9880  003982                     l4992:
  9881                           
  9882                           ;stkvar	_divisor @ sp[(-10)+-16]
  9883  003982  90D8               	bcf	status,0,c
  9884  003984  0EE6               	movlw	-26
  9885  003986  36E3               	rlcf	plusw1,f,c
  9886  003988  0EE7               	movlw	-25
  9887  00398A  36E3               	rlcf	plusw1,f,c
  9888  00398C  0EE8               	movlw	-24
  9889  00398E  36E3               	rlcf	plusw1,f,c
  9890  003990  0EE9               	movlw	-23
  9891  003992  36E3               	rlcf	plusw1,f,c
  9892  003994  0EEA               	movlw	-22
  9893  003996  36E3               	rlcf	plusw1,f,c
  9894  003998  0EEB               	movlw	-21
  9895  00399A  36E3               	rlcf	plusw1,f,c
  9896  00399C  0EEC               	movlw	-20
  9897  00399E  36E3               	rlcf	plusw1,f,c
  9898  0039A0  0EED               	movlw	-19
  9899  0039A2  36E3               	rlcf	plusw1,f,c
  9900                           
  9901                           ;stkvar	_counter @ sp[(-10)+9]
  9902  0039A4  0EFF               	movlw	-1
  9903  0039A6                     L23:
  9904  0039A6  2AE3               	incf	plusw1,f,c
  9905                           
  9906                           ;stkvar	_divisor @ sp[(-10)+-16]
  9907  0039A8  0EED               	movlw	-19
  9908  0039AA  AEE3               	btfss	plusw1,7,c
  9909  0039AC  D7EA               	goto	l4992
  9910  0039AE                     u2320:
  9911                           
  9912                           ;stkvar	_quotient @ sp[(-10)+0]
  9913  0039AE  90D8               	bcf	status,0,c
  9914  0039B0  0EF6               	movlw	-10
  9915  0039B2  36E3               	rlcf	plusw1,f,c
  9916  0039B4  0EF7               	movlw	-9
  9917  0039B6  36E3               	rlcf	plusw1,f,c
  9918  0039B8  0EF8               	movlw	-8
  9919  0039BA  36E3               	rlcf	plusw1,f,c
  9920  0039BC  0EF9               	movlw	-7
  9921  0039BE  36E3               	rlcf	plusw1,f,c
  9922  0039C0  0EFA               	movlw	-6
  9923  0039C2  36E3               	rlcf	plusw1,f,c
  9924  0039C4  0EFB               	movlw	-5
  9925  0039C6  36E3               	rlcf	plusw1,f,c
  9926  0039C8  0EFC               	movlw	-4
  9927  0039CA  36E3               	rlcf	plusw1,f,c
  9928  0039CC  0EFD               	movlw	-3
  9929  0039CE  36E3               	rlcf	plusw1,f,c
  9930                           
  9931                           ;stkvar	_divisor @ sp[(-10)+-16]
  9932                           ;stkvar	_dividend @ sp[(-10)+-8]
  9933  0039D0  50E1               	movf	fsr1l,w,c
  9934  0039D2  0FEE               	addlw	-18
  9935  0039D4  6ED9               	movwf	fsr2l,c
  9936  0039D6  50E2               	movf	fsr1h,w,c
  9937  0039D8  6EDA               	movwf	fsr2h,c
  9938  0039DA  0EFF               	movlw	255
  9939  0039DC  22DA               	addwfc	fsr2h,f,c
  9940  0039DE  0EE6               	movlw	-26
  9941  0039E0  50E3               	movf	plusw1,w,c
  9942  0039E2  5CDE               	subwf	postinc2,w,c
  9943  0039E4  0EE7               	movlw	-25
  9944  0039E6  50E3               	movf	plusw1,w,c
  9945  0039E8  58DE               	subwfb	postinc2,w,c
  9946  0039EA  0EE8               	movlw	-24
  9947  0039EC  50E3               	movf	plusw1,w,c
  9948  0039EE  58DE               	subwfb	postinc2,w,c
  9949  0039F0  0EE9               	movlw	-23
  9950  0039F2  50E3               	movf	plusw1,w,c
  9951  0039F4  58DE               	subwfb	postinc2,w,c
  9952  0039F6  0EEA               	movlw	-22
  9953  0039F8  50E3               	movf	plusw1,w,c
  9954  0039FA  58DE               	subwfb	postinc2,w,c
  9955  0039FC  0EEB               	movlw	-21
  9956  0039FE  50E3               	movf	plusw1,w,c
  9957  003A00  58DE               	subwfb	postinc2,w,c
  9958  003A02  0EEC               	movlw	-20
  9959  003A04  50E3               	movf	plusw1,w,c
  9960  003A06  58DE               	subwfb	postinc2,w,c
  9961  003A08  0EED               	movlw	-19
  9962  003A0A  50E3               	movf	plusw1,w,c
  9963  003A0C  58DE               	subwfb	postinc2,w,c
  9964  003A0E  A0D8               	btfss	status,0,c
  9965  003A10  D021               	goto	l5004
  9966                           
  9967                           ;stkvar	_divisor @ sp[(-10)+-16]
  9968                           ;stkvar	_dividend @ sp[(-10)+-8]
  9969  003A12  50E1               	movf	fsr1l,w,c
  9970  003A14  0FEE               	addlw	-18
  9971  003A16  6ED9               	movwf	fsr2l,c
  9972  003A18  50E2               	movf	fsr1h,w,c
  9973  003A1A  6EDA               	movwf	fsr2h,c
  9974  003A1C  0EFF               	movlw	255
  9975  003A1E  22DA               	addwfc	fsr2h,f,c
  9976  003A20  0EE6               	movlw	-26
  9977  003A22  50E3               	movf	plusw1,w,c
  9978  003A24  5EDE               	subwf	postinc2,f,c
  9979  003A26  0EE7               	movlw	-25
  9980  003A28  50E3               	movf	plusw1,w,c
  9981  003A2A  5ADE               	subwfb	postinc2,f,c
  9982  003A2C  0EE8               	movlw	-24
  9983  003A2E  50E3               	movf	plusw1,w,c
  9984  003A30  5ADE               	subwfb	postinc2,f,c
  9985  003A32  0EE9               	movlw	-23
  9986  003A34  50E3               	movf	plusw1,w,c
  9987  003A36  5ADE               	subwfb	postinc2,f,c
  9988  003A38  0EEA               	movlw	-22
  9989  003A3A  50E3               	movf	plusw1,w,c
  9990  003A3C  5ADE               	subwfb	postinc2,f,c
  9991  003A3E  0EEB               	movlw	-21
  9992  003A40  50E3               	movf	plusw1,w,c
  9993  003A42  5ADE               	subwfb	postinc2,f,c
  9994  003A44  0EEC               	movlw	-20
  9995  003A46  50E3               	movf	plusw1,w,c
  9996  003A48  5ADE               	subwfb	postinc2,f,c
  9997  003A4A  0EED               	movlw	-19
  9998  003A4C  50E3               	movf	plusw1,w,c
  9999  003A4E  5ADE               	subwfb	postinc2,f,c
 10000                           
 10001                           ;stkvar	_quotient @ sp[(-10)+0]
 10002  003A50  0EF6               	movlw	-10
 10003  003A52  80E3               	bsf	plusw1,0,c
 10004  003A54                     l5004:
 10005                           
 10006                           ;stkvar	_divisor @ sp[(-10)+-16]
 10007  003A54  90D8               	bcf	status,0,c
 10008  003A56  0EED               	movlw	-19
 10009  003A58  32E3               	rrcf	plusw1,f,c
 10010  003A5A  0EEC               	movlw	-20
 10011  003A5C  32E3               	rrcf	plusw1,f,c
 10012  003A5E  0EEB               	movlw	-21
 10013  003A60  32E3               	rrcf	plusw1,f,c
 10014  003A62  0EEA               	movlw	-22
 10015  003A64  32E3               	rrcf	plusw1,f,c
 10016  003A66  0EE9               	movlw	-23
 10017  003A68  32E3               	rrcf	plusw1,f,c
 10018  003A6A  0EE8               	movlw	-24
 10019  003A6C  32E3               	rrcf	plusw1,f,c
 10020  003A6E  0EE7               	movlw	-25
 10021  003A70  32E3               	rrcf	plusw1,f,c
 10022  003A72  0EE6               	movlw	-26
 10023  003A74  32E3               	rrcf	plusw1,f,c
 10024                           
 10025                           ;stkvar	_counter @ sp[(-10)+9]
 10026  003A76  0EFF               	movlw	-1
 10027  003A78  50E3               	movf	plusw1,w,c
 10028  003A7A  6E3D               	movwf	btemp,c
 10029  003A7C  0E01               	movlw	1
 10030  003A7E  5E3D               	subwf	btemp,f,c
 10031  003A80  0EFF               	movlw	-1
 10032  003A82  0060  F0F7  FFE3   	movff	btemp,plusw1
 10033  003A88  A4D8               	btfss	status,2,c
 10034  003A8A  D791               	goto	u2320
 10035  003A8C                     u2340:
 10036                           
 10037                           ;stkvar	_sign @ sp[(-10)+8]
 10038  003A8C  0EFE               	movlw	-2
 10039  003A8E  50E3               	movf	plusw1,w,c
 10040  003A90  B4D8               	btfsc	status,2,c
 10041  003A92  D025               	goto	u2360
 10042                           
 10043                           ;stkvar	_quotient @ sp[(-10)+0]
 10044                           ;stkvar	_quotient @ sp[(-10)+0]
 10045  003A94  0EF6               	movlw	-10
 10046  003A96  6CE3               	negf	plusw1,c
 10047  003A98  0EF7               	movlw	-9
 10048  003A9A  1EE3               	comf	plusw1,f,c
 10049  003A9C  0EF8               	movlw	-8
 10050  003A9E  1EE3               	comf	plusw1,f,c
 10051  003AA0  0EF9               	movlw	-7
 10052  003AA2  1EE3               	comf	plusw1,f,c
 10053  003AA4  0EFA               	movlw	-6
 10054  003AA6  1EE3               	comf	plusw1,f,c
 10055  003AA8  0EFB               	movlw	-5
 10056  003AAA  1EE3               	comf	plusw1,f,c
 10057  003AAC  0EFC               	movlw	-4
 10058  003AAE  1EE3               	comf	plusw1,f,c
 10059  003AB0  0EFD               	movlw	-3
 10060  003AB2  1EE3               	comf	plusw1,f,c
 10061  003AB4  E314               	bnc	u2360
 10062  003AB6  0EF7               	movlw	-9
 10063  003AB8  2AE3               	incf	plusw1,f,c
 10064  003ABA  E311               	bnc	u2360
 10065  003ABC  0EF8               	movlw	-8
 10066  003ABE  2AE3               	incf	plusw1,f,c
 10067  003AC0  E30E               	bnc	u2360
 10068  003AC2  0EF9               	movlw	-7
 10069  003AC4  2AE3               	incf	plusw1,f,c
 10070  003AC6  E30B               	bnc	u2360
 10071  003AC8  0EFA               	movlw	-6
 10072  003ACA  2AE3               	incf	plusw1,f,c
 10073  003ACC  E308               	bnc	u2360
 10074  003ACE  0EFB               	movlw	-5
 10075  003AD0  2AE3               	incf	plusw1,f,c
 10076  003AD2  E305               	bnc	u2360
 10077  003AD4  0EFC               	movlw	-4
 10078  003AD6  2AE3               	incf	plusw1,f,c
 10079  003AD8  E302               	bnc	u2360
 10080  003ADA  0EFD               	movlw	-3
 10081  003ADC  2AE3               	incf	plusw1,f,c
 10082  003ADE                     u2360:
 10083                           
 10084                           ;stkvar	_quotient @ sp[(-10)+0]
 10085  003ADE  0EF6               	movlw	246
 10086  003AE0  24E1               	addwf	fsr1l,w,c
 10087  003AE2  6ED9               	movwf	fsr2l,c
 10088  003AE4  0EFF               	movlw	255
 10089  003AE6  20E2               	addwfc	fsr1h,w,c
 10090  003AE8  6EDA               	movwf	fsr2h,c
 10091                           
 10092                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 10093  003AEA  0E08               	movlw	8
 10094  003AEC  6E3D               	movwf	btemp,c
 10095  003AEE  0EEE               	movlw	-18
 10096  003AF0                     us237999:
 10097  003AF0  006F FF7B FFE3     	movff	postinc2,plusw1
 10098  003AF6  28E8               	incf	wreg,w,c
 10099  003AF8  2E3D               	decfsz	btemp,f,c
 10100  003AFA  D7FA               	bra	us237999
 10101                           
 10102                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 10103  003AFC  0EF6               	movlw	246
 10104  003AFE  26E1               	addwf	fsr1l,f,c
 10105  003B00  0EFF               	movlw	255
 10106  003B02  22E2               	addwfc	fsr1h,f,c
 10107  003B04  0012               	return		;funcret
 10108  003B06                     __end_of___aodiv:
 10109                           	opt callstack 0
 10110                           
 10111 ;; *************** function _ctoa *****************
 10112 ;; Defined at:
 10113 ;;		line 259 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 10114 ;; Parameters:    Size  Location     Type
 10115 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10116 ;;		 -> f(5), NULL(0), 
 10117 ;;  c               1  [STACK] unsigned char 
 10118 ;; Auto vars:     Size  Location     Type
 10119 ;;  w               2  [STACK] int 
 10120 ;;  l               2    0        int 
 10121 ;; Return value:  Size  Location     Type
 10122 ;;                  2  [STACK] int 
 10123 ;; Registers used:
 10124 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, prodl
 10125 ;; Tracked objects:
 10126 ;;		On entry : 0/1
 10127 ;;		On exit  : 0/0
 10128 ;;		Unchanged: 0/0
 10129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10134 ;;Total ram usage:        0 bytes
 10135 ;; Hardware stack levels used:    1
 10136 ;; Hardware stack levels required when called:    8
 10137 ;; This function calls:
 10138 ;;		_pad
 10139 ;; This function is called by:
 10140 ;;		_vfpfcnvrt
 10141 ;; This function uses a reentrant model
 10142 ;;
 10143                           
 10144                           	psect	text44
 10145  005068                     __ptext44:
 10146                           	opt callstack 0
 10147  005068                     _ctoa:
 10148                           	opt callstack 0
 10149                           
 10150                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10151  005068  52E6               	movf	postinc1,f,c
 10152  00506A  52E6               	movf	postinc1,f,c
 10153                           
 10154                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.05
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 10155                           
 10156                           ;incstack = 0
 10157  00506C  5024               	movf	_width,w,c
 10158  00506E  1025               	iorwf	_width+1,w,c
 10159  005070  A4D8               	btfss	status,2,c
 10160  005072  D009               	goto	l7080
 10161                           
 10162                           ;stkvar	_w @ sp[(-2)+0]
 10163  005074  0EFE               	movlw	-2
 10164  005076  0060  F093  FFE3   	movff	_width,plusw1
 10165  00507C  0EFF               	movlw	-1
 10166  00507E  0060  F097  FFE3   	movff	_width+1,plusw1
 10167  005084  D016               	goto	l7082
 10168  005086                     l7080:
 10169  005086  0EFF               	movlw	255
 10170  005088  6E47               	movwf	btemp+10,c
 10171  00508A  0EFF               	movlw	255
 10172  00508C  6E48               	movwf	btemp+11,c
 10173  00508E  0060  F090  F045   	movff	_width,btemp+8
 10174  005094  0060  F094  F046   	movff	_width+1,btemp+9
 10175  00509A  5047               	movf	btemp+10,w,c
 10176  00509C  2645               	addwf	btemp+8,f,c
 10177  00509E  5048               	movf	btemp+11,w,c
 10178  0050A0  2246               	addwfc	btemp+9,f,c
 10179                           
 10180                           ;stkvar	_w @ sp[(-2)+0]
 10181  0050A2  0EFE               	movlw	-2
 10182  0050A4  0060  F117  FFE3   	movff	btemp+8,plusw1
 10183  0050AA  0EFF               	movlw	-1
 10184  0050AC  0060  F11B  FFE3   	movff	btemp+9,plusw1
 10185  0050B2                     l7082:
 10186                           
 10187                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 10188                           ;stkvar	_c @ sp[(-2)+-3]
 10189  0050B2  0EFB               	movlw	-5
 10190  0050B4  006F FF8C  F0D9    	movff	plusw1,_dbuf
 10191                           
 10192                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 10193  0050BA  0100               	movlb	0	; () banked
 10194  0050BC  6BDA               	clrf	(_dbuf+1)& (0+255),b
 10195                           
 10196                           ; BSR set to: 0
 10197                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 10198                           ;stkvar	_w @ sp[(-2)+0]
 10199  0050BE  0EFE               	movlw	-2
 10200  0050C0  006F FF8F FFE6     	movff	plusw1,postinc1
 10201  0050C6  006F FF8F FFE6     	movff	plusw1,postinc1
 10202  0050CC  0ED9               	movlw	_dbuf& (0+255)
 10203  0050CE  6EE6               	movwf	postinc1,c
 10204                           
 10205                           ;stkvar	_fp @ sp[(-5)+-2]
 10206  0050D0  0EF9               	movlw	-7
 10207  0050D2  006F FF8F FFE6     	movff	plusw1,postinc1
 10208  0050D8  006F FF8F FFE6     	movff	plusw1,postinc1
 10209  0050DE  ECF3  F023         	call	_pad	;wreg free
 10210                           
 10211                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 10212  0050E2  0EFB               	movlw	251
 10213  0050E4  26E1               	addwf	fsr1l,f,c
 10214  0050E6  0EFF               	movlw	255
 10215  0050E8  22E2               	addwfc	fsr1h,f,c
 10216  0050EA  0012               	return		;funcret
 10217  0050EC                     __end_of_ctoa:
 10218                           	opt callstack 0
 10219                           
 10220 ;; *************** function _pad *****************
 10221 ;; Defined at:
 10222 ;;		line 72 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 10223 ;; Parameters:    Size  Location     Type
 10224 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10225 ;;		 -> f(5), NULL(0), 
 10226 ;;  buf             1  [STACK] PTR unsigned char 
 10227 ;;		 -> dbuf(32), 
 10228 ;;  p               2  [STACK] int 
 10229 ;; Auto vars:     Size  Location     Type
 10230 ;;  w               2  [STACK] int 
 10231 ;;  i               2  [STACK] int 
 10232 ;; Return value:  Size  Location     Type
 10233 ;;                  2  [STACK] int 
 10234 ;; Registers used:
 10235 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, prodl
 10236 ;; Tracked objects:
 10237 ;;		On entry : 0/0
 10238 ;;		On exit  : 0/0
 10239 ;;		Unchanged: 0/0
 10240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10244 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10245 ;;Total ram usage:        0 bytes
 10246 ;; Hardware stack levels used:    1
 10247 ;; Hardware stack levels required when called:    7
 10248 ;; This function calls:
 10249 ;;		_fputc
 10250 ;;		_fputs
 10251 ;;		_strlen
 10252 ;; This function is called by:
 10253 ;;		_ctoa
 10254 ;;		_dtoa
 10255 ;;		_xtoa
 10256 ;; This function uses a reentrant model
 10257 ;;
 10258                           
 10259                           	psect	text45
 10260  0047E6                     __ptext45:
 10261                           	opt callstack 0
 10262  0047E6                     _pad:
 10263                           	opt callstack 0
 10264                           
 10265                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10266  0047E6  52E6               	movf	postinc1,f,c
 10267  0047E8  52E6               	movf	postinc1,f,c
 10268  0047EA  52E6               	movf	postinc1,f,c
 10269  0047EC  52E6               	movf	postinc1,f,c
 10270                           
 10271                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 10272                           
 10273                           ;incstack = 0
 10274  0047EE  A028               	btfss	_flags,0,c
 10275  0047F0  D00C               	goto	l7058
 10276                           
 10277                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 10278                           ;stkvar	_fp @ sp[(-4)+-2]
 10279  0047F2  0EFA               	movlw	-6
 10280  0047F4  006F FF8F FFE6     	movff	plusw1,postinc1
 10281  0047FA  006F FF8F FFE6     	movff	plusw1,postinc1
 10282                           
 10283                           ;stkvar	_buf @ sp[(-6)+-3]
 10284  004800  0EF7               	movlw	-9
 10285  004802  50E3               	movf	plusw1,w,c
 10286  004804  6EE6               	movwf	postinc1,c
 10287  004806  ECB8  F028         	call	_fputs	;wreg free
 10288  00480A                     l7058:
 10289                           
 10290                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 10291                           ;stkvar	_p @ sp[(-4)+-5]
 10292  00480A  0EF8               	movlw	-8
 10293  00480C  BEE3               	btfsc	plusw1,7,c
 10294  00480E  D011               	goto	l7062
 10295                           
 10296                           ;stkvar	_p @ sp[(-4)+-5]
 10297                           ;stkvar	_w @ sp[(-4)+0]
 10298  004810  0EF7               	movlw	-9
 10299  004812  006F FF8C  F03D    	movff	plusw1,btemp
 10300  004818  0EFC               	movlw	-4
 10301  00481A  0060  F0F7  FFE3   	movff	btemp,plusw1
 10302  004820  0EF8               	movlw	-8
 10303  004822  006F FF8C  F03D    	movff	plusw1,btemp
 10304  004828  0EFD               	movlw	-3
 10305  00482A  0060  F0F7  FFE3   	movff	btemp,plusw1
 10306  004830  D004               	goto	l1655
 10307  004832                     l7062:
 10308                           
 10309                           ;stkvar	_w @ sp[(-4)+0]
 10310  004832  0EFC               	movlw	-4
 10311  004834  6AE3               	clrf	plusw1,c
 10312  004836  0EFD               	movlw	-3
 10313  004838  6AE3               	clrf	plusw1,c
 10314  00483A                     l1655:
 10315                           
 10316                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 10317                           ;stkvar	_i @ sp[(-4)+2]
 10318  00483A  0EFE               	movlw	-2
 10319  00483C  6AE3               	clrf	plusw1,c
 10320  00483E  0EFF               	movlw	-1
 10321  004840  6AE3               	clrf	plusw1,c
 10322                           
 10323                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 10324  004842  D01E               	goto	l7068
 10325  004844                     l7064:
 10326                           
 10327                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 10328                           ;stkvar	_fp @ sp[(-4)+-2]
 10329  004844  0EFA               	movlw	-6
 10330  004846  006F FF8F FFE6     	movff	plusw1,postinc1
 10331  00484C  006F FF8F FFE6     	movff	plusw1,postinc1
 10332  004852  0E20               	movlw	32
 10333  004854  6EE6               	movwf	postinc1,c
 10334  004856  0E00               	movlw	0
 10335  004858  6EE6               	movwf	postinc1,c
 10336  00485A  EC6D  F023         	call	_fputc	;wreg free
 10337                           
 10338                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
 10339                           ;stkvar	_i @ sp[(-4)+2]
 10340  00485E  0EFE               	movlw	-2
 10341  004860  50E3               	movf	plusw1,w,c
 10342  004862  0F01               	addlw	1
 10343  004864  6E3D               	movwf	btemp,c
 10344  004866  0EFE               	movlw	-2
 10345  004868  0060  F0F7  FFE3   	movff	btemp,plusw1
 10346  00486E  6A3D               	clrf	btemp,c
 10347  004870  0EFF               	movlw	-1
 10348  004872  50E3               	movf	plusw1,w,c
 10349  004874  203D               	addwfc	btemp,w,c
 10350  004876  6E3D               	movwf	btemp,c
 10351  004878  0EFF               	movlw	-1
 10352  00487A  0060  F0F7  FFE3   	movff	btemp,plusw1
 10353  004880                     l7068:
 10354                           
 10355                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 10356                           ;stkvar	_w @ sp[(-4)+0]
 10357                           ;stkvar	_i @ sp[(-4)+2]
 10358  004880  50E1               	movf	fsr1l,w,c
 10359  004882  0FFE               	addlw	-2
 10360  004884  6ED9               	movwf	fsr2l,c
 10361  004886  50E2               	movf	fsr1h,w,c
 10362  004888  6EDA               	movwf	fsr2h,c
 10363  00488A  0EFF               	movlw	255
 10364  00488C  22DA               	addwfc	fsr2h,f,c
 10365  00488E  0EFC               	movlw	-4
 10366  004890  50E3               	movf	plusw1,w,c
 10367  004892  5CDE               	subwf	postinc2,w,c
 10368  004894  50DE               	movf	postinc2,w,c
 10369  004896  0A80               	xorlw	128
 10370  004898  6E3D               	movwf	btemp,c
 10371  00489A  0EFD               	movlw	-3
 10372  00489C  50E3               	movf	plusw1,w,c
 10373  00489E  0A80               	xorlw	128
 10374  0048A0  583D               	subwfb	btemp,w,c
 10375  0048A2  A0D8               	btfss	status,0,c
 10376  0048A4  D7CF               	goto	l7064
 10377                           
 10378                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 10379  0048A6  B028               	btfsc	_flags,0,c
 10380  0048A8  D00C               	goto	l7072
 10381                           
 10382                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 10383                           ;stkvar	_fp @ sp[(-4)+-2]
 10384  0048AA  0EFA               	movlw	-6
 10385  0048AC  006F FF8F FFE6     	movff	plusw1,postinc1
 10386  0048B2  006F FF8F FFE6     	movff	plusw1,postinc1
 10387                           
 10388                           ;stkvar	_buf @ sp[(-6)+-3]
 10389  0048B8  0EF7               	movlw	-9
 10390  0048BA  50E3               	movf	plusw1,w,c
 10391  0048BC  6EE6               	movwf	postinc1,c
 10392  0048BE  ECB8  F028         	call	_fputs	;wreg free
 10393  0048C2                     l7072:
 10394                           
 10395                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 10396                           ;stkvar	_w @ sp[(-4)+0]
 10397                           ;stkvar	_buf @ sp[(-4)+-3]
 10398  0048C2  0EF9               	movlw	-7
 10399  0048C4  006F FF8C  F048    	movff	plusw1,btemp+11
 10400  0048CA  0060  F123  FFE6   	movff	btemp+11,postinc1
 10401  0048D0  0E00               	movlw	0
 10402  0048D2  6EE6               	movwf	postinc1,c
 10403  0048D4  EC76  F028         	call	_strlen	;wreg free
 10404  0048D8  0EFC               	movlw	-4
 10405  0048DA  50E3               	movf	plusw1,w,c
 10406  0048DC  263D               	addwf	btemp,f,c
 10407  0048DE  0EFD               	movlw	-3
 10408  0048E0  50E3               	movf	plusw1,w,c
 10409  0048E2  223E               	addwfc	btemp+1,f,c
 10410                           
 10411                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize =
      +                           5, vargsize = 0
 10412  0048E4  0EF7               	movlw	247
 10413  0048E6  26E1               	addwf	fsr1l,f,c
 10414  0048E8  0EFF               	movlw	255
 10415  0048EA  22E2               	addwfc	fsr1h,f,c
 10416  0048EC  0012               	return		;funcret
 10417  0048EE                     __end_of_pad:
 10418                           	opt callstack 0
 10419                           
 10420 ;; *************** function _strlen *****************
 10421 ;; Defined at:
 10422 ;;		line 12 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
 10423 ;; Parameters:    Size  Location     Type
 10424 ;;  s               2  [STACK] PTR const unsigned char 
 10425 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(32), 
 10426 ;;		 -> V(80), 
 10427 ;; Auto vars:     Size  Location     Type
 10428 ;;  a               2  [STACK] PTR const unsigned char 
 10429 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(32), 
 10430 ;;		 -> V(80), 
 10431 ;; Return value:  Size  Location     Type
 10432 ;;                  2  [STACK] unsigned int 
 10433 ;; Registers used:
 10434 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 10435 ;; Tracked objects:
 10436 ;;		On entry : 0/0
 10437 ;;		On exit  : 0/0
 10438 ;;		Unchanged: 0/0
 10439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10443 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10444 ;;Total ram usage:        0 bytes
 10445 ;; Hardware stack levels used:    1
 10446 ;; Hardware stack levels required when called:    3
 10447 ;; This function calls:
 10448 ;;		Nothing
 10449 ;; This function is called by:
 10450 ;;		_eaDogM_WriteString
 10451 ;;		_pad
 10452 ;;		_stoa
 10453 ;; This function uses a reentrant model
 10454 ;;
 10455                           
 10456                           	psect	text46
 10457  0050EC                     __ptext46:
 10458                           	opt callstack 0
 10459  0050EC                     _strlen:
 10460                           	opt callstack 0
 10461                           
 10462                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10463  0050EC  52E6               	movf	postinc1,f,c
 10464  0050EE  52E6               	movf	postinc1,f,c
 10465                           
 10466                           ;stkvar	_s @ sp[(-2)+-2]
 10467                           
 10468                           ;incstack = 0
 10469  0050F0  0EFC               	movlw	-4
 10470  0050F2  006F FF8C  F047    	movff	plusw1,btemp+10
 10471  0050F8  0EFD               	movlw	-3
 10472  0050FA  006F FF8C  F048    	movff	plusw1,btemp+11
 10473                           
 10474                           ;stkvar	_a @ sp[(-2)+0]
 10475  005100  0EFF               	movlw	-1
 10476  005102  0060  F123  FFE3   	movff	btemp+11,plusw1
 10477  005108  0EFE               	movlw	-2
 10478  00510A  0060  F11F  FFE3   	movff	btemp+10,plusw1
 10479  005110  D011               	goto	l4898
 10480  005112                     l4896:
 10481                           
 10482                           ;stkvar	_s @ sp[(-2)+-2]
 10483  005112  0EFC               	movlw	-4
 10484  005114  50E3               	movf	plusw1,w,c
 10485  005116  0F01               	addlw	1
 10486  005118  6E3D               	movwf	btemp,c
 10487  00511A  0EFC               	movlw	-4
 10488  00511C  0060  F0F7  FFE3   	movff	btemp,plusw1
 10489  005122  6A3D               	clrf	btemp,c
 10490  005124  0EFD               	movlw	-3
 10491  005126  50E3               	movf	plusw1,w,c
 10492  005128  203D               	addwfc	btemp,w,c
 10493  00512A  6E3D               	movwf	btemp,c
 10494  00512C  0EFD               	movlw	-3
 10495  00512E  0060  F0F7  FFE3   	movff	btemp,plusw1
 10496  005134                     l4898:
 10497                           
 10498                           ;stkvar	_s @ sp[(-2)+-2]
 10499  005134  0EFC               	movlw	-4
 10500  005136  006F FF8F FFD9     	movff	plusw1,fsr2l
 10501  00513C  0EFD               	movlw	-3
 10502  00513E  006F FF8F FFDA     	movff	plusw1,fsr2h
 10503  005144  50DF               	movf	indf2,w,c
 10504  005146  A4D8               	btfss	status,2,c
 10505  005148  D7E4               	goto	l4896
 10506                           
 10507                           ;stkvar	_a @ sp[(-2)+0]
 10508                           ;stkvar	_s @ sp[(-2)+-2]
 10509  00514A  0EFC               	movlw	-4
 10510  00514C  006F FF8C  F03D    	movff	plusw1,btemp
 10511  005152  0EFD               	movlw	-3
 10512  005154  006F FF8C  F03E    	movff	plusw1,btemp+1
 10513  00515A  0EFE               	movlw	-2
 10514  00515C  50E3               	movf	plusw1,w,c
 10515  00515E  5E3D               	subwf	btemp,f,c
 10516  005160  0EFF               	movlw	-1
 10517  005162  50E3               	movf	plusw1,w,c
 10518  005164  5A3E               	subwfb	btemp+1,f,c
 10519                           
 10520                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 10521  005166  52E5               	movf	postdec1,f,c
 10522  005168  52E5               	movf	postdec1,f,c
 10523  00516A  52E5               	movf	postdec1,f,c
 10524  00516C  52E5               	movf	postdec1,f,c
 10525  00516E  0012               	return		;funcret
 10526  005170                     __end_of_strlen:
 10527                           	opt callstack 0
 10528                           
 10529 ;; *************** function _fputs *****************
 10530 ;; Defined at:
 10531 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
 10532 ;; Parameters:    Size  Location     Type
 10533 ;;  s               1  [STACK] PTR const unsigned char 
 10534 ;;		 -> dbuf(32), 
 10535 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10536 ;;		 -> f(5), NULL(0), 
 10537 ;; Auto vars:     Size  Location     Type
 10538 ;;  i               2  [STACK] int 
 10539 ;;  c               1  [STACK] unsigned char 
 10540 ;; Return value:  Size  Location     Type
 10541 ;;                  2  [STACK] int 
 10542 ;; Registers used:
 10543 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 10544 ;; Tracked objects:
 10545 ;;		On entry : 0/0
 10546 ;;		On exit  : 0/0
 10547 ;;		Unchanged: 0/0
 10548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10552 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10553 ;;Total ram usage:        0 bytes
 10554 ;; Hardware stack levels used:    1
 10555 ;; Hardware stack levels required when called:    6
 10556 ;; This function calls:
 10557 ;;		_fputc
 10558 ;; This function is called by:
 10559 ;;		_pad
 10560 ;; This function uses a reentrant model
 10561 ;;
 10562                           
 10563                           	psect	text47
 10564  005170                     __ptext47:
 10565                           	opt callstack 0
 10566  005170                     _fputs:
 10567                           	opt callstack 0
 10568                           
 10569                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10570  005170  52E6               	movf	postinc1,f,c
 10571  005172  52E6               	movf	postinc1,f,c
 10572  005174  52E6               	movf	postinc1,f,c
 10573                           
 10574                           ;stkvar	_i @ sp[(-3)+0]
 10575                           
 10576                           ;incstack = 0
 10577  005176  0EFD               	movlw	-3
 10578  005178  6AE3               	clrf	plusw1,c
 10579  00517A  0EFE               	movlw	-2
 10580  00517C  6AE3               	clrf	plusw1,c
 10581  00517E  D01F               	goto	l7052
 10582  005180                     l7048:
 10583                           
 10584                           ;stkvar	_fp @ sp[(-3)+-3]
 10585  005180  0EFA               	movlw	-6
 10586  005182  006F FF8F FFE6     	movff	plusw1,postinc1
 10587  005188  006F FF8F FFE6     	movff	plusw1,postinc1
 10588                           
 10589                           ;stkvar	_c @ sp[(-5)+2]
 10590  00518E  0EFD               	movlw	-3
 10591  005190  50E3               	movf	plusw1,w,c
 10592  005192  6EE6               	movwf	postinc1,c
 10593  005194  0E00               	movlw	0
 10594  005196  6EE6               	movwf	postinc1,c
 10595  005198  EC6D  F023         	call	_fputc	;wreg free
 10596                           
 10597                           ;stkvar	_i @ sp[(-3)+0]
 10598  00519C  0EFD               	movlw	-3
 10599  00519E  50E3               	movf	plusw1,w,c
 10600  0051A0  0F01               	addlw	1
 10601  0051A2  6E3D               	movwf	btemp,c
 10602  0051A4  0EFD               	movlw	-3
 10603  0051A6  0060  F0F7  FFE3   	movff	btemp,plusw1
 10604  0051AC  6A3D               	clrf	btemp,c
 10605  0051AE  0EFE               	movlw	-2
 10606  0051B0  50E3               	movf	plusw1,w,c
 10607  0051B2  203D               	addwfc	btemp,w,c
 10608  0051B4  6E3D               	movwf	btemp,c
 10609  0051B6  0EFE               	movlw	-2
 10610  0051B8  0060  F0F7  FFE3   	movff	btemp,plusw1
 10611  0051BE                     l7052:
 10612                           
 10613                           ;stkvar	_i @ sp[(-3)+0]
 10614  0051BE  0EFD               	movlw	-3
 10615  0051C0  006F FF8C  F048    	movff	plusw1,btemp+11
 10616                           
 10617                           ;stkvar	_s @ sp[(-3)+-1]
 10618  0051C6  0EFC               	movlw	-4
 10619  0051C8  50E3               	movf	plusw1,w,c
 10620  0051CA  2448               	addwf	btemp+11,w,c
 10621  0051CC  6ED9               	movwf	fsr2l,c
 10622  0051CE  6ADA               	clrf	fsr2h,c
 10623  0051D0  50DF               	movf	indf2,w,c
 10624  0051D2  6E48               	movwf	btemp+11,c
 10625                           
 10626                           ;stkvar	_c @ sp[(-3)+2]
 10627  0051D4  0EFF               	movlw	-1
 10628  0051D6  0060  F123  FFE3   	movff	btemp+11,plusw1
 10629  0051DC  0EFF               	movlw	-1
 10630  0051DE  50E3               	movf	plusw1,w,c
 10631  0051E0  A4D8               	btfss	status,2,c
 10632  0051E2  D7CE               	goto	l7048
 10633                           
 10634                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize
      +                           = 3, vargsize = 0
 10635  0051E4  0EFA               	movlw	250
 10636  0051E6  26E1               	addwf	fsr1l,f,c
 10637  0051E8  0EFF               	movlw	255
 10638  0051EA  22E2               	addwfc	fsr1h,f,c
 10639  0051EC  0012               	return		;funcret
 10640  0051EE                     __end_of_fputs:
 10641                           	opt callstack 0
 10642                           
 10643 ;; *************** function _fputc *****************
 10644 ;; Defined at:
 10645 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
 10646 ;; Parameters:    Size  Location     Type
 10647 ;;  c               2  [STACK] int 
 10648 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10649 ;;		 -> f(5), NULL(0), 
 10650 ;; Auto vars:     Size  Location     Type
 10651 ;;		None
 10652 ;; Return value:  Size  Location     Type
 10653 ;;                  2  [STACK] int 
 10654 ;; Registers used:
 10655 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 10656 ;; Tracked objects:
 10657 ;;		On entry : 0/1
 10658 ;;		On exit  : 0/0
 10659 ;;		Unchanged: 0/0
 10660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10665 ;;Total ram usage:        0 bytes
 10666 ;; Hardware stack levels used:    1
 10667 ;; Hardware stack levels required when called:    5
 10668 ;; This function calls:
 10669 ;;		_putch
 10670 ;; This function is called by:
 10671 ;;		_pad
 10672 ;;		_stoa
 10673 ;;		_vfpfcnvrt
 10674 ;;		_fputs
 10675 ;; This function uses a reentrant model
 10676 ;;
 10677                           
 10678                           	psect	text48
 10679  0046DA                     __ptext48:
 10680                           	opt callstack 0
 10681  0046DA                     _fputc:
 10682                           	opt callstack 19
 10683                           
 10684                           ;stkvar	_fp @ sp[(0)+-4]
 10685                           
 10686                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10687                           ;incstack = 0
 10688  0046DA  0EFC               	movlw	-4
 10689  0046DC  006F FF8C  F03D    	movff	plusw1,btemp
 10690  0046E2  0EFD               	movlw	-3
 10691  0046E4  50E3               	movf	plusw1,w,c
 10692  0046E6  103D               	iorwf	btemp,w,c
 10693  0046E8  B4D8               	btfsc	status,2,c
 10694  0046EA  D009               	goto	u3940
 10695                           
 10696                           ;stkvar	_fp @ sp[(0)+-4]
 10697  0046EC  0EFC               	movlw	-4
 10698  0046EE  006F FF8C  F03D    	movff	plusw1,btemp
 10699  0046F4  0EFD               	movlw	-3
 10700  0046F6  50E3               	movf	plusw1,w,c
 10701  0046F8  103D               	iorwf	btemp,w,c
 10702  0046FA  A4D8               	btfss	status,2,c
 10703  0046FC  D006               	goto	l7038
 10704  0046FE                     u3940:
 10705                           
 10706                           ;stkvar	_c @ sp[(0)+-2]
 10707  0046FE  0EFE               	movlw	-2
 10708  004700  50E3               	movf	plusw1,w,c
 10709  004702  6EE6               	movwf	postinc1,c
 10710  004704  EC51  F02F         	call	_putch	;wreg free
 10711  004708  D069               	goto	l2547
 10712  00470A                     l7038:
 10713                           
 10714                           ;stkvar	_fp @ sp[(0)+-4]
 10715  00470A  0EFC               	movlw	-4
 10716  00470C  006F FF8C  F047    	movff	plusw1,btemp+10
 10717  004712  0EFD               	movlw	-3
 10718  004714  006F FF8C  F048    	movff	plusw1,btemp+11
 10719  00471A  0E03               	movlw	3
 10720  00471C  2447               	addwf	btemp+10,w,c
 10721  00471E  6ED9               	movwf	fsr2l,c
 10722  004720  0E00               	movlw	0
 10723  004722  2048               	addwfc	btemp+11,w,c
 10724  004724  6EDA               	movwf	fsr2h,c
 10725  004726  50DE               	movf	postinc2,w,c
 10726  004728  10DE               	iorwf	postinc2,w,c
 10727  00472A  B4D8               	btfsc	status,2,c
 10728  00472C  D026               	goto	u3960
 10729                           
 10730                           ;stkvar	_fp @ sp[(0)+-4]
 10731  00472E  0EFC               	movlw	-4
 10732  004730  006F FF8C  F047    	movff	plusw1,btemp+10
 10733  004736  0EFD               	movlw	-3
 10734  004738  006F FF8C  F048    	movff	plusw1,btemp+11
 10735  00473E  0E03               	movlw	3
 10736  004740  2447               	addwf	btemp+10,w,c
 10737  004742  6ED9               	movwf	fsr2l,c
 10738  004744  0E00               	movlw	0
 10739  004746  2048               	addwfc	btemp+11,w,c
 10740  004748  6EDA               	movwf	fsr2h,c
 10741                           
 10742                           ;stkvar	_fp @ sp[(0)+-4]
 10743  00474A  0EFC               	movlw	-4
 10744  00474C  006F FF8C  F047    	movff	plusw1,btemp+10
 10745  004752  0EFD               	movlw	-3
 10746  004754  006F FF8C  F048    	movff	plusw1,btemp+11
 10747  00475A  0E01               	movlw	1
 10748  00475C  2447               	addwf	btemp+10,w,c
 10749  00475E  6EE9               	movwf	fsr0l,c
 10750  004760  0E00               	movlw	0
 10751  004762  2048               	addwfc	btemp+11,w,c
 10752  004764  6EEA               	movwf	fsr0h,c
 10753  004766  50DE               	movf	postinc2,w,c
 10754  004768  5CEE               	subwf	postinc0,w,c
 10755  00476A  50EE               	movf	postinc0,w,c
 10756  00476C  0A80               	xorlw	128
 10757  00476E  6E3D               	movwf	btemp,c
 10758  004770  50DE               	movf	postinc2,w,c
 10759  004772  0A80               	xorlw	128
 10760  004774  583D               	subwfb	btemp,w,c
 10761  004776  B0D8               	btfsc	status,0,c
 10762  004778  D031               	goto	l2547
 10763  00477A                     u3960:
 10764                           
 10765                           ;stkvar	_c @ sp[(0)+-2]
 10766                           ;stkvar	_fp @ sp[(0)+-4]
 10767  00477A  0EFC               	movlw	-4
 10768  00477C  006F FF8C  F047    	movff	plusw1,btemp+10
 10769  004782  0EFD               	movlw	-3
 10770  004784  006F FF8C  F048    	movff	plusw1,btemp+11
 10771  00478A  0E01               	movlw	1
 10772  00478C  2447               	addwf	btemp+10,w,c
 10773  00478E  6ED9               	movwf	fsr2l,c
 10774  004790  0E00               	movlw	0
 10775  004792  2048               	addwfc	btemp+11,w,c
 10776  004794  6EDA               	movwf	fsr2h,c
 10777  004796  50DF               	movf	indf2,w,c
 10778  004798  6E48               	movwf	btemp+11,c
 10779                           
 10780                           ;stkvar	_fp @ sp[(0)+-4]
 10781  00479A  0EFC               	movlw	-4
 10782  00479C  006F FF8F FFD9     	movff	plusw1,fsr2l
 10783  0047A2  0EFD               	movlw	-3
 10784  0047A4  006F FF8F FFDA     	movff	plusw1,fsr2h
 10785  0047AA  50DF               	movf	indf2,w,c
 10786  0047AC  2448               	addwf	btemp+11,w,c
 10787  0047AE  6ED9               	movwf	fsr2l,c
 10788  0047B0  6ADA               	clrf	fsr2h,c
 10789  0047B2  0EFE               	movlw	-2
 10790  0047B4  006F FF8F FFDF     	movff	plusw1,indf2
 10791                           
 10792                           ;stkvar	_fp @ sp[(0)+-4]
 10793  0047BA  0EFC               	movlw	-4
 10794  0047BC  006F FF8C  F047    	movff	plusw1,btemp+10
 10795  0047C2  0EFD               	movlw	-3
 10796  0047C4  006F FF8C  F048    	movff	plusw1,btemp+11
 10797  0047CA  0E01               	movlw	1
 10798  0047CC  2447               	addwf	btemp+10,w,c
 10799  0047CE  6ED9               	movwf	fsr2l,c
 10800  0047D0  0E00               	movlw	0
 10801  0047D2  2048               	addwfc	btemp+11,w,c
 10802  0047D4  6EDA               	movwf	fsr2h,c
 10803  0047D6  2ADE               	incf	postinc2,f,c
 10804  0047D8  0E00               	movlw	0
 10805  0047DA  22DD               	addwfc	postdec2,f,c
 10806  0047DC                     l2547:
 10807                           
 10808                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 10809  0047DC  52E5               	movf	postdec1,f,c
 10810  0047DE  52E5               	movf	postdec1,f,c
 10811  0047E0  52E5               	movf	postdec1,f,c
 10812  0047E2  52E5               	movf	postdec1,f,c
 10813  0047E4  0012               	return		;funcret
 10814  0047E6                     __end_of_fputc:
 10815                           	opt callstack 0
 10816                           
 10817 ;; *************** function _putch *****************
 10818 ;; Defined at:
 10819 ;;		line 138 in file "eadog.c"
 10820 ;; Parameters:    Size  Location     Type
 10821 ;;  c               1  [STACK] unsigned char 
 10822 ;; Auto vars:     Size  Location     Type
 10823 ;;		None
 10824 ;; Return value:  Size  Location     Type
 10825 ;;                  1  [STACK] void 
 10826 ;; Registers used:
 10827 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 10828 ;; Tracked objects:
 10829 ;;		On entry : 0/1
 10830 ;;		On exit  : 0/0
 10831 ;;		Unchanged: 0/0
 10832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10836 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10837 ;;Total ram usage:        0 bytes
 10838 ;; Hardware stack levels used:    1
 10839 ;; Hardware stack levels required when called:    4
 10840 ;; This function calls:
 10841 ;;		_ringBufS_put_dma
 10842 ;; This function is called by:
 10843 ;;		_fputc
 10844 ;; This function uses a reentrant model
 10845 ;;
 10846                           
 10847                           	psect	text49
 10848  005EA2                     __ptext49:
 10849                           	opt callstack 0
 10850  005EA2                     _putch:
 10851                           	opt callstack 19
 10852                           
 10853                           ;eadog.c: 138: void putch(char c);eadog.c: 139: {;eadog.c: 140:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 10854                           ;stkvar	_c @ sp[(0)+-1]
 10855                           
 10856                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10857                           ;incstack = 0
 10858  005EA2  0EFF               	movlw	-1
 10859  005EA4  50E3               	movf	plusw1,w,c
 10860  005EA6  6EE6               	movwf	postinc1,c
 10861  005EA8  0060  F1CF  FFE6   	movff	_spi_link+6,postinc1
 10862  005EAE  0060  F1D3  FFE6   	movff	_spi_link+7,postinc1
 10863  005EB4  EC69  F026         	call	_ringBufS_put_dma	;wreg free
 10864                           
 10865                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 10866  005EB8  52E5               	movf	postdec1,f,c
 10867  005EBA  0012               	return		;funcret
 10868  005EBC                     __end_of_putch:
 10869                           	opt callstack 0
 10870                           
 10871 ;; *************** function _ringBufS_put_dma *****************
 10872 ;; Defined at:
 10873 ;;		line 67 in file "ringbufs.c"
 10874 ;; Parameters:    Size  Location     Type
 10875 ;;  _this           2  [STACK] PTR struct ringBufS_t
 10876 ;;		 -> ring_buf1(67), 
 10877 ;;  c               1  [STACK] const unsigned char 
 10878 ;; Auto vars:     Size  Location     Type
 10879 ;;		None
 10880 ;; Return value:  Size  Location     Type
 10881 ;;                  1  [STACK] void 
 10882 ;; Registers used:
 10883 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 10884 ;; Tracked objects:
 10885 ;;		On entry : 0/1
 10886 ;;		On exit  : 0/0
 10887 ;;		Unchanged: 0/0
 10888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10893 ;;Total ram usage:        0 bytes
 10894 ;; Hardware stack levels used:    1
 10895 ;; Hardware stack levels required when called:    3
 10896 ;; This function calls:
 10897 ;;		Nothing
 10898 ;; This function is called by:
 10899 ;;		_putch
 10900 ;; This function uses a reentrant model
 10901 ;;
 10902                           
 10903                           	psect	text50
 10904  004CD2                     __ptext50:
 10905                           	opt callstack 0
 10906  004CD2                     _ringBufS_put_dma:
 10907                           	opt callstack 19
 10908                           
 10909                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 10910                           ;stkvar	__this @ sp[(0)+-2]
 10911                           
 10912                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10913                           ;incstack = 0
 10914  004CD2  0EFE               	movlw	-2
 10915  004CD4  006F FF8C  F047    	movff	plusw1,btemp+10
 10916  004CDA  0EFF               	movlw	-1
 10917  004CDC  006F FF8C  F048    	movff	plusw1,btemp+11
 10918  004CE2  0E42               	movlw	66
 10919  004CE4  2447               	addwf	btemp+10,w,c
 10920  004CE6  6ED9               	movwf	fsr2l,c
 10921  004CE8  0E00               	movlw	0
 10922  004CEA  2048               	addwfc	btemp+11,w,c
 10923  004CEC  6EDA               	movwf	fsr2h,c
 10924  004CEE  0E40               	movlw	64
 10925  004CF0  60DF               	cpfslt	indf2,c
 10926  004CF2  D040               	goto	l1441
 10927                           
 10928                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 10929                           ;stkvar	_c @ sp[(0)+-3]
 10930                           ;stkvar	__this @ sp[(0)+-2]
 10931  004CF4  0EFE               	movlw	-2
 10932  004CF6  006F FF8C  F047    	movff	plusw1,btemp+10
 10933  004CFC  0EFF               	movlw	-1
 10934  004CFE  006F FF8C  F048    	movff	plusw1,btemp+11
 10935  004D04  0E40               	movlw	64
 10936  004D06  2447               	addwf	btemp+10,w,c
 10937  004D08  6ED9               	movwf	fsr2l,c
 10938  004D0A  0E00               	movlw	0
 10939  004D0C  2048               	addwfc	btemp+11,w,c
 10940  004D0E  6EDA               	movwf	fsr2h,c
 10941  004D10  50DF               	movf	indf2,w,c
 10942  004D12  6E48               	movwf	btemp+11,c
 10943                           
 10944                           ;stkvar	__this @ sp[(0)+-2]
 10945  004D14  0EFE               	movlw	-2
 10946  004D16  006F FF8C  F045    	movff	plusw1,btemp+8
 10947  004D1C  0EFF               	movlw	-1
 10948  004D1E  006F FF8C  F046    	movff	plusw1,btemp+9
 10949  004D24  5048               	movf	btemp+11,w,c
 10950  004D26  2445               	addwf	btemp+8,w,c
 10951  004D28  6ED9               	movwf	fsr2l,c
 10952  004D2A  0E00               	movlw	0
 10953  004D2C  2046               	addwfc	btemp+9,w,c
 10954  004D2E  6EDA               	movwf	fsr2h,c
 10955  004D30  0EFD               	movlw	-3
 10956  004D32  006F FF8F FFDF     	movff	plusw1,indf2
 10957                           
 10958                           ;ringbufs.c: 71:   ++_this->head;
 10959                           ;stkvar	__this @ sp[(0)+-2]
 10960  004D38  0EFE               	movlw	-2
 10961  004D3A  006F FF8C  F047    	movff	plusw1,btemp+10
 10962  004D40  0EFF               	movlw	-1
 10963  004D42  006F FF8C  F048    	movff	plusw1,btemp+11
 10964  004D48  0E40               	movlw	64
 10965  004D4A  2447               	addwf	btemp+10,w,c
 10966  004D4C  6ED9               	movwf	fsr2l,c
 10967  004D4E  0E00               	movlw	0
 10968  004D50  2048               	addwfc	btemp+11,w,c
 10969  004D52  6EDA               	movwf	fsr2h,c
 10970  004D54  2ADF               	incf	indf2,f,c
 10971                           
 10972                           ;ringbufs.c: 72:   ++_this->count;
 10973                           ;stkvar	__this @ sp[(0)+-2]
 10974  004D56  0EFE               	movlw	-2
 10975  004D58  006F FF8C  F047    	movff	plusw1,btemp+10
 10976  004D5E  0EFF               	movlw	-1
 10977  004D60  006F FF8C  F048    	movff	plusw1,btemp+11
 10978  004D66  0E42               	movlw	66
 10979  004D68  2447               	addwf	btemp+10,w,c
 10980  004D6A  6ED9               	movwf	fsr2l,c
 10981  004D6C  0E00               	movlw	0
 10982  004D6E  2048               	addwfc	btemp+11,w,c
 10983  004D70  6EDA               	movwf	fsr2h,c
 10984  004D72  2ADF               	incf	indf2,f,c
 10985  004D74                     l1441:
 10986                           
 10987                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 10988  004D74  52E5               	movf	postdec1,f,c
 10989  004D76  52E5               	movf	postdec1,f,c
 10990  004D78  52E5               	movf	postdec1,f,c
 10991  004D7A  0012               	return		;funcret
 10992  004D7C                     __end_of_ringBufS_put_dma:
 10993                           	opt callstack 0
 10994                           
 10995 ;; *************** function _atoi *****************
 10996 ;; Defined at:
 10997 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/atoi.c"
 10998 ;; Parameters:    Size  Location     Type
 10999 ;;  s               1  [STACK] PTR const unsigned char 
 11000 ;;		 -> STR_12(3), STR_11(3), STR_10(3), STR_9(21), 
 11001 ;;		 -> STR_8(17), STR_7(17), STR_6(17), STR_5(23), 
 11002 ;;		 -> STR_4(6), STR_3(14), STR_2(12), STR_1(61), 
 11003 ;; Auto vars:     Size  Location     Type
 11004 ;;  n               2  [STACK] int 
 11005 ;;  neg             2  [STACK] int 
 11006 ;; Return value:  Size  Location     Type
 11007 ;;                  2  [STACK] int 
 11008 ;; Registers used:
 11009 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 11010 ;; Tracked objects:
 11011 ;;		On entry : 0/1
 11012 ;;		On exit  : 0/0
 11013 ;;		Unchanged: 0/0
 11014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11018 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11019 ;;Total ram usage:        0 bytes
 11020 ;; Hardware stack levels used:    1
 11021 ;; Hardware stack levels required when called:    4
 11022 ;; This function calls:
 11023 ;;		_isdigit
 11024 ;;		_isspace
 11025 ;; This function is called by:
 11026 ;;		_vfpfcnvrt
 11027 ;; This function uses a reentrant model
 11028 ;;
 11029                           
 11030                           	psect	text51
 11031  003FC4                     __ptext51:
 11032                           	opt callstack 0
 11033  003FC4                     _atoi:
 11034                           	opt callstack 0
 11035                           
 11036                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11037  003FC4  0E09               	movlw	9
 11038  003FC6  26E1               	addwf	fsr1l,f,c
 11039  003FC8  0E00               	movlw	0
 11040  003FCA  22E2               	addwfc	fsr1h,f,c
 11041                           
 11042                           ;stkvar	_n @ sp[(-9)+5]
 11043                           
 11044                           ;incstack = 0
 11045  003FCC  0EFC               	movlw	-4
 11046  003FCE  6AE3               	clrf	plusw1,c
 11047  003FD0  0EFD               	movlw	-3
 11048  003FD2  6AE3               	clrf	plusw1,c
 11049                           
 11050                           ;stkvar	_neg @ sp[(-9)+7]
 11051  003FD4  0EFE               	movlw	-2
 11052  003FD6  6AE3               	clrf	plusw1,c
 11053  003FD8  0EFF               	movlw	-1
 11054  003FDA  6AE3               	clrf	plusw1,c
 11055  003FDC  D002               	goto	l2475
 11056  003FDE                     l5270:
 11057                           
 11058                           ;stkvar	_s @ sp[(-9)+-1]
 11059  003FDE  0EF6               	movlw	-10
 11060  003FE0  2AE3               	incf	plusw1,f,c
 11061  003FE2                     l2475:
 11062                           
 11063                           ;stkvar	_atoi$4299 @ sp[(-9)+4]
 11064  003FE2  0EFB               	movlw	-5
 11065  003FE4  6AE3               	clrf	plusw1,c
 11066  003FE6  2AE3               	incf	plusw1,f,c
 11067                           
 11068                           ;stkvar	_s @ sp[(-9)+-1]
 11069  003FE8  50E1               	movf	fsr1l,w,c
 11070  003FEA  0FF6               	addlw	-10
 11071  003FEC  6ED9               	movwf	fsr2l,c
 11072  003FEE  50E2               	movf	fsr1h,w,c
 11073  003FF0  6EDA               	movwf	fsr2h,c
 11074  003FF2  0EFF               	movlw	255
 11075  003FF4  22DA               	addwfc	fsr2h,f,c
 11076  003FF6  006F FF7F FFF6     	movff	indf2,tblptrl
 11077  003FFC                     	if	1	;There is more than 1 active tblptr byte
 11078  003FFC  0E20               	movlw	high __smallconst
 11079  003FFE  6EF7               	movwf	tblptrh,c
 11080  004000                     	endif
 11081  004000                     	if	0	;tblptru may be non-zero
 11082  004000                     	endif
 11083  004000                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11084  004000  0E00               	movlw	low (__smallconst shr (0+16))
 11085  004002  6EF8               	movwf	tblptru,c
 11086  004004                     	endif
 11087  004004  0008               	tblrd		*
 11088  004006  50F5               	movf	tablat,w,c
 11089  004008  0A20               	xorlw	32
 11090  00400A  B4D8               	btfsc	status,2,c
 11091  00400C  D022               	goto	l5278
 11092  00400E  0EF7               	movlw	247
 11093  004010  6E47               	movwf	btemp+10,c
 11094  004012  0EFF               	movlw	255
 11095  004014  6E48               	movwf	btemp+11,c
 11096                           
 11097                           ;stkvar	_s @ sp[(-9)+-1]
 11098  004016  50E1               	movf	fsr1l,w,c
 11099  004018  0FF6               	addlw	-10
 11100  00401A  6ED9               	movwf	fsr2l,c
 11101  00401C  50E2               	movf	fsr1h,w,c
 11102  00401E  6EDA               	movwf	fsr2h,c
 11103  004020  0EFF               	movlw	255
 11104  004022  22DA               	addwfc	fsr2h,f,c
 11105  004024  006F FF7F FFF6     	movff	indf2,tblptrl
 11106  00402A                     	if	1	;There is more than 1 active tblptr byte
 11107  00402A  0E20               	movlw	high __smallconst
 11108  00402C  6EF7               	movwf	tblptrh,c
 11109  00402E                     	endif
 11110  00402E                     	if	0	;tblptru may be non-zero
 11111  00402E                     	endif
 11112  00402E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11113  00402E  0E00               	movlw	low (__smallconst shr (0+16))
 11114  004030  6EF8               	movwf	tblptru,c
 11115  004032                     	endif
 11116  004032  0008               	tblrd		*
 11117  004034  50F5               	movf	tablat,w,c
 11118  004036  6E45               	movwf	btemp+8,c
 11119  004038  6A46               	clrf	btemp+9,c
 11120  00403A  5047               	movf	btemp+10,w,c
 11121  00403C  2645               	addwf	btemp+8,f,c
 11122  00403E  5048               	movf	btemp+11,w,c
 11123  004040  2246               	addwfc	btemp+9,f,c
 11124  004042  5046               	movf	btemp+9,w,c
 11125  004044  E104               	bnz	u2970
 11126  004046  0E05               	movlw	5
 11127  004048  5C45               	subwf	btemp+8,w,c
 11128  00404A  A0D8               	btfss	status,0,c
 11129  00404C  D002               	goto	l5278
 11130  00404E                     u2970:
 11131                           
 11132                           ;stkvar	_atoi$4299 @ sp[(-9)+4]
 11133  00404E  0EFB               	movlw	-5
 11134  004050  6AE3               	clrf	plusw1,c
 11135  004052                     l5278:
 11136                           
 11137                           ;stkvar	_atoi$4299 @ sp[(-9)+4]
 11138  004052  0EFB               	movlw	-5
 11139  004054  50E3               	movf	plusw1,w,c
 11140  004056  6E47               	movwf	btemp+10,c
 11141  004058  6A48               	clrf	btemp+11,c
 11142                           
 11143                           ;stkvar	_atoi$4298 @ sp[(-9)+2]
 11144  00405A  0EF9               	movlw	-7
 11145  00405C  0060  F11F  FFE3   	movff	btemp+10,plusw1
 11146  004062  0EFA               	movlw	-6
 11147  004064  0060  F123  FFE3   	movff	btemp+11,plusw1
 11148                           
 11149                           ;stkvar	_atoi$4298 @ sp[(-9)+2]
 11150  00406A  0EF9               	movlw	-7
 11151  00406C  006F FF8C  F03D    	movff	plusw1,btemp
 11152  004072  0EFA               	movlw	-6
 11153  004074  50E3               	movf	plusw1,w,c
 11154  004076  103D               	iorwf	btemp,w,c
 11155  004078  B4D8               	btfsc	status,2,c
 11156  00407A  D010               	goto	l5288
 11157  00407C  D7B0               	goto	l5270
 11158  00407E                     l5284:
 11159  00407E  0E01               	movlw	1
 11160  004080  6E47               	movwf	btemp+10,c
 11161  004082  0E00               	movlw	0
 11162  004084  6E48               	movwf	btemp+11,c
 11163                           
 11164                           ;stkvar	_neg @ sp[(-9)+7]
 11165  004086  0EFE               	movlw	-2
 11166  004088  0060  F11F  FFE3   	movff	btemp+10,plusw1
 11167  00408E  0EFF               	movlw	-1
 11168  004090  0060  F123  FFE3   	movff	btemp+11,plusw1
 11169  004096                     l5286:
 11170                           
 11171                           ;stkvar	_s @ sp[(-9)+-1]
 11172  004096  0EF6               	movlw	-10
 11173  004098  2AE3               	incf	plusw1,f,c
 11174  00409A  D051               	goto	l5294
 11175  00409C                     l5288:
 11176                           
 11177                           ;stkvar	_s @ sp[(-9)+-1]
 11178  00409C  50E1               	movf	fsr1l,w,c
 11179  00409E  0FF6               	addlw	-10
 11180  0040A0  6ED9               	movwf	fsr2l,c
 11181  0040A2  50E2               	movf	fsr1h,w,c
 11182  0040A4  6EDA               	movwf	fsr2h,c
 11183  0040A6  0EFF               	movlw	255
 11184  0040A8  22DA               	addwfc	fsr2h,f,c
 11185  0040AA  006F FF7F FFF6     	movff	indf2,tblptrl
 11186  0040B0                     	if	1	;There is more than 1 active tblptr byte
 11187  0040B0  0E20               	movlw	high __smallconst
 11188  0040B2  6EF7               	movwf	tblptrh,c
 11189  0040B4                     	endif
 11190  0040B4                     	if	0	;tblptru may be non-zero
 11191  0040B4                     	endif
 11192  0040B4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11193  0040B4  0E00               	movlw	low (__smallconst shr (0+16))
 11194  0040B6  6EF8               	movwf	tblptru,c
 11195  0040B8                     	endif
 11196  0040B8  0008               	tblrd		*
 11197  0040BA  50F5               	movf	tablat,w,c
 11198  0040BC  6E47               	movwf	btemp+10,c
 11199  0040BE  6A48               	clrf	btemp+11,c
 11200                           
 11201                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11202                           ; Switch size 1, requested type "simple"
 11203                           ; Number of cases is 1, Range of values is 0 to 0
 11204                           ; switch strategies available:
 11205                           ; Name         Instructions Cycles
 11206                           ; simple_byte            4     3 (average)
 11207                           ;	Chosen strategy is simple_byte
 11208  0040C0  5048               	movf	btemp+11,w,c
 11209  0040C2  0A00               	xorlw	0	; case 0
 11210  0040C4  A4D8               	btfss	status,2,c
 11211  0040C6  D03B               	goto	l5294
 11212                           
 11213                           ; Switch size 1, requested type "simple"
 11214                           ; Number of cases is 2, Range of values is 43 to 45
 11215                           ; switch strategies available:
 11216                           ; Name         Instructions Cycles
 11217                           ; simple_byte            7     4 (average)
 11218                           ;	Chosen strategy is simple_byte
 11219  0040C8  5047               	movf	btemp+10,w,c
 11220  0040CA  0A2B               	xorlw	43	; case 43
 11221  0040CC  B4D8               	btfsc	status,2,c
 11222  0040CE  D7E3               	goto	l5286
 11223  0040D0  0A06               	xorlw	6	; case 45
 11224  0040D2  B4D8               	btfsc	status,2,c
 11225  0040D4  D7D4               	goto	l5284
 11226  0040D6  D033               	goto	l5294
 11227  0040D8                     l5290:
 11228                           
 11229                           ;stkvar	_n @ sp[(-9)+5]
 11230  0040D8  0EFC               	movlw	-4
 11231  0040DA  006F FF8C  F047    	movff	plusw1,btemp+10
 11232  0040E0  0EFD               	movlw	-3
 11233  0040E2  006F FF8C  F048    	movff	plusw1,btemp+11
 11234  0040E8  0E0A               	movlw	10
 11235  0040EA  0247               	mulwf	btemp+10,c
 11236  0040EC  006F FFCC  F045    	movff	prodl,btemp+8
 11237  0040F2  006F FFD0  F046    	movff	prodh,btemp+9
 11238  0040F8  0248               	mulwf	btemp+11,c
 11239  0040FA  50F3               	movf	prodl,w,c
 11240  0040FC  2646               	addwf	btemp+9,f,c
 11241                           
 11242                           ;stkvar	_s @ sp[(-9)+-1]
 11243  0040FE  50E1               	movf	fsr1l,w,c
 11244  004100  0FF6               	addlw	-10
 11245  004102  6ED9               	movwf	fsr2l,c
 11246  004104  50E2               	movf	fsr1h,w,c
 11247  004106  6EDA               	movwf	fsr2h,c
 11248  004108  0EFF               	movlw	255
 11249  00410A  22DA               	addwfc	fsr2h,f,c
 11250  00410C  006F FF7F FFF6     	movff	indf2,tblptrl
 11251  004112                     	if	1	;There is more than 1 active tblptr byte
 11252  004112  0E20               	movlw	high __smallconst
 11253  004114  6EF7               	movwf	tblptrh,c
 11254  004116                     	endif
 11255  004116                     	if	0	;tblptru may be non-zero
 11256  004116                     	endif
 11257  004116                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11258  004116  0E00               	movlw	low (__smallconst shr (0+16))
 11259  004118  6EF8               	movwf	tblptru,c
 11260  00411A                     	endif
 11261  00411A  0008               	tblrd		*
 11262  00411C  50F5               	movf	tablat,w,c
 11263  00411E  5E45               	subwf	btemp+8,f,c
 11264  004120  0E00               	movlw	0
 11265  004122  5A46               	subwfb	btemp+9,f,c
 11266  004124  0E30               	movlw	48
 11267  004126  2645               	addwf	btemp+8,f,c
 11268  004128  0E00               	movlw	0
 11269  00412A  2246               	addwfc	btemp+9,f,c
 11270                           
 11271                           ;stkvar	_n @ sp[(-9)+5]
 11272  00412C  0EFC               	movlw	-4
 11273  00412E  0060  F117  FFE3   	movff	btemp+8,plusw1
 11274  004134  0EFD               	movlw	-3
 11275  004136  0060  F11B  FFE3   	movff	btemp+9,plusw1
 11276  00413C  D7AC               	goto	l5286
 11277  00413E                     l5294:
 11278  00413E  0ED0               	movlw	208
 11279  004140  6E47               	movwf	btemp+10,c
 11280  004142  0EFF               	movlw	255
 11281  004144  6E48               	movwf	btemp+11,c
 11282                           
 11283                           ;stkvar	_s @ sp[(-9)+-1]
 11284  004146  50E1               	movf	fsr1l,w,c
 11285  004148  0FF6               	addlw	-10
 11286  00414A  6ED9               	movwf	fsr2l,c
 11287  00414C  50E2               	movf	fsr1h,w,c
 11288  00414E  6EDA               	movwf	fsr2h,c
 11289  004150  0EFF               	movlw	255
 11290  004152  22DA               	addwfc	fsr2h,f,c
 11291  004154  006F FF7F FFF6     	movff	indf2,tblptrl
 11292  00415A                     	if	1	;There is more than 1 active tblptr byte
 11293  00415A  0E20               	movlw	high __smallconst
 11294  00415C  6EF7               	movwf	tblptrh,c
 11295  00415E                     	endif
 11296  00415E                     	if	0	;tblptru may be non-zero
 11297  00415E                     	endif
 11298  00415E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11299  00415E  0E00               	movlw	low (__smallconst shr (0+16))
 11300  004160  6EF8               	movwf	tblptru,c
 11301  004162                     	endif
 11302  004162  0008               	tblrd		*
 11303  004164  50F5               	movf	tablat,w,c
 11304  004166  6E45               	movwf	btemp+8,c
 11305  004168  6A46               	clrf	btemp+9,c
 11306  00416A  5047               	movf	btemp+10,w,c
 11307  00416C  2645               	addwf	btemp+8,f,c
 11308  00416E  5048               	movf	btemp+11,w,c
 11309  004170  2246               	addwfc	btemp+9,f,c
 11310  004172  5046               	movf	btemp+9,w,c
 11311  004174  E106               	bnz	u2990
 11312  004176  0E0A               	movlw	10
 11313  004178  5C45               	subwf	btemp+8,w,c
 11314  00417A  B0D8               	btfsc	status,0,c
 11315  00417C  D002               	goto	u2990
 11316  00417E  0E01               	movlw	1
 11317  004180  D001               	goto	u3000
 11318  004182                     u2990:
 11319  004182  0E00               	movlw	0
 11320  004184                     u3000:
 11321  004184  6E47               	movwf	btemp+10,c
 11322  004186  6A48               	clrf	btemp+11,c
 11323                           
 11324                           ;stkvar	_atoi$4300 @ sp[(-9)+0]
 11325  004188  0EF7               	movlw	-9
 11326  00418A  0060  F11F  FFE3   	movff	btemp+10,plusw1
 11327  004190  0EF8               	movlw	-8
 11328  004192  0060  F123  FFE3   	movff	btemp+11,plusw1
 11329                           
 11330                           ;stkvar	_atoi$4300 @ sp[(-9)+0]
 11331  004198  0EF7               	movlw	-9
 11332  00419A  006F FF8C  F03D    	movff	plusw1,btemp
 11333  0041A0  0EF8               	movlw	-8
 11334  0041A2  50E3               	movf	plusw1,w,c
 11335  0041A4  103D               	iorwf	btemp,w,c
 11336  0041A6  A4D8               	btfss	status,2,c
 11337  0041A8  D797               	goto	l5290
 11338                           
 11339                           ;stkvar	_neg @ sp[(-9)+7]
 11340  0041AA  0EFE               	movlw	-2
 11341  0041AC  006F FF8C  F03D    	movff	plusw1,btemp
 11342  0041B2  0EFF               	movlw	-1
 11343  0041B4  50E3               	movf	plusw1,w,c
 11344  0041B6  103D               	iorwf	btemp,w,c
 11345  0041B8  A4D8               	btfss	status,2,c
 11346  0041BA  D00E               	goto	l5304
 11347                           
 11348                           ;stkvar	_n @ sp[(-9)+5]
 11349  0041BC  0EFC               	movlw	-4
 11350  0041BE  006F FF8C  F03D    	movff	plusw1,btemp
 11351  0041C4  1E3D               	comf	btemp,f,c
 11352  0041C6  0EFD               	movlw	-3
 11353  0041C8  006F FF8C  F03E    	movff	plusw1,btemp+1
 11354  0041CE  1E3E               	comf	btemp+1,f,c
 11355  0041D0  2A3D               	incf	btemp,f,c
 11356  0041D2  B4D8               	btfsc	status,2,c
 11357  0041D4  2A3E               	incf	btemp+1,f,c
 11358  0041D6  D008               	goto	l2499
 11359  0041D8                     l5304:
 11360                           
 11361                           ;stkvar	_n @ sp[(-9)+5]
 11362  0041D8  0EFC               	movlw	-4
 11363  0041DA  006F FF8C  F03D    	movff	plusw1,btemp
 11364  0041E0  0EFD               	movlw	-3
 11365  0041E2  006F FF8C  F03E    	movff	plusw1,btemp+1
 11366  0041E8                     l2499:
 11367                           
 11368                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize 
      +                          = 1, vargsize = 0
 11369  0041E8  0EF6               	movlw	246
 11370  0041EA  26E1               	addwf	fsr1l,f,c
 11371  0041EC  0EFF               	movlw	255
 11372  0041EE  22E2               	addwfc	fsr1h,f,c
 11373  0041F0  0012               	return		;funcret
 11374  0041F2                     __end_of_atoi:
 11375                           	opt callstack 0
 11376                           
 11377 ;; *************** function _isspace *****************
 11378 ;; Defined at:
 11379 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isspace.c"
 11380 ;; Parameters:    Size  Location     Type
 11381 ;;  c               2  [STACK] int 
 11382 ;; Auto vars:     Size  Location     Type
 11383 ;;		None
 11384 ;; Return value:  Size  Location     Type
 11385 ;;                  2  [STACK] int 
 11386 ;; Registers used:
 11387 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 11388 ;; Tracked objects:
 11389 ;;		On entry : 0/0
 11390 ;;		On exit  : 0/0
 11391 ;;		Unchanged: 0/0
 11392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11397 ;;Total ram usage:        0 bytes
 11398 ;; Hardware stack levels used:    1
 11399 ;; Hardware stack levels required when called:    3
 11400 ;; This function calls:
 11401 ;;		Nothing
 11402 ;; This function is called by:
 11403 ;;		_atoi
 11404 ;; This function uses a reentrant model
 11405 ;;
 11406                           
 11407                           	psect	text52
 11408  0054AE                     __ptext52:
 11409                           	opt callstack 0
 11410  0054AE                     _isspace:
 11411                           	opt callstack 0
 11412                           
 11413                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11414  0054AE  52E6               	movf	postinc1,f,c
 11415                           
 11416                           ;stkvar	_isspace$4325 @ sp[(-1)+0]
 11417                           
 11418                           ;incstack = 0
 11419  0054B0  0EFF               	movlw	-1
 11420  0054B2  6AE3               	clrf	plusw1,c
 11421  0054B4  2AE3               	incf	plusw1,f,c
 11422                           
 11423                           ;stkvar	_c @ sp[(-1)+-2]
 11424  0054B6  0EFD               	movlw	-3
 11425  0054B8  006F FF8C  F03D    	movff	plusw1,btemp
 11426  0054BE  0E20               	movlw	32
 11427  0054C0  183D               	xorwf	btemp,w,c
 11428  0054C2  E104               	bnz	u2490
 11429  0054C4  0EFE               	movlw	-2
 11430  0054C6  50E3               	movf	plusw1,w,c
 11431  0054C8  B4D8               	btfsc	status,2,c
 11432  0054CA  D012               	goto	l5060
 11433  0054CC                     u2490:
 11434                           
 11435                           ;stkvar	_c @ sp[(-1)+-2]
 11436  0054CC  0EFD               	movlw	-3
 11437  0054CE  50E3               	movf	plusw1,w,c
 11438  0054D0  0FF7               	addlw	247
 11439  0054D2  6E47               	movwf	btemp+10,c
 11440  0054D4  0EFE               	movlw	-2
 11441  0054D6  006F FF8C  F048    	movff	plusw1,btemp+11
 11442  0054DC  0EFF               	movlw	255
 11443  0054DE  2248               	addwfc	btemp+11,f,c
 11444  0054E0  5048               	movf	btemp+11,w,c
 11445  0054E2  E104               	bnz	u2500
 11446  0054E4  0E05               	movlw	5
 11447  0054E6  5C47               	subwf	btemp+10,w,c
 11448  0054E8  A0D8               	btfss	status,0,c
 11449  0054EA  D002               	goto	l5060
 11450  0054EC                     u2500:
 11451                           
 11452                           ;stkvar	_isspace$4325 @ sp[(-1)+0]
 11453  0054EC  0EFF               	movlw	-1
 11454  0054EE  6AE3               	clrf	plusw1,c
 11455  0054F0                     l5060:
 11456                           
 11457                           ;stkvar	_isspace$4325 @ sp[(-1)+0]
 11458  0054F0  0EFF               	movlw	-1
 11459  0054F2  50E3               	movf	plusw1,w,c
 11460  0054F4  6E3D               	movwf	btemp,c
 11461  0054F6  6A3E               	clrf	btemp+1,c
 11462                           
 11463                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 11464  0054F8  52E5               	movf	postdec1,f,c
 11465  0054FA  52E5               	movf	postdec1,f,c
 11466  0054FC  52E5               	movf	postdec1,f,c
 11467  0054FE  0012               	return		;funcret
 11468  005500                     __end_of_isspace:
 11469                           	opt callstack 0
 11470                           
 11471 ;; *************** function _isdigit *****************
 11472 ;; Defined at:
 11473 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isdigit.c"
 11474 ;; Parameters:    Size  Location     Type
 11475 ;;  c               2  [STACK] int 
 11476 ;; Auto vars:     Size  Location     Type
 11477 ;;		None
 11478 ;; Return value:  Size  Location     Type
 11479 ;;                  2  [STACK] int 
 11480 ;; Registers used:
 11481 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 11482 ;; Tracked objects:
 11483 ;;		On entry : 0/0
 11484 ;;		On exit  : 0/0
 11485 ;;		Unchanged: 0/0
 11486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11491 ;;Total ram usage:        0 bytes
 11492 ;; Hardware stack levels used:    1
 11493 ;; Hardware stack levels required when called:    3
 11494 ;; This function calls:
 11495 ;;		Nothing
 11496 ;; This function is called by:
 11497 ;;		_vfpfcnvrt
 11498 ;;		_atoi
 11499 ;; This function uses a reentrant model
 11500 ;;
 11501                           
 11502                           	psect	text53
 11503  0058D6                     __ptext53:
 11504                           	opt callstack 0
 11505  0058D6                     _isdigit:
 11506                           	opt callstack 24
 11507                           
 11508                           ;stkvar	_c @ sp[(0)+-2]
 11509                           
 11510                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11511                           ;incstack = 0
 11512  0058D6  0EFE               	movlw	-2
 11513  0058D8  50E3               	movf	plusw1,w,c
 11514  0058DA  0FD0               	addlw	208
 11515  0058DC  6E47               	movwf	btemp+10,c
 11516  0058DE  0EFF               	movlw	-1
 11517  0058E0  006F FF8C  F048    	movff	plusw1,btemp+11
 11518  0058E6  0EFF               	movlw	255
 11519  0058E8  2248               	addwfc	btemp+11,f,c
 11520  0058EA  5048               	movf	btemp+11,w,c
 11521  0058EC  E106               	bnz	u2240
 11522  0058EE  0E0A               	movlw	10
 11523  0058F0  5C47               	subwf	btemp+10,w,c
 11524  0058F2  B0D8               	btfsc	status,0,c
 11525  0058F4  D002               	goto	u2240
 11526  0058F6  0E01               	movlw	1
 11527  0058F8  D001               	goto	u2250
 11528  0058FA                     u2240:
 11529  0058FA  0E00               	movlw	0
 11530  0058FC                     u2250:
 11531  0058FC  6E3D               	movwf	btemp,c
 11532  0058FE  6A3E               	clrf	btemp+1,c
 11533                           
 11534                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 11535  005900  52E5               	movf	postdec1,f,c
 11536  005902  52E5               	movf	postdec1,f,c
 11537  005904  0012               	return		;funcret
 11538  005906                     __end_of_isdigit:
 11539                           	opt callstack 0
 11540                           
 11541 ;; *************** function _SYSTEM_Initialize *****************
 11542 ;; Defined at:
 11543 ;;		line 50 in file "mcc_generated_files/mcc.c"
 11544 ;; Parameters:    Size  Location     Type
 11545 ;;		None
 11546 ;; Auto vars:     Size  Location     Type
 11547 ;;		None
 11548 ;; Return value:  Size  Location     Type
 11549 ;;                  1  [STACK] void 
 11550 ;; Registers used:
 11551 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 11552 ;; Tracked objects:
 11553 ;;		On entry : 0/0
 11554 ;;		On exit  : 3F/3C
 11555 ;;		Unchanged: 0/0
 11556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11560 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11561 ;;Total ram usage:        0 bytes
 11562 ;; Hardware stack levels used:    1
 11563 ;; Hardware stack levels required when called:    5
 11564 ;; This function calls:
 11565 ;;		_ADCC_Initialize
 11566 ;;		_CLC1_Initialize
 11567 ;;		_CLKREF_Initialize
 11568 ;;		_DMA1_Initialize
 11569 ;;		_DSM_Initialize
 11570 ;;		_EXT_INT_Initialize
 11571 ;;		_INTERRUPT_Initialize
 11572 ;;		_NCO1_Initialize
 11573 ;;		_OSCILLATOR_Initialize
 11574 ;;		_PIN_MANAGER_Initialize
 11575 ;;		_PMD_Initialize
 11576 ;;		_SPI1_Initialize
 11577 ;;		_TMR5_Initialize
 11578 ;;		_TMR6_Initialize
 11579 ;;		_UART1_Initialize
 11580 ;;		_UART2_Initialize
 11581 ;; This function is called by:
 11582 ;;		_main
 11583 ;; This function uses a reentrant model
 11584 ;;
 11585                           
 11586                           	psect	text54
 11587  0056FC                     __ptext54:
 11588                           	opt callstack 0
 11589  0056FC                     _SYSTEM_Initialize:
 11590                           	opt callstack 25
 11591                           
 11592                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 11593                           
 11594                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11595                           ;incstack = 0
 11596  0056FC  EC64  F029         	call	_INTERRUPT_Initialize	;wreg free
 11597                           
 11598                           ; BSR set to: 57
 11599                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 11600  005700  EC8E  F02F         	call	_PMD_Initialize	;wreg free
 11601                           
 11602                           ; BSR set to: 57
 11603                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 11604  005704  EC0F  F027         	call	_PIN_MANAGER_Initialize	;wreg free
 11605                           
 11606                           ; BSR set to: 58
 11607                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 11608  005708  EC83  F02F         	call	_OSCILLATOR_Initialize	;wreg free
 11609                           
 11610                           ; BSR set to: 57
 11611                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
 11612  00570C  ECCE  F02A         	call	_ADCC_Initialize	;wreg free
 11613                           
 11614                           ;mcc_generated_files/mcc.c: 57:     NCO1_Initialize();
 11615  005710  EC35  F02F         	call	_NCO1_Initialize	;wreg free
 11616                           
 11617                           ; BSR set to: 63
 11618                           ;mcc_generated_files/mcc.c: 58:     EXT_INT_Initialize();
 11619  005714  ECA8  F02A         	call	_EXT_INT_Initialize	;wreg free
 11620                           
 11621                           ; BSR set to: 57
 11622                           ;mcc_generated_files/mcc.c: 59:     TMR6_Initialize();
 11623  005718  ECA5  F02D         	call	_TMR6_Initialize	;wreg free
 11624                           
 11625                           ;mcc_generated_files/mcc.c: 60:     CLC1_Initialize();
 11626  00571C  EC92  F02E         	call	_CLC1_Initialize	;wreg free
 11627                           
 11628                           ; BSR set to: 60
 11629                           ;mcc_generated_files/mcc.c: 61:     TMR5_Initialize();
 11630  005720  EC16  F02B         	call	_TMR5_Initialize	;wreg free
 11631                           
 11632                           ;mcc_generated_files/mcc.c: 62:     DSM_Initialize();
 11633  005724  EC43  F02F         	call	_DSM_Initialize	;wreg free
 11634                           
 11635                           ; BSR set to: 60
 11636                           ;mcc_generated_files/mcc.c: 63:     UART1_Initialize();
 11637  005728  EC97  F029         	call	_UART1_Initialize	;wreg free
 11638                           
 11639                           ; BSR set to: 57
 11640                           ;mcc_generated_files/mcc.c: 64:     UART2_Initialize();
 11641  00572C  ECFA  F029         	call	_UART2_Initialize	;wreg free
 11642                           
 11643                           ; BSR set to: 57
 11644                           ;mcc_generated_files/mcc.c: 65:     SPI1_Initialize();
 11645  005730  EC78  F02F         	call	_SPI1_Initialize	;wreg free
 11646                           
 11647                           ; BSR set to: 61
 11648                           ;mcc_generated_files/mcc.c: 66:     DMA1_Initialize();
 11649  005734  EC2F  F029         	call	_DMA1_Initialize	;wreg free
 11650                           
 11651                           ; BSR set to: 59
 11652                           ;mcc_generated_files/mcc.c: 67:     CLKREF_Initialize();
 11653  005738  ECC6  F02F         	call	_CLKREF_Initialize	;wreg free
 11654                           
 11655                           ; BSR set to: 60
 11656                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 11657  00573C  0012               	return		;funcret
 11658  00573E                     __end_of_SYSTEM_Initialize:
 11659                           	opt callstack 0
 11660                           
 11661 ;; *************** function _UART2_Initialize *****************
 11662 ;; Defined at:
 11663 ;;		line 78 in file "mcc_generated_files/uart2.c"
 11664 ;; Parameters:    Size  Location     Type
 11665 ;;		None
 11666 ;; Auto vars:     Size  Location     Type
 11667 ;;		None
 11668 ;; Return value:  Size  Location     Type
 11669 ;;                  1  [STACK] void 
 11670 ;; Registers used:
 11671 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 11672 ;; Tracked objects:
 11673 ;;		On entry : 3F/39
 11674 ;;		On exit  : 3F/39
 11675 ;;		Unchanged: 0/0
 11676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11681 ;;Total ram usage:        0 bytes
 11682 ;; Hardware stack levels used:    1
 11683 ;; Hardware stack levels required when called:    4
 11684 ;; This function calls:
 11685 ;;		_UART2_SetRxInterruptHandler
 11686 ;;		_UART2_SetTxInterruptHandler
 11687 ;; This function is called by:
 11688 ;;		_SYSTEM_Initialize
 11689 ;; This function uses a reentrant model
 11690 ;;
 11691                           
 11692                           	psect	text55
 11693  0053F4                     __ptext55:
 11694                           	opt callstack 0
 11695  0053F4                     _UART2_Initialize:
 11696                           	opt callstack 25
 11697                           
 11698                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 11699                           
 11700                           ; BSR set to: 60
 11701                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11702                           ;incstack = 0
 11703  0053F4  0139               	movlb	57	; () banked
 11704  0053F6  9596               	bcf	150,2,b	;volatile
 11705                           
 11706                           ; BSR set to: 57
 11707                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 11708  0053F8  0E10               	movlw	low _UART2_Receive_ISR
 11709  0053FA  6EE6               	movwf	postinc1,c
 11710  0053FC  0E5E               	movlw	high _UART2_Receive_ISR
 11711  0053FE  6EE6               	movwf	postinc1,c
 11712  005400  0E00               	movlw	low (_UART2_Receive_ISR shr (0+16))
 11713  005402  6EE6               	movwf	postinc1,c
 11714  005404  EC69  F02D         	call	_UART2_SetRxInterruptHandler	;wreg free
 11715                           
 11716                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 11717  005408  0139               	movlb	57	; () banked
 11718  00540A  9796               	bcf	150,3,b	;volatile
 11719                           
 11720                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 11721  00540C  0E5E               	movlw	low _UART2_Transmit_ISR
 11722  00540E  6EE6               	movwf	postinc1,c
 11723  005410  0E59               	movlw	high _UART2_Transmit_ISR
 11724  005412  6EE6               	movwf	postinc1,c
 11725  005414  0E00               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 11726  005416  6EE6               	movwf	postinc1,c
 11727  005418  EC55  F02D         	call	_UART2_SetTxInterruptHandler	;wreg free
 11728                           
 11729                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 11730  00541C  013D               	movlb	61	; () banked
 11731  00541E  6BD4               	clrf	212,b	;volatile
 11732                           
 11733                           ; BSR set to: 61
 11734                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 11735  005420  6BD6               	clrf	214,b	;volatile
 11736                           
 11737                           ; BSR set to: 61
 11738                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 11739  005422  6BD8               	clrf	216,b	;volatile
 11740                           
 11741                           ; BSR set to: 61
 11742                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 11743  005424  0EB0               	movlw	176
 11744  005426  6FDA               	movwf	218,b	;volatile
 11745                           
 11746                           ; BSR set to: 61
 11747                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 11748  005428  0E80               	movlw	128
 11749  00542A  6FDB               	movwf	219,b	;volatile
 11750                           
 11751                           ; BSR set to: 61
 11752                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 11753  00542C  6BDC               	clrf	220,b	;volatile
 11754                           
 11755                           ; BSR set to: 61
 11756                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 11757  00542E  0E82               	movlw	130
 11758  005430  6FDD               	movwf	221,b	;volatile
 11759                           
 11760                           ; BSR set to: 61
 11761                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 11762  005432  0E06               	movlw	6
 11763  005434  6FDE               	movwf	222,b	;volatile
 11764                           
 11765                           ; BSR set to: 61
 11766                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 11767  005436  6BDF               	clrf	223,b	;volatile
 11768                           
 11769                           ; BSR set to: 61
 11770                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 11771  005438  6BE0               	clrf	224,b	;volatile
 11772                           
 11773                           ; BSR set to: 61
 11774                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 11775  00543A  6BE1               	clrf	225,b	;volatile
 11776                           
 11777                           ; BSR set to: 61
 11778                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 11779  00543C  6BE2               	clrf	226,b	;volatile
 11780                           
 11781                           ; BSR set to: 61
 11782                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 11783  00543E  6A36               	clrf	_uart2TxHead,c	;volatile
 11784                           
 11785                           ; BSR set to: 61
 11786                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 11787  005440  6A35               	clrf	_uart2TxTail,c	;volatile
 11788                           
 11789                           ; BSR set to: 61
 11790                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 11791  005442  0E40               	movlw	64
 11792  005444  6E34               	movwf	_uart2TxBufferRemaining,c	;volatile
 11793                           
 11794                           ; BSR set to: 61
 11795                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 11796  005446  6A33               	clrf	_uart2RxHead,c	;volatile
 11797                           
 11798                           ; BSR set to: 61
 11799                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 11800  005448  6A32               	clrf	_uart2RxTail,c	;volatile
 11801                           
 11802                           ; BSR set to: 61
 11803                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 11804  00544A  6A31               	clrf	_uart2RxCount,c	;volatile
 11805                           
 11806                           ; BSR set to: 61
 11807                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 11808  00544C  0139               	movlb	57	; () banked
 11809  00544E  8596               	bsf	150,2,b	;volatile
 11810                           
 11811                           ; BSR set to: 57
 11812                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 11813  005450  0012               	return		;funcret
 11814  005452                     __end_of_UART2_Initialize:
 11815                           	opt callstack 0
 11816                           
 11817 ;; *************** function _UART2_SetTxInterruptHandler *****************
 11818 ;; Defined at:
 11819 ;;		line 252 in file "mcc_generated_files/uart2.c"
 11820 ;; Parameters:    Size  Location     Type
 11821 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 11822 ;;		 -> UART2_Transmit_ISR(1), 
 11823 ;; Auto vars:     Size  Location     Type
 11824 ;;		None
 11825 ;; Return value:  Size  Location     Type
 11826 ;;                  1  [STACK] void 
 11827 ;; Registers used:
 11828 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 11829 ;; Tracked objects:
 11830 ;;		On entry : 3F/39
 11831 ;;		On exit  : 0/0
 11832 ;;		Unchanged: 0/0
 11833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11837 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11838 ;;Total ram usage:        0 bytes
 11839 ;; Hardware stack levels used:    1
 11840 ;; Hardware stack levels required when called:    3
 11841 ;; This function calls:
 11842 ;;		Nothing
 11843 ;; This function is called by:
 11844 ;;		_UART2_Initialize
 11845 ;; This function uses a reentrant model
 11846 ;;
 11847                           
 11848                           	psect	text56
 11849  005AAA                     __ptext56:
 11850                           	opt callstack 0
 11851  005AAA                     _UART2_SetTxInterruptHandler:
 11852                           	opt callstack 25
 11853                           
 11854                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 11855                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 11856                           
 11857                           ; BSR set to: 57
 11858                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11859                           ;incstack = 0
 11860  005AAA  50E1               	movf	fsr1l,w,c
 11861  005AAC  0FFD               	addlw	-3
 11862  005AAE  6ED9               	movwf	fsr2l,c
 11863  005AB0  50E2               	movf	fsr1h,w,c
 11864  005AB2  6EDA               	movwf	fsr2h,c
 11865  005AB4  0EFF               	movlw	255
 11866  005AB6  22DA               	addwfc	fsr2h,f,c
 11867  005AB8  006F FF78  F013    	movff	postinc2,_UART2_TxInterruptHandler
 11868  005ABE  006F FF78  F014    	movff	postinc2,_UART2_TxInterruptHandler+1
 11869  005AC4  006F FF74  F015    	movff	postdec2,_UART2_TxInterruptHandler+2
 11870                           
 11871                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 11872  005ACA  52E5               	movf	postdec1,f,c
 11873  005ACC  52E5               	movf	postdec1,f,c
 11874  005ACE  52E5               	movf	postdec1,f,c
 11875  005AD0  0012               	return		;funcret
 11876  005AD2                     __end_of_UART2_SetTxInterruptHandler:
 11877                           	opt callstack 0
 11878                           
 11879 ;; *************** function _UART2_SetRxInterruptHandler *****************
 11880 ;; Defined at:
 11881 ;;		line 248 in file "mcc_generated_files/uart2.c"
 11882 ;; Parameters:    Size  Location     Type
 11883 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 11884 ;;		 -> UART2_Receive_ISR(1), 
 11885 ;; Auto vars:     Size  Location     Type
 11886 ;;		None
 11887 ;; Return value:  Size  Location     Type
 11888 ;;                  1  [STACK] void 
 11889 ;; Registers used:
 11890 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 11891 ;; Tracked objects:
 11892 ;;		On entry : 3F/39
 11893 ;;		On exit  : 0/0
 11894 ;;		Unchanged: 0/0
 11895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11900 ;;Total ram usage:        0 bytes
 11901 ;; Hardware stack levels used:    1
 11902 ;; Hardware stack levels required when called:    3
 11903 ;; This function calls:
 11904 ;;		Nothing
 11905 ;; This function is called by:
 11906 ;;		_UART2_Initialize
 11907 ;; This function uses a reentrant model
 11908 ;;
 11909                           
 11910                           	psect	text57
 11911  005AD2                     __ptext57:
 11912                           	opt callstack 0
 11913  005AD2                     _UART2_SetRxInterruptHandler:
 11914                           	opt callstack 25
 11915                           
 11916                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 11917                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 11918                           
 11919                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11920                           ;incstack = 0
 11921  005AD2  50E1               	movf	fsr1l,w,c
 11922  005AD4  0FFD               	addlw	-3
 11923  005AD6  6ED9               	movwf	fsr2l,c
 11924  005AD8  50E2               	movf	fsr1h,w,c
 11925  005ADA  6EDA               	movwf	fsr2h,c
 11926  005ADC  0EFF               	movlw	255
 11927  005ADE  22DA               	addwfc	fsr2h,f,c
 11928  005AE0  006F FF78  F016    	movff	postinc2,_UART2_RxInterruptHandler
 11929  005AE6  006F FF78  F017    	movff	postinc2,_UART2_RxInterruptHandler+1
 11930  005AEC  006F FF74  F018    	movff	postdec2,_UART2_RxInterruptHandler+2
 11931                           
 11932                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 11933  005AF2  52E5               	movf	postdec1,f,c
 11934  005AF4  52E5               	movf	postdec1,f,c
 11935  005AF6  52E5               	movf	postdec1,f,c
 11936  005AF8  0012               	return		;funcret
 11937  005AFA                     __end_of_UART2_SetRxInterruptHandler:
 11938                           	opt callstack 0
 11939                           
 11940 ;; *************** function _UART1_Initialize *****************
 11941 ;; Defined at:
 11942 ;;		line 78 in file "mcc_generated_files/uart1.c"
 11943 ;; Parameters:    Size  Location     Type
 11944 ;;		None
 11945 ;; Auto vars:     Size  Location     Type
 11946 ;;		None
 11947 ;; Return value:  Size  Location     Type
 11948 ;;                  1  [STACK] void 
 11949 ;; Registers used:
 11950 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 11951 ;; Tracked objects:
 11952 ;;		On entry : 3F/3C
 11953 ;;		On exit  : 3F/39
 11954 ;;		Unchanged: 0/0
 11955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11960 ;;Total ram usage:        0 bytes
 11961 ;; Hardware stack levels used:    1
 11962 ;; Hardware stack levels required when called:    4
 11963 ;; This function calls:
 11964 ;;		_UART1_SetRxInterruptHandler
 11965 ;;		_UART1_SetTxInterruptHandler
 11966 ;; This function is called by:
 11967 ;;		_SYSTEM_Initialize
 11968 ;; This function uses a reentrant model
 11969 ;;
 11970                           
 11971                           	psect	text58
 11972  00532E                     __ptext58:
 11973                           	opt callstack 0
 11974  00532E                     _UART1_Initialize:
 11975                           	opt callstack 25
 11976                           
 11977                           ;mcc_generated_files/uart1.c: 81:  PIE3bits.U1RXIE = 0;
 11978                           
 11979                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11980                           ;incstack = 0
 11981  00532E  0139               	movlb	57	; () banked
 11982  005330  9793               	bcf	147,3,b	;volatile
 11983                           
 11984                           ; BSR set to: 57
 11985                           ;mcc_generated_files/uart1.c: 82:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 11986  005332  0EF0               	movlw	low _UART1_Receive_ISR
 11987  005334  6EE6               	movwf	postinc1,c
 11988  005336  0E5D               	movlw	high _UART1_Receive_ISR
 11989  005338  6EE6               	movwf	postinc1,c
 11990  00533A  0E00               	movlw	low (_UART1_Receive_ISR shr (0+16))
 11991  00533C  6EE6               	movwf	postinc1,c
 11992  00533E  EC91  F02D         	call	_UART1_SetRxInterruptHandler	;wreg free
 11993                           
 11994                           ;mcc_generated_files/uart1.c: 83:  PIE3bits.U1TXIE = 0;
 11995  005342  0139               	movlb	57	; () banked
 11996  005344  9993               	bcf	147,4,b	;volatile
 11997                           
 11998                           ;mcc_generated_files/uart1.c: 84:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 11999  005346  0E32               	movlw	low _UART1_Transmit_ISR
 12000  005348  6EE6               	movwf	postinc1,c
 12001  00534A  0E59               	movlw	high _UART1_Transmit_ISR
 12002  00534C  6EE6               	movwf	postinc1,c
 12003  00534E  0E00               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 12004  005350  6EE6               	movwf	postinc1,c
 12005  005352  EC7D  F02D         	call	_UART1_SetTxInterruptHandler	;wreg free
 12006                           
 12007                           ;mcc_generated_files/uart1.c: 89:  U1P1L = 0x00;
 12008  005356  013D               	movlb	61	; () banked
 12009  005358  6BEC               	clrf	236,b	;volatile
 12010                           
 12011                           ; BSR set to: 61
 12012                           ;mcc_generated_files/uart1.c: 92:  U1P1H = 0x00;
 12013  00535A  6BED               	clrf	237,b	;volatile
 12014                           
 12015                           ; BSR set to: 61
 12016                           ;mcc_generated_files/uart1.c: 95:  U1P2L = 0x00;
 12017  00535C  6BEE               	clrf	238,b	;volatile
 12018                           
 12019                           ; BSR set to: 61
 12020                           ;mcc_generated_files/uart1.c: 98:  U1P2H = 0x00;
 12021  00535E  6BEF               	clrf	239,b	;volatile
 12022                           
 12023                           ; BSR set to: 61
 12024                           ;mcc_generated_files/uart1.c: 101:  U1P3L = 0x00;
 12025  005360  6BF0               	clrf	240,b	;volatile
 12026                           
 12027                           ; BSR set to: 61
 12028                           ;mcc_generated_files/uart1.c: 104:  U1P3H = 0x00;
 12029  005362  6BF1               	clrf	241,b	;volatile
 12030                           
 12031                           ; BSR set to: 61
 12032                           ;mcc_generated_files/uart1.c: 107:  U1CON0 = 0xB0;
 12033  005364  0EB0               	movlw	176
 12034  005366  6FF2               	movwf	242,b	;volatile
 12035                           
 12036                           ; BSR set to: 61
 12037                           ;mcc_generated_files/uart1.c: 110:  U1CON1 = 0x80;
 12038  005368  0E80               	movlw	128
 12039  00536A  6FF3               	movwf	243,b	;volatile
 12040                           
 12041                           ; BSR set to: 61
 12042                           ;mcc_generated_files/uart1.c: 113:  U1CON2 = 0x00;
 12043  00536C  6BF4               	clrf	244,b	;volatile
 12044                           
 12045                           ; BSR set to: 61
 12046                           ;mcc_generated_files/uart1.c: 116:  U1BRGL = 0x82;
 12047  00536E  0E82               	movlw	130
 12048  005370  6FF5               	movwf	245,b	;volatile
 12049                           
 12050                           ; BSR set to: 61
 12051                           ;mcc_generated_files/uart1.c: 119:  U1BRGH = 0x06;
 12052  005372  0E06               	movlw	6
 12053  005374  6FF6               	movwf	246,b	;volatile
 12054                           
 12055                           ; BSR set to: 61
 12056                           ;mcc_generated_files/uart1.c: 122:  U1FIFO = 0x00;
 12057  005376  6BF7               	clrf	247,b	;volatile
 12058                           
 12059                           ; BSR set to: 61
 12060                           ;mcc_generated_files/uart1.c: 125:  U1UIR = 0x00;
 12061  005378  6BF8               	clrf	248,b	;volatile
 12062                           
 12063                           ; BSR set to: 61
 12064                           ;mcc_generated_files/uart1.c: 128:  U1ERRIR = 0x00;
 12065  00537A  6BF9               	clrf	249,b	;volatile
 12066                           
 12067                           ; BSR set to: 61
 12068                           ;mcc_generated_files/uart1.c: 131:  U1ERRIE = 0x00;
 12069  00537C  6BFA               	clrf	250,b	;volatile
 12070                           
 12071                           ; BSR set to: 61
 12072                           ;mcc_generated_files/uart1.c: 135:  uart1TxHead = 0;
 12073  00537E  6A3C               	clrf	_uart1TxHead,c	;volatile
 12074                           
 12075                           ; BSR set to: 61
 12076                           ;mcc_generated_files/uart1.c: 136:  uart1TxTail = 0;
 12077  005380  6A3B               	clrf	_uart1TxTail,c	;volatile
 12078                           
 12079                           ; BSR set to: 61
 12080                           ;mcc_generated_files/uart1.c: 137:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 12081  005382  0E40               	movlw	64
 12082  005384  6E3A               	movwf	_uart1TxBufferRemaining,c	;volatile
 12083                           
 12084                           ; BSR set to: 61
 12085                           ;mcc_generated_files/uart1.c: 138:  uart1RxHead = 0;
 12086  005386  6A39               	clrf	_uart1RxHead,c	;volatile
 12087                           
 12088                           ; BSR set to: 61
 12089                           ;mcc_generated_files/uart1.c: 139:  uart1RxTail = 0;
 12090  005388  6A38               	clrf	_uart1RxTail,c	;volatile
 12091                           
 12092                           ; BSR set to: 61
 12093                           ;mcc_generated_files/uart1.c: 140:  uart1RxCount = 0;
 12094  00538A  6A37               	clrf	_uart1RxCount,c	;volatile
 12095                           
 12096                           ; BSR set to: 61
 12097                           ;mcc_generated_files/uart1.c: 143:  PIE3bits.U1RXIE = 1;
 12098  00538C  0139               	movlb	57	; () banked
 12099  00538E  8793               	bsf	147,3,b	;volatile
 12100                           
 12101                           ; BSR set to: 57
 12102                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 12103  005390  0012               	return		;funcret
 12104  005392                     __end_of_UART1_Initialize:
 12105                           	opt callstack 0
 12106                           
 12107 ;; *************** function _UART1_SetTxInterruptHandler *****************
 12108 ;; Defined at:
 12109 ;;		line 244 in file "mcc_generated_files/uart1.c"
 12110 ;; Parameters:    Size  Location     Type
 12111 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12112 ;;		 -> UART1_Transmit_ISR(1), 
 12113 ;; Auto vars:     Size  Location     Type
 12114 ;;		None
 12115 ;; Return value:  Size  Location     Type
 12116 ;;                  1  [STACK] void 
 12117 ;; Registers used:
 12118 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12119 ;; Tracked objects:
 12120 ;;		On entry : 3F/39
 12121 ;;		On exit  : 0/0
 12122 ;;		Unchanged: 0/0
 12123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12127 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12128 ;;Total ram usage:        0 bytes
 12129 ;; Hardware stack levels used:    1
 12130 ;; Hardware stack levels required when called:    3
 12131 ;; This function calls:
 12132 ;;		Nothing
 12133 ;; This function is called by:
 12134 ;;		_UART1_Initialize
 12135 ;; This function uses a reentrant model
 12136 ;;
 12137                           
 12138                           	psect	text59
 12139  005AFA                     __ptext59:
 12140                           	opt callstack 0
 12141  005AFA                     _UART1_SetTxInterruptHandler:
 12142                           	opt callstack 25
 12143                           
 12144                           ;mcc_generated_files/uart1.c: 244: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 245: {;mcc_generated_files/uart1.c: 246:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 12145                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12146                           
 12147                           ; BSR set to: 57
 12148                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12149                           ;incstack = 0
 12150  005AFA  50E1               	movf	fsr1l,w,c
 12151  005AFC  0FFD               	addlw	-3
 12152  005AFE  6ED9               	movwf	fsr2l,c
 12153  005B00  50E2               	movf	fsr1h,w,c
 12154  005B02  6EDA               	movwf	fsr2h,c
 12155  005B04  0EFF               	movlw	255
 12156  005B06  22DA               	addwfc	fsr2h,f,c
 12157  005B08  006F FF78  F00D    	movff	postinc2,_UART1_TxInterruptHandler
 12158  005B0E  006F FF78  F00E    	movff	postinc2,_UART1_TxInterruptHandler+1
 12159  005B14  006F FF74  F00F    	movff	postdec2,_UART1_TxInterruptHandler+2
 12160                           
 12161                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 12162  005B1A  52E5               	movf	postdec1,f,c
 12163  005B1C  52E5               	movf	postdec1,f,c
 12164  005B1E  52E5               	movf	postdec1,f,c
 12165  005B20  0012               	return		;funcret
 12166  005B22                     __end_of_UART1_SetTxInterruptHandler:
 12167                           	opt callstack 0
 12168                           
 12169 ;; *************** function _UART1_SetRxInterruptHandler *****************
 12170 ;; Defined at:
 12171 ;;		line 239 in file "mcc_generated_files/uart1.c"
 12172 ;; Parameters:    Size  Location     Type
 12173 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12174 ;;		 -> UART1_Receive_ISR(1), 
 12175 ;; Auto vars:     Size  Location     Type
 12176 ;;		None
 12177 ;; Return value:  Size  Location     Type
 12178 ;;                  1  [STACK] void 
 12179 ;; Registers used:
 12180 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12181 ;; Tracked objects:
 12182 ;;		On entry : 3F/39
 12183 ;;		On exit  : 0/0
 12184 ;;		Unchanged: 0/0
 12185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12190 ;;Total ram usage:        0 bytes
 12191 ;; Hardware stack levels used:    1
 12192 ;; Hardware stack levels required when called:    3
 12193 ;; This function calls:
 12194 ;;		Nothing
 12195 ;; This function is called by:
 12196 ;;		_UART1_Initialize
 12197 ;; This function uses a reentrant model
 12198 ;;
 12199                           
 12200                           	psect	text60
 12201  005B22                     __ptext60:
 12202                           	opt callstack 0
 12203  005B22                     _UART1_SetRxInterruptHandler:
 12204                           	opt callstack 25
 12205                           
 12206                           ;mcc_generated_files/uart1.c: 239: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 240: {;mcc_generated_files/uart1.c: 241:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 12207                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12208                           
 12209                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12210                           ;incstack = 0
 12211  005B22  50E1               	movf	fsr1l,w,c
 12212  005B24  0FFD               	addlw	-3
 12213  005B26  6ED9               	movwf	fsr2l,c
 12214  005B28  50E2               	movf	fsr1h,w,c
 12215  005B2A  6EDA               	movwf	fsr2h,c
 12216  005B2C  0EFF               	movlw	255
 12217  005B2E  22DA               	addwfc	fsr2h,f,c
 12218  005B30  006F FF78  F010    	movff	postinc2,_UART1_RxInterruptHandler
 12219  005B36  006F FF78  F011    	movff	postinc2,_UART1_RxInterruptHandler+1
 12220  005B3C  006F FF74  F012    	movff	postdec2,_UART1_RxInterruptHandler+2
 12221                           
 12222                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 12223  005B42  52E5               	movf	postdec1,f,c
 12224  005B44  52E5               	movf	postdec1,f,c
 12225  005B46  52E5               	movf	postdec1,f,c
 12226  005B48  0012               	return		;funcret
 12227  005B4A                     __end_of_UART1_SetRxInterruptHandler:
 12228                           	opt callstack 0
 12229                           
 12230 ;; *************** function _TMR6_Initialize *****************
 12231 ;; Defined at:
 12232 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 12233 ;; Parameters:    Size  Location     Type
 12234 ;;		None
 12235 ;; Auto vars:     Size  Location     Type
 12236 ;;		None
 12237 ;; Return value:  Size  Location     Type
 12238 ;;                  1  [STACK] void 
 12239 ;; Registers used:
 12240 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 12241 ;; Tracked objects:
 12242 ;;		On entry : 3F/39
 12243 ;;		On exit  : 0/0
 12244 ;;		Unchanged: 0/0
 12245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12250 ;;Total ram usage:        0 bytes
 12251 ;; Hardware stack levels used:    1
 12252 ;; Hardware stack levels required when called:    4
 12253 ;; This function calls:
 12254 ;;		_TMR6_SetInterruptHandler
 12255 ;; This function is called by:
 12256 ;;		_SYSTEM_Initialize
 12257 ;; This function uses a reentrant model
 12258 ;;
 12259                           
 12260                           	psect	text61
 12261  005B4A                     __ptext61:
 12262                           	opt callstack 0
 12263  005B4A                     _TMR6_Initialize:
 12264                           	opt callstack 25
 12265                           
 12266                           ;mcc_generated_files/tmr6.c: 75:  T6CLKCON = 0x01;
 12267                           
 12268                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12269                           ;incstack = 0
 12270  005B4A  0E01               	movlw	1
 12271  005B4C  6E96               	movwf	16278,c	;volatile
 12272                           
 12273                           ;mcc_generated_files/tmr6.c: 78:  T6HLT = 0x00;
 12274  005B4E  6A95               	clrf	16277,c	;volatile
 12275                           
 12276                           ;mcc_generated_files/tmr6.c: 81:  T6RST = 0x00;
 12277  005B50  6A97               	clrf	16279,c	;volatile
 12278                           
 12279                           ;mcc_generated_files/tmr6.c: 84:  T6PR = 0x03;
 12280  005B52  0E03               	movlw	3
 12281  005B54  6E93               	movwf	16275,c	;volatile
 12282                           
 12283                           ;mcc_generated_files/tmr6.c: 87:  T6TMR = 0x00;
 12284  005B56  6A92               	clrf	16274,c	;volatile
 12285                           
 12286                           ;mcc_generated_files/tmr6.c: 90:  PIR9bits.TMR6IF = 0;
 12287  005B58  0139               	movlb	57	; () banked
 12288  005B5A  91A9               	bcf	169,0,b	;volatile
 12289                           
 12290                           ; BSR set to: 57
 12291                           ;mcc_generated_files/tmr6.c: 93:  PIE9bits.TMR6IE = 1;
 12292  005B5C  8199               	bsf	153,0,b	;volatile
 12293                           
 12294                           ; BSR set to: 57
 12295                           ;mcc_generated_files/tmr6.c: 96:  TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler)
      +                          ;
 12296  005B5E  0E72               	movlw	low _TMR6_DefaultInterruptHandler
 12297  005B60  6EE6               	movwf	postinc1,c
 12298  005B62  0E56               	movlw	high _TMR6_DefaultInterruptHandler
 12299  005B64  6EE6               	movwf	postinc1,c
 12300  005B66  0E00               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 12301  005B68  6EE6               	movwf	postinc1,c
 12302  005B6A  ECB9  F02D         	call	_TMR6_SetInterruptHandler	;wreg free
 12303                           
 12304                           ;mcc_generated_files/tmr6.c: 99:  T6CON = 0xFF;
 12305  005B6E  6894               	setf	16276,c	;volatile
 12306                           
 12307                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 12308  005B70  0012               	return		;funcret
 12309  005B72                     __end_of_TMR6_Initialize:
 12310                           	opt callstack 0
 12311                           
 12312 ;; *************** function _TMR6_SetInterruptHandler *****************
 12313 ;; Defined at:
 12314 ;;		line 191 in file "mcc_generated_files/tmr6.c"
 12315 ;; Parameters:    Size  Location     Type
 12316 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12317 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 12318 ;; Auto vars:     Size  Location     Type
 12319 ;;		None
 12320 ;; Return value:  Size  Location     Type
 12321 ;;                  1  [STACK] void 
 12322 ;; Registers used:
 12323 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12324 ;; Tracked objects:
 12325 ;;		On entry : 3F/39
 12326 ;;		On exit  : 0/0
 12327 ;;		Unchanged: 0/0
 12328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12332 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12333 ;;Total ram usage:        0 bytes
 12334 ;; Hardware stack levels used:    1
 12335 ;; Hardware stack levels required when called:    3
 12336 ;; This function calls:
 12337 ;;		Nothing
 12338 ;; This function is called by:
 12339 ;;		_TMR6_Initialize
 12340 ;; This function uses a reentrant model
 12341 ;;
 12342                           
 12343                           	psect	text62
 12344  005B72                     __ptext62:
 12345                           	opt callstack 0
 12346  005B72                     _TMR6_SetInterruptHandler:
 12347                           	opt callstack 25
 12348                           
 12349                           ;mcc_generated_files/tmr6.c: 191: void TMR6_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr6.c: 192: {;mcc_generated_files/tmr6.c: 193:  TMR6_Inter
      +                          ruptHandler = InterruptHandler;
 12350                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12351                           
 12352                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12353                           ;incstack = 0
 12354  005B72  50E1               	movf	fsr1l,w,c
 12355  005B74  0FFD               	addlw	-3
 12356  005B76  6ED9               	movwf	fsr2l,c
 12357  005B78  50E2               	movf	fsr1h,w,c
 12358  005B7A  6EDA               	movwf	fsr2h,c
 12359  005B7C  0EFF               	movlw	255
 12360  005B7E  22DA               	addwfc	fsr2h,f,c
 12361  005B80  006F FF78  F007    	movff	postinc2,_TMR6_InterruptHandler
 12362  005B86  006F FF78  F008    	movff	postinc2,_TMR6_InterruptHandler+1
 12363  005B8C  006F FF74  F009    	movff	postdec2,_TMR6_InterruptHandler+2
 12364                           
 12365                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 12366  005B92  52E5               	movf	postdec1,f,c
 12367  005B94  52E5               	movf	postdec1,f,c
 12368  005B96  52E5               	movf	postdec1,f,c
 12369  005B98  0012               	return		;funcret
 12370  005B9A                     __end_of_TMR6_SetInterruptHandler:
 12371                           	opt callstack 0
 12372                           
 12373 ;; *************** function _TMR5_Initialize *****************
 12374 ;; Defined at:
 12375 ;;		line 66 in file "mcc_generated_files/tmr5.c"
 12376 ;; Parameters:    Size  Location     Type
 12377 ;;		None
 12378 ;; Auto vars:     Size  Location     Type
 12379 ;;		None
 12380 ;; Return value:  Size  Location     Type
 12381 ;;                  1  [STACK] void 
 12382 ;; Registers used:
 12383 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 12384 ;; Tracked objects:
 12385 ;;		On entry : 3F/3C
 12386 ;;		On exit  : 0/0
 12387 ;;		Unchanged: 0/0
 12388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12393 ;;Total ram usage:        0 bytes
 12394 ;; Hardware stack levels used:    1
 12395 ;; Hardware stack levels required when called:    4
 12396 ;; This function calls:
 12397 ;;		_TMR5_SetInterruptHandler
 12398 ;; This function is called by:
 12399 ;;		_SYSTEM_Initialize
 12400 ;; This function uses a reentrant model
 12401 ;;
 12402                           
 12403                           	psect	text63
 12404  00562C                     __ptext63:
 12405                           	opt callstack 0
 12406  00562C                     _TMR5_Initialize:
 12407                           	opt callstack 25
 12408                           
 12409                           ;mcc_generated_files/tmr5.c: 71:  T5GCON = 0x00;
 12410                           
 12411                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12412                           ;incstack = 0
 12413  00562C  6A9B               	clrf	16283,c	;volatile
 12414                           
 12415                           ;mcc_generated_files/tmr5.c: 74:  T5GATE = 0x00;
 12416  00562E  6A9C               	clrf	16284,c	;volatile
 12417                           
 12418                           ;mcc_generated_files/tmr5.c: 77:  T5CLK = 0x01;
 12419  005630  0E01               	movlw	1
 12420  005632  6E9D               	movwf	16285,c	;volatile
 12421                           
 12422                           ;mcc_generated_files/tmr5.c: 80:  TMR5H = 0x63;
 12423  005634  0E63               	movlw	99
 12424  005636  6E99               	movwf	16281,c	;volatile
 12425                           
 12426                           ;mcc_generated_files/tmr5.c: 83:  TMR5L = 0xC0;
 12427  005638  0EC0               	movlw	192
 12428  00563A  6E98               	movwf	16280,c	;volatile
 12429                           
 12430                           ;mcc_generated_files/tmr5.c: 86:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 12431  00563C  5098               	movf	16280,w,c	;volatile
 12432  00563E  006F FE64  F03D    	movff	16281,btemp	;volatile
 12433  005644  6A3E               	clrf	btemp+1,c
 12434  005646  0060  F0F4  F03E   	movff	btemp,btemp+1
 12435  00564C  6A3D               	clrf	btemp,c
 12436  00564E  103D               	iorwf	btemp,w,c
 12437  005650  6E2E               	movwf	_timer5ReloadVal,c	;volatile
 12438  005652  503E               	movf	btemp+1,w,c
 12439  005654  6E2F               	movwf	_timer5ReloadVal+1,c	;volatile
 12440                           
 12441                           ;mcc_generated_files/tmr5.c: 89:  PIR8bits.TMR5IF = 0;
 12442  005656  0139               	movlb	57	; () banked
 12443  005658  9DA8               	bcf	168,6,b	;volatile
 12444                           
 12445                           ; BSR set to: 57
 12446                           ;mcc_generated_files/tmr5.c: 92:  PIE8bits.TMR5IE = 1;
 12447  00565A  8D98               	bsf	152,6,b	;volatile
 12448                           
 12449                           ; BSR set to: 57
 12450                           ;mcc_generated_files/tmr5.c: 95:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 12451  00565C  0ED6               	movlw	low _TMR5_DefaultInterruptHandler
 12452  00565E  6EE6               	movwf	postinc1,c
 12453  005660  0E5E               	movlw	high _TMR5_DefaultInterruptHandler
 12454  005662  6EE6               	movwf	postinc1,c
 12455  005664  0E00               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 12456  005666  6EE6               	movwf	postinc1,c
 12457  005668  ECCD  F02D         	call	_TMR5_SetInterruptHandler	;wreg free
 12458                           
 12459                           ;mcc_generated_files/tmr5.c: 98:  T5CON = 0x31;
 12460  00566C  0E31               	movlw	49
 12461  00566E  6E9A               	movwf	16282,c	;volatile
 12462                           
 12463                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 12464  005670  0012               	return		;funcret
 12465  005672                     __end_of_TMR5_Initialize:
 12466                           	opt callstack 0
 12467                           
 12468 ;; *************** function _TMR5_SetInterruptHandler *****************
 12469 ;; Defined at:
 12470 ;;		line 189 in file "mcc_generated_files/tmr5.c"
 12471 ;; Parameters:    Size  Location     Type
 12472 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12473 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 12474 ;; Auto vars:     Size  Location     Type
 12475 ;;		None
 12476 ;; Return value:  Size  Location     Type
 12477 ;;                  1  [STACK] void 
 12478 ;; Registers used:
 12479 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12480 ;; Tracked objects:
 12481 ;;		On entry : 3F/39
 12482 ;;		On exit  : 0/0
 12483 ;;		Unchanged: 0/0
 12484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12489 ;;Total ram usage:        0 bytes
 12490 ;; Hardware stack levels used:    1
 12491 ;; Hardware stack levels required when called:    3
 12492 ;; This function calls:
 12493 ;;		Nothing
 12494 ;; This function is called by:
 12495 ;;		_TMR5_Initialize
 12496 ;; This function uses a reentrant model
 12497 ;;
 12498                           
 12499                           	psect	text64
 12500  005B9A                     __ptext64:
 12501                           	opt callstack 0
 12502  005B9A                     _TMR5_SetInterruptHandler:
 12503                           	opt callstack 25
 12504                           
 12505                           ;mcc_generated_files/tmr5.c: 189: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 190: {;mcc_generated_files/tmr5.c: 191:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 12506                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12507                           
 12508                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12509                           ;incstack = 0
 12510  005B9A  50E1               	movf	fsr1l,w,c
 12511  005B9C  0FFD               	addlw	-3
 12512  005B9E  6ED9               	movwf	fsr2l,c
 12513  005BA0  50E2               	movf	fsr1h,w,c
 12514  005BA2  6EDA               	movwf	fsr2h,c
 12515  005BA4  0EFF               	movlw	255
 12516  005BA6  22DA               	addwfc	fsr2h,f,c
 12517  005BA8  006F FF78  F004    	movff	postinc2,_TMR5_InterruptHandler
 12518  005BAE  006F FF78  F005    	movff	postinc2,_TMR5_InterruptHandler+1
 12519  005BB4  006F FF74  F006    	movff	postdec2,_TMR5_InterruptHandler+2
 12520                           
 12521                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 12522  005BBA  52E5               	movf	postdec1,f,c
 12523  005BBC  52E5               	movf	postdec1,f,c
 12524  005BBE  52E5               	movf	postdec1,f,c
 12525  005BC0  0012               	return		;funcret
 12526  005BC2                     __end_of_TMR5_SetInterruptHandler:
 12527                           	opt callstack 0
 12528                           
 12529 ;; *************** function _SPI1_Initialize *****************
 12530 ;; Defined at:
 12531 ;;		line 64 in file "mcc_generated_files/spi1.c"
 12532 ;; Parameters:    Size  Location     Type
 12533 ;;		None
 12534 ;; Auto vars:     Size  Location     Type
 12535 ;;		None
 12536 ;; Return value:  Size  Location     Type
 12537 ;;                  1  [STACK] void 
 12538 ;; Registers used:
 12539 ;;		wreg, status,2
 12540 ;; Tracked objects:
 12541 ;;		On entry : 3F/39
 12542 ;;		On exit  : 3F/3D
 12543 ;;		Unchanged: 0/0
 12544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12548 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12549 ;;Total ram usage:        0 bytes
 12550 ;; Hardware stack levels used:    1
 12551 ;; Hardware stack levels required when called:    3
 12552 ;; This function calls:
 12553 ;;		Nothing
 12554 ;; This function is called by:
 12555 ;;		_SYSTEM_Initialize
 12556 ;; This function uses a reentrant model
 12557 ;;
 12558                           
 12559                           	psect	text65
 12560  005EF0                     __ptext65:
 12561                           	opt callstack 0
 12562  005EF0                     _SPI1_Initialize:
 12563                           	opt callstack 26
 12564                           
 12565                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 12566                           
 12567                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12568                           ;incstack = 0
 12569  005EF0  0E40               	movlw	64
 12570  005EF2  013D               	movlb	61	; () banked
 12571  005EF4  6F15               	movwf	21,b	;volatile
 12572                           
 12573                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 12574  005EF6  0E03               	movlw	3
 12575  005EF8  6F16               	movwf	22,b	;volatile
 12576                           
 12577                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 12578  005EFA  0E4F               	movlw	79
 12579  005EFC  6F19               	movwf	25,b	;volatile
 12580                           
 12581                           ; BSR set to: 61
 12582                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 12583  005EFE  6B1C               	clrf	28,b	;volatile
 12584                           
 12585                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 12586  005F00  0E83               	movlw	131
 12587  005F02  6F14               	movwf	20,b	;volatile
 12588                           
 12589                           ; BSR set to: 61
 12590                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 12591  005F04  0012               	return		;funcret
 12592  005F06                     __end_of_SPI1_Initialize:
 12593                           	opt callstack 0
 12594                           
 12595 ;; *************** function _PMD_Initialize *****************
 12596 ;; Defined at:
 12597 ;;		line 88 in file "mcc_generated_files/mcc.c"
 12598 ;; Parameters:    Size  Location     Type
 12599 ;;		None
 12600 ;; Auto vars:     Size  Location     Type
 12601 ;;		None
 12602 ;; Return value:  Size  Location     Type
 12603 ;;                  1  [STACK] void 
 12604 ;; Registers used:
 12605 ;;		None
 12606 ;; Tracked objects:
 12607 ;;		On entry : 3F/39
 12608 ;;		On exit  : 3F/39
 12609 ;;		Unchanged: 0/0
 12610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12615 ;;Total ram usage:        0 bytes
 12616 ;; Hardware stack levels used:    1
 12617 ;; Hardware stack levels required when called:    3
 12618 ;; This function calls:
 12619 ;;		Nothing
 12620 ;; This function is called by:
 12621 ;;		_SYSTEM_Initialize
 12622 ;; This function uses a reentrant model
 12623 ;;
 12624                           
 12625                           	psect	text66
 12626  005F1C                     __ptext66:
 12627                           	opt callstack 0
 12628  005F1C                     _PMD_Initialize:
 12629                           	opt callstack 26
 12630                           
 12631                           ;mcc_generated_files/mcc.c: 91:     PMD0 = 0x00;
 12632                           
 12633                           ; BSR set to: 61
 12634                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12635                           ;incstack = 0
 12636  005F1C  0139               	movlb	57	; () banked
 12637  005F1E  6BC0               	clrf	192,b	;volatile
 12638                           
 12639                           ;mcc_generated_files/mcc.c: 93:     PMD1 = 0x00;
 12640  005F20  6BC1               	clrf	193,b	;volatile
 12641                           
 12642                           ;mcc_generated_files/mcc.c: 95:     PMD2 = 0x00;
 12643  005F22  6BC2               	clrf	194,b	;volatile
 12644                           
 12645                           ;mcc_generated_files/mcc.c: 97:     PMD3 = 0x00;
 12646  005F24  6BC3               	clrf	195,b	;volatile
 12647                           
 12648                           ;mcc_generated_files/mcc.c: 99:     PMD4 = 0x00;
 12649  005F26  6BC4               	clrf	196,b	;volatile
 12650                           
 12651                           ;mcc_generated_files/mcc.c: 101:     PMD5 = 0x00;
 12652  005F28  6BC5               	clrf	197,b	;volatile
 12653                           
 12654                           ;mcc_generated_files/mcc.c: 103:     PMD6 = 0x00;
 12655  005F2A  6BC6               	clrf	198,b	;volatile
 12656                           
 12657                           ;mcc_generated_files/mcc.c: 105:     PMD7 = 0x00;
 12658  005F2C  6BC7               	clrf	199,b	;volatile
 12659                           
 12660                           ; BSR set to: 57
 12661                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 12662  005F2E  0012               	return		;funcret
 12663  005F30                     __end_of_PMD_Initialize:
 12664                           	opt callstack 0
 12665                           
 12666 ;; *************** function _PIN_MANAGER_Initialize *****************
 12667 ;; Defined at:
 12668 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 12669 ;; Parameters:    Size  Location     Type
 12670 ;;		None
 12671 ;; Auto vars:     Size  Location     Type
 12672 ;;		None
 12673 ;; Return value:  Size  Location     Type
 12674 ;;                  1  [STACK] void 
 12675 ;; Registers used:
 12676 ;;		wreg, status,2
 12677 ;; Tracked objects:
 12678 ;;		On entry : 3F/39
 12679 ;;		On exit  : 3F/3A
 12680 ;;		Unchanged: 0/0
 12681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12686 ;;Total ram usage:        0 bytes
 12687 ;; Hardware stack levels used:    1
 12688 ;; Hardware stack levels required when called:    3
 12689 ;; This function calls:
 12690 ;;		Nothing
 12691 ;; This function is called by:
 12692 ;;		_SYSTEM_Initialize
 12693 ;; This function uses a reentrant model
 12694 ;;
 12695                           
 12696                           	psect	text67
 12697  004E1E                     __ptext67:
 12698                           	opt callstack 0
 12699  004E1E                     _PIN_MANAGER_Initialize:
 12700                           	opt callstack 26
 12701                           
 12702                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 12703                           
 12704                           ; BSR set to: 57
 12705                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12706                           ;incstack = 0
 12707  004E1E  0E07               	movlw	7
 12708  004E20  6EBE               	movwf	16318,c	;volatile
 12709                           
 12710                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 12711  004E22  6ABD               	clrf	16317,c	;volatile
 12712                           
 12713                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 12714  004E24  6ABA               	clrf	16314,c	;volatile
 12715                           
 12716                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 12717  004E26  6ABF               	clrf	16319,c	;volatile
 12718                           
 12719                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 12720  004E28  6ABB               	clrf	16315,c	;volatile
 12721                           
 12722                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x06;
 12723  004E2A  0E06               	movlw	6
 12724  004E2C  6EBC               	movwf	16316,c	;volatile
 12725                           
 12726                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 12727  004E2E  6AC6               	clrf	16326,c	;volatile
 12728                           
 12729                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0xFF;
 12730  004E30  68C7               	setf	16327,c	;volatile
 12731                           
 12732                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0x8F;
 12733  004E32  0E8F               	movlw	143
 12734  004E34  6EC2               	movwf	16322,c	;volatile
 12735                           
 12736                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 12737  004E36  0EBF               	movlw	191
 12738  004E38  6EC3               	movwf	16323,c	;volatile
 12739                           
 12740                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x91;
 12741  004E3A  0E91               	movlw	145
 12742  004E3C  6EC4               	movwf	16324,c	;volatile
 12743                           
 12744                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0xFC;
 12745  004E3E  0EFC               	movlw	252
 12746  004E40  6EC5               	movwf	16325,c	;volatile
 12747                           
 12748                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0xF0;
 12749  004E42  0EF0               	movlw	240
 12750  004E44  013A               	movlb	58	; () banked
 12751  004E46  6F70               	movwf	112,b	;volatile
 12752                           
 12753                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x01;
 12754  004E48  0E01               	movlw	1
 12755  004E4A  6F60               	movwf	96,b	;volatile
 12756                           
 12757                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x38;
 12758  004E4C  0E38               	movlw	56
 12759  004E4E  6F50               	movwf	80,b	;volatile
 12760                           
 12761                           ; BSR set to: 58
 12762                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 12763  004E50  6B80               	clrf	128,b	;volatile
 12764                           
 12765                           ; BSR set to: 58
 12766                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0xFF;
 12767  004E52  6990               	setf	144,b	;volatile
 12768                           
 12769                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0x8F;
 12770  004E54  0E8F               	movlw	143
 12771  004E56  6F40               	movwf	64,b	;volatile
 12772                           
 12773                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 12774  004E58  0E0C               	movlw	12
 12775  004E5A  6F71               	movwf	113,b	;volatile
 12776                           
 12777                           ; BSR set to: 58
 12778                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x00;
 12779  004E5C  6B91               	clrf	145,b	;volatile
 12780                           
 12781                           ; BSR set to: 58
 12782                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 12783  004E5E  6B81               	clrf	129,b	;volatile
 12784                           
 12785                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x87;
 12786  004E60  0E87               	movlw	135
 12787  004E62  6F51               	movwf	81,b	;volatile
 12788                           
 12789                           ; BSR set to: 58
 12790                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 12791  004E64  6B41               	clrf	65,b	;volatile
 12792                           
 12793                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x90;
 12794  004E66  0E90               	movlw	144
 12795  004E68  6F61               	movwf	97,b	;volatile
 12796                           
 12797                           ; BSR set to: 58
 12798                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 12799  004E6A  6B82               	clrf	130,b	;volatile
 12800                           
 12801                           ; BSR set to: 58
 12802                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 12803  004E6C  6B92               	clrf	146,b	;volatile
 12804                           
 12805                           ; BSR set to: 58
 12806                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 12807  004E6E  6B42               	clrf	66,b	;volatile
 12808                           
 12809                           ; BSR set to: 58
 12810                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 12811  004E70  6B52               	clrf	82,b	;volatile
 12812                           
 12813                           ; BSR set to: 58
 12814                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 12815  004E72  6B62               	clrf	98,b	;volatile
 12816                           
 12817                           ; BSR set to: 58
 12818                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 12819  004E74  6B72               	clrf	114,b	;volatile
 12820                           
 12821                           ; BSR set to: 58
 12822                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 12823  004E76  6943               	setf	67,b	;volatile
 12824                           
 12825                           ; BSR set to: 58
 12826                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 12827  004E78  6953               	setf	83,b	;volatile
 12828                           
 12829                           ; BSR set to: 58
 12830                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 12831  004E7A  6963               	setf	99,b	;volatile
 12832                           
 12833                           ; BSR set to: 58
 12834                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 12835  004E7C  6973               	setf	115,b	;volatile
 12836                           
 12837                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 12838  004E7E  0E07               	movlw	7
 12839  004E80  6F83               	movwf	131,b	;volatile
 12840                           
 12841                           ; BSR set to: 58
 12842                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 12843  004E82  6993               	setf	147,b	;volatile
 12844                           
 12845                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 12846  004E84  0E0F               	movlw	15
 12847  004E86  6FE8               	movwf	232,b	;volatile
 12848                           
 12849                           ;mcc_generated_files/pin_manager.c: 127:     RB6PPS = 0x16;
 12850  004E88  0E16               	movlw	22
 12851  004E8A  6F0E               	movwf	14,b	;volatile
 12852                           
 12853                           ;mcc_generated_files/pin_manager.c: 128:     RC3PPS = 0x1E;
 12854  004E8C  0E1E               	movlw	30
 12855  004E8E  6F13               	movwf	19,b	;volatile
 12856                           
 12857                           ;mcc_generated_files/pin_manager.c: 129:     INT0PPS = 0x08;
 12858  004E90  0E08               	movlw	8
 12859  004E92  6FC0               	movwf	192,b	;volatile
 12860                           
 12861                           ;mcc_generated_files/pin_manager.c: 130:     INT2PPS = 0x0A;
 12862  004E94  0E0A               	movlw	10
 12863  004E96  6FC2               	movwf	194,b	;volatile
 12864                           
 12865                           ;mcc_generated_files/pin_manager.c: 131:     INT1PPS = 0x09;
 12866  004E98  0E09               	movlw	9
 12867  004E9A  6FC1               	movwf	193,b	;volatile
 12868                           
 12869                           ;mcc_generated_files/pin_manager.c: 132:     U1RXPPS = 0x17;
 12870  004E9C  0E17               	movlw	23
 12871  004E9E  6FE5               	movwf	229,b	;volatile
 12872                           
 12873                           ;mcc_generated_files/pin_manager.c: 133:     SPI1SCKPPS = 0x13;
 12874  004EA0  0E13               	movlw	19
 12875  004EA2  6FDE               	movwf	222,b	;volatile
 12876                           
 12877                           ;mcc_generated_files/pin_manager.c: 134:     RA4PPS = 0x01;
 12878  004EA4  0E01               	movlw	1
 12879  004EA6  6F04               	movwf	4,b	;volatile
 12880                           
 12881                           ;mcc_generated_files/pin_manager.c: 135:     RA5PPS = 0x26;
 12882  004EA8  0E26               	movlw	38
 12883  004EAA  6F05               	movwf	5,b	;volatile
 12884                           
 12885                           ;mcc_generated_files/pin_manager.c: 136:     RA6PPS = 0x28;
 12886  004EAC  0E28               	movlw	40
 12887  004EAE  6F06               	movwf	6,b	;volatile
 12888                           
 12889                           ;mcc_generated_files/pin_manager.c: 137:     RC5PPS = 0x1F;
 12890  004EB0  0E1F               	movlw	31
 12891  004EB2  6F15               	movwf	21,b	;volatile
 12892                           
 12893                           ;mcc_generated_files/pin_manager.c: 138:     RC6PPS = 0x13;
 12894  004EB4  0E13               	movlw	19
 12895  004EB6  6F16               	movwf	22,b	;volatile
 12896                           
 12897                           ;mcc_generated_files/pin_manager.c: 139:     SPI1SDIPPS = 0x14;
 12898  004EB8  0E14               	movlw	20
 12899  004EBA  6FDF               	movwf	223,b	;volatile
 12900                           
 12901                           ; BSR set to: 58
 12902                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 12903  004EBC  0012               	return		;funcret
 12904  004EBE                     __end_of_PIN_MANAGER_Initialize:
 12905                           	opt callstack 0
 12906                           
 12907 ;; *************** function _OSCILLATOR_Initialize *****************
 12908 ;; Defined at:
 12909 ;;		line 70 in file "mcc_generated_files/mcc.c"
 12910 ;; Parameters:    Size  Location     Type
 12911 ;;		None
 12912 ;; Auto vars:     Size  Location     Type
 12913 ;;		None
 12914 ;; Return value:  Size  Location     Type
 12915 ;;                  1  [STACK] void 
 12916 ;; Registers used:
 12917 ;;		wreg, status,2
 12918 ;; Tracked objects:
 12919 ;;		On entry : 3F/3A
 12920 ;;		On exit  : 3F/39
 12921 ;;		Unchanged: 0/0
 12922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12927 ;;Total ram usage:        0 bytes
 12928 ;; Hardware stack levels used:    1
 12929 ;; Hardware stack levels required when called:    3
 12930 ;; This function calls:
 12931 ;;		Nothing
 12932 ;; This function is called by:
 12933 ;;		_SYSTEM_Initialize
 12934 ;; This function uses a reentrant model
 12935 ;;
 12936                           
 12937                           	psect	text68
 12938  005F06                     __ptext68:
 12939                           	opt callstack 0
 12940  005F06                     _OSCILLATOR_Initialize:
 12941                           	opt callstack 26
 12942                           
 12943                           ;mcc_generated_files/mcc.c: 73:     OSCCON1 = 0x20;
 12944                           
 12945                           ; BSR set to: 58
 12946                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12947                           ;incstack = 0
 12948  005F06  0E20               	movlw	32
 12949  005F08  0139               	movlb	57	; () banked
 12950  005F0A  6FD9               	movwf	217,b	;volatile
 12951                           
 12952                           ; BSR set to: 57
 12953                           ;mcc_generated_files/mcc.c: 75:     OSCCON3 = 0x00;
 12954  005F0C  6BDB               	clrf	219,b	;volatile
 12955                           
 12956                           ; BSR set to: 57
 12957                           ;mcc_generated_files/mcc.c: 77:     OSCEN = 0x00;
 12958  005F0E  6BDD               	clrf	221,b	;volatile
 12959                           
 12960                           ;mcc_generated_files/mcc.c: 79:     OSCFRQ = 0x02;
 12961  005F10  0E02               	movlw	2
 12962  005F12  6FDF               	movwf	223,b	;volatile
 12963                           
 12964                           ; BSR set to: 57
 12965                           ;mcc_generated_files/mcc.c: 81:     OSCTUNE = 0x00;
 12966  005F14  6BDE               	clrf	222,b	;volatile
 12967  005F16                     l194:
 12968                           
 12969                           ; BSR set to: 57
 12970                           ;mcc_generated_files/mcc.c: 83:     while(PLLR == 0)
 12971  005F16  B1DC               	btfsc	220,0,b	;volatile
 12972  005F18  0012               	return	
 12973  005F1A  D7FD               	goto	l194
 12974  005F1C                     __end_of_OSCILLATOR_Initialize:
 12975                           	opt callstack 0
 12976                           
 12977 ;; *************** function _NCO1_Initialize *****************
 12978 ;; Defined at:
 12979 ;;		line 58 in file "mcc_generated_files/nco1.c"
 12980 ;; Parameters:    Size  Location     Type
 12981 ;;		None
 12982 ;; Auto vars:     Size  Location     Type
 12983 ;;		None
 12984 ;; Return value:  Size  Location     Type
 12985 ;;                  1  [STACK] void 
 12986 ;; Registers used:
 12987 ;;		wreg, status,2
 12988 ;; Tracked objects:
 12989 ;;		On entry : 0/39
 12990 ;;		On exit  : 3F/3F
 12991 ;;		Unchanged: 0/0
 12992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12997 ;;Total ram usage:        0 bytes
 12998 ;; Hardware stack levels used:    1
 12999 ;; Hardware stack levels required when called:    3
 13000 ;; This function calls:
 13001 ;;		Nothing
 13002 ;; This function is called by:
 13003 ;;		_SYSTEM_Initialize
 13004 ;; This function uses a reentrant model
 13005 ;;
 13006                           
 13007                           	psect	text69
 13008  005E6A                     __ptext69:
 13009                           	opt callstack 0
 13010  005E6A                     _NCO1_Initialize:
 13011                           	opt callstack 26
 13012                           
 13013                           ;mcc_generated_files/nco1.c: 62:     NCO1CON = 0x00;
 13014                           
 13015                           ; BSR set to: 57
 13016                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13017                           ;incstack = 0
 13018  005E6A  013F               	movlb	63	; () banked
 13019  005E6C  6B3E               	clrf	62,b	;volatile
 13020                           
 13021                           ;mcc_generated_files/nco1.c: 64:     NCO1CLK = 0x00;
 13022  005E6E  6B3F               	clrf	63,b	;volatile
 13023                           
 13024                           ;mcc_generated_files/nco1.c: 66:     NCO1ACCU = 0x00;
 13025  005E70  6B3A               	clrf	58,b	;volatile
 13026                           
 13027                           ;mcc_generated_files/nco1.c: 68:     NCO1ACCH = 0x00;
 13028  005E72  6B39               	clrf	57,b	;volatile
 13029                           
 13030                           ;mcc_generated_files/nco1.c: 70:     NCO1ACCL = 0x00;
 13031  005E74  6B38               	clrf	56,b	;volatile
 13032                           
 13033                           ; BSR set to: 63
 13034                           ;mcc_generated_files/nco1.c: 72:     NCO1INCU = 0x06;
 13035  005E76  0E06               	movlw	6
 13036  005E78  6F3D               	movwf	61,b	;volatile
 13037                           
 13038                           ;mcc_generated_files/nco1.c: 74:     NCO1INCH = 0xC7;
 13039  005E7A  0EC7               	movlw	199
 13040  005E7C  6F3C               	movwf	60,b	;volatile
 13041                           
 13042                           ;mcc_generated_files/nco1.c: 76:     NCO1INCL = 0xAE;
 13043  005E7E  0EAE               	movlw	174
 13044  005E80  6F3B               	movwf	59,b	;volatile
 13045                           
 13046                           ; BSR set to: 63
 13047                           ;mcc_generated_files/nco1.c: 79:     NCO1CONbits.EN = 1;
 13048  005E82  8F3E               	bsf	62,7,b	;volatile
 13049                           
 13050                           ; BSR set to: 63
 13051                           ; _NCO1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 13052  005E84  0012               	return		;funcret
 13053  005E86                     __end_of_NCO1_Initialize:
 13054                           	opt callstack 0
 13055                           
 13056 ;; *************** function _INTERRUPT_Initialize *****************
 13057 ;; Defined at:
 13058 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 13059 ;; Parameters:    Size  Location     Type
 13060 ;;		None
 13061 ;; Auto vars:     Size  Location     Type
 13062 ;;  state           1  [STACK] _Bool 
 13063 ;; Return value:  Size  Location     Type
 13064 ;;                  1  [STACK] void 
 13065 ;; Registers used:
 13066 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 13067 ;; Tracked objects:
 13068 ;;		On entry : 0/0
 13069 ;;		On exit  : 3F/39
 13070 ;;		Unchanged: 0/0
 13071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13075 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13076 ;;Total ram usage:        0 bytes
 13077 ;; Hardware stack levels used:    1
 13078 ;; Hardware stack levels required when called:    3
 13079 ;; This function calls:
 13080 ;;		Nothing
 13081 ;; This function is called by:
 13082 ;;		_SYSTEM_Initialize
 13083 ;; This function uses a reentrant model
 13084 ;;
 13085                           
 13086                           	psect	text70
 13087  0052C8                     __ptext70:
 13088                           	opt callstack 0
 13089  0052C8                     _INTERRUPT_Initialize:
 13090                           	opt callstack 0
 13091                           
 13092                           ; BSR set to: 63
 13093                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13094  0052C8  52E6               	movf	postinc1,f,c
 13095                           
 13096                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 13097                           
 13098                           ;incstack = 0
 13099  0052CA  8AD2               	bsf	16338,5,c	;volatile
 13100                           
 13101                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 13102  0052CC  AED2               	btfss	16338,7,c	;volatile
 13103  0052CE  D003               	goto	u3340
 13104  0052D0  6A48               	clrf	btemp+11,c
 13105  0052D2  2A48               	incf	btemp+11,f,c
 13106  0052D4  D001               	goto	u3358
 13107  0052D6                     u3340:
 13108  0052D6  6A48               	clrf	btemp+11,c
 13109  0052D8                     u3358:
 13110                           
 13111                           ;stkvar	_state @ sp[(-1)+0]
 13112  0052D8  0EFF               	movlw	-1
 13113  0052DA  0060  F123  FFE3   	movff	btemp+11,plusw1
 13114                           
 13115                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 13116  0052E0  9ED2               	bcf	16338,7,c	;volatile
 13117                           
 13118                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 13119  0052E2  0E55               	movlw	85
 13120  0052E4  6ED4               	movwf	16340,c	;volatile
 13121                           
 13122                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 13123  0052E6  0EAA               	movlw	170
 13124  0052E8  6ED4               	movwf	16340,c	;volatile
 13125                           
 13126                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 13127  0052EA  90D4               	bcf	16340,0,c	;volatile
 13128                           
 13129                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 13130  0052EC  0138               	movlb	56	; () banked
 13131  0052EE  6B9F               	clrf	159,b	;volatile
 13132                           
 13133                           ; BSR set to: 56
 13134                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 13135  0052F0  6B9E               	clrf	158,b	;volatile
 13136                           
 13137                           ; BSR set to: 56
 13138                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 13139  0052F2  0E08               	movlw	8
 13140  0052F4  6F9D               	movwf	157,b	;volatile
 13141                           
 13142                           ; BSR set to: 56
 13143                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 13144  0052F6  0E55               	movlw	85
 13145  0052F8  6ED4               	movwf	16340,c	;volatile
 13146                           
 13147                           ; BSR set to: 56
 13148                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 13149  0052FA  0EAA               	movlw	170
 13150  0052FC  6ED4               	movwf	16340,c	;volatile
 13151                           
 13152                           ; BSR set to: 56
 13153                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 13154  0052FE  80D4               	bsf	16340,0,c	;volatile
 13155                           
 13156                           ; BSR set to: 56
 13157                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 13158                           ;stkvar	_state @ sp[(-1)+0]
 13159  005300  0EFF               	movlw	-1
 13160  005302  B0E3               	btfsc	plusw1,0,c
 13161  005304  D002               	bra	u3365
 13162  005306  9ED2               	bcf	16338,7,c	;volatile
 13163  005308  D001               	bra	u3366
 13164  00530A                     u3365:
 13165  00530A  8ED2               	bsf	16338,7,c	;volatile
 13166  00530C                     u3366:
 13167                           
 13168                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 13169  00530C  0139               	movlb	57	; () banked
 13170  00530E  8782               	bsf	130,3,b	;volatile
 13171                           
 13172                           ; BSR set to: 57
 13173                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 13174  005310  8382               	bsf	130,1,b	;volatile
 13175                           
 13176                           ; BSR set to: 57
 13177                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 13178  005312  8182               	bsf	130,0,b	;volatile
 13179                           
 13180                           ; BSR set to: 57
 13181                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 13182  005314  8582               	bsf	130,2,b	;volatile
 13183                           
 13184                           ; BSR set to: 57
 13185                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 13186  005316  8786               	bsf	134,3,b	;volatile
 13187                           
 13188                           ; BSR set to: 57
 13189                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 13190  005318  8586               	bsf	134,2,b	;volatile
 13191                           
 13192                           ; BSR set to: 57
 13193                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 13194  00531A  8983               	bsf	131,4,b	;volatile
 13195                           
 13196                           ; BSR set to: 57
 13197                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 13198  00531C  8783               	bsf	131,3,b	;volatile
 13199                           
 13200                           ; BSR set to: 57
 13201                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 13202  00531E  8181               	bsf	129,0,b	;volatile
 13203                           
 13204                           ; BSR set to: 57
 13205                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 1;
 13206  005320  8185               	bsf	133,0,b	;volatile
 13207                           
 13208                           ; BSR set to: 57
 13209                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR7bits.INT2IP = 1;
 13210  005322  8B87               	bsf	135,5,b	;volatile
 13211                           
 13212                           ; BSR set to: 57
 13213                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR9bits.TMR6IP = 1;
 13214  005324  8189               	bsf	137,0,b	;volatile
 13215                           
 13216                           ; BSR set to: 57
 13217                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR8bits.TMR5IP = 1;
 13218  005326  8D88               	bsf	136,6,b	;volatile
 13219                           
 13220                           ; BSR set to: 57
 13221                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADIP = 1;
 13222  005328  8581               	bsf	129,2,b	;volatile
 13223                           
 13224                           ; BSR set to: 57
 13225                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 13226  00532A  52E5               	movf	postdec1,f,c
 13227  00532C  0012               	return		;funcret
 13228  00532E                     __end_of_INTERRUPT_Initialize:
 13229                           	opt callstack 0
 13230                           
 13231 ;; *************** function _EXT_INT_Initialize *****************
 13232 ;; Defined at:
 13233 ;;		line 114 in file "mcc_generated_files/ext_int.c"
 13234 ;; Parameters:    Size  Location     Type
 13235 ;;		None
 13236 ;; Auto vars:     Size  Location     Type
 13237 ;;		None
 13238 ;; Return value:  Size  Location     Type
 13239 ;;                  1  [STACK] void 
 13240 ;; Registers used:
 13241 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13242 ;; Tracked objects:
 13243 ;;		On entry : 3F/3F
 13244 ;;		On exit  : 3F/39
 13245 ;;		Unchanged: 0/0
 13246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13251 ;;Total ram usage:        0 bytes
 13252 ;; Hardware stack levels used:    1
 13253 ;; Hardware stack levels required when called:    4
 13254 ;; This function calls:
 13255 ;;		_INT0_SetInterruptHandler
 13256 ;;		_INT1_SetInterruptHandler
 13257 ;;		_INT2_SetInterruptHandler
 13258 ;; This function is called by:
 13259 ;;		_SYSTEM_Initialize
 13260 ;; This function uses a reentrant model
 13261 ;;
 13262                           
 13263                           	psect	text71
 13264  005550                     __ptext71:
 13265                           	opt callstack 0
 13266  005550                     _EXT_INT_Initialize:
 13267                           	opt callstack 25
 13268                           
 13269                           ;mcc_generated_files/ext_int.c: 119:     (PIR1bits.INT0IF = 0);
 13270                           
 13271                           ; BSR set to: 57
 13272                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13273                           ;incstack = 0
 13274  005550  0139               	movlb	57	; () banked
 13275  005552  91A1               	bcf	161,0,b	;volatile
 13276                           
 13277                           ;mcc_generated_files/ext_int.c: 120:     (INTCON0bits.INT0EDG = 0);
 13278  005554  90D2               	bcf	16338,0,c	;volatile
 13279                           
 13280                           ; BSR set to: 57
 13281                           ;mcc_generated_files/ext_int.c: 122:     INT0_SetInterruptHandler(INT0_DefaultInterruptH
      +                          andler);
 13282  005556  0EDA               	movlw	low _INT0_DefaultInterruptHandler
 13283  005558  6EE6               	movwf	postinc1,c
 13284  00555A  0E5F               	movlw	high _INT0_DefaultInterruptHandler
 13285  00555C  6EE6               	movwf	postinc1,c
 13286  00555E  0E00               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 13287  005560  6EE6               	movwf	postinc1,c
 13288  005562  EC09  F02E         	call	_INT0_SetInterruptHandler	;wreg free
 13289                           
 13290                           ;mcc_generated_files/ext_int.c: 123:     (PIE1bits.INT0IE = 1);
 13291  005566  0139               	movlb	57	; () banked
 13292  005568  8191               	bsf	145,0,b	;volatile
 13293                           
 13294                           ; BSR set to: 57
 13295                           ;mcc_generated_files/ext_int.c: 128:     (PIR5bits.INT1IF = 0);
 13296  00556A  91A5               	bcf	165,0,b	;volatile
 13297                           
 13298                           ; BSR set to: 57
 13299                           ;mcc_generated_files/ext_int.c: 129:     (INTCON0bits.INT1EDG = 0);
 13300  00556C  92D2               	bcf	16338,1,c	;volatile
 13301                           
 13302                           ;mcc_generated_files/ext_int.c: 131:     INT1_SetInterruptHandler(INT1_DefaultInterruptH
      +                          andler);
 13303  00556E  0EDC               	movlw	low _INT1_DefaultInterruptHandler
 13304  005570  6EE6               	movwf	postinc1,c
 13305  005572  0E5F               	movlw	high _INT1_DefaultInterruptHandler
 13306  005574  6EE6               	movwf	postinc1,c
 13307  005576  0E00               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 13308  005578  6EE6               	movwf	postinc1,c
 13309  00557A  ECF5  F02D         	call	_INT1_SetInterruptHandler	;wreg free
 13310                           
 13311                           ;mcc_generated_files/ext_int.c: 132:     (PIE5bits.INT1IE = 1);
 13312  00557E  0139               	movlb	57	; () banked
 13313  005580  8195               	bsf	149,0,b	;volatile
 13314                           
 13315                           ; BSR set to: 57
 13316                           ;mcc_generated_files/ext_int.c: 137:     (PIR7bits.INT2IF = 0);
 13317  005582  9BA7               	bcf	167,5,b	;volatile
 13318                           
 13319                           ; BSR set to: 57
 13320                           ;mcc_generated_files/ext_int.c: 138:     (INTCON0bits.INT2EDG = 0);
 13321  005584  94D2               	bcf	16338,2,c	;volatile
 13322                           
 13323                           ;mcc_generated_files/ext_int.c: 140:     INT2_SetInterruptHandler(INT2_DefaultInterruptH
      +                          andler);
 13324  005586  0EDE               	movlw	low _INT2_DefaultInterruptHandler
 13325  005588  6EE6               	movwf	postinc1,c
 13326  00558A  0E5F               	movlw	high _INT2_DefaultInterruptHandler
 13327  00558C  6EE6               	movwf	postinc1,c
 13328  00558E  0E00               	movlw	low (_INT2_DefaultInterruptHandler shr (0+16))
 13329  005590  6EE6               	movwf	postinc1,c
 13330  005592  ECE1  F02D         	call	_INT2_SetInterruptHandler	;wreg free
 13331                           
 13332                           ;mcc_generated_files/ext_int.c: 141:     (PIE7bits.INT2IE = 1);
 13333  005596  0139               	movlb	57	; () banked
 13334  005598  8B97               	bsf	151,5,b	;volatile
 13335                           
 13336                           ; BSR set to: 57
 13337                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 13338  00559A  0012               	return		;funcret
 13339  00559C                     __end_of_EXT_INT_Initialize:
 13340                           	opt callstack 0
 13341                           
 13342 ;; *************** function _INT2_SetInterruptHandler *****************
 13343 ;; Defined at:
 13344 ;;		line 105 in file "mcc_generated_files/ext_int.c"
 13345 ;; Parameters:    Size  Location     Type
 13346 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 13347 ;;		 -> INT2_DefaultInterruptHandler(1), 
 13348 ;; Auto vars:     Size  Location     Type
 13349 ;;		None
 13350 ;; Return value:  Size  Location     Type
 13351 ;;                  1  [STACK] void 
 13352 ;; Registers used:
 13353 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13354 ;; Tracked objects:
 13355 ;;		On entry : 3F/39
 13356 ;;		On exit  : 0/0
 13357 ;;		Unchanged: 0/0
 13358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13363 ;;Total ram usage:        0 bytes
 13364 ;; Hardware stack levels used:    1
 13365 ;; Hardware stack levels required when called:    3
 13366 ;; This function calls:
 13367 ;;		Nothing
 13368 ;; This function is called by:
 13369 ;;		_EXT_INT_Initialize
 13370 ;; This function uses a reentrant model
 13371 ;;
 13372                           
 13373                           	psect	text72
 13374  005BC2                     __ptext72:
 13375                           	opt callstack 0
 13376  005BC2                     _INT2_SetInterruptHandler:
 13377                           	opt callstack 25
 13378                           
 13379                           ;mcc_generated_files/ext_int.c: 106:     INT2_InterruptHandler = InterruptHandler;
 13380                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 13381                           
 13382                           ; BSR set to: 57
 13383                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13384                           ;incstack = 0
 13385  005BC2  50E1               	movf	fsr1l,w,c
 13386  005BC4  0FFD               	addlw	-3
 13387  005BC6  6ED9               	movwf	fsr2l,c
 13388  005BC8  50E2               	movf	fsr1h,w,c
 13389  005BCA  6EDA               	movwf	fsr2h,c
 13390  005BCC  0EFF               	movlw	255
 13391  005BCE  22DA               	addwfc	fsr2h,f,c
 13392  005BD0  006F FF78  F019    	movff	postinc2,_INT2_InterruptHandler
 13393  005BD6  006F FF78  F01A    	movff	postinc2,_INT2_InterruptHandler+1
 13394  005BDC  006F FF74  F01B    	movff	postdec2,_INT2_InterruptHandler+2
 13395                           
 13396                           ; _INT2_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 13397  005BE2  52E5               	movf	postdec1,f,c
 13398  005BE4  52E5               	movf	postdec1,f,c
 13399  005BE6  52E5               	movf	postdec1,f,c
 13400  005BE8  0012               	return		;funcret
 13401  005BEA                     __end_of_INT2_SetInterruptHandler:
 13402                           	opt callstack 0
 13403                           
 13404 ;; *************** function _INT1_SetInterruptHandler *****************
 13405 ;; Defined at:
 13406 ;;		line 79 in file "mcc_generated_files/ext_int.c"
 13407 ;; Parameters:    Size  Location     Type
 13408 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 13409 ;;		 -> INT1_DefaultInterruptHandler(1), 
 13410 ;; Auto vars:     Size  Location     Type
 13411 ;;		None
 13412 ;; Return value:  Size  Location     Type
 13413 ;;                  1  [STACK] void 
 13414 ;; Registers used:
 13415 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13416 ;; Tracked objects:
 13417 ;;		On entry : 3F/39
 13418 ;;		On exit  : 0/0
 13419 ;;		Unchanged: 0/0
 13420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13425 ;;Total ram usage:        0 bytes
 13426 ;; Hardware stack levels used:    1
 13427 ;; Hardware stack levels required when called:    3
 13428 ;; This function calls:
 13429 ;;		Nothing
 13430 ;; This function is called by:
 13431 ;;		_EXT_INT_Initialize
 13432 ;; This function uses a reentrant model
 13433 ;;
 13434                           
 13435                           	psect	text73
 13436  005BEA                     __ptext73:
 13437                           	opt callstack 0
 13438  005BEA                     _INT1_SetInterruptHandler:
 13439                           	opt callstack 25
 13440                           
 13441                           ;mcc_generated_files/ext_int.c: 80:     INT1_InterruptHandler = InterruptHandler;
 13442                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 13443                           
 13444                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13445                           ;incstack = 0
 13446  005BEA  50E1               	movf	fsr1l,w,c
 13447  005BEC  0FFD               	addlw	-3
 13448  005BEE  6ED9               	movwf	fsr2l,c
 13449  005BF0  50E2               	movf	fsr1h,w,c
 13450  005BF2  6EDA               	movwf	fsr2h,c
 13451  005BF4  0EFF               	movlw	255
 13452  005BF6  22DA               	addwfc	fsr2h,f,c
 13453  005BF8  006F FF78  F01C    	movff	postinc2,_INT1_InterruptHandler
 13454  005BFE  006F FF78  F01D    	movff	postinc2,_INT1_InterruptHandler+1
 13455  005C04  006F FF74  F01E    	movff	postdec2,_INT1_InterruptHandler+2
 13456                           
 13457                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 13458  005C0A  52E5               	movf	postdec1,f,c
 13459  005C0C  52E5               	movf	postdec1,f,c
 13460  005C0E  52E5               	movf	postdec1,f,c
 13461  005C10  0012               	return		;funcret
 13462  005C12                     __end_of_INT1_SetInterruptHandler:
 13463                           	opt callstack 0
 13464                           
 13465 ;; *************** function _INT0_SetInterruptHandler *****************
 13466 ;; Defined at:
 13467 ;;		line 53 in file "mcc_generated_files/ext_int.c"
 13468 ;; Parameters:    Size  Location     Type
 13469 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 13470 ;;		 -> INT0_DefaultInterruptHandler(1), 
 13471 ;; Auto vars:     Size  Location     Type
 13472 ;;		None
 13473 ;; Return value:  Size  Location     Type
 13474 ;;                  1  [STACK] void 
 13475 ;; Registers used:
 13476 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13477 ;; Tracked objects:
 13478 ;;		On entry : 3F/39
 13479 ;;		On exit  : 0/0
 13480 ;;		Unchanged: 0/0
 13481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13485 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13486 ;;Total ram usage:        0 bytes
 13487 ;; Hardware stack levels used:    1
 13488 ;; Hardware stack levels required when called:    3
 13489 ;; This function calls:
 13490 ;;		Nothing
 13491 ;; This function is called by:
 13492 ;;		_EXT_INT_Initialize
 13493 ;; This function uses a reentrant model
 13494 ;;
 13495                           
 13496                           	psect	text74
 13497  005C12                     __ptext74:
 13498                           	opt callstack 0
 13499  005C12                     _INT0_SetInterruptHandler:
 13500                           	opt callstack 25
 13501                           
 13502                           ;mcc_generated_files/ext_int.c: 54:     INT0_InterruptHandler = InterruptHandler;
 13503                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 13504                           
 13505                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13506                           ;incstack = 0
 13507  005C12  50E1               	movf	fsr1l,w,c
 13508  005C14  0FFD               	addlw	-3
 13509  005C16  6ED9               	movwf	fsr2l,c
 13510  005C18  50E2               	movf	fsr1h,w,c
 13511  005C1A  6EDA               	movwf	fsr2h,c
 13512  005C1C  0EFF               	movlw	255
 13513  005C1E  22DA               	addwfc	fsr2h,f,c
 13514  005C20  006F FF78  F01F    	movff	postinc2,_INT0_InterruptHandler
 13515  005C26  006F FF78  F020    	movff	postinc2,_INT0_InterruptHandler+1
 13516  005C2C  006F FF74  F021    	movff	postdec2,_INT0_InterruptHandler+2
 13517                           
 13518                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 13519  005C32  52E5               	movf	postdec1,f,c
 13520  005C34  52E5               	movf	postdec1,f,c
 13521  005C36  52E5               	movf	postdec1,f,c
 13522  005C38  0012               	return		;funcret
 13523  005C3A                     __end_of_INT0_SetInterruptHandler:
 13524                           	opt callstack 0
 13525                           
 13526 ;; *************** function _DSM_Initialize *****************
 13527 ;; Defined at:
 13528 ;;		line 58 in file "mcc_generated_files/dsm.c"
 13529 ;; Parameters:    Size  Location     Type
 13530 ;;		None
 13531 ;; Auto vars:     Size  Location     Type
 13532 ;;		None
 13533 ;; Return value:  Size  Location     Type
 13534 ;;                  1  [STACK] void 
 13535 ;; Registers used:
 13536 ;;		wreg, status,2
 13537 ;; Tracked objects:
 13538 ;;		On entry : 0/3C
 13539 ;;		On exit  : 3F/3C
 13540 ;;		Unchanged: 0/0
 13541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13545 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13546 ;;Total ram usage:        0 bytes
 13547 ;; Hardware stack levels used:    1
 13548 ;; Hardware stack levels required when called:    3
 13549 ;; This function calls:
 13550 ;;		Nothing
 13551 ;; This function is called by:
 13552 ;;		_SYSTEM_Initialize
 13553 ;; This function uses a reentrant model
 13554 ;;
 13555                           
 13556                           	psect	text75
 13557  005E86                     __ptext75:
 13558                           	opt callstack 0
 13559  005E86                     _DSM_Initialize:
 13560                           	opt callstack 26
 13561                           
 13562                           ;mcc_generated_files/dsm.c: 63:     MD1CON0bits.MD1OPOL = 0;
 13563                           
 13564                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13565                           ;incstack = 0
 13566  005E86  013C               	movlb	60	; () banked
 13567  005E88  99FA               	bcf	250,4,b	;volatile
 13568                           
 13569                           ;mcc_generated_files/dsm.c: 66:     MD1CON1bits.MD1CLSYNC = 1;
 13570  005E8A  81FB               	bsf	251,0,b	;volatile
 13571                           
 13572                           ;mcc_generated_files/dsm.c: 69:     MD1CON1bits.MD1CLPOL = 0;
 13573  005E8C  93FB               	bcf	251,1,b	;volatile
 13574                           
 13575                           ;mcc_generated_files/dsm.c: 72:     MD1CON1bits.MD1CHSYNC = 1;
 13576  005E8E  89FB               	bsf	251,4,b	;volatile
 13577                           
 13578                           ;mcc_generated_files/dsm.c: 75:     MD1CON1bits.MD1CHPOL = 0;
 13579  005E90  9BFB               	bcf	251,5,b	;volatile
 13580                           
 13581                           ; BSR set to: 60
 13582                           ;mcc_generated_files/dsm.c: 78:     MD1SRC = 0x13;
 13583  005E92  0E13               	movlw	19
 13584  005E94  6FFC               	movwf	252,b	;volatile
 13585                           
 13586                           ;mcc_generated_files/dsm.c: 81:     MD1CARH = 0x0E;
 13587  005E96  0E0E               	movlw	14
 13588  005E98  6FFE               	movwf	254,b	;volatile
 13589                           
 13590                           ;mcc_generated_files/dsm.c: 84:     MD1CARL = 0x04;
 13591  005E9A  0E04               	movlw	4
 13592  005E9C  6FFD               	movwf	253,b	;volatile
 13593                           
 13594                           ; BSR set to: 60
 13595                           ;mcc_generated_files/dsm.c: 87:     MD1CON0bits.MD1EN = 1;
 13596  005E9E  8FFA               	bsf	250,7,b	;volatile
 13597                           
 13598                           ; BSR set to: 60
 13599                           ; _DSM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 13600  005EA0  0012               	return		;funcret
 13601  005EA2                     __end_of_DSM_Initialize:
 13602                           	opt callstack 0
 13603                           
 13604 ;; *************** function _DMA1_Initialize *****************
 13605 ;; Defined at:
 13606 ;;		line 86 in file "mcc_generated_files/dma1.c"
 13607 ;; Parameters:    Size  Location     Type
 13608 ;;		None
 13609 ;; Auto vars:     Size  Location     Type
 13610 ;;		None
 13611 ;; Return value:  Size  Location     Type
 13612 ;;                  1  [STACK] void 
 13613 ;; Registers used:
 13614 ;;		wreg, status,2
 13615 ;; Tracked objects:
 13616 ;;		On entry : 3F/3D
 13617 ;;		On exit  : 3F/3B
 13618 ;;		Unchanged: 0/0
 13619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13623 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13624 ;;Total ram usage:        0 bytes
 13625 ;; Hardware stack levels used:    1
 13626 ;; Hardware stack levels required when called:    3
 13627 ;; This function calls:
 13628 ;;		Nothing
 13629 ;; This function is called by:
 13630 ;;		_SYSTEM_Initialize
 13631 ;; This function uses a reentrant model
 13632 ;;
 13633                           
 13634                           	psect	text76
 13635  00525E                     __ptext76:
 13636                           	opt callstack 0
 13637  00525E                     _DMA1_Initialize:
 13638                           	opt callstack 26
 13639                           
 13640                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 13641                           
 13642                           ; BSR set to: 60
 13643                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13644                           ;incstack = 0
 13645  00525E  0E00               	movlw	0
 13646  005260  013B               	movlb	59	; () banked
 13647  005262  6FF9               	movwf	249,b	;volatile
 13648  005264  0E10               	movlw	16
 13649  005266  6FFA               	movwf	250,b	;volatile
 13650  005268  0E00               	movlw	0
 13651  00526A  6FFB               	movwf	251,b	;volatile
 13652                           
 13653                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 13654  00526C  0E3D               	movlw	61
 13655  00526E  6FF1               	movwf	241,b	;volatile
 13656  005270  0E11               	movlw	17
 13657  005272  6FF0               	movwf	240,b	;volatile
 13658                           
 13659                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 13660  005274  0E03               	movlw	3
 13661  005276  6FFD               	movwf	253,b	;volatile
 13662                           
 13663                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 13664  005278  0E00               	movlw	0
 13665  00527A  6FF8               	movwf	248,b	;volatile
 13666  00527C  0E01               	movlw	1
 13667  00527E  6FF7               	movwf	247,b	;volatile
 13668                           
 13669                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 13670  005280  0E00               	movlw	0
 13671  005282  6FEF               	movwf	239,b	;volatile
 13672  005284  0E01               	movlw	1
 13673  005286  6FEE               	movwf	238,b	;volatile
 13674                           
 13675                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 13676  005288  0E15               	movlw	21
 13677  00528A  6FFF               	movwf	255,b	;volatile
 13678                           
 13679                           ; BSR set to: 59
 13680                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 13681  00528C  6BFE               	clrf	254,b	;volatile
 13682                           
 13683                           ; BSR set to: 59
 13684                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 13685  00528E  0139               	movlb	57	; () banked
 13686  005290  93A2               	bcf	162,1,b	;volatile
 13687                           
 13688                           ; BSR set to: 57
 13689                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 13690  005292  91A2               	bcf	162,0,b	;volatile
 13691                           
 13692                           ; BSR set to: 57
 13693                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 13694  005294  97A2               	bcf	162,3,b	;volatile
 13695                           
 13696                           ; BSR set to: 57
 13697                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 13698  005296  95A2               	bcf	162,2,b	;volatile
 13699                           
 13700                           ; BSR set to: 57
 13701                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 13702  005298  8392               	bsf	146,1,b	;volatile
 13703                           
 13704                           ; BSR set to: 57
 13705                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 13706  00529A  8192               	bsf	146,0,b	;volatile
 13707                           
 13708                           ; BSR set to: 57
 13709                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 13710  00529C  8792               	bsf	146,3,b	;volatile
 13711                           
 13712                           ; BSR set to: 57
 13713                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 13714  00529E  8592               	bsf	146,2,b	;volatile
 13715                           
 13716                           ; BSR set to: 57
 13717                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 13718  0052A0  6BF1               	clrf	241,b	;volatile
 13719                           
 13720                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 13721  0052A2  0E01               	movlw	1
 13722  0052A4  6FF2               	movwf	242,b	;volatile
 13723                           
 13724                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 13725  0052A6  0E04               	movlw	4
 13726  0052A8  6FF3               	movwf	243,b	;volatile
 13727                           
 13728                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 13729  0052AA  0E02               	movlw	2
 13730  0052AC  6FF4               	movwf	244,b	;volatile
 13731                           
 13732                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 13733  0052AE  0E03               	movlw	3
 13734  0052B0  6FF7               	movwf	247,b	;volatile
 13735  0052B2  9ED2               	bcf	16338,7,c	;# 
 13736  0052B4  0139               	banksel	14831	;# 
 13737  0052B6  0E55               	movlw	85	;# 
 13738  0052B8  6FEF               	movwf	14831,b	;# 
 13739  0052BA  0EAA               	movlw	170	;# 
 13740  0052BC  6FEF               	movwf	14831,b	;# 
 13741  0052BE  81EF               	bsf	14831,0,b	;# 
 13742  0052C0  8ED2               	bsf	16338,7,c	;# 
 13743                           
 13744                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 13745  0052C2  013B               	movlb	59	; () banked
 13746  0052C4  6BFC               	clrf	252,b	;volatile
 13747                           
 13748                           ; BSR set to: 59
 13749                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 13750  0052C6  0012               	return		;funcret
 13751  0052C8                     __end_of_DMA1_Initialize:
 13752                           	opt callstack 0
 13753                           
 13754 ;; *************** function _CLKREF_Initialize *****************
 13755 ;; Defined at:
 13756 ;;		line 58 in file "mcc_generated_files/clkref.c"
 13757 ;; Parameters:    Size  Location     Type
 13758 ;;		None
 13759 ;; Auto vars:     Size  Location     Type
 13760 ;;		None
 13761 ;; Return value:  Size  Location     Type
 13762 ;;                  1  [STACK] void 
 13763 ;; Registers used:
 13764 ;;		wreg, status,2
 13765 ;; Tracked objects:
 13766 ;;		On entry : 3F/3B
 13767 ;;		On exit  : 3F/3C
 13768 ;;		Unchanged: 0/0
 13769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13774 ;;Total ram usage:        0 bytes
 13775 ;; Hardware stack levels used:    1
 13776 ;; Hardware stack levels required when called:    3
 13777 ;; This function calls:
 13778 ;;		Nothing
 13779 ;; This function is called by:
 13780 ;;		_SYSTEM_Initialize
 13781 ;; This function uses a reentrant model
 13782 ;;
 13783                           
 13784                           	psect	text77
 13785  005F8C                     __ptext77:
 13786                           	opt callstack 0
 13787  005F8C                     _CLKREF_Initialize:
 13788                           	opt callstack 26
 13789                           
 13790                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 13791                           
 13792                           ; BSR set to: 59
 13793                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13794                           ;incstack = 0
 13795  005F8C  013C               	movlb	60	; () banked
 13796  005F8E  6BE6               	clrf	230,b	;volatile
 13797                           
 13798                           ; BSR set to: 60
 13799                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 13800  005F90  0E94               	movlw	148
 13801  005F92  6FE5               	movwf	229,b	;volatile
 13802                           
 13803                           ; BSR set to: 60
 13804                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 13805  005F94  0012               	return		;funcret
 13806  005F96                     __end_of_CLKREF_Initialize:
 13807                           	opt callstack 0
 13808                           
 13809 ;; *************** function _CLC1_Initialize *****************
 13810 ;; Defined at:
 13811 ;;		line 58 in file "mcc_generated_files/clc1.c"
 13812 ;; Parameters:    Size  Location     Type
 13813 ;;		None
 13814 ;; Auto vars:     Size  Location     Type
 13815 ;;		None
 13816 ;; Return value:  Size  Location     Type
 13817 ;;                  1  [STACK] void 
 13818 ;; Registers used:
 13819 ;;		wreg, status,2
 13820 ;; Tracked objects:
 13821 ;;		On entry : 0/39
 13822 ;;		On exit  : 3F/3C
 13823 ;;		Unchanged: 0/0
 13824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13829 ;;Total ram usage:        0 bytes
 13830 ;; Hardware stack levels used:    1
 13831 ;; Hardware stack levels required when called:    3
 13832 ;; This function calls:
 13833 ;;		Nothing
 13834 ;; This function is called by:
 13835 ;;		_SYSTEM_Initialize
 13836 ;; This function uses a reentrant model
 13837 ;;
 13838                           
 13839                           	psect	text78
 13840  005D24                     __ptext78:
 13841                           	opt callstack 0
 13842  005D24                     _CLC1_Initialize:
 13843                           	opt callstack 26
 13844                           
 13845                           ;mcc_generated_files/clc1.c: 63:     CLC1POL = 0x00;
 13846                           
 13847                           ; BSR set to: 60
 13848                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13849                           ;incstack = 0
 13850  005D24  013C               	movlb	60	; () banked
 13851  005D26  6B75               	clrf	117,b	;volatile
 13852                           
 13853                           ; BSR set to: 60
 13854                           ;mcc_generated_files/clc1.c: 65:     CLC1SEL0 = 0x04;
 13855  005D28  0E04               	movlw	4
 13856  005D2A  6F76               	movwf	118,b	;volatile
 13857                           
 13858                           ;mcc_generated_files/clc1.c: 67:     CLC1SEL1 = 0x04;
 13859  005D2C  0E04               	movlw	4
 13860  005D2E  6F77               	movwf	119,b	;volatile
 13861                           
 13862                           ;mcc_generated_files/clc1.c: 69:     CLC1SEL2 = 0x04;
 13863  005D30  0E04               	movlw	4
 13864  005D32  6F78               	movwf	120,b	;volatile
 13865                           
 13866                           ;mcc_generated_files/clc1.c: 71:     CLC1SEL3 = 0x04;
 13867  005D34  0E04               	movlw	4
 13868  005D36  6F79               	movwf	121,b	;volatile
 13869                           
 13870                           ; BSR set to: 60
 13871                           ;mcc_generated_files/clc1.c: 73:     CLC1GLS0 = 0x00;
 13872  005D38  6B7A               	clrf	122,b	;volatile
 13873                           
 13874                           ; BSR set to: 60
 13875                           ;mcc_generated_files/clc1.c: 75:     CLC1GLS1 = 0x00;
 13876  005D3A  6B7B               	clrf	123,b	;volatile
 13877                           
 13878                           ; BSR set to: 60
 13879                           ;mcc_generated_files/clc1.c: 77:     CLC1GLS2 = 0x00;
 13880  005D3C  6B7C               	clrf	124,b	;volatile
 13881                           
 13882                           ; BSR set to: 60
 13883                           ;mcc_generated_files/clc1.c: 79:     CLC1GLS3 = 0x00;
 13884  005D3E  6B7D               	clrf	125,b	;volatile
 13885                           
 13886                           ;mcc_generated_files/clc1.c: 81:     CLC1CON = 0x81;
 13887  005D40  0E81               	movlw	129
 13888  005D42  6F74               	movwf	116,b	;volatile
 13889                           
 13890                           ; BSR set to: 60
 13891                           ; _CLC1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 13892  005D44  0012               	return		;funcret
 13893  005D46                     __end_of_CLC1_Initialize:
 13894                           	opt callstack 0
 13895                           
 13896 ;; *************** function _ADCC_Initialize *****************
 13897 ;; Defined at:
 13898 ;;		line 64 in file "mcc_generated_files/adcc.c"
 13899 ;; Parameters:    Size  Location     Type
 13900 ;;		None
 13901 ;; Auto vars:     Size  Location     Type
 13902 ;;		None
 13903 ;; Return value:  Size  Location     Type
 13904 ;;                  1  [STACK] void 
 13905 ;; Registers used:
 13906 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 13907 ;; Tracked objects:
 13908 ;;		On entry : 3F/39
 13909 ;;		On exit  : 0/0
 13910 ;;		Unchanged: 0/0
 13911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13916 ;;Total ram usage:        0 bytes
 13917 ;; Hardware stack levels used:    1
 13918 ;; Hardware stack levels required when called:    4
 13919 ;; This function calls:
 13920 ;;		_ADCC_SetADIInterruptHandler
 13921 ;; This function is called by:
 13922 ;;		_SYSTEM_Initialize
 13923 ;; This function uses a reentrant model
 13924 ;;
 13925                           
 13926                           	psect	text79
 13927  00559C                     __ptext79:
 13928                           	opt callstack 0
 13929  00559C                     _ADCC_Initialize:
 13930                           	opt callstack 25
 13931                           
 13932                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
 13933                           
 13934                           ; BSR set to: 60
 13935                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13936                           ;incstack = 0
 13937  00559C  013E               	movlb	62	; () banked
 13938  00559E  6BDE               	clrf	222,b	;volatile
 13939                           
 13940                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
 13941  0055A0  6BDF               	clrf	223,b	;volatile
 13942                           
 13943                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
 13944  0055A2  6BE0               	clrf	224,b	;volatile
 13945                           
 13946                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
 13947  0055A4  6BE1               	clrf	225,b	;volatile
 13948                           
 13949                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
 13950  0055A6  6BE4               	clrf	228,b	;volatile
 13951                           
 13952                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
 13953  0055A8  6BE5               	clrf	229,b	;volatile
 13954                           
 13955                           ;mcc_generated_files/adcc.c: 80:     ADACCU = 0x00;
 13956  0055AA  6BEA               	clrf	234,b	;volatile
 13957                           
 13958                           ;mcc_generated_files/adcc.c: 82:     ADRPT = 0x00;
 13959  0055AC  6BEC               	clrf	236,b	;volatile
 13960                           
 13961                           ;mcc_generated_files/adcc.c: 84:     ADPCH = 0x00;
 13962  0055AE  6BF1               	clrf	241,b	;volatile
 13963                           
 13964                           ;mcc_generated_files/adcc.c: 86:     ADACQL = 0x00;
 13965  0055B0  6BF3               	clrf	243,b	;volatile
 13966                           
 13967                           ;mcc_generated_files/adcc.c: 88:     ADACQH = 0x00;
 13968  0055B2  6BF4               	clrf	244,b	;volatile
 13969                           
 13970                           ;mcc_generated_files/adcc.c: 90:     ADCAP = 0x00;
 13971  0055B4  6BF5               	clrf	245,b	;volatile
 13972                           
 13973                           ;mcc_generated_files/adcc.c: 92:     ADPREL = 0x00;
 13974  0055B6  6BF6               	clrf	246,b	;volatile
 13975                           
 13976                           ;mcc_generated_files/adcc.c: 94:     ADPREH = 0x00;
 13977  0055B8  6BF7               	clrf	247,b	;volatile
 13978                           
 13979                           ;mcc_generated_files/adcc.c: 96:     ADCON1 = 0x00;
 13980  0055BA  6BF9               	clrf	249,b	;volatile
 13981                           
 13982                           ;mcc_generated_files/adcc.c: 98:     ADCON2 = 0x00;
 13983  0055BC  6BFA               	clrf	250,b	;volatile
 13984                           
 13985                           ;mcc_generated_files/adcc.c: 100:     ADCON3 = 0x00;
 13986  0055BE  6BFB               	clrf	251,b	;volatile
 13987                           
 13988                           ;mcc_generated_files/adcc.c: 102:     ADSTAT = 0x00;
 13989  0055C0  6BFC               	clrf	252,b	;volatile
 13990                           
 13991                           ; BSR set to: 62
 13992                           ;mcc_generated_files/adcc.c: 104:     ADREF = 0x02;
 13993  0055C2  0E02               	movlw	2
 13994  0055C4  6FFD               	movwf	253,b	;volatile
 13995                           
 13996                           ; BSR set to: 62
 13997                           ;mcc_generated_files/adcc.c: 106:     ADACT = 0x00;
 13998  0055C6  6BFE               	clrf	254,b	;volatile
 13999                           
 14000                           ; BSR set to: 62
 14001                           ;mcc_generated_files/adcc.c: 108:     ADCLK = 0x00;
 14002  0055C8  6BFF               	clrf	255,b	;volatile
 14003                           
 14004                           ;mcc_generated_files/adcc.c: 110:     ADCON0 = 0x94;
 14005  0055CA  0E94               	movlw	148
 14006  0055CC  6FF8               	movwf	248,b	;volatile
 14007                           
 14008                           ; BSR set to: 62
 14009                           ;mcc_generated_files/adcc.c: 113:     PIR1bits.ADIF = 0;
 14010  0055CE  0139               	movlb	57	; () banked
 14011  0055D0  95A1               	bcf	161,2,b	;volatile
 14012                           
 14013                           ; BSR set to: 57
 14014                           ;mcc_generated_files/adcc.c: 115:     PIE1bits.ADIE = 1;
 14015  0055D2  8591               	bsf	145,2,b	;volatile
 14016                           
 14017                           ; BSR set to: 57
 14018                           ;mcc_generated_files/adcc.c: 117:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 14019  0055D4  0EE0               	movlw	low _ADCC_DefaultInterruptHandler
 14020  0055D6  6EE6               	movwf	postinc1,c
 14021  0055D8  0E5F               	movlw	high _ADCC_DefaultInterruptHandler
 14022  0055DA  6EE6               	movwf	postinc1,c
 14023  0055DC  0E00               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 14024  0055DE  6EE6               	movwf	postinc1,c
 14025  0055E0  EC1D  F02E         	call	_ADCC_SetADIInterruptHandler	;wreg free
 14026                           
 14027                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 14028  0055E4  0012               	return		;funcret
 14029  0055E6                     __end_of_ADCC_Initialize:
 14030                           	opt callstack 0
 14031                           
 14032 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 14033 ;; Defined at:
 14034 ;;		line 316 in file "mcc_generated_files/adcc.c"
 14035 ;; Parameters:    Size  Location     Type
 14036 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 14037 ;;		 -> ADCC_DefaultInterruptHandler(1), 
 14038 ;; Auto vars:     Size  Location     Type
 14039 ;;		None
 14040 ;; Return value:  Size  Location     Type
 14041 ;;                  1  [STACK] void 
 14042 ;; Registers used:
 14043 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 14044 ;; Tracked objects:
 14045 ;;		On entry : 3F/39
 14046 ;;		On exit  : 0/0
 14047 ;;		Unchanged: 0/0
 14048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14053 ;;Total ram usage:        0 bytes
 14054 ;; Hardware stack levels used:    1
 14055 ;; Hardware stack levels required when called:    3
 14056 ;; This function calls:
 14057 ;;		Nothing
 14058 ;; This function is called by:
 14059 ;;		_ADCC_Initialize
 14060 ;; This function uses a reentrant model
 14061 ;;
 14062                           
 14063                           	psect	text80
 14064  005C3A                     __ptext80:
 14065                           	opt callstack 0
 14066  005C3A                     _ADCC_SetADIInterruptHandler:
 14067                           	opt callstack 25
 14068                           
 14069                           ;mcc_generated_files/adcc.c: 317:     ADCC_ADI_InterruptHandler = InterruptHandler;
 14070                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 14071                           
 14072                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14073                           ;incstack = 0
 14074  005C3A  50E1               	movf	fsr1l,w,c
 14075  005C3C  0FFD               	addlw	-3
 14076  005C3E  6ED9               	movwf	fsr2l,c
 14077  005C40  50E2               	movf	fsr1h,w,c
 14078  005C42  6EDA               	movwf	fsr2h,c
 14079  005C44  0EFF               	movlw	255
 14080  005C46  22DA               	addwfc	fsr2h,f,c
 14081  005C48  006F FF78  F00A    	movff	postinc2,_ADCC_ADI_InterruptHandler
 14082  005C4E  006F FF78  F00B    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 14083  005C54  006F FF74  F00C    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 14084                           
 14085                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 14086  005C5A  52E5               	movf	postdec1,f,c
 14087  005C5C  52E5               	movf	postdec1,f,c
 14088  005C5E  52E5               	movf	postdec1,f,c
 14089  005C60  0012               	return		;funcret
 14090  005C62                     __end_of_ADCC_SetADIInterruptHandler:
 14091                           	opt callstack 0
 14092                           
 14093 ;; *************** function _INT0_ISR *****************
 14094 ;; Defined at:
 14095 ;;		line 35 in file "mcc_generated_files/ext_int.c"
 14096 ;; Parameters:    Size  Location     Type
 14097 ;;		None
 14098 ;; Auto vars:     Size  Location     Type
 14099 ;;		None
 14100 ;; Return value:  Size  Location     Type
 14101 ;;                  1    wreg      void 
 14102 ;; Registers used:
 14103 ;;		wreg, status,2, status,0, pclath, tosl
 14104 ;; Tracked objects:
 14105 ;;		On entry : 0/0
 14106 ;;		On exit  : 0/0
 14107 ;;		Unchanged: 0/0
 14108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14113 ;;Total ram usage:        0 bytes
 14114 ;; Hardware stack levels used:    1
 14115 ;; Hardware stack levels required when called:    2
 14116 ;; This function calls:
 14117 ;;		_INT0_CallBack
 14118 ;; This function is called by:
 14119 ;;		Interrupt level 2
 14120 ;; This function uses a non-reentrant model
 14121 ;;
 14122                           
 14123                           	psect	text81
 14124  005F40                     __ptext81:
 14125                           	opt callstack 0
 14126  005F40                     _INT0_ISR:
 14127                           	opt callstack 17
 14128                           
 14129                           ;incstack = 0
 14130  005F40  EE13  F150         	lfsr	1,___inthi_sp
 14131                           
 14132                           ;mcc_generated_files/ext_int.c: 37:     (PIR1bits.INT0IF = 0);
 14133  005F44  0139               	movlb	57	; () banked
 14134  005F46  91A1               	bcf	161,0,b	;volatile
 14135                           
 14136                           ; BSR set to: 57
 14137                           ;mcc_generated_files/ext_int.c: 40:     INT0_CallBack();
 14138  005F48  ECA3  F02E         	call	_INT0_CallBack	;wreg free
 14139  005F4C  0011               	retfie		f
 14140  005F4E                     __end_of_INT0_ISR:
 14141                           	opt callstack 0
 14142                           
 14143 ;; *************** function _INT0_CallBack *****************
 14144 ;; Defined at:
 14145 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 14146 ;; Parameters:    Size  Location     Type
 14147 ;;		None
 14148 ;; Auto vars:     Size  Location     Type
 14149 ;;		None
 14150 ;; Return value:  Size  Location     Type
 14151 ;;                  1  [STACK] void 
 14152 ;; Registers used:
 14153 ;;		wreg, status,2, status,0, pclath, tosl
 14154 ;; Tracked objects:
 14155 ;;		On entry : 3F/39
 14156 ;;		On exit  : 0/0
 14157 ;;		Unchanged: 0/0
 14158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14163 ;;Total ram usage:        0 bytes
 14164 ;; Hardware stack levels used:    1
 14165 ;; Hardware stack levels required when called:    1
 14166 ;; This function calls:
 14167 ;;		Absolute function
 14168 ;;		_INT0_DefaultInterruptHandler
 14169 ;; This function is called by:
 14170 ;;		_INT0_ISR
 14171 ;; This function uses a reentrant model
 14172 ;;
 14173                           
 14174                           	psect	text82
 14175  005D46                     __ptext82:
 14176                           	opt callstack 0
 14177  005D46                     _INT0_CallBack:
 14178                           	opt callstack 17
 14179                           
 14180                           ;mcc_generated_files/ext_int.c: 47:     if(INT0_InterruptHandler)
 14181                           
 14182                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14183                           ;incstack = 0
 14184  005D46  501F               	movf	_INT0_InterruptHandler,w,c
 14185  005D48  1020               	iorwf	_INT0_InterruptHandler+1,w,c
 14186  005D4A  1021               	iorwf	_INT0_InterruptHandler+2,w,c
 14187  005D4C  B4D8               	btfsc	status,2,c
 14188  005D4E  0012               	return	
 14189                           
 14190                           ;mcc_generated_files/ext_int.c: 48:     {;mcc_generated_files/ext_int.c: 49:         INT
      +                          0_InterruptHandler();
 14191  005D50  D801               	call	u149_48
 14192  005D52  0012               	return	
 14193  005D54                     u149_48:
 14194  005D54  0005               	push	
 14195  005D56  6EFA               	movwf	pclath,c
 14196  005D58  501F               	movf	_INT0_InterruptHandler,w,c
 14197  005D5A  6EFD               	movwf	tosl,c
 14198  005D5C  5020               	movf	_INT0_InterruptHandler+1,w,c
 14199  005D5E  6EFE               	movwf	tosh,c
 14200  005D60  5021               	movf	_INT0_InterruptHandler+2,w,c
 14201  005D62  6EFF               	movwf	tosu,c
 14202  005D64  50FA               	movf	pclath,w,c
 14203  005D66  0012               	return		;indir
 14204  005D68                     __end_of_INT0_CallBack:
 14205                           	opt callstack 0
 14206                           
 14207 ;; *************** function _INT0_DefaultInterruptHandler *****************
 14208 ;; Defined at:
 14209 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 14210 ;; Parameters:    Size  Location     Type
 14211 ;;		None
 14212 ;; Auto vars:     Size  Location     Type
 14213 ;;		None
 14214 ;; Return value:  Size  Location     Type
 14215 ;;                  1  [STACK] void 
 14216 ;; Registers used:
 14217 ;;		None
 14218 ;; Tracked objects:
 14219 ;;		On entry : 0/39
 14220 ;;		On exit  : 0/0
 14221 ;;		Unchanged: 0/0
 14222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14226 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14227 ;;Total ram usage:        0 bytes
 14228 ;; Hardware stack levels used:    1
 14229 ;; This function calls:
 14230 ;;		Nothing
 14231 ;; This function is called by:
 14232 ;;		_EXT_INT_Initialize
 14233 ;;		_INT0_CallBack
 14234 ;; This function uses a reentrant model
 14235 ;;
 14236                           
 14237                           	psect	text83
 14238  005FDA                     __ptext83:
 14239                           	opt callstack 0
 14240  005FDA                     _INT0_DefaultInterruptHandler:
 14241                           	opt callstack 17
 14242                           
 14243                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 14244                           
 14245                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14246                           ;incstack = 0
 14247  005FDA  0012               	return		;funcret
 14248  005FDC                     __end_of_INT0_DefaultInterruptHandler:
 14249                           	opt callstack 0
 14250                           
 14251 ;; *************** function _INT1_ISR *****************
 14252 ;; Defined at:
 14253 ;;		line 61 in file "mcc_generated_files/ext_int.c"
 14254 ;; Parameters:    Size  Location     Type
 14255 ;;		None
 14256 ;; Auto vars:     Size  Location     Type
 14257 ;;		None
 14258 ;; Return value:  Size  Location     Type
 14259 ;;                  1    wreg      void 
 14260 ;; Registers used:
 14261 ;;		wreg, status,2, status,0, pclath, tosl
 14262 ;; Tracked objects:
 14263 ;;		On entry : 0/0
 14264 ;;		On exit  : 0/0
 14265 ;;		Unchanged: 0/0
 14266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14271 ;;Total ram usage:        0 bytes
 14272 ;; Hardware stack levels used:    1
 14273 ;; Hardware stack levels required when called:    2
 14274 ;; This function calls:
 14275 ;;		_INT1_CallBack
 14276 ;; This function is called by:
 14277 ;;		Interrupt level 2
 14278 ;; This function uses a non-reentrant model
 14279 ;;
 14280                           
 14281                           	psect	text84
 14282  005F50                     __ptext84:
 14283                           	opt callstack 0
 14284  005F50                     _INT1_ISR:
 14285                           	opt callstack 17
 14286                           
 14287                           ;incstack = 0
 14288  005F50  EE13  F150         	lfsr	1,___inthi_sp
 14289                           
 14290                           ;mcc_generated_files/ext_int.c: 63:     (PIR5bits.INT1IF = 0);
 14291  005F54  0139               	movlb	57	; () banked
 14292  005F56  91A5               	bcf	165,0,b	;volatile
 14293                           
 14294                           ; BSR set to: 57
 14295                           ;mcc_generated_files/ext_int.c: 66:     INT1_CallBack();
 14296  005F58  ECB4  F02E         	call	_INT1_CallBack	;wreg free
 14297  005F5C  0011               	retfie		f
 14298  005F5E                     __end_of_INT1_ISR:
 14299                           	opt callstack 0
 14300                           
 14301 ;; *************** function _INT1_CallBack *****************
 14302 ;; Defined at:
 14303 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 14304 ;; Parameters:    Size  Location     Type
 14305 ;;		None
 14306 ;; Auto vars:     Size  Location     Type
 14307 ;;		None
 14308 ;; Return value:  Size  Location     Type
 14309 ;;                  1  [STACK] void 
 14310 ;; Registers used:
 14311 ;;		wreg, status,2, status,0, pclath, tosl
 14312 ;; Tracked objects:
 14313 ;;		On entry : 3F/39
 14314 ;;		On exit  : 0/0
 14315 ;;		Unchanged: 0/0
 14316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14321 ;;Total ram usage:        0 bytes
 14322 ;; Hardware stack levels used:    1
 14323 ;; Hardware stack levels required when called:    1
 14324 ;; This function calls:
 14325 ;;		Absolute function
 14326 ;;		_INT1_DefaultInterruptHandler
 14327 ;; This function is called by:
 14328 ;;		_INT1_ISR
 14329 ;; This function uses a reentrant model
 14330 ;;
 14331                           
 14332                           	psect	text85
 14333  005D68                     __ptext85:
 14334                           	opt callstack 0
 14335  005D68                     _INT1_CallBack:
 14336                           	opt callstack 17
 14337                           
 14338                           ;mcc_generated_files/ext_int.c: 73:     if(INT1_InterruptHandler)
 14339                           
 14340                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14341                           ;incstack = 0
 14342  005D68  501C               	movf	_INT1_InterruptHandler,w,c
 14343  005D6A  101D               	iorwf	_INT1_InterruptHandler+1,w,c
 14344  005D6C  101E               	iorwf	_INT1_InterruptHandler+2,w,c
 14345  005D6E  B4D8               	btfsc	status,2,c
 14346  005D70  0012               	return	
 14347                           
 14348                           ;mcc_generated_files/ext_int.c: 74:     {;mcc_generated_files/ext_int.c: 75:         INT
      +                          1_InterruptHandler();
 14349  005D72  D801               	call	u151_48
 14350  005D74  0012               	return	
 14351  005D76                     u151_48:
 14352  005D76  0005               	push	
 14353  005D78  6EFA               	movwf	pclath,c
 14354  005D7A  501C               	movf	_INT1_InterruptHandler,w,c
 14355  005D7C  6EFD               	movwf	tosl,c
 14356  005D7E  501D               	movf	_INT1_InterruptHandler+1,w,c
 14357  005D80  6EFE               	movwf	tosh,c
 14358  005D82  501E               	movf	_INT1_InterruptHandler+2,w,c
 14359  005D84  6EFF               	movwf	tosu,c
 14360  005D86  50FA               	movf	pclath,w,c
 14361  005D88  0012               	return		;indir
 14362  005D8A                     __end_of_INT1_CallBack:
 14363                           	opt callstack 0
 14364                           
 14365 ;; *************** function _INT1_DefaultInterruptHandler *****************
 14366 ;; Defined at:
 14367 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 14368 ;; Parameters:    Size  Location     Type
 14369 ;;		None
 14370 ;; Auto vars:     Size  Location     Type
 14371 ;;		None
 14372 ;; Return value:  Size  Location     Type
 14373 ;;                  1  [STACK] void 
 14374 ;; Registers used:
 14375 ;;		None
 14376 ;; Tracked objects:
 14377 ;;		On entry : 0/39
 14378 ;;		On exit  : 0/0
 14379 ;;		Unchanged: 0/0
 14380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14385 ;;Total ram usage:        0 bytes
 14386 ;; Hardware stack levels used:    1
 14387 ;; This function calls:
 14388 ;;		Nothing
 14389 ;; This function is called by:
 14390 ;;		_EXT_INT_Initialize
 14391 ;;		_INT1_CallBack
 14392 ;; This function uses a reentrant model
 14393 ;;
 14394                           
 14395                           	psect	text86
 14396  005FDC                     __ptext86:
 14397                           	opt callstack 0
 14398  005FDC                     _INT1_DefaultInterruptHandler:
 14399                           	opt callstack 17
 14400                           
 14401                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 14402                           
 14403                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14404                           ;incstack = 0
 14405  005FDC  0012               	return		;funcret
 14406  005FDE                     __end_of_INT1_DefaultInterruptHandler:
 14407                           	opt callstack 0
 14408                           
 14409 ;; *************** function _INT2_ISR *****************
 14410 ;; Defined at:
 14411 ;;		line 87 in file "mcc_generated_files/ext_int.c"
 14412 ;; Parameters:    Size  Location     Type
 14413 ;;		None
 14414 ;; Auto vars:     Size  Location     Type
 14415 ;;		None
 14416 ;; Return value:  Size  Location     Type
 14417 ;;                  1    wreg      void 
 14418 ;; Registers used:
 14419 ;;		wreg, status,2, status,0, pclath, tosl
 14420 ;; Tracked objects:
 14421 ;;		On entry : 0/0
 14422 ;;		On exit  : 0/0
 14423 ;;		Unchanged: 0/0
 14424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14429 ;;Total ram usage:        0 bytes
 14430 ;; Hardware stack levels used:    1
 14431 ;; Hardware stack levels required when called:    2
 14432 ;; This function calls:
 14433 ;;		_INT2_CallBack
 14434 ;; This function is called by:
 14435 ;;		Interrupt level 2
 14436 ;; This function uses a non-reentrant model
 14437 ;;
 14438                           
 14439                           	psect	text87
 14440  005F60                     __ptext87:
 14441                           	opt callstack 0
 14442  005F60                     _INT2_ISR:
 14443                           	opt callstack 17
 14444                           
 14445                           ;incstack = 0
 14446  005F60  EE13  F150         	lfsr	1,___inthi_sp
 14447                           
 14448                           ;mcc_generated_files/ext_int.c: 89:     (PIR7bits.INT2IF = 0);
 14449  005F64  0139               	movlb	57	; () banked
 14450  005F66  9BA7               	bcf	167,5,b	;volatile
 14451                           
 14452                           ; BSR set to: 57
 14453                           ;mcc_generated_files/ext_int.c: 92:     INT2_CallBack();
 14454  005F68  ECC5  F02E         	call	_INT2_CallBack	;wreg free
 14455  005F6C  0011               	retfie		f
 14456  005F6E                     __end_of_INT2_ISR:
 14457                           	opt callstack 0
 14458                           
 14459 ;; *************** function _INT2_CallBack *****************
 14460 ;; Defined at:
 14461 ;;		line 96 in file "mcc_generated_files/ext_int.c"
 14462 ;; Parameters:    Size  Location     Type
 14463 ;;		None
 14464 ;; Auto vars:     Size  Location     Type
 14465 ;;		None
 14466 ;; Return value:  Size  Location     Type
 14467 ;;                  1  [STACK] void 
 14468 ;; Registers used:
 14469 ;;		wreg, status,2, status,0, pclath, tosl
 14470 ;; Tracked objects:
 14471 ;;		On entry : 3F/39
 14472 ;;		On exit  : 0/0
 14473 ;;		Unchanged: 0/0
 14474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14479 ;;Total ram usage:        0 bytes
 14480 ;; Hardware stack levels used:    1
 14481 ;; Hardware stack levels required when called:    1
 14482 ;; This function calls:
 14483 ;;		Absolute function
 14484 ;;		_INT2_DefaultInterruptHandler
 14485 ;; This function is called by:
 14486 ;;		_INT2_ISR
 14487 ;; This function uses a reentrant model
 14488 ;;
 14489                           
 14490                           	psect	text88
 14491  005D8A                     __ptext88:
 14492                           	opt callstack 0
 14493  005D8A                     _INT2_CallBack:
 14494                           	opt callstack 17
 14495                           
 14496                           ;mcc_generated_files/ext_int.c: 99:     if(INT2_InterruptHandler)
 14497                           
 14498                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14499                           ;incstack = 0
 14500  005D8A  5019               	movf	_INT2_InterruptHandler,w,c
 14501  005D8C  101A               	iorwf	_INT2_InterruptHandler+1,w,c
 14502  005D8E  101B               	iorwf	_INT2_InterruptHandler+2,w,c
 14503  005D90  B4D8               	btfsc	status,2,c
 14504  005D92  0012               	return	
 14505                           
 14506                           ;mcc_generated_files/ext_int.c: 100:     {;mcc_generated_files/ext_int.c: 101:         I
      +                          NT2_InterruptHandler();
 14507  005D94  D801               	call	u153_48
 14508  005D96  0012               	return	
 14509  005D98                     u153_48:
 14510  005D98  0005               	push	
 14511  005D9A  6EFA               	movwf	pclath,c
 14512  005D9C  5019               	movf	_INT2_InterruptHandler,w,c
 14513  005D9E  6EFD               	movwf	tosl,c
 14514  005DA0  501A               	movf	_INT2_InterruptHandler+1,w,c
 14515  005DA2  6EFE               	movwf	tosh,c
 14516  005DA4  501B               	movf	_INT2_InterruptHandler+2,w,c
 14517  005DA6  6EFF               	movwf	tosu,c
 14518  005DA8  50FA               	movf	pclath,w,c
 14519  005DAA  0012               	return		;indir
 14520  005DAC                     __end_of_INT2_CallBack:
 14521                           	opt callstack 0
 14522                           
 14523 ;; *************** function _INT2_DefaultInterruptHandler *****************
 14524 ;; Defined at:
 14525 ;;		line 109 in file "mcc_generated_files/ext_int.c"
 14526 ;; Parameters:    Size  Location     Type
 14527 ;;		None
 14528 ;; Auto vars:     Size  Location     Type
 14529 ;;		None
 14530 ;; Return value:  Size  Location     Type
 14531 ;;                  1  [STACK] void 
 14532 ;; Registers used:
 14533 ;;		None
 14534 ;; Tracked objects:
 14535 ;;		On entry : 0/39
 14536 ;;		On exit  : 0/0
 14537 ;;		Unchanged: 0/0
 14538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14542 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14543 ;;Total ram usage:        0 bytes
 14544 ;; Hardware stack levels used:    1
 14545 ;; This function calls:
 14546 ;;		Nothing
 14547 ;; This function is called by:
 14548 ;;		_EXT_INT_Initialize
 14549 ;;		_INT2_CallBack
 14550 ;; This function uses a reentrant model
 14551 ;;
 14552                           
 14553                           	psect	text89
 14554  005FDE                     __ptext89:
 14555                           	opt callstack 0
 14556  005FDE                     _INT2_DefaultInterruptHandler:
 14557                           	opt callstack 17
 14558                           
 14559                           ; _INT2_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 14560                           
 14561                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14562                           ;incstack = 0
 14563  005FDE  0012               	return		;funcret
 14564  005FE0                     __end_of_INT2_DefaultInterruptHandler:
 14565                           	opt callstack 0
 14566                           
 14567 ;; *************** function _Default_ISR *****************
 14568 ;; Defined at:
 14569 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 14570 ;; Parameters:    Size  Location     Type
 14571 ;;		None
 14572 ;; Auto vars:     Size  Location     Type
 14573 ;;		None
 14574 ;; Return value:  Size  Location     Type
 14575 ;;                  1    wreg      void 
 14576 ;; Registers used:
 14577 ;;		None
 14578 ;; Tracked objects:
 14579 ;;		On entry : 0/0
 14580 ;;		On exit  : 0/0
 14581 ;;		Unchanged: 0/0
 14582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14587 ;;Total ram usage:        0 bytes
 14588 ;; Hardware stack levels used:    1
 14589 ;; This function calls:
 14590 ;;		Nothing
 14591 ;; This function is called by:
 14592 ;;		Interrupt level 2
 14593 ;; This function uses a non-reentrant model
 14594 ;;
 14595                           
 14596                           	psect	text90
 14597  005FD4                     __ptext90:
 14598                           	opt callstack 0
 14599  005FD4                     _Default_ISR:
 14600                           	opt callstack 19
 14601                           
 14602                           ;incstack = 0
 14603  005FD4  EE13  F150         	lfsr	1,___inthi_sp
 14604  005FD8  0011               	retfie		f
 14605  005FDA                     __end_of_Default_ISR:
 14606                           	opt callstack 0
 14607                           
 14608 ;; *************** function _ADCC_ISR *****************
 14609 ;; Defined at:
 14610 ;;		line 307 in file "mcc_generated_files/adcc.c"
 14611 ;; Parameters:    Size  Location     Type
 14612 ;;		None
 14613 ;; Auto vars:     Size  Location     Type
 14614 ;;		None
 14615 ;; Return value:  Size  Location     Type
 14616 ;;                  1    wreg      void 
 14617 ;; Registers used:
 14618 ;;		wreg, status,2, status,0, pclath, tosl
 14619 ;; Tracked objects:
 14620 ;;		On entry : 0/0
 14621 ;;		On exit  : 0/0
 14622 ;;		Unchanged: 0/0
 14623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14628 ;;Total ram usage:        0 bytes
 14629 ;; Hardware stack levels used:    1
 14630 ;; Hardware stack levels required when called:    1
 14631 ;; This function calls:
 14632 ;;		Absolute function
 14633 ;;		_ADCC_DefaultInterruptHandler
 14634 ;; This function is called by:
 14635 ;;		Interrupt level 2
 14636 ;; This function uses a non-reentrant model
 14637 ;;
 14638                           
 14639                           	psect	text91
 14640  0059E0                     __ptext91:
 14641                           	opt callstack 0
 14642  0059E0                     _ADCC_ISR:
 14643                           	opt callstack 18
 14644                           
 14645                           ;incstack = 0
 14646  0059E0  EE13  F150         	lfsr	1,___inthi_sp
 14647                           
 14648                           ;mcc_generated_files/adcc.c: 310:     PIR1bits.ADIF = 0;
 14649  0059E4  0139               	movlb	57	; () banked
 14650  0059E6  95A1               	bcf	161,2,b	;volatile
 14651                           
 14652                           ; BSR set to: 57
 14653                           ;mcc_generated_files/adcc.c: 312:     if (ADCC_ADI_InterruptHandler)
 14654  0059E8  500A               	movf	_ADCC_ADI_InterruptHandler,w,c
 14655  0059EA  100B               	iorwf	_ADCC_ADI_InterruptHandler+1,w,c
 14656  0059EC  100C               	iorwf	_ADCC_ADI_InterruptHandler+2,w,c
 14657  0059EE  B4D8               	btfsc	status,2,c
 14658  0059F0  0011               	retfie		f
 14659                           
 14660                           ; BSR set to: 57
 14661                           ;mcc_generated_files/adcc.c: 313:             ADCC_ADI_InterruptHandler();
 14662  0059F2  D801               	call	i2u187_48
 14663  0059F4  0011               	retfie		f
 14664  0059F6                     i2u187_48:
 14665  0059F6  0005               	push	
 14666  0059F8  6EFA               	movwf	pclath,c
 14667  0059FA  500A               	movf	_ADCC_ADI_InterruptHandler,w,c
 14668  0059FC  6EFD               	movwf	tosl,c
 14669  0059FE  500B               	movf	_ADCC_ADI_InterruptHandler+1,w,c
 14670  005A00  6EFE               	movwf	tosh,c
 14671  005A02  500C               	movf	_ADCC_ADI_InterruptHandler+2,w,c
 14672  005A04  6EFF               	movwf	tosu,c
 14673  005A06  50FA               	movf	pclath,w,c
 14674  005A08  0012               	return		;indir
 14675  005A0A                     __end_of_ADCC_ISR:
 14676                           	opt callstack 0
 14677                           
 14678 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 14679 ;; Defined at:
 14680 ;;		line 320 in file "mcc_generated_files/adcc.c"
 14681 ;; Parameters:    Size  Location     Type
 14682 ;;		None
 14683 ;; Auto vars:     Size  Location     Type
 14684 ;;		None
 14685 ;; Return value:  Size  Location     Type
 14686 ;;                  1  [STACK] void 
 14687 ;; Registers used:
 14688 ;;		None
 14689 ;; Tracked objects:
 14690 ;;		On entry : 3F/39
 14691 ;;		On exit  : 0/0
 14692 ;;		Unchanged: 0/0
 14693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14698 ;;Total ram usage:        0 bytes
 14699 ;; Hardware stack levels used:    1
 14700 ;; This function calls:
 14701 ;;		Nothing
 14702 ;; This function is called by:
 14703 ;;		_ADCC_Initialize
 14704 ;;		_ADCC_ISR
 14705 ;; This function uses a reentrant model
 14706 ;;
 14707                           
 14708                           	psect	text92
 14709  005FE0                     __ptext92:
 14710                           	opt callstack 0
 14711  005FE0                     _ADCC_DefaultInterruptHandler:
 14712                           	opt callstack 18
 14713                           
 14714                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 14715                           
 14716                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14717                           ;incstack = 0
 14718  005FE0  0012               	return		;funcret
 14719  005FE2                     __end_of_ADCC_DefaultInterruptHandler:
 14720                           	opt callstack 0
 14721                           
 14722 ;; *************** function _UART1_tx_vect_isr *****************
 14723 ;; Defined at:
 14724 ;;		line 197 in file "mcc_generated_files/uart1.c"
 14725 ;; Parameters:    Size  Location     Type
 14726 ;;		None
 14727 ;; Auto vars:     Size  Location     Type
 14728 ;;		None
 14729 ;; Return value:  Size  Location     Type
 14730 ;;                  1    wreg      void 
 14731 ;; Registers used:
 14732 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 14733 ;; Tracked objects:
 14734 ;;		On entry : 0/0
 14735 ;;		On exit  : 0/0
 14736 ;;		Unchanged: 0/0
 14737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14741 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14742 ;;Total ram usage:        0 bytes
 14743 ;; Hardware stack levels used:    1
 14744 ;; Hardware stack levels required when called:    1
 14745 ;; This function calls:
 14746 ;;		Absolute function
 14747 ;;		_UART1_Transmit_ISR
 14748 ;; This function is called by:
 14749 ;;		Interrupt level 2
 14750 ;; This function uses a non-reentrant model
 14751 ;;
 14752                           
 14753                           	psect	text93
 14754  005C64                     __ptext93:
 14755                           	opt callstack 0
 14756  005C64                     _UART1_tx_vect_isr:
 14757                           	opt callstack 18
 14758                           
 14759                           ;incstack = 0
 14760  005C64  EE13  F150         	lfsr	1,___inthi_sp
 14761                           
 14762                           ;mcc_generated_files/uart1.c: 199:  if (UART1_TxInterruptHandler) {
 14763  005C68  500D               	movf	_UART1_TxInterruptHandler,w,c
 14764  005C6A  100E               	iorwf	_UART1_TxInterruptHandler+1,w,c
 14765  005C6C  100F               	iorwf	_UART1_TxInterruptHandler+2,w,c
 14766  005C6E  B4D8               	btfsc	status,2,c
 14767  005C70  0011               	retfie		f
 14768                           
 14769                           ;mcc_generated_files/uart1.c: 200:   UART1_TxInterruptHandler();
 14770  005C72  D801               	call	i2u379_48
 14771  005C74  0011               	retfie		f
 14772  005C76                     i2u379_48:
 14773  005C76  0005               	push	
 14774  005C78  6EFA               	movwf	pclath,c
 14775  005C7A  500D               	movf	_UART1_TxInterruptHandler,w,c
 14776  005C7C  6EFD               	movwf	tosl,c
 14777  005C7E  500E               	movf	_UART1_TxInterruptHandler+1,w,c
 14778  005C80  6EFE               	movwf	tosh,c
 14779  005C82  500F               	movf	_UART1_TxInterruptHandler+2,w,c
 14780  005C84  6EFF               	movwf	tosu,c
 14781  005C86  50FA               	movf	pclath,w,c
 14782  005C88  0012               	return		;indir
 14783  005C8A                     __end_of_UART1_tx_vect_isr:
 14784                           	opt callstack 0
 14785                           
 14786 ;; *************** function _UART1_Transmit_ISR *****************
 14787 ;; Defined at:
 14788 ;;		line 211 in file "mcc_generated_files/uart1.c"
 14789 ;; Parameters:    Size  Location     Type
 14790 ;;		None
 14791 ;; Auto vars:     Size  Location     Type
 14792 ;;		None
 14793 ;; Return value:  Size  Location     Type
 14794 ;;                  1  [STACK] void 
 14795 ;; Registers used:
 14796 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14797 ;; Tracked objects:
 14798 ;;		On entry : 0/0
 14799 ;;		On exit  : 3B/39
 14800 ;;		Unchanged: 0/0
 14801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14806 ;;Total ram usage:        0 bytes
 14807 ;; Hardware stack levels used:    1
 14808 ;; This function calls:
 14809 ;;		Nothing
 14810 ;; This function is called by:
 14811 ;;		_UART1_Initialize
 14812 ;;		_UART1_tx_vect_isr
 14813 ;; This function uses a reentrant model
 14814 ;;
 14815                           
 14816                           	psect	text94
 14817  005932                     __ptext94:
 14818                           	opt callstack 0
 14819  005932                     _UART1_Transmit_ISR:
 14820                           	opt callstack 18
 14821                           
 14822                           ;mcc_generated_files/uart1.c: 214:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 14823                           
 14824                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14825                           ;incstack = 0
 14826  005932  0E40               	movlw	64
 14827  005934  603A               	cpfslt	_uart1TxBufferRemaining,c
 14828  005936  D010               	goto	l597
 14829                           
 14830                           ;mcc_generated_files/uart1.c: 215:   U1TXB = uart1TxBuffer[uart1TxTail++];
 14831  005938  0E80               	movlw	low _uart1TxBuffer
 14832  00593A  243B               	addwf	_uart1TxTail,w,c	;volatile
 14833  00593C  6ED9               	movwf	fsr2l,c
 14834  00593E  6ADA               	clrf	fsr2h,c
 14835  005940  0E02               	movlw	high _uart1TxBuffer
 14836  005942  22DA               	addwfc	fsr2h,f,c
 14837  005944  50DF               	movf	indf2,w,c
 14838  005946  013D               	movlb	61	; () banked
 14839  005948  6FEA               	movwf	234,b	;volatile
 14840                           
 14841                           ; BSR set to: 61
 14842  00594A  2A3B               	incf	_uart1TxTail,f,c	;volatile
 14843                           
 14844                           ; BSR set to: 61
 14845                           ;mcc_generated_files/uart1.c: 216:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 14846  00594C  0E3F               	movlw	63
 14847  00594E  643B               	cpfsgt	_uart1TxTail,c
 14848  005950  D001               	goto	l6234
 14849                           
 14850                           ; BSR set to: 61
 14851                           ;mcc_generated_files/uart1.c: 217:    uart1TxTail = 0;
 14852  005952  6A3B               	clrf	_uart1TxTail,c	;volatile
 14853  005954                     l6234:
 14854                           
 14855                           ; BSR set to: 61
 14856                           ;mcc_generated_files/uart1.c: 219:   uart1TxBufferRemaining++;
 14857  005954  2A3A               	incf	_uart1TxBufferRemaining,f,c	;volatile
 14858                           
 14859                           ;mcc_generated_files/uart1.c: 220:  } else {
 14860  005956  0012               	return	
 14861  005958                     l597:
 14862                           
 14863                           ;mcc_generated_files/uart1.c: 221:   PIE3bits.U1TXIE = 0;
 14864  005958  0139               	movlb	57	; () banked
 14865  00595A  9993               	bcf	147,4,b	;volatile
 14866                           
 14867                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 14868  00595C  0012               	return		;funcret
 14869  00595E                     __end_of_UART1_Transmit_ISR:
 14870                           	opt callstack 0
 14871                           
 14872 ;; *************** function _UART1_rx_vect_isr *****************
 14873 ;; Defined at:
 14874 ;;		line 204 in file "mcc_generated_files/uart1.c"
 14875 ;; Parameters:    Size  Location     Type
 14876 ;;		None
 14877 ;; Auto vars:     Size  Location     Type
 14878 ;;		None
 14879 ;; Return value:  Size  Location     Type
 14880 ;;                  1    wreg      void 
 14881 ;; Registers used:
 14882 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 14883 ;; Tracked objects:
 14884 ;;		On entry : 0/0
 14885 ;;		On exit  : 0/0
 14886 ;;		Unchanged: 0/0
 14887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14891 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14892 ;;Total ram usage:        0 bytes
 14893 ;; Hardware stack levels used:    1
 14894 ;; Hardware stack levels required when called:    1
 14895 ;; This function calls:
 14896 ;;		Absolute function
 14897 ;;		_UART1_Receive_ISR
 14898 ;; This function is called by:
 14899 ;;		Interrupt level 2
 14900 ;; This function uses a non-reentrant model
 14901 ;;
 14902                           
 14903                           	psect	text95
 14904  005C8C                     __ptext95:
 14905                           	opt callstack 0
 14906  005C8C                     _UART1_rx_vect_isr:
 14907                           	opt callstack 18
 14908                           
 14909                           ;incstack = 0
 14910  005C8C  EE13  F150         	lfsr	1,___inthi_sp
 14911                           
 14912                           ;mcc_generated_files/uart1.c: 206:  if (UART1_RxInterruptHandler) {
 14913  005C90  5010               	movf	_UART1_RxInterruptHandler,w,c
 14914  005C92  1011               	iorwf	_UART1_RxInterruptHandler+1,w,c
 14915  005C94  1012               	iorwf	_UART1_RxInterruptHandler+2,w,c
 14916  005C96  B4D8               	btfsc	status,2,c
 14917  005C98  0011               	retfie		f
 14918                           
 14919                           ;mcc_generated_files/uart1.c: 207:   UART1_RxInterruptHandler();
 14920  005C9A  D801               	call	i2u381_48
 14921  005C9C  0011               	retfie		f
 14922  005C9E                     i2u381_48:
 14923  005C9E  0005               	push	
 14924  005CA0  6EFA               	movwf	pclath,c
 14925  005CA2  5010               	movf	_UART1_RxInterruptHandler,w,c
 14926  005CA4  6EFD               	movwf	tosl,c
 14927  005CA6  5011               	movf	_UART1_RxInterruptHandler+1,w,c
 14928  005CA8  6EFE               	movwf	tosh,c
 14929  005CAA  5012               	movf	_UART1_RxInterruptHandler+2,w,c
 14930  005CAC  6EFF               	movwf	tosu,c
 14931  005CAE  50FA               	movf	pclath,w,c
 14932  005CB0  0012               	return		;indir
 14933  005CB2                     __end_of_UART1_rx_vect_isr:
 14934                           	opt callstack 0
 14935                           
 14936 ;; *************** function _UART1_Receive_ISR *****************
 14937 ;; Defined at:
 14938 ;;		line 227 in file "mcc_generated_files/uart1.c"
 14939 ;; Parameters:    Size  Location     Type
 14940 ;;		None
 14941 ;; Auto vars:     Size  Location     Type
 14942 ;;		None
 14943 ;; Return value:  Size  Location     Type
 14944 ;;                  1  [STACK] void 
 14945 ;; Registers used:
 14946 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14947 ;; Tracked objects:
 14948 ;;		On entry : 0/0
 14949 ;;		On exit  : 0/0
 14950 ;;		Unchanged: 0/0
 14951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14956 ;;Total ram usage:        0 bytes
 14957 ;; Hardware stack levels used:    1
 14958 ;; This function calls:
 14959 ;;		Nothing
 14960 ;; This function is called by:
 14961 ;;		_UART1_Initialize
 14962 ;;		_UART1_rx_vect_isr
 14963 ;; This function uses a reentrant model
 14964 ;;
 14965                           
 14966                           	psect	text96
 14967  005DF0                     __ptext96:
 14968                           	opt callstack 0
 14969  005DF0                     _UART1_Receive_ISR:
 14970                           	opt callstack 18
 14971                           
 14972                           ;mcc_generated_files/uart1.c: 230:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 14973                           
 14974                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14975                           ;incstack = 0
 14976  005DF0  0EA1               	movlw	low _uart1RxBuffer
 14977  005DF2  2439               	addwf	_uart1RxHead,w,c	;volatile
 14978  005DF4  6ED9               	movwf	fsr2l,c
 14979  005DF6  6ADA               	clrf	fsr2h,c
 14980  005DF8  0E01               	movlw	high _uart1RxBuffer
 14981  005DFA  22DA               	addwfc	fsr2h,f,c
 14982  005DFC  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 14983  005E02  2A39               	incf	_uart1RxHead,f,c	;volatile
 14984                           
 14985                           ;mcc_generated_files/uart1.c: 231:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 14986  005E04  0E3F               	movlw	63
 14987  005E06  6439               	cpfsgt	_uart1RxHead,c
 14988  005E08  D001               	goto	l6244
 14989                           
 14990                           ;mcc_generated_files/uart1.c: 232:   uart1RxHead = 0;
 14991  005E0A  6A39               	clrf	_uart1RxHead,c	;volatile
 14992  005E0C                     l6244:
 14993                           
 14994                           ;mcc_generated_files/uart1.c: 234:  uart1RxCount++;
 14995  005E0C  2A37               	incf	_uart1RxCount,f,c	;volatile
 14996                           
 14997                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 14998  005E0E  0012               	return		;funcret
 14999  005E10                     __end_of_UART1_Receive_ISR:
 15000                           	opt callstack 0
 15001                           
 15002 ;; *************** function _UART2_tx_vect_isr *****************
 15003 ;; Defined at:
 15004 ;;		line 195 in file "mcc_generated_files/uart2.c"
 15005 ;; Parameters:    Size  Location     Type
 15006 ;;		None
 15007 ;; Auto vars:     Size  Location     Type
 15008 ;;		None
 15009 ;; Return value:  Size  Location     Type
 15010 ;;                  1    wreg      void 
 15011 ;; Registers used:
 15012 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 15013 ;; Tracked objects:
 15014 ;;		On entry : 0/0
 15015 ;;		On exit  : 0/0
 15016 ;;		Unchanged: 0/0
 15017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15021 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15022 ;;Total ram usage:        0 bytes
 15023 ;; Hardware stack levels used:    1
 15024 ;; Hardware stack levels required when called:    1
 15025 ;; This function calls:
 15026 ;;		Absolute function
 15027 ;;		_UART2_Transmit_ISR
 15028 ;; This function is called by:
 15029 ;;		Interrupt level 2
 15030 ;; This function uses a non-reentrant model
 15031 ;;
 15032                           
 15033                           	psect	text97
 15034  005CB4                     __ptext97:
 15035                           	opt callstack 0
 15036  005CB4                     _UART2_tx_vect_isr:
 15037                           	opt callstack 18
 15038                           
 15039                           ;incstack = 0
 15040  005CB4  EE13  F150         	lfsr	1,___inthi_sp
 15041                           
 15042                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 15043  005CB8  5013               	movf	_UART2_TxInterruptHandler,w,c
 15044  005CBA  1014               	iorwf	_UART2_TxInterruptHandler+1,w,c
 15045  005CBC  1015               	iorwf	_UART2_TxInterruptHandler+2,w,c
 15046  005CBE  B4D8               	btfsc	status,2,c
 15047  005CC0  0011               	retfie		f
 15048                           
 15049                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 15050  005CC2  D801               	call	i2u383_48
 15051  005CC4  0011               	retfie		f
 15052  005CC6                     i2u383_48:
 15053  005CC6  0005               	push	
 15054  005CC8  6EFA               	movwf	pclath,c
 15055  005CCA  5013               	movf	_UART2_TxInterruptHandler,w,c
 15056  005CCC  6EFD               	movwf	tosl,c
 15057  005CCE  5014               	movf	_UART2_TxInterruptHandler+1,w,c
 15058  005CD0  6EFE               	movwf	tosh,c
 15059  005CD2  5015               	movf	_UART2_TxInterruptHandler+2,w,c
 15060  005CD4  6EFF               	movwf	tosu,c
 15061  005CD6  50FA               	movf	pclath,w,c
 15062  005CD8  0012               	return		;indir
 15063  005CDA                     __end_of_UART2_tx_vect_isr:
 15064                           	opt callstack 0
 15065                           
 15066 ;; *************** function _UART2_Transmit_ISR *****************
 15067 ;; Defined at:
 15068 ;;		line 213 in file "mcc_generated_files/uart2.c"
 15069 ;; Parameters:    Size  Location     Type
 15070 ;;		None
 15071 ;; Auto vars:     Size  Location     Type
 15072 ;;		None
 15073 ;; Return value:  Size  Location     Type
 15074 ;;                  1  [STACK] void 
 15075 ;; Registers used:
 15076 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15077 ;; Tracked objects:
 15078 ;;		On entry : 0/0
 15079 ;;		On exit  : 3B/39
 15080 ;;		Unchanged: 0/0
 15081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15086 ;;Total ram usage:        0 bytes
 15087 ;; Hardware stack levels used:    1
 15088 ;; This function calls:
 15089 ;;		Nothing
 15090 ;; This function is called by:
 15091 ;;		_UART2_Initialize
 15092 ;;		_UART2_tx_vect_isr
 15093 ;; This function uses a reentrant model
 15094 ;;
 15095                           
 15096                           	psect	text98
 15097  00595E                     __ptext98:
 15098                           	opt callstack 0
 15099  00595E                     _UART2_Transmit_ISR:
 15100                           	opt callstack 18
 15101                           
 15102                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 15103                           
 15104                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15105                           ;incstack = 0
 15106  00595E  0E40               	movlw	64
 15107  005960  6034               	cpfslt	_uart2TxBufferRemaining,c
 15108  005962  D010               	goto	l717
 15109                           
 15110                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 15111  005964  0E40               	movlw	low _uart2TxBuffer
 15112  005966  2435               	addwf	_uart2TxTail,w,c	;volatile
 15113  005968  6ED9               	movwf	fsr2l,c
 15114  00596A  6ADA               	clrf	fsr2h,c
 15115  00596C  0E02               	movlw	high _uart2TxBuffer
 15116  00596E  22DA               	addwfc	fsr2h,f,c
 15117  005970  50DF               	movf	indf2,w,c
 15118  005972  013D               	movlb	61	; () banked
 15119  005974  6FD2               	movwf	210,b	;volatile
 15120                           
 15121                           ; BSR set to: 61
 15122  005976  2A35               	incf	_uart2TxTail,f,c	;volatile
 15123                           
 15124                           ; BSR set to: 61
 15125                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 15126  005978  0E3F               	movlw	63
 15127  00597A  6435               	cpfsgt	_uart2TxTail,c
 15128  00597C  D001               	goto	l6256
 15129                           
 15130                           ; BSR set to: 61
 15131                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 15132  00597E  6A35               	clrf	_uart2TxTail,c	;volatile
 15133  005980                     l6256:
 15134                           
 15135                           ; BSR set to: 61
 15136                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 15137  005980  2A34               	incf	_uart2TxBufferRemaining,f,c	;volatile
 15138                           
 15139                           ;mcc_generated_files/uart2.c: 224:     }
 15140  005982  0012               	return	
 15141  005984                     l717:
 15142                           
 15143                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 15144  005984  0139               	movlb	57	; () banked
 15145  005986  9796               	bcf	150,3,b	;volatile
 15146                           
 15147                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 15148  005988  0012               	return		;funcret
 15149  00598A                     __end_of_UART2_Transmit_ISR:
 15150                           	opt callstack 0
 15151                           
 15152 ;; *************** function _UART2_rx_vect_isr *****************
 15153 ;; Defined at:
 15154 ;;		line 203 in file "mcc_generated_files/uart2.c"
 15155 ;; Parameters:    Size  Location     Type
 15156 ;;		None
 15157 ;; Auto vars:     Size  Location     Type
 15158 ;;		None
 15159 ;; Return value:  Size  Location     Type
 15160 ;;                  1    wreg      void 
 15161 ;; Registers used:
 15162 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 15163 ;; Tracked objects:
 15164 ;;		On entry : 0/0
 15165 ;;		On exit  : 0/0
 15166 ;;		Unchanged: 0/0
 15167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15172 ;;Total ram usage:        0 bytes
 15173 ;; Hardware stack levels used:    1
 15174 ;; Hardware stack levels required when called:    1
 15175 ;; This function calls:
 15176 ;;		Absolute function
 15177 ;;		_UART2_Receive_ISR
 15178 ;; This function is called by:
 15179 ;;		Interrupt level 2
 15180 ;; This function uses a non-reentrant model
 15181 ;;
 15182                           
 15183                           	psect	text99
 15184  005CDC                     __ptext99:
 15185                           	opt callstack 0
 15186  005CDC                     _UART2_rx_vect_isr:
 15187                           	opt callstack 18
 15188                           
 15189                           ;incstack = 0
 15190  005CDC  EE13  F150         	lfsr	1,___inthi_sp
 15191                           
 15192                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 15193  005CE0  5016               	movf	_UART2_RxInterruptHandler,w,c
 15194  005CE2  1017               	iorwf	_UART2_RxInterruptHandler+1,w,c
 15195  005CE4  1018               	iorwf	_UART2_RxInterruptHandler+2,w,c
 15196  005CE6  B4D8               	btfsc	status,2,c
 15197  005CE8  0011               	retfie		f
 15198                           
 15199                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 15200  005CEA  D801               	call	i2u385_48
 15201  005CEC  0011               	retfie		f
 15202  005CEE                     i2u385_48:
 15203  005CEE  0005               	push	
 15204  005CF0  6EFA               	movwf	pclath,c
 15205  005CF2  5016               	movf	_UART2_RxInterruptHandler,w,c
 15206  005CF4  6EFD               	movwf	tosl,c
 15207  005CF6  5017               	movf	_UART2_RxInterruptHandler+1,w,c
 15208  005CF8  6EFE               	movwf	tosh,c
 15209  005CFA  5018               	movf	_UART2_RxInterruptHandler+2,w,c
 15210  005CFC  6EFF               	movwf	tosu,c
 15211  005CFE  50FA               	movf	pclath,w,c
 15212  005D00  0012               	return		;indir
 15213  005D02                     __end_of_UART2_rx_vect_isr:
 15214                           	opt callstack 0
 15215                           
 15216 ;; *************** function _UART2_Receive_ISR *****************
 15217 ;; Defined at:
 15218 ;;		line 233 in file "mcc_generated_files/uart2.c"
 15219 ;; Parameters:    Size  Location     Type
 15220 ;;		None
 15221 ;; Auto vars:     Size  Location     Type
 15222 ;;		None
 15223 ;; Return value:  Size  Location     Type
 15224 ;;                  1  [STACK] void 
 15225 ;; Registers used:
 15226 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15227 ;; Tracked objects:
 15228 ;;		On entry : 0/0
 15229 ;;		On exit  : 0/0
 15230 ;;		Unchanged: 0/0
 15231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15235 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15236 ;;Total ram usage:        0 bytes
 15237 ;; Hardware stack levels used:    1
 15238 ;; This function calls:
 15239 ;;		Nothing
 15240 ;; This function is called by:
 15241 ;;		_UART2_Initialize
 15242 ;;		_UART2_rx_vect_isr
 15243 ;; This function uses a reentrant model
 15244 ;;
 15245                           
 15246                           	psect	text100
 15247  005E10                     __ptext100:
 15248                           	opt callstack 0
 15249  005E10                     _UART2_Receive_ISR:
 15250                           	opt callstack 18
 15251                           
 15252                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 15253                           
 15254                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15255                           ;incstack = 0
 15256  005E10  0E00               	movlw	low _uart2RxBuffer
 15257  005E12  2433               	addwf	_uart2RxHead,w,c	;volatile
 15258  005E14  6ED9               	movwf	fsr2l,c
 15259  005E16  6ADA               	clrf	fsr2h,c
 15260  005E18  0E02               	movlw	high _uart2RxBuffer
 15261  005E1A  22DA               	addwfc	fsr2h,f,c
 15262  005E1C  006F F743 FFDF     	movff	15824,indf2	;volatile
 15263  005E22  2A33               	incf	_uart2RxHead,f,c	;volatile
 15264                           
 15265                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 15266  005E24  0E3F               	movlw	63
 15267  005E26  6433               	cpfsgt	_uart2RxHead,c
 15268  005E28  D001               	goto	l6266
 15269                           
 15270                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 15271  005E2A  6A33               	clrf	_uart2RxHead,c	;volatile
 15272  005E2C                     l6266:
 15273                           
 15274                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 15275  005E2C  2A31               	incf	_uart2RxCount,f,c	;volatile
 15276                           
 15277                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 15278  005E2E  0012               	return		;funcret
 15279  005E30                     __end_of_UART2_Receive_ISR:
 15280                           	opt callstack 0
 15281                           
 15282 ;; *************** function _TMR6_ISR *****************
 15283 ;; Defined at:
 15284 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 15285 ;; Parameters:    Size  Location     Type
 15286 ;;		None
 15287 ;; Auto vars:     Size  Location     Type
 15288 ;;		None
 15289 ;; Return value:  Size  Location     Type
 15290 ;;                  1    wreg      void 
 15291 ;; Registers used:
 15292 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 15293 ;; Tracked objects:
 15294 ;;		On entry : 0/0
 15295 ;;		On exit  : 0/0
 15296 ;;		Unchanged: 0/0
 15297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15300 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15301 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15302 ;;Total ram usage:        1 bytes
 15303 ;; Hardware stack levels used:    1
 15304 ;; Hardware stack levels required when called:    2
 15305 ;; This function calls:
 15306 ;;		_TMR6_CallBack
 15307 ;; This function is called by:
 15308 ;;		Interrupt level 2
 15309 ;; This function uses a non-reentrant model
 15310 ;;
 15311                           
 15312                           	psect	text101
 15313  005EBC                     __ptext101:
 15314                           	opt callstack 0
 15315  005EBC                     _TMR6_ISR:
 15316                           	opt callstack 17
 15317                           
 15318                           ;incstack = 0
 15319  005EBC  0060  F0F4  F05D   	movff	btemp,??_TMR6_ISR
 15320  005EC2  EE13  F150         	lfsr	1,___inthi_sp
 15321                           
 15322                           ;mcc_generated_files/tmr6.c: 175:  PIR9bits.TMR6IF = 0;
 15323  005EC6  0139               	movlb	57	; () banked
 15324  005EC8  91A9               	bcf	169,0,b	;volatile
 15325                           
 15326                           ; BSR set to: 57
 15327                           ;mcc_generated_files/tmr6.c: 179:  TMR6_CallBack();
 15328  005ECA  ECD6  F02E         	call	_TMR6_CallBack	;wreg free
 15329  005ECE  0060  F174  F03D   	movff	??_TMR6_ISR,btemp
 15330  005ED4  0011               	retfie		f
 15331  005ED6                     __end_of_TMR6_ISR:
 15332                           	opt callstack 0
 15333                           
 15334 ;; *************** function _TMR6_CallBack *****************
 15335 ;; Defined at:
 15336 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 15337 ;; Parameters:    Size  Location     Type
 15338 ;;		None
 15339 ;; Auto vars:     Size  Location     Type
 15340 ;;		None
 15341 ;; Return value:  Size  Location     Type
 15342 ;;                  1  [STACK] void 
 15343 ;; Registers used:
 15344 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 15345 ;; Tracked objects:
 15346 ;;		On entry : 3F/39
 15347 ;;		On exit  : 0/0
 15348 ;;		Unchanged: 0/0
 15349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15354 ;;Total ram usage:        0 bytes
 15355 ;; Hardware stack levels used:    1
 15356 ;; Hardware stack levels required when called:    1
 15357 ;; This function calls:
 15358 ;;		Absolute function
 15359 ;;		_TMR6_DefaultInterruptHandler
 15360 ;; This function is called by:
 15361 ;;		_TMR6_ISR
 15362 ;; This function uses a reentrant model
 15363 ;;
 15364                           
 15365                           	psect	text102
 15366  005DAC                     __ptext102:
 15367                           	opt callstack 0
 15368  005DAC                     _TMR6_CallBack:
 15369                           	opt callstack 17
 15370                           
 15371                           ;mcc_generated_files/tmr6.c: 186:  if (TMR6_InterruptHandler) {
 15372                           
 15373                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15374                           ;incstack = 0
 15375  005DAC  5007               	movf	_TMR6_InterruptHandler,w,c
 15376  005DAE  1008               	iorwf	_TMR6_InterruptHandler+1,w,c
 15377  005DB0  1009               	iorwf	_TMR6_InterruptHandler+2,w,c
 15378  005DB2  B4D8               	btfsc	status,2,c
 15379  005DB4  0012               	return	
 15380                           
 15381                           ;mcc_generated_files/tmr6.c: 187:   TMR6_InterruptHandler();
 15382  005DB6  D801               	call	u356_48
 15383  005DB8  0012               	return	
 15384  005DBA                     u356_48:
 15385  005DBA  0005               	push	
 15386  005DBC  6EFA               	movwf	pclath,c
 15387  005DBE  5007               	movf	_TMR6_InterruptHandler,w,c
 15388  005DC0  6EFD               	movwf	tosl,c
 15389  005DC2  5008               	movf	_TMR6_InterruptHandler+1,w,c
 15390  005DC4  6EFE               	movwf	tosh,c
 15391  005DC6  5009               	movf	_TMR6_InterruptHandler+2,w,c
 15392  005DC8  6EFF               	movwf	tosu,c
 15393  005DCA  50FA               	movf	pclath,w,c
 15394  005DCC  0012               	return		;indir
 15395  005DCE                     __end_of_TMR6_CallBack:
 15396                           	opt callstack 0
 15397                           
 15398 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 15399 ;; Defined at:
 15400 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 15401 ;; Parameters:    Size  Location     Type
 15402 ;;		None
 15403 ;; Auto vars:     Size  Location     Type
 15404 ;;  i               1  [STACK] unsigned char 
 15405 ;; Return value:  Size  Location     Type
 15406 ;;                  1  [STACK] void 
 15407 ;; Registers used:
 15408 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 15409 ;; Tracked objects:
 15410 ;;		On entry : 0/39
 15411 ;;		On exit  : 0/0
 15412 ;;		Unchanged: 0/0
 15413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15417 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15418 ;;Total ram usage:        0 bytes
 15419 ;; Hardware stack levels used:    1
 15420 ;; This function calls:
 15421 ;;		Nothing
 15422 ;; This function is called by:
 15423 ;;		_TMR6_Initialize
 15424 ;;		_TMR6_CallBack
 15425 ;; This function uses a reentrant model
 15426 ;;
 15427                           
 15428                           	psect	text103
 15429  005672                     __ptext103:
 15430                           	opt callstack 0
 15431  005672                     _TMR6_DefaultInterruptHandler:
 15432                           	opt callstack 0
 15433                           
 15434                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15435  005672  52E6               	movf	postinc1,f,c
 15436                           
 15437                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 15438                           ;stkvar	_i @ sp[(-1)+0]
 15439                           
 15440                           ;incstack = 0
 15441  005674  0EFF               	movlw	-1
 15442  005676  6AE3               	clrf	plusw1,c
 15443  005678                     l5966:
 15444                           
 15445                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 15446                           ;stkvar	_i @ sp[(-1)+0]
 15447  005678  0EFF               	movlw	-1
 15448  00567A  50E3               	movf	plusw1,w,c
 15449  00567C  0D02               	mullw	2
 15450  00567E  50F3               	movf	prodl,w,c
 15451  005680  0F79               	addlw	low _tickCount
 15452  005682  6ED9               	movwf	fsr2l,c
 15453  005684  6ADA               	clrf	fsr2h,c
 15454  005686  50DE               	movf	postinc2,w,c
 15455  005688  10DE               	iorwf	postinc2,w,c
 15456  00568A  B4D8               	btfsc	status,2,c
 15457  00568C  D00A               	goto	l5970
 15458                           
 15459                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 15460                           ;stkvar	_i @ sp[(-1)+0]
 15461  00568E  0EFF               	movlw	-1
 15462  005690  50E3               	movf	plusw1,w,c
 15463  005692  0D02               	mullw	2
 15464  005694  50F3               	movf	prodl,w,c
 15465  005696  0F79               	addlw	low _tickCount
 15466  005698  6ED9               	movwf	fsr2l,c
 15467  00569A  6ADA               	clrf	fsr2h,c
 15468  00569C  06DE               	decf	postinc2,f,c
 15469  00569E  0E00               	movlw	0
 15470  0056A0  5ADD               	subwfb	postdec2,f,c
 15471  0056A2                     l5970:
 15472                           
 15473                           ;mcc_generated_files/tmr6.c: 207:  }
 15474                           ;stkvar	_i @ sp[(-1)+0]
 15475  0056A2  0EFF               	movlw	-1
 15476  0056A4  2AE3               	incf	plusw1,f,c
 15477                           
 15478                           ;stkvar	_i @ sp[(-1)+0]
 15479  0056A6  0EFF               	movlw	-1
 15480  0056A8  006F FF8C  F03D    	movff	plusw1,btemp
 15481  0056AE  0E05               	movlw	5
 15482  0056B0  643D               	cpfsgt	btemp,c
 15483  0056B2  D7E2               	goto	l5966
 15484                           
 15485                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 15486  0056B4  52E5               	movf	postdec1,f,c
 15487  0056B6  0012               	return		;funcret
 15488  0056B8                     __end_of_TMR6_DefaultInterruptHandler:
 15489                           	opt callstack 0
 15490                           
 15491 ;; *************** function _DMA1_DMASCNT_ISR *****************
 15492 ;; Defined at:
 15493 ;;		line 126 in file "mcc_generated_files/dma1.c"
 15494 ;; Parameters:    Size  Location     Type
 15495 ;;		None
 15496 ;; Auto vars:     Size  Location     Type
 15497 ;;		None
 15498 ;; Return value:  Size  Location     Type
 15499 ;;                  1    wreg      void 
 15500 ;; Registers used:
 15501 ;;		None
 15502 ;; Tracked objects:
 15503 ;;		On entry : 0/0
 15504 ;;		On exit  : 3F/0
 15505 ;;		Unchanged: 0/0
 15506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15511 ;;Total ram usage:        0 bytes
 15512 ;; Hardware stack levels used:    1
 15513 ;; This function calls:
 15514 ;;		Nothing
 15515 ;; This function is called by:
 15516 ;;		Interrupt level 2
 15517 ;; This function uses a non-reentrant model
 15518 ;;
 15519                           
 15520                           	psect	text104
 15521  005F70                     __ptext104:
 15522                           	opt callstack 0
 15523  005F70                     _DMA1_DMASCNT_ISR:
 15524                           	opt callstack 19
 15525                           
 15526                           ;incstack = 0
 15527  005F70  EE13  F150         	lfsr	1,___inthi_sp
 15528                           
 15529                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 15530  005F74  0139               	movlb	57	; () banked
 15531  005F76  91A2               	bcf	162,0,b	;volatile
 15532                           
 15533                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 15534  005F78  0100               	movlb	0	; () banked
 15535  005F7A  976D               	bcf	_spi_link& (0+255),3,b	;volatile
 15536                           
 15537                           ; BSR set to: 0
 15538  005F7C  0011               	retfie		f
 15539  005F7E                     __end_of_DMA1_DMASCNT_ISR:
 15540                           	opt callstack 0
 15541                           
 15542 ;; *************** function _DMA1_DMADCNT_ISR *****************
 15543 ;; Defined at:
 15544 ;;		line 133 in file "mcc_generated_files/dma1.c"
 15545 ;; Parameters:    Size  Location     Type
 15546 ;;		None
 15547 ;; Auto vars:     Size  Location     Type
 15548 ;;		None
 15549 ;; Return value:  Size  Location     Type
 15550 ;;                  1    wreg      void 
 15551 ;; Registers used:
 15552 ;;		None
 15553 ;; Tracked objects:
 15554 ;;		On entry : 0/0
 15555 ;;		On exit  : 3F/39
 15556 ;;		Unchanged: 0/0
 15557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15562 ;;Total ram usage:        0 bytes
 15563 ;; Hardware stack levels used:    1
 15564 ;; This function calls:
 15565 ;;		Nothing
 15566 ;; This function is called by:
 15567 ;;		Interrupt level 2
 15568 ;; This function uses a non-reentrant model
 15569 ;;
 15570                           
 15571                           	psect	text105
 15572  005F98                     __ptext105:
 15573                           	opt callstack 0
 15574  005F98                     _DMA1_DMADCNT_ISR:
 15575                           	opt callstack 19
 15576                           
 15577                           ; BSR set to: 0
 15578                           ;incstack = 0
 15579  005F98  EE13  F150         	lfsr	1,___inthi_sp
 15580                           
 15581                           ;mcc_generated_files/dma1.c: 135:  PIR2bits.DMA1DCNTIF = 0;
 15582  005F9C  0139               	movlb	57	; () banked
 15583  005F9E  93A2               	bcf	162,1,b	;volatile
 15584                           
 15585                           ; BSR set to: 57
 15586  005FA0  0011               	retfie		f
 15587  005FA2                     __end_of_DMA1_DMADCNT_ISR:
 15588                           	opt callstack 0
 15589                           
 15590 ;; *************** function _DMA1_DMAA_ISR *****************
 15591 ;; Defined at:
 15592 ;;		line 143 in file "mcc_generated_files/dma1.c"
 15593 ;; Parameters:    Size  Location     Type
 15594 ;;		None
 15595 ;; Auto vars:     Size  Location     Type
 15596 ;;		None
 15597 ;; Return value:  Size  Location     Type
 15598 ;;                  1    wreg      void 
 15599 ;; Registers used:
 15600 ;;		None
 15601 ;; Tracked objects:
 15602 ;;		On entry : 0/0
 15603 ;;		On exit  : 3F/39
 15604 ;;		Unchanged: 0/0
 15605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15609 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15610 ;;Total ram usage:        0 bytes
 15611 ;; Hardware stack levels used:    1
 15612 ;; This function calls:
 15613 ;;		Nothing
 15614 ;; This function is called by:
 15615 ;;		Interrupt level 2
 15616 ;; This function uses a non-reentrant model
 15617 ;;
 15618                           
 15619                           	psect	text106
 15620  005FA4                     __ptext106:
 15621                           	opt callstack 0
 15622  005FA4                     _DMA1_DMAA_ISR:
 15623                           	opt callstack 19
 15624                           
 15625                           ; BSR set to: 57
 15626                           ;incstack = 0
 15627  005FA4  EE13  F150         	lfsr	1,___inthi_sp
 15628                           
 15629                           ;mcc_generated_files/dma1.c: 146:  PIR2bits.DMA1AIF = 0;
 15630  005FA8  0139               	movlb	57	; () banked
 15631  005FAA  97A2               	bcf	162,3,b	;volatile
 15632                           
 15633                           ; BSR set to: 57
 15634  005FAC  0011               	retfie		f
 15635  005FAE                     __end_of_DMA1_DMAA_ISR:
 15636                           	opt callstack 0
 15637                           
 15638 ;; *************** function _DMA1_DMAOR_ISR *****************
 15639 ;; Defined at:
 15640 ;;		line 154 in file "mcc_generated_files/dma1.c"
 15641 ;; Parameters:    Size  Location     Type
 15642 ;;		None
 15643 ;; Auto vars:     Size  Location     Type
 15644 ;;		None
 15645 ;; Return value:  Size  Location     Type
 15646 ;;                  1    wreg      void 
 15647 ;; Registers used:
 15648 ;;		None
 15649 ;; Tracked objects:
 15650 ;;		On entry : 0/0
 15651 ;;		On exit  : 3F/39
 15652 ;;		Unchanged: 0/0
 15653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15657 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15658 ;;Total ram usage:        0 bytes
 15659 ;; Hardware stack levels used:    1
 15660 ;; This function calls:
 15661 ;;		Nothing
 15662 ;; This function is called by:
 15663 ;;		Interrupt level 2
 15664 ;; This function uses a non-reentrant model
 15665 ;;
 15666                           
 15667                           	psect	text107
 15668  005F80                     __ptext107:
 15669                           	opt callstack 0
 15670  005F80                     _DMA1_DMAOR_ISR:
 15671                           	opt callstack 19
 15672                           
 15673                           ; BSR set to: 57
 15674                           ;incstack = 0
 15675  005F80  EE13  F150         	lfsr	1,___inthi_sp
 15676                           
 15677                           ;mcc_generated_files/dma1.c: 157:  PIR2bits.DMA1ORIF = 0;
 15678  005F84  0139               	movlb	57	; () banked
 15679  005F86  95A2               	bcf	162,2,b	;volatile
 15680                           
 15681                           ;mcc_generated_files/dma1.c: 159:  LATEbits.LATE1 = 0;
 15682  005F88  92BE               	bcf	16318,1,c	;volatile
 15683                           
 15684                           ; BSR set to: 57
 15685  005F8A  0011               	retfie		f
 15686  005F8C                     __end_of_DMA1_DMAOR_ISR:
 15687                           	opt callstack 0
 15688                           
 15689 ;; *************** function _TMR5_ISR *****************
 15690 ;; Defined at:
 15691 ;;		line 163 in file "mcc_generated_files/tmr5.c"
 15692 ;; Parameters:    Size  Location     Type
 15693 ;;		None
 15694 ;; Auto vars:     Size  Location     Type
 15695 ;;		None
 15696 ;; Return value:  Size  Location     Type
 15697 ;;                  1    wreg      void 
 15698 ;; Registers used:
 15699 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 15700 ;; Tracked objects:
 15701 ;;		On entry : 0/0
 15702 ;;		On exit  : 0/0
 15703 ;;		Unchanged: 0/0
 15704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15707 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15708 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15709 ;;Total ram usage:        1 bytes
 15710 ;; Hardware stack levels used:    1
 15711 ;; Hardware stack levels required when called:    2
 15712 ;; This function calls:
 15713 ;;		_TMR5_CallBack
 15714 ;;		_TMR5_WriteTimer
 15715 ;; This function is called by:
 15716 ;;		Interrupt level 2
 15717 ;; This function uses a non-reentrant model
 15718 ;;
 15719                           
 15720                           	psect	text108
 15721  0057FC                     __ptext108:
 15722                           	opt callstack 0
 15723  0057FC                     _TMR5_ISR:
 15724                           	opt callstack 17
 15725                           
 15726                           ; BSR set to: 57
 15727                           ;incstack = 0
 15728  0057FC  0060  F120  F05E   	movff	btemp+11,??_TMR5_ISR
 15729  005802  EE13  F150         	lfsr	1,___inthi_sp
 15730                           
 15731                           ;mcc_generated_files/tmr5.c: 165:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 168:  PIR8bits.TMR5IF = 0;
 15732  005806  0139               	movlb	57	; () banked
 15733  005808  9DA8               	bcf	168,6,b	;volatile
 15734                           
 15735                           ; BSR set to: 57
 15736                           ;mcc_generated_files/tmr5.c: 169:  TMR5_WriteTimer(timer5ReloadVal);
 15737  00580A  0060  F0BB  FFE6   	movff	_timer5ReloadVal,postinc1
 15738  005810  0060  F0BF  FFE6   	movff	_timer5ReloadVal+1,postinc1
 15739  005816  EC9F  F02B         	call	_TMR5_WriteTimer	;wreg free
 15740                           
 15741                           ;mcc_generated_files/tmr5.c: 172:  if (++CountCallBack >= 50) {
 15742  00581A  4A2C               	infsnz	TMR5_ISR@CountCallBack,f,c	;volatile
 15743  00581C  2A2D               	incf	TMR5_ISR@CountCallBack+1,f,c	;volatile
 15744  00581E  502D               	movf	TMR5_ISR@CountCallBack+1,w,c	;volatile
 15745  005820  E104               	bnz	i2u196_40
 15746  005822  0E32               	movlw	50
 15747  005824  5C2C               	subwf	TMR5_ISR@CountCallBack,w,c	;volatile
 15748  005826  A0D8               	btfss	status,0,c
 15749  005828  D004               	goto	i2l1137
 15750  00582A                     i2u196_40:
 15751                           
 15752                           ;mcc_generated_files/tmr5.c: 174:   TMR5_CallBack();
 15753  00582A  ECE7  F02E         	call	_TMR5_CallBack	;wreg free
 15754                           
 15755                           ;mcc_generated_files/tmr5.c: 177:   CountCallBack = 0;
 15756  00582E  6A2C               	clrf	TMR5_ISR@CountCallBack,c	;volatile
 15757  005830  6A2D               	clrf	TMR5_ISR@CountCallBack+1,c	;volatile
 15758  005832                     i2l1137:
 15759  005832  0060  F178  F048   	movff	??_TMR5_ISR,btemp+11
 15760  005838  0011               	retfie		f
 15761  00583A                     __end_of_TMR5_ISR:
 15762                           	opt callstack 0
 15763                           
 15764 ;; *************** function _TMR5_WriteTimer *****************
 15765 ;; Defined at:
 15766 ;;		line 129 in file "mcc_generated_files/tmr5.c"
 15767 ;; Parameters:    Size  Location     Type
 15768 ;;  timerVal        2  [STACK] unsigned short 
 15769 ;; Auto vars:     Size  Location     Type
 15770 ;;		None
 15771 ;; Return value:  Size  Location     Type
 15772 ;;                  1  [STACK] void 
 15773 ;; Registers used:
 15774 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 15775 ;; Tracked objects:
 15776 ;;		On entry : 3F/39
 15777 ;;		On exit  : 0/0
 15778 ;;		Unchanged: 0/0
 15779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15783 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15784 ;;Total ram usage:        0 bytes
 15785 ;; Hardware stack levels used:    1
 15786 ;; This function calls:
 15787 ;;		Nothing
 15788 ;; This function is called by:
 15789 ;;		_TMR5_ISR
 15790 ;; This function uses a reentrant model
 15791 ;;
 15792                           
 15793                           	psect	text109
 15794  00573E                     __ptext109:
 15795                           	opt callstack 0
 15796  00573E                     _TMR5_WriteTimer:
 15797                           	opt callstack 18
 15798                           
 15799                           ;mcc_generated_files/tmr5.c: 129: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 130: {;mcc_generated_files/tmr5.c: 131:  if (T5CONbits.NOT_SYNC == 1) {
 15800                           
 15801                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15802                           ;incstack = 0
 15803  00573E  A49A               	btfss	16282,2,c	;volatile
 15804  005740  D00F               	goto	l4038
 15805                           
 15806                           ;mcc_generated_files/tmr5.c: 133:   T5CONbits.TMR5ON = 0;
 15807  005742  909A               	bcf	16282,0,c	;volatile
 15808                           
 15809                           ;mcc_generated_files/tmr5.c: 136:   TMR5H = (timerVal >> 8);
 15810                           ;stkvar	_timerVal @ sp[(0)+-2]
 15811  005744  0EFF               	movlw	255
 15812  005746  24E1               	addwf	fsr1l,w,c
 15813  005748  6ED9               	movwf	fsr2l,c
 15814  00574A  0EFF               	movlw	255
 15815  00574C  20E2               	addwfc	fsr1h,w,c
 15816  00574E  6EDA               	movwf	fsr2h,c
 15817  005750  50DF               	movf	indf2,w,c
 15818  005752  6E99               	movwf	16281,c	;volatile
 15819                           
 15820                           ;mcc_generated_files/tmr5.c: 137:   TMR5L = timerVal;
 15821                           ;stkvar	_timerVal @ sp[(0)+-2]
 15822  005754  0EFE               	movlw	-2
 15823  005756  006F FF8F FF98     	movff	plusw1,16280	;volatile
 15824                           
 15825                           ;mcc_generated_files/tmr5.c: 140:   T5CONbits.TMR5ON = 1;
 15826  00575C  809A               	bsf	16282,0,c	;volatile
 15827                           
 15828                           ;mcc_generated_files/tmr5.c: 141:  } else {
 15829  00575E  D00C               	goto	l1120
 15830  005760                     l4038:
 15831                           
 15832                           ;mcc_generated_files/tmr5.c: 143:   TMR5H = (timerVal >> 8);
 15833                           ;stkvar	_timerVal @ sp[(0)+-2]
 15834  005760  0EFF               	movlw	255
 15835  005762  24E1               	addwf	fsr1l,w,c
 15836  005764  6ED9               	movwf	fsr2l,c
 15837  005766  0EFF               	movlw	255
 15838  005768  20E2               	addwfc	fsr1h,w,c
 15839  00576A  6EDA               	movwf	fsr2h,c
 15840  00576C  50DF               	movf	indf2,w,c
 15841  00576E  6E99               	movwf	16281,c	;volatile
 15842                           
 15843                           ;mcc_generated_files/tmr5.c: 144:   TMR5L = timerVal;
 15844                           ;stkvar	_timerVal @ sp[(0)+-2]
 15845  005770  0EFE               	movlw	-2
 15846  005772  006F FF8F FF98     	movff	plusw1,16280	;volatile
 15847  005778                     l1120:
 15848                           
 15849                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 15850  005778  52E5               	movf	postdec1,f,c
 15851  00577A  52E5               	movf	postdec1,f,c
 15852  00577C  0012               	return		;funcret
 15853  00577E                     __end_of_TMR5_WriteTimer:
 15854                           	opt callstack 0
 15855                           
 15856 ;; *************** function _TMR5_CallBack *****************
 15857 ;; Defined at:
 15858 ;;		line 181 in file "mcc_generated_files/tmr5.c"
 15859 ;; Parameters:    Size  Location     Type
 15860 ;;		None
 15861 ;; Auto vars:     Size  Location     Type
 15862 ;;		None
 15863 ;; Return value:  Size  Location     Type
 15864 ;;                  1  [STACK] void 
 15865 ;; Registers used:
 15866 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 15867 ;; Tracked objects:
 15868 ;;		On entry : 0/39
 15869 ;;		On exit  : 0/0
 15870 ;;		Unchanged: 0/0
 15871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15876 ;;Total ram usage:        0 bytes
 15877 ;; Hardware stack levels used:    1
 15878 ;; Hardware stack levels required when called:    1
 15879 ;; This function calls:
 15880 ;;		Absolute function
 15881 ;;		_TMR5_DefaultInterruptHandler
 15882 ;; This function is called by:
 15883 ;;		_TMR5_ISR
 15884 ;; This function uses a reentrant model
 15885 ;;
 15886                           
 15887                           	psect	text110
 15888  005DCE                     __ptext110:
 15889                           	opt callstack 0
 15890  005DCE                     _TMR5_CallBack:
 15891                           	opt callstack 17
 15892                           
 15893                           ;mcc_generated_files/tmr5.c: 184:  if (TMR5_InterruptHandler) {
 15894                           
 15895                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15896                           ;incstack = 0
 15897  005DCE  5004               	movf	_TMR5_InterruptHandler,w,c
 15898  005DD0  1005               	iorwf	_TMR5_InterruptHandler+1,w,c
 15899  005DD2  1006               	iorwf	_TMR5_InterruptHandler+2,w,c
 15900  005DD4  B4D8               	btfsc	status,2,c
 15901  005DD6  0012               	return	
 15902                           
 15903                           ;mcc_generated_files/tmr5.c: 185:   TMR5_InterruptHandler();
 15904  005DD8  D801               	call	u164_48
 15905  005DDA  0012               	return	
 15906  005DDC                     u164_48:
 15907  005DDC  0005               	push	
 15908  005DDE  6EFA               	movwf	pclath,c
 15909  005DE0  5004               	movf	_TMR5_InterruptHandler,w,c
 15910  005DE2  6EFD               	movwf	tosl,c
 15911  005DE4  5005               	movf	_TMR5_InterruptHandler+1,w,c
 15912  005DE6  6EFE               	movwf	tosh,c
 15913  005DE8  5006               	movf	_TMR5_InterruptHandler+2,w,c
 15914  005DEA  6EFF               	movwf	tosu,c
 15915  005DEC  50FA               	movf	pclath,w,c
 15916  005DEE  0012               	return		;indir
 15917  005DF0                     __end_of_TMR5_CallBack:
 15918                           	opt callstack 0
 15919                           
 15920 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 15921 ;; Defined at:
 15922 ;;		line 194 in file "mcc_generated_files/tmr5.c"
 15923 ;; Parameters:    Size  Location     Type
 15924 ;;		None
 15925 ;; Auto vars:     Size  Location     Type
 15926 ;;		None
 15927 ;; Return value:  Size  Location     Type
 15928 ;;                  1  [STACK] void 
 15929 ;; Registers used:
 15930 ;;		wreg, status,2, status,0, btemp+11
 15931 ;; Tracked objects:
 15932 ;;		On entry : 0/39
 15933 ;;		On exit  : 0/0
 15934 ;;		Unchanged: 0/0
 15935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15940 ;;Total ram usage:        0 bytes
 15941 ;; Hardware stack levels used:    1
 15942 ;; This function calls:
 15943 ;;		Nothing
 15944 ;; This function is called by:
 15945 ;;		_TMR5_Initialize
 15946 ;;		_TMR5_CallBack
 15947 ;; This function uses a reentrant model
 15948 ;;
 15949                           
 15950                           	psect	text111
 15951  005ED6                     __ptext111:
 15952                           	opt callstack 0
 15953  005ED6                     _TMR5_DefaultInterruptHandler:
 15954                           	opt callstack 17
 15955                           
 15956                           ;mcc_generated_files/tmr5.c: 198:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 15957                           
 15958                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15959                           ;incstack = 0
 15960  005ED6  A0BE               	btfss	16318,0,c	;volatile
 15961  005ED8  D002               	goto	u140_40
 15962  005EDA  0E01               	movlw	1
 15963  005EDC  D001               	goto	u140_46
 15964  005EDE                     u140_40:
 15965  005EDE  0E00               	movlw	0
 15966  005EE0                     u140_46:
 15967  005EE0  0AFF               	xorlw	255
 15968  005EE2  6E48               	movwf	btemp+11,c
 15969  005EE4  50BE               	movf	16318,w,c	;volatile
 15970  005EE6  1848               	xorwf	btemp+11,w,c
 15971  005EE8  0BFE               	andlw	-2
 15972  005EEA  1848               	xorwf	btemp+11,w,c
 15973  005EEC  6EBE               	movwf	16318,c	;volatile
 15974                           
 15975                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 15976  005EEE  0012               	return		;funcret
 15977  005EF0                     __end_of_TMR5_DefaultInterruptHandler:
 15978                           	opt callstack 0
 15979                           
 15980                           ;
 15981                           ; Interrupt Vector Table @ 0x8
 15982                           ;
 15983                           
 15984                           	psect	ivt0x8
 15985  000008                     __pivt0x8:
 15986                           	opt callstack 0
 15987  000008                     ivt0x8_base:
 15988                           	opt callstack 0
 15989                           
 15990                           ; Vector 0 : SWINT
 15991  000008  17F5               	dw	_Default_ISR shr (0+2)
 15992                           
 15993                           ; Vector 1 : HLVD
 15994  00000A  17F5               	dw	_Default_ISR shr (0+2)
 15995                           
 15996                           ; Vector 2 : OSF
 15997  00000C  17F5               	dw	_Default_ISR shr (0+2)
 15998                           
 15999                           ; Vector 3 : CSW
 16000  00000E  17F5               	dw	_Default_ISR shr (0+2)
 16001                           
 16002                           ; Vector 4 : NVM
 16003  000010  17F5               	dw	_Default_ISR shr (0+2)
 16004                           
 16005                           ; Vector 5 : SCAN
 16006  000012  17F5               	dw	_Default_ISR shr (0+2)
 16007                           
 16008                           ; Vector 6 : CRC
 16009  000014  17F5               	dw	_Default_ISR shr (0+2)
 16010                           
 16011                           ; Vector 7 : IOC
 16012  000016  17F5               	dw	_Default_ISR shr (0+2)
 16013                           
 16014                           ; Vector 8 : INT0
 16015  000018  17D0               	dw	_INT0_ISR shr (0+2)
 16016                           
 16017                           ; Vector 9 : ZCD
 16018  00001A  17F5               	dw	_Default_ISR shr (0+2)
 16019                           
 16020                           ; Vector 10 : AD
 16021  00001C  1678               	dw	_ADCC_ISR shr (0+2)
 16022                           
 16023                           ; Vector 11 : ADT
 16024  00001E  17F5               	dw	_Default_ISR shr (0+2)
 16025                           
 16026                           ; Vector 12 : CMP1
 16027  000020  17F5               	dw	_Default_ISR shr (0+2)
 16028                           
 16029                           ; Vector 13 : SMT1
 16030  000022  17F5               	dw	_Default_ISR shr (0+2)
 16031                           
 16032                           ; Vector 14 : SMT1PRA
 16033  000024  17F5               	dw	_Default_ISR shr (0+2)
 16034                           
 16035                           ; Vector 15 : SMT1PRW
 16036  000026  17F5               	dw	_Default_ISR shr (0+2)
 16037                           
 16038                           ; Vector 16 : DMA1SCNT
 16039  000028  17DC               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 16040                           
 16041                           ; Vector 17 : DMA1DCNT
 16042  00002A  17E6               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 16043                           
 16044                           ; Vector 18 : DMA1OR
 16045  00002C  17E0               	dw	_DMA1_DMAOR_ISR shr (0+2)
 16046                           
 16047                           ; Vector 19 : DMA1A
 16048  00002E  17E9               	dw	_DMA1_DMAA_ISR shr (0+2)
 16049                           
 16050                           ; Vector 20 : SPI1RX
 16051  000030  17F5               	dw	_Default_ISR shr (0+2)
 16052                           
 16053                           ; Vector 21 : SPI1TX
 16054  000032  17F5               	dw	_Default_ISR shr (0+2)
 16055                           
 16056                           ; Vector 22 : SPI1
 16057  000034  17F5               	dw	_Default_ISR shr (0+2)
 16058                           
 16059                           ; Vector 23 : I2C1RX
 16060  000036  17F5               	dw	_Default_ISR shr (0+2)
 16061                           
 16062                           ; Vector 24 : I2C1TX
 16063  000038  17F5               	dw	_Default_ISR shr (0+2)
 16064                           
 16065                           ; Vector 25 : I2C1
 16066  00003A  17F5               	dw	_Default_ISR shr (0+2)
 16067                           
 16068                           ; Vector 26 : I2C1E
 16069  00003C  17F5               	dw	_Default_ISR shr (0+2)
 16070                           
 16071                           ; Vector 27 : U1RX
 16072  00003E  1723               	dw	_UART1_rx_vect_isr shr (0+2)
 16073                           
 16074                           ; Vector 28 : U1TX
 16075  000040  1719               	dw	_UART1_tx_vect_isr shr (0+2)
 16076                           
 16077                           ; Vector 29 : U1E
 16078  000042  17F5               	dw	_Default_ISR shr (0+2)
 16079                           
 16080                           ; Vector 30 : U1
 16081  000044  17F5               	dw	_Default_ISR shr (0+2)
 16082                           
 16083                           ; Vector 31 : TMR0
 16084  000046  17F5               	dw	_Default_ISR shr (0+2)
 16085                           
 16086                           ; Vector 32 : TMR1
 16087  000048  17F5               	dw	_Default_ISR shr (0+2)
 16088                           
 16089                           ; Vector 33 : TMR1G
 16090  00004A  17F5               	dw	_Default_ISR shr (0+2)
 16091                           
 16092                           ; Vector 34 : TMR2
 16093  00004C  17F5               	dw	_Default_ISR shr (0+2)
 16094                           
 16095                           ; Vector 35 : CCP1
 16096  00004E  17F5               	dw	_Default_ISR shr (0+2)
 16097                           
 16098                           ; Vector 36 : Undefined
 16099  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 16100                           
 16101                           ; Vector 37 : NCO1
 16102  000052  17F5               	dw	_Default_ISR shr (0+2)
 16103                           
 16104                           ; Vector 38 : CWG1
 16105  000054  17F5               	dw	_Default_ISR shr (0+2)
 16106                           
 16107                           ; Vector 39 : CLC1
 16108  000056  17F5               	dw	_Default_ISR shr (0+2)
 16109                           
 16110                           ; Vector 40 : INT1
 16111  000058  17D4               	dw	_INT1_ISR shr (0+2)
 16112                           
 16113                           ; Vector 41 : CMP2
 16114  00005A  17F5               	dw	_Default_ISR shr (0+2)
 16115                           
 16116                           ; Vector 42 : DMA2SCNT
 16117  00005C  17F5               	dw	_Default_ISR shr (0+2)
 16118                           
 16119                           ; Vector 43 : DMA2DCNT
 16120  00005E  17F5               	dw	_Default_ISR shr (0+2)
 16121                           
 16122                           ; Vector 44 : DMA2OR
 16123  000060  17F5               	dw	_Default_ISR shr (0+2)
 16124                           
 16125                           ; Vector 45 : DMA2A
 16126  000062  17F5               	dw	_Default_ISR shr (0+2)
 16127                           
 16128                           ; Vector 46 : I2C2RX
 16129  000064  17F5               	dw	_Default_ISR shr (0+2)
 16130                           
 16131                           ; Vector 47 : I2C2TX
 16132  000066  17F5               	dw	_Default_ISR shr (0+2)
 16133                           
 16134                           ; Vector 48 : I2C2
 16135  000068  17F5               	dw	_Default_ISR shr (0+2)
 16136                           
 16137                           ; Vector 49 : I2C2E
 16138  00006A  17F5               	dw	_Default_ISR shr (0+2)
 16139                           
 16140                           ; Vector 50 : U2RX
 16141  00006C  1737               	dw	_UART2_rx_vect_isr shr (0+2)
 16142                           
 16143                           ; Vector 51 : U2TX
 16144  00006E  172D               	dw	_UART2_tx_vect_isr shr (0+2)
 16145                           
 16146                           ; Vector 52 : U2E
 16147  000070  17F5               	dw	_Default_ISR shr (0+2)
 16148                           
 16149                           ; Vector 53 : U2
 16150  000072  17F5               	dw	_Default_ISR shr (0+2)
 16151                           
 16152                           ; Vector 54 : TMR3
 16153  000074  17F5               	dw	_Default_ISR shr (0+2)
 16154                           
 16155                           ; Vector 55 : TMR3G
 16156  000076  17F5               	dw	_Default_ISR shr (0+2)
 16157                           
 16158                           ; Vector 56 : TMR4
 16159  000078  17F5               	dw	_Default_ISR shr (0+2)
 16160                           
 16161                           ; Vector 57 : CCP2
 16162  00007A  17F5               	dw	_Default_ISR shr (0+2)
 16163                           
 16164                           ; Vector 58 : Undefined
 16165  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 16166                           
 16167                           ; Vector 59 : CWG2
 16168  00007E  17F5               	dw	_Default_ISR shr (0+2)
 16169                           
 16170                           ; Vector 60 : CLC2
 16171  000080  17F5               	dw	_Default_ISR shr (0+2)
 16172                           
 16173                           ; Vector 61 : INT2
 16174  000082  17D8               	dw	_INT2_ISR shr (0+2)
 16175                           
 16176                           ; Vector 62 : Undefined
 16177  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 16178                           
 16179                           ; Vector 63 : Undefined
 16180  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 16181                           
 16182                           ; Vector 64 : Undefined
 16183  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 16184                           
 16185                           ; Vector 65 : Undefined
 16186  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 16187                           
 16188                           ; Vector 66 : Undefined
 16189  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 16190                           
 16191                           ; Vector 67 : Undefined
 16192  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 16193                           
 16194                           ; Vector 68 : Undefined
 16195  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 16196                           
 16197                           ; Vector 69 : Undefined
 16198  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 16199                           
 16200                           ; Vector 70 : TMR5
 16201  000094  15FF               	dw	_TMR5_ISR shr (0+2)
 16202                           
 16203                           ; Vector 71 : TMR5G
 16204  000096  17F5               	dw	_Default_ISR shr (0+2)
 16205                           
 16206                           ; Vector 72 : TMR6
 16207  000098  17AF               	dw	_TMR6_ISR shr (0+2)
 16208                           
 16209                           ; Vector 73 : CCP3
 16210  00009A  17F5               	dw	_Default_ISR shr (0+2)
 16211                           
 16212                           ; Vector 74 : CWG3
 16213  00009C  17F5               	dw	_Default_ISR shr (0+2)
 16214                           
 16215                           ; Vector 75 : CLC3
 16216  00009E  17F5               	dw	_Default_ISR shr (0+2)
 16217                           
 16218                           ; Vector 76 : Undefined
 16219  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 16220                           
 16221                           ; Vector 77 : Undefined
 16222  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 16223                           
 16224                           ; Vector 78 : Undefined
 16225  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 16226                           
 16227                           ; Vector 79 : Undefined
 16228  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 16229                           
 16230                           ; Vector 80 : CCP4
 16231  0000A8  17F5               	dw	_Default_ISR shr (0+2)
 16232                           
 16233                           ; Vector 81 : CLC4
 16234  0000AA  17F5               	dw	_Default_ISR shr (0+2)
 16235  0000AC                     ivt0x8_undefint:
 16236                           	opt callstack 0
 16237  0000AC  00FF               	reset	
 16238                           
 16239                           	psect	text112
 16240  000000                     __ptext112:
 16241                           	opt callstack 0
 16242                           
 16243                           	psect	rparam
 16244  0000                     
 16245                           	psect	temp
 16246  00003D                     btemp:
 16247                           	opt callstack 0
 16248  00003D                     	ds	32
 16249  0000                     wtemp0	set	btemp
 16250  0000                     wtemp1	set	btemp+2
 16251  0000                     wtemp2	set	btemp+4
 16252  0000                     wtemp3	set	btemp+6
 16253  0000                     wtemp4	set	btemp+8
 16254  0000                     wtemp5	set	btemp+10
 16255  0000                     wtemp8	set	btemp+1
 16256  0000                     ttemp0	set	btemp
 16257  0000                     ttemp1	set	btemp+3
 16258  0000                     ttemp2	set	btemp+6
 16259  0000                     ttemp3	set	btemp+9
 16260  0000                     ttemp5	set	btemp+1
 16261  0000                     ttemp6	set	btemp+4
 16262  0000                     ttemp7	set	btemp+8
 16263  0000                     ltemp0	set	btemp
 16264  0000                     ltemp1	set	btemp+4
 16265  0000                     ltemp2	set	btemp+8
 16266  0000                     lltemp0	set	btemp
 16267  0000                     lltemp1	set	btemp+8
 16268  0000                     lltemp2	set	btemp+16
 16269  0000                     lltemp3	set	btemp+24
 16270                           tosu	equ	0x3FFF
 16271                           tosh	equ	0x3FFE
 16272                           tosl	equ	0x3FFD
 16273                           stkptr	equ	0x3FFC
 16274                           pclatu	equ	0x3FFB
 16275                           pclath	equ	0x3FFA
 16276                           pcl	equ	0x3FF9
 16277                           tblptru	equ	0x3FF8
 16278                           tblptrh	equ	0x3FF7
 16279                           tblptrl	equ	0x3FF6
 16280                           tablat	equ	0x3FF5
 16281                           prodh	equ	0x3FF4
 16282                           prodl	equ	0x3FF3
 16283                           indf0	equ	0x3FEF
 16284                           postinc0	equ	0x3FEE
 16285                           postdec0	equ	0x3FED
 16286                           preinc0	equ	0x3FEC
 16287                           plusw0	equ	0x3FEB
 16288                           fsr0h	equ	0x3FEA
 16289                           fsr0l	equ	0x3FE9
 16290                           wreg	equ	0x3FE8
 16291                           indf1	equ	0x3FE7
 16292                           postinc1	equ	0x3FE6
 16293                           postdec1	equ	0x3FE5
 16294                           preinc1	equ	0x3FE4
 16295                           plusw1	equ	0x3FE3
 16296                           fsr1h	equ	0x3FE2
 16297                           fsr1l	equ	0x3FE1
 16298                           bsr	equ	0x3FE0
 16299                           indf2	equ	0x3FDF
 16300                           postinc2	equ	0x3FDE
 16301                           postdec2	equ	0x3FDD
 16302                           preinc2	equ	0x3FDC
 16303                           plusw2	equ	0x3FDB
 16304                           fsr2h	equ	0x3FDA
 16305                           fsr2l	equ	0x3FD9
 16306                           status	equ	0x3FD8


Data Sizes:
    Strings     182
    Constant    0
    Data        280
    BSS         603
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63      2      62
    BANK0           160      0     160
    BANK1           256      0     225
    BANK2           256      0     192
    BANK3           256      0     246
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK0[32]), 
		 -> V(BANK0[80]), 

    a	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK0[32]), 
		 -> V(BANK0[80]), 

    fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_12(CODE[3]), STR_11(CODE[3]), STR_10(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(1) Largest target is 61
		 -> STR_9(CODE[21]), STR_8(CODE[17]), STR_7(CODE[17]), STR_6(CODE[17]), 
		 -> STR_5(CODE[23]), STR_4(CODE[6]), STR_3(CODE[14]), STR_2(CODE[12]), 
		 -> STR_1(CODE[61]), 

    s	PTR unsigned char  size(1) Largest target is 80
		 -> V(BANK0[80]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 80
		 -> V(BANK0[80]), 

    s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    S4345_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 80
		 -> V(BANK0[80]), 

    fp.buffer	PTR unsigned char  size(1) Largest target is 80
		 -> V(BANK0[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR const unsigned char  size(1) Largest target is 61
		 -> STR_12(CODE[3]), STR_11(CODE[3]), STR_10(CODE[3]), STR_9(CODE[21]), 
		 -> STR_8(CODE[17]), STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[23]), 
		 -> STR_4(CODE[6]), STR_3(CODE[14]), STR_2(CODE[12]), STR_1(CODE[61]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(1) Largest target is 61
		 -> STR_12(CODE[3]), STR_11(CODE[3]), STR_10(CODE[3]), STR_9(CODE[21]), 
		 -> STR_8(CODE[17]), STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[23]), 
		 -> STR_4(CODE[6]), STR_3(CODE[14]), STR_2(CODE[12]), STR_1(CODE[61]), 

    cfmt	PTR unsigned char  size(1) Largest target is 61
		 -> STR_12(CODE[3]), STR_11(CODE[3]), STR_10(CODE[3]), STR_9(CODE[21]), 
		 -> STR_8(CODE[17]), STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[23]), 
		 -> STR_4(CODE[6]), STR_3(CODE[14]), STR_2(CODE[12]), STR_1(CODE[61]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), V(BANK0[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 1
		 -> cfmt(STACK[1]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), V(BANK0[80]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), V(BANK0[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    F16582.header	PTR unsigned char  size(2) Largest target is 112
		 -> H53(BANK3[112]), H24(BANK1[27]), H18(BANK1[21]), H14(BANK1[17]), 
		 -> H13(BANK1[16]), H12(BANK1[15]), H10(BANK1[65]), 

    byte_block	PTR unsigned char  size(2) Largest target is 112
		 -> H53(BANK3[112]), H24(BANK1[27]), H18(BANK1[21]), H14(BANK1[17]), 
		 -> H13(BANK1[16]), H12(BANK1[15]), H10(BANK1[65]), 

    k	PTR unsigned char  size(2) Largest target is 112
		 -> H53(BANK3[112]), H24(BANK1[27]), H18(BANK1[21]), H14(BANK1[17]), 
		 -> H13(BANK1[16]), H12(BANK1[15]), H10(BANK1[65]), 

    t_link	PTR enum E16164 size(1) Largest target is 80
		 -> V(BANK0[80]), 

    S3624response_type$header	PTR unsigned char  size(2) Largest target is 112
		 -> H53(BANK3[112]), H24(BANK1[27]), H18(BANK1[21]), H14(BANK1[17]), 
		 -> H13(BANK1[16]), H12(BANK1[15]), H10(BANK1[65]), 

    block.header	PTR unsigned char  size(2) Largest target is 112
		 -> H53(BANK3[112]), H24(BANK1[27]), H18(BANK1[21]), H14(BANK1[17]), 
		 -> H13(BANK1[16]), H12(BANK1[15]), H10(BANK1[65]), 

    r_link	PTR enum E16164 size(1) Largest target is 80
		 -> V(BANK0[80]), 

    byte_block	PTR unsigned char  size(2) Largest target is 112
		 -> H53(BANK3[112]), H24(BANK1[27]), H18(BANK1[21]), H14(BANK1[17]), 
		 -> H13(BANK1[16]), H12(BANK1[15]), H10.block(BANK1[10]), H10(BANK1[65]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    strPtr	PTR unsigned char  size(1) Largest target is 80
		 -> V(BANK0[80]), 

    strPtr	PTR unsigned char  size(1) Largest target is 80
		 -> V(BANK0[80]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1984spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1984spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _INT2_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _INT2_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _INT2_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _INT2_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _INT2_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _INT2_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _INT2_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _INT2_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _INT2_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _INT2_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _INT2_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _INT2_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _INT2_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _INT2_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _INT2_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _INT2_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _INT2_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _INT2_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _INT2_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _INT2_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _INT2_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _INT2_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _INT2_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _INT2_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _INT2_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _INT2_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _INT2_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _INT2_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _INT2_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _INT2_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _INT2_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _INT2_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _INT2_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   69908
                  _SYSTEM_Initialize
                        _UART1_Write
                   _UART1_put_buffer
                             _WaitMs
                     _block_checksum
                _eaDogM_WriteCommand
                 _eaDogM_WriteString
            _eaDogM_WriteStringAtPos
                       _init_display
                         _r_protocol
                          _secs_send
                            _sprintf
                         _t_protocol
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _t_protocol                                           5     4      1    1748
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                        _UART1_Write
                  _UART1_is_rx_ready
                   _UART1_put_buffer
                             _WaitMs
                    _secs_II_message
                          _secs_send
 ---------------------------------------------------------------------------------
 (2) _secs_II_message                                      2     0      2      88
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             35     9     26   11789
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _r_protocol                                           2     1      1    1605
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                        _UART1_Write
                  _UART1_is_rx_ready
                             _WaitMs
                       _run_checksum
                          _secs_send
 ---------------------------------------------------------------------------------
 (2) _secs_send                                            9     5      4     837
                        _UART1_Write
                  _UART1_is_tx_ready
                   _UART1_put_buffer
                     _block_checksum
 ---------------------------------------------------------------------------------
 (3) _block_checksum                                       8     4      4     167
 ---------------------------------------------------------------------------------
 (3) _UART1_put_buffer                                     1     0      1      22
 ---------------------------------------------------------------------------------
 (3) _UART1_is_tx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UART1_Write                                          1     0      1      44
 ---------------------------------------------------------------------------------
 (2) _run_checksum                                         2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (3) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (3) _StartTimer                                           3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _UART1_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART1_Read                                           1     1      0      24
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1202
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      66
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      66
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteStringAtPos                              3     0      3   25832
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteString                                   1     0      1   12950
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   12820
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_dma                                     1     0      1   12789
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (3) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _wait_lcd_done                                        0     0      0      22
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _wdtdelay                                             4     0      4      22
 ---------------------------------------------------------------------------------
 (3) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (3) _printf                                               7     4      3   11564
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             6     1      5   11459
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           41    35      6   11163
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _stoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (5) _isupper                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (4) _stoa                                                21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _abs                                                  2     0      2      66
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     296
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     300
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     4      5    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2      90
 ---------------------------------------------------------------------------------
 (6) _fputs                                                6     3      3     674
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (9) _ringBufS_put_dma                                     3     0      3     186
 ---------------------------------------------------------------------------------
 (4) _atoi                                                10     9      1     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              3     1      2      68
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                    _CLC1_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                     _DSM_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
                    _NCO1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SPI1_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      44
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NCO1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      66
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DSM_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      22
        _ADCC_SetADIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT2_ISR                                            0     0      0       0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT2_CallBack                                       0     0      0       0
                   Absolute function *
       _INT2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR6_ISR                                            1     1      0      90
                                              0 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (13) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR5_ISR                                            1     1      0      60
                                              1 COMRAM     1     1      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (13) _TMR5_WriteTimer                                     2     0      2      60
 ---------------------------------------------------------------------------------
 (13) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
     _CLC1_Initialize
     _CLKREF_Initialize
     _DMA1_Initialize
     _DSM_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _INTERRUPT_Initialize
     _NCO1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _SPI1_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _UART1_Write
   _UART1_put_buffer
   _WaitMs
     _StartTimer
     _TimerDone
   _block_checksum
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _eaDogM_WriteString
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _ringBufS_flush
       _memset
     _start_lcd
     _strlen
     _wait_lcd_set
   _eaDogM_WriteStringAtPos
     _eaDogM_WriteString
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _strlen
       _wait_lcd_set
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _r_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_Write
     _UART1_is_rx_ready
     _WaitMs
       _StartTimer
       _TimerDone
     _run_checksum
     _secs_send
       _UART1_Write
       _UART1_is_tx_ready
       _UART1_put_buffer
       _block_checksum
   _secs_send
     _UART1_Write
     _UART1_is_tx_ready
     _UART1_put_buffer
     _block_checksum
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _t_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_Write
     _UART1_is_rx_ready
     _UART1_put_buffer
     _WaitMs
       _StartTimer
       _TimerDone
     _secs_II_message
     _secs_send
       _UART1_Write
       _UART1_is_tx_ready
       _UART1_put_buffer
       _block_checksum
   _wait_lcd_done
     _wdtdelay

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *

 _INT2_ISR (ROOT)
   _INT2_CallBack
     Absolute function(Fake) *
     _INT2_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      F6      11       96.1%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      C0       9       75.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      E1       7       87.9%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      A0       5      100.0%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      2      3E       1       98.4%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     375      58        0.0%
DATA                 0      0     375       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Mar  9 01:05:49 2019

                    _SPI1_Exchange8bit 5E30                                      _V 0089  
     __end_of_TMR5_SetInterruptHandler 5BC2                            __CFG_CP$OFF 000000  
              __size_of_ringBufS_flush 0092                            __CFG_LVP$ON 000000  
                                  _H10 0100                                    _H12 0192  
                                  _H13 0182                                    _H14 0171  
                                  _H24 0141                                    _H18 015C  
                                  _H53 0386                                    l194 5F16  
                                  l572 57E6                                    l717 5984  
                                  l579 5794                                    l597 5958  
                                  l847 5E3E                                    _GIE 01FE97  
                                  _abs 55E6                                    _pad 47E6  
              __size_of_PMD_Initialize 0014                                    tosl 003FFD  
                                  wreg 003FE8                          _INT0_CallBack 5D46  
                         _run_checksum 5A0A                     _UART1_Transmit_ISR 5932  
                        __CFG_BBEN$OFF 000000                          _INT1_CallBack 5D68  
                         __CFG_ZCD$OFF 000000                                   l1120 5778  
                                 l1305 545E                                   l1227 2D36  
                                 l1236 2DE6                                   l1246 2EF6  
                                 l1441 4D74                                   l1515 3B40  
                                 l1445 4FDC                                   l1541 41FC  
                                 l1702 36CE                                   l1723 2FB8  
                                 l5004 3A54                                   l4038 5760  
                                 l1655 483A                                   l5040 3F16  
                                 l5032 3E6A                                   l5024 3DE2  
                                 l1569 45BE                                   l2475 3FE2  
                                 l2547 47DC                                   l1675 286C  
                                 l5060 54F0                                   l2468 5626  
                                 l6100 45F2                                   l1773 2784  
                                 l5304 41D8                                   l6112 4610  
                                 l6104 45FE                                   l2585 505E  
                                 l6114 463C                                   l2499 41E8  
                                 l6036 59CA                                   l6132 466E  
                                 l5270 3FDE                                   l6126 4648  
                                 l6080 5A16                                   l6144 467C  
                                 l6128 4662                                   l6234 5954  
                                 l5290 40D8                                   l7114 28A6  
                                 l7106 285C                                   l7202 3846  
                                 l5450 5470                                   l5610 5D1C  
                                 l6154 469C                                   l6244 5E0C  
                                 l5284 407E                                   l7052 51BE  
                                 l6092 45DA                                   l6156 46C2  
                                 l5294 413E                                   l5286 4096  
                                 l5278 4052                                   l7038 470A  
                                 l7062 4832                                   l7118 28C4  
                                 l7222 2FE2                                   l7310 2136  
                                 l7302 212E                                   l5550 59AC  
                                 l6256 5980                                   l5288 409C  
                                 l7048 5180                                   l7072 48C2  
                                 l7064 4844                                   l7080 5086  
                                 l7152 2BAC                                   l7128 2ACA  
                                 l7216 2FA8                                   l5536 57B4  
                                 l6096 45E6                                   l6088 45CE  
                                 l6266 5E2C                                   l7058 480A  
                                 l7082 50B2                                   l7330 223C  
                                 l7314 2150                                   l7306 2132  
                                 l7402 2736                                   l5538 57B6  
                                 l7068 4880                                   l7148 2B7C  
                                 l7180 3704                                   l7164 3650  
                                 l7252 3174                                   l7236 307E  
                                 l7228 301E                                   l7260 31EE  
                                 l7332 2262                                   l7316 21A0  
                                 l4942 5616                                   l7350 2372  
                                 l7334 2274                                   l7502 4C72  
                                 l7184 3740                                   l7440 34B8  
                                 l7194 37DE                                   l7362 24A8  
                                 l7290 2110                                   l7434 344E  
                                 l4980 38E8                                   l7188 3770  
                                 l4964 504E                                   l7276 32C0  
                                 l7372 2550                                   l7292 2112  
                                 l7460 4ED6                                   l7428 3390  
                                 l5940 57BE                                   l7198 380A  
                                 l7294 2126                                   l7462 4F16  
                                 l7470 49F2                                   l7534 453C  
                                 l7526 448E                                   l7710 3C94  
                                 l7702 3C36                                   l4896 5112  
                                 l4992 3982                                   l7392 2716  
                                 l7448 3566                                   l5970 56A2  
                                 l4898 5134                                   l4986 393C  
                                 l7386 26C2                                   l7298 212A  
                                 l7474 4A64                                   l7546 4590  
                                 l7538 4556                                   l7730 3D08  
                                 l7722 3CE6                                   l7706 3C64  
                                 l7802 434C                                   l7396 271A  
                                 l7548 45B8                                   l7732 3D16  
                                 l7740 3D30                                   l7820 43A2  
                                 l5966 5678                                   l7734 3D1A  
                                 l7718 3CE2                                   l7742 3D72  
                                 l7822 43AA                                   l7910 2DD6  
                                 l7902 2DB6                                   l7736 3D22  
                                 l7656 3B0A                                   l7816 4390  
                                 l7808 435E                                   l7682 3BA8  
                                 l7818 439E                                   l7826 43B8  
                                 l7906 2DBE                                   l7676 3B88  
                                 l7772 425A                                   l7828 43FA  
                                 l7940 2EB2                                   l7932 2E6A  
                                 l7924 2E18                                   l7694 3BDC  
                                 l7790 42FC                                   l7782 429C  
                                 l7766 423A                                   l7846 2BF8  
                                 l7936 2E6E                                   l7698 3C12  
                                 l7954 2EE2                                   l7946 2ECE  
                                 l7938 2EA0                                   l7858 2C2A  
                                 l7788 42F0                                   l7964 2EFA  
                                 l7966 2F26                                   l7888 2D54  
                                 STR_1 2001                                   STR_2 2032  
                                 STR_3 209D                                   STR_4 20AB  
                                 STR_5 203E                                   STR_6 207B  
                                 STR_7 208C                                   STR_8 206A  
                                 STR_9 2055                                   u2100 589A  
                                 u2110 589C                                   u3000 4184  
                                 u2200 56F2                                   u2210 500C  
                                 u2220 500E                                   u2301 3942  
                                 _LATA 003FBA                                   u2310 397C  
                                 _LATB 003FBB                                   _LATC 003FBC  
                                 u2240 58FA                                   u2320 39AE  
                                 u2160 55FA                                   _LATD 003FBD  
                                 _LATE 003FBE                                   u2250 58FC  
                                 u2410 3E32                                   u2170 58CA  
                                 _LATF 003FBF                                   u2500 54EC  
                                 u2340 3A8C                                   u2420 3E64  
                                 u2180 58CC                                   u2270 38E2  
                                 u2430 3E96                                   u4110 2892  
                                 u2190 56F0                                   u2360 3ADE  
                                 u4120 2ADE                                   u4040 27BE  
                                 u2290 3938                                   u2450 3F4E  
                                 u4050 27C0                                   u4131 2B0E  
                                 u3340 52D6                                   u4140 2B24  
                                 u4300 2F8E                                   u4141 2B22  
                                 u2470 3FA0                                   u2390 3DDC  
                                 u4150 2B38                                   u4070 2830  
                                 u4160 2B3C                                   u4400 31EA  
                                 u2490 54CC                                   u4090 2842  
                                 u4250 3766                                   u4410 320A  
                                 u4330 3076                                   u4180 2B52  
                                 u4340 30CA                                   u3365 530A  
                                 u4421 323A                                   u4405 31CC  
                                 u3366 530C                                   u3358 52D8  
                                 u4430 3250                                   u4350 30CC  
                                 u4431 324E                                   u4280 386C  
                                 u4440 3264                                   u4600 25A0  
                                 u4520 22BA                                   u4450 3268  
                                 u4370 312A                                   u4530 22BC  
                                 _T6PR 003F93                                   u4380 312C  
                                 u4540 22E2                                   u4700 4C62  
                                 _PMD0 0039C0                                   _PMD1 0039C1  
                                 u4710 4488                                   _PMD2 0039C2  
                                 _PMD3 0039C3                                   _PMD4 0039C4  
                                 _PMD5 0039C5                                   u2970 404E  
                                 u4570 23C2                                   _PMD6 0039C6  
                                 _PMD7 0039C7                                   u3940 46FE  
                                 u4660 35DA                                   u2990 4182  
                                 u3960 477A                                   u4960 2C10  
                                 u4968 2C12                                   _PLLR 01CEE0  
                                 _WPUA 003A41                                   _WPUB 003A51  
                                 _WPUC 003A61                                   _WPUD 003A71  
                                 _WPUE 003A81                                   _WPUF 003A91  
                        _INT2_CallBack 5D8A                       __end_of_ADCC_ISR 5A0A  
                        __CFG_FCMEN$ON 000000                                   _dbuf 00D9  
                                 _atoi 3FC4                                   _ctoa 5068  
                                 _main 2BE4                                   _dtoa 278E  
                                 _prec 0026                                   _nout 0022  
                                 fsr1h 003FE2                                   indf0 003FEF  
                                 fsr2h 003FDA                                   fsr0l 003FE9  
                                 indf1 003FE7                                   indf2 003FDF  
                                 fsr1l 003FE1                                   fsr2l 003FD9  
                                 _stoa 35E4                                   btemp 003D  
                                 _xtoa 2F74      __size_of_INT2_SetInterruptHandler 0028  
                                 prodh 003FF4                                   prodl 003FF3  
                                 start 00AE                        _timer5ReloadVal 002E  
            __end_of_SPI1_Exchange8bit 5E4E                          __CFG_CSWEN$ON 000000  
                    _UART1_rx_vect_isr 5C8C                           ___param_bank 000000  
           __size_of_UART1_is_rx_ready 0008                     ?_UART1_rx_vect_isr 005D  
           __size_of_UART1_is_tx_ready 0008                       __end_of_INT0_ISR 5F4E  
                     __end_of_INT1_ISR 5F5E                       __end_of_INT2_ISR 5F6E  
       __size_of_OSCILLATOR_Initialize 0016               __end_of_ringBufS_put_dma 4D7C  
        __end_of_OSCILLATOR_Initialize 5F1C                                  PRLOCK 0039EF  
                      __end_of___aodiv 3B06                                  _ADCAP 003EF5  
                                _ADACT 003EFE                                  _ADCLK 003EFF  
                      __end_of___aomod 3FC4                                  _ADPCH 003EF1  
                                _ADREF 003EFD                                  STR_10 20B4  
                                STR_11 20B1                          __CFG_WDTE$OFF 000000  
                                _ADRPT 003EEC                                  _U1P1H 003DED  
                                _U1P2H 003DEF                                  _U1P1L 003DEC  
                                _U1P3H 003DF1                                  _U1P2L 003DEE  
                                _U1P3L 003DF0                                  _U2P1L 003DD4  
                                _U2P2L 003DD6                                  _U2P3L 003DD8  
                                _T5CLK 003F9D                                  _T5CON 003F9A  
                                _T6CON 003F94                         __CFG_DEBUG$OFF 000000  
                                _T6HLT 003F95                                  _U1UIR 003DF8  
                                _U1RXB 003DE8                                  _U2UIR 003DE0  
                                _U1TXB 003DEA                                  _U2RXB 003DD0  
                                _U2TXB 003DD2                                  _T6TMR 003F92  
                                _T6RST 003F97                    ??_UART1_rx_vect_isr 005D  
                                _ISRPR 0039F1                                  _OSCEN 0039DD  
                                _TMR5H 003F99                                  _TMR5L 003F98  
                                _TRISA 003FC2                                  _TRISB 003FC3  
                                _TRISC 003FC4                                  _TRISD 003FC5  
                                _TRISE 003FC6                                  _TRISF 003FC7  
                          _Default_ISR 5FD4      __size_of_TMR6_SetInterruptHandler 0028  
                    _UART1_tx_vect_isr 5C64                          __CFG_WRTB$OFF 000000  
                        __CFG_WRTC$OFF 000000                          __CFG_WRTD$OFF 000000  
                     __end_of_TMR5_ISR 583A                           _DMA1CON0bits 003BFC  
                     __end_of_TMR6_ISR 5ED6                           _DMA1CON1bits 003BFD  
                   r_protocol@rxData_l 0030                                  _flags 0028  
                                _fputc 46DA             __size_of_send_lcd_cmd_long 0028  
                      __end_of_isalpha 56FC                                  _fputs 5170  
                      __end_of_isdigit 5906                     __CFG_MCLRE$EXTMCLR 000000  
                   ?_UART1_tx_vect_isr 005D                                  _width 0024  
                                _putch 5EA2                        __end_of_islower 58A6  
                      __end_of_isspace 5500               _INT1_SetInterruptHandler 5BEA  
                      __end_of_isupper 58D6                                  pclath 003FFA  
                                tablat 003FF5                __size_of_DSM_Initialize 001C  
                                ltemp0 003D                                  ltemp1 0041  
                                ltemp2 0045               __size_of_DMA1_Initialize 006A  
                                plusw1 003FE3                                  ttemp0 003D  
                                ttemp1 0040                                  ttemp2 0043  
                                ttemp3 0046                                  ttemp5 003E  
                                ttemp6 0041                                  ttemp7 0045  
                                status 003FD8    __end_of_UART1_SetRxInterruptHandler 5B4A  
          _UART1_SetRxInterruptHandler 5B22                                  wtemp0 003D  
                                wtemp1 003F                                  wtemp2 0041  
                                wtemp3 0043                                  wtemp4 0045  
                                wtemp5 0047                                  wtemp8 003E  
                      __end_of_sprintf 4B72                        __end_of_toupper 5068  
                  ??_UART1_tx_vect_isr 005D              __size_of_DMA1_DMADCNT_ISR 000A  
            __end_of_UART1_rx_vect_isr 5CB2               __size_of_SPI1_Initialize 0016  
                      _TMR5_Initialize 562C                  __end_of_ringBufS_init 5AAA  
                      __initialization 4B72                      _UART2_rx_vect_isr 5CDC  
                         __end_of_atoi 41F2                           __end_of_ctoa 50EC  
                         __end_of_main 2F74                           __end_of_dtoa 2BE4  
                         __end_of_stoa 3886                           __end_of_xtoa 32F8  
                       __CFG_SAFEN$OFF 000000                     ?_UART2_rx_vect_isr 005D  
             _TMR5_SetInterruptHandler 5B9A                          __activetblptr 000003  
            __size_of_DMA1_DMASCNT_ISR 000E   __size_of_UART1_SetTxInterruptHandler 0028  
                  ??_UART2_rx_vect_isr 005D              __end_of_UART1_tx_vect_isr 5C8A  
                               INTCON0 003FD2   __size_of_UART2_SetRxInterruptHandler 0028  
                       __CFG_MVECEN$ON 000000                        _TMR6_Initialize 5B4A  
                     _UART1_Initialize 532E                      _UART2_tx_vect_isr 5CB4  
                   _UART2_Transmit_ISR 595E                                 _ADACCU 003EEA  
                               _ADACQH 003EF4                                 _ADACQL 003EF3  
                               _ADCON0 003EF8                                 _ADCON1 003EF9  
                               _ADCON2 003EFA                                 _ADCON3 003EFB  
                               _ADLTHH 003EDF                                 _ADLTHL 003EDE  
                               _ADPREH 003EF7                                 _ADPREL 003EF6  
                               _DMA1PR 0039F3                                 _DMA2PR 0039F4  
                               _ADSTAT 003EFC                                 _ADUTHH 003EE1  
                               _ADUTHL 003EE0                                 _ANSELA 003A40  
                               _ANSELB 003A50                                 _ANSELC 003A60  
                               _ANSELD 003A70                                 _ANSELE 003A80  
                               _ANSELF 003A90                     ?_UART2_tx_vect_isr 005D  
                               _MD1SRC 003CFC                                 _U1CON0 003DF2  
                               _U1CON1 003DF3                                 _U1CON2 003DF4  
                  __size_of_UART1_Read 003E                                 _U1BRGH 003DF6  
                               _U1FIFO 003DF7                                 _U2CON0 003DDA  
                               _U2CON1 003DDB                                 _U1BRGL 003DF5  
                               _U2CON2 003DDC                                 _U2BRGH 003DDE  
                               _U2FIFO 003DDF                                 _U2BRGL 003DDD  
                               _T5GATE 003F9C                                 _T5GCON 003F9B  
                               _MAINPR 0039F2                                 _RA4PPS 003A04  
                               _RA5PPS 003A05                                 _RA6PPS 003A06  
                               _RC3PPS 003A13                                 _RB6PPS 003A0E  
                               _RC5PPS 003A15                                 _ODCONA 003A42  
                               _ODCONB 003A52                                 _ODCONC 003A62  
                               _RC6PPS 003A16                                 _ODCOND 003A72  
                               _ODCONE 003A82                                 _ODCONF 003A92  
                               i2l1137 5832                         __CFG_WDTCCS$SC 000000  
                               u140_40 5EDE                                 u140_46 5EE0  
                               u151_48 5D76                                 u153_48 5D98  
                               u164_48 5DDC                                 _SCANPR 0039F7  
                               u149_48 5D54                                 _IVTADH 00389E  
                               _IVTADL 00389D                                 u356_48 5DBA  
                               _IVTADU 00389F           __size_of_eaDogM_WriteCommand 000E  
                               _OSCFRQ 0039DF               __end_of_send_lcd_cmd_dma 5550  
                  ??_UART2_tx_vect_isr 005D              __end_of_UART2_rx_vect_isr 5D02  
           __size_of_SPI1_Exchange8bit 001E                 __size_of_DMA1_DMAA_ISR 000A  
                       __CFG_XINST$OFF 000000                      _CLKREF_Initialize 5F8C  
                     _UART2_Initialize 53F4                                 _WaitMs 59B4  
 __size_of_ADCC_SetADIInterruptHandler 0028                         __CFG_STVREN$ON 000000  
                       _ringBufS_flush 4F52                                 _memset 32F8  
                               clear_0 4BDE                                 clear_1 4BEA  
                               clear_2 4BF6                                 clear_3 4C02  
                               clear_4 4C0E                                 _printf 5392  
                   _eaDogM_WriteString 4C26                              ?_ADCC_ISR 005D  
                               _strlen 50EC                     __size_of_TimerDone 0022  
                      _ADCC_Initialize 559C                         _PMD_Initialize 5F1C  
 __end_of_INT2_DefaultInterruptHandler 5FE0  __size_of_INT2_DefaultInterruptHandler 0002  
         _INT2_DefaultInterruptHandler 5FDE              __end_of_UART2_tx_vect_isr 5CDA  
                               lltemp0 003D                                 lltemp1 0045  
                               lltemp2 004D                                 lltemp3 0055  
                         __mediumconst 0000                                 tblptrh 003FF7  
                               tblptrl 003FF6                                 tblptru 003FF8  
                     __end_of_wdtdelay 54AE                       __end_of_vfprintf 4F52  
                           _StartTimer 583A                        _CLC1_Initialize 5D24  
        __size_of_INTERRUPT_Initialize 0066                __end_of_TMR5_Initialize 5672  
                    _SYSTEM_Initialize 56FC                             __accesstop 0060  
              __end_of__initialization 4C20                              ?_INT0_ISR 005D  
                            ?_INT1_ISR 005D                              ?_INT2_ISR 005D  
            __end_of_CLKREF_Initialize 5F96                          ___rparam_used 000001  
           __size_of_UART1_rx_vect_isr 0026                        _TMR5_WriteTimer 573E  
               __end_of_ringBufS_flush 4FE4                         __pcstackCOMRAM 005D  
                           ___inthi_sp 0D50                           __pidataBANK0 5FBE  
                         __pidataBANK1 4D7C                           __pidataBANK3 51EE  
                            ?_TMR5_ISR 005D                              ?_TMR6_ISR 005D  
                       ivt0x8_undefint 00AC                          __end_of_fputc 47E6  
                        __end_of_fputs 51EE                  __end_of_TMR5_CallBack 5DF0  
                        __end_of_putch 5EBC                __end_of_TMR6_Initialize 5B72  
               __end_of_PMD_Initialize 5F30                __size_of_block_checksum 00D2  
                           ??_ADCC_ISR 005D                  __end_of_TMR6_CallBack 5DCE  
          __size_of_EXT_INT_Initialize 004C             __size_of_UART1_tx_vect_isr 0026  
                        _DMA1_DMAA_ISR 5FA4       __end_of_INT2_SetInterruptHandler 5BEA  
             _UART2_RxInterruptHandler 0016              __end_of_SYSTEM_Initialize 573E  
                      __CFG_PR1WAY$OFF 000000                        __CFG_IVT1WAY$ON 000000  
                       _DSM_Initialize 5E86                             __pbssBANK0 0060  
                           __pbssBANK1 01A1                             __pbssBANK2 0200  
                           __pbssBANK3 0300                  _INT0_InterruptHandler 001F  
                           ??_INT0_ISR 005D                             ??_INT1_ISR 005D  
                           ??_INT2_ISR 005D                      __end_of_TimerDone 5D24  
                     _DMA1_DMADCNT_ISR 5F98              __size_of_UART1_put_buffer 002A  
           __size_of_UART2_rx_vect_isr 0026                                IVTBASEH 003FD6  
                              IVTBASEL 003FD5                                IVTBASEU 003FD7  
                __end_of_wait_lcd_done 5E6A                        __CFG_PPS1WAY$ON 000000  
     __end_of_TMR6_SetInterruptHandler 5B9A                __end_of_ADCC_Initialize 55E6  
                           ??_TMR5_ISR 005E                             ??_TMR6_ISR 005D  
                   __size_of_secs_send 01B8                                _CLC1CON 003C74  
                              _CLC1POL 003C75                                _DMA1DSA 003BF0  
                              _DMA1DSZ 003BEE                                _DMA1SSA 003BF9  
                              _DMA1SSZ 003BF7                                _ADSTPTH 003EE5  
                              _ADSTPTL 003EE4                                _MD1CARH 003CFE  
                              _MD1CARL 003CFD                      _UART1_Receive_ISR 5DF0  
                              _CLKRCLK 003CE6                                _CLKRCON 003CE5  
                              _NCO1CLK 003F3F                         ?_DMA1_DMAA_ISR 005D  
                     _DMA1_DMASCNT_ISR 5F70                                _NCO1CON 003F3E  
                              _U1ERRIE 003DFA                                _U1ERRIR 003DF9  
              __end_of_CLC1_Initialize 5D46                                _U2ERRIE 003DE2  
                              _U2ERRIR 003DE1                                _INT0PPS 003AC0  
                  __CFG_PWRTS$PWRT_OFF 000000                                _INT1PPS 003AC1  
                              _INT2PPS 003AC2                           ?_Default_ISR 005D  
                 __size_of_UART1_Write 003E             __size_of_UART2_tx_vect_isr 0026  
                              _U1RXPPS 003AE5                                _U2RXPPS 003AE8  
                              _OSCCON1 0039D9                                _OSCCON3 0039DB  
                              _IVTLOCK 003FD4                     __size_of_vfpfcnvrt 06D6  
                              _SPI1CLK 003D1C                                _SPI1RXB 003D10  
                              _SPI1TXB 003D11                                _OSCTUNE 0039DE  
               __end_of_DSM_Initialize 5EA2                                _SLRCONA 003A43  
                              _SLRCONB 003A53                                _SLRCONC 003A63  
                              _SLRCOND 003A73                                _SLRCONE 003A83  
                              _SLRCONF 003A93                     __size_of_start_lcd 0006  
              __end_of_TMR5_WriteTimer 577E                     __end_of_UART1_Read 57FA  
    __size_of_INT0_SetInterruptHandler 0028             __size_of_CLKREF_Initialize 000A  
              __size_of_DMA1_DMAOR_ISR 000C                                __Hparam 0000  
                              __Lparam 0000               __end_of_UART1_Initialize 5392  
                      __size_of_WaitMs 002A                                ___aodiv 3886  
                              ___aomod 3D84              __end_of_UART1_Receive_ISR 5E10  
                         __psmallconst 2000                   __end_of_init_display 49D8  
                              __pcinit 4B72                        __size_of_memset 02EC  
                  _eaDogM_WriteCommand 5F30                                __ramtop 2000  
          __size_of_UART1_Transmit_ISR 002C               __size_of_NCO1_Initialize 001C  
                              __ptext0 2BE4                                __ptext1 41F2  
                              __ptext2 45C8                                __ptext3 4AAA  
                              __ptext4 3B06                                __ptext5 4410  
                              __ptext6 49D8                                __ptext7 598A  
                              __ptext8 5FAE                                __ptext9 577E  
                    _UART2_Receive_ISR 5E10                        __size_of_printf 0062  
                      __CFG_WRTAPP$OFF 000000                        __size_of_strlen 0084  
                              us403999 27A8                                us420999 35F6  
                              us237999 3AF0                                us248999 3FB2  
                              us432999 2FF4                  _OSCILLATOR_Initialize 5F06  
                         __size_of_abs 0046                                _r_block 0060  
                         __size_of_pad 0108                                _isalpha 56B8  
                              _isdigit 58D6                                _islower 5876  
                              _isspace 54AE                        __CFG_WRTSAF$OFF 000000  
                            _T5CONbits 003F9A               __end_of_UART2_Initialize 5452  
                              _isupper 58A6             __size_of_SYSTEM_Initialize 0042  
                              _sprintf 4AAA                                _toupper 4FE4  
                 end_of_initialization 4C20                      __end_of_secs_send 45C8  
             _INT2_SetInterruptHandler 5BC2               __size_of_secs_II_message 0112  
                           _r_protocol 3B06    __end_of_UART1_SetTxInterruptHandler 5B22  
          _UART1_SetTxInterruptHandler 5AFA    __end_of_UART2_SetRxInterruptHandler 5AFA  
          _UART2_SetRxInterruptHandler 5AD2                             _t_protocol 41F2  
                    __end_of_vfpfcnvrt 278E                              _SPI1TCNTL 003D12  
                              postdec1 003FE5                                postdec2 003FDD  
                              postinc0 003FEE                                postinc1 003FE6  
                              postinc2 003FDE                    __size_of_StartTimer 003C  
                    __end_of_start_lcd 5FD2              __end_of_UART2_Receive_ISR 5E30  
                       wdtdelay@dcount 0085                  __CFG_WDTCPS$WDTCPS_31 000000  
                      ??_DMA1_DMAA_ISR 005E                         _block_checksum 49D8  
                _INT1_InterruptHandler 001C                              _PORTDbits 003FCD  
             _TMR6_SetInterruptHandler 5B72                  _TMR5_InterruptHandler 0004  
 __size_of_UART2_SetTxInterruptHandler 0028                      __size_of_ADCC_ISR 002A  
  __end_of_ADCC_SetADIInterruptHandler 5C62            _ADCC_SetADIInterruptHandler 5C3A  
               __size_of_ringBufS_init 0028                       __CFG_FEXTOSC$ECH 000000  
                      _DMA1_Initialize 525E                        _SPI1_Initialize 5EF0  
                     _UART1_put_buffer 598A                      __size_of_INT0_ISR 000E  
                    __size_of_INT1_ISR 000E                      __size_of_INT2_ISR 000E  
                       __end_of_WaitMs 59DE           __end_of_INTERRUPT_Initialize 532E  
               __end_of_block_checksum 4AAA   __end_of_INT0_DefaultInterruptHandler 5FDC  
__size_of_INT0_DefaultInterruptHandler 0002           _INT0_DefaultInterruptHandler 5FDA  
           __size_of_UART1_Receive_ISR 0020                      __size_of_TMR5_ISR 003E  
                    __size_of_TMR6_ISR 001A            __size_of_UART2_Transmit_ISR 002C  
                       __end_of_memset 35E4                         __end_of_printf 53F4  
             __end_of_DMA1_DMADCNT_ISR 5FA2                  __end_of_INT0_CallBack 5D68  
                       __end_of_strlen 5170                    start_initialization 4B72  
 __end_of_TMR5_DefaultInterruptHandler 5EF0  __size_of_TMR5_DefaultInterruptHandler 001A  
         _TMR5_DefaultInterruptHandler 5ED6        __size_of_PIN_MANAGER_Initialize 00A0  
                          __end_of_abs 562C                  __end_of_INT1_CallBack 5D8A  
                          __end_of_pad 48EE                   __size_of_Default_ISR 0006  
                 __end_of_send_lcd_cmd 5A82                             ivt0x8_base 0008  
                __end_of_INT2_CallBack 5DAC                   secs_II_message@block 0001  
                        _uart1RxBuffer 01A1                          _uart1TxBuffer 0280  
                        _uart2RxBuffer 0200               __end_of_DMA1_DMASCNT_ISR 5F7E  
                        _uart2TxBuffer 0240                         _DMA1_DMAOR_ISR 5F80  
                     __CFG_LPBOREN$OFF 000000                  __size_of_init_display 00EA  
          __size_of_eaDogM_WriteString 00AC                              _TimerDone 5D02  
                        _ringBufS_init 5A82                            _MD1CON0bits 003CFA  
                          _MD1CON1bits 003CFB                            __pdataBANK0 00F9  
                          __pdataBANK1 0100                            __pdataBANK3 0386  
           __size_of_UART2_Receive_ISR 0020             __end_of_EXT_INT_Initialize 559C  
                      run_checksum@sum 002A        __end_of_eaDogM_WriteStringAtPos 5932  
              __end_of_DMA1_Initialize 52C8                            __pbssCOMRAM 0001  
     __end_of_INT0_SetInterruptHandler 5C3A                __end_of_SPI1_Initialize 5F06  
             _UART1_RxInterruptHandler 0010               _UART2_TxInterruptHandler 0013  
            __size_of_ringBufS_put_dma 00AA                           _init_display 48EE  
               __end_of_DMA1_DMAOR_ISR 5F8C                 __size_of_TMR5_CallBack 0022  
                _INT2_InterruptHandler 0019                  _TMR6_InterruptHandler 0007  
               __size_of_TMR6_CallBack 0022                 _PIN_MANAGER_Initialize 4E1E  
                 __end_of_wait_lcd_set 5FCC                              __ptext100 5E10  
                            __ptext101 5EBC                              __ptext110 5DCE  
                            __ptext102 5DAC                              __ptext111 5ED6  
                            __ptext103 5672                              __ptext112 0000  
                            __ptext104 5F70                              __ptext105 5F98  
                            __ptext106 5FA4                              __ptext107 5F80  
                            __ptext108 57FC                              __ptext109 573E  
                   __end_of_StartTimer 5876                      __size_of_wdtdelay 005C  
                    __size_of_vfprintf 0094                               _ADCC_ISR 59E0  
                  __size_of_r_protocol 027E                 __CFG_BBSIZE$BBSIZE_512 000000  
                          __smallconst 2000                               _CLC1GLS0 003C7A  
                             _CLC1GLS1 003C7B                               _CLC1GLS2 003C7C  
                             _CLC1GLS3 003C7D                               _CLC1SEL0 003C76  
                             _CLC1SEL1 003C77                               _CLC1SEL2 003C78  
                             _CLC1SEL3 003C79                               _DMA1CON0 003BFC  
                             _DMA1CON1 003BFD                               _DMA1AIRQ 003BFE  
                             _DMA1SIRQ 003BFF                            _NCO1CONbits 003F3E  
                  __size_of_t_protocol 021E                 __size_of_wait_lcd_done 001C  
                       __size_of_fputc 010C                         __size_of_fputs 007E  
                             _NCO1ACCH 003F39                         __size_of_putch 001A  
                             _NCO1ACCL 003F38                               _NCO1ACCU 003F3A  
                 _INTERRUPT_Initialize 52C8                               _T6CLKCON 003F96  
                             _NCO1INCH 003F3C                               _NCO1INCL 003F3B  
                             _NCO1INCU 003F3D                        ?_DMA1_DMAOR_ISR 005D  
                             _INT0_ISR 5F40                               _INT1_ISR 5F50  
                             _INT2_ISR 5F60                               _LATCbits 003FBC  
                             _LATDbits 003FBD                               _LATEbits 003FBE  
    __size_of_INT1_SetInterruptHandler 0028                              _secs_send 4410  
                             _IPR1bits 003981                               _IPR2bits 003982  
                             _PIE1bits 003991                               _IPR3bits 003983  
                             _PIE2bits 003992                               _IPR5bits 003985  
                             _PIE3bits 003993                              _tickCount 0079  
                             _IPR6bits 003986                               _PIE5bits 003995  
                             _IPR7bits 003987                               _IPR8bits 003988  
                             _PIE6bits 003996                               _PIE7bits 003997  
                             _IPR9bits 003989                               _PIE8bits 003998  
                  __CFG_BORV$VBOR_2P45 000000                               _PIE9bits 003999  
                            _ring_buf1 0343                              _ring_buf2 0300  
                             _PIR1bits 0039A1                               _PIR2bits 0039A2  
                             _SPI1BAUD 003D19                               i2u196_40 582A  
                             i2u187_48 59F6                               i2u381_48 5C9E  
                             _SPI1CON0 003D14                               _SPI1CON1 003D15  
                             _SPI1CON2 003D16                               i2u383_48 5CC6  
                             _PIR5bits 0039A5                               i2u385_48 5CEE  
                             i2u379_48 5C76                               _PIR7bits 0039A7  
                             _PIR8bits 0039A8                               _PIR9bits 0039A9  
             __size_of_TMR5_Initialize 0046             __end_of_UART1_Transmit_ISR 595E  
                             _TMR5_ISR 57FC                               _TMR6_ISR 5EBC  
                            _vfpfcnvrt 20B8                           _SPI1INTFbits 003D1A  
                        _TMR5_CallBack 5DCE                              _start_lcd 5FCC  
            __size_of_send_lcd_cmd_dma 0050                          _TMR6_CallBack 5DAC  
             __end_of_UART1_put_buffer 59B4                  __size_of_send_lcd_cmd 0028  
    __size_of_TMR5_SetInterruptHandler 0028                    __end_of_UART1_Write 57BC  
             __size_of_TMR6_Initialize 0028                            _INTCON0bits 003FD2  
                            copy_data0 4B86                              copy_data1 4BA8  
                            copy_data2 4BCA               _INT0_SetInterruptHandler 5C12  
               _uart1TxBufferRemaining 003A    __end_of_UART2_SetTxInterruptHandler 5AD2  
          _UART2_SetTxInterruptHandler 5AAA                           _uart1RxCount 0037  
                         _uart2RxCount 0031                               __Hrparam 0000  
     __size_of_eaDogM_WriteStringAtPos 002C                __CFG_RSTOSC$EXTOSC_4PLL 000000  
                 __end_of_run_checksum 5A32                               __Lrparam 0000  
                   __CFG_BOREN$SBORDIS 000000                          _wait_lcd_done 5E4E  
                         _send_lcd_cmd 5A5A                       __size_of___aodiv 0280  
                     __size_of___aomod 0240                        _NCO1_Initialize 5E6A  
                __end_of_DMA1_DMAA_ISR 5FAE   __size_of_UART1_SetRxInterruptHandler 0028  
                    ?_DMA1_DMADCNT_ISR 005D               __size_of_ADCC_Initialize 004A  
          __end_of_eaDogM_WriteCommand 5F3E                       __size_of_isalpha 0044  
                     __size_of_isdigit 0030                               __pivt0x8 0008  
                     __size_of_islower 0030                       __size_of_isspace 0052  
                   ??_DMA1_DMADCNT_ISR 005E                               __ptext10 5A0A  
                             __ptext11 59B4                               __ptext20 5A82  
                             __ptext12 5D02                               __ptext21 5906  
                             __ptext13 583A                               __ptext30 32F8  
                             __ptext22 4C26                               __ptext14 5FB6  
                             __ptext31 5392                               __ptext23 5F30  
                             __ptext15 57BC                               __ptext40 278E  
                             __ptext32 4EBE                               __ptext24 5500  
                             __ptext16 48EE                               __ptext41 55E6  
                             __ptext33 20B8                               __ptext25 5FC6  
                             __ptext17 5A32                               __ptext50 4CD2  
                             __ptext42 3D84                               __ptext34 2F74  
                             __ptext26 5E4E                               __ptext18 5A5A  
                             __ptext51 3FC4                               __ptext43 3886  
                             __ptext35 4FE4                               __ptext27 5452  
                             __ptext19 5E30                               __ptext60 5B22  
                             __ptext52 54AE                               __ptext44 5068  
                             __ptext36 5876                               __ptext28 5FCC  
                             __ptext61 5B4A                               __ptext53 58D6  
                             __ptext45 47E6                               __ptext37 58A6  
                             __ptext29 4F52                               __ptext70 52C8  
                             __ptext62 5B72                               __ptext54 56FC  
                             __ptext46 50EC                               __ptext38 56B8  
                             __ptext71 5550                               __ptext63 562C  
                             __ptext55 53F4                               __ptext47 5170  
                             __ptext39 35E4                               __ptext80 5C3A  
                             __ptext72 5BC2                               __ptext64 5B9A  
                             __ptext56 5AAA                               __ptext48 46DA  
                             __ptext81 5F40                               __ptext73 5BEA  
                             __ptext65 5EF0                               __ptext57 5AD2  
                             __ptext49 5EA2                               __ptext90 5FD4  
                             __ptext82 5D46                               __ptext74 5C12  
                             __ptext66 5F1C                               __ptext58 532E  
                             __ptext91 59E0                               __ptext83 5FDA  
                             __ptext75 5E86                               __ptext67 4E1E  
                             __ptext59 5AFA                               __ptext92 5FE0  
                             __ptext84 5F50                               __ptext76 525E  
                             __ptext68 5F06                               __ptext93 5C64  
                             __ptext85 5D68                               __ptext77 5F8C  
                             __ptext69 5E6A                               __ptext94 5932  
                             __ptext86 5FDC                               __ptext78 5D24  
                             __ptext95 5C8C                               __ptext87 5F60  
                             __ptext79 559C                               __ptext96 5DF0  
                             __ptext88 5D8A                               __ptext97 5CB4  
                             __ptext89 5FDE                               __ptext98 595E  
                             __ptext99 5CDC                       __size_of_isupper 0030  
                      _secs_II_message 45C8               __size_of_CLC1_Initialize 0022  
                     __size_of_sprintf 00C8                       __size_of_toupper 0084  
                     _ringBufS_put_dma 4CD2                          __size_of_atoi 022E  
                        __size_of_ctoa 0084                          __size_of_main 0390  
                        __size_of_dtoa 0456                  __size_of_wait_lcd_set 0006  
                        __size_of_stoa 02A2                          __size_of_xtoa 0384  
                 __CFG_WDTCWS$WDTCWS_7 000000                      ?_DMA1_DMASCNT_ISR 005D  
                          _IVTLOCKbits 003FD4               __size_of_TMR5_WriteTimer 0040  
            _ADCC_ADI_InterruptHandler 000A                              stoa@F1144 00F9  
                   ??_DMA1_DMASCNT_ISR 005E                               _spi_link 006D  
                             _wdtdelay 5452             __end_of_UART2_Transmit_ISR 598A  
                             _vfprintf 4EBE                      _UART1_is_rx_ready 5FB6  
                          _UART1_Write 577E   __end_of_INT1_DefaultInterruptHandler 5FDE  
__size_of_INT1_DefaultInterruptHandler 0002           _INT1_DefaultInterruptHandler 5FDC  
                    _UART1_is_tx_ready 5FAE                          ??_Default_ISR 005D  
                   __end_of_r_protocol 3D84                            _uart1RxHead 0039  
                          _uart1TxHead 003C                            _uart2RxHead 0033  
                          _uart1RxTail 0038                            _uart2TxHead 0036  
                          _uart1TxTail 003B                            _uart2RxTail 0032  
                          _uart2TxTail 0035                           _wait_lcd_set 5FC6  
                   _EXT_INT_Initialize 5550   __end_of_TMR6_DefaultInterruptHandler 56B8  
__size_of_TMR6_DefaultInterruptHandler 0046           _TMR6_DefaultInterruptHandler 5672  
                   __end_of_t_protocol 4410   __end_of_ADCC_DefaultInterruptHandler 5FE2  
__size_of_ADCC_DefaultInterruptHandler 0002           _ADCC_DefaultInterruptHandler 5FE0  
                             intlevel2 0000                      _send_lcd_cmd_long 5A32  
                    __CFG_CLKOUTEN$OFF 000000             __end_of_eaDogM_WriteString 4CD2  
              __end_of_NCO1_Initialize 5E86                 __size_of_INT0_CallBack 0022  
                           _SPI1SCKPPS 003ADE                             _SPI1SDIPPS 003ADF  
            __end_of_UART1_is_rx_ready 5FBE                             _UART1_Read 57BC  
               __size_of_INT1_CallBack 0022              __end_of_UART1_is_tx_ready 5FB6  
               __size_of_INT2_CallBack 0022                 _uart2TxBufferRemaining 0034  
                     _send_lcd_cmd_dma 5500                  TMR5_ISR@CountCallBack 002C  
              __end_of_secs_II_message 46DA       __end_of_INT1_SetInterruptHandler 5C12  
            __size_of_UART1_Initialize 0064                       ??_DMA1_DMAOR_ISR 005E  
             _UART1_TxInterruptHandler 000D              __end_of_send_lcd_cmd_long 5A5A  
                  __end_of_Default_ISR 5FDA         __end_of_PIN_MANAGER_Initialize 4EBE  
                __size_of_run_checksum 0028                _eaDogM_WriteStringAtPos 5906  
            __size_of_UART2_Initialize 005E  
