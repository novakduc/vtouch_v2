

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Dec 12 15:44:10 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     9                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    23                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	text0,global,reloc=2,class=CODE,delta=1
    25                           	psect	text1,global,reloc=2,class=CODE,delta=1
    26                           	psect	text2,global,reloc=2,class=CODE,delta=1
    27                           	psect	text3,global,reloc=2,class=CODE,delta=1
    28                           	psect	text4,global,reloc=2,class=CODE,delta=1
    29                           	psect	text5,global,reloc=2,class=CODE,delta=1
    30                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text7,global,reloc=2,class=CODE,delta=1
    32                           	psect	text8,global,reloc=2,class=CODE,delta=1
    33                           	psect	text9,global,reloc=2,class=CODE,delta=1
    34                           	psect	text10,global,reloc=2,class=CODE,delta=1
    35                           	psect	text11,global,reloc=2,class=CODE,delta=1
    36                           	psect	text12,global,reloc=2,class=CODE,delta=1
    37                           	psect	text13,global,reloc=2,class=CODE,delta=1
    38                           	psect	text14,global,reloc=2,class=CODE,delta=1
    39                           	psect	text15,global,reloc=2,class=CODE,delta=1
    40                           	psect	text16,global,reloc=2,class=CODE,delta=1
    41                           	psect	text17,global,reloc=2,class=CODE,delta=1
    42                           	psect	text18,global,reloc=2,class=CODE,delta=1
    43                           	psect	text19,global,reloc=2,class=CODE,delta=1
    44                           	psect	text20,global,reloc=2,class=CODE,delta=1
    45                           	psect	text21,global,reloc=2,class=CODE,delta=1
    46                           	psect	text22,global,reloc=2,class=CODE,delta=1
    47                           	psect	text23,global,reloc=2,class=CODE,delta=1
    48                           	psect	text24,global,reloc=2,class=CODE,delta=1
    49                           	psect	text25,global,reloc=2,class=CODE,delta=1
    50                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text27,global,reloc=2,class=CODE,delta=1
    52                           	psect	text28,global,reloc=2,class=CODE,delta=1
    53                           	psect	text29,global,reloc=2,class=CODE,delta=1
    54                           	psect	text30,global,reloc=2,class=CODE,delta=1
    55                           	psect	text31,global,reloc=2,class=CODE,delta=1
    56                           	psect	text32,global,reloc=2,class=CODE,delta=1
    57                           	psect	text33,global,reloc=2,class=CODE,delta=1
    58                           	psect	text34,global,reloc=2,class=CODE,delta=1
    59                           	psect	text35,global,reloc=2,class=CODE,delta=1
    60                           	psect	text36,global,reloc=2,class=CODE,delta=1
    61                           	psect	text37,global,reloc=2,class=CODE,delta=1
    62                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text40,global,reloc=2,class=CODE,delta=1
    65                           	psect	text41,global,reloc=2,class=CODE,delta=1
    66                           	psect	text42,global,reloc=2,class=CODE,delta=1
    67                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text46,global,reloc=2,class=CODE,delta=1
    71                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text50,global,reloc=2,class=CODE,delta=1
    75                           	psect	text51,global,reloc=2,class=CODE,delta=1
    76                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    83                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    84                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    85                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    86                           	psect	text62,global,reloc=2,class=CODE,delta=1
    87                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    88                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    89                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
    90                           	psect	text66,global,reloc=2,class=CODE,delta=1
    91                           	psect	text67,global,reloc=2,class=CODE,delta=1
    92                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    93                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    94                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    95                           	psect	text71,global,reloc=2,class=CODE,delta=1
    96                           	psect	text72,global,reloc=2,class=CODE,delta=1
    97                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    99                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=2
   100                           	psect	text76,global,reloc=2,class=CODE,delta=1
   101                           	psect	text77,global,reloc=2,class=CODE,delta=1
   102                           	psect	text78,global,reloc=2,class=CODE,delta=1
   103                           	psect	text79,global,reloc=2,class=CODE,delta=1
   104                           	psect	text80,global,reloc=2,class=CODE,delta=1
   105                           	psect	text81,global,reloc=2,class=CODE,delta=1
   106                           	psect	text82,global,reloc=2,class=CODE,delta=1
   107                           	psect	text83,global,reloc=2,class=CODE,delta=1
   108                           	psect	text84,global,reloc=2,class=CODE,delta=1
   109                           	psect	text85,global,reloc=2,class=CODE,delta=1,inline
   110                           	psect	text86,global,reloc=2,class=CODE,delta=1,inline
   111                           	psect	text87,global,reloc=2,class=CODE,delta=1
   112                           	psect	text88,global,reloc=2,class=CODE,delta=1
   113                           	psect	text89,global,reloc=2,class=CODE,delta=1
   114                           	psect	text90,global,reloc=2,class=CODE,delta=1,group=2
   115                           	psect	text91,global,reloc=2,class=CODE,delta=1
   116                           	psect	text92,global,reloc=2,class=CODE,delta=1,group=2
   117                           	psect	text93,global,reloc=2,class=CODE,delta=1
   118                           	psect	text94,global,reloc=2,class=CODE,delta=1,group=1
   119                           	psect	text95,global,reloc=2,class=CODE,delta=1,group=1
   120                           	psect	text96,global,reloc=2,class=CODE,delta=1,group=1
   121                           	psect	text97,global,reloc=2,class=CODE,delta=1
   122                           	psect	text98,global,reloc=2,class=CODE,delta=1
   123                           	psect	text99,global,reloc=2,class=CODE,delta=1
   124                           	psect	text100,global,reloc=2,class=CODE,delta=1
   125                           	psect	text101,global,reloc=2,class=CODE,delta=1,group=1
   126                           	psect	text102,global,reloc=2,class=CODE,delta=1,group=1
   127                           	psect	text103,global,reloc=2,class=CODE,delta=1,group=1
   128                           	psect	text104,global,reloc=2,class=CODE,delta=1
   129                           	psect	text105,global,reloc=2,class=CODE,delta=1
   130                           	psect	text106,global,reloc=2,class=CODE,delta=1
   131                           	psect	text107,global,reloc=2,class=CODE,delta=1
   132                           	psect	text108,global,reloc=2,class=CODE,delta=1
   133                           	psect	text109,global,reloc=2,class=CODE,delta=1
   134                           	psect	text110,global,reloc=2,class=CODE,delta=1
   135                           	psect	text111,global,reloc=2,class=CODE,delta=1
   136                           	psect	text112,global,reloc=2,class=CODE,delta=1
   137                           	psect	text113,global,reloc=2,class=CODE,delta=1
   138                           	psect	text114,global,reloc=2,class=CODE,delta=1
   139                           	psect	text115,global,reloc=2,class=CODE,delta=1
   140                           	psect	text116,global,reloc=2,class=CODE,delta=1
   141                           	psect	text117,global,reloc=2,class=CODE,delta=1
   142                           	psect	text118,global,reloc=2,class=CODE,delta=1
   143                           	psect	text119,global,reloc=2,class=CODE,delta=1
   144                           	psect	text120,global,reloc=2,class=CODE,delta=1
   145                           	psect	text121,global,reloc=2,class=CODE,delta=1
   146                           	psect	text122,global,reloc=2,class=CODE,delta=1
   147                           	psect	text123,global,reloc=2,class=CODE,delta=1
   148                           	psect	text124,global,reloc=2,class=CODE,delta=1
   149                           	psect	text125,global,reloc=2,class=CODE,delta=1
   150                           	psect	text126,global,reloc=2,class=CODE,delta=1
   151                           	psect	text127,global,reloc=2,class=CODE,delta=1
   152                           	psect	text128,global,reloc=2,class=CODE,delta=1
   153                           	psect	text129,global,reloc=2,class=CODE,delta=1
   154                           	psect	text130,global,reloc=2,class=CODE,delta=1
   155                           	psect	text131,global,reloc=2,class=CODE,delta=1
   156                           	psect	text132,global,reloc=2,class=CODE,delta=1
   157                           	psect	text133,global,reloc=4,class=CODE,delta=1
   158                           	psect	text134,global,reloc=2,class=CODE,delta=1
   159                           	psect	text135,global,reloc=2,class=CODE,delta=1
   160                           	psect	text136,global,reloc=2,class=CODE,delta=1
   161                           	psect	text137,global,reloc=4,class=CODE,delta=1
   162                           	psect	text138,global,reloc=2,class=CODE,delta=1
   163                           	psect	text139,global,reloc=2,class=CODE,delta=1
   164                           	psect	text140,global,reloc=2,class=CODE,delta=1
   165                           	psect	text141,global,reloc=4,class=CODE,delta=1
   166                           	psect	text142,global,reloc=2,class=CODE,delta=1
   167                           	psect	text143,global,reloc=2,class=CODE,delta=1
   168                           	psect	text144,global,reloc=2,class=CODE,delta=1
   169                           	psect	text145,global,reloc=2,class=CODE,delta=1
   170                           	psect	text146,global,reloc=2,class=CODE,delta=1
   171                           	psect	text147,global,reloc=2,class=CODE,delta=1
   172                           	psect	text148,global,reloc=4,class=CODE,delta=1
   173                           	psect	text149,global,reloc=2,class=CODE,delta=1
   174                           	psect	text150,global,reloc=2,class=CODE,delta=1
   175                           	psect	text151,global,reloc=4,class=CODE,delta=1
   176                           	psect	text152,global,reloc=4,class=CODE,delta=1
   177                           	psect	text153,global,reloc=2,class=CODE,delta=1
   178                           	psect	text154,global,reloc=2,class=CODE,delta=1
   179                           	psect	text155,global,reloc=2,class=CODE,delta=1
   180                           	psect	text156,global,reloc=4,class=CODE,delta=1
   181                           	psect	text157,global,reloc=4,class=CODE,delta=1
   182                           	psect	text158,global,reloc=2,class=CODE,delta=1
   183                           	psect	text159,global,reloc=4,class=CODE,delta=1
   184                           	psect	text160,global,reloc=2,class=CODE,delta=1
   185                           	psect	text161,global,reloc=4,class=CODE,delta=1
   186                           	psect	text162,global,reloc=2,class=CODE,delta=1
   187                           	psect	text163,global,reloc=4,class=CODE,delta=1
   188                           	psect	text164,global,reloc=2,class=CODE,delta=1
   189                           	psect	text165,global,reloc=2,class=CODE,delta=1
   190                           	psect	text166,global,reloc=4,class=CODE,delta=1
   191                           	psect	text167,global,reloc=4,class=CODE,delta=1
   192                           	psect	text168,global,reloc=4,class=CODE,delta=1
   193                           	psect	text169,global,reloc=4,class=CODE,delta=1
   194                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   195                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   196                           	psect	text170,global,reloc=4,class=CODE,delta=1
   197                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   198                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   199  0000                     
   200                           ; Version 2.10
   201                           ; Generated 31/07/2019 GMT
   202                           ; 
   203                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   204                           ; All rights reserved.
   205                           ; 
   206                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   207                           ; 
   208                           ; Redistribution and use in source and binary forms, with or without modification, are
   209                           ; permitted provided that the following conditions are met:
   210                           ; 
   211                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   212                           ;        conditions and the following disclaimer.
   213                           ; 
   214                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   215                           ;        of conditions and the following disclaimer in the documentation and/or other
   216                           ;        materials provided with the distribution.
   217                           ; 
   218                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   219                           ;        software without specific prior written permission.
   220                           ; 
   221                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   222                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   223                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   224                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   225                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   226                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   227                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   228                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   229                           ; 
   230                           ; 
   231                           ; Code-generator required, PIC18F57K42 Definitions
   232                           ; 
   233                           ; SFR Addresses
   234  0000                     
   235 ;;_k	offset	0
   236 ;;_j	offset	1
   237 ;;_i	offset	2
   238 ;;_inp_index	offset	3
   239 ;;_mode	offset	4
   240 ;;_i_ror	offset	5
   241 ;;_channel	offset=-1 (param)
   242 ;;_s	offset=-2 (param)
   243 ;;_mode	offset=-1 (param)
   244 ;;_mode	offset=-1 (param)
   245 ;;_cmd	offset=-1 (param)
   246 ;;_cmd	offset=-1 (param)
   247 ;;_data	offset=-1 (param)
   248 ;;__this	offset=-2 (param)
   249 ;;_cvoltage	offset=-4 (param)
   250 ;;_h	offset=-1 (param)
   251 ;;_h	offset=-1 (param)
   252 ;;_i	offset=-1 (param)
   253 ;;_cmd	offset=-1 (param)
   254 ;;_i	offset	0
   255 ;;_h	offset=-1 (param)
   256 ;;_flipper	offset=-1 (param)
   257 ;;_f	offset	0
   258 ;;_ap	offset	6
   259 ;;_s	offset=-3 (param)
   260 ;;_fmt	offset=-5 (param)
   261 ;;_line	offset=-1 (param)
   262 ;;_vterm	offset=-2 (param)
   263 ;;_numMilliseconds	offset=-2 (param)
   264 ;;_vterm	offset=-1 (param)
   265 ;;_r	offset=-1 (param)
   266 ;;_c	offset=-2 (param)
   267 ;;_strPtr	offset=-4 (param)
   268 ;;_strPtr	offset=-1 (param)
   269 ;;_delay	offset=-4 (param)
   270 ;;_strPtr	offset=-2 (param)
   271 ;;__this	offset=-2 (param)
   272 ;;_clearBuffer	offset=-3 (param)
   273 ;;_s	offset	0
   274 ;;_k	offset	2
   275 ;;_dest	offset=-2 (param)
   276 ;;_c	offset=-4 (param)
   277 ;;_n	offset=-6 (param)
   278 ;;_ap	offset	0
   279 ;;_fmt	offset=-3 (param)
   280 ;;_cfmt	offset	0
   281 ;;_fp	offset=-2 (param)
   282 ;;_fmt	offset=-4 (param)
   283 ;;_ap	offset=-6 (param)
   284 ;;_vfpfcnvrt$5320	offset	0
   285 ;;_vfpfcnvrt$5331	offset	2
   286 ;;_vfpfcnvrt$5319	offset	4
   287 ;;_llu	offset	6
   288 ;;_ll	offset	14
   289 ;;_f	offset	22
   290 ;;_ct	offset	26
   291 ;;_cp	offset	29
   292 ;;_c	offset	31
   293 ;;_fp	offset=-2 (param)
   294 ;;_fmt	offset=-4 (param)
   295 ;;_ap	offset=-6 (param)
   296 ;;_xtoa$5305	offset	0
   297 ;;_xtoa$5304	offset	2
   298 ;;_n	offset	4
   299 ;;_c	offset	12
   300 ;;_i	offset	14
   301 ;;_w	offset	16
   302 ;;_p	offset	18
   303 ;;_fp	offset=-2 (param)
   304 ;;_d	offset=-10 (param)
   305 ;;_x	offset=-11 (param)
   306 ;;_toupper$6111	offset	0
   307 ;;_c	offset=-2 (param)
   308 ;;_c	offset=-2 (param)
   309 ;;_c	offset=-2 (param)
   310 ;;_n	offset	0
   311 ;;_i	offset	8
   312 ;;_w	offset	10
   313 ;;_p	offset	12
   314 ;;_fp	offset=-2 (param)
   315 ;;_d	offset=-10 (param)
   316 ;;_counter	offset	0
   317 ;;_dividend	offset=-8 (param)
   318 ;;_divisor	offset=-16 (param)
   319 ;;_quotient	offset	0
   320 ;;_counter	offset	8
   321 ;;_dividend	offset=-8 (param)
   322 ;;_divisor	offset=-16 (param)
   323 ;;_r	offset	0
   324 ;;_l	offset	2
   325 ;;__l	offset=-2 (param)
   326 ;;__r	offset=-4 (param)
   327 ;;_n	offset=-6 (param)
   328 ;;_nuls	offset	0
   329 ;;_l	offset	7
   330 ;;_p	offset	9
   331 ;;_cp	offset	11
   332 ;;_w	offset	13
   333 ;;_i	offset	15
   334 ;;_fp	offset=-2 (param)
   335 ;;_s	offset=-4 (param)
   336 ;;_efgtoa$5277	offset	0
   337 ;;_efgtoa$5276	offset	2
   338 ;;_efgtoa$5275	offset	4
   339 ;;_efgtoa$5271	offset	6
   340 ;;_efgtoa$5267	offset	8
   341 ;;_efgtoa$5266	offset	10
   342 ;;_u	offset	12
   343 ;;_g	offset	16
   344 ;;_l	offset	20
   345 ;;_h	offset	24
   346 ;;_ou	offset	28
   347 ;;_n	offset	32
   348 ;;_e	offset	34
   349 ;;_i	offset	36
   350 ;;_w	offset	38
   351 ;;_p	offset	40
   352 ;;_sign	offset	42
   353 ;;_d	offset	44
   354 ;;_ne	offset	46
   355 ;;_m	offset	48
   356 ;;_pp	offset	50
   357 ;;_t	offset	52
   358 ;;_mode	offset	54
   359 ;;_nmode	offset	55
   360 ;;_fp	offset=-2 (param)
   361 ;;_f	offset=-6 (param)
   362 ;;_c	offset=-7 (param)
   363 ;;_tolower$6096	offset	0
   364 ;;_c	offset=-2 (param)
   365 ;;_c	offset=-2 (param)
   366 ;;_d	offset	0
   367 ;;_s	offset	2
   368 ;;_dest	offset=-2 (param)
   369 ;;_src	offset=-4 (param)
   370 ;;_u	offset	0
   371 ;;_m	offset	4
   372 ;;_e	offset	8
   373 ;;_x	offset=-4 (param)
   374 ;;_u	offset	0
   375 ;;_e	offset	4
   376 ;;_x	offset=-4 (param)
   377 ;;_exp1	offset	0
   378 ;;_sign1	offset	1
   379 ;;_f1	offset=-4 (param)
   380 ;;_f1	offset=-4 (param)
   381 ;;_ff1	offset=-4 (param)
   382 ;;_ff2	offset=-8 (param)
   383 ;;_sign	offset	0
   384 ;;_counter	offset	1
   385 ;;_dividend	offset=-2 (param)
   386 ;;_divisor	offset=-4 (param)
   387 ;;_quotient	offset	0
   388 ;;_sign	offset	2
   389 ;;_counter	offset	3
   390 ;;_dividend	offset=-2 (param)
   391 ;;_divisor	offset=-4 (param)
   392 ;;_dtoa$5243	offset	0
   393 ;;_n	offset	2
   394 ;;_i	offset	10
   395 ;;_s	offset	12
   396 ;;_w	offset	14
   397 ;;_p	offset	16
   398 ;;_fp	offset=-2 (param)
   399 ;;_d	offset=-10 (param)
   400 ;;_a	offset=-2 (param)
   401 ;;_sign	offset	0
   402 ;;_counter	offset	1
   403 ;;_dividend	offset=-8 (param)
   404 ;;_divisor	offset=-16 (param)
   405 ;;_quotient	offset	0
   406 ;;_sign	offset	8
   407 ;;_counter	offset	9
   408 ;;_dividend	offset=-8 (param)
   409 ;;_divisor	offset=-16 (param)
   410 ;;_w	offset	0
   411 ;;_fp	offset=-2 (param)
   412 ;;_c	offset=-3 (param)
   413 ;;_w	offset	0
   414 ;;_i	offset	2
   415 ;;_fp	offset=-2 (param)
   416 ;;_buf	offset=-4 (param)
   417 ;;_p	offset=-6 (param)
   418 ;;_a	offset	0
   419 ;;_s	offset=-2 (param)
   420 ;;_i	offset	0
   421 ;;_c	offset	2
   422 ;;_s	offset=-2 (param)
   423 ;;_fp	offset=-4 (param)
   424 ;;_c	offset=-2 (param)
   425 ;;_fp	offset=-4 (param)
   426 ;;_c	offset=-1 (param)
   427 ;;__this	offset=-2 (param)
   428 ;;_c	offset=-3 (param)
   429 ;;_atoi$5827	offset	0
   430 ;;_atoi$5825	offset	2
   431 ;;_atoi$5826	offset	4
   432 ;;_n	offset	5
   433 ;;_neg	offset	7
   434 ;;_s	offset=-2 (param)
   435 ;;_isspace$5876	offset	0
   436 ;;_c	offset=-2 (param)
   437 ;;_c	offset=-2 (param)
   438 ;;_vterm	offset=-1 (param)
   439 ;;_new_response_info	offset=-1 (param)
   440 ;;_new_response_info	offset=-1 (param)
   441 ;;_level	offset=-2 (param)
   442 ;;_dutyValue	offset=-2 (param)
   443 ;;_timer	offset=-1 (param)
   444 ;;_timer	offset=-1 (param)
   445 ;;_count	offset=-3 (param)
   446 ;;_h	offset=-1 (param)
   447 ;;_u	offset	0
   448 ;;_x	offset=-4 (param)
   449 ;;_chan	offset=-1 (param)
   450 ;;_to_what	offset=-2 (param)
   451 ;;_u	offset	0
   452 ;;_s	offset=-2 (param)
   453 ;;_index	offset=-1 (param)
   454 ;;_arg	offset	0
   455 ;;_exp	offset	4
   456 ;;_sign	offset=-1 (param)
   457 ;;_val	offset=-5 (param)
   458 ;;_grs	offset	0
   459 ;;_rem	offset	4
   460 ;;_new_exp	offset	8
   461 ;;_aexp	offset	10
   462 ;;_bexp	offset	11
   463 ;;_sign	offset	12
   464 ;;_b	offset=-4 (param)
   465 ;;_a	offset=-8 (param)
   466 ;;_ff1	offset=-4 (param)
   467 ;;_ff2	offset=-8 (param)
   468 ;;_lp_speed	offset	0
   469 ;;_new	offset=-4 (param)
   470 ;;_bn	offset=-5 (param)
   471 ;;_slow	offset=-6 (param)
   472 ;;_b	offset=-4 (param)
   473 ;;_a	offset=-8 (param)
   474 ;;_grs	offset	0
   475 ;;_bexp	offset	1
   476 ;;_aexp	offset	2
   477 ;;_signs	offset	3
   478 ;;_b	offset=-4 (param)
   479 ;;_a	offset=-8 (param)
   480 ;;_prod	offset	0
   481 ;;_grs	offset	4
   482 ;;_temp	offset	8
   483 ;;_bexp	offset	10
   484 ;;_aexp	offset	11
   485 ;;_sign	offset	12
   486 ;;_b	offset=-4 (param)
   487 ;;_a	offset=-8 (param)
   488 ;;_InterruptHandler	offset=-3 (param)
   489 ;;_InterruptHandler	offset=-3 (param)
   490 ;;_InterruptHandler	offset=-3 (param)
   491 ;;_InterruptHandler	offset=-3 (param)
   492 ;;_InterruptHandler	offset=-3 (param)
   493 ;;_InterruptHandler	offset=-3 (param)
   494 ;;_state	offset	0
   495 ;;_InterruptHandler	offset=-3 (param)
   496 ;;_InterruptHandler	offset=-3 (param)
   497 ;;_InterruptHandler	offset=-3 (param)
   498 ;;_InterruptHandler	offset=-3 (param)
   499 ;;_i	offset	0
   500 ;;_sw_value	offset	1
   501 ;;_timerVal	offset=-2 (param)
   502 ;;_timerVal	offset=-2 (param)
   503 ;;_log_ptr	offset	0
   504 ;;_f	offset	0
   505 ;;_ap	offset	6
   506 ;;_s	offset=-3 (param)
   507 ;;_fmt	offset=-5 (param)
   508 ;;_cfmt	offset	0
   509 ;;_fp	offset=-2 (param)
   510 ;;_fmt	offset=-4 (param)
   511 ;;_ap	offset=-6 (param)
   512 ;;_vfpfcnvrt$5320	offset	0
   513 ;;_vfpfcnvrt$5331	offset	2
   514 ;;_vfpfcnvrt$5319	offset	4
   515 ;;_llu	offset	6
   516 ;;_ll	offset	14
   517 ;;_f	offset	22
   518 ;;_ct	offset	26
   519 ;;_cp	offset	29
   520 ;;_c	offset	31
   521 ;;_fp	offset=-2 (param)
   522 ;;_fmt	offset=-4 (param)
   523 ;;_ap	offset=-6 (param)
   524 ;;_xtoa$5305	offset	0
   525 ;;_xtoa$5304	offset	2
   526 ;;_n	offset	4
   527 ;;_c	offset	12
   528 ;;_i	offset	14
   529 ;;_w	offset	16
   530 ;;_p	offset	18
   531 ;;_fp	offset=-2 (param)
   532 ;;_d	offset=-10 (param)
   533 ;;_x	offset=-11 (param)
   534 ;;_toupper$6111	offset	0
   535 ;;_c	offset=-2 (param)
   536 ;;_c	offset=-2 (param)
   537 ;;_c	offset=-2 (param)
   538 ;;_n	offset	0
   539 ;;_i	offset	8
   540 ;;_w	offset	10
   541 ;;_p	offset	12
   542 ;;_fp	offset=-2 (param)
   543 ;;_d	offset=-10 (param)
   544 ;;_counter	offset	0
   545 ;;_dividend	offset=-8 (param)
   546 ;;_divisor	offset=-16 (param)
   547 ;;_quotient	offset	0
   548 ;;_counter	offset	8
   549 ;;_dividend	offset=-8 (param)
   550 ;;_divisor	offset=-16 (param)
   551 ;;_r	offset	0
   552 ;;_l	offset	2
   553 ;;__l	offset=-2 (param)
   554 ;;__r	offset=-4 (param)
   555 ;;_n	offset=-6 (param)
   556 ;;_nuls	offset	0
   557 ;;_l	offset	7
   558 ;;_p	offset	9
   559 ;;_cp	offset	11
   560 ;;_w	offset	13
   561 ;;_i	offset	15
   562 ;;_fp	offset=-2 (param)
   563 ;;_s	offset=-4 (param)
   564 ;;_efgtoa$5277	offset	0
   565 ;;_efgtoa$5276	offset	2
   566 ;;_efgtoa$5275	offset	4
   567 ;;_efgtoa$5271	offset	6
   568 ;;_efgtoa$5267	offset	8
   569 ;;_efgtoa$5266	offset	10
   570 ;;_u	offset	12
   571 ;;_g	offset	16
   572 ;;_l	offset	20
   573 ;;_h	offset	24
   574 ;;_ou	offset	28
   575 ;;_n	offset	32
   576 ;;_e	offset	34
   577 ;;_i	offset	36
   578 ;;_w	offset	38
   579 ;;_p	offset	40
   580 ;;_sign	offset	42
   581 ;;_d	offset	44
   582 ;;_ne	offset	46
   583 ;;_m	offset	48
   584 ;;_pp	offset	50
   585 ;;_t	offset	52
   586 ;;_mode	offset	54
   587 ;;_nmode	offset	55
   588 ;;_fp	offset=-2 (param)
   589 ;;_f	offset=-6 (param)
   590 ;;_c	offset=-7 (param)
   591 ;;_tolower$6096	offset	0
   592 ;;_c	offset=-2 (param)
   593 ;;_c	offset=-2 (param)
   594 ;;_d	offset	0
   595 ;;_s	offset	2
   596 ;;_dest	offset=-2 (param)
   597 ;;_src	offset=-4 (param)
   598 ;;_u	offset	0
   599 ;;_m	offset	4
   600 ;;_e	offset	8
   601 ;;_x	offset=-4 (param)
   602 ;;_u	offset	0
   603 ;;_e	offset	4
   604 ;;_x	offset=-4 (param)
   605 ;;_exp1	offset	0
   606 ;;_sign1	offset	1
   607 ;;_f1	offset=-4 (param)
   608 ;;_b	offset=-4 (param)
   609 ;;_a	offset=-8 (param)
   610 ;;_grs	offset	0
   611 ;;_bexp	offset	1
   612 ;;_aexp	offset	2
   613 ;;_signs	offset	3
   614 ;;_b	offset=-4 (param)
   615 ;;_a	offset=-8 (param)
   616 ;;_f1	offset=-4 (param)
   617 ;;_prod	offset	0
   618 ;;_grs	offset	4
   619 ;;_temp	offset	8
   620 ;;_bexp	offset	10
   621 ;;_aexp	offset	11
   622 ;;_sign	offset	12
   623 ;;_b	offset=-4 (param)
   624 ;;_a	offset=-8 (param)
   625 ;;_ff1	offset=-4 (param)
   626 ;;_ff2	offset=-8 (param)
   627 ;;_ff1	offset=-4 (param)
   628 ;;_ff2	offset=-8 (param)
   629 ;;_grs	offset	0
   630 ;;_rem	offset	4
   631 ;;_new_exp	offset	8
   632 ;;_aexp	offset	10
   633 ;;_bexp	offset	11
   634 ;;_sign	offset	12
   635 ;;_b	offset=-4 (param)
   636 ;;_a	offset=-8 (param)
   637 ;;_sign	offset	0
   638 ;;_counter	offset	1
   639 ;;_dividend	offset=-2 (param)
   640 ;;_divisor	offset=-4 (param)
   641 ;;_quotient	offset	0
   642 ;;_sign	offset	2
   643 ;;_counter	offset	3
   644 ;;_dividend	offset=-2 (param)
   645 ;;_divisor	offset=-4 (param)
   646 ;;_dtoa$5243	offset	0
   647 ;;_n	offset	2
   648 ;;_i	offset	10
   649 ;;_s	offset	12
   650 ;;_w	offset	14
   651 ;;_p	offset	16
   652 ;;_fp	offset=-2 (param)
   653 ;;_d	offset=-10 (param)
   654 ;;_a	offset=-2 (param)
   655 ;;_sign	offset	0
   656 ;;_counter	offset	1
   657 ;;_dividend	offset=-8 (param)
   658 ;;_divisor	offset=-16 (param)
   659 ;;_quotient	offset	0
   660 ;;_sign	offset	8
   661 ;;_counter	offset	9
   662 ;;_dividend	offset=-8 (param)
   663 ;;_divisor	offset=-16 (param)
   664 ;;_w	offset	0
   665 ;;_fp	offset=-2 (param)
   666 ;;_c	offset=-3 (param)
   667 ;;_w	offset	0
   668 ;;_i	offset	2
   669 ;;_fp	offset=-2 (param)
   670 ;;_buf	offset=-4 (param)
   671 ;;_p	offset=-6 (param)
   672 ;;_a	offset	0
   673 ;;_s	offset=-2 (param)
   674 ;;_i	offset	0
   675 ;;_c	offset	2
   676 ;;_s	offset=-2 (param)
   677 ;;_fp	offset=-4 (param)
   678 ;;_c	offset=-2 (param)
   679 ;;_fp	offset=-4 (param)
   680 ;;_c	offset=-1 (param)
   681 ;;__this	offset=-2 (param)
   682 ;;_c	offset=-3 (param)
   683 ;;_atoi$5827	offset	0
   684 ;;_atoi$5825	offset	2
   685 ;;_atoi$5826	offset	4
   686 ;;_n	offset	5
   687 ;;_neg	offset	7
   688 ;;_s	offset=-2 (param)
   689 ;;_isspace$5876	offset	0
   690 ;;_c	offset=-2 (param)
   691 ;;_c	offset=-2 (param)
   692 ;;_dsize	offset=-2 (param)
   693 ;;_timer	offset=-1 (param)
   694 ;;_count	offset=-3 (param)
   695 ;;_channel	offset=-1 (param)
   696 ;;_i	offset	0
   697                           
   698                           	psect	idataBIGRAM
   699  017238                     __pidataBIGRAM:
   700                           	opt callstack 0
   701                           
   702                           ;initializer for _port_data
   703  017238  FF                 	db	255
   704  017239  00                 	db	0
   705  01723A  FF                 	db	255
   706  01723B  00                 	db	0
   707  01723C  FF                 	db	255
   708  01723D  00                 	db	0
   709  01723E  FF                 	db	255
   710  01723F  00                 	db	0
   711  017240  FF                 	db	255
   712  017241  00                 	db	0
   713  017242  FF                 	db	255
   714  017243  00                 	db	0
   715  017244  FF                 	db	255
   716  017245  00                 	db	0
   717  017246  FF                 	db	255
   718  017247  00                 	db	0
   719  017248  00                 	db	0
   720  017249  00                 	db	0
   721  01724A  00                 	db	0
   722  01724B  00                 	db	0
   723  01724C  00                 	db	0
   724  01724D  00                 	db	0
   725  01724E  00                 	db	0
   726  01724F  00                 	db	0
   727  017250  00                 	db	0
   728  017251  00                 	db	0
   729  017252  00                 	db	0
   730  017253  00                 	db	0
   731  017254  00                 	db	0
   732  017255  00                 	db	0
   733  017256  00                 	db	0
   734  017257  00                 	db	0
   735  017258  00                 	db	0
   736  017259  00                 	db	0
   737  01725A  00                 	db	0
   738  01725B  00                 	db	0
   739  01725C  00                 	db	0
   740  01725D  00                 	db	0
   741  01725E  00                 	db	0
   742  01725F  00                 	db	0
   743  017260  00                 	db	0
   744  017261  00                 	db	0
   745  017262  00                 	db	0
   746  017263  00                 	db	0
   747  017264  00                 	db	0
   748  017265  00                 	db	0
   749  017266  00                 	db	0
   750  017267  00                 	db	0
   751  017268  00                 	db	0
   752  017269  00                 	db	0
   753  01726A  00                 	db	0
   754  01726B  00                 	db	0
   755  01726C  00                 	db	0
   756  01726D  00                 	db	0
   757  01726E  00                 	db	0
   758  01726F  00                 	db	0
   759  017270  00                 	db	0
   760  017271  00                 	db	0
   761  017272  00                 	db	0
   762  017273  00                 	db	0
   763  017274  00                 	db	0
   764  017275  00                 	db	0
   765  017276  00                 	db	0
   766  017277  00                 	db	0
   767  017278  00                 	db	0
   768  017279  00                 	db	0
   769  01727A  00                 	db	0
   770  01727B  00                 	db	0
   771  01727C  00                 	db	0
   772  01727D  00                 	db	0
   773  01727E  00                 	db	0
   774  01727F  00                 	db	0
   775  017280  00                 	db	0
   776  017281  00                 	db	0
   777  017282  00                 	db	0
   778  017283  00                 	db	0
   779  017284  00                 	db	0
   780  017285  00                 	db	0
   781  017286  00                 	db	0
   782  017287  00                 	db	0
   783  017288  00                 	db	0
   784  017289  00                 	db	0
   785  01728A  00                 	db	0
   786  01728B  00                 	db	0
   787  01728C  00                 	db	0
   788  01728D  00                 	db	0
   789  01728E  00                 	db	0
   790  01728F  00                 	db	0
   791  017290  00                 	db	0
   792  017291  00                 	db	0
   793  017292  00                 	db	0
   794  017293  00                 	db	0
   795  017294  00                 	db	0
   796  017295  00                 	db	0
   797  017296  00                 	db	0
   798  017297  00                 	db	0
   799  017298  00                 	db	0
   800  017299  00                 	db	0
   801  01729A  00                 	db	0
   802  01729B  00                 	db	0
   803  01729C  00                 	db	0
   804  01729D  00                 	db	0
   805  01729E  00                 	db	0
   806  01729F  00                 	db	0
   807  0172A0  00                 	db	0
   808  0172A1  00                 	db	0
   809  0172A2  00                 	db	0
   810  0172A3  00                 	db	0
   811  0172A4  00                 	db	0
   812  0172A5  00                 	db	0
   813  0172A6  00                 	db	0
   814  0172A7  00                 	db	0
   815  0172A8  00                 	db	0
   816  0172A9  00                 	db	0
   817  0172AA  00                 	db	0
   818  0172AB  00                 	db	0
   819  0172AC  00                 	db	0
   820  0172AD  00                 	db	0
   821  0172AE  00                 	db	0
   822  0172AF  00                 	db	0
   823  0172B0  00                 	db	0
   824  0172B1  00                 	db	0
   825  0172B2  00                 	db	0
   826  0172B3  00                 	db	0
   827  0172B4  00                 	db	0
   828  0172B5  00                 	db	0
   829  0172B6  00                 	db	0
   830  0172B7  00                 	db	0
   831  0172B8  00                 	db	0
   832  0172B9  00                 	db	0
   833  0172BA  00                 	db	0
   834  0172BB  00                 	db	0
   835  0172BC  00                 	db	0
   836  0172BD  00                 	db	0
   837  0172BE  00                 	db	0
   838  0172BF  00                 	db	0
   839  0172C0  00                 	db	0
   840  0172C1  00                 	db	0
   841  0172C2  00                 	db	0
   842  0172C3  00                 	db	0
   843  0172C4  00                 	db	0
   844  0172C5  00                 	db	0
   845  0172C6  00                 	db	0
   846  0172C7  00                 	db	0
   847  0172C8  00                 	db	0
   848  0172C9  00                 	db	0
   849  0172CA  00                 	db	0
   850  0172CB  00                 	db	0
   851  0172CC  00                 	db	0
   852  0172CD  00                 	db	0
   853  0172CE  00                 	db	0
   854  0172CF  00                 	db	0
   855  0172D0  00                 	db	0
   856  0172D1  00                 	db	0
   857  0172D2  00                 	db	0
   858  0172D3  00                 	db	0
   859  0172D4  00                 	db	0
   860  0172D5  00                 	db	0
   861  0172D6  00                 	db	0
   862  0172D7  00                 	db	0
   863  0172D8  00                 	db	0
   864  0172D9  00                 	db	0
   865  0172DA  00                 	db	0
   866  0172DB  00                 	db	0
   867  0172DC  00                 	db	0
   868  0172DD  00                 	db	0
   869  0172DE  00                 	db	0
   870  0172DF  00                 	db	0
   871  0172E0  00                 	db	0
   872  0172E1  00                 	db	0
   873  0172E2  00                 	db	0
   874  0172E3  00                 	db	0
   875  0172E4  00                 	db	0
   876  0172E5  00                 	db	0
   877  0172E6  00                 	db	0
   878  0172E7  00                 	db	0
   879  0172E8  00                 	db	0
   880  0172E9  00                 	db	0
   881  0172EA  00                 	db	0
   882  0172EB  00                 	db	0
   883  0172EC  00                 	db	0
   884  0172ED  00                 	db	0
   885  0172EE  00                 	db	0
   886  0172EF  00                 	db	0
   887  0172F0  00                 	db	0
   888  0172F1  00                 	db	0
   889  0172F2  00                 	db	0
   890  0172F3  00                 	db	0
   891  0172F4  00                 	db	0
   892  0172F5  00                 	db	0
   893  0172F6  00                 	db	0
   894  0172F7  00                 	db	0
   895  0172F8  00                 	db	0
   896  0172F9  00                 	db	0
   897  0172FA  00                 	db	0
   898  0172FB  00                 	db	0
   899  0172FC  00                 	db	0
   900  0172FD  00                 	db	0
   901  0172FE  00                 	db	0
   902  0172FF  00                 	db	0
   903  017300  00                 	db	0
   904  017301  00                 	db	0
   905  017302  00                 	db	0
   906  017303  00                 	db	0
   907  017304  00                 	db	0
   908  017305  00                 	db	0
   909  017306  00                 	db	0
   910  017307  00                 	db	0
   911  017308  00                 	db	0
   912  017309  00                 	db	0
   913  01730A  00                 	db	0
   914  01730B  00                 	db	0
   915  01730C  00                 	db	0
   916  01730D  00                 	db	0
   917  01730E  00                 	db	0
   918  01730F  00                 	db	0
   919  017310  00                 	db	0
   920  017311  00                 	db	0
   921  017312  00                 	db	0
   922  017313  00                 	db	0
   923  017314  00                 	db	0
   924  017315  00                 	db	0
   925  017316  00                 	db	0
   926  017317  00                 	db	0
   927  017318  00                 	db	0
   928  017319  00                 	db	0
   929  01731A  00                 	db	0
   930  01731B  00                 	db	0
   931  01731C  00                 	db	0
   932  01731D  00                 	db	0
   933  01731E  00                 	db	0
   934  01731F  00                 	db	0
   935  017320  00                 	db	0
   936  017321  00                 	db	0
   937  017322  00                 	db	0
   938  017323  00                 	db	0
   939  017324  00                 	db	0
   940  017325  00                 	db	0
   941  017326  00                 	db	0
   942  017327  00                 	db	0
   943  017328  00                 	db	0
   944  017329  00                 	db	0
   945  01732A  00                 	db	0
   946  01732B  00                 	db	0
   947  01732C  00                 	db	0
   948  01732D  00                 	db	0
   949  01732E  00                 	db	0
   950  01732F  00                 	db	0
   951  017330  00                 	db	0
   952  017331  00                 	db	0
   953  017332  00                 	db	0
   954  017333  00                 	db	0
   955  017334  00                 	db	0
   956  017335  00                 	db	0
   957  017336  00                 	db	0
   958  017337  00                 	db	0
   959  017338  00                 	db	0
   960  017339  00                 	db	0
   961  01733A  00                 	db	0
   962  01733B  00                 	db	0
   963  01733C  00                 	db	0
   964  01733D  00                 	db	0
   965  01733E  00                 	db	0
   966  01733F  00                 	db	0
   967  017340  00                 	db	0
   968  017341  00                 	db	0
   969  017342  00                 	db	0
   970  017343  00                 	db	0
   971  017344  00                 	db	0
   972  017345  00                 	db	0
   973  017346  00                 	db	0
   974  017347  00                 	db	0
   975  017348  00                 	db	0
   976  017349  00                 	db	0
   977  01734A  00                 	db	0
   978  01734B  00                 	db	0
   979  01734C  00                 	db	0
   980  01734D  00                 	db	0
   981  01734E  00                 	db	0
   982  01734F  00                 	db	0
   983  017350  00                 	db	0
   984  017351  00                 	db	0
   985  017352  00                 	db	0
   986  017353  00                 	db	0
   987  017354  00                 	db	0
   988  017355  00                 	db	0
   989  017356  00                 	db	0
   990  017357  00                 	db	0
   991  017358  00                 	db	0
   992  017359  00                 	db	0
   993  01735A  00                 	db	0
   994  01735B  00                 	db	0
   995  01735C  00                 	db	0
   996  01735D  00                 	db	0
   997  01735E  00                 	db	0
   998  01735F  00                 	db	0
   999  017360  00                 	db	0
  1000  017361  00                 	db	0
  1001  017362  00                 	db	0
  1002  017363  00                 	db	0
  1003  017364  00                 	db	0
  1004  017365  00                 	db	0
  1005  017366  00                 	db	0
  1006  017367  00                 	db	0
  1007  017368  00                 	db	0
  1008  017369  00                 	db	0
  1009  01736A  00                 	db	0
  1010  01736B  00                 	db	0
  1011  01736C  00                 	db	0
  1012  01736D  00                 	db	0
  1013  01736E  00                 	db	0
  1014  01736F  00                 	db	0
  1015  017370  00                 	db	0
  1016  017371  00                 	db	0
  1017  017372  00                 	db	0
  1018  017373  00                 	db	0
  1019  017374  00                 	db	0
  1020  017375  00                 	db	0
  1021  017376  00                 	db	0
  1022  017377  00                 	db	0
  1023  017378  00                 	db	0
  1024  017379  00                 	db	0
  1025  01737A  00                 	db	0
  1026  01737B  00                 	db	0
  1027  01737C  00                 	db	0
  1028  01737D  00                 	db	0
  1029  01737E  00                 	db	0
  1030  01737F  00                 	db	0
  1031  017380  00                 	db	0
  1032  017381  00                 	db	0
  1033  017382  00                 	db	0
  1034  017383  00                 	db	0
  1035  017384  00                 	db	0
  1036  017385  00                 	db	0
  1037  017386  00                 	db	0
  1038  017387  00                 	db	0
  1039  017388  00                 	db	0
  1040  017389  00                 	db	0
  1041  01738A  00                 	db	0
  1042  01738B  00                 	db	0
  1043  01738C  00                 	db	0
  1044  01738D  00                 	db	0
  1045  01738E  00                 	db	0
  1046  01738F  00                 	db	0
  1047  017390  00                 	db	0
  1048  017391  00                 	db	0
  1049  017392  00                 	db	0
  1050  017393  00                 	db	0
  1051  017394  00                 	db	0
  1052  017395  00                 	db	0
  1053  017396  00                 	db	0
  1054  017397  00                 	db	0
  1055  017398  00                 	db	0
  1056  017399  00                 	db	0
  1057  01739A  00                 	db	0
  1058  01739B  00                 	db	0
  1059  01739C  00                 	db	0
  1060  01739D  00                 	db	0
  1061  01739E  00                 	db	0
  1062  01739F  00                 	db	0
  1063  0173A0  00                 	db	0
  1064  0173A1  00                 	db	0
  1065  0173A2  00                 	db	0
  1066  0173A3  00                 	db	0
  1067  0173A4  00                 	db	0
  1068  0173A5  00                 	db	0
  1069  0173A6  00                 	db	0
  1070  0173A7  00                 	db	0
  1071  0173A8  00                 	db	0
  1072  0173A9  00                 	db	0
  1073  0173AA  00                 	db	0
  1074  0173AB  00                 	db	0
  1075  0173AC  00                 	db	0
  1076  0173AD  00                 	db	0
  1077  0173AE  00                 	db	0
  1078  0173AF  00                 	db	0
  1079  0173B0  00                 	db	0
  1080  0173B1  00                 	db	0
  1081  0173B2  00                 	db	0
  1082  0173B3  00                 	db	0
  1083  0173B4  00                 	db	0
  1084  0173B5  00                 	db	0
  1085  0173B6  00                 	db	0
  1086  0173B7  00                 	db	0
  1087  0173B8  00                 	db	0
  1088  0173B9  00                 	db	0
  1089  0173BA  00                 	db	0
  1090  0173BB  00                 	db	0
  1091  0173BC  00                 	db	0
  1092  0173BD  00                 	db	0
  1093  0173BE  00                 	db	0
  1094  0173BF  00                 	db	0
  1095  0173C0  00                 	db	0
  1096  0173C1  00                 	db	0
  1097  0173C2  00                 	db	0
  1098  0173C3  00                 	db	0
  1099  0173C4  00                 	db	0
  1100  0173C5  00                 	db	0
  1101  0173C6  00                 	db	0
  1102  0173C7  00                 	db	0
  1103  0173C8  00                 	db	0
  1104  0173C9  00                 	db	0
  1105  0173CA  00                 	db	0
  1106  0173CB  00                 	db	0
  1107  0173CC  00                 	db	0
  1108  0173CD  00                 	db	0
  1109  0173CE  00                 	db	0
  1110  0173CF  00                 	db	0
  1111  0173D0  00                 	db	0
  1112  0173D1  00                 	db	0
  1113  0173D2  00                 	db	0
  1114  0173D3  00                 	db	0
  1115  0173D4  00                 	db	0
  1116  0173D5  00                 	db	0
  1117  0173D6  00                 	db	0
  1118  0173D7  00                 	db	0
  1119  0173D8  00                 	db	0
  1120  0173D9  00                 	db	0
  1121  0173DA  00                 	db	0
  1122  0173DB  00                 	db	0
  1123  0173DC  00                 	db	0
  1124  0173DD  00                 	db	0
  1125  0173DE  00                 	db	0
  1126  0173DF  00                 	db	0
  1127  0173E0  00                 	db	0
  1128  0173E1  00                 	db	0
  1129  0173E2  00                 	db	0
  1130  0173E3  00                 	db	0
  1131  0173E4  00                 	db	0
  1132  0173E5  00                 	db	0
  1133  0173E6  00                 	db	0
  1134  0173E7  00                 	db	0
  1135  0173E8  00                 	db	0
  1136  0173E9  00                 	db	0
  1137  0173EA  00                 	db	0
  1138  0173EB  00                 	db	0
  1139  0173EC  00                 	db	0
  1140  0173ED  00                 	db	0
  1141  0173EE  00                 	db	0
  1142  0173EF  00                 	db	0
  1143  0173F0  00                 	db	0
  1144  0173F1  00                 	db	0
  1145  0173F2  00                 	db	0
  1146  0173F3  00                 	db	0
  1147  0173F4  00                 	db	0
  1148  0173F5  00                 	db	0
  1149  0173F6  00                 	db	0
  1150  0173F7  00                 	db	0
  1151  0173F8  00                 	db	0
  1152  0173F9  00                 	db	0
  1153  0173FA  00                 	db	0
  1154  0173FB  00                 	db	0
  1155  0173FC  00                 	db	0
  1156  0173FD  00                 	db	0
  1157  0173FE  00                 	db	0
  1158  0173FF  00                 	db	0
  1159  017400  00                 	db	0
  1160  017401  00                 	db	0
  1161  017402  00                 	db	0
  1162  017403  00                 	db	0
  1163  017404  00                 	db	0
  1164  017405  00                 	db	0
  1165  017406  00                 	db	0
  1166  017407  00                 	db	0
  1167  017408  00                 	db	0
  1168  017409  00                 	db	0
  1169  01740A  00                 	db	0
  1170  01740B  00                 	db	0
  1171  01740C  00                 	db	0
  1172  01740D  00                 	db	0
  1173  01740E  00                 	db	0
  1174  01740F  00                 	db	0
  1175  017410  00                 	db	0
  1176  017411  00                 	db	0
  1177  017412  00                 	db	0
  1178  017413  00                 	db	0
  1179  017414  00                 	db	0
  1180  017415  00                 	db	0
  1181  017416  00                 	db	0
  1182  017417  00                 	db	0
  1183  017418  00                 	db	0
  1184  017419  00                 	db	0
  1185  01741A  00                 	db	0
  1186  01741B  00                 	db	0
  1187  01741C  00                 	db	0
  1188  01741D  00                 	db	0
  1189  01741E  00                 	db	0
  1190  01741F  00                 	db	0
  1191  017420  00                 	db	0
  1192  017421  00                 	db	0
  1193  017422  00                 	db	0
  1194  017423  00                 	db	0
  1195  017424  00                 	db	0
  1196  017425  00                 	db	0
  1197  017426  00                 	db	0
  1198  017427  00                 	db	0
  1199  017428  00                 	db	0
  1200  017429  00                 	db	0
  1201  01742A  00                 	db	0
  1202  01742B  00                 	db	0
  1203  01742C  00                 	db	0
  1204  01742D  00                 	db	0
  1205  01742E  00                 	db	0
  1206  01742F  00                 	db	0
  1207  017430  00                 	db	0
  1208  017431  00                 	db	0
  1209  017432  00                 	db	0
  1210  017433  00                 	db	0
  1211  017434  00                 	db	0
  1212  017435  00                 	db	0
  1213  017436  00                 	db	0
  1214  017437  00                 	db	0
  1215                           
  1216                           	psect	idataBANK0
  1217  01A31A                     __pidataBANK0:
  1218                           	opt callstack 0
  1219                           
  1220                           ;initializer for _R
  1221  01A31A  0000               	dw	0
  1222  01A31C  0000               	dw	0
  1223  01A31E  0000               	dw	0
  1224  01A320  0000               	dw	0
  1225  01A322  0000               	dw	0
  1226  01A324  0000               	dw	0
  1227  01A326  0000               	dw	0
  1228  01A328  0000               	dw	0
  1229  01A32A  0000               	dw	0
  1230  01A32C  0000               	dw	0
  1231  01A32E  0000               	dw	0
  1232  01A330  0000               	dw	0
  1233  01A332  0000               	dw	0
  1234  01A334  0000               	dw	0
  1235  01A336  0000               	dw	0
  1236  01A338  0000               	dw	0
  1237  01A33A  0F67               	dw	3943
  1238  01A33C  0F8F               	dw	3983
  1239  01A33E  00                 	db	0
  1240  01A33F  0000               	dw	0
  1241  01A341  00                 	db	0
  1242                           
  1243                           ;initializer for stoa@F1166
  1244  01A342  28                 	db	40
  1245  01A343  6E                 	db	110
  1246  01A344  75                 	db	117
  1247  01A345  6C                 	db	108
  1248  01A346  6C                 	db	108
  1249  01A347  29                 	db	41
  1250  01A348  00                 	db	0
  1251                           
  1252                           ;initializer for _H
  1253  01A349  00                 	db	0
  1254  01A34A  00                 	db	0
  1255  01A34B  01                 	db	1
  1256  01A34C  00                 	db	0
  1257  01A34D  01                 	db	1
  1258  01A34E  00                 	db	0
  1259  01A34F  00                 	db	0
  1260                           
  1261                           	psect	idataBANK1
  1262  018C8C                     __pidataBANK1:
  1263                           	opt callstack 0
  1264                           
  1265                           ;initializer for _C
  1266  018C8C  0000               	dw	0
  1267  018C8E  0000               	dw	0
  1268  018C90  0000               	dw	0
  1269  018C92  0000               	dw	0
  1270  018C94  0000               	dw	0
  1271  018C96  0000               	dw	0
  1272  018C98  0000               	dw	0
  1273  018C9A  0000               	dw	0
  1274  018C9C  0000               	dw	0
  1275  018C9E  0000               	dw	0
  1276  018CA0  0000               	dw	0
  1277  018CA2  0000               	dw	0
  1278  018CA4  0000               	dw	0
  1279  018CA6  0000               	dw	0
  1280  018CA8  0000               	dw	0
  1281  018CAA  0000               	dw	0
  1282  018CAC  0000               	dw	0
  1283  018CAE  0000               	dw	0
  1284  018CB0  0000               	dw	0
  1285  018CB2  0000               	dw	0
  1286  018CB4  0000               	dw	0
  1287  018CB6  0000               	dw	0
  1288  018CB8  0000               	dw	0
  1289  018CBA  0000               	dw	0
  1290  018CBC  0000               	dw	0
  1291  018CBE  0000               	dw	0
  1292  018CC0  0000               	dw	0
  1293  018CC2  0000               	dw	0
  1294  018CC4  0000               	dw	0
  1295  018CC6  0000               	dw	0
  1296  018CC8  0000               	dw	0
  1297  018CCA  0000               	dw	0
  1298  018CCC  0000               	dw	0
  1299  018CCE  0000               	dw	0
  1300  018CD0  0000               	dw	0
  1301  018CD2  0000               	dw	0
  1302  018CD4  0000               	dw	0
  1303  018CD6  0000               	dw	0
  1304  018CD8  0000               	dw	0
  1305  018CDA  0000               	dw	0
  1306  018CDC  0000               	dw	0
  1307  018CDE  0000               	dw	0
  1308  018CE0  0000               	dw	0
  1309  018CE2  0000               	dw	0
  1310  018CE4  0000               	dw	0
  1311  018CE6  0000               	dw	0
  1312  018CE8  0000               	dw	0
  1313  018CEA  0000               	dw	0
  1314  018CEC  0000               	dw	0
  1315  018CEE  0000               	dw	0
  1316  018CF0  0000               	dw	0
  1317  018CF2  0000               	dw	0
  1318  018CF4  0000               	dw	0
  1319  018CF6  0000               	dw	0
  1320  018CF8  0000               	dw	0
  1321  018CFA  0000               	dw	0
  1322  018CFC  0000               	dw	0
  1323  018CFE  0000               	dw	0
  1324  018D00  0000               	dw	0
  1325  018D02  0000               	dw	0
  1326  018D04  0000               	dw	0
  1327  018D06  0000               	dw	0
  1328  018D08  0000               	dw	0
  1329  018D0A  0000               	dw	0
  1330  018D0C  0000               	dw	0
  1331  018D0E  0000               	dw	0
  1332  018D10  0000               	dw	0
  1333  018D12  0000               	dw	0
  1334  018D14  0000               	dw	0
  1335  018D16  42FA               	dw	17146
  1336  018D18  00                 	db	0
  1337  018D19  00                 	db	0
  1338  018D1A  00                 	db	0
  1339  018D1B  00                 	db	0
  1340  018D1C  00                 	db	0
  1341  018D1D  00                 	db	0
  1342  018D1E  00                 	db	0
  1343  018D1F  00                 	db	0
  1344  018D20  00                 	db	0
  1345  018D21  00                 	db	0
  1346  018D22  00                 	db	0
  1347  018D23  00                 	db	0
  1348  018D24  00                 	db	0
  1349  018D25  00                 	db	0
  1350  018D26  00                 	db	0
  1351  018D27  00                 	db	0
  1352  018D28  00                 	db	0
  1353  018D29  00                 	db	0
  1354  018D2A  00                 	db	0
  1355  018D2B  00                 	db	0
  1356  018D2C  00                 	db	0
  1357  018D2D  00                 	db	0
  1358  018D2E  00                 	db	0
  1359  018D2F  00                 	db	0
  1360  018D30  00                 	db	0
  1361  018D31  00                 	db	0
  1362  018D32  00                 	db	0
  1363  018D33  00                 	db	0
  1364  018D34  00                 	db	0
  1365  018D35  00                 	db	0
  1366  018D36  00                 	db	0
  1367  018D37  00                 	db	0
  1368  018D38  00                 	db	0
  1369  018D39  00                 	db	0
  1370  018D3A  00                 	db	0
  1371  018D3B  00                 	db	0
  1372  018D3C  00                 	db	0
  1373  018D3D  00                 	db	0
  1374  018D3E  00                 	db	0
  1375  018D3F  00                 	db	0
  1376  018D40  00                 	db	0
  1377  018D41  00                 	db	0
  1378  018D42  00                 	db	0
  1379  018D43  00                 	db	0
  1380  018D44  00                 	db	0
  1381  018D45  00                 	db	0
  1382  018D46  00                 	db	0
  1383  018D47  00                 	db	0
  1384  018D48  00                 	db	0
  1385  018D49  00                 	db	0
  1386  018D4A  00                 	db	0
  1387  018D4B  00                 	db	0
  1388  018D4C  00                 	db	0
  1389  018D4D  00                 	db	0
  1390  018D4E  00                 	db	0
  1391  018D4F  00                 	db	0
  1392  018D50  00                 	db	0
  1393  018D51  00                 	db	0
  1394  018D52  00                 	db	0
  1395  018D53  00                 	db	0
  1396  018D54  00                 	db	0
  1397  018D55  00                 	db	0
  1398  018D56  00                 	db	0
  1399  018D57  00                 	db	0
  1400  018D58  00                 	db	0
  1401  018D59  00                 	db	0
  1402  018D5A  00                 	db	0
  1403  018D5B  00                 	db	0
  1404  018D5C  00                 	db	0
  1405  018D5D  00                 	db	0
  1406  018D5E  00                 	db	0
  1407  018D5F  00                 	db	0
  1408  018D60  00                 	db	0
  1409  018D61  00                 	db	0
  1410  018D62  00                 	db	0
  1411  018D63  00                 	db	0
  1412  018D64  00                 	db	0
  1413  018D65  00                 	db	0
  1414  018D66  00                 	db	0
  1415  018D67  00                 	db	0
  1416  018D68  00                 	db	0
  1417  018D69  00                 	db	0
  1418  018D6A  00                 	db	0
  1419  018D6B  00                 	db	0
  1420  018D6C  00                 	db	0
  1421  018D6D  00                 	db	0
  1422  018D6E  00                 	db	0
  1423  018D6F  00                 	db	0
  1424  018D70  00                 	db	0
  1425  018D71  00                 	db	0
  1426  018D72  00                 	db	0
  1427  018D73  00                 	db	0
  1428  018D74  00                 	db	0
  1429  018D75  00                 	db	0
  1430  018D76  00                 	db	0
  1431  018D77  00                 	db	0
  1432  018D78  00                 	db	0
  1433  018D79  00                 	db	0
  1434  018D7A  00                 	db	0
  1435  018D7B  00                 	db	0
  1436  018D7C  00                 	db	0
  1437  018D7D  00                 	db	0
  1438  018D7E  00                 	db	0
  1439                           
  1440                           	psect	idataBANK2
  1441  019002                     __pidataBANK2:
  1442                           	opt callstack 0
  1443                           
  1444                           ;initializer for _V
  1445  019002  00                 	db	0
  1446  019003  00                 	db	0
  1447  019004  00                 	db	0
  1448  019005  00                 	db	0
  1449  019006  00                 	db	0
  1450  019007  00                 	db	0
  1451  019008  00                 	db	0
  1452  019009  00                 	db	0
  1453  01900A  00                 	db	0
  1454  01900B  00                 	db	0
  1455  01900C  00                 	db	0
  1456  01900D  00                 	db	0
  1457  01900E  00                 	db	0
  1458  01900F  00                 	db	0
  1459  019010  00                 	db	0
  1460  019011  00                 	db	0
  1461  019012  00                 	db	0
  1462  019013  00                 	db	0
  1463  019014  00                 	db	0
  1464  019015  00                 	db	0
  1465  019016  00                 	db	0
  1466  019017  00                 	db	0
  1467  019018  00                 	db	0
  1468  019019  00                 	db	0
  1469  01901A  00                 	db	0
  1470  01901B  00                 	db	0
  1471  01901C  00                 	db	0
  1472  01901D  00                 	db	0
  1473  01901E  00                 	db	0
  1474  01901F  00                 	db	0
  1475  019020  00                 	db	0
  1476  019021  00                 	db	0
  1477  019022  00                 	db	0
  1478  019023  00                 	db	0
  1479  019024  00                 	db	0
  1480  019025  00                 	db	0
  1481  019026  00                 	db	0
  1482  019027  00                 	db	0
  1483  019028  00                 	db	0
  1484  019029  00                 	db	0
  1485  01902A  00                 	db	0
  1486  01902B  00                 	db	0
  1487  01902C  00                 	db	0
  1488  01902D  00                 	db	0
  1489  01902E  00                 	db	0
  1490  01902F  00                 	db	0
  1491  019030  00                 	db	0
  1492  019031  00                 	db	0
  1493  019032  00                 	db	0
  1494  019033  00                 	db	0
  1495  019034  00                 	db	0
  1496  019035  00                 	db	0
  1497  019036  00                 	db	0
  1498  019037  00                 	db	0
  1499  019038  00                 	db	0
  1500  019039  00                 	db	0
  1501  01903A  00                 	db	0
  1502  01903B  00                 	db	0
  1503  01903C  00                 	db	0
  1504  01903D  00                 	db	0
  1505  01903E  00                 	db	0
  1506  01903F  00                 	db	0
  1507  019040  00                 	db	0
  1508  019041  00                 	db	0
  1509  019042  00                 	db	0
  1510  019043  00                 	db	0
  1511  019044  00                 	db	0
  1512  019045  00                 	db	0
  1513  019046  00                 	db	0
  1514  019047  00                 	db	0
  1515  019048  00                 	db	0
  1516  019049  00                 	db	0
  1517  01904A  00                 	db	0
  1518  01904B  00                 	db	0
  1519  01904C  00                 	db	0
  1520  01904D  00                 	db	0
  1521  01904E  00                 	db	0
  1522  01904F  00                 	db	0
  1523  019050  00                 	db	0
  1524  019051  00                 	db	0
  1525  019052  00                 	db	0
  1526  019053  00                 	db	0
  1527  019054  00                 	db	0
  1528  019055  00                 	db	0
  1529  019056  00                 	db	0
  1530  019057  00                 	db	0
  1531  019058  00                 	db	0
  1532  019059  00                 	db	0
  1533  01905A  00                 	db	0
  1534  01905B  00                 	db	0
  1535  01905C  00                 	db	0
  1536  01905D  00                 	db	0
  1537  01905E  00                 	db	0
  1538  01905F  00                 	db	0
  1539  019060  00                 	db	0
  1540  019061  00                 	db	0
  1541  019062  00                 	db	0
  1542  019063  00                 	db	0
  1543  019064  00                 	db	0
  1544  019065  00                 	db	0
  1545  019066  00                 	db	0
  1546  019067  00                 	db	0
  1547  019068  00                 	db	0
  1548  019069  00                 	db	0
  1549  01906A  00                 	db	0
  1550  01906B  00                 	db	0
  1551  01906C  00                 	db	0
  1552  01906D  00                 	db	0
  1553  01906E  00                 	db	0
  1554  01906F  00                 	db	0
  1555  019070  00                 	db	0
  1556  019071  00                 	db	0
  1557  019072  00                 	db	0
  1558  019073  00                 	db	0
  1559  019074  00                 	db	0
  1560  019075  00                 	db	0
  1561  019076  00                 	db	0
  1562  019077  00                 	db	0
  1563  019078  00                 	db	0
  1564  019079  00                 	db	0
  1565  01907A  00                 	db	0
  1566  01907B  00                 	db	0
  1567  01907C  00                 	db	0
  1568  01907D  00                 	db	0
  1569  01907E  00                 	db	0
  1570  01907F  00                 	db	0
  1571  019080  00                 	db	0
  1572  019081  00                 	db	0
  1573  019082  00                 	db	0
  1574  019083  0000               	dw	0
  1575  019085  0000               	dw	0
  1576  019087  0000               	dw	0
  1577  019089  0000               	dw	0
  1578  01908B  00                 	db	0
  1579  01908C  00                 	db	0
  1580  01908D  00                 	db	0
  1581  01908E  00                 	db	0
  1582  01908F  00                 	db	0
  1583  019090  00                 	db	0
  1584  019091  0000               	dw	0
  1585  019093  0000               	dw	0
  1586  019095  0000               	dw	0
  1587  019097  0000               	dw	0
  1588  019099  0000               	dw	0
  1589  01909B  0000               	dw	0
  1590  01909D  00                 	db	0
  1591  01909E  00                 	db	0
  1592  01909F  00                 	db	0
  1593  0190A0  00                 	db	0
  1594  0190A1  00                 	db	0
  1595  0190A2  00                 	db	0
  1596  0190A3  00                 	db	0
  1597  0190A4  00                 	db	0
  1598  0190A5  00                 	db	0
  1599  0190A6  00                 	db	0
  1600  0190A7  0000               	dw	0
  1601  0190A9  0000               	dw	0
  1602  0190AB  2D                 	db	45
  1603  0190AC  00                 	db	0
  1604  0190AD  00                 	db	0
  1605  0190AE  0000               	dw	0
  1606  0190B0  0000               	dw	0
  1607  0190B2  0000               	dw	0
  1608  0190B4  0000               	dw	0
  1609  0190B6  0000               	dw	0
  1610  0190B8  0000               	dw	0
  1611  0190BA  0000               	dw	0
  1612  0190BC  0000               	dw	0
  1613                           
  1614                           	psect	mediumconst
  1615  00FC4E                     __pmediumconst:
  1616                           	opt callstack 0
  1617  00FC4E  00                 	db	0
  1618  00FC4F                     _BVSOC_TABLE:
  1619                           	opt callstack 0
  1620  00FC4F  59D8               	dw	23000
  1621  00FC51  0000               	dw	0
  1622  00FC53  0005               	dw	5
  1623  00FC55  0000               	dw	0
  1624  00FC57  5B68               	dw	23400
  1625  00FC59  0000               	dw	0
  1626  00FC5B  000A               	dw	10
  1627  00FC5D  0000               	dw	0
  1628  00FC5F  5C30               	dw	23600
  1629  00FC61  0000               	dw	0
  1630  00FC63  0014               	dw	20
  1631  00FC65  0000               	dw	0
  1632  00FC67  5E38               	dw	24120
  1633  00FC69  0000               	dw	0
  1634  00FC6B  0019               	dw	25
  1635  00FC6D  0000               	dw	0
  1636  00FC6F  5E88               	dw	24200
  1637  00FC71  0000               	dw	0
  1638  00FC73  001E               	dw	30
  1639  00FC75  0000               	dw	0
  1640  00FC77  5F78               	dw	24440
  1641  00FC79  0000               	dw	0
  1642  00FC7B  0028               	dw	40
  1643  00FC7D  0000               	dw	0
  1644  00FC7F  5FDC               	dw	24540
  1645  00FC81  0000               	dw	0
  1646  00FC83  002D               	dw	45
  1647  00FC85  0000               	dw	0
  1648  00FC87  6018               	dw	24600
  1649  00FC89  0000               	dw	0
  1650  00FC8B  0032               	dw	50
  1651  00FC8D  0000               	dw	0
  1652  00FC8F  6046               	dw	24646
  1653  00FC91  0000               	dw	0
  1654  00FC93  0035               	dw	53
  1655  00FC95  0000               	dw	0
  1656  00FC97  607C               	dw	24700
  1657  00FC99  0000               	dw	0
  1658  00FC9B  0037               	dw	55
  1659  00FC9D  0000               	dw	0
  1660  00FC9F  60AE               	dw	24750
  1661  00FCA1  0000               	dw	0
  1662  00FCA3  0039               	dw	57
  1663  00FCA5  0000               	dw	0
  1664  00FCA7  60E0               	dw	24800
  1665  00FCA9  0000               	dw	0
  1666  00FCAB  003C               	dw	60
  1667  00FCAD  0000               	dw	0
  1668  00FCAF  6112               	dw	24850
  1669  00FCB1  0000               	dw	0
  1670  00FCB3  003F               	dw	63
  1671  00FCB5  0000               	dw	0
  1672  00FCB7  6176               	dw	24950
  1673  00FCB9  0000               	dw	0
  1674  00FCBB  0043               	dw	67
  1675  00FCBD  0000               	dw	0
  1676  00FCBF  61A8               	dw	25000
  1677  00FCC1  0000               	dw	0
  1678  00FCC3  0046               	dw	70
  1679  00FCC5  0000               	dw	0
  1680  00FCC7  61BC               	dw	25020
  1681  00FCC9  0000               	dw	0
  1682  00FCCB  0048               	dw	72
  1683  00FCCD  0000               	dw	0
  1684  00FCCF  61D0               	dw	25040
  1685  00FCD1  0000               	dw	0
  1686  00FCD3  004B               	dw	75
  1687  00FCD5  0000               	dw	0
  1688  00FCD7  61DA               	dw	25050
  1689  00FCD9  0000               	dw	0
  1690  00FCDB  0050               	dw	80
  1691  00FCDD  0000               	dw	0
  1692  00FCDF  61E4               	dw	25060
  1693  00FCE1  0000               	dw	0
  1694  00FCE3  0055               	dw	85
  1695  00FCE5  0000               	dw	0
  1696  00FCE7  61F8               	dw	25080
  1697  00FCE9  0000               	dw	0
  1698  00FCEB  005A               	dw	90
  1699  00FCED  0000               	dw	0
  1700  00FCEF  6208               	dw	25096
  1701  00FCF1  0000               	dw	0
  1702  00FCF3  005C               	dw	92
  1703  00FCF5  0000               	dw	0
  1704  00FCF7  6222               	dw	25122
  1705  00FCF9  0000               	dw	0
  1706  00FCFB  005D               	dw	93
  1707  00FCFD  0000               	dw	0
  1708  00FCFF  6234               	dw	25140
  1709  00FD01  0000               	dw	0
  1710  00FD03  005F               	dw	95
  1711  00FD05  0000               	dw	0
  1712  00FD07  6248               	dw	25160
  1713  00FD09  0000               	dw	0
  1714  00FD0B  0061               	dw	97
  1715  00FD0D  0000               	dw	0
  1716  00FD0F  625C               	dw	25180
  1717  00FD11  0000               	dw	0
  1718  00FD13  0064               	dw	100
  1719  00FD15  0000               	dw	0
  1720  00FD17  6658               	dw	26200
  1721  00FD19  0000               	dw	0
  1722  00FD1B  005A               	dw	90
  1723  00FD1D  0000               	dw	0
  1724  00FD1F                     __end_of_BVSOC_TABLE:
  1725                           	opt callstack 0
  1726  00FD1F                     _T:
  1727                           	opt callstack 0
  1728  00FD1F  63                 	db	99
  1729  00FD20  6F                 	db	111
  1730  00FD21  6D                 	db	109
  1731  00FD22  6D                 	db	109
  1732  00FD23  61                 	db	97
  1733  00FD24  6E                 	db	110
  1734  00FD25  64                 	db	100
  1735  00FD26  73                 	db	115
  1736  00FD27  20                 	db	32
  1737  00FD28  31                 	db	49
  1738  00FD29  00                 	db	0
  1739  00FD2A  00                 	db	0
  1740  00FD2B  00                 	db	0
  1741  00FD2C  00                 	db	0
  1742  00FD2D  00                 	db	0
  1743  00FD2E  00                 	db	0
  1744  00FD2F  00                 	db	0
  1745  00FD30  00                 	db	0
  1746  00FD31  64                 	db	100
  1747  00FD32  69                 	db	105
  1748  00FD33  73                 	db	115
  1749  00FD34  70                 	db	112
  1750  00FD35  6C                 	db	108
  1751  00FD36  61                 	db	97
  1752  00FD37  79                 	db	121
  1753  00FD38  73                 	db	115
  1754  00FD39  20                 	db	32
  1755  00FD3A  31                 	db	49
  1756  00FD3B  00                 	db	0
  1757  00FD3C  00                 	db	0
  1758  00FD3D  00                 	db	0
  1759  00FD3E  00                 	db	0
  1760  00FD3F  00                 	db	0
  1761  00FD40  00                 	db	0
  1762  00FD41  00                 	db	0
  1763  00FD42  00                 	db	0
  1764  00FD43  63                 	db	99
  1765  00FD44  6F                 	db	111
  1766  00FD45  6D                 	db	109
  1767  00FD46  6D                 	db	109
  1768  00FD47  61                 	db	97
  1769  00FD48  6E                 	db	110
  1770  00FD49  64                 	db	100
  1771  00FD4A  73                 	db	115
  1772  00FD4B  20                 	db	32
  1773  00FD4C  32                 	db	50
  1774  00FD4D  00                 	db	0
  1775  00FD4E  00                 	db	0
  1776  00FD4F  00                 	db	0
  1777  00FD50  00                 	db	0
  1778  00FD51  00                 	db	0
  1779  00FD52  00                 	db	0
  1780  00FD53  00                 	db	0
  1781  00FD54  00                 	db	0
  1782  00FD55  64                 	db	100
  1783  00FD56  69                 	db	105
  1784  00FD57  73                 	db	115
  1785  00FD58  70                 	db	112
  1786  00FD59  6C                 	db	108
  1787  00FD5A  61                 	db	97
  1788  00FD5B  79                 	db	121
  1789  00FD5C  73                 	db	115
  1790  00FD5D  20                 	db	32
  1791  00FD5E  32                 	db	50
  1792  00FD5F  00                 	db	0
  1793  00FD60  00                 	db	0
  1794  00FD61  00                 	db	0
  1795  00FD62  00                 	db	0
  1796  00FD63  00                 	db	0
  1797  00FD64  00                 	db	0
  1798  00FD65  00                 	db	0
  1799  00FD66  00                 	db	0
  1800  00FD67  63                 	db	99
  1801  00FD68  6F                 	db	111
  1802  00FD69  6D                 	db	109
  1803  00FD6A  6D                 	db	109
  1804  00FD6B  61                 	db	97
  1805  00FD6C  6E                 	db	110
  1806  00FD6D  64                 	db	100
  1807  00FD6E  73                 	db	115
  1808  00FD6F  20                 	db	32
  1809  00FD70  33                 	db	51
  1810  00FD71  00                 	db	0
  1811  00FD72  00                 	db	0
  1812  00FD73  00                 	db	0
  1813  00FD74  00                 	db	0
  1814  00FD75  00                 	db	0
  1815  00FD76  00                 	db	0
  1816  00FD77  00                 	db	0
  1817  00FD78  00                 	db	0
  1818  00FD79  64                 	db	100
  1819  00FD7A  69                 	db	105
  1820  00FD7B  73                 	db	115
  1821  00FD7C  70                 	db	112
  1822  00FD7D  6C                 	db	108
  1823  00FD7E  61                 	db	97
  1824  00FD7F  79                 	db	121
  1825  00FD80  73                 	db	115
  1826  00FD81  20                 	db	32
  1827  00FD82  33                 	db	51
  1828  00FD83  00                 	db	0
  1829  00FD84  00                 	db	0
  1830  00FD85  00                 	db	0
  1831  00FD86  00                 	db	0
  1832  00FD87  00                 	db	0
  1833  00FD88  00                 	db	0
  1834  00FD89  00                 	db	0
  1835  00FD8A  00                 	db	0
  1836  00FD8B  63                 	db	99
  1837  00FD8C  6F                 	db	111
  1838  00FD8D  6D                 	db	109
  1839  00FD8E  6D                 	db	109
  1840  00FD8F  61                 	db	97
  1841  00FD90  6E                 	db	110
  1842  00FD91  64                 	db	100
  1843  00FD92  73                 	db	115
  1844  00FD93  20                 	db	32
  1845  00FD94  34                 	db	52
  1846  00FD95  00                 	db	0
  1847  00FD96  00                 	db	0
  1848  00FD97  00                 	db	0
  1849  00FD98  00                 	db	0
  1850  00FD99  00                 	db	0
  1851  00FD9A  00                 	db	0
  1852  00FD9B  00                 	db	0
  1853  00FD9C  00                 	db	0
  1854  00FD9D  64                 	db	100
  1855  00FD9E  69                 	db	105
  1856  00FD9F  73                 	db	115
  1857  00FDA0  70                 	db	112
  1858  00FDA1  6C                 	db	108
  1859  00FDA2  61                 	db	97
  1860  00FDA3  79                 	db	121
  1861  00FDA4  73                 	db	115
  1862  00FDA5  20                 	db	32
  1863  00FDA6  34                 	db	52
  1864  00FDA7  00                 	db	0
  1865  00FDA8  00                 	db	0
  1866  00FDA9  00                 	db	0
  1867  00FDAA  00                 	db	0
  1868  00FDAB  00                 	db	0
  1869  00FDAC  00                 	db	0
  1870  00FDAD  00                 	db	0
  1871  00FDAE  00                 	db	0
  1872  00FDAF                     __end_of_T:
  1873                           	opt callstack 0
  1874  00FDAF  0000               	dw	0
  1875  00FDB1  3F80               	dw	16256
  1876  00FDB3  0000               	dw	0
  1877  00FDB5  3FC0               	dw	16320
  1878  00FDB7                     __end_of_bp:
  1879                           	opt callstack 0
  1880  00FDB7  AA00               	dw	43520
  1881  00FDB9  3FB8               	dw	16312
  1882  00FDBB                     __end_of_ivln2_h:
  1883                           	opt callstack 0
  1884  00FDBB  23C6               	dw	9158
  1885  00FDBD  B8F6               	dw	47350
  1886  00FDBF                     __end_of_cp_l:
  1887                           	opt callstack 0
  1888  00FDBF  4000               	dw	16384
  1889  00FDC1  3F76               	dw	16246
  1890  00FDC3                     __end_of_cp_h:
  1891                           	opt callstack 0
  1892  0000                     _IVTADL	set	14493
  1893  0000                     _IVTADH	set	14494
  1894  0000                     _IVTADU	set	14495
  1895  0000                     _PIR6bits	set	14758
  1896  0000                     _PIR4bits	set	14756
  1897  0000                     _PIE8bits	set	14744
  1898  0000                     _PIR8bits	set	14760
  1899  0000                     _SCANPR	set	14839
  1900  0000                     _DMA2PR	set	14836
  1901  0000                     _DMA1PR	set	14835
  1902  0000                     _MAINPR	set	14834
  1903  0000                     _ISRPR	set	14833
  1904  0000                     _PIE2bits	set	14738
  1905  0000                     _PIR2bits	set	14754
  1906  0000                     _PIE9bits	set	14745
  1907  0000                     _PIR9bits	set	14761
  1908  0000                     _PIE6bits	set	14742
  1909  0000                     _PIE3bits	set	14739
  1910  0000                     _PMD7	set	14791
  1911  0000                     _PMD6	set	14790
  1912  0000                     _PMD5	set	14789
  1913  0000                     _PMD4	set	14788
  1914  0000                     _PMD3	set	14787
  1915  0000                     _PMD2	set	14786
  1916  0000                     _PMD1	set	14785
  1917  0000                     _PMD0	set	14784
  1918  0000                     _OSCTUNE	set	14814
  1919  0000                     _OSCFRQ	set	14815
  1920  0000                     _OSCEN	set	14813
  1921  0000                     _OSCCON3	set	14811
  1922  0000                     _OSCCON1	set	14809
  1923  0000                     _IPR8bits	set	14728
  1924  0000                     _IPR9bits	set	14729
  1925  0000                     _IPR5bits	set	14725
  1926  0000                     _IPR1bits	set	14721
  1927  0000                     _IPR3bits	set	14723
  1928  0000                     _IPR6bits	set	14726
  1929  0000                     _IPR2bits	set	14722
  1930  0000                     _PIE5bits	set	14741
  1931  0000                     _PIE1bits	set	14737
  1932  0000                     _PIR5bits	set	14757
  1933  0000                     _PIR1bits	set	14753
  1934  0000                     _PLLR	set	118496
  1935  0000                     _SPI1SDIPPS	set	15071
  1936  0000                     _U1RXPPS	set	15077
  1937  0000                     _RC6PPS	set	14870
  1938  0000                     _RC5PPS	set	14869
  1939  0000                     _INT1PPS	set	15041
  1940  0000                     _RD1PPS	set	14873
  1941  0000                     _INT0PPS	set	15040
  1942  0000                     _RC3PPS	set	14867
  1943  0000                     _RB6PPS	set	14862
  1944  0000                     _SPI1SCKPPS	set	15070
  1945  0000                     _U2RXPPS	set	15080
  1946  0000                     _SLRCONF	set	14995
  1947  0000                     _SLRCONE	set	14979
  1948  0000                     _SLRCOND	set	14963
  1949  0000                     _SLRCONC	set	14947
  1950  0000                     _SLRCONB	set	14931
  1951  0000                     _SLRCONA	set	14915
  1952  0000                     _ODCOND	set	14962
  1953  0000                     _ODCONC	set	14946
  1954  0000                     _ODCONB	set	14930
  1955  0000                     _ODCONA	set	14914
  1956  0000                     _ODCONF	set	14994
  1957  0000                     _ODCONE	set	14978
  1958  0000                     _WPUC	set	14945
  1959  0000                     _WPUA	set	14913
  1960  0000                     _WPUB	set	14929
  1961  0000                     _WPUE	set	14977
  1962  0000                     _WPUF	set	14993
  1963  0000                     _WPUD	set	14961
  1964  0000                     _ANSELA	set	14912
  1965  0000                     _ANSELF	set	14992
  1966  0000                     _ANSELE	set	14976
  1967  0000                     _ANSELB	set	14928
  1968  0000                     _ANSELC	set	14944
  1969  0000                     _ANSELD	set	14960
  1970  0000                     _DMA2SSA	set	15321
  1971  0000                     _DMA1SSA	set	15353
  1972  0000                     _DMA2DSZ	set	15310
  1973  0000                     _DMA2SSZ	set	15319
  1974  0000                     _DMA2DSA	set	15312
  1975  0000                     _DMA1DSZ	set	15342
  1976  0000                     _DMA1SSZ	set	15351
  1977  0000                     _DMA1DSA	set	15344
  1978  0000                     _DMA2CON0bits	set	15324
  1979  0000                     _DMA2CON1bits	set	15325
  1980  0000                     _DMA1CON0bits	set	15356
  1981  0000                     _DMA1CON1bits	set	15357
  1982  0000                     _DMA2CON0	set	15324
  1983  0000                     _DMA2AIRQ	set	15326
  1984  0000                     _DMA2SIRQ	set	15327
  1985  0000                     _DMA2CON1	set	15325
  1986  0000                     _DMA1CON0	set	15356
  1987  0000                     _DMA1AIRQ	set	15358
  1988  0000                     _DMA1SIRQ	set	15359
  1989  0000                     _DMA1CON1	set	15357
  1990  0000                     _CLKRCON	set	15589
  1991  0000                     _CLKRCLK	set	15590
  1992  0000                     _SPI1INTFbits	set	15642
  1993  0000                     _SPI1RXB	set	15632
  1994  0000                     _SPI1TXB	set	15633
  1995  0000                     _SPI1TCNTL	set	15634
  1996  0000                     _SPI1CON0	set	15636
  1997  0000                     _SPI1CLK	set	15644
  1998  0000                     _SPI1BAUD	set	15641
  1999  0000                     _SPI1CON2	set	15638
  2000  0000                     _SPI1CON1	set	15637
  2001  0000                     _U2RXB	set	15824
  2002  0000                     _U2TXB	set	15826
  2003  0000                     _U2ERRIE	set	15842
  2004  0000                     _U2ERRIR	set	15841
  2005  0000                     _U2UIR	set	15840
  2006  0000                     _U2FIFO	set	15839
  2007  0000                     _U2BRGH	set	15838
  2008  0000                     _U2BRGL	set	15837
  2009  0000                     _U2CON2	set	15836
  2010  0000                     _U2CON1	set	15835
  2011  0000                     _U2CON0	set	15834
  2012  0000                     _U2P3L	set	15832
  2013  0000                     _U2P2L	set	15830
  2014  0000                     _U2P1L	set	15828
  2015  0000                     _U1RXB	set	15848
  2016  0000                     _U1ERRIE	set	15866
  2017  0000                     _U1ERRIR	set	15865
  2018  0000                     _U1UIR	set	15864
  2019  0000                     _U1FIFO	set	15863
  2020  0000                     _U1BRGH	set	15862
  2021  0000                     _U1BRGL	set	15861
  2022  0000                     _U1CON2	set	15860
  2023  0000                     _U1CON1	set	15859
  2024  0000                     _U1CON0	set	15858
  2025  0000                     _U1P3H	set	15857
  2026  0000                     _U1P3L	set	15856
  2027  0000                     _U1P2H	set	15855
  2028  0000                     _U1P2L	set	15854
  2029  0000                     _U1P1H	set	15853
  2030  0000                     _U1P1L	set	15852
  2031  0000                     _FVRCON	set	16065
  2032  0000                     _ADFLTRL	set	16102
  2033  0000                     _ADFLTRH	set	16103
  2034  0000                     _ADCON0bits	set	16120
  2035  0000                     _ADCON0	set	16120
  2036  0000                     _ADCLK	set	16127
  2037  0000                     _ADACT	set	16126
  2038  0000                     _ADREF	set	16125
  2039  0000                     _ADSTAT	set	16124
  2040  0000                     _ADCON3	set	16123
  2041  0000                     _ADCON2	set	16122
  2042  0000                     _ADCON1	set	16121
  2043  0000                     _ADPREH	set	16119
  2044  0000                     _ADPREL	set	16118
  2045  0000                     _ADCAP	set	16117
  2046  0000                     _ADACQH	set	16116
  2047  0000                     _ADACQL	set	16115
  2048  0000                     _ADPCH	set	16113
  2049  0000                     _ADRPT	set	16108
  2050  0000                     _ADACCU	set	16106
  2051  0000                     _ADSTPTH	set	16101
  2052  0000                     _ADSTPTL	set	16100
  2053  0000                     _ADUTHH	set	16097
  2054  0000                     _ADUTHL	set	16096
  2055  0000                     _ADLTHH	set	16095
  2056  0000                     _ADLTHL	set	16094
  2057  0000                     _CCPTMRS1bits	set	16223
  2058  0000                     _PORTFbits	set	16335
  2059  0000                     _LATCbits	set	16316
  2060  0000                     _LATDbits	set	16317
  2061  0000                     _PORTBbits	set	16331
  2062  0000                     _T3CONbits	set	16294
  2063  0000                     _T3CON	set	16294
  2064  0000                     _TMR3L	set	16292
  2065  0000                     _TMR3H	set	16293
  2066  0000                     _T3CLK	set	16297
  2067  0000                     _T3GATE	set	16296
  2068  0000                     _T3GCON	set	16295
  2069  0000                     _T2CON	set	16300
  2070  0000                     _T2TMR	set	16298
  2071  0000                     _T2PR	set	16299
  2072  0000                     _T2RST	set	16303
  2073  0000                     _T2HLT	set	16301
  2074  0000                     _T2CLKCON	set	16302
  2075  0000                     _PWM8DCL	set	16224
  2076  0000                     _PWM8DCH	set	16225
  2077  0000                     _PWM8CON	set	16226
  2078  0000                     _LATEbits	set	16318
  2079  0000                     _T5CONbits	set	16282
  2080  0000                     _T5CON	set	16282
  2081  0000                     _TMR5L	set	16280
  2082  0000                     _TMR5H	set	16281
  2083  0000                     _T5CLK	set	16285
  2084  0000                     _T5GATE	set	16284
  2085  0000                     _T5GCON	set	16283
  2086  0000                     _T6CON	set	16276
  2087  0000                     _T6TMR	set	16274
  2088  0000                     _T6PR	set	16275
  2089  0000                     _T6RST	set	16279
  2090  0000                     _T6HLT	set	16277
  2091  0000                     _T6CLKCON	set	16278
  2092  0000                     _TRISD	set	16325
  2093  0000                     _TRISC	set	16324
  2094  0000                     _TRISB	set	16323
  2095  0000                     _TRISA	set	16322
  2096  0000                     _TRISF	set	16327
  2097  0000                     _TRISE	set	16326
  2098  0000                     _LATC	set	16316
  2099  0000                     _LATB	set	16315
  2100  0000                     _LATF	set	16319
  2101  0000                     _LATA	set	16314
  2102  0000                     _LATD	set	16317
  2103  0000                     _LATE	set	16318
  2104  0000                     _IVTLOCKbits	set	16340
  2105  0000                     _IVTLOCK	set	16340
  2106  0000                     _INTCON0bits	set	16338
  2107  0000                     _GIE	set	130711
  2108  00FDC3                     STR_48:
  2109                           
  2110                           ; BSR set to: 57
  2111  00FDC3  20                 	db	32
  2112  00FDC4  25                 	db	37
  2113  00FDC5  6C                 	db	108	;'l'
  2114  00FDC6  75                 	db	117	;'u'
  2115  00FDC7  2C                 	db	44
  2116  00FDC8  25                 	db	37
  2117  00FDC9  34                 	db	52	;'4'
  2118  00FDCA  2E                 	db	46
  2119  00FDCB  34                 	db	52	;'4'
  2120  00FDCC  66                 	db	102	;'f'
  2121  00FDCD  2C                 	db	44
  2122  00FDCE  25                 	db	37
  2123  00FDCF  34                 	db	52	;'4'
  2124  00FDD0  2E                 	db	46
  2125  00FDD1  34                 	db	52	;'4'
  2126  00FDD2  66                 	db	102	;'f'
  2127  00FDD3  2C                 	db	44
  2128  00FDD4  25                 	db	37
  2129  00FDD5  34                 	db	52	;'4'
  2130  00FDD6  2E                 	db	46
  2131  00FDD7  34                 	db	52	;'4'
  2132  00FDD8  66                 	db	102	;'f'
  2133  00FDD9  2C                 	db	44
  2134  00FDDA  25                 	db	37
  2135  00FDDB  34                 	db	52	;'4'
  2136  00FDDC  2E                 	db	46
  2137  00FDDD  34                 	db	52	;'4'
  2138  00FDDE  66                 	db	102	;'f'
  2139  00FDDF  2C                 	db	44
  2140  00FDE0  25                 	db	37
  2141  00FDE1  34                 	db	52	;'4'
  2142  00FDE2  2E                 	db	46
  2143  00FDE3  33                 	db	51	;'3'
  2144  00FDE4  66                 	db	102	;'f'
  2145  00FDE5  2C                 	db	44
  2146  00FDE6  25                 	db	37
  2147  00FDE7  34                 	db	52	;'4'
  2148  00FDE8  2E                 	db	46
  2149  00FDE9  33                 	db	51	;'3'
  2150  00FDEA  66                 	db	102	;'f'
  2151  00FDEB  2C                 	db	44
  2152  00FDEC  25                 	db	37
  2153  00FDED  34                 	db	52	;'4'
  2154  00FDEE  2E                 	db	46
  2155  00FDEF  33                 	db	51	;'3'
  2156  00FDF0  66                 	db	102	;'f'
  2157  00FDF1  2C                 	db	44
  2158  00FDF2  25                 	db	37
  2159  00FDF3  34                 	db	52	;'4'
  2160  00FDF4  2E                 	db	46
  2161  00FDF5  33                 	db	51	;'3'
  2162  00FDF6  66                 	db	102	;'f'
  2163  00FDF7  2C                 	db	44
  2164  00FDF8  25                 	db	37
  2165  00FDF9  34                 	db	52	;'4'
  2166  00FDFA  2E                 	db	46
  2167  00FDFB  33                 	db	51	;'3'
  2168  00FDFC  66                 	db	102	;'f'
  2169  00FDFD  2C                 	db	44
  2170  00FDFE  25                 	db	37
  2171  00FDFF  34                 	db	52	;'4'
  2172  00FE00  2E                 	db	46
  2173  00FE01  33                 	db	51	;'3'
  2174  00FE02  66                 	db	102	;'f'
  2175  00FE03  2C                 	db	44
  2176  00FE04  25                 	db	37
  2177  00FE05  34                 	db	52	;'4'
  2178  00FE06  2E                 	db	46
  2179  00FE07  33                 	db	51	;'3'
  2180  00FE08  64                 	db	100	;'d'
  2181  00FE09  2C                 	db	44
  2182  00FE0A  25                 	db	37
  2183  00FE0B  34                 	db	52	;'4'
  2184  00FE0C  2E                 	db	46
  2185  00FE0D  33                 	db	51	;'3'
  2186  00FE0E  64                 	db	100	;'d'
  2187  00FE0F  0D                 	db	13
  2188  00FE10  0A                 	db	10
  2189  00FE11  00                 	db	0
  2190  00FE12                     
  2191                           ; BSR set to: 57
  2192  00FE12  20                 	db	32
  2193  00FE13  4D                 	db	77	;'M'
  2194  00FE14  65                 	db	101	;'e'
  2195  00FE15  73                 	db	115	;'s'
  2196  00FE16  67                 	db	103	;'g'
  2197  00FE17  20                 	db	32
  2198  00FE18  25                 	db	37
  2199  00FE19  64                 	db	100	;'d'
  2200  00FE1A  20                 	db	32
  2201  00FE1B  53                 	db	83	;'S'
  2202  00FE1C  74                 	db	116	;'t'
  2203  00FE1D  61                 	db	97	;'a'
  2204  00FE1E  63                 	db	99	;'c'
  2205  00FE1F  6B                 	db	107	;'k'
  2206  00FE20  20                 	db	32
  2207  00FE21  25                 	db	37
  2208  00FE22  64                 	db	100	;'d'
  2209  00FE23  20                 	db	32
  2210  00FE24  20                 	db	32
  2211  00FE25  20                 	db	32
  2212  00FE26  20                 	db	32
  2213  00FE27  20                 	db	32
  2214  00FE28  20                 	db	32
  2215  00FE29  00                 	db	0
  2216  00FE2A                     STR_9:
  2217                           
  2218                           ; BSR set to: 57
  2219  00FE2A  53                 	db	83	;'S'
  2220  00FE2B  74                 	db	116	;'t'
  2221  00FE2C  61                 	db	97	;'a'
  2222  00FE2D  74                 	db	116	;'t'
  2223  00FE2E  69                 	db	105	;'i'
  2224  00FE2F  63                 	db	99	;'c'
  2225  00FE30  20                 	db	32
  2226  00FE31  53                 	db	83	;'S'
  2227  00FE32  4F                 	db	79	;'O'
  2228  00FE33  43                 	db	67	;'C'
  2229  00FE34  20                 	db	32
  2230  00FE35  25                 	db	37
  2231  00FE36  64                 	db	100	;'d'
  2232  00FE37  20                 	db	32
  2233  00FE38  20                 	db	32
  2234  00FE39  20                 	db	32
  2235  00FE3A  20                 	db	32
  2236  00FE3B  20                 	db	32
  2237  00FE3C  20                 	db	32
  2238  00FE3D  20                 	db	32
  2239  00FE3E  20                 	db	32
  2240  00FE3F  00                 	db	0
  2241  00FE40                     STR_8:
  2242                           
  2243                           ; BSR set to: 57
  2244  00FE40  53                 	db	83	;'S'
  2245  00FE41  20                 	db	32
  2246  00FE42  53                 	db	83	;'S'
  2247  00FE43  4F                 	db	79	;'O'
  2248  00FE44  43                 	db	67	;'C'
  2249  00FE45  20                 	db	32
  2250  00FE46  25                 	db	37
  2251  00FE47  64                 	db	100	;'d'
  2252  00FE48  20                 	db	32
  2253  00FE49  25                 	db	37
  2254  00FE4A  32                 	db	50	;'2'
  2255  00FE4B  2E                 	db	46
  2256  00FE4C  34                 	db	52	;'4'
  2257  00FE4D  66                 	db	102	;'f'
  2258  00FE4E  20                 	db	32
  2259  00FE4F  20                 	db	32
  2260  00FE50  20                 	db	32
  2261  00FE51  20                 	db	32
  2262  00FE52  20                 	db	32
  2263  00FE53  20                 	db	32
  2264  00FE54  20                 	db	32
  2265  00FE55  00                 	db	0
  2266  00FE56                     STR_10:
  2267                           
  2268                           ; BSR set to: 57
  2269  00FE56  42                 	db	66	;'B'
  2270  00FE57  61                 	db	97	;'a'
  2271  00FE58  74                 	db	116	;'t'
  2272  00FE59  74                 	db	116	;'t'
  2273  00FE5A  65                 	db	101	;'e'
  2274  00FE5B  72                 	db	114	;'r'
  2275  00FE5C  79                 	db	121	;'y'
  2276  00FE5D  20                 	db	32
  2277  00FE5E  41                 	db	65	;'A'
  2278  00FE5F  68                 	db	104	;'h'
  2279  00FE60  20                 	db	32
  2280  00FE61  25                 	db	37
  2281  00FE62  33                 	db	51	;'3'
  2282  00FE63  2E                 	db	46
  2283  00FE64  32                 	db	50	;'2'
  2284  00FE65  66                 	db	102	;'f'
  2285  00FE66  20                 	db	32
  2286  00FE67  20                 	db	32
  2287  00FE68  20                 	db	32
  2288  00FE69  20                 	db	32
  2289  00FE6A  20                 	db	32
  2290  00FE6B  00                 	db	0
  2291  00FE6C                     STR_21:
  2292                           
  2293                           ; BSR set to: 57
  2294  00FE6C  42                 	db	66	;'B'
  2295  00FE6D  41                 	db	65	;'A'
  2296  00FE6E  48                 	db	72	;'H'
  2297  00FE6F  20                 	db	32
  2298  00FE70  25                 	db	37
  2299  00FE71  33                 	db	51	;'3'
  2300  00FE72  2E                 	db	46
  2301  00FE73  32                 	db	50	;'2'
  2302  00FE74  66                 	db	102	;'f'
  2303  00FE75  20                 	db	32
  2304  00FE76  50                 	db	80	;'P'
  2305  00FE77  25                 	db	37
  2306  00FE78  33                 	db	51	;'3'
  2307  00FE79  2E                 	db	46
  2308  00FE7A  32                 	db	50	;'2'
  2309  00FE7B  66                 	db	102	;'f'
  2310  00FE7C  20                 	db	32
  2311  00FE7D  20                 	db	32
  2312  00FE7E  20                 	db	32
  2313  00FE7F  00                 	db	0
  2314  00FE80                     STR_41:
  2315                           
  2316                           ; BSR set to: 57
  2317  00FE80  20                 	db	32
  2318  00FE81  20                 	db	32
  2319  00FE82  20                 	db	32
  2320  00FE83  20                 	db	32
  2321  00FE84  20                 	db	32
  2322  00FE85  20                 	db	32
  2323  00FE86  20                 	db	32
  2324  00FE87  20                 	db	32
  2325  00FE88  20                 	db	32
  2326  00FE89  20                 	db	32
  2327  00FE8A  20                 	db	32
  2328  00FE8B  20                 	db	32
  2329  00FE8C  20                 	db	32
  2330  00FE8D  20                 	db	32
  2331  00FE8E  20                 	db	32
  2332  00FE8F  20                 	db	32
  2333  00FE90  20                 	db	32
  2334  00FE91  20                 	db	32
  2335  00FE92  00                 	db	0
  2336  00FE93                     STR_31:
  2337                           
  2338                           ; BSR set to: 57
  2339  00FE93  48                 	db	72	;'H'
  2340  00FE94  45                 	db	69	;'E'
  2341  00FE95  4C                 	db	76	;'L'
  2342  00FE96  50                 	db	80	;'P'
  2343  00FE97  20                 	db	32
  2344  00FE98  25                 	db	37
  2345  00FE99  73                 	db	115	;'s'
  2346  00FE9A  20                 	db	32
  2347  00FE9B  20                 	db	32
  2348  00FE9C  20                 	db	32
  2349  00FE9D  20                 	db	32
  2350  00FE9E  20                 	db	32
  2351  00FE9F  20                 	db	32
  2352  00FEA0  20                 	db	32
  2353  00FEA1  20                 	db	32
  2354  00FEA2  20                 	db	32
  2355  00FEA3  20                 	db	32
  2356  00FEA4  20                 	db	32
  2357  00FEA5  00                 	db	0
  2358  00FEA6                     
  2359                           ; BSR set to: 57
  2360  00FEA6  44                 	db	68	;'D'
  2361  00FEA7  49                 	db	73	;'I'
  2362  00FEA8  53                 	db	83	;'S'
  2363  00FEA9  50                 	db	80	;'P'
  2364  00FEAA  4C                 	db	76	;'L'
  2365  00FEAB  41                 	db	65	;'A'
  2366  00FEAC  59                 	db	89	;'Y'
  2367  00FEAD  20                 	db	32
  2368  00FEAE  25                 	db	37
  2369  00FEAF  73                 	db	115	;'s'
  2370  00FEB0  20                 	db	32
  2371  00FEB1  20                 	db	32
  2372  00FEB2  20                 	db	32
  2373  00FEB3  20                 	db	32
  2374  00FEB4  20                 	db	32
  2375  00FEB5  20                 	db	32
  2376  00FEB6  20                 	db	32
  2377  00FEB7  20                 	db	32
  2378  00FEB8  00                 	db	0
  2379  00FEB9                     STR_22:
  2380                           
  2381                           ; BSR set to: 57
  2382  00FEB9  53                 	db	83	;'S'
  2383  00FEBA  4F                 	db	79	;'O'
  2384  00FEBB  43                 	db	67	;'C'
  2385  00FEBC  20                 	db	32
  2386  00FEBD  25                 	db	37
  2387  00FEBE  64                 	db	100	;'d'
  2388  00FEBF  20                 	db	32
  2389  00FEC0  52                 	db	82	;'R'
  2390  00FEC1  55                 	db	85	;'U'
  2391  00FEC2  4E                 	db	78	;'N'
  2392  00FEC3  20                 	db	32
  2393  00FEC4  25                 	db	37
  2394  00FEC5  64                 	db	100	;'d'
  2395  00FEC6  20                 	db	32
  2396  00FEC7  20                 	db	32
  2397  00FEC8  20                 	db	32
  2398  00FEC9  20                 	db	32
  2399  00FECA  20                 	db	32
  2400  00FECB  00                 	db	0
  2401  00FECC                     STR_14:
  2402                           
  2403                           ; BSR set to: 57
  2404  00FECC  50                 	db	80	;'P'
  2405  00FECD  56                 	db	86	;'V'
  2406  00FECE  20                 	db	32
  2407  00FECF  20                 	db	32
  2408  00FED0  20                 	db	32
  2409  00FED1  50                 	db	80	;'P'
  2410  00FED2  57                 	db	87	;'W'
  2411  00FED3  52                 	db	82	;'R'
  2412  00FED4  20                 	db	32
  2413  00FED5  25                 	db	37
  2414  00FED6  33                 	db	51	;'3'
  2415  00FED7  2E                 	db	46
  2416  00FED8  32                 	db	50	;'2'
  2417  00FED9  66                 	db	102	;'f'
  2418  00FEDA  20                 	db	32
  2419  00FEDB  20                 	db	32
  2420  00FEDC  20                 	db	32
  2421  00FEDD  20                 	db	32
  2422  00FEDE  00                 	db	0
  2423  00FEDF                     STR_16:
  2424                           
  2425                           ; BSR set to: 57
  2426  00FEDF  49                 	db	73	;'I'
  2427  00FEE0  4E                 	db	78	;'N'
  2428  00FEE1  56                 	db	86	;'V'
  2429  00FEE2  20                 	db	32
  2430  00FEE3  20                 	db	32
  2431  00FEE4  50                 	db	80	;'P'
  2432  00FEE5  57                 	db	87	;'W'
  2433  00FEE6  52                 	db	82	;'R'
  2434  00FEE7  20                 	db	32
  2435  00FEE8  25                 	db	37
  2436  00FEE9  33                 	db	51	;'3'
  2437  00FEEA  2E                 	db	46
  2438  00FEEB  32                 	db	50	;'2'
  2439  00FEEC  66                 	db	102	;'f'
  2440  00FEED  20                 	db	32
  2441  00FEEE  20                 	db	32
  2442  00FEEF  20                 	db	32
  2443  00FEF0  20                 	db	32
  2444  00FEF1  00                 	db	0
  2445  00FEF2                     STR_15:
  2446                           
  2447                           ; BSR set to: 57
  2448  00FEF2  4C                 	db	76	;'L'
  2449  00FEF3  4F                 	db	79	;'O'
  2450  00FEF4  41                 	db	65	;'A'
  2451  00FEF5  44                 	db	68	;'D'
  2452  00FEF6  20                 	db	32
  2453  00FEF7  50                 	db	80	;'P'
  2454  00FEF8  57                 	db	87	;'W'
  2455  00FEF9  52                 	db	82	;'R'
  2456  00FEFA  20                 	db	32
  2457  00FEFB  25                 	db	37
  2458  00FEFC  33                 	db	51	;'3'
  2459  00FEFD  2E                 	db	46
  2460  00FEFE  32                 	db	50	;'2'
  2461  00FEFF  66                 	db	102	;'f'
  2462  00FF00  20                 	db	32
  2463  00FF01  20                 	db	32
  2464  00FF02  20                 	db	32
  2465  00FF03  20                 	db	32
  2466  00FF04  00                 	db	0
  2467  00FF05                     STR_20:
  2468                           
  2469                           ; BSR set to: 57
  2470  00FF05  42                 	db	66	;'B'
  2471  00FF06  41                 	db	65	;'A'
  2472  00FF07  54                 	db	84	;'T'
  2473  00FF08  54                 	db	84	;'T'
  2474  00FF09  20                 	db	32
  2475  00FF0A  50                 	db	80	;'P'
  2476  00FF0B  57                 	db	87	;'W'
  2477  00FF0C  52                 	db	82	;'R'
  2478  00FF0D  20                 	db	32
  2479  00FF0E  25                 	db	37
  2480  00FF0F  33                 	db	51	;'3'
  2481  00FF10  2E                 	db	46
  2482  00FF11  32                 	db	50	;'2'
  2483  00FF12  66                 	db	102	;'f'
  2484  00FF13  20                 	db	32
  2485  00FF14  20                 	db	32
  2486  00FF15  20                 	db	32
  2487  00FF16  20                 	db	32
  2488  00FF17  00                 	db	0
  2489  00FF18                     STR_18:
  2490                           
  2491                           ; BSR set to: 57
  2492  00FF18  42                 	db	66	;'B'
  2493  00FF19  56                 	db	86	;'V'
  2494  00FF1A  20                 	db	32
  2495  00FF1B  25                 	db	37
  2496  00FF1C  32                 	db	50	;'2'
  2497  00FF1D  2E                 	db	46
  2498  00FF1E  32                 	db	50	;'2'
  2499  00FF1F  66                 	db	102	;'f'
  2500  00FF20  20                 	db	32
  2501  00FF21  42                 	db	66	;'B'
  2502  00FF22  41                 	db	65	;'A'
  2503  00FF23  20                 	db	32
  2504  00FF24  25                 	db	37
  2505  00FF25  32                 	db	50	;'2'
  2506  00FF26  2E                 	db	46
  2507  00FF27  32                 	db	50	;'2'
  2508  00FF28  66                 	db	102	;'f'
  2509  00FF29  20                 	db	32
  2510  00FF2A  00                 	db	0
  2511  00FF2B                     STR_19:
  2512                           
  2513                           ; BSR set to: 57
  2514  00FF2B  43                 	db	67	;'C'
  2515  00FF2C  56                 	db	86	;'V'
  2516  00FF2D  20                 	db	32
  2517  00FF2E  25                 	db	37
  2518  00FF2F  32                 	db	50	;'2'
  2519  00FF30  2E                 	db	46
  2520  00FF31  32                 	db	50	;'2'
  2521  00FF32  66                 	db	102	;'f'
  2522  00FF33  20                 	db	32
  2523  00FF34  4C                 	db	76	;'L'
  2524  00FF35  41                 	db	65	;'A'
  2525  00FF36  20                 	db	32
  2526  00FF37  25                 	db	37
  2527  00FF38  32                 	db	50	;'2'
  2528  00FF39  2E                 	db	46
  2529  00FF3A  32                 	db	50	;'2'
  2530  00FF3B  66                 	db	102	;'f'
  2531  00FF3C  20                 	db	32
  2532  00FF3D  00                 	db	0
  2533  00FF3E                     STR_17:
  2534                           
  2535                           ; BSR set to: 57
  2536  00FF3E  50                 	db	80	;'P'
  2537  00FF3F  56                 	db	86	;'V'
  2538  00FF40  20                 	db	32
  2539  00FF41  25                 	db	37
  2540  00FF42  32                 	db	50	;'2'
  2541  00FF43  2E                 	db	46
  2542  00FF44  32                 	db	50	;'2'
  2543  00FF45  66                 	db	102	;'f'
  2544  00FF46  20                 	db	32
  2545  00FF47  50                 	db	80	;'P'
  2546  00FF48  41                 	db	65	;'A'
  2547  00FF49  20                 	db	32
  2548  00FF4A  25                 	db	37
  2549  00FF4B  32                 	db	50	;'2'
  2550  00FF4C  2E                 	db	46
  2551  00FF4D  32                 	db	50	;'2'
  2552  00FF4E  66                 	db	102	;'f'
  2553  00FF4F  20                 	db	32
  2554  00FF50  00                 	db	0
  2555  00FF51                     STR_4:
  2556                           
  2557                           ; BSR set to: 57
  2558  00FF51  20                 	db	32
  2559  00FF52  4E                 	db	78	;'N'
  2560  00FF53  53                 	db	83	;'S'
  2561  00FF54  41                 	db	65	;'A'
  2562  00FF55  53                 	db	83	;'S'
  2563  00FF56  50                 	db	80	;'P'
  2564  00FF57  4F                 	db	79	;'O'
  2565  00FF58  4F                 	db	79	;'O'
  2566  00FF59  4B                 	db	75	;'K'
  2567  00FF5A  20                 	db	32
  2568  00FF5B  20                 	db	32
  2569  00FF5C  20                 	db	32
  2570  00FF5D  20                 	db	32
  2571  00FF5E  20                 	db	32
  2572  00FF5F  20                 	db	32
  2573  00FF60  20                 	db	32
  2574  00FF61  00                 	db	0
  2575  00FF62                     STR_1:
  2576                           
  2577                           ; BSR set to: 57
  2578  00FF62  20                 	db	32
  2579  00FF63  4D                 	db	77	;'M'
  2580  00FF64  42                 	db	66	;'B'
  2581  00FF65  4D                 	db	77	;'M'
  2582  00FF66  43                 	db	67	;'C'
  2583  00FF67  20                 	db	32
  2584  00FF68  53                 	db	83	;'S'
  2585  00FF69  4F                 	db	79	;'O'
  2586  00FF6A  4C                 	db	76	;'L'
  2587  00FF6B  41                 	db	65	;'A'
  2588  00FF6C  52                 	db	82	;'R'
  2589  00FF6D  4D                 	db	77	;'M'
  2590  00FF6E  4F                 	db	79	;'O'
  2591  00FF6F  4E                 	db	78	;'N'
  2592  00FF70  20                 	db	32
  2593  00FF71  20                 	db	32
  2594  00FF72  00                 	db	0
  2595  00FF73                     STR_13:
  2596                           
  2597                           ; BSR set to: 57
  2598  00FF73  25                 	db	37
  2599  00FF74  64                 	db	100	;'d'
  2600  00FF75  20                 	db	32
  2601  00FF76  25                 	db	37
  2602  00FF77  32                 	db	50	;'2'
  2603  00FF78  2E                 	db	46
  2604  00FF79  34                 	db	52	;'4'
  2605  00FF7A  66                 	db	102	;'f'
  2606  00FF7B  2C                 	db	44
  2607  00FF7C  20                 	db	32
  2608  00FF7D  25                 	db	37
  2609  00FF7E  64                 	db	100	;'d'
  2610  00FF7F  20                 	db	32
  2611  00FF80  20                 	db	32
  2612  00FF81  20                 	db	32
  2613  00FF82  23                 	db	35
  2614  00FF83  00                 	db	0
  2615  00FF84                     STR_11:
  2616                           
  2617                           ; BSR set to: 57
  2618  00FF84  25                 	db	37
  2619  00FF85  64                 	db	100	;'d'
  2620  00FF86  20                 	db	32
  2621  00FF87  25                 	db	37
  2622  00FF88  32                 	db	50	;'2'
  2623  00FF89  2E                 	db	46
  2624  00FF8A  34                 	db	52	;'4'
  2625  00FF8B  66                 	db	102	;'f'
  2626  00FF8C  20                 	db	32
  2627  00FF8D  20                 	db	32
  2628  00FF8E  20                 	db	32
  2629  00FF8F  25                 	db	37
  2630  00FF90  64                 	db	100	;'d'
  2631  00FF91  20                 	db	32
  2632  00FF92  20                 	db	32
  2633  00FF93  00                 	db	0
  2634  00FF94                     STR_35:
  2635                           
  2636                           ; BSR set to: 57
  2637  00FF94  76                 	db	118	;'v'
  2638  00FF95  74                 	db	116	;'t'
  2639  00FF96  65                 	db	101	;'e'
  2640  00FF97  72                 	db	114	;'r'
  2641  00FF98  6D                 	db	109	;'m'
  2642  00FF99  20                 	db	32
  2643  00FF9A  25                 	db	37
  2644  00FF9B  78                 	db	120	;'x'
  2645  00FF9C  3A                 	db	58	;':'
  2646  00FF9D  25                 	db	37
  2647  00FF9E  78                 	db	120	;'x'
  2648  00FF9F  20                 	db	32
  2649  00FFA0  20                 	db	32
  2650  00FFA1  20                 	db	32
  2651  00FFA2  00                 	db	0
  2652  00FFA3                     STR_2:
  2653                           
  2654                           ; BSR set to: 57
  2655  00FFA3  20                 	db	32
  2656  00FFA4  56                 	db	86	;'V'
  2657  00FFA5  65                 	db	101	;'e'
  2658  00FFA6  72                 	db	114	;'r'
  2659  00FFA7  73                 	db	115	;'s'
  2660  00FFA8  69                 	db	105	;'i'
  2661  00FFA9  6F                 	db	111	;'o'
  2662  00FFAA  6E                 	db	110	;'n'
  2663  00FFAB  20                 	db	32
  2664  00FFAC  25                 	db	37
  2665  00FFAD  73                 	db	115	;'s'
  2666  00FFAE  20                 	db	32
  2667  00FFAF  20                 	db	32
  2668  00FFB0  20                 	db	32
  2669  00FFB1  00                 	db	0
  2670  00FFB2                     STR_29:
  2671                           
  2672                           ; BSR set to: 57
  2673  00FFB2  44                 	db	68	;'D'
  2674  00FFB3  65                 	db	101	;'e'
  2675  00FFB4  63                 	db	99	;'c'
  2676  00FFB5  20                 	db	32
  2677  00FFB6  31                 	db	49	;'1'
  2678  00FFB7  32                 	db	50	;'2'
  2679  00FFB8  20                 	db	32
  2680  00FFB9  32                 	db	50	;'2'
  2681  00FFBA  30                 	db	48	;'0'
  2682  00FFBB  31                 	db	49	;'1'
  2683  00FFBC  39                 	db	57	;'9'
  2684  00FFBD  00                 	db	0
  2685  00FFBE                     STR_33:
  2686                           
  2687                           ; BSR set to: 57
  2688  00FFBE  25                 	db	37
  2689  00FFBF  73                 	db	115	;'s'
  2690  00FFC0  20                 	db	32
  2691  00FFC1  20                 	db	32
  2692  00FFC2  20                 	db	32
  2693  00FFC3  20                 	db	32
  2694  00FFC4  20                 	db	32
  2695  00FFC5  20                 	db	32
  2696  00FFC6  20                 	db	32
  2697  00FFC7  00                 	db	0
  2698  00FFC8                     STR_30:
  2699                           
  2700                           ; BSR set to: 57
  2701  00FFC8  30                 	db	48	;'0'
  2702  00FFC9  37                 	db	55	;'7'
  2703  00FFCA  3A                 	db	58	;':'
  2704  00FFCB  30                 	db	48	;'0'
  2705  00FFCC  30                 	db	48	;'0'
  2706  00FFCD  3A                 	db	58	;':'
  2707  00FFCE  33                 	db	51	;'3'
  2708  00FFCF  35                 	db	53	;'5'
  2709  00FFD0  00                 	db	0
  2710  00FFD1                     STR_3:
  2711                           
  2712                           ; BSR set to: 57
  2713  00FFD1  31                 	db	49	;'1'
  2714  00FFD2  2E                 	db	46
  2715  00FFD3  30                 	db	48	;'0'
  2716  00FFD4  30                 	db	48	;'0'
  2717  00FFD5  32                 	db	50	;'2'
  2718  00FFD6  00                 	db	0
  2719  00FFD7                     STR_49:
  2720                           
  2721                           ; BSR set to: 57
  2722  00FFD7  49                 	db	73	;'I'
  2723  00FFD8  4E                 	db	78	;'N'
  2724  00FFD9  46                 	db	70	;'F'
  2725  00FFDA  00                 	db	0
  2726  00FFDB                     STR_53:
  2727                           
  2728                           ; BSR set to: 57
  2729  00FFDB  4E                 	db	78	;'N'
  2730  00FFDC  41                 	db	65	;'A'
  2731  00FFDD  4E                 	db	78	;'N'
  2732  00FFDE  00                 	db	0
  2733  00FFDF                     STR_50:
  2734                           
  2735                           ; BSR set to: 57
  2736  00FFDF  69                 	db	105	;'i'
  2737  00FFE0  6E                 	db	110	;'n'
  2738  00FFE1  66                 	db	102	;'f'
  2739  00FFE2  00                 	db	0
  2740  00FFE3                     STR_54:
  2741                           
  2742                           ; BSR set to: 57
  2743  00FFE3  6E                 	db	110	;'n'
  2744  00FFE4  61                 	db	97	;'a'
  2745  00FFE5  6E                 	db	110	;'n'
  2746  00FFE6  00                 	db	0
  2747  00FFE7                     STR_80:
  2748                           
  2749                           ; BSR set to: 57
  2750  00FFE7  6C                 	db	108	;'l'
  2751  00FFE8  58                 	db	88	;'X'
  2752  00FFE9  00                 	db	0
  2753  00FFEA                     STR_57:
  2754                           
  2755                           ; BSR set to: 57
  2756  00FFEA  6C                 	db	108	;'l'
  2757  00FFEB  64                 	db	100	;'d'
  2758  00FFEC  00                 	db	0
  2759  00FFED                     STR_66:
  2760                           
  2761                           ; BSR set to: 57
  2762  00FFED  6C                 	db	108	;'l'
  2763  00FFEE  66                 	db	102	;'f'
  2764  00FFEF  00                 	db	0
  2765  00FFF0                     STR_61:
  2766                           
  2767                           ; BSR set to: 57
  2768  00FFF0  6C                 	db	108	;'l'
  2769  00FFF1  69                 	db	105	;'i'
  2770  00FFF2  00                 	db	0
  2771  00FFF3                     STR_71:
  2772                           
  2773                           ; BSR set to: 57
  2774  00FFF3  6C                 	db	108	;'l'
  2775  00FFF4  75                 	db	117	;'u'
  2776  00FFF5  00                 	db	0
  2777  00FFF6                     STR_76:
  2778                           
  2779                           ; BSR set to: 57
  2780  00FFF6  6C                 	db	108	;'l'
  2781  00FFF7  78                 	db	120	;'x'
  2782  00FFF8  00                 	db	0
  2783  00FFF9                     STR_27:
  2784                           
  2785                           ; BSR set to: 57
  2786  00FFF9  25                 	db	37
  2787  00FFFA  63                 	db	99	;'c'
  2788  00FFFB  00                 	db	0
  2789  00FFFC                     STR_26:
  2790                           
  2791                           ; BSR set to: 57
  2792  00FFFC  25                 	db	37
  2793  00FFFD  73                 	db	115	;'s'
  2794  00FFFE  00                 	db	0
  2795  0000                     
  2796                           ; #config settings
  2797  00FFFF  00                 	db	0	; dummy byte at the end
  2798  0000                     
  2799                           	psect	cinit
  2800  018A88                     __pcinit:
  2801                           	opt callstack 0
  2802  018A88                     start_initialization:
  2803                           	opt callstack 0
  2804  018A88                     __initialization:
  2805                           	opt callstack 0
  2806                           
  2807                           ; Initialize objects allocated to BIGRAM (512 bytes)
  2808                           ; load TBLPTR registers with __pidataBIGRAM
  2809  018A88  0E38               	movlw	low __pidataBIGRAM
  2810  018A8A  6EF6               	movwf	tblptrl,c
  2811  018A8C  0E72               	movlw	high __pidataBIGRAM
  2812  018A8E  6EF7               	movwf	tblptrh,c
  2813  018A90  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  2814  018A92  6EF8               	movwf	tblptru,c
  2815  018A94  EE01  F1FF         	lfsr	0,__pdataBIGRAM
  2816  018A98  EE20 F200          	lfsr	2,512
  2817  018A9C                     copy_data0:
  2818  018A9C  0009               	tblrd		*+
  2819  018A9E  006F FFD7 FFEE     	movff	tablat,postinc0
  2820  018AA4  50DD               	movf	postdec2,w,c
  2821  018AA6  50D9               	movf	fsr2l,w,c
  2822  018AA8  E1F9               	bnz	copy_data0
  2823  018AAA  50DA               	movf	fsr2h,w,c
  2824  018AAC  E1F7               	bnz	copy_data0
  2825                           
  2826                           ; Initialize objects allocated to BANK2 (188 bytes)
  2827                           ; load TBLPTR registers with __pidataBANK2
  2828  018AAE  0E02               	movlw	low __pidataBANK2
  2829  018AB0  6EF6               	movwf	tblptrl,c
  2830  018AB2  0E90               	movlw	high __pidataBANK2
  2831  018AB4  6EF7               	movwf	tblptrh,c
  2832  018AB6  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  2833  018AB8  6EF8               	movwf	tblptru,c
  2834  018ABA  EE00  F200         	lfsr	0,__pdataBANK2
  2835  018ABE  EE20 F0BC          	lfsr	2,188
  2836  018AC2                     copy_data1:
  2837  018AC2  0009               	tblrd		*+
  2838  018AC4  006F FFD7 FFEE     	movff	tablat,postinc0
  2839  018ACA  50DD               	movf	postdec2,w,c
  2840  018ACC  50D9               	movf	fsr2l,w,c
  2841  018ACE  E1F9               	bnz	copy_data1
  2842                           
  2843                           ; Initialize objects allocated to BANK1 (243 bytes)
  2844                           ; load TBLPTR registers with __pidataBANK1
  2845  018AD0  0E8C               	movlw	low __pidataBANK1
  2846  018AD2  6EF6               	movwf	tblptrl,c
  2847  018AD4  0E8C               	movlw	high __pidataBANK1
  2848  018AD6  6EF7               	movwf	tblptrh,c
  2849  018AD8  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  2850  018ADA  6EF8               	movwf	tblptru,c
  2851  018ADC  EE00  F100         	lfsr	0,__pdataBANK1
  2852  018AE0  EE20 F0F3          	lfsr	2,243
  2853  018AE4                     copy_data2:
  2854  018AE4  0009               	tblrd		*+
  2855  018AE6  006F FFD7 FFEE     	movff	tablat,postinc0
  2856  018AEC  50DD               	movf	postdec2,w,c
  2857  018AEE  50D9               	movf	fsr2l,w,c
  2858  018AF0  E1F9               	bnz	copy_data2
  2859                           
  2860                           ; Initialize objects allocated to BANK0 (54 bytes)
  2861                           ; load TBLPTR registers with __pidataBANK0
  2862  018AF2  0E1A               	movlw	low __pidataBANK0
  2863  018AF4  6EF6               	movwf	tblptrl,c
  2864  018AF6  0EA3               	movlw	high __pidataBANK0
  2865  018AF8  6EF7               	movwf	tblptrh,c
  2866  018AFA  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  2867  018AFC  6EF8               	movwf	tblptru,c
  2868  018AFE  EE00  F0C6         	lfsr	0,__pdataBANK0
  2869  018B02  EE20 F036          	lfsr	2,54
  2870  018B06                     copy_data3:
  2871  018B06  0009               	tblrd		*+
  2872  018B08  006F FFD7 FFEE     	movff	tablat,postinc0
  2873  018B0E  50DD               	movf	postdec2,w,c
  2874  018B10  50D9               	movf	fsr2l,w,c
  2875  018B12  E1F9               	bnz	copy_data3
  2876                           
  2877                           ; Clear objects allocated to BIGRAM (290 bytes)
  2878  018B14  EE01  F3FF         	lfsr	0,__pbssBIGRAM
  2879  018B18  EE20 F122          	lfsr	2,290
  2880  018B1C                     clear_0:
  2881  018B1C  6AEE               	clrf	postinc0,c
  2882  018B1E  50DD               	movf	postdec2,w,c
  2883  018B20  50D9               	movf	fsr2l,w,c
  2884  018B22  E1FC               	bnz	clear_0
  2885  018B24  50DA               	movf	fsr2h,w,c
  2886  018B26  E1FA               	bnz	clear_0
  2887                           
  2888                           ; Clear objects allocated to BANK5 (255 bytes)
  2889  018B28  EE01  F100         	lfsr	0,__pbssBANK5
  2890  018B2C  EE20 F0FF          	lfsr	2,255
  2891  018B30                     clear_1:
  2892  018B30  6AEE               	clrf	postinc0,c
  2893  018B32  50DD               	movf	postdec2,w,c
  2894  018B34  50D9               	movf	fsr2l,w,c
  2895  018B36  E1FC               	bnz	clear_1
  2896  018B38  50DA               	movf	fsr2h,w,c
  2897  018B3A  E1FA               	bnz	clear_1
  2898                           
  2899                           ; Clear objects allocated to BANK4 (134 bytes)
  2900  018B3C  EE01  F000         	lfsr	0,__pbssBANK4
  2901  018B40  0E86               	movlw	134
  2902  018B42                     clear_2:
  2903  018B42  6AEE               	clrf	postinc0,c
  2904  018B44  06E8               	decf	wreg,f,c
  2905  018B46  E1FD               	bnz	clear_2
  2906                           
  2907                           ; Clear objects allocated to BANK3 (228 bytes)
  2908  018B48  EE00  F300         	lfsr	0,__pbssBANK3
  2909  018B4C  0EE4               	movlw	228
  2910  018B4E                     clear_3:
  2911  018B4E  6AEE               	clrf	postinc0,c
  2912  018B50  06E8               	decf	wreg,f,c
  2913  018B52  E1FD               	bnz	clear_3
  2914                           
  2915                           ; Clear objects allocated to BANK2 (65 bytes)
  2916  018B54  EE00  F2BC         	lfsr	0,__pbssBANK2
  2917  018B58  0E41               	movlw	65
  2918  018B5A                     clear_4:
  2919  018B5A  6AEE               	clrf	postinc0,c
  2920  018B5C  06E8               	decf	wreg,f,c
  2921  018B5E  E1FD               	bnz	clear_4
  2922                           
  2923                           ; Clear objects allocated to BANK0 (102 bytes)
  2924  018B60  EE00  F060         	lfsr	0,__pbssBANK0
  2925  018B64  0E66               	movlw	102
  2926  018B66                     clear_5:
  2927  018B66  6AEE               	clrf	postinc0,c
  2928  018B68  06E8               	decf	wreg,f,c
  2929  018B6A  E1FD               	bnz	clear_5
  2930                           
  2931                           ; Clear objects allocated to COMRAM (23 bytes)
  2932  018B6C  EE00  F021         	lfsr	0,__pbssCOMRAM
  2933  018B70  0E17               	movlw	23
  2934  018B72                     clear_6:
  2935  018B72  6AEE               	clrf	postinc0,c
  2936  018B74  06E8               	decf	wreg,f,c
  2937  018B76  E1FD               	bnz	clear_6
  2938                           
  2939                           ;
  2940                           ; Setup IVTBASE
  2941                           ;
  2942  018B78  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  2943  018B7A  6ED5               	movwf	213,c
  2944  018B7C  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  2945  018B7E  6ED6               	movwf	214,c
  2946  018B80  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  2947  018B82  6ED7               	movwf	215,c
  2948  018B84                     end_of_initialization:
  2949                           	opt callstack 0
  2950  018B84                     __end_of__initialization:
  2951                           	opt callstack 0
  2952  018B84  0100               	movlb	0
  2953  018B86  EFF8  F090         	goto	_main	;jump to C main() function
  2954                           
  2955                           	psect	bssCOMRAM
  2956  000021                     __pbssCOMRAM:
  2957                           	opt callstack 0
  2958  000021                     _width:
  2959                           	opt callstack 0
  2960  000021                     	ds	2
  2961  000023                     _prec:
  2962                           	opt callstack 0
  2963  000023                     	ds	2
  2964  000025                     _flags:
  2965                           	opt callstack 0
  2966  000025                     	ds	2
  2967  000027                     _timer3ReloadVal:
  2968                           	opt callstack 0
  2969  000027                     	ds	2
  2970  000029                     TMR5_ISR@CountCallBack:
  2971                           	opt callstack 0
  2972  000029                     	ds	2
  2973  00002B                     _timer5ReloadVal:
  2974                           	opt callstack 0
  2975  00002B                     	ds	2
  2976  00002D                     Volts_to_SOC@slot:
  2977                           	opt callstack 0
  2978  00002D                     	ds	1
  2979  00002E                     _mode_sw:
  2980                           	opt callstack 0
  2981  00002E                     	ds	1
  2982  00002F                     _uart2RxCount:
  2983                           	opt callstack 0
  2984  00002F                     	ds	1
  2985  000030                     _uart2RxTail:
  2986                           	opt callstack 0
  2987  000030                     	ds	1
  2988  000031                     _uart2RxHead:
  2989                           	opt callstack 0
  2990  000031                     	ds	1
  2991  000032                     _uart2TxBufferRemaining:
  2992                           	opt callstack 0
  2993  000032                     	ds	1
  2994  000033                     _uart2TxTail:
  2995                           	opt callstack 0
  2996  000033                     	ds	1
  2997  000034                     _uart2TxHead:
  2998                           	opt callstack 0
  2999  000034                     	ds	1
  3000  000035                     _uart1RxCount:
  3001                           	opt callstack 0
  3002  000035                     	ds	1
  3003  000036                     _uart1RxTail:
  3004                           	opt callstack 0
  3005  000036                     	ds	1
  3006  000037                     _uart1RxHead:
  3007                           	opt callstack 0
  3008  000037                     	ds	1
  3009                           
  3010                           	psect	bssBANK0
  3011  000060                     __pbssBANK0:
  3012                           	opt callstack 0
  3013  000060                     _spi_link:
  3014                           	opt callstack 0
  3015  000060                     	ds	12
  3016  00006C                     _uart1RxBuffer:
  3017                           	opt callstack 0
  3018  00006C                     	ds	8
  3019  000074                     floorf@F524:
  3020                           	opt callstack 0
  3021  000074                     	ds	4
  3022  000078                     fabsf@F463:
  3023                           	opt callstack 0
  3024  000078                     	ds	4
  3025  00007C                     ___fpclassifyf@F463:
  3026                           	opt callstack 0
  3027  00007C                     	ds	4
  3028  000080                     calc_ror_data@bcror:
  3029                           	opt callstack 0
  3030  000080                     	ds	4
  3031  000084                     calc_ror_data@bvror:
  3032                           	opt callstack 0
  3033  000084                     	ds	4
  3034  000088                     calc_model_data@bcror:
  3035                           	opt callstack 0
  3036  000088                     	ds	4
  3037  00008C                     calc_model_data@bvror:
  3038                           	opt callstack 0
  3039  00008C                     	ds	4
  3040  000090                     _utctime:
  3041                           	opt callstack 0
  3042  000090                     	ds	4
  3043  000094                     wdtdelay@dcount:
  3044                           	opt callstack 0
  3045  000094                     	ds	4
  3046  000098                     _P:
  3047                           	opt callstack 0
  3048  000098                     	ds	4
  3049  00009C                     _TMR3_InterruptHandler:
  3050                           	opt callstack 0
  3051  00009C                     	ds	3
  3052  00009F                     _TMR5_InterruptHandler:
  3053                           	opt callstack 0
  3054  00009F                     	ds	3
  3055  0000A2                     _TMR6_InterruptHandler:
  3056                           	opt callstack 0
  3057  0000A2                     	ds	3
  3058  0000A5                     _ADCC_ADTI_InterruptHandler:
  3059                           	opt callstack 0
  3060  0000A5                     	ds	3
  3061  0000A8                     _ADCC_ADI_InterruptHandler:
  3062                           	opt callstack 0
  3063  0000A8                     	ds	3
  3064  0000AB                     _UART1_RxInterruptHandler:
  3065                           	opt callstack 0
  3066  0000AB                     	ds	3
  3067  0000AE                     _UART2_TxInterruptHandler:
  3068                           	opt callstack 0
  3069  0000AE                     	ds	3
  3070  0000B1                     _UART2_RxInterruptHandler:
  3071                           	opt callstack 0
  3072  0000B1                     	ds	3
  3073  0000B4                     _INT1_InterruptHandler:
  3074                           	opt callstack 0
  3075  0000B4                     	ds	3
  3076  0000B7                     _INT0_InterruptHandler:
  3077                           	opt callstack 0
  3078  0000B7                     	ds	3
  3079  0000BA                     _nout:
  3080                           	opt callstack 0
  3081  0000BA                     	ds	2
  3082  0000BC                     TMR3_ISR@CountCallBack:
  3083                           	opt callstack 0
  3084  0000BC                     	ds	2
  3085  0000BE                     _seed:
  3086                           	opt callstack 0
  3087  0000BE                     	ds	8
  3088                           
  3089                           	psect	dataBANK0
  3090  0000C6                     __pdataBANK0:
  3091                           	opt callstack 0
  3092  0000C6                     _R:
  3093                           	opt callstack 0
  3094  0000C6                     	ds	40
  3095  0000EE                     stoa@F1166:
  3096                           	opt callstack 0
  3097  0000EE                     	ds	7
  3098  0000F5                     _H:
  3099                           	opt callstack 0
  3100  0000F5                     	ds	7
  3101                           
  3102                           	psect	dataBANK1
  3103  000100                     __pdataBANK1:
  3104                           	opt callstack 0
  3105  000100                     _C:
  3106                           	opt callstack 0
  3107  000100                     	ds	243
  3108                           
  3109                           	psect	bssBANK2
  3110  0002BC                     __pbssBANK2:
  3111                           	opt callstack 0
  3112  0002BC                     _S:
  3113                           	opt callstack 0
  3114  0002BC                     	ds	41
  3115  0002E5                     _tickCount:
  3116                           	opt callstack 0
  3117  0002E5                     	ds	24
  3118                           
  3119                           	psect	dataBANK2
  3120  000200                     __pdataBANK2:
  3121                           	opt callstack 0
  3122  000200                     _V:
  3123                           	opt callstack 0
  3124  000200                     	ds	188
  3125                           
  3126                           	psect	bssBANK3
  3127  000300                     __pbssBANK3:
  3128                           	opt callstack 0
  3129  000300                     lp_filter@smooth:
  3130                           	opt callstack 0
  3131  000300                     	ds	84
  3132  000354                     _uart2TxBuffer:
  3133                           	opt callstack 0
  3134  000354                     	ds	64
  3135  000394                     _dbuf:
  3136                           	opt callstack 0
  3137  000394                     	ds	80
  3138                           
  3139                           	psect	bssBANK4
  3140  000400                     __pbssBANK4:
  3141                           	opt callstack 0
  3142  000400                     _ring_buf2:
  3143                           	opt callstack 0
  3144  000400                     	ds	67
  3145  000443                     _ring_buf1:
  3146                           	opt callstack 0
  3147  000443                     	ds	67
  3148                           
  3149                           	psect	bssBANK5
  3150  000500                     __pbssBANK5:
  3151                           	opt callstack 0
  3152  000500                     _uart2RxBuffer:
  3153                           	opt callstack 0
  3154  000500                     	ds	255
  3155                           
  3156                           	psect	bssBIGRAM
  3157  0007FF                     __pbssBIGRAM:
  3158                           	opt callstack 0
  3159  0007FF                     _D:
  3160                           	opt callstack 0
  3161  0007FF                     	ds	290
  3162                           
  3163                           	psect	dataBIGRAM
  3164  0005FF                     __pdataBIGRAM:
  3165                           	opt callstack 0
  3166  0005FF                     _port_data:
  3167                           	opt callstack 0
  3168  0005FF                     	ds	512
  3169                           
  3170                           	psect	cstackBANK3
  3171  0003E4                     __pcstackBANK3:
  3172                           	opt callstack 0
  3173  0003E4                     ??_TMR3_ISR:
  3174                           
  3175                           ; 1 bytes @ 0x0
  3176  0003E4                     	ds	25
  3177                           
  3178                           	psect	cstackCOMRAM
  3179  000038                     __pcstackCOMRAM:
  3180                           	opt callstack 0
  3181  000038                     ??_ADCC_ThresholdISR:
  3182  000038                     
  3183                           ; 1 bytes @ 0x0
  3184  000038                     	ds	5
  3185  00003D                     ??_TMR6_ISR:
  3186                           
  3187                           ; 1 bytes @ 0x5
  3188  00003D                     	ds	1
  3189  00003E                     ??_INT1_ISR:
  3190  00003E                     
  3191                           ; 1 bytes @ 0x6
  3192  00003E                     	ds	4
  3193  000042                     ??_TMR5_ISR:
  3194                           
  3195                           ; 1 bytes @ 0xA
  3196  000042                     	ds	4
  3197                           
  3198 ;;
  3199 ;;Main: autosize = 6, tempsize = 0, incstack = 0, save=0
  3200 ;;
  3201 ;; *************** function _main *****************
  3202 ;; Defined at:
  3203 ;;		line 174 in file "main.c"
  3204 ;; Parameters:    Size  Location     Type
  3205 ;;		None
  3206 ;; Auto vars:     Size  Location     Type
  3207 ;;  k               1  [STACK] unsigned char 
  3208 ;;  j               1  [STACK] unsigned char 
  3209 ;;  i               1  [STACK] unsigned char 
  3210 ;;  inp_index       1  [STACK] unsigned char 
  3211 ;;  mode            1  [STACK] enum E17013
  3212 ;;  i_ror           1  [STACK] unsigned char 
  3213 ;; Return value:  Size  Location     Type
  3214 ;;                  1  [STACK] void 
  3215 ;; Registers used:
  3216 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  3217 ;; Tracked objects:
  3218 ;;		On entry : 0/0
  3219 ;;		On exit  : 0/0
  3220 ;;		Unchanged: 0/0
  3221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3225 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3226 ;;Total ram usage:        0 bytes
  3227 ;; Hardware stack levels required when called:   28
  3228 ;; This function calls:
  3229 ;;		_SYSTEM_Initialize
  3230 ;;		_StartTimer
  3231 ;;		_TimerDone
  3232 ;;		_WaitMs
  3233 ;;		___flge
  3234 ;;		_calc_model_data
  3235 ;;		_calc_ror_data
  3236 ;;		_check_adc_scan
  3237 ;;		_check_enter_button
  3238 ;;		_check_help
  3239 ;;		_clear_adc_scan
  3240 ;;		_clear_hid_pflags
  3241 ;;		_convert_adc_data
  3242 ;;		_eaDogM_WriteCommand
  3243 ;;		_get_raw_result
  3244 ;;		_get_switch
  3245 ;;		_get_vterm_ptr
  3246 ;;		_hid_display
  3247 ;;		_init_bsoc
  3248 ;;		_init_display
  3249 ;;		_init_port_dma
  3250 ;;		_lp_filter
  3251 ;;		_mode_lamp_dim
  3252 ;;		_set_display_info
  3253 ;;		_set_load_relay_one
  3254 ;;		_set_load_relay_two
  3255 ;;		_set_vterm
  3256 ;;		_sprintf
  3257 ;;		_srand
  3258 ;;		_start_adc_scan
  3259 ;;		_start_switch_handler
  3260 ;;		_static_soc
  3261 ;;		_update_lcd
  3262 ;; This function is called by:
  3263 ;;		Startup code after reset
  3264 ;; This function uses a reentrant model
  3265 ;;
  3266                           
  3267                           	psect	text0
  3268  0121F0                     __ptext0:
  3269                           	opt callstack 0
  3270  0121F0                     _main:
  3271                           	opt callstack 0
  3272                           
  3273                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3274  0121F0  0E06               	movlw	6
  3275  0121F2  26E1               	addwf	fsr1l,f,c
  3276  0121F4  0E00               	movlw	0
  3277  0121F6  22E2               	addwfc	fsr1h,f,c
  3278                           
  3279                           ;main.c: 176:  UI_STATES mode;;main.c: 177:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC, i_ror;
  3280                           ;stkvar	_inp_index @ sp[(-6)+3]
  3281                           
  3282                           ;incstack = 0
  3283  0121F8  0EFD               	movlw	-3
  3284  0121FA  6AE3               	clrf	plusw1,c
  3285                           
  3286                           ;stkvar	_i @ sp[(-6)+2]
  3287  0121FC  0EFC               	movlw	-4
  3288  0121FE  6AE3               	clrf	plusw1,c
  3289                           
  3290                           ;stkvar	_j @ sp[(-6)+1]
  3291  012200  0EFB               	movlw	-5
  3292  012202  6AE3               	clrf	plusw1,c
  3293  012204  2AE3               	incf	plusw1,f,c
  3294                           
  3295                           ;stkvar	_k @ sp[(-6)+0]
  3296  012206  0EFA               	movlw	-6
  3297  012208  6AE3               	clrf	plusw1,c
  3298  01220A  82E3               	bsf	plusw1,1,c
  3299                           
  3300                           ;main.c: 180:  SYSTEM_Initialize();
  3301  01220C  EC97  F0CF         	call	_SYSTEM_Initialize	;wreg free
  3302                           
  3303                           ; BSR set to: 60
  3304                           ;main.c: 183:  (INTCON0bits.GIEH = 1);
  3305  012210  8ED2               	bsf	210,7,c	;volatile
  3306                           
  3307                           ; BSR set to: 60
  3308                           ;main.c: 186:  (INTCON0bits.GIEL = 1);
  3309  012212  8CD2               	bsf	210,6,c	;volatile
  3310                           
  3311                           ; BSR set to: 60
  3312                           ;main.c: 188:  V.ui_state = UI_STATE_INIT;
  3313  012214  0102               	movlb	2	; () banked
  3314  012216  6B00               	clrf	_V& (0+255),b	;volatile
  3315                           
  3316                           ; BSR set to: 2
  3317                           ;main.c: 193:  WaitMs(300);
  3318  012218  0E2C               	movlw	44
  3319  01221A  6EE6               	movwf	postinc1,c
  3320  01221C  0E01               	movlw	1
  3321  01221E  6EE6               	movwf	postinc1,c
  3322  012220  ECA8  F0D1         	call	_WaitMs	;wreg free
  3323                           
  3324                           ;main.c: 194:  if (PORTBbits.RB0) {
  3325  012224  A0CB               	btfss	203,0,c	;volatile
  3326  012226  D004               	goto	l12126
  3327                           
  3328                           ;main.c: 195:   mode = UI_STATE_HOST;
  3329                           ;stkvar	_mode @ sp[(-6)+4]
  3330  012228  0EFE               	movlw	-2
  3331  01222A  6AE3               	clrf	plusw1,c
  3332  01222C  2AE3               	incf	plusw1,f,c
  3333                           
  3334                           ;main.c: 196:  } else {
  3335  01222E  D004               	goto	l12128
  3336  012230                     l12126:
  3337                           
  3338                           ;main.c: 197:   mode = UI_STATE_LOG;
  3339                           ;stkvar	_mode @ sp[(-6)+4]
  3340  012230  0EFE               	movlw	-2
  3341  012232  6AE3               	clrf	plusw1,c
  3342  012234  80E3               	bsf	plusw1,0,c
  3343  012236  82E3               	bsf	plusw1,1,c	;indir
  3344  012238                     l12128:
  3345                           
  3346                           ;main.c: 200:  if (mode == UI_STATE_HOST) {
  3347                           ;stkvar	_mode @ sp[(-6)+4]
  3348  012238  0EFE               	movlw	-2
  3349  01223A  04E3               	decf	plusw1,w,c
  3350  01223C  A4D8               	btfss	status,2,c
  3351  01223E  D007               	goto	l1314
  3352                           
  3353                           ;main.c: 201:   do { LATDbits.LATD0 = 1; } while(0);
  3354  012240  80BD               	bsf	189,0,c	;volatile
  3355                           
  3356                           ;main.c: 202:   V.mode_pwm = 70;
  3357  012242  0E00               	movlw	0
  3358  012244  0102               	movlb	2	; () banked
  3359  012246  6F96               	movwf	(_V+150)& (0+255),b	;volatile
  3360  012248  0E46               	movlw	70
  3361  01224A  6F95               	movwf	(_V+149)& (0+255),b	;volatile
  3362                           
  3363                           ;main.c: 203:  } else {
  3364  01224C  D004               	goto	l12132
  3365  01224E                     l1314:
  3366  01224E  90BD               	bcf	189,0,c	;volatile
  3367                           
  3368                           ;main.c: 205:   V.mode_pwm = 0;
  3369  012250  0102               	movlb	2	; () banked
  3370  012252  6B95               	clrf	(_V+149)& (0+255),b	;volatile
  3371  012254  6B96               	clrf	(_V+150)& (0+255),b	;volatile
  3372  012256                     l12132:
  3373                           
  3374                           ; BSR set to: 2
  3375                           ;main.c: 207:  mode_lamp_dim(V.mode_pwm);
  3376  012256  0060  FA57  FFE6   	movff	_V+149,postinc1
  3377  01225C  0060  FA5B  FFE6   	movff	_V+150,postinc1
  3378  012262  EC71  F0D5         	call	_mode_lamp_dim	;wreg free
  3379  012266  D18E               	goto	l12220
  3380  012268                     l12134:
  3381                           
  3382                           ; BSR set to: 2
  3383                           ;main.c: 215:    init_port_dma();
  3384  012268  EC2C  F0D2         	call	_init_port_dma	;wreg free
  3385                           
  3386                           ; BSR set to: 59
  3387                           ;main.c: 217:    init_display();
  3388  01226C  ECC0  F0C6         	call	_init_display	;wreg free
  3389                           
  3390                           ; BSR set to: 61
  3391                           ;main.c: 218:    eaDogM_WriteCommand(0b00001100);
  3392  012270  0E0C               	movlw	12
  3393  012272  6EE6               	movwf	postinc1,c
  3394  012274  ECD5  F0D5         	call	_eaDogM_WriteCommand	;wreg free
  3395                           
  3396                           ; BSR set to: 0
  3397                           ;main.c: 222:    set_load_relay_one(1);
  3398  012278  0E01               	movlw	1
  3399  01227A  6EE6               	movwf	postinc1,c
  3400  01227C  ECC5  F0D5         	call	_set_load_relay_one	;wreg free
  3401                           
  3402                           ;main.c: 223:    set_load_relay_two(1);
  3403  012280  0E01               	movlw	1
  3404  012282  6EE6               	movwf	postinc1,c
  3405  012284  ECBD  F0D5         	call	_set_load_relay_two	;wreg free
  3406                           
  3407                           ;main.c: 225:    V.ui_state = mode;
  3408                           ;stkvar	_mode @ sp[(-6)+4]
  3409  012288  0EFE               	movlw	-2
  3410  01228A  006F FF8C  F200    	movff	plusw1,_V	;volatile
  3411                           
  3412                           ;main.c: 226:    srand(1957);
  3413  012290  0EA5               	movlw	165
  3414  012292  6EE6               	movwf	postinc1,c
  3415  012294  0E07               	movlw	7
  3416  012296  6EE6               	movwf	postinc1,c
  3417  012298  ECDE  F0D1         	call	_srand	;wreg free
  3418                           
  3419                           ; BSR set to: 0
  3420                           ;main.c: 227:    set_vterm(0);
  3421  01229C  0E00               	movlw	0
  3422  01229E  6EE6               	movwf	postinc1,c
  3423  0122A0  ECFE  F0D4         	call	_set_vterm	;wreg free
  3424                           
  3425                           ;main.c: 228:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON  ");
  3426  0122A4  0E62               	movlw	low STR_1
  3427  0122A6  6EE6               	movwf	postinc1,c
  3428  0122A8  0EFF               	movlw	high STR_1
  3429  0122AA  6EE6               	movwf	postinc1,c
  3430  0122AC  0E00               	movlw	0
  3431  0122AE  6EE6               	movwf	postinc1,c
  3432  0122B0  0E00               	movlw	0
  3433  0122B2  6EE6               	movwf	postinc1,c
  3434  0122B4  EC8C  F0D2         	call	_get_vterm_ptr	;wreg free
  3435  0122B8  0060  F007  FFE6   	movff	btemp,postinc1
  3436  0122BE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3437  0122C4  0E04               	movlw	4
  3438  0122C6  6EE6               	movwf	postinc1,c
  3439  0122C8  ECBF  F0C4         	call	_sprintf	;wreg free
  3440                           
  3441                           ; BSR set to: 0
  3442                           ;main.c: 229:    sprintf(get_vterm_ptr(1, 0), " Version %s   ", "1.002");
  3443  0122CC  0ED1               	movlw	low STR_3
  3444  0122CE  6EE6               	movwf	postinc1,c
  3445  0122D0  0EFF               	movlw	high STR_3
  3446  0122D2  6EE6               	movwf	postinc1,c
  3447  0122D4  0EA3               	movlw	low STR_2
  3448  0122D6  6EE6               	movwf	postinc1,c
  3449  0122D8  0EFF               	movlw	high STR_2
  3450  0122DA  6EE6               	movwf	postinc1,c
  3451  0122DC  0E00               	movlw	0
  3452  0122DE  6EE6               	movwf	postinc1,c
  3453  0122E0  0E01               	movlw	1
  3454  0122E2  6EE6               	movwf	postinc1,c
  3455  0122E4  EC8C  F0D2         	call	_get_vterm_ptr	;wreg free
  3456  0122E8  0060  F007  FFE6   	movff	btemp,postinc1
  3457  0122EE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3458  0122F4  0E06               	movlw	6
  3459  0122F6  6EE6               	movwf	postinc1,c
  3460  0122F8  ECBF  F0C4         	call	_sprintf	;wreg free
  3461                           
  3462                           ; BSR set to: 0
  3463                           ;main.c: 230:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK       ");
  3464  0122FC  0E51               	movlw	low STR_4
  3465  0122FE  6EE6               	movwf	postinc1,c
  3466  012300  0EFF               	movlw	high STR_4
  3467  012302  6EE6               	movwf	postinc1,c
  3468  012304  0E00               	movlw	0
  3469  012306  6EE6               	movwf	postinc1,c
  3470  012308  0E02               	movlw	2
  3471  01230A  6EE6               	movwf	postinc1,c
  3472  01230C  EC8C  F0D2         	call	_get_vterm_ptr	;wreg free
  3473  012310  0060  F007  FFE6   	movff	btemp,postinc1
  3474  012316  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3475  01231C  0E04               	movlw	4
  3476  01231E  6EE6               	movwf	postinc1,c
  3477  012320  ECBF  F0C4         	call	_sprintf	;wreg free
  3478                           
  3479                           ; BSR set to: 0
  3480                           ;main.c: 231:    sprintf(get_vterm_ptr(0, 2), "                ");
  3481  012324  0E82               	movlw	low (STR_41+2)
  3482  012326  6EE6               	movwf	postinc1,c
  3483  012328  0EFE               	movlw	high (STR_41+2)
  3484  01232A  6EE6               	movwf	postinc1,c
  3485  01232C  0E02               	movlw	2
  3486  01232E  6EE6               	movwf	postinc1,c
  3487  012330  0E00               	movlw	0
  3488  012332  6EE6               	movwf	postinc1,c
  3489  012334  EC8C  F0D2         	call	_get_vterm_ptr	;wreg free
  3490  012338  0060  F007  FFE6   	movff	btemp,postinc1
  3491  01233E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3492  012344  0E04               	movlw	4
  3493  012346  6EE6               	movwf	postinc1,c
  3494  012348  ECBF  F0C4         	call	_sprintf	;wreg free
  3495                           
  3496                           ; BSR set to: 0
  3497                           ;main.c: 232:    sprintf(get_vterm_ptr(1, 2), "                ");
  3498  01234C  0E82               	movlw	low (STR_41+2)
  3499  01234E  6EE6               	movwf	postinc1,c
  3500  012350  0EFE               	movlw	high (STR_41+2)
  3501  012352  6EE6               	movwf	postinc1,c
  3502  012354  0E02               	movlw	2
  3503  012356  6EE6               	movwf	postinc1,c
  3504  012358  0E01               	movlw	1
  3505  01235A  6EE6               	movwf	postinc1,c
  3506  01235C  EC8C  F0D2         	call	_get_vterm_ptr	;wreg free
  3507  012360  0060  F007  FFE6   	movff	btemp,postinc1
  3508  012366  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3509  01236C  0E04               	movlw	4
  3510  01236E  6EE6               	movwf	postinc1,c
  3511  012370  ECBF  F0C4         	call	_sprintf	;wreg free
  3512                           
  3513                           ; BSR set to: 0
  3514                           ;main.c: 233:    sprintf(get_vterm_ptr(2, 2), "                ");
  3515  012374  0E82               	movlw	low (STR_41+2)
  3516  012376  6EE6               	movwf	postinc1,c
  3517  012378  0EFE               	movlw	high (STR_41+2)
  3518  01237A  6EE6               	movwf	postinc1,c
  3519  01237C  0E02               	movlw	2
  3520  01237E  6EE6               	movwf	postinc1,c
  3521  012380  0E02               	movlw	2
  3522  012382  6EE6               	movwf	postinc1,c
  3523  012384  EC8C  F0D2         	call	_get_vterm_ptr	;wreg free
  3524  012388  0060  F007  FFE6   	movff	btemp,postinc1
  3525  01238E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3526  012394  0E04               	movlw	4
  3527  012396  6EE6               	movwf	postinc1,c
  3528  012398  ECBF  F0C4         	call	_sprintf	;wreg free
  3529                           
  3530                           ; BSR set to: 0
  3531                           ;main.c: 234:    update_lcd(0);
  3532  01239C  0E00               	movlw	0
  3533  01239E  6EE6               	movwf	postinc1,c
  3534  0123A0  EC37  F0C4         	call	_update_lcd	;wreg free
  3535                           
  3536                           ;main.c: 235:    WaitMs(1000);
  3537  0123A4  0EE8               	movlw	232
  3538  0123A6  6EE6               	movwf	postinc1,c
  3539  0123A8  0E03               	movlw	3
  3540  0123AA  6EE6               	movwf	postinc1,c
  3541  0123AC  ECA8  F0D1         	call	_WaitMs	;wreg free
  3542                           
  3543                           ;main.c: 236:    StartTimer(TMR_DISPLAY, 250);
  3544  0123B0  0EFA               	movlw	250
  3545  0123B2  6EE6               	movwf	postinc1,c
  3546  0123B4  0E00               	movlw	0
  3547  0123B6  6EE6               	movwf	postinc1,c
  3548  0123B8  0E0A               	movlw	10
  3549  0123BA  6EE6               	movwf	postinc1,c
  3550  0123BC  ECD2  F0D0         	call	_StartTimer	;wreg free
  3551                           
  3552                           ;main.c: 237:    StartTimer(TMR_ADC, 200);
  3553  0123C0  0EC8               	movlw	200
  3554  0123C2  6EE6               	movwf	postinc1,c
  3555  0123C4  0E00               	movlw	0
  3556  0123C6  6EE6               	movwf	postinc1,c
  3557  0123C8  0E01               	movlw	1
  3558  0123CA  6EE6               	movwf	postinc1,c
  3559  0123CC  ECD2  F0D0         	call	_StartTimer	;wreg free
  3560                           
  3561                           ;main.c: 238:    StartTimer(TMR_INFO, 3000);
  3562  0123D0  0EB8               	movlw	184
  3563  0123D2  6EE6               	movwf	postinc1,c
  3564  0123D4  0E0B               	movlw	11
  3565  0123D6  6EE6               	movwf	postinc1,c
  3566  0123D8  0E07               	movlw	7
  3567  0123DA  6EE6               	movwf	postinc1,c
  3568  0123DC  ECD2  F0D0         	call	_StartTimer	;wreg free
  3569                           
  3570                           ;main.c: 239:    StartTimer(TMR_FLIPPER, 1500);
  3571  0123E0  0EDC               	movlw	220
  3572  0123E2  6EE6               	movwf	postinc1,c
  3573  0123E4  0E05               	movlw	5
  3574  0123E6  6EE6               	movwf	postinc1,c
  3575  0123E8  0E0B               	movlw	11
  3576  0123EA  6EE6               	movwf	postinc1,c
  3577  0123EC  ECD2  F0D0         	call	_StartTimer	;wreg free
  3578                           
  3579                           ;main.c: 240:    StartTimer(TMR_HELPDIS, 3000);
  3580  0123F0  0EB8               	movlw	184
  3581  0123F2  6EE6               	movwf	postinc1,c
  3582  0123F4  0E0B               	movlw	11
  3583  0123F6  6EE6               	movwf	postinc1,c
  3584  0123F8  0E09               	movlw	9
  3585  0123FA  6EE6               	movwf	postinc1,c
  3586  0123FC  ECD2  F0D0         	call	_StartTimer	;wreg free
  3587                           
  3588                           ;main.c: 242:    start_adc_scan();
  3589  012400  ECAA  F0CD         	call	_start_adc_scan	;wreg free
  3590                           
  3591                           ;main.c: 243:    start_switch_handler();
  3592  012404  ECDF  F0D4         	call	_start_switch_handler	;wreg free
  3593                           
  3594                           ; BSR set to: 57
  3595                           ;main.c: 244:    WaitMs(1000);
  3596  012408  0EE8               	movlw	232
  3597  01240A  6EE6               	movwf	postinc1,c
  3598  01240C  0E03               	movlw	3
  3599  01240E  6EE6               	movwf	postinc1,c
  3600  012410  ECA8  F0D1         	call	_WaitMs	;wreg free
  3601                           
  3602                           ;main.c: 249:    i_ror = 1;
  3603                           ;stkvar	_i_ror @ sp[(-6)+5]
  3604  012414  0EFF               	movlw	-1
  3605  012416  6AE3               	clrf	plusw1,c
  3606  012418  2AE3               	incf	plusw1,f,c
  3607  01241A                     l12184:
  3608                           
  3609                           ;main.c: 251:     calc_ror_data();
  3610  01241A  EC85  F0BC         	call	_calc_ror_data	;wreg free
  3611                           
  3612                           ;main.c: 252:     sprintf(get_vterm_ptr(2, 0), "S SOC %d %2.4f       ", i_ror, C.bv_ror)
      +                          ;
  3613  01241E  0060  F5A3  FFE6   	movff	_C+104,postinc1
  3614  012424  0060  F5A7  FFE6   	movff	_C+105,postinc1
  3615  01242A  0060  F5AB  FFE6   	movff	_C+106,postinc1
  3616  012430  0060  F5AF  FFE6   	movff	_C+107,postinc1
  3617                           
  3618                           ;stkvar	_i_ror @ sp[(-10)+5]
  3619  012436  0EFB               	movlw	-5
  3620  012438  50E3               	movf	plusw1,w,c
  3621  01243A  6EE6               	movwf	postinc1,c
  3622  01243C  0E00               	movlw	0
  3623  01243E  6EE6               	movwf	postinc1,c
  3624  012440  0E40               	movlw	low STR_8
  3625  012442  6EE6               	movwf	postinc1,c
  3626  012444  0EFE               	movlw	high STR_8
  3627  012446  6EE6               	movwf	postinc1,c
  3628  012448  0E00               	movlw	0
  3629  01244A  6EE6               	movwf	postinc1,c
  3630  01244C  0E02               	movlw	2
  3631  01244E  6EE6               	movwf	postinc1,c
  3632  012450  EC8C  F0D2         	call	_get_vterm_ptr	;wreg free
  3633  012454  0060  F007  FFE6   	movff	btemp,postinc1
  3634  01245A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3635  012460  0E0A               	movlw	10
  3636  012462  6EE6               	movwf	postinc1,c
  3637  012464  ECBF  F0C4         	call	_sprintf	;wreg free
  3638                           
  3639                           ; BSR set to: 0
  3640                           ;main.c: 253:     update_lcd(0);
  3641  012468  0E00               	movlw	0
  3642  01246A  6EE6               	movwf	postinc1,c
  3643  01246C  EC37  F0C4         	call	_update_lcd	;wreg free
  3644                           
  3645                           ;main.c: 254:     WaitMs(5000);
  3646  012470  0E88               	movlw	136
  3647  012472  6EE6               	movwf	postinc1,c
  3648  012474  0E13               	movlw	19
  3649  012476  6EE6               	movwf	postinc1,c
  3650  012478  ECA8  F0D1         	call	_WaitMs	;wreg free
  3651                           
  3652                           ;main.c: 255:     clear_adc_scan();
  3653  01247C  EC23  F0D6         	call	_clear_adc_scan	;wreg free
  3654                           
  3655                           ; BSR set to: 0
  3656                           ;main.c: 256:     start_adc_scan();
  3657  012480  ECAA  F0CD         	call	_start_adc_scan	;wreg free
  3658                           
  3659                           ;main.c: 257:     WaitMs(500);
  3660  012484  0EF4               	movlw	244
  3661  012486  6EE6               	movwf	postinc1,c
  3662  012488  0E01               	movlw	1
  3663  01248A  6EE6               	movwf	postinc1,c
  3664  01248C  ECA8  F0D1         	call	_WaitMs	;wreg free
  3665                           
  3666                           ;main.c: 258:    } while ((i_ror++ < 12) && (C.bv_ror > 0.005));
  3667                           ;stkvar	_i_ror @ sp[(-6)+5]
  3668  012490  0EFF               	movlw	-1
  3669  012492  006F FF8C  F00C    	movff	plusw1,btemp+11
  3670  012498  2A0C               	incf	(btemp+11)^0,f,c
  3671  01249A  0060  F033  FFE3   	movff	btemp+11,plusw1
  3672  0124A0  060C               	decf	(btemp+11)^0,f,c
  3673  0124A2  0E0C               	movlw	12
  3674  0124A4  600C               	cpfslt	(btemp+11)^0,c
  3675  0124A6  D018               	goto	u11750
  3676  0124A8  0060  F5A3  FFE6   	movff	_C+104,postinc1
  3677  0124AE  0060  F5A7  FFE6   	movff	_C+105,postinc1
  3678  0124B4  0060  F5AB  FFE6   	movff	_C+106,postinc1
  3679  0124BA  0060  F5AF  FFE6   	movff	_C+107,postinc1
  3680  0124C0  0E0A               	movlw	10
  3681  0124C2  6EE6               	movwf	postinc1,c
  3682  0124C4  0ED7               	movlw	215
  3683  0124C6  6EE6               	movwf	postinc1,c
  3684  0124C8  0EA3               	movlw	163
  3685  0124CA  6EE6               	movwf	postinc1,c
  3686  0124CC  0E3B               	movlw	59
  3687  0124CE  6EE6               	movwf	postinc1,c
  3688  0124D0  ECB0  F0BE         	call	___flge	;wreg free
  3689  0124D4  A001               	btfss	btemp& (0+255),0,c
  3690  0124D6  D7A1               	goto	l12184
  3691  0124D8                     u11750:
  3692                           
  3693                           ;main.c: 260:    static_soc();
  3694  0124D8  EC50  F0D4         	call	_static_soc	;wreg free
  3695                           
  3696                           ; BSR set to: 1
  3697                           ;main.c: 261:    init_bsoc();
  3698  0124DC  ECF8  F0BD         	call	_init_bsoc	;wreg free
  3699                           
  3700                           ;main.c: 262:    set_load_relay_one(0);
  3701  0124E0  0E00               	movlw	0
  3702  0124E2  6EE6               	movwf	postinc1,c
  3703  0124E4  ECC5  F0D5         	call	_set_load_relay_one	;wreg free
  3704                           
  3705                           ;main.c: 263:    set_load_relay_two(0);
  3706  0124E8  0E00               	movlw	0
  3707  0124EA  6EE6               	movwf	postinc1,c
  3708  0124EC  ECBD  F0D5         	call	_set_load_relay_two	;wreg free
  3709                           
  3710                           ;main.c: 264:    sprintf(get_vterm_ptr(0, 0), "Static SOC %d        ", C.soc);
  3711  0124F0  0060  F6AB  FFE6   	movff	_C+170,postinc1
  3712  0124F6  0060  F6AF  FFE6   	movff	_C+171,postinc1
  3713  0124FC  0E2A               	movlw	low STR_9
  3714  0124FE  6EE6               	movwf	postinc1,c
  3715  012500  0EFE               	movlw	high STR_9
  3716  012502  6EE6               	movwf	postinc1,c
  3717  012504  0E00               	movlw	0
  3718  012506  6EE6               	movwf	postinc1,c
  3719  012508  0E00               	movlw	0
  3720  01250A  6EE6               	movwf	postinc1,c
  3721  01250C  EC8C  F0D2         	call	_get_vterm_ptr	;wreg free
  3722  012510  0060  F007  FFE6   	movff	btemp,postinc1
  3723  012516  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3724  01251C  0E06               	movlw	6
  3725  01251E  6EE6               	movwf	postinc1,c
  3726  012520  ECBF  F0C4         	call	_sprintf	;wreg free
  3727                           
  3728                           ; BSR set to: 0
  3729                           ;main.c: 265:    sprintf(get_vterm_ptr(0, 0), "Battery Ah %3.2f     ", C.dynamic_ah);
  3730  012524  0060  F633  FFE6   	movff	_C+140,postinc1
  3731  01252A  0060  F637  FFE6   	movff	_C+141,postinc1
  3732  012530  0060  F63B  FFE6   	movff	_C+142,postinc1
  3733  012536  0060  F63F  FFE6   	movff	_C+143,postinc1
  3734  01253C  0E56               	movlw	low STR_10
  3735  01253E  6EE6               	movwf	postinc1,c
  3736  012540  0EFE               	movlw	high STR_10
  3737  012542  6EE6               	movwf	postinc1,c
  3738  012544  0E00               	movlw	0
  3739  012546  6EE6               	movwf	postinc1,c
  3740  012548  0E00               	movlw	0
  3741  01254A  6EE6               	movwf	postinc1,c
  3742  01254C  EC8C  F0D2         	call	_get_vterm_ptr	;wreg free
  3743  012550  0060  F007  FFE6   	movff	btemp,postinc1
  3744  012556  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3745  01255C  0E08               	movlw	8
  3746  01255E  6EE6               	movwf	postinc1,c
  3747  012560  ECBF  F0C4         	call	_sprintf	;wreg free
  3748                           
  3749                           ; BSR set to: 0
  3750                           ;main.c: 266:    update_lcd(0);
  3751  012564  0E00               	movlw	0
  3752  012566  6EE6               	movwf	postinc1,c
  3753  012568  EC37  F0C4         	call	_update_lcd	;wreg free
  3754                           
  3755                           ;main.c: 267:    WaitMs(2000);
  3756  01256C  0ED0               	movlw	208
  3757  01256E  6EE6               	movwf	postinc1,c
  3758  012570  0E07               	movlw	7
  3759  012572  6EE6               	movwf	postinc1,c
  3760  012574  ECA8  F0D1         	call	_WaitMs	;wreg free
  3761                           
  3762                           ;main.c: 269:    break;
  3763  012578  D01C               	goto	l12222
  3764  01257A                     l1326:
  3765                           
  3766                           ; BSR set to: 2
  3767                           ;main.c: 275:    P.SYSTEM_STABLE = 1;
  3768  01257A  0100               	movlb	0	; () banked
  3769  01257C  8199               	bsf	(_P+1)& (0+255),0,b	;volatile
  3770                           
  3771                           ;main.c: 276:    break;
  3772  01257E  D019               	goto	l12222
  3773  012580                     l1328:
  3774                           
  3775                           ; BSR set to: 2
  3776                           ;main.c: 279:    V.ui_state = UI_STATE_INIT;
  3777  012580  6B00               	clrf	_V& (0+255),b	;volatile
  3778                           
  3779                           ;main.c: 280:    break;
  3780  012582  D017               	goto	l12222
  3781  012584                     l12220:
  3782  012584  0102               	movlb	2	; () banked
  3783  012586  5100               	movf	_V& (0+255),w,b	;volatile
  3784  012588  6E0B               	movwf	(btemp+10)^0,c
  3785  01258A  6A0C               	clrf	(btemp+11)^0,c
  3786                           
  3787                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3788                           ; Switch size 1, requested type "simple"
  3789                           ; Number of cases is 1, Range of values is 0 to 0
  3790                           ; switch strategies available:
  3791                           ; Name         Instructions Cycles
  3792                           ; simple_byte            4     3 (average)
  3793                           ;	Chosen strategy is simple_byte
  3794  01258C  500C               	movf	(btemp+11)^0,w,c
  3795  01258E  0A00               	xorlw	0	; case 0
  3796  012590  A4D8               	btfss	status,2,c
  3797  012592  D7F6               	goto	l1328
  3798                           
  3799                           ; BSR set to: 2
  3800                           ; Switch size 1, requested type "simple"
  3801                           ; Number of cases is 5, Range of values is 0 to 5
  3802                           ; switch strategies available:
  3803                           ; Name         Instructions Cycles
  3804                           ; simple_byte           16     9 (average)
  3805                           ;	Chosen strategy is simple_byte
  3806  012594  500B               	movf	(btemp+10)^0,w,c
  3807  012596  0A00               	xorlw	0	; case 0
  3808  012598  B4D8               	btfsc	status,2,c
  3809  01259A  D666               	goto	l12134
  3810  01259C  0A01               	xorlw	1	; case 1
  3811  01259E  B4D8               	btfsc	status,2,c
  3812  0125A0  D008               	goto	l12222
  3813  0125A2  0A02               	xorlw	2	; case 3
  3814  0125A4  B4D8               	btfsc	status,2,c
  3815  0125A6  D005               	goto	l12222
  3816  0125A8  0A07               	xorlw	7	; case 4
  3817  0125AA  B4D8               	btfsc	status,2,c
  3818  0125AC  D7E6               	goto	l1326
  3819  0125AE  0A01               	xorlw	1	; case 5
  3820  0125B0  D7E7               	goto	l1328
  3821  0125B2                     l12222:
  3822                           
  3823                           ;main.c: 283:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  3824  0125B2  0E01               	movlw	1
  3825  0125B4  6EE6               	movwf	postinc1,c
  3826  0125B6  EC37  F0D3         	call	_TimerDone	;wreg free
  3827  0125BA  5001               	movf	btemp^0,w,c
  3828  0125BC  B4D8               	btfsc	status,2,c
  3829  0125BE  D013               	goto	l12234
  3830  0125C0  EC1B  F0D6         	call	_check_adc_scan	;wreg free
  3831  0125C4  5001               	movf	btemp^0,w,c
  3832  0125C6  B4D8               	btfsc	status,2,c
  3833  0125C8  D00E               	goto	l12234
  3834                           
  3835                           ;main.c: 287:    convert_adc_data();
  3836  0125CA  EC5F  F0C8         	call	_convert_adc_data	;wreg free
  3837                           
  3838                           ;main.c: 291:    clear_adc_scan();
  3839  0125CE  EC23  F0D6         	call	_clear_adc_scan	;wreg free
  3840                           
  3841                           ; BSR set to: 0
  3842                           ;main.c: 292:    start_adc_scan();
  3843  0125D2  ECAA  F0CD         	call	_start_adc_scan	;wreg free
  3844                           
  3845                           ;main.c: 293:    StartTimer(TMR_ADC, 200);
  3846  0125D6  0EC8               	movlw	200
  3847  0125D8  6EE6               	movwf	postinc1,c
  3848  0125DA  0E00               	movlw	0
  3849  0125DC  6EE6               	movwf	postinc1,c
  3850  0125DE  0E01               	movlw	1
  3851  0125E0  6EE6               	movwf	postinc1,c
  3852  0125E2  ECD2  F0D0         	call	_StartTimer	;wreg free
  3853  0125E6                     l12234:
  3854                           
  3855                           ;main.c: 300:   if (TimerDone(TMR_DISPLAY)) {
  3856                           
  3857                           ;main.c: 296:   if (V.ticks) {
  3858  0125E6  0E0A               	movlw	10
  3859  0125E8  6EE6               	movwf	postinc1,c
  3860  0125EA  EC37  F0D3         	call	_TimerDone	;wreg free
  3861  0125EE  5001               	movf	btemp^0,w,c
  3862  0125F0  B4D8               	btfsc	status,2,c
  3863  0125F2  D27F               	goto	l12276
  3864                           
  3865                           ;main.c: 301:    if (TimerDone(TMR_HELPDIS)) {
  3866  0125F4  0E09               	movlw	9
  3867  0125F6  6EE6               	movwf	postinc1,c
  3868  0125F8  EC37  F0D3         	call	_TimerDone	;wreg free
  3869  0125FC  5001               	movf	btemp^0,w,c
  3870  0125FE  B4D8               	btfsc	status,2,c
  3871  012600  D004               	goto	l12242
  3872                           
  3873                           ;main.c: 302:     set_display_info(DIS_STR);
  3874  012602  0E00               	movlw	0
  3875  012604  6EE6               	movwf	postinc1,c
  3876  012606  EC0D  F0D5         	call	_set_display_info	;wreg free
  3877  01260A                     l12242:
  3878                           
  3879                           ;main.c: 304:    calc_model_data();
  3880  01260A  EC6B  F0AA         	call	_calc_model_data	;wreg free
  3881                           
  3882                           ; BSR set to: 1
  3883                           ;main.c: 311:     hid_display(&H);
  3884                           
  3885                           ;main.c: 306:    if (0) {
  3886  01260E  0EF5               	movlw	_H& (0+255)
  3887  012610  6EE6               	movwf	postinc1,c
  3888  012612  ECC5  F0C5         	call	_hid_display	;wreg free
  3889                           
  3890                           ;main.c: 312:     switch (H.hid_display) {
  3891  012616  D248               	goto	l12268
  3892  012618                     l1336:
  3893                           
  3894                           ; BSR set to: 0
  3895                           ;main.c: 314:      V.calib = 0;
  3896  012618  0102               	movlb	2	; () banked
  3897  01261A  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  3898                           
  3899                           ; BSR set to: 2
  3900                           ;main.c: 315:      sprintf(get_vterm_ptr(0, 0), "PV   PWR %3.2f    ", C.p_pv);
  3901  01261C  0060  F5E3  FFE6   	movff	_C+120,postinc1
  3902  012622  0060  F5E7  FFE6   	movff	_C+121,postinc1
  3903  012628  0060  F5EB  FFE6   	movff	_C+122,postinc1
  3904  01262E  0060  F5EF  FFE6   	movff	_C+123,postinc1
  3905  012634  0ECC               	movlw	low STR_14
  3906  012636  6EE6               	movwf	postinc1,c
  3907  012638  0EFE               	movlw	high STR_14
  3908  01263A  6EE6               	movwf	postinc1,c
  3909  01263C  0E00               	movlw	0
  3910  01263E  6EE6               	movwf	postinc1,c
  3911  012640  0E00               	movlw	0
  3912  012642  6EE6               	movwf	postinc1,c
  3913  012644  EC8C  F0D2         	call	_get_vterm_ptr	;wreg free
  3914  012648  0060  F007  FFE6   	movff	btemp,postinc1
  3915  01264E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3916  012654  0E08               	movlw	8
  3917  012656  6EE6               	movwf	postinc1,c
  3918  012658  ECBF  F0C4         	call	_sprintf	;wreg free
  3919                           
  3920                           ;main.c: 316:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f    ", C.p_load);
  3921  01265C  0060  F5C3  FFE6   	movff	_C+112,postinc1
  3922  012662  0060  F5C7  FFE6   	movff	_C+113,postinc1
  3923  012668  0060  F5CB  FFE6   	movff	_C+114,postinc1
  3924  01266E  0060  F5CF  FFE6   	movff	_C+115,postinc1
  3925  012674  0EF2               	movlw	low STR_15
  3926  012676  6EE6               	movwf	postinc1,c
  3927  012678  0EFE               	movlw	high STR_15
  3928  01267A  6EE6               	movwf	postinc1,c
  3929  01267C  0E00               	movlw	0
  3930  01267E  6EE6               	movwf	postinc1,c
  3931  012680  0E01               	movlw	1
  3932  012682  6EE6               	movwf	postinc1,c
  3933  012684  EC8C  F0D2         	call	_get_vterm_ptr	;wreg free
  3934  012688  0060  F007  FFE6   	movff	btemp,postinc1
  3935  01268E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3936  012694  0E08               	movlw	8
  3937  012696  6EE6               	movwf	postinc1,c
  3938  012698  ECBF  F0C4         	call	_sprintf	;wreg free
  3939                           
  3940                           ;main.c: 317:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f    ", C.p_inverter);
  3941  01269C  0060  F5D3  FFE6   	movff	_C+116,postinc1
  3942  0126A2  0060  F5D7  FFE6   	movff	_C+117,postinc1
  3943  0126A8  0060  F5DB  FFE6   	movff	_C+118,postinc1
  3944  0126AE  0060  F5DF  FFE6   	movff	_C+119,postinc1
  3945  0126B4  0EDF               	movlw	low STR_16
  3946  0126B6  6EE6               	movwf	postinc1,c
  3947  0126B8  0EFE               	movlw	high STR_16
  3948  0126BA  6EE6               	movwf	postinc1,c
  3949  0126BC  0E00               	movlw	0
  3950  0126BE  6EE6               	movwf	postinc1,c
  3951  0126C0  0E02               	movlw	2
  3952  0126C2  6EE6               	movwf	postinc1,c
  3953  0126C4  EC8C  F0D2         	call	_get_vterm_ptr	;wreg free
  3954  0126C8  0060  F007  FFE6   	movff	btemp,postinc1
  3955  0126CE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3956  0126D4  0E08               	movlw	8
  3957  0126D6  6EE6               	movwf	postinc1,c
  3958  0126D8  ECBF  F0C4         	call	_sprintf	;wreg free
  3959                           
  3960                           ;main.c: 318:      break;
  3961  0126DC  D1FA               	goto	l12270
  3962  0126DE                     l1338:
  3963                           
  3964                           ; BSR set to: 0
  3965                           ;main.c: 320:      V.calib = 0;
  3966  0126DE  0102               	movlb	2	; () banked
  3967  0126E0  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  3968                           
  3969                           ; BSR set to: 2
  3970                           ;main.c: 321:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f ", C.calc[V_PV], C.ca
      +                          lc[C_PV]);
  3971  0126E2  0060  F413  FFE6   	movff	_C+4,postinc1
  3972  0126E8  0060  F417  FFE6   	movff	_C+5,postinc1
  3973  0126EE  0060  F41B  FFE6   	movff	_C+6,postinc1
  3974  0126F4  0060  F41F  FFE6   	movff	_C+7,postinc1
  3975  0126FA  0060  F453  FFE6   	movff	_C+20,postinc1
  3976  012700  0060  F457  FFE6   	movff	_C+21,postinc1
  3977  012706  0060  F45B  FFE6   	movff	_C+22,postinc1
  3978  01270C  0060  F45F  FFE6   	movff	_C+23,postinc1
  3979  012712  0E3E               	movlw	low STR_17
  3980  012714  6EE6               	movwf	postinc1,c
  3981  012716  0EFF               	movlw	high STR_17
  3982  012718  6EE6               	movwf	postinc1,c
  3983  01271A  0E00               	movlw	0
  3984  01271C  6EE6               	movwf	postinc1,c
  3985  01271E  0E00               	movlw	0
  3986  012720  6EE6               	movwf	postinc1,c
  3987  012722  EC8C  F0D2         	call	_get_vterm_ptr	;wreg free
  3988  012726  0060  F007  FFE6   	movff	btemp,postinc1
  3989  01272C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3990  012732  0E0C               	movlw	12
  3991  012734  6EE6               	movwf	postinc1,c
  3992  012736  ECBF  F0C4         	call	_sprintf	;wreg free
  3993                           
  3994                           ;main.c: 322:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f ", C.calc[V_BAT], C.c
      +                          alc[C_BATT]);
  3995  01273A  0060  F403  FFE6   	movff	_C,postinc1
  3996  012740  0060  F407  FFE6   	movff	_C+1,postinc1
  3997  012746  0060  F40B  FFE6   	movff	_C+2,postinc1
  3998  01274C  0060  F40F  FFE6   	movff	_C+3,postinc1
  3999  012752  0060  F443  FFE6   	movff	_C+16,postinc1
  4000  012758  0060  F447  FFE6   	movff	_C+17,postinc1
  4001  01275E  0060  F44B  FFE6   	movff	_C+18,postinc1
  4002  012764  0060  F44F  FFE6   	movff	_C+19,postinc1
  4003  01276A  0E18               	movlw	low STR_18
  4004  01276C  6EE6               	movwf	postinc1,c
  4005  01276E  0EFF               	movlw	high STR_18
  4006  012770  6EE6               	movwf	postinc1,c
  4007  012772  0E00               	movlw	0
  4008  012774  6EE6               	movwf	postinc1,c
  4009  012776  0E01               	movlw	1
  4010  012778  6EE6               	movwf	postinc1,c
  4011  01277A  EC8C  F0D2         	call	_get_vterm_ptr	;wreg free
  4012  01277E  0060  F007  FFE6   	movff	btemp,postinc1
  4013  012784  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4014  01278A  0E0C               	movlw	12
  4015  01278C  6EE6               	movwf	postinc1,c
  4016  01278E  ECBF  F0C4         	call	_sprintf	;wreg free
  4017                           
  4018                           ;main.c: 323:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f ", C.calc[V_CC], C.c_
      +                          load);
  4019  012792  0060  F503  FFE6   	movff	_C+64,postinc1
  4020  012798  0060  F507  FFE6   	movff	_C+65,postinc1
  4021  01279E  0060  F50B  FFE6   	movff	_C+66,postinc1
  4022  0127A4  0060  F50F  FFE6   	movff	_C+67,postinc1
  4023  0127AA  0060  F423  FFE6   	movff	_C+8,postinc1
  4024  0127B0  0060  F427  FFE6   	movff	_C+9,postinc1
  4025  0127B6  0060  F42B  FFE6   	movff	_C+10,postinc1
  4026  0127BC  0060  F42F  FFE6   	movff	_C+11,postinc1
  4027  0127C2  0E2B               	movlw	low STR_19
  4028  0127C4  6EE6               	movwf	postinc1,c
  4029  0127C6  0EFF               	movlw	high STR_19
  4030  0127C8  6EE6               	movwf	postinc1,c
  4031  0127CA  0E00               	movlw	0
  4032  0127CC  6EE6               	movwf	postinc1,c
  4033  0127CE  0E02               	movlw	2
  4034  0127D0  6EE6               	movwf	postinc1,c
  4035  0127D2  EC8C  F0D2         	call	_get_vterm_ptr	;wreg free
  4036  0127D6  0060  F007  FFE6   	movff	btemp,postinc1
  4037  0127DC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4038  0127E2  0E0C               	movlw	12
  4039  0127E4  6EE6               	movwf	postinc1,c
  4040  0127E6  ECBF  F0C4         	call	_sprintf	;wreg free
  4041                           
  4042                           ;main.c: 324:      break;
  4043  0127EA  D173               	goto	l12270
  4044  0127EC                     l1339:
  4045                           
  4046                           ; BSR set to: 0
  4047                           ;main.c: 326:      V.calib = 0;
  4048  0127EC  0102               	movlb	2	; () banked
  4049  0127EE  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  4050                           
  4051                           ; BSR set to: 2
  4052                           ;main.c: 327:      sprintf(get_vterm_ptr(0, 0), "BATT PWR %3.2f    ", C.p_bat);
  4053  0127F0  0060  F5F3  FFE6   	movff	_C+124,postinc1
  4054  0127F6  0060  F5F7  FFE6   	movff	_C+125,postinc1
  4055  0127FC  0060  F5FB  FFE6   	movff	_C+126,postinc1
  4056  012802  0060  F5FF  FFE6   	movff	_C+127,postinc1
  4057  012808  0E05               	movlw	low STR_20
  4058  01280A  6EE6               	movwf	postinc1,c
  4059  01280C  0EFF               	movlw	high STR_20
  4060  01280E  6EE6               	movwf	postinc1,c
  4061  012810  0E00               	movlw	0
  4062  012812  6EE6               	movwf	postinc1,c
  4063  012814  0E00               	movlw	0
  4064  012816  6EE6               	movwf	postinc1,c
  4065  012818  EC8C  F0D2         	call	_get_vterm_ptr	;wreg free
  4066  01281C  0060  F007  FFE6   	movff	btemp,postinc1
  4067  012822  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4068  012828  0E08               	movlw	8
  4069  01282A  6EE6               	movwf	postinc1,c
  4070  01282C  ECBF  F0C4         	call	_sprintf	;wreg free
  4071                           
  4072                           ;main.c: 328:      sprintf(get_vterm_ptr(1, 0), "BAH %3.2f P%3.2f   ", C.dynamic_ah, C.p
      +                          v_ah);
  4073  012830  0060  F643  FFE6   	movff	_C+144,postinc1
  4074  012836  0060  F647  FFE6   	movff	_C+145,postinc1
  4075  01283C  0060  F64B  FFE6   	movff	_C+146,postinc1
  4076  012842  0060  F64F  FFE6   	movff	_C+147,postinc1
  4077  012848  0060  F633  FFE6   	movff	_C+140,postinc1
  4078  01284E  0060  F637  FFE6   	movff	_C+141,postinc1
  4079  012854  0060  F63B  FFE6   	movff	_C+142,postinc1
  4080  01285A  0060  F63F  FFE6   	movff	_C+143,postinc1
  4081  012860  0E6C               	movlw	low STR_21
  4082  012862  6EE6               	movwf	postinc1,c
  4083  012864  0EFE               	movlw	high STR_21
  4084  012866  6EE6               	movwf	postinc1,c
  4085  012868  0E00               	movlw	0
  4086  01286A  6EE6               	movwf	postinc1,c
  4087  01286C  0E01               	movlw	1
  4088  01286E  6EE6               	movwf	postinc1,c
  4089  012870  EC8C  F0D2         	call	_get_vterm_ptr	;wreg free
  4090  012874  0060  F007  FFE6   	movff	btemp,postinc1
  4091  01287A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4092  012880  0E0C               	movlw	12
  4093  012882  6EE6               	movwf	postinc1,c
  4094  012884  ECBF  F0C4         	call	_sprintf	;wreg free
  4095                           
  4096                           ;main.c: 329:      sprintf(get_vterm_ptr(2, 0), "SOC %d RUN %d     ", C.soc, C.runtime);
  4097  012888  0060  F6A3  FFE6   	movff	_C+168,postinc1
  4098  01288E  0060  F6A7  FFE6   	movff	_C+169,postinc1
  4099  012894  0060  F6AB  FFE6   	movff	_C+170,postinc1
  4100  01289A  0060  F6AF  FFE6   	movff	_C+171,postinc1
  4101  0128A0  0EB9               	movlw	low STR_22
  4102  0128A2  6EE6               	movwf	postinc1,c
  4103  0128A4  0EFE               	movlw	high STR_22
  4104  0128A6  6EE6               	movwf	postinc1,c
  4105  0128A8  0E00               	movlw	0
  4106  0128AA  6EE6               	movwf	postinc1,c
  4107  0128AC  0E02               	movlw	2
  4108  0128AE  6EE6               	movwf	postinc1,c
  4109  0128B0  EC8C  F0D2         	call	_get_vterm_ptr	;wreg free
  4110  0128B4  0060  F007  FFE6   	movff	btemp,postinc1
  4111  0128BA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4112  0128C0  0E08               	movlw	8
  4113  0128C2  6EE6               	movwf	postinc1,c
  4114  0128C4  ECBF  F0C4         	call	_sprintf	;wreg free
  4115                           
  4116                           ;main.c: 330:      break;
  4117  0128C8  D104               	goto	l12270
  4118  0128CA                     l12254:
  4119                           
  4120                           ; BSR set to: 0
  4121                           ;main.c: 332:      if (!V.calib) {
  4122  0128CA  0102               	movlb	2	; () banked
  4123  0128CC  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
  4124  0128CE  A4D8               	btfss	status,2,c
  4125  0128D0  D02D               	goto	l12258
  4126                           
  4127                           ; BSR set to: 2
  4128                           ;main.c: 333:       lp_filter(0.0, i, -1);
  4129  0128D2  0EFF               	movlw	255
  4130  0128D4  6EE6               	movwf	postinc1,c
  4131                           
  4132                           ;stkvar	_i @ sp[(-7)+2]
  4133  0128D6  0EFB               	movlw	-5
  4134  0128D8  50E3               	movf	plusw1,w,c
  4135  0128DA  6EE6               	movwf	postinc1,c
  4136  0128DC  0E00               	movlw	0
  4137  0128DE  6EE6               	movwf	postinc1,c
  4138  0128E0  0E00               	movlw	0
  4139  0128E2  6EE6               	movwf	postinc1,c
  4140  0128E4  0E00               	movlw	0
  4141  0128E6  6EE6               	movwf	postinc1,c
  4142  0128E8  0E00               	movlw	0
  4143  0128EA  6EE6               	movwf	postinc1,c
  4144  0128EC  EC1C  F0BA         	call	_lp_filter	;wreg free
  4145                           
  4146                           ;main.c: 334:       lp_filter(0.0, j, -1);
  4147  0128F0  0EFF               	movlw	255
  4148  0128F2  6EE6               	movwf	postinc1,c
  4149                           
  4150                           ;stkvar	_j @ sp[(-7)+1]
  4151  0128F4  0EFA               	movlw	-6
  4152  0128F6  50E3               	movf	plusw1,w,c
  4153  0128F8  6EE6               	movwf	postinc1,c
  4154  0128FA  0E00               	movlw	0
  4155  0128FC  6EE6               	movwf	postinc1,c
  4156  0128FE  0E00               	movlw	0
  4157  012900  6EE6               	movwf	postinc1,c
  4158  012902  0E00               	movlw	0
  4159  012904  6EE6               	movwf	postinc1,c
  4160  012906  0E00               	movlw	0
  4161  012908  6EE6               	movwf	postinc1,c
  4162  01290A  EC1C  F0BA         	call	_lp_filter	;wreg free
  4163                           
  4164                           ;main.c: 335:       lp_filter(0.0, k, -1);
  4165  01290E  0EFF               	movlw	255
  4166  012910  6EE6               	movwf	postinc1,c
  4167                           
  4168                           ;stkvar	_k @ sp[(-7)+0]
  4169  012912  0EF9               	movlw	-7
  4170  012914  50E3               	movf	plusw1,w,c
  4171  012916  6EE6               	movwf	postinc1,c
  4172  012918  0E00               	movlw	0
  4173  01291A  6EE6               	movwf	postinc1,c
  4174  01291C  0E00               	movlw	0
  4175  01291E  6EE6               	movwf	postinc1,c
  4176  012920  0E00               	movlw	0
  4177  012922  6EE6               	movwf	postinc1,c
  4178  012924  0E00               	movlw	0
  4179  012926  6EE6               	movwf	postinc1,c
  4180  012928  EC1C  F0BA         	call	_lp_filter	;wreg free
  4181  01292C                     l12258:
  4182                           
  4183                           ;main.c: 337:      V.calib = 1;
  4184  01292C  0E01               	movlw	1
  4185  01292E  0102               	movlb	2	; () banked
  4186  012930  6FAB               	movwf	(_V+171)& (0+255),b	;volatile
  4187                           
  4188                           ; BSR set to: 2
  4189                           ;main.c: 338:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f   %d  ", get_raw_result(i), C.
      +                          calc[i], get_switch(SSELECT));
  4190  012932  0E02               	movlw	2
  4191  012934  6EE6               	movwf	postinc1,c
  4192  012936  ECA3  F0D2         	call	_get_switch	;wreg free
  4193  01293A  5001               	movf	btemp^0,w,c
  4194  01293C  6EE6               	movwf	postinc1,c
  4195  01293E  0E00               	movlw	0
  4196  012940  6EE6               	movwf	postinc1,c
  4197                           
  4198                           ;stkvar	_i @ sp[(-8)+2]
  4199  012942  0EFA               	movlw	-6
  4200  012944  50E3               	movf	plusw1,w,c
  4201  012946  0D04               	mullw	4
  4202  012948  0E00               	movlw	low _C
  4203  01294A  24F3               	addwf	243,w,c
  4204  01294C  6ED9               	movwf	fsr2l,c
  4205  01294E  0E01               	movlw	high _C
  4206  012950  20F4               	addwfc	prodh,w,c
  4207  012952  6EDA               	movwf	fsr2h,c
  4208  012954  006F FF7B FFE6     	movff	postinc2,postinc1
  4209  01295A  006F FF7B FFE6     	movff	postinc2,postinc1
  4210  012960  006F FF7B FFE6     	movff	postinc2,postinc1
  4211  012966  006F FF7B FFE6     	movff	postinc2,postinc1
  4212                           
  4213                           ;stkvar	_i @ sp[(-12)+2]
  4214  01296C  0EF6               	movlw	-10
  4215  01296E  50E3               	movf	plusw1,w,c
  4216  012970  6EE6               	movwf	postinc1,c
  4217  012972  EC1C  F0D5         	call	_get_raw_result	;wreg free
  4218  012976  0060  F007  FFE6   	movff	btemp,postinc1
  4219  01297C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4220  012982  0E84               	movlw	low STR_11
  4221  012984  6EE6               	movwf	postinc1,c
  4222  012986  0EFF               	movlw	high STR_11
  4223  012988  6EE6               	movwf	postinc1,c
  4224  01298A  0E00               	movlw	0
  4225  01298C  6EE6               	movwf	postinc1,c
  4226  01298E  0E00               	movlw	0
  4227  012990  6EE6               	movwf	postinc1,c
  4228  012992  EC8C  F0D2         	call	_get_vterm_ptr	;wreg free
  4229  012996  0060  F007  FFE6   	movff	btemp,postinc1
  4230  01299C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4231  0129A2  0E0C               	movlw	12
  4232  0129A4  6EE6               	movwf	postinc1,c
  4233  0129A6  ECBF  F0C4         	call	_sprintf	;wreg free
  4234                           
  4235                           ; BSR set to: 0
  4236                           ;main.c: 339:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f   %d  ", get_raw_result(j), C.
      +                          calc[j], get_switch(SENTER));
  4237  0129AA  0E03               	movlw	3
  4238  0129AC  6EE6               	movwf	postinc1,c
  4239  0129AE  ECA3  F0D2         	call	_get_switch	;wreg free
  4240  0129B2  5001               	movf	btemp^0,w,c
  4241  0129B4  6EE6               	movwf	postinc1,c
  4242  0129B6  0E00               	movlw	0
  4243  0129B8  6EE6               	movwf	postinc1,c
  4244                           
  4245                           ;stkvar	_j @ sp[(-8)+1]
  4246  0129BA  0EF9               	movlw	-7
  4247  0129BC  50E3               	movf	plusw1,w,c
  4248  0129BE  0D04               	mullw	4
  4249  0129C0  0E00               	movlw	low _C
  4250  0129C2  24F3               	addwf	243,w,c
  4251  0129C4  6ED9               	movwf	fsr2l,c
  4252  0129C6  0E01               	movlw	high _C
  4253  0129C8  20F4               	addwfc	prodh,w,c
  4254  0129CA  6EDA               	movwf	fsr2h,c
  4255  0129CC  006F FF7B FFE6     	movff	postinc2,postinc1
  4256  0129D2  006F FF7B FFE6     	movff	postinc2,postinc1
  4257  0129D8  006F FF7B FFE6     	movff	postinc2,postinc1
  4258  0129DE  006F FF7B FFE6     	movff	postinc2,postinc1
  4259                           
  4260                           ;stkvar	_j @ sp[(-12)+1]
  4261  0129E4  0EF5               	movlw	-11
  4262  0129E6  50E3               	movf	plusw1,w,c
  4263  0129E8  6EE6               	movwf	postinc1,c
  4264  0129EA  EC1C  F0D5         	call	_get_raw_result	;wreg free
  4265  0129EE  0060  F007  FFE6   	movff	btemp,postinc1
  4266  0129F4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4267  0129FA  0E84               	movlw	low STR_11
  4268  0129FC  6EE6               	movwf	postinc1,c
  4269  0129FE  0EFF               	movlw	high STR_11
  4270  012A00  6EE6               	movwf	postinc1,c
  4271  012A02  0E00               	movlw	0
  4272  012A04  6EE6               	movwf	postinc1,c
  4273  012A06  0E01               	movlw	1
  4274  012A08  6EE6               	movwf	postinc1,c
  4275  012A0A  EC8C  F0D2         	call	_get_vterm_ptr	;wreg free
  4276  012A0E  0060  F007  FFE6   	movff	btemp,postinc1
  4277  012A14  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4278  012A1A  0E0C               	movlw	12
  4279  012A1C  6EE6               	movwf	postinc1,c
  4280  012A1E  ECBF  F0C4         	call	_sprintf	;wreg free
  4281                           
  4282                           ; BSR set to: 0
  4283                           ;main.c: 340:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d   #", get_raw_result(k), C
      +                          .calc[k], inp_index + 1);
  4284                           ;stkvar	_inp_index @ sp[(-6)+3]
  4285  012A22  0EFD               	movlw	-3
  4286  012A24  50E3               	movf	plusw1,w,c
  4287  012A26  6E0B               	movwf	(btemp+10)^0,c
  4288  012A28  6A0C               	clrf	(btemp+11)^0,c
  4289  012A2A  0E01               	movlw	1
  4290  012A2C  260B               	addwf	(btemp+10)^0,f,c
  4291  012A2E  0E00               	movlw	0
  4292  012A30  220C               	addwfc	(btemp+11)^0,f,c
  4293  012A32  0060  F02F  FFE6   	movff	btemp+10,postinc1
  4294  012A38  0060  F033  FFE6   	movff	btemp+11,postinc1
  4295                           
  4296                           ;stkvar	_k @ sp[(-8)+0]
  4297  012A3E  0EF8               	movlw	-8
  4298  012A40  50E3               	movf	plusw1,w,c
  4299  012A42  0D04               	mullw	4
  4300  012A44  0E00               	movlw	low _C
  4301  012A46  24F3               	addwf	243,w,c
  4302  012A48  6ED9               	movwf	fsr2l,c
  4303  012A4A  0E01               	movlw	high _C
  4304  012A4C  20F4               	addwfc	prodh,w,c
  4305  012A4E  6EDA               	movwf	fsr2h,c
  4306  012A50  006F FF7B FFE6     	movff	postinc2,postinc1
  4307  012A56  006F FF7B FFE6     	movff	postinc2,postinc1
  4308  012A5C  006F FF7B FFE6     	movff	postinc2,postinc1
  4309  012A62  006F FF7B FFE6     	movff	postinc2,postinc1
  4310                           
  4311                           ;stkvar	_k @ sp[(-12)+0]
  4312  012A68  0EF4               	movlw	-12
  4313  012A6A  50E3               	movf	plusw1,w,c
  4314  012A6C  6EE6               	movwf	postinc1,c
  4315  012A6E  EC1C  F0D5         	call	_get_raw_result	;wreg free
  4316  012A72  0060  F007  FFE6   	movff	btemp,postinc1
  4317  012A78  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4318  012A7E  0E73               	movlw	low STR_13
  4319  012A80  6EE6               	movwf	postinc1,c
  4320  012A82  0EFF               	movlw	high STR_13
  4321  012A84  6EE6               	movwf	postinc1,c
  4322  012A86  0E00               	movlw	0
  4323  012A88  6EE6               	movwf	postinc1,c
  4324  012A8A  0E02               	movlw	2
  4325  012A8C  6EE6               	movwf	postinc1,c
  4326  012A8E  EC8C  F0D2         	call	_get_vterm_ptr	;wreg free
  4327  012A92  0060  F007  FFE6   	movff	btemp,postinc1
  4328  012A98  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4329  012A9E  0E0C               	movlw	12
  4330  012AA0  6EE6               	movwf	postinc1,c
  4331  012AA2  ECBF  F0C4         	call	_sprintf	;wreg free
  4332                           
  4333                           ;main.c: 341:      break;
  4334  012AA6  D015               	goto	l12270
  4335  012AA8                     l12268:
  4336  012AA8  0100               	movlb	0	; () banked
  4337  012AAA  51F5               	movf	_H& (0+255),w,b
  4338  012AAC  6E0B               	movwf	(btemp+10)^0,c
  4339  012AAE  6A0C               	clrf	(btemp+11)^0,c
  4340                           
  4341                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4342                           ; Switch size 1, requested type "simple"
  4343                           ; Number of cases is 1, Range of values is 0 to 0
  4344                           ; switch strategies available:
  4345                           ; Name         Instructions Cycles
  4346                           ; simple_byte            4     3 (average)
  4347                           ;	Chosen strategy is simple_byte
  4348  012AB0  500C               	movf	(btemp+11)^0,w,c
  4349  012AB2  0A00               	xorlw	0	; case 0
  4350  012AB4  A4D8               	btfss	status,2,c
  4351  012AB6  D00D               	goto	l12270
  4352                           
  4353                           ; BSR set to: 0
  4354                           ; Switch size 1, requested type "simple"
  4355                           ; Number of cases is 4, Range of values is 0 to 3
  4356                           ; switch strategies available:
  4357                           ; Name         Instructions Cycles
  4358                           ; simple_byte           13     7 (average)
  4359                           ;	Chosen strategy is simple_byte
  4360  012AB8  500B               	movf	(btemp+10)^0,w,c
  4361  012ABA  0A00               	xorlw	0	; case 0
  4362  012ABC  B4D8               	btfsc	status,2,c
  4363  012ABE  D60F               	goto	l1338
  4364  012AC0  0A01               	xorlw	1	; case 1
  4365  012AC2  B4D8               	btfsc	status,2,c
  4366  012AC4  D5A9               	goto	l1336
  4367  012AC6  0A03               	xorlw	3	; case 2
  4368  012AC8  B4D8               	btfsc	status,2,c
  4369  012ACA  D690               	goto	l1339
  4370  012ACC  0A01               	xorlw	1	; case 3
  4371  012ACE  B4D8               	btfsc	status,2,c
  4372  012AD0  D6FC               	goto	l12254
  4373  012AD2                     l12270:
  4374                           
  4375                           ; BSR set to: 0
  4376                           ;main.c: 345:     clear_hid_pflags(&H);
  4377  012AD2  0EF5               	movlw	_H& (0+255)
  4378  012AD4  6EE6               	movwf	postinc1,c
  4379  012AD6  EC62  F0D4         	call	_clear_hid_pflags	;wreg free
  4380                           
  4381                           ;main.c: 347:    StartTimer(TMR_DISPLAY, 250);
  4382  012ADA  0EFA               	movlw	250
  4383  012ADC  6EE6               	movwf	postinc1,c
  4384  012ADE  0E00               	movlw	0
  4385  012AE0  6EE6               	movwf	postinc1,c
  4386  012AE2  0E0A               	movlw	10
  4387  012AE4  6EE6               	movwf	postinc1,c
  4388  012AE6  ECD2  F0D0         	call	_StartTimer	;wreg free
  4389                           
  4390                           ;main.c: 348:    update_lcd(0);
  4391  012AEA  0E00               	movlw	0
  4392  012AEC  6EE6               	movwf	postinc1,c
  4393  012AEE  EC37  F0C4         	call	_update_lcd	;wreg free
  4394  012AF2                     l12276:
  4395                           
  4396                           ;main.c: 354:   check_help(V.flipper);
  4397  012AF2  0102               	movlb	2	; () banked
  4398  012AF4  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  4399  012AF6  6EE6               	movwf	postinc1,c
  4400  012AF8  EC11  F0B7         	call	_check_help	;wreg free
  4401                           
  4402                           ;main.c: 356:   if (check_enter_button(&H)) {
  4403  012AFC  0EF5               	movlw	_H& (0+255)
  4404  012AFE  6EE6               	movwf	postinc1,c
  4405  012B00  ECF2  F0D0         	call	_check_enter_button	;wreg free
  4406  012B04  5001               	movf	btemp^0,w,c
  4407  012B06  B4D8               	btfsc	status,2,c
  4408  012B08  D062               	goto	l1343
  4409                           
  4410                           ;main.c: 357:    V.calib = 0;
  4411  012B0A  0102               	movlb	2	; () banked
  4412  012B0C  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  4413                           
  4414                           ; BSR set to: 2
  4415                           ;main.c: 358:    inp_index += 3;
  4416                           ;stkvar	_inp_index @ sp[(-6)+3]
  4417  012B0E  0EFD               	movlw	-3
  4418  012B10  006F FF8C  F001    	movff	plusw1,btemp
  4419  012B16  0E03               	movlw	3
  4420  012B18  2601               	addwf	btemp^0,f,c
  4421  012B1A  0EFD               	movlw	-3
  4422  012B1C  0060  F007  FFE3   	movff	btemp,plusw1
  4423                           
  4424                           ;main.c: 359:    if (inp_index > 9)
  4425                           ;stkvar	_inp_index @ sp[(-6)+3]
  4426  012B22  0EFD               	movlw	-3
  4427  012B24  006F FF8C  F001    	movff	plusw1,btemp
  4428  012B2A  0E09               	movlw	9
  4429  012B2C  6401               	cpfsgt	btemp^0,c
  4430  012B2E  D03A               	goto	l12304
  4431                           
  4432                           ; BSR set to: 2
  4433                           ;main.c: 360:     inp_index = 0;
  4434                           ;stkvar	_inp_index @ sp[(-6)+3]
  4435  012B30  0EFD               	movlw	-3
  4436  012B32  6AE3               	clrf	plusw1,c
  4437  012B34  D037               	goto	l12304
  4438  012B36                     l12286:
  4439                           
  4440                           ; BSR set to: 2
  4441                           ;main.c: 363:     i = C_BATT;
  4442                           ;stkvar	_i @ sp[(-6)+2]
  4443  012B36  0EFC               	movlw	-4
  4444  012B38  6AE3               	clrf	plusw1,c
  4445                           
  4446                           ; BSR set to: 2
  4447                           ;main.c: 364:     j = C_PV;
  4448                           ;stkvar	_j @ sp[(-6)+1]
  4449  012B3A  0EFB               	movlw	-5
  4450  012B3C  6AE3               	clrf	plusw1,c
  4451  012B3E  2AE3               	incf	plusw1,f,c
  4452                           
  4453                           ; BSR set to: 2
  4454                           ;main.c: 365:     k = V_CC;
  4455                           ;stkvar	_k @ sp[(-6)+0]
  4456  012B40  0EFA               	movlw	-6
  4457  012B42  6AE3               	clrf	plusw1,c
  4458  012B44  82E3               	bsf	plusw1,1,c
  4459                           
  4460                           ;main.c: 366:     break;
  4461  012B46  D043               	goto	l1343
  4462  012B48                     l12292:
  4463                           
  4464                           ; BSR set to: 2
  4465                           ;main.c: 368:     i = V_BAT;
  4466                           ;stkvar	_i @ sp[(-6)+2]
  4467  012B48  0EFC               	movlw	-4
  4468  012B4A  6AE3               	clrf	plusw1,c
  4469  012B4C  84E3               	bsf	plusw1,2,c
  4470                           
  4471                           ;main.c: 369:     j = V_PV;
  4472                           ;stkvar	_j @ sp[(-6)+1]
  4473  012B4E  0EFB               	movlw	-5
  4474  012B50  6AE3               	clrf	plusw1,c
  4475  012B52  80E3               	bsf	plusw1,0,c
  4476  012B54  84E3               	bsf	plusw1,2,c	;indir
  4477                           
  4478                           ;main.c: 370:     k = V_CBUS;
  4479                           ;stkvar	_k @ sp[(-6)+0]
  4480  012B56  0EFA               	movlw	-6
  4481  012B58  6AE3               	clrf	plusw1,c
  4482  012B5A  82E3               	bsf	plusw1,1,c
  4483  012B5C  84E3               	bsf	plusw1,2,c	;indir
  4484                           
  4485                           ;main.c: 371:     break;
  4486  012B5E  D037               	goto	l1343
  4487  012B60                     l12294:
  4488                           
  4489                           ; BSR set to: 2
  4490                           ;main.c: 373:     i = V_BBAT;
  4491                           ;stkvar	_i @ sp[(-6)+2]
  4492  012B60  0EFC               	movlw	-4
  4493  012B62  6AE3               	clrf	plusw1,c
  4494  012B64  82E3               	bsf	plusw1,1,c
  4495  012B66  86E3               	bsf	plusw1,3,c	;indir
  4496                           
  4497                           ; BSR set to: 2
  4498                           ;main.c: 374:     j = V_TEMP;
  4499  012B68  0E0B               	movlw	11
  4500  012B6A  6E0C               	movwf	(btemp+11)^0,c
  4501                           
  4502                           ;stkvar	_j @ sp[(-6)+1]
  4503  012B6C  0EFB               	movlw	-5
  4504  012B6E  0060  F033  FFE3   	movff	btemp+11,plusw1
  4505                           
  4506                           ; BSR set to: 2
  4507                           ;main.c: 375:     k = V_INVERTER;
  4508                           ;stkvar	_k @ sp[(-6)+0]
  4509  012B74  0EFA               	movlw	-6
  4510  012B76  6AE3               	clrf	plusw1,c
  4511  012B78  84E3               	bsf	plusw1,2,c
  4512  012B7A  86E3               	bsf	plusw1,3,c	;indir
  4513                           
  4514                           ;main.c: 376:     break;
  4515  012B7C  D028               	goto	l1343
  4516  012B7E                     l12300:
  4517                           
  4518                           ; BSR set to: 2
  4519                           ;main.c: 378:     i = channel_ANB5;
  4520  012B7E  0E0D               	movlw	13
  4521  012B80  6E0C               	movwf	(btemp+11)^0,c
  4522                           
  4523                           ;stkvar	_i @ sp[(-6)+2]
  4524  012B82  0EFC               	movlw	-4
  4525  012B84  0060  F033  FFE3   	movff	btemp+11,plusw1
  4526                           
  4527                           ;main.c: 379:     j = channel_ANB5;
  4528  012B8A  0E0D               	movlw	13
  4529  012B8C  6E0C               	movwf	(btemp+11)^0,c
  4530                           
  4531                           ;stkvar	_j @ sp[(-6)+1]
  4532  012B8E  0EFB               	movlw	-5
  4533  012B90  0060  F033  FFE3   	movff	btemp+11,plusw1
  4534                           
  4535                           ;main.c: 380:     k = channel_ANB5;
  4536  012B96  0E0D               	movlw	13
  4537  012B98  6E0C               	movwf	(btemp+11)^0,c
  4538                           
  4539                           ;stkvar	_k @ sp[(-6)+0]
  4540  012B9A  0EFA               	movlw	-6
  4541  012B9C  0060  F033  FFE3   	movff	btemp+11,plusw1
  4542                           
  4543                           ;main.c: 381:     break;
  4544  012BA2  D015               	goto	l1343
  4545  012BA4                     l12304:
  4546                           
  4547                           ; BSR set to: 2
  4548                           ;stkvar	_inp_index @ sp[(-6)+3]
  4549  012BA4  0EFD               	movlw	-3
  4550  012BA6  50E3               	movf	plusw1,w,c
  4551  012BA8  6E0B               	movwf	(btemp+10)^0,c
  4552  012BAA  6A0C               	clrf	(btemp+11)^0,c
  4553                           
  4554                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4555                           ; Switch size 1, requested type "simple"
  4556                           ; Number of cases is 1, Range of values is 0 to 0
  4557                           ; switch strategies available:
  4558                           ; Name         Instructions Cycles
  4559                           ; simple_byte            4     3 (average)
  4560                           ;	Chosen strategy is simple_byte
  4561  012BAC  500C               	movf	(btemp+11)^0,w,c
  4562  012BAE  0A00               	xorlw	0	; case 0
  4563  012BB0  A4D8               	btfss	status,2,c
  4564  012BB2  D00D               	goto	l1343
  4565                           
  4566                           ; BSR set to: 2
  4567                           ; Switch size 1, requested type "simple"
  4568                           ; Number of cases is 4, Range of values is 0 to 9
  4569                           ; switch strategies available:
  4570                           ; Name         Instructions Cycles
  4571                           ; simple_byte           13     7 (average)
  4572                           ;	Chosen strategy is simple_byte
  4573  012BB4  500B               	movf	(btemp+10)^0,w,c
  4574  012BB6  0A00               	xorlw	0	; case 0
  4575  012BB8  B4D8               	btfsc	status,2,c
  4576  012BBA  D7BD               	goto	l12286
  4577  012BBC  0A03               	xorlw	3	; case 3
  4578  012BBE  B4D8               	btfsc	status,2,c
  4579  012BC0  D7C3               	goto	l12292
  4580  012BC2  0A05               	xorlw	5	; case 6
  4581  012BC4  B4D8               	btfsc	status,2,c
  4582  012BC6  D7CC               	goto	l12294
  4583  012BC8  0A0F               	xorlw	15	; case 9
  4584  012BCA  B4D8               	btfsc	status,2,c
  4585  012BCC  D7D8               	goto	l12300
  4586  012BCE                     l1343:
  4587                           
  4588                           ;main.c: 390:   if (V.set_sequ) {
  4589  012BCE  0102               	movlb	2	; () banked
  4590  012BD0  A19B               	btfss	(_V+155)& (0+255),0,b	;volatile
  4591  012BD2  D4D8               	goto	l12220
  4592                           
  4593                           ; BSR set to: 2
  4594                           ;main.c: 391:    if (TimerDone(TMR_INFO)) {
  4595  012BD4  0E07               	movlw	7
  4596  012BD6  6EE6               	movwf	postinc1,c
  4597  012BD8  EC37  F0D3         	call	_TimerDone	;wreg free
  4598  012BDC  5001               	movf	btemp^0,w,c
  4599  012BDE  B4D8               	btfsc	status,2,c
  4600  012BE0  D00B               	goto	l12314
  4601                           
  4602                           ;main.c: 392:     V.set_sequ = 0;
  4603  012BE2  0102               	movlb	2	; () banked
  4604  012BE4  919B               	bcf	(_V+155)& (0+255),0,b	;volatile
  4605                           
  4606                           ; BSR set to: 2
  4607                           ;main.c: 393:     set_vterm(0);
  4608  012BE6  0E00               	movlw	0
  4609  012BE8  6EE6               	movwf	postinc1,c
  4610  012BEA  ECFE  F0D4         	call	_set_vterm	;wreg free
  4611                           
  4612                           ;main.c: 394:     update_lcd(0);
  4613  012BEE  0E00               	movlw	0
  4614  012BF0  6EE6               	movwf	postinc1,c
  4615  012BF2  EC37  F0C4         	call	_update_lcd	;wreg free
  4616                           
  4617                           ;main.c: 395:    } else {
  4618  012BF6  D4C6               	goto	l12220
  4619  012BF8                     l12314:
  4620                           
  4621                           ;main.c: 396:     set_vterm(2);
  4622  012BF8  0E02               	movlw	2
  4623  012BFA  6EE6               	movwf	postinc1,c
  4624  012BFC  ECFE  F0D4         	call	_set_vterm	;wreg free
  4625                           
  4626                           ;main.c: 397:     update_lcd(2);
  4627  012C00  0E02               	movlw	2
  4628  012C02  6EE6               	movwf	postinc1,c
  4629  012C04  EC37  F0C4         	call	_update_lcd	;wreg free
  4630  012C08  D4BD               	goto	l12220
  4631  012C0A                     __end_of_main:
  4632                           	opt callstack 0
  4633                           
  4634 ;; *************** function _static_soc *****************
  4635 ;; Defined at:
  4636 ;;		line 102 in file "mbmc.c"
  4637 ;; Parameters:    Size  Location     Type
  4638 ;;		None
  4639 ;; Auto vars:     Size  Location     Type
  4640 ;;		None
  4641 ;; Return value:  Size  Location     Type
  4642 ;;                  1  [STACK] void 
  4643 ;; Registers used:
  4644 ;;		wreg, status,2
  4645 ;; Tracked objects:
  4646 ;;		On entry : 0/0
  4647 ;;		On exit  : 3F/1
  4648 ;;		Unchanged: 0/0
  4649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4653 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4654 ;;Total ram usage:        0 bytes
  4655 ;; Hardware stack levels used:    1
  4656 ;; Hardware stack levels required when called:   15
  4657 ;; This function calls:
  4658 ;;		Nothing
  4659 ;; This function is called by:
  4660 ;;		_main
  4661 ;; This function uses a reentrant model
  4662 ;;
  4663                           
  4664                           	psect	text1
  4665  01A8A0                     __ptext1:
  4666                           	opt callstack 0
  4667  01A8A0                     _static_soc:
  4668                           	opt callstack 15
  4669                           
  4670                           ;mbmc.c: 104:  C.runtime = 120;
  4671                           
  4672                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4673                           ;incstack = 0
  4674  01A8A0  0E00               	movlw	0
  4675  01A8A2  0101               	movlb	1	; () banked
  4676  01A8A4  6FA9               	movwf	(_C+169)& (0+255),b	;volatile
  4677  01A8A6  0E78               	movlw	120
  4678  01A8A8  6FA8               	movwf	(_C+168)& (0+255),b	;volatile
  4679                           
  4680                           ;mbmc.c: 105:  C.soc = 100;
  4681  01A8AA  0E00               	movlw	0
  4682  01A8AC  6FAB               	movwf	(_C+171)& (0+255),b	;volatile
  4683  01A8AE  0E64               	movlw	100
  4684  01A8B0  6FAA               	movwf	(_C+170)& (0+255),b	;volatile
  4685                           
  4686                           ; BSR set to: 1
  4687                           ;mbmc.c: 106:  C.dynamic_ah = C.bank_ah;
  4688  01A8B2  C188  F18C         	movff	_C+136,_C+140	;volatile
  4689  01A8B6  C189  F18D         	movff	_C+137,_C+141	;volatile
  4690  01A8BA  C18A  F18E         	movff	_C+138,_C+142	;volatile
  4691  01A8BE  C18B  F18F         	movff	_C+139,_C+143	;volatile
  4692                           
  4693                           ; BSR set to: 1
  4694                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  4695  01A8C2  0012               	return		;funcret
  4696  01A8C4                     __end_of_static_soc:
  4697                           	opt callstack 0
  4698                           
  4699 ;; *************** function _start_switch_handler *****************
  4700 ;; Defined at:
  4701 ;;		line 119 in file "dio.c"
  4702 ;; Parameters:    Size  Location     Type
  4703 ;;		None
  4704 ;; Auto vars:     Size  Location     Type
  4705 ;;		None
  4706 ;; Return value:  Size  Location     Type
  4707 ;;                  1  [STACK] void 
  4708 ;; Registers used:
  4709 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  4710 ;; Tracked objects:
  4711 ;;		On entry : 1/0
  4712 ;;		On exit  : 3F/39
  4713 ;;		Unchanged: 0/0
  4714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4719 ;;Total ram usage:        0 bytes
  4720 ;; Hardware stack levels used:    1
  4721 ;; Hardware stack levels required when called:   16
  4722 ;; This function calls:
  4723 ;;		_INT1_SetInterruptHandler
  4724 ;; This function is called by:
  4725 ;;		_main
  4726 ;; This function uses a reentrant model
  4727 ;;
  4728                           
  4729                           	psect	text2
  4730  01A9BE                     __ptext2:
  4731                           	opt callstack 0
  4732  01A9BE                     _start_switch_handler:
  4733                           	opt callstack 14
  4734                           
  4735                           ;dio.c: 121:  (PIE5bits.INT1IE = 0);
  4736                           
  4737                           ; BSR set to: 1
  4738                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4739                           ;incstack = 0
  4740  01A9BE  0139               	movlb	57	; () banked
  4741  01A9C0  9195               	bcf	149,0,b	;volatile
  4742                           
  4743                           ; BSR set to: 57
  4744                           ;dio.c: 122:  INT1_SetInterruptHandler(switch_handler);
  4745  01A9C2  0EB4               	movlw	low _switch_handler
  4746  01A9C4  6EE6               	movwf	postinc1,c
  4747  01A9C6  0E82               	movlw	high _switch_handler
  4748  01A9C8  6EE6               	movwf	postinc1,c
  4749  01A9CA  0E01               	movlw	low (_switch_handler shr (0+16))
  4750  01A9CC  6EE6               	movwf	postinc1,c
  4751  01A9CE  ECC3  F0D3         	call	_INT1_SetInterruptHandler	;wreg free
  4752                           
  4753                           ;dio.c: 123:  S.button[SNULL].sw = SW_INVALID;
  4754  01A9D2  0E02               	movlw	2
  4755  01A9D4  0102               	movlb	2	; () banked
  4756  01A9D6  6FDF               	movwf	(_S+35)& (0+255),b	;volatile
  4757                           
  4758                           ; BSR set to: 2
  4759                           ;dio.c: 124:  (PIE5bits.INT1IE = 1);
  4760  01A9D8  0139               	movlb	57	; () banked
  4761  01A9DA  8195               	bsf	149,0,b	;volatile
  4762                           
  4763                           ; BSR set to: 57
  4764                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  4765  01A9DC  0012               	return		;funcret
  4766  01A9DE                     __end_of_start_switch_handler:
  4767                           	opt callstack 0
  4768                           
  4769 ;; *************** function _start_adc_scan *****************
  4770 ;; Defined at:
  4771 ;;		line 32 in file "daq.c"
  4772 ;; Parameters:    Size  Location     Type
  4773 ;;		None
  4774 ;; Auto vars:     Size  Location     Type
  4775 ;;		None
  4776 ;; Return value:  Size  Location     Type
  4777 ;;                  1  [STACK] _Bool 
  4778 ;; Registers used:
  4779 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  4780 ;; Tracked objects:
  4781 ;;		On entry : 0/0
  4782 ;;		On exit  : 1/0
  4783 ;;		Unchanged: 0/0
  4784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4788 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4789 ;;Total ram usage:        0 bytes
  4790 ;; Hardware stack levels used:    1
  4791 ;; Hardware stack levels required when called:   16
  4792 ;; This function calls:
  4793 ;;		_ADCC_DischargeSampleCapacitor
  4794 ;;		_ADCC_SetADIInterruptHandler
  4795 ;;		_ADCC_SetADTIInterruptHandler
  4796 ;;		_ADCC_StartConversion
  4797 ;; This function is called by:
  4798 ;;		_main
  4799 ;; This function uses a reentrant model
  4800 ;;
  4801                           
  4802                           	psect	text3
  4803  019B54                     __ptext3:
  4804                           	opt callstack 0
  4805  019B54                     _start_adc_scan:
  4806                           	opt callstack 14
  4807                           
  4808                           ;daq.c: 34:  if (R.done)
  4809                           
  4810                           ; BSR set to: 57
  4811                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4812                           ;incstack = 0
  4813  019B54  0100               	movlb	0	; () banked
  4814  019B56  51ED               	movf	(_R+39)& (0+255),w,b	;volatile
  4815  019B58  A4D8               	btfss	status,2,c
  4816  019B5A  0012               	return	
  4817                           
  4818                           ; BSR set to: 0
  4819                           ;daq.c: 37:  R.scan_index = 0;
  4820  019B5C  6BEA               	clrf	(_R+36)& (0+255),b	;volatile
  4821                           
  4822                           ; BSR set to: 0
  4823                           ;daq.c: 38:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  4824  019B5E  013A               	movlb	58	; () banked
  4825  019B60  5140               	movf	64,w,b	;volatile
  4826  019B62  006E F940  F001    	movff	14928,btemp	;volatile
  4827  019B68  6A02               	clrf	(btemp+1)^0,c
  4828  019B6A  0060  F004  F002   	movff	btemp,btemp+1
  4829  019B70  6A01               	clrf	btemp^0,c
  4830  019B72  2601               	addwf	btemp^0,f,c
  4831  019B74  0E00               	movlw	0
  4832  019B76  2202               	addwfc	(btemp+1)^0,f,c
  4833  019B78  0E77               	movlw	119
  4834  019B7A  1401               	andwf	btemp^0,w,c
  4835  019B7C  0100               	movlb	0	; () banked
  4836  019B7E  6FEB               	movwf	(_R+37)& (0+255),b	;volatile
  4837  019B80  0E3C               	movlw	60
  4838  019B82  1402               	andwf	(btemp+1)^0,w,c
  4839  019B84  6FEC               	movwf	(_R+38)& (0+255),b	;volatile
  4840                           
  4841                           ; BSR set to: 0
  4842                           ;daq.c: 39:  ADCC_SetADIInterruptHandler(adc_int_handler);
  4843  019B86  0E6E               	movlw	low _adc_int_handler
  4844  019B88  6EE6               	movwf	postinc1,c
  4845  019B8A  0EAC               	movlw	high _adc_int_handler
  4846  019B8C  6EE6               	movwf	postinc1,c
  4847  019B8E  0E01               	movlw	low (_adc_int_handler shr (0+16))
  4848  019B90  6EE6               	movwf	postinc1,c
  4849  019B92  ECFF  F0D3         	call	_ADCC_SetADIInterruptHandler	;wreg free
  4850                           
  4851                           ;daq.c: 40:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  4852  019B96  0E30               	movlw	low _adc_int_t_handler
  4853  019B98  6EE6               	movwf	postinc1,c
  4854  019B9A  0E99               	movlw	high _adc_int_t_handler
  4855  019B9C  6EE6               	movwf	postinc1,c
  4856  019B9E  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  4857  019BA0  6EE6               	movwf	postinc1,c
  4858  019BA2  ECEB  F0D3         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  4859                           
  4860                           ;daq.c: 41:  ADCC_DischargeSampleCapacitor();
  4861  019BA6  EC0F  F0D6         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  4862                           
  4863                           ; BSR set to: 62
  4864                           ;daq.c: 42:  ADCC_StartConversion(R.scan_index & 0xf);
  4865  019BAA  0100               	movlb	0	; () banked
  4866  019BAC  51EA               	movf	(_R+36)& (0+255),w,b	;volatile
  4867  019BAE  0B0F               	andlw	15
  4868  019BB0  6EE6               	movwf	postinc1,c
  4869  019BB2  ECB4  F0D5         	call	_ADCC_StartConversion	;wreg free
  4870                           
  4871                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  4872  019BB6  0012               	return		;funcret
  4873  019BB8                     __end_of_start_adc_scan:
  4874                           	opt callstack 0
  4875                           
  4876 ;; *************** function _ADCC_StartConversion *****************
  4877 ;; Defined at:
  4878 ;;		line 128 in file "mcc_generated_files/adcc.c"
  4879 ;; Parameters:    Size  Location     Type
  4880 ;;  channel         1  [STACK] enum E16136
  4881 ;; Auto vars:     Size  Location     Type
  4882 ;;		None
  4883 ;; Return value:  Size  Location     Type
  4884 ;;                  1  [STACK] void 
  4885 ;; Registers used:
  4886 ;;		fsr1l, fsr1h
  4887 ;; Tracked objects:
  4888 ;;		On entry : 3F/0
  4889 ;;		On exit  : 3F/3E
  4890 ;;		Unchanged: 0/0
  4891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4895 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4896 ;;Total ram usage:        0 bytes
  4897 ;; Hardware stack levels used:    1
  4898 ;; Hardware stack levels required when called:   15
  4899 ;; This function calls:
  4900 ;;		Nothing
  4901 ;; This function is called by:
  4902 ;;		_start_adc_scan
  4903 ;;		_adc_int_t_handler
  4904 ;; This function uses a reentrant model
  4905 ;;
  4906                           
  4907                           	psect	text4
  4908  01AB68                     __ptext4:
  4909                           	opt callstack 0
  4910  01AB68                     _ADCC_StartConversion:
  4911                           	opt callstack 0
  4912                           
  4913                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  4914                           ;stkvar	_channel @ sp[(0)+-1]
  4915                           
  4916                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4917                           ;incstack = 0
  4918 ;; hardware stack exceeded
  4919  01AB68  0EFF               	movlw	-1
  4920  01AB6A  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  4921                           
  4922                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  4923  01AB70  013E               	movlb	62	; () banked
  4924  01AB72  8FF8               	bsf	248,7,b	;volatile
  4925                           
  4926                           ; BSR set to: 62
  4927                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  4928  01AB74  81F8               	bsf	248,0,b	;volatile
  4929                           
  4930                           ; BSR set to: 62
  4931                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  4932  01AB76  52E5               	movf	postdec1,f,c
  4933  01AB78  0012               	return		;funcret
  4934  01AB7A                     __end_of_ADCC_StartConversion:
  4935                           	opt callstack 0
  4936                           
  4937 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  4938 ;; Defined at:
  4939 ;;		line 189 in file "mcc_generated_files/adcc.c"
  4940 ;; Parameters:    Size  Location     Type
  4941 ;;		None
  4942 ;; Auto vars:     Size  Location     Type
  4943 ;;		None
  4944 ;; Return value:  Size  Location     Type
  4945 ;;                  1  [STACK] void 
  4946 ;; Registers used:
  4947 ;;		wreg, status,2
  4948 ;; Tracked objects:
  4949 ;;		On entry : 0/0
  4950 ;;		On exit  : 3F/3E
  4951 ;;		Unchanged: 0/0
  4952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4957 ;;Total ram usage:        0 bytes
  4958 ;; Hardware stack levels used:    1
  4959 ;; Hardware stack levels required when called:   15
  4960 ;; This function calls:
  4961 ;;		Nothing
  4962 ;; This function is called by:
  4963 ;;		_start_adc_scan
  4964 ;;		_adc_int_t_handler
  4965 ;; This function uses a reentrant model
  4966 ;;
  4967                           
  4968                           	psect	text5
  4969  01AC1E                     __ptext5:
  4970                           	opt callstack 0
  4971  01AC1E                     _ADCC_DischargeSampleCapacitor:
  4972                           	opt callstack 0
  4973                           
  4974                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
  4975                           
  4976                           ; BSR set to: 62
  4977                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4978                           ;incstack = 0
  4979 ;; hardware stack exceeded
  4980  01AC1E  0E3B               	movlw	59
  4981  01AC20  013E               	movlb	62	; () banked
  4982  01AC22  6FF1               	movwf	241,b	;volatile
  4983                           
  4984                           ; BSR set to: 62
  4985                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
  4986  01AC24  0012               	return		;funcret
  4987  01AC26                     __end_of_ADCC_DischargeSampleCapacitor:
  4988                           	opt callstack 0
  4989                           
  4990 ;; *************** function _srand *****************
  4991 ;; Defined at:
  4992 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  4993 ;; Parameters:    Size  Location     Type
  4994 ;;  s               2  [STACK] unsigned int 
  4995 ;; Auto vars:     Size  Location     Type
  4996 ;;		None
  4997 ;; Return value:  Size  Location     Type
  4998 ;;                  1  [STACK] void 
  4999 ;; Registers used:
  5000 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  5001 ;; Tracked objects:
  5002 ;;		On entry : 0/0
  5003 ;;		On exit  : 3F/0
  5004 ;;		Unchanged: 0/0
  5005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5009 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5010 ;;Total ram usage:        0 bytes
  5011 ;; Hardware stack levels used:    1
  5012 ;; Hardware stack levels required when called:   15
  5013 ;; This function calls:
  5014 ;;		Nothing
  5015 ;; This function is called by:
  5016 ;;		_main
  5017 ;; This function uses a reentrant model
  5018 ;;
  5019                           
  5020                           	psect	text6
  5021  01A3BC                     __ptext6:
  5022                           	opt callstack 0
  5023  01A3BC                     _srand:
  5024                           	opt callstack 15
  5025                           
  5026                           ;stkvar	_s @ sp[(0)+-2]
  5027                           
  5028                           ; BSR set to: 62
  5029                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5030                           ;incstack = 0
  5031  01A3BC  0EFE               	movlw	-2
  5032  01A3BE  50E3               	movf	plusw1,w,c
  5033  01A3C0  0FFF               	addlw	255
  5034  01A3C2  6E0B               	movwf	(btemp+10)^0,c
  5035  01A3C4  0EFF               	movlw	-1
  5036  01A3C6  006F FF8C  F00C    	movff	plusw1,btemp+11
  5037  01A3CC  0EFF               	movlw	255
  5038  01A3CE  220C               	addwfc	(btemp+11)^0,f,c
  5039  01A3D0  0060  F02C  F0BE   	movff	btemp+10,_seed
  5040  01A3D6  0060  F030  F0BF   	movff	btemp+11,_seed+1
  5041  01A3DC  0100               	movlb	0	; () banked
  5042  01A3DE  6BC0               	clrf	(_seed+2)& (0+255),b
  5043  01A3E0  6BC1               	clrf	(_seed+3)& (0+255),b
  5044  01A3E2  6BC2               	clrf	(_seed+4)& (0+255),b
  5045  01A3E4  6BC3               	clrf	(_seed+5)& (0+255),b
  5046  01A3E6  6BC4               	clrf	(_seed+6)& (0+255),b
  5047  01A3E8  6BC5               	clrf	(_seed+7)& (0+255),b
  5048                           
  5049                           ; BSR set to: 0
  5050                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  5051  01A3EA  52E5               	movf	postdec1,f,c
  5052  01A3EC  52E5               	movf	postdec1,f,c
  5053  01A3EE  0012               	return		;funcret
  5054  01A3F0                     __end_of_srand:
  5055                           	opt callstack 0
  5056                           
  5057 ;; *************** function _set_load_relay_two *****************
  5058 ;; Defined at:
  5059 ;;		line 114 in file "mbmc.c"
  5060 ;; Parameters:    Size  Location     Type
  5061 ;;  mode            1  [STACK] _Bool 
  5062 ;; Auto vars:     Size  Location     Type
  5063 ;;		None
  5064 ;; Return value:  Size  Location     Type
  5065 ;;                  1  [STACK] void 
  5066 ;; Registers used:
  5067 ;;		wreg, fsr1l, fsr1h
  5068 ;; Tracked objects:
  5069 ;;		On entry : 0/0
  5070 ;;		On exit  : 0/0
  5071 ;;		Unchanged: 0/0
  5072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5076 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5077 ;;Total ram usage:        0 bytes
  5078 ;; Hardware stack levels used:    1
  5079 ;; Hardware stack levels required when called:   15
  5080 ;; This function calls:
  5081 ;;		Nothing
  5082 ;; This function is called by:
  5083 ;;		_main
  5084 ;; This function uses a reentrant model
  5085 ;;
  5086                           
  5087                           	psect	text7
  5088  01AB7A                     __ptext7:
  5089                           	opt callstack 0
  5090  01AB7A                     _set_load_relay_two:
  5091                           	opt callstack 15
  5092                           
  5093                           ;mbmc.c: 114: void set_load_relay_two(_Bool mode);mbmc.c: 115: {;mbmc.c: 116:  LATDbits.
      +                          LATD5 = mode;
  5094                           ;stkvar	_mode @ sp[(0)+-1]
  5095                           
  5096                           ; BSR set to: 0
  5097                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5098                           ;incstack = 0
  5099  01AB7A  0EFF               	movlw	-1
  5100  01AB7C  B0E3               	btfsc	plusw1,0,c
  5101  01AB7E  D002               	bra	u9485
  5102  01AB80  9ABD               	bcf	189,5,c	;volatile
  5103  01AB82  D001               	bra	u9486
  5104  01AB84                     u9485:
  5105  01AB84  8ABD               	bsf	189,5,c	;volatile
  5106  01AB86                     u9486:
  5107                           
  5108                           ; _set_load_relay_two: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  5109  01AB86  52E5               	movf	postdec1,f,c
  5110  01AB88  0012               	return		;funcret
  5111  01AB8A                     __end_of_set_load_relay_two:
  5112                           	opt callstack 0
  5113                           
  5114 ;; *************** function _set_load_relay_one *****************
  5115 ;; Defined at:
  5116 ;;		line 109 in file "mbmc.c"
  5117 ;; Parameters:    Size  Location     Type
  5118 ;;  mode            1  [STACK] _Bool 
  5119 ;; Auto vars:     Size  Location     Type
  5120 ;;		None
  5121 ;; Return value:  Size  Location     Type
  5122 ;;                  1  [STACK] void 
  5123 ;; Registers used:
  5124 ;;		wreg, fsr1l, fsr1h
  5125 ;; Tracked objects:
  5126 ;;		On entry : 0/0
  5127 ;;		On exit  : 0/0
  5128 ;;		Unchanged: 0/0
  5129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5134 ;;Total ram usage:        0 bytes
  5135 ;; Hardware stack levels used:    1
  5136 ;; Hardware stack levels required when called:   15
  5137 ;; This function calls:
  5138 ;;		Nothing
  5139 ;; This function is called by:
  5140 ;;		_main
  5141 ;; This function uses a reentrant model
  5142 ;;
  5143                           
  5144                           	psect	text8
  5145  01AB8A                     __ptext8:
  5146                           	opt callstack 0
  5147  01AB8A                     _set_load_relay_one:
  5148                           	opt callstack 15
  5149                           
  5150                           ;mbmc.c: 109: void set_load_relay_one(_Bool mode);mbmc.c: 110: {;mbmc.c: 111:  LATDbits.
      +                          LATD4 = mode;
  5151                           ;stkvar	_mode @ sp[(0)+-1]
  5152                           
  5153                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5154                           ;incstack = 0
  5155  01AB8A  0EFF               	movlw	-1
  5156  01AB8C  B0E3               	btfsc	plusw1,0,c
  5157  01AB8E  D002               	bra	u9475
  5158  01AB90  98BD               	bcf	189,4,c	;volatile
  5159  01AB92  D001               	bra	u9476
  5160  01AB94                     u9475:
  5161  01AB94  88BD               	bsf	189,4,c	;volatile
  5162  01AB96                     u9476:
  5163                           
  5164                           ; _set_load_relay_one: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  5165  01AB96  52E5               	movf	postdec1,f,c
  5166  01AB98  0012               	return		;funcret
  5167  01AB9A                     __end_of_set_load_relay_one:
  5168                           	opt callstack 0
  5169                           
  5170 ;; *************** function _init_port_dma *****************
  5171 ;; Defined at:
  5172 ;;		line 90 in file "eadog.c"
  5173 ;; Parameters:    Size  Location     Type
  5174 ;;		None
  5175 ;; Auto vars:     Size  Location     Type
  5176 ;;		None
  5177 ;; Return value:  Size  Location     Type
  5178 ;;                  1  [STACK] void 
  5179 ;; Registers used:
  5180 ;;		wreg, status,2
  5181 ;; Tracked objects:
  5182 ;;		On entry : 0/2
  5183 ;;		On exit  : 3F/3B
  5184 ;;		Unchanged: 0/0
  5185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5190 ;;Total ram usage:        0 bytes
  5191 ;; Hardware stack levels used:    1
  5192 ;; Hardware stack levels required when called:   15
  5193 ;; This function calls:
  5194 ;;		Nothing
  5195 ;; This function is called by:
  5196 ;;		_main
  5197 ;; This function uses a reentrant model
  5198 ;;
  5199                           
  5200                           	psect	text9
  5201  01A458                     __ptext9:
  5202                           	opt callstack 0
  5203  01A458                     _init_port_dma:
  5204                           	opt callstack 15
  5205                           
  5206                           ;eadog.c: 92:  DMA2CON1bits.DMODE = 0;
  5207                           
  5208                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5209                           ;incstack = 0
  5210  01A458  0E3F               	movlw	-193
  5211  01A45A  013B               	movlb	59	; () banked
  5212  01A45C  17DD               	andwf	221,f,b	;volatile
  5213                           
  5214                           ; BSR set to: 59
  5215                           ;eadog.c: 93:  DMA2CON1bits.DSTP = 0;
  5216  01A45E  9BDD               	bcf	221,5,b	;volatile
  5217                           
  5218                           ;eadog.c: 94:  DMA2CON1bits.SMODE = 1;
  5219  01A460  51DD               	movf	221,w,b	;volatile
  5220  01A462  0BF9               	andlw	-7
  5221  01A464  0902               	iorlw	2
  5222  01A466  6FDD               	movwf	221,b	;volatile
  5223                           
  5224                           ;eadog.c: 95:  DMA2CON1bits.SMR = 0;
  5225  01A468  0EE7               	movlw	-25
  5226  01A46A  17DD               	andwf	221,f,b	;volatile
  5227                           
  5228                           ; BSR set to: 59
  5229                           ;eadog.c: 96:  DMA2CON1bits.SSTP = 1;
  5230  01A46C  81DD               	bsf	221,0,b	;volatile
  5231                           
  5232                           ; BSR set to: 59
  5233                           ;eadog.c: 97:  DMA2CON0bits.SIRQEN = 0;
  5234  01A46E  9DDC               	bcf	220,6,b	;volatile
  5235                           
  5236                           ;eadog.c: 98:  DMA2DSA = 0x3DEA;
  5237  01A470  0E3D               	movlw	61
  5238  01A472  6FD1               	movwf	209,b	;volatile
  5239  01A474  0EEA               	movlw	234
  5240  01A476  6FD0               	movwf	208,b	;volatile
  5241                           
  5242                           ;eadog.c: 99:  DMA2SSA = (uint32_t) port_data;
  5243  01A478  0EFF               	movlw	low _port_data
  5244  01A47A  6FD9               	movwf	217,b	;volatile
  5245  01A47C  0E05               	movlw	high _port_data
  5246  01A47E  6FDA               	movwf	218,b	;volatile
  5247  01A480  0E00               	movlw	low (_port_data shr (0+16))
  5248  01A482  6FDB               	movwf	219,b	;volatile
  5249                           
  5250                           ; BSR set to: 59
  5251                           ;eadog.c: 100:  DMA2CON0bits.DGO = 0;
  5252  01A484  9BDC               	bcf	220,5,b	;volatile
  5253                           
  5254                           ; BSR set to: 59
  5255                           ; _init_port_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  5256  01A486  0012               	return		;funcret
  5257  01A488                     __end_of_init_port_dma:
  5258                           	opt callstack 0
  5259                           
  5260 ;; *************** function _init_display *****************
  5261 ;; Defined at:
  5262 ;;		line 38 in file "eadog.c"
  5263 ;; Parameters:    Size  Location     Type
  5264 ;;		None
  5265 ;; Auto vars:     Size  Location     Type
  5266 ;;		None
  5267 ;; Return value:  Size  Location     Type
  5268 ;;                  1  [STACK] void 
  5269 ;; Registers used:
  5270 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  5271 ;; Tracked objects:
  5272 ;;		On entry : 3F/3B
  5273 ;;		On exit  : 3F/3D
  5274 ;;		Unchanged: 0/0
  5275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5279 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5280 ;;Total ram usage:        0 bytes
  5281 ;; Hardware stack levels used:    1
  5282 ;; Hardware stack levels required when called:   17
  5283 ;; This function calls:
  5284 ;;		_ringBufS_init
  5285 ;;		_send_lcd_cmd
  5286 ;;		_send_lcd_cmd_long
  5287 ;;		_wdtdelay
  5288 ;; This function is called by:
  5289 ;;		_main
  5290 ;; This function uses a reentrant model
  5291 ;;
  5292                           
  5293                           	psect	text10
  5294  018D80                     __ptext10:
  5295                           	opt callstack 0
  5296  018D80                     _init_display:
  5297                           	opt callstack 13
  5298                           
  5299                           ;eadog.c: 40:  spi_link.tx1a = &ring_buf1;
  5300                           
  5301                           ; BSR set to: 59
  5302                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5303                           ;incstack = 0
  5304  018D80  0E43               	movlw	low _ring_buf1
  5305  018D82  0100               	movlb	0	; () banked
  5306  018D84  6F66               	movwf	(_spi_link+6)& (0+255),b	;volatile
  5307  018D86  0E04               	movlw	high _ring_buf1
  5308  018D88  6F67               	movwf	(_spi_link+7)& (0+255),b	;volatile
  5309                           
  5310                           ;eadog.c: 41:  spi_link.tx1b = &ring_buf2;
  5311  018D8A  0E00               	movlw	low _ring_buf2
  5312  018D8C  6F64               	movwf	(_spi_link+4)& (0+255),b	;volatile
  5313  018D8E  0E04               	movlw	high _ring_buf2
  5314  018D90  6F65               	movwf	(_spi_link+5)& (0+255),b	;volatile
  5315                           
  5316                           ; BSR set to: 0
  5317                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1a);
  5318  018D92  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
  5319  018D98  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
  5320  018D9E  EC23  F0D3         	call	_ringBufS_init	;wreg free
  5321                           
  5322                           ;eadog.c: 43:  ringBufS_init(spi_link.tx1b);
  5323  018DA2  0060  F193  FFE6   	movff	_spi_link+4,postinc1
  5324  018DA8  0060  F197  FFE6   	movff	_spi_link+5,postinc1
  5325  018DAE  EC23  F0D3         	call	_ringBufS_init	;wreg free
  5326                           
  5327                           ;eadog.c: 45:  LATEbits.LATE2 = 1;
  5328  018DB2  84BE               	bsf	190,2,c	;volatile
  5329  018DB4  84BC               	bsf	188,2,c	;volatile
  5330                           
  5331                           ;eadog.c: 59:  wdtdelay(350000);
  5332  018DB6  0E30               	movlw	48
  5333  018DB8  6EE6               	movwf	postinc1,c
  5334  018DBA  0E57               	movlw	87
  5335  018DBC  6EE6               	movwf	postinc1,c
  5336  018DBE  0E05               	movlw	5
  5337  018DC0  6EE6               	movwf	postinc1,c
  5338  018DC2  0E00               	movlw	0
  5339  018DC4  6EE6               	movwf	postinc1,c
  5340  018DC6  EC6D  F0CE         	call	_wdtdelay	;wreg free
  5341                           
  5342                           ; BSR set to: 0
  5343                           ;eadog.c: 60:  send_lcd_cmd(0x39);
  5344  018DCA  0E39               	movlw	57
  5345  018DCC  6EE6               	movwf	postinc1,c
  5346  018DCE  EC0F  F0D3         	call	_send_lcd_cmd	;wreg free
  5347                           
  5348                           ; BSR set to: 0
  5349                           ;eadog.c: 61:  send_lcd_cmd(0x1d);
  5350  018DD2  0E1D               	movlw	29
  5351  018DD4  6EE6               	movwf	postinc1,c
  5352  018DD6  EC0F  F0D3         	call	_send_lcd_cmd	;wreg free
  5353                           
  5354                           ; BSR set to: 0
  5355                           ;eadog.c: 62:  send_lcd_cmd(0x50);
  5356  018DDA  0E50               	movlw	80
  5357  018DDC  6EE6               	movwf	postinc1,c
  5358  018DDE  EC0F  F0D3         	call	_send_lcd_cmd	;wreg free
  5359                           
  5360                           ; BSR set to: 0
  5361                           ;eadog.c: 63:  send_lcd_cmd(0x6c);
  5362  018DE2  0E6C               	movlw	108
  5363  018DE4  6EE6               	movwf	postinc1,c
  5364  018DE6  EC0F  F0D3         	call	_send_lcd_cmd	;wreg free
  5365                           
  5366                           ; BSR set to: 0
  5367                           ;eadog.c: 64:  send_lcd_cmd(0x76);
  5368  018DEA  0E76               	movlw	118
  5369  018DEC  6EE6               	movwf	postinc1,c
  5370  018DEE  EC0F  F0D3         	call	_send_lcd_cmd	;wreg free
  5371                           
  5372                           ; BSR set to: 0
  5373                           ;eadog.c: 65:  send_lcd_cmd_long(0x38);
  5374  018DF2  0E38               	movlw	56
  5375  018DF4  6EE6               	movwf	postinc1,c
  5376  018DF6  ECFB  F0D2         	call	_send_lcd_cmd_long	;wreg free
  5377                           
  5378                           ; BSR set to: 0
  5379                           ;eadog.c: 66:  send_lcd_cmd(0x0f);
  5380  018DFA  0E0F               	movlw	15
  5381  018DFC  6EE6               	movwf	postinc1,c
  5382  018DFE  EC0F  F0D3         	call	_send_lcd_cmd	;wreg free
  5383                           
  5384                           ; BSR set to: 0
  5385                           ;eadog.c: 67:  send_lcd_cmd_long(0x01);
  5386  018E02  0E01               	movlw	1
  5387  018E04  6EE6               	movwf	postinc1,c
  5388  018E06  ECFB  F0D2         	call	_send_lcd_cmd_long	;wreg free
  5389                           
  5390                           ; BSR set to: 0
  5391                           ;eadog.c: 68:  send_lcd_cmd(0x02);
  5392  018E0A  0E02               	movlw	2
  5393  018E0C  6EE6               	movwf	postinc1,c
  5394  018E0E  EC0F  F0D3         	call	_send_lcd_cmd	;wreg free
  5395                           
  5396                           ; BSR set to: 0
  5397                           ;eadog.c: 69:  send_lcd_cmd(0x06);
  5398  018E12  0E06               	movlw	6
  5399  018E14  6EE6               	movwf	postinc1,c
  5400  018E16  EC0F  F0D3         	call	_send_lcd_cmd	;wreg free
  5401                           
  5402                           ; BSR set to: 0
  5403                           ;eadog.c: 70:  wdtdelay(30);
  5404  018E1A  0E1E               	movlw	30
  5405  018E1C  6EE6               	movwf	postinc1,c
  5406  018E1E  0E00               	movlw	0
  5407  018E20  6EE6               	movwf	postinc1,c
  5408  018E22  0E00               	movlw	0
  5409  018E24  6EE6               	movwf	postinc1,c
  5410  018E26  0E00               	movlw	0
  5411  018E28  6EE6               	movwf	postinc1,c
  5412  018E2A  EC6D  F0CE         	call	_wdtdelay	;wreg free
  5413                           
  5414                           ; BSR set to: 0
  5415                           ;eadog.c: 71:  SPI1CON2 = 0x02;
  5416  018E2E  0E02               	movlw	2
  5417  018E30  013D               	movlb	61	; () banked
  5418  018E32  6F16               	movwf	22,b	;volatile
  5419                           
  5420                           ; BSR set to: 61
  5421                           ;eadog.c: 72:  SPI1CON1 = 0x40;
  5422  018E34  0E40               	movlw	64
  5423  018E36  6F15               	movwf	21,b	;volatile
  5424                           
  5425                           ; BSR set to: 61
  5426                           ;eadog.c: 73:  SPI1CON0 = 0x83;
  5427  018E38  0E83               	movlw	131
  5428  018E3A  6F14               	movwf	20,b	;volatile
  5429                           
  5430                           ; BSR set to: 61
  5431                           ;eadog.c: 75:  SPI1INTFbits.SPI1TXUIF = 0;
  5432  018E3C  931A               	bcf	26,1,b	;volatile
  5433                           
  5434                           ; BSR set to: 61
  5435                           ;eadog.c: 76:  DMA1CON1bits.DMODE = 0;
  5436  018E3E  0E3F               	movlw	-193
  5437  018E40  013B               	movlb	59	; () banked
  5438  018E42  17FD               	andwf	253,f,b	;volatile
  5439                           
  5440                           ; BSR set to: 59
  5441                           ;eadog.c: 77:  DMA1CON1bits.DSTP = 0;
  5442  018E44  9BFD               	bcf	253,5,b	;volatile
  5443                           
  5444                           ; BSR set to: 59
  5445                           ;eadog.c: 78:  DMA1CON1bits.SMODE = 1;
  5446  018E46  51FD               	movf	253,w,b	;volatile
  5447  018E48  0BF9               	andlw	-7
  5448  018E4A  0902               	iorlw	2
  5449  018E4C  6FFD               	movwf	253,b	;volatile
  5450                           
  5451                           ; BSR set to: 59
  5452                           ;eadog.c: 79:  DMA1CON1bits.SMR = 0;
  5453  018E4E  0EE7               	movlw	-25
  5454  018E50  17FD               	andwf	253,f,b	;volatile
  5455                           
  5456                           ; BSR set to: 59
  5457                           ;eadog.c: 80:  DMA1CON1bits.SSTP = 1;
  5458  018E52  81FD               	bsf	253,0,b	;volatile
  5459                           
  5460                           ; BSR set to: 59
  5461                           ;eadog.c: 81:  DMA1SSA = (uint32_t) & ring_buf1;
  5462  018E54  0E43               	movlw	low _ring_buf1
  5463  018E56  6FF9               	movwf	249,b	;volatile
  5464  018E58  0E04               	movlw	high _ring_buf1
  5465  018E5A  6FFA               	movwf	250,b	;volatile
  5466  018E5C  0E00               	movlw	low (_ring_buf1 shr (0+16))
  5467  018E5E  6FFB               	movwf	251,b	;volatile
  5468                           
  5469                           ; BSR set to: 59
  5470                           ;eadog.c: 82:  DMA1CON0bits.DGO = 0;
  5471  018E60  9BFC               	bcf	252,5,b	;volatile
  5472                           
  5473                           ; BSR set to: 59
  5474                           ;eadog.c: 83:  SPI1INTFbits.SPI1TXUIF = 1;
  5475  018E62  013D               	movlb	61	; () banked
  5476  018E64  831A               	bsf	26,1,b	;volatile
  5477                           
  5478                           ; BSR set to: 61
  5479                           ;eadog.c: 84:  LATEbits.LATE2 = 0;
  5480  018E66  94BE               	bcf	190,2,c	;volatile
  5481                           
  5482                           ; BSR set to: 61
  5483                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  5484  018E68  0012               	return		;funcret
  5485  018E6A                     __end_of_init_display:
  5486                           	opt callstack 0
  5487                           
  5488 ;; *************** function _send_lcd_cmd_long *****************
  5489 ;; Defined at:
  5490 ;;		line 129 in file "eadog.c"
  5491 ;; Parameters:    Size  Location     Type
  5492 ;;  cmd             1  [STACK] const unsigned char 
  5493 ;; Auto vars:     Size  Location     Type
  5494 ;;		None
  5495 ;; Return value:  Size  Location     Type
  5496 ;;                  1  [STACK] void 
  5497 ;; Registers used:
  5498 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5499 ;; Tracked objects:
  5500 ;;		On entry : 3F/0
  5501 ;;		On exit  : 3F/0
  5502 ;;		Unchanged: 0/0
  5503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5508 ;;Total ram usage:        0 bytes
  5509 ;; Hardware stack levels used:    1
  5510 ;; Hardware stack levels required when called:   16
  5511 ;; This function calls:
  5512 ;;		_SPI1_Exchange8bit
  5513 ;;		_wdtdelay
  5514 ;; This function is called by:
  5515 ;;		_init_display
  5516 ;; This function uses a reentrant model
  5517 ;;
  5518                           
  5519                           	psect	text11
  5520  01A5F6                     __ptext11:
  5521                           	opt callstack 0
  5522  01A5F6                     _send_lcd_cmd_long:
  5523                           	opt callstack 13
  5524                           
  5525                           ; BSR set to: 61
  5526                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5527                           ;incstack = 0
  5528                           ;eadog.c: 129: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 130: {;eadog.c:
      +                           131:  do { LATCbits.LATC1 = 0; } while(0);
  5529  01A5F6  92BC               	bcf	188,1,c	;volatile
  5530                           
  5531                           ;eadog.c: 132:  do { LATCbits.LATC2 = 0; } while(0);
  5532  01A5F8  94BC               	bcf	188,2,c	;volatile
  5533                           
  5534                           ;eadog.c: 133:  SPI1_Exchange8bit(cmd);
  5535                           ;stkvar	_cmd @ sp[(0)+-1]
  5536  01A5FA  0EFF               	movlw	-1
  5537  01A5FC  50E3               	movf	plusw1,w,c
  5538  01A5FE  6EE6               	movwf	postinc1,c
  5539  01A600  ECEF  F0D4         	call	_SPI1_Exchange8bit	;wreg free
  5540                           
  5541                           ; BSR set to: 57
  5542                           ;eadog.c: 134:  wdtdelay(800);
  5543  01A604  0E20               	movlw	32
  5544  01A606  6EE6               	movwf	postinc1,c
  5545  01A608  0E03               	movlw	3
  5546  01A60A  6EE6               	movwf	postinc1,c
  5547  01A60C  0E00               	movlw	0
  5548  01A60E  6EE6               	movwf	postinc1,c
  5549  01A610  0E00               	movlw	0
  5550  01A612  6EE6               	movwf	postinc1,c
  5551  01A614  EC6D  F0CE         	call	_wdtdelay	;wreg free
  5552                           
  5553                           ; BSR set to: 0
  5554  01A618  82BC               	bsf	188,1,c	;volatile
  5555                           
  5556                           ; BSR set to: 0
  5557                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  5558  01A61A  52E5               	movf	postdec1,f,c
  5559  01A61C  0012               	return		;funcret
  5560  01A61E                     __end_of_send_lcd_cmd_long:
  5561                           	opt callstack 0
  5562                           
  5563 ;; *************** function _send_lcd_cmd *****************
  5564 ;; Defined at:
  5565 ;;		line 117 in file "eadog.c"
  5566 ;; Parameters:    Size  Location     Type
  5567 ;;  cmd             1  [STACK] const unsigned char 
  5568 ;; Auto vars:     Size  Location     Type
  5569 ;;		None
  5570 ;; Return value:  Size  Location     Type
  5571 ;;                  1  [STACK] void 
  5572 ;; Registers used:
  5573 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5574 ;; Tracked objects:
  5575 ;;		On entry : 3F/0
  5576 ;;		On exit  : 3F/0
  5577 ;;		Unchanged: 0/0
  5578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5583 ;;Total ram usage:        0 bytes
  5584 ;; Hardware stack levels used:    1
  5585 ;; Hardware stack levels required when called:   16
  5586 ;; This function calls:
  5587 ;;		_SPI1_Exchange8bit
  5588 ;;		_wdtdelay
  5589 ;; This function is called by:
  5590 ;;		_init_display
  5591 ;; This function uses a reentrant model
  5592 ;;
  5593                           
  5594                           	psect	text12
  5595  01A61E                     __ptext12:
  5596                           	opt callstack 0
  5597  01A61E                     _send_lcd_cmd:
  5598                           	opt callstack 13
  5599                           
  5600                           ; BSR set to: 0
  5601                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5602                           ;incstack = 0
  5603                           ;eadog.c: 117: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 118: {;eadog.c: 119:
      +                            do { LATCbits.LATC1 = 0; } while(0);
  5604  01A61E  92BC               	bcf	188,1,c	;volatile
  5605                           
  5606                           ;eadog.c: 120:  do { LATCbits.LATC2 = 0; } while(0);
  5607  01A620  94BC               	bcf	188,2,c	;volatile
  5608                           
  5609                           ;eadog.c: 121:  SPI1_Exchange8bit(cmd);
  5610                           ;stkvar	_cmd @ sp[(0)+-1]
  5611  01A622  0EFF               	movlw	-1
  5612  01A624  50E3               	movf	plusw1,w,c
  5613  01A626  6EE6               	movwf	postinc1,c
  5614  01A628  ECEF  F0D4         	call	_SPI1_Exchange8bit	;wreg free
  5615                           
  5616                           ; BSR set to: 57
  5617                           ;eadog.c: 122:  wdtdelay(30);
  5618  01A62C  0E1E               	movlw	30
  5619  01A62E  6EE6               	movwf	postinc1,c
  5620  01A630  0E00               	movlw	0
  5621  01A632  6EE6               	movwf	postinc1,c
  5622  01A634  0E00               	movlw	0
  5623  01A636  6EE6               	movwf	postinc1,c
  5624  01A638  0E00               	movlw	0
  5625  01A63A  6EE6               	movwf	postinc1,c
  5626  01A63C  EC6D  F0CE         	call	_wdtdelay	;wreg free
  5627                           
  5628                           ; BSR set to: 0
  5629  01A640  82BC               	bsf	188,1,c	;volatile
  5630                           
  5631                           ; BSR set to: 0
  5632                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  5633  01A642  52E5               	movf	postdec1,f,c
  5634  01A644  0012               	return		;funcret
  5635  01A646                     __end_of_send_lcd_cmd:
  5636                           	opt callstack 0
  5637                           
  5638 ;; *************** function _SPI1_Exchange8bit *****************
  5639 ;; Defined at:
  5640 ;;		line 79 in file "mcc_generated_files/spi1.c"
  5641 ;; Parameters:    Size  Location     Type
  5642 ;;  data            1  [STACK] unsigned char 
  5643 ;; Auto vars:     Size  Location     Type
  5644 ;;		None
  5645 ;; Return value:  Size  Location     Type
  5646 ;;                  1  [STACK] unsigned char 
  5647 ;; Registers used:
  5648 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  5649 ;; Tracked objects:
  5650 ;;		On entry : 0/0
  5651 ;;		On exit  : 3F/39
  5652 ;;		Unchanged: 0/0
  5653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5657 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5658 ;;Total ram usage:        0 bytes
  5659 ;; Hardware stack levels used:    1
  5660 ;; Hardware stack levels required when called:   15
  5661 ;; This function calls:
  5662 ;;		Nothing
  5663 ;; This function is called by:
  5664 ;;		_send_lcd_cmd
  5665 ;;		_send_lcd_cmd_long
  5666 ;; This function uses a reentrant model
  5667 ;;
  5668                           
  5669                           	psect	text13
  5670  01A9DE                     __ptext13:
  5671                           	opt callstack 0
  5672  01A9DE                     _SPI1_Exchange8bit:
  5673                           	opt callstack 13
  5674                           
  5675                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  5676                           
  5677                           ; BSR set to: 0
  5678                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5679                           ;incstack = 0
  5680  01A9DE  0E01               	movlw	1
  5681  01A9E0  013D               	movlb	61	; () banked
  5682  01A9E2  6F12               	movwf	18,b	;volatile
  5683                           
  5684                           ; BSR set to: 61
  5685                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  5686                           ;stkvar	_data @ sp[(0)+-1]
  5687  01A9E4  0EFF               	movlw	-1
  5688  01A9E6  006F FF8F FD11     	movff	plusw1,15633	;volatile
  5689  01A9EC                     l807:
  5690                           
  5691                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  5692  01A9EC  0139               	movlb	57	; () banked
  5693  01A9EE  A9A2               	btfss	162,4,b	;volatile
  5694  01A9F0  D7FD               	goto	l807
  5695                           
  5696                           ; BSR set to: 57
  5697                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  5698  01A9F2  006F F440  F001    	movff	15632,btemp	;volatile
  5699                           
  5700                           ; BSR set to: 57
  5701                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  5702  01A9F8  52E5               	movf	postdec1,f,c
  5703  01A9FA  0012               	return		;funcret
  5704  01A9FC                     __end_of_SPI1_Exchange8bit:
  5705                           	opt callstack 0
  5706                           
  5707 ;; *************** function _ringBufS_init *****************
  5708 ;; Defined at:
  5709 ;;		line 22 in file "ringbufs.c"
  5710 ;; Parameters:    Size  Location     Type
  5711 ;;  _this           2  [STACK] PTR volatile struct ring
  5712 ;;		 -> ring_buf2(67), ring_buf1(67), 
  5713 ;; Auto vars:     Size  Location     Type
  5714 ;;		None
  5715 ;; Return value:  Size  Location     Type
  5716 ;;                  1  [STACK] void 
  5717 ;; Registers used:
  5718 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  5719 ;; Tracked objects:
  5720 ;;		On entry : 0/0
  5721 ;;		On exit  : 0/0
  5722 ;;		Unchanged: 0/0
  5723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5728 ;;Total ram usage:        0 bytes
  5729 ;; Hardware stack levels used:    1
  5730 ;; Hardware stack levels required when called:   16
  5731 ;; This function calls:
  5732 ;;		_memset
  5733 ;; This function is called by:
  5734 ;;		_init_display
  5735 ;; This function uses a reentrant model
  5736 ;;
  5737                           
  5738                           	psect	text14
  5739  01A646                     __ptext14:
  5740                           	opt callstack 0
  5741  01A646                     _ringBufS_init:
  5742                           	opt callstack 13
  5743                           
  5744                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  5745                           
  5746                           ; BSR set to: 57
  5747                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5748                           ;incstack = 0
  5749  01A646  0E43               	movlw	67
  5750  01A648  6EE6               	movwf	postinc1,c
  5751  01A64A  0E00               	movlw	0
  5752  01A64C  6EE6               	movwf	postinc1,c
  5753  01A64E  0E00               	movlw	0
  5754  01A650  6EE6               	movwf	postinc1,c
  5755  01A652  0E00               	movlw	0
  5756  01A654  6EE6               	movwf	postinc1,c
  5757                           
  5758                           ;stkvar	__this @ sp[(-4)+-2]
  5759  01A656  0EFA               	movlw	-6
  5760  01A658  006F FF8F FFE6     	movff	plusw1,postinc1
  5761  01A65E  006F FF8F FFE6     	movff	plusw1,postinc1
  5762  01A664  EC92  F0AF         	call	_memset	;wreg free
  5763                           
  5764                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  5765  01A668  52E5               	movf	postdec1,f,c
  5766  01A66A  52E5               	movf	postdec1,f,c
  5767  01A66C  0012               	return		;funcret
  5768  01A66E                     __end_of_ringBufS_init:
  5769                           	opt callstack 0
  5770                           
  5771 ;; *************** function _init_bsoc *****************
  5772 ;; Defined at:
  5773 ;;		line 87 in file "bsoc.c"
  5774 ;; Parameters:    Size  Location     Type
  5775 ;;		None
  5776 ;; Auto vars:     Size  Location     Type
  5777 ;;		None
  5778 ;; Return value:  Size  Location     Type
  5779 ;;                  1  [STACK] void 
  5780 ;; Registers used:
  5781 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  5782 ;; Tracked objects:
  5783 ;;		On entry : 3F/1
  5784 ;;		On exit  : 0/0
  5785 ;;		Unchanged: 0/0
  5786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5791 ;;Total ram usage:        0 bytes
  5792 ;; Hardware stack levels used:    1
  5793 ;; Hardware stack levels required when called:   18
  5794 ;; This function calls:
  5795 ;;		_TMR3_SetInterruptHandler
  5796 ;;		_Volts_to_SOC
  5797 ;;		___fldiv
  5798 ;;		___flmul
  5799 ;;		___fltol
  5800 ;;		___xxtofl
  5801 ;;		_conv_raw_result
  5802 ;; This function is called by:
  5803 ;;		_main
  5804 ;; This function uses a reentrant model
  5805 ;;
  5806                           
  5807                           	psect	text15
  5808  017BF0                     __ptext15:
  5809                           	opt callstack 0
  5810  017BF0                     _init_bsoc:
  5811                           	opt callstack 12
  5812                           
  5813                           ;bsoc.c: 92:  C.soc = Volts_to_SOC((uint32_t) conv_raw_result(V_BAT, CONV) * 1000.0);
  5814                           
  5815                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5816                           ;incstack = 0
  5817  017BF0  0E00               	movlw	0
  5818  017BF2  6EE6               	movwf	postinc1,c
  5819  017BF4  0E00               	movlw	0
  5820  017BF6  6EE6               	movwf	postinc1,c
  5821  017BF8  0E7A               	movlw	122
  5822  017BFA  6EE6               	movwf	postinc1,c
  5823  017BFC  0E44               	movlw	68
  5824  017BFE  6EE6               	movwf	postinc1,c
  5825  017C00  0E00               	movlw	0
  5826  017C02  6EE6               	movwf	postinc1,c
  5827  017C04  0E04               	movlw	4
  5828  017C06  6EE6               	movwf	postinc1,c
  5829  017C08  ECF8  F0A3         	call	_conv_raw_result	;wreg free
  5830  017C0C  0060  F007  FFE6   	movff	btemp,postinc1
  5831  017C12  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5832  017C18  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5833  017C1E  0060  F013  FFE6   	movff	btemp+3,postinc1
  5834  017C24  EC3F  F0BD         	call	___fltol	;wreg free
  5835  017C28  0060  F007  FFE6   	movff	btemp,postinc1
  5836  017C2E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5837  017C34  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5838  017C3A  0060  F013  FFE6   	movff	btemp+3,postinc1
  5839  017C40  0E00               	movlw	0
  5840  017C42  6EE6               	movwf	postinc1,c
  5841  017C44  EC1A  F0B8         	call	___xxtofl	;wreg free
  5842  017C48  0060  F007  FFE6   	movff	btemp,postinc1
  5843  017C4E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5844  017C54  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5845  017C5A  0060  F013  FFE6   	movff	btemp+3,postinc1
  5846  017C60  EC05  F096         	call	___flmul	;wreg free
  5847  017C64  0060  F007  FFE6   	movff	btemp,postinc1
  5848  017C6A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5849  017C70  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5850  017C76  0060  F013  FFE6   	movff	btemp+3,postinc1
  5851  017C7C  EC3F  F0BD         	call	___fltol	;wreg free
  5852  017C80  0060  F007  FFE6   	movff	btemp,postinc1
  5853  017C86  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5854  017C8C  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5855  017C92  0060  F013  FFE6   	movff	btemp+3,postinc1
  5856  017C98  ECAD  F0CA         	call	_Volts_to_SOC	;wreg free
  5857  017C9C  0060  F004  F1AA   	movff	btemp,_C+170	;volatile
  5858  017CA2  0060  F008  F1AB   	movff	btemp+1,_C+171	;volatile
  5859                           
  5860                           ;bsoc.c: 93:  C.dynamic_ah = C.bank_ah * (C.soc / 100.0);
  5861  017CA8  0060  F623  FFE6   	movff	_C+136,postinc1
  5862  017CAE  0060  F627  FFE6   	movff	_C+137,postinc1
  5863  017CB4  0060  F62B  FFE6   	movff	_C+138,postinc1
  5864  017CBA  0060  F62F  FFE6   	movff	_C+139,postinc1
  5865  017CC0  0E00               	movlw	0
  5866  017CC2  6EE6               	movwf	postinc1,c
  5867  017CC4  0E00               	movlw	0
  5868  017CC6  6EE6               	movwf	postinc1,c
  5869  017CC8  0EC8               	movlw	200
  5870  017CCA  6EE6               	movwf	postinc1,c
  5871  017CCC  0E42               	movlw	66
  5872  017CCE  6EE6               	movwf	postinc1,c
  5873  017CD0  0101               	movlb	1	; () banked
  5874  017CD2  51AA               	movf	(_C+170)& (0+255),w,b	;volatile
  5875  017CD4  6E09               	movwf	(btemp+8)^0,c
  5876  017CD6  51AB               	movf	(_C+171)& (0+255),w,b	;volatile
  5877  017CD8  6E0A               	movwf	(btemp+9)^0,c
  5878  017CDA  6A0B               	clrf	(btemp+10)^0,c
  5879  017CDC  6A0C               	clrf	(btemp+11)^0,c
  5880  017CDE  0060  F027  FFE6   	movff	btemp+8,postinc1
  5881  017CE4  0060  F02B  FFE6   	movff	btemp+9,postinc1
  5882  017CEA  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5883  017CF0  0060  F033  FFE6   	movff	btemp+11,postinc1
  5884  017CF6  0E00               	movlw	0
  5885  017CF8  6EE6               	movwf	postinc1,c
  5886  017CFA  EC1A  F0B8         	call	___xxtofl	;wreg free
  5887  017CFE  0060  F007  FFE6   	movff	btemp,postinc1
  5888  017D04  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5889  017D0A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5890  017D10  0060  F013  FFE6   	movff	btemp+3,postinc1
  5891  017D16  EC3B  F0A1         	call	___fldiv	;wreg free
  5892  017D1A  0060  F007  FFE6   	movff	btemp,postinc1
  5893  017D20  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5894  017D26  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5895  017D2C  0060  F013  FFE6   	movff	btemp+3,postinc1
  5896  017D32  EC05  F096         	call	___flmul	;wreg free
  5897  017D36  0060  F004  F18C   	movff	btemp,_C+140	;volatile
  5898  017D3C  0060  F008  F18D   	movff	btemp+1,_C+141	;volatile
  5899  017D42  0060  F00C  F18E   	movff	btemp+2,_C+142	;volatile
  5900  017D48  0060  F010  F18F   	movff	btemp+3,_C+143	;volatile
  5901                           
  5902                           ;bsoc.c: 94:  TMR3_SetInterruptHandler(calc_bsoc);
  5903  017D4E  0EF0               	movlw	low _calc_bsoc
  5904  017D50  6EE6               	movwf	postinc1,c
  5905  017D52  0E3B               	movlw	high _calc_bsoc
  5906  017D54  6EE6               	movwf	postinc1,c
  5907  017D56  0E01               	movlw	low (_calc_bsoc shr (0+16))
  5908  017D58  6EE6               	movwf	postinc1,c
  5909  017D5A  ECAF  F0D3         	call	_TMR3_SetInterruptHandler	;wreg free
  5910                           
  5911                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  5912  017D5E  0012               	return		;funcret
  5913  017D60                     __end_of_init_bsoc:
  5914                           	opt callstack 0
  5915                           
  5916 ;; *************** function _Volts_to_SOC *****************
  5917 ;; Defined at:
  5918 ;;		line 151 in file "bsoc.c"
  5919 ;; Parameters:    Size  Location     Type
  5920 ;;  cvoltage        4  [STACK] unsigned long 
  5921 ;; Auto vars:     Size  Location     Type
  5922 ;;		None
  5923 ;; Return value:  Size  Location     Type
  5924 ;;                  2  [STACK] unsigned short 
  5925 ;; Registers used:
  5926 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, tblptrl, tblptrh, tblptru, prodl, prodh
  5927 ;; Tracked objects:
  5928 ;;		On entry : 0/1
  5929 ;;		On exit  : 0/0
  5930 ;;		Unchanged: 0/0
  5931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5935 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5936 ;;Total ram usage:        0 bytes
  5937 ;; Hardware stack levels used:    1
  5938 ;; Hardware stack levels required when called:   15
  5939 ;; This function calls:
  5940 ;;		Nothing
  5941 ;; This function is called by:
  5942 ;;		_init_bsoc
  5943 ;; This function uses a reentrant model
  5944 ;;
  5945                           
  5946                           	psect	text16
  5947  01955A                     __ptext16:
  5948                           	opt callstack 0
  5949  01955A                     _Volts_to_SOC:
  5950                           	opt callstack 14
  5951                           
  5952                           ;bsoc.c: 151: uint16_t Volts_to_SOC(uint32_t cvoltage);bsoc.c: 152: {;bsoc.c: 153:  stat
      +                          ic uint8_t slot;;bsoc.c: 155:  C.soc = 0;
  5953                           
  5954                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5955                           ;incstack = 0
  5956  01955A  0101               	movlb	1	; () banked
  5957  01955C  6BAA               	clrf	(_C+170)& (0+255),b	;volatile
  5958  01955E  6BAB               	clrf	(_C+171)& (0+255),b	;volatile
  5959                           
  5960                           ;bsoc.c: 156:  for (slot = 0; slot < 26; slot++) {
  5961  019560  6A2D               	clrf	Volts_to_SOC@slot^0,c
  5962  019562                     l10028:
  5963                           
  5964                           ;bsoc.c: 157:   if (cvoltage > BVSOC_TABLE[slot][0]) {
  5965                           ;stkvar	_cvoltage @ sp[(0)+-4]
  5966  019562  502D               	movf	Volts_to_SOC@slot^0,w,c
  5967  019564  0D08               	mullw	8
  5968  019566  0E4F               	movlw	low _BVSOC_TABLE
  5969  019568  24F3               	addwf	243,w,c
  5970  01956A  6EF6               	movwf	tblptrl,c
  5971  01956C  0EFC               	movlw	high _BVSOC_TABLE
  5972  01956E  20F4               	addwfc	244,w,c
  5973  019570  6EF7               	movwf	tblptrh,c
  5974  019572                     	if	1	;There are 3 active tblptr bytes
  5975  019572  6AF8               	clrf	tblptru,c
  5976  019574  0E00               	movlw	low (__mediumconst shr (0+16))
  5977  019576  22F8               	addwfc	tblptru,f,c
  5978  019578                     	endif
  5979  019578  0EFC               	movlw	-4
  5980  01957A  50E3               	movf	plusw1,w,c
  5981  01957C  0009               	tblrd		*+
  5982  01957E  5CF5               	subwf	tablat,w,c
  5983  019580  0EFD               	movlw	-3
  5984  019582  50E3               	movf	plusw1,w,c
  5985  019584  0009               	tblrd		*+
  5986  019586  58F5               	subwfb	tablat,w,c
  5987  019588  0EFE               	movlw	-2
  5988  01958A  50E3               	movf	plusw1,w,c
  5989  01958C  0009               	tblrd		*+
  5990  01958E  58F5               	subwfb	tablat,w,c
  5991  019590  0EFF               	movlw	-1
  5992  019592  50E3               	movf	plusw1,w,c
  5993  019594  0009               	tblrd		*+
  5994  019596  58F5               	subwfb	tablat,w,c
  5995  019598  B0D8               	btfsc	status,0,c
  5996  01959A  D017               	goto	l10032
  5997                           
  5998                           ;bsoc.c: 158:    C.soc = BVSOC_TABLE[slot][1];
  5999  01959C  502D               	movf	Volts_to_SOC@slot^0,w,c
  6000  01959E  0D08               	mullw	8
  6001  0195A0  0E04               	movlw	4
  6002  0195A2  26F3               	addwf	243,f,c
  6003  0195A4  0E00               	movlw	0
  6004  0195A6  22F4               	addwfc	244,f,c
  6005  0195A8  0E4F               	movlw	low _BVSOC_TABLE
  6006  0195AA  24F3               	addwf	243,w,c
  6007  0195AC  6EF6               	movwf	tblptrl,c
  6008  0195AE  0EFC               	movlw	high _BVSOC_TABLE
  6009  0195B0  20F4               	addwfc	244,w,c
  6010  0195B2  6EF7               	movwf	tblptrh,c
  6011  0195B4                     	if	1	;There are 3 active tblptr bytes
  6012  0195B4  6AF8               	clrf	tblptru,c
  6013  0195B6  0E00               	movlw	low (__mediumconst shr (0+16))
  6014  0195B8  22F8               	addwfc	tblptru,f,c
  6015  0195BA                     	endif
  6016  0195BA  0009               	tblrd		*+
  6017  0195BC  006F FFD4  F1AA    	movff	tablat,_C+170	;volatile
  6018  0195C2  000A               	tblrd		*-
  6019  0195C4  006F FFD4  F1AB    	movff	tablat,_C+171	;volatile
  6020  0195CA                     l10032:
  6021                           
  6022                           ;bsoc.c: 160:  }
  6023  0195CA  2A2D               	incf	Volts_to_SOC@slot^0,f,c
  6024  0195CC  0E19               	movlw	25
  6025  0195CE  642D               	cpfsgt	Volts_to_SOC@slot^0,c
  6026  0195D0  D7C8               	goto	l10028
  6027                           
  6028                           ;bsoc.c: 162:  return C.soc;
  6029  0195D2  EE20  F1AA         	lfsr	2,_C+170	;volatile
  6030  0195D6  006F FF78  F001    	movff	postinc2,btemp
  6031  0195DC  006F FF74  F002    	movff	postdec2,btemp+1
  6032                           
  6033                           ; _Volts_to_SOC: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, 
      +                          argsize = 4, vargsize = 0
  6034  0195E2  52E5               	movf	postdec1,f,c
  6035  0195E4  52E5               	movf	postdec1,f,c
  6036  0195E6  52E5               	movf	postdec1,f,c
  6037  0195E8  52E5               	movf	postdec1,f,c
  6038  0195EA  0012               	return		;funcret
  6039  0195EC                     __end_of_Volts_to_SOC:
  6040                           	opt callstack 0
  6041                           
  6042 ;; *************** function _hid_display *****************
  6043 ;; Defined at:
  6044 ;;		line 17 in file "hid.c"
  6045 ;; Parameters:    Size  Location     Type
  6046 ;;  h               1  [STACK] PTR struct H_data
  6047 ;;		 -> H(7), 
  6048 ;; Auto vars:     Size  Location     Type
  6049 ;;		None
  6050 ;; Return value:  Size  Location     Type
  6051 ;;                  1  [STACK] PTR struct H_data
  6052 ;; Registers used:
  6053 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
  6054 ;; Tracked objects:
  6055 ;;		On entry : 3F/1
  6056 ;;		On exit  : 0/0
  6057 ;;		Unchanged: 0/0
  6058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6062 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6063 ;;Total ram usage:        0 bytes
  6064 ;; Hardware stack levels used:    1
  6065 ;; Hardware stack levels required when called:   17
  6066 ;; This function calls:
  6067 ;;		_hid_input
  6068 ;; This function is called by:
  6069 ;;		_main
  6070 ;; This function uses a reentrant model
  6071 ;;
  6072                           
  6073                           	psect	text17
  6074  018B8A                     __ptext17:
  6075                           	opt callstack 0
  6076  018B8A                     _hid_display:
  6077                           	opt callstack 13
  6078                           
  6079                           ;hid.c: 17: H_data* hid_display(H_data* h);hid.c: 18: {;hid.c: 19:  hid_input(h);
  6080                           ;stkvar	_h @ sp[(0)+-1]
  6081                           
  6082                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6083                           ;incstack = 0
  6084  018B8A  0EFF               	movlw	-1
  6085  018B8C  50E3               	movf	plusw1,w,c
  6086  018B8E  6EE6               	movwf	postinc1,c
  6087  018B90  EC88  F0CB         	call	_hid_input	;wreg free
  6088                           
  6089                           ;hid.c: 21:  switch (h->h_state) {
  6090  018B94  D066               	goto	l10356
  6091  018B96                     l10334:
  6092                           
  6093                           ;hid.c: 23:   h->h_state = H_STATE_DISPLAY;
  6094                           ;stkvar	_h @ sp[(0)+-1]
  6095  018B96  0EFF               	movlw	-1
  6096  018B98  50E3               	movf	plusw1,w,c
  6097  018B9A  6ED9               	movwf	fsr2l,c
  6098  018B9C  6ADA               	clrf	fsr2h,c
  6099  018B9E  0E01               	movlw	1
  6100  018BA0  26D9               	addwf	fsr2l,f,c
  6101  018BA2  0E01               	movlw	1
  6102  018BA4  6EDF               	movwf	indf2,c
  6103                           
  6104                           ;hid.c: 24:   h->hid_display = HID_MAIN;
  6105                           ;stkvar	_h @ sp[(0)+-1]
  6106  018BA6  0EFF               	movlw	-1
  6107  018BA8  50E3               	movf	plusw1,w,c
  6108  018BAA  6ED9               	movwf	fsr2l,c
  6109  018BAC  6ADA               	clrf	fsr2h,c
  6110  018BAE  0E00               	movlw	0
  6111  018BB0  6EDF               	movwf	indf2,c
  6112                           
  6113                           ;hid.c: 25:   h->wait_enter = 1;
  6114                           ;stkvar	_h @ sp[(0)+-1]
  6115  018BB2  0EFF               	movlw	-1
  6116  018BB4  50E3               	movf	plusw1,w,c
  6117  018BB6  6ED9               	movwf	fsr2l,c
  6118  018BB8  6ADA               	clrf	fsr2h,c
  6119  018BBA  0E04               	movlw	4
  6120  018BBC  26D9               	addwf	fsr2l,f,c
  6121  018BBE  0E01               	movlw	1
  6122  018BC0  6EDF               	movwf	indf2,c
  6123                           
  6124                           ;hid.c: 26:   h->wait_select = 1;
  6125                           ;stkvar	_h @ sp[(0)+-1]
  6126  018BC2  0EFF               	movlw	-1
  6127  018BC4  50E3               	movf	plusw1,w,c
  6128  018BC6  6ED9               	movwf	fsr2l,c
  6129  018BC8  6ADA               	clrf	fsr2h,c
  6130  018BCA  0E02               	movlw	2
  6131  018BCC  26D9               	addwf	fsr2l,f,c
  6132  018BCE  0E01               	movlw	1
  6133  018BD0  6EDF               	movwf	indf2,c
  6134                           
  6135                           ;hid.c: 27:   h->select_p = SW_OFF;
  6136                           ;stkvar	_h @ sp[(0)+-1]
  6137  018BD2  0EFF               	movlw	-1
  6138  018BD4  50E3               	movf	plusw1,w,c
  6139  018BD6  6ED9               	movwf	fsr2l,c
  6140  018BD8  6ADA               	clrf	fsr2h,c
  6141  018BDA  0E03               	movlw	3
  6142  018BDC  26D9               	addwf	fsr2l,f,c
  6143  018BDE  0E00               	movlw	0
  6144  018BE0  6EDF               	movwf	indf2,c
  6145                           
  6146                           ;hid.c: 28:   h->enter_p = SW_OFF;
  6147                           ;stkvar	_h @ sp[(0)+-1]
  6148  018BE2  0EFF               	movlw	-1
  6149  018BE4  50E3               	movf	plusw1,w,c
  6150  018BE6  6ED9               	movwf	fsr2l,c
  6151  018BE8  6ADA               	clrf	fsr2h,c
  6152  018BEA  0E05               	movlw	5
  6153  018BEC  26D9               	addwf	fsr2l,f,c
  6154  018BEE  0E00               	movlw	0
  6155  018BF0  D036               	goto	L1
  6156  018BF2                     l10346:
  6157                           
  6158                           ;hid.c: 32:   if (!h->wait_select && (h->select_p == SW_OFF)) {
  6159                           ;stkvar	_h @ sp[(0)+-1]
  6160  018BF2  0EFF               	movlw	-1
  6161  018BF4  50E3               	movf	plusw1,w,c
  6162  018BF6  6ED9               	movwf	fsr2l,c
  6163  018BF8  6ADA               	clrf	fsr2h,c
  6164  018BFA  0E02               	movlw	2
  6165  018BFC  26D9               	addwf	fsr2l,f,c
  6166  018BFE  50DF               	movf	indf2,w,c
  6167  018C00  A4D8               	btfss	status,2,c
  6168  018C02  D042               	goto	l1912
  6169                           
  6170                           ;stkvar	_h @ sp[(0)+-1]
  6171  018C04  0EFF               	movlw	-1
  6172  018C06  50E3               	movf	plusw1,w,c
  6173  018C08  6ED9               	movwf	fsr2l,c
  6174  018C0A  6ADA               	clrf	fsr2h,c
  6175  018C0C  0E03               	movlw	3
  6176  018C0E  26D9               	addwf	fsr2l,f,c
  6177  018C10  50DF               	movf	indf2,w,c
  6178  018C12  A4D8               	btfss	status,2,c
  6179  018C14  D039               	goto	l1912
  6180                           
  6181                           ;hid.c: 33:    h->sequence = ++h->sequence & 0x3;
  6182                           ;stkvar	_h @ sp[(0)+-1]
  6183  018C16  0EFF               	movlw	-1
  6184  018C18  50E3               	movf	plusw1,w,c
  6185  018C1A  6ED9               	movwf	fsr2l,c
  6186  018C1C  6ADA               	clrf	fsr2h,c
  6187  018C1E  0E06               	movlw	6
  6188  018C20  26D9               	addwf	fsr2l,f,c
  6189                           
  6190                           ;stkvar	_h @ sp[(0)+-1]
  6191  018C22  0EFF               	movlw	-1
  6192  018C24  50E3               	movf	plusw1,w,c
  6193  018C26  6EE9               	movwf	fsr0l,c
  6194  018C28  6AEA               	clrf	fsr0h,c
  6195  018C2A  0E06               	movlw	6
  6196  018C2C  26E9               	addwf	fsr0l,f,c
  6197  018C2E  2AEF               	incf	indf0,f,c
  6198  018C30  50EF               	movf	indf0,w,c
  6199  018C32  0B03               	andlw	3
  6200  018C34  6EDF               	movwf	indf2,c
  6201                           
  6202                           ;hid.c: 34:    h->hid_display = h->sequence;
  6203                           ;stkvar	_h @ sp[(0)+-1]
  6204  018C36  0EFF               	movlw	-1
  6205  018C38  50E3               	movf	plusw1,w,c
  6206  018C3A  6ED9               	movwf	fsr2l,c
  6207  018C3C  6ADA               	clrf	fsr2h,c
  6208  018C3E  0E06               	movlw	6
  6209  018C40  26D9               	addwf	fsr2l,f,c
  6210                           
  6211                           ;stkvar	_h @ sp[(0)+-1]
  6212  018C42  0EFF               	movlw	-1
  6213  018C44  50E3               	movf	plusw1,w,c
  6214  018C46  6EE9               	movwf	fsr0l,c
  6215  018C48  6AEA               	clrf	fsr0h,c
  6216  018C4A  006F FF7F FFEF     	movff	indf2,indf0
  6217                           
  6218                           ;hid.c: 35:    h->wait_select = 1;
  6219                           ;stkvar	_h @ sp[(0)+-1]
  6220  018C50  0EFF               	movlw	-1
  6221  018C52  50E3               	movf	plusw1,w,c
  6222  018C54  6ED9               	movwf	fsr2l,c
  6223  018C56  6ADA               	clrf	fsr2h,c
  6224  018C58  0E02               	movlw	2
  6225  018C5A  26D9               	addwf	fsr2l,f,c
  6226  018C5C  0E01               	movlw	1
  6227  018C5E                     L1:
  6228  018C5E  6EDF               	movwf	indf2,c
  6229  018C60  D013               	goto	l1912
  6230  018C62                     l10356:
  6231                           
  6232                           ;stkvar	_h @ sp[(0)+-1]
  6233  018C62  0EFF               	movlw	-1
  6234  018C64  50E3               	movf	plusw1,w,c
  6235  018C66  6ED9               	movwf	fsr2l,c
  6236  018C68  6ADA               	clrf	fsr2h,c
  6237  018C6A  0E01               	movlw	1
  6238  018C6C  26D9               	addwf	fsr2l,f,c
  6239  018C6E  50DF               	movf	indf2,w,c
  6240  018C70  6E0B               	movwf	(btemp+10)^0,c
  6241  018C72  6A0C               	clrf	(btemp+11)^0,c
  6242                           
  6243                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6244                           ; Switch size 1, requested type "simple"
  6245                           ; Number of cases is 1, Range of values is 0 to 0
  6246                           ; switch strategies available:
  6247                           ; Name         Instructions Cycles
  6248                           ; simple_byte            4     3 (average)
  6249                           ;	Chosen strategy is simple_byte
  6250  018C74  500C               	movf	(btemp+11)^0,w,c
  6251  018C76  0A00               	xorlw	0	; case 0
  6252  018C78  A4D8               	btfss	status,2,c
  6253  018C7A  D7BB               	goto	l10346
  6254                           
  6255                           ; Switch size 1, requested type "simple"
  6256                           ; Number of cases is 2, Range of values is 0 to 1
  6257                           ; switch strategies available:
  6258                           ; Name         Instructions Cycles
  6259                           ; simple_byte            7     4 (average)
  6260                           ;	Chosen strategy is simple_byte
  6261  018C7C  500B               	movf	(btemp+10)^0,w,c
  6262  018C7E  0A00               	xorlw	0	; case 0
  6263  018C80  B4D8               	btfsc	status,2,c
  6264  018C82  D789               	goto	l10334
  6265  018C84  0A01               	xorlw	1	; case 1
  6266  018C86  D7B5               	goto	l10346
  6267  018C88                     l1912:
  6268                           
  6269                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  6270  018C88  52E5               	movf	postdec1,f,c
  6271  018C8A  0012               	return		;funcret
  6272  018C8C                     __end_of_hid_display:
  6273                           	opt callstack 0
  6274                           
  6275 ;; *************** function _hid_input *****************
  6276 ;; Defined at:
  6277 ;;		line 3 in file "hid.c"
  6278 ;; Parameters:    Size  Location     Type
  6279 ;;  h               1  [STACK] PTR struct H_data
  6280 ;;		 -> H(7), 
  6281 ;; Auto vars:     Size  Location     Type
  6282 ;;		None
  6283 ;; Return value:  Size  Location     Type
  6284 ;;                  1  [STACK] PTR struct H_data
  6285 ;; Registers used:
  6286 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh
  6287 ;; Tracked objects:
  6288 ;;		On entry : 0/1
  6289 ;;		On exit  : 0/0
  6290 ;;		Unchanged: 0/0
  6291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6295 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6296 ;;Total ram usage:        0 bytes
  6297 ;; Hardware stack levels used:    1
  6298 ;; Hardware stack levels required when called:   16
  6299 ;; This function calls:
  6300 ;;		_get_switch
  6301 ;; This function is called by:
  6302 ;;		_hid_display
  6303 ;; This function uses a reentrant model
  6304 ;;
  6305                           
  6306                           	psect	text18
  6307  019710                     __ptext18:
  6308                           	opt callstack 0
  6309  019710                     _hid_input:
  6310                           	opt callstack 13
  6311                           
  6312                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
  6313                           
  6314                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6315                           ;incstack = 0
  6316  019710  0E02               	movlw	2
  6317  019712  6EE6               	movwf	postinc1,c
  6318  019714  ECA3  F0D2         	call	_get_switch	;wreg free
  6319  019718  5001               	movf	btemp^0,w,c
  6320  01971A  B4D8               	btfsc	status,2,c
  6321  01971C  D01C               	goto	l9960
  6322                           
  6323                           ;hid.c: 6:   h->wait_select = 0;
  6324                           ;stkvar	_h @ sp[(0)+-1]
  6325  01971E  0EFF               	movlw	-1
  6326  019720  50E3               	movf	plusw1,w,c
  6327  019722  6ED9               	movwf	fsr2l,c
  6328  019724  6ADA               	clrf	fsr2h,c
  6329  019726  0E02               	movlw	2
  6330  019728  26D9               	addwf	fsr2l,f,c
  6331  01972A  0E00               	movlw	0
  6332  01972C  6EDF               	movwf	indf2,c
  6333                           
  6334                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
  6335  01972E  0E02               	movlw	2
  6336  019730  6EE6               	movwf	postinc1,c
  6337  019732  ECA3  F0D2         	call	_get_switch	;wreg free
  6338  019736  5001               	movf	btemp^0,w,c
  6339  019738  B4D8               	btfsc	status,2,c
  6340  01973A  D003               	goto	u9170
  6341  01973C  6A0C               	clrf	(btemp+11)^0,c
  6342  01973E  2A0C               	incf	(btemp+11)^0,f,c
  6343  019740  D001               	goto	u9188
  6344  019742                     u9170:
  6345  019742  6A0C               	clrf	(btemp+11)^0,c
  6346  019744                     u9188:
  6347                           
  6348                           ;stkvar	_h @ sp[(0)+-1]
  6349  019744  0EFF               	movlw	-1
  6350  019746  50E3               	movf	plusw1,w,c
  6351  019748  6ED9               	movwf	fsr2l,c
  6352  01974A  6ADA               	clrf	fsr2h,c
  6353  01974C  0E03               	movlw	3
  6354  01974E  26D9               	addwf	fsr2l,f,c
  6355  019750  0060  F033  FFDF   	movff	btemp+11,indf2
  6356  019756                     l9960:
  6357                           
  6358                           ;hid.c: 10:  if (get_switch(SENTER)) {
  6359  019756  0E03               	movlw	3
  6360  019758  6EE6               	movwf	postinc1,c
  6361  01975A  ECA3  F0D2         	call	_get_switch	;wreg free
  6362  01975E  5001               	movf	btemp^0,w,c
  6363  019760  B4D8               	btfsc	status,2,c
  6364  019762  D01C               	goto	l1903
  6365                           
  6366                           ;hid.c: 11:   h->wait_enter = 0;
  6367                           ;stkvar	_h @ sp[(0)+-1]
  6368  019764  0EFF               	movlw	-1
  6369  019766  50E3               	movf	plusw1,w,c
  6370  019768  6ED9               	movwf	fsr2l,c
  6371  01976A  6ADA               	clrf	fsr2h,c
  6372  01976C  0E04               	movlw	4
  6373  01976E  26D9               	addwf	fsr2l,f,c
  6374  019770  0E00               	movlw	0
  6375  019772  6EDF               	movwf	indf2,c
  6376                           
  6377                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
  6378  019774  0E03               	movlw	3
  6379  019776  6EE6               	movwf	postinc1,c
  6380  019778  ECA3  F0D2         	call	_get_switch	;wreg free
  6381  01977C  5001               	movf	btemp^0,w,c
  6382  01977E  B4D8               	btfsc	status,2,c
  6383  019780  D003               	goto	u9200
  6384  019782  6A0C               	clrf	(btemp+11)^0,c
  6385  019784  2A0C               	incf	(btemp+11)^0,f,c
  6386  019786  D001               	goto	u9218
  6387  019788                     u9200:
  6388  019788  6A0C               	clrf	(btemp+11)^0,c
  6389  01978A                     u9218:
  6390                           
  6391                           ;stkvar	_h @ sp[(0)+-1]
  6392  01978A  0EFF               	movlw	-1
  6393  01978C  50E3               	movf	plusw1,w,c
  6394  01978E  6ED9               	movwf	fsr2l,c
  6395  019790  6ADA               	clrf	fsr2h,c
  6396  019792  0E05               	movlw	5
  6397  019794  26D9               	addwf	fsr2l,f,c
  6398  019796  0060  F033  FFDF   	movff	btemp+11,indf2
  6399  01979C                     l1903:
  6400                           
  6401                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  6402  01979C  52E5               	movf	postdec1,f,c
  6403  01979E  0012               	return		;funcret
  6404  0197A0                     __end_of_hid_input:
  6405                           	opt callstack 0
  6406                           
  6407 ;; *************** function _get_switch *****************
  6408 ;; Defined at:
  6409 ;;		line 18 in file "dio.c"
  6410 ;; Parameters:    Size  Location     Type
  6411 ;;  i               1  [STACK] unsigned char 
  6412 ;; Auto vars:     Size  Location     Type
  6413 ;;		None
  6414 ;; Return value:  Size  Location     Type
  6415 ;;                  1  [STACK] enum E17021
  6416 ;; Registers used:
  6417 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  6418 ;; Tracked objects:
  6419 ;;		On entry : 0/2
  6420 ;;		On exit  : 0/0
  6421 ;;		Unchanged: 0/0
  6422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6427 ;;Total ram usage:        0 bytes
  6428 ;; Hardware stack levels used:    1
  6429 ;; Hardware stack levels required when called:   15
  6430 ;; This function calls:
  6431 ;;		Nothing
  6432 ;; This function is called by:
  6433 ;;		_main
  6434 ;;		_hid_input
  6435 ;; This function uses a reentrant model
  6436 ;;
  6437                           
  6438                           	psect	text19
  6439  01A546                     __ptext19:
  6440                           	opt callstack 0
  6441  01A546                     _get_switch:
  6442                           	opt callstack 13
  6443                           
  6444                           ;dio.c: 18: SW_STATES get_switch(uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 4)
  6445                           ;stkvar	_i @ sp[(0)+-1]
  6446                           
  6447                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6448                           ;incstack = 0
  6449  01A546  0EFF               	movlw	-1
  6450  01A548  006F FF8C  F001    	movff	plusw1,btemp
  6451  01A54E  0E03               	movlw	3
  6452  01A550  6401               	cpfsgt	btemp^0,c
  6453  01A552  D002               	goto	l9242
  6454                           
  6455                           ;dio.c: 21:   return SW_OFF;
  6456  01A554  0E00               	movlw	0
  6457  01A556  D00A               	goto	L2
  6458  01A558                     l9242:
  6459                           
  6460                           ;dio.c: 23:  return S.button[i].sw;
  6461                           ;stkvar	_i @ sp[(0)+-1]
  6462  01A558  0EFF               	movlw	-1
  6463  01A55A  50E3               	movf	plusw1,w,c
  6464  01A55C  0D05               	mullw	5
  6465  01A55E  0EBC               	movlw	low _S
  6466  01A560  24F3               	addwf	243,w,c
  6467  01A562  6ED9               	movwf	fsr2l,c
  6468  01A564  0E02               	movlw	high _S
  6469  01A566  20F4               	addwfc	prodh,w,c
  6470  01A568  6EDA               	movwf	fsr2h,c
  6471  01A56A  50DF               	movf	indf2,w,c
  6472  01A56C                     L2:
  6473  01A56C  6E01               	movwf	btemp^0,c
  6474                           
  6475                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  6476  01A56E  52E5               	movf	postdec1,f,c
  6477  01A570  0012               	return		;funcret
  6478  01A572                     __end_of_get_switch:
  6479                           	opt callstack 0
  6480                           
  6481 ;; *************** function _eaDogM_WriteCommand *****************
  6482 ;; Defined at:
  6483 ;;		line 175 in file "eadog.c"
  6484 ;; Parameters:    Size  Location     Type
  6485 ;;  cmd             1  [STACK] const unsigned char 
  6486 ;; Auto vars:     Size  Location     Type
  6487 ;;		None
  6488 ;; Return value:  Size  Location     Type
  6489 ;;                  1  [STACK] void 
  6490 ;; Registers used:
  6491 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6492 ;; Tracked objects:
  6493 ;;		On entry : 3F/3D
  6494 ;;		On exit  : 3F/0
  6495 ;;		Unchanged: 0/0
  6496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6500 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6501 ;;Total ram usage:        0 bytes
  6502 ;; Hardware stack levels used:    1
  6503 ;; Hardware stack levels required when called:   25
  6504 ;; This function calls:
  6505 ;;		_send_lcd_cmd_dma
  6506 ;; This function is called by:
  6507 ;;		_main
  6508 ;; This function uses a reentrant model
  6509 ;;
  6510                           
  6511                           	psect	text20
  6512  01ABAA                     __ptext20:
  6513                           	opt callstack 0
  6514  01ABAA                     _eaDogM_WriteCommand:
  6515                           	opt callstack 5
  6516                           
  6517                           ;eadog.c: 175: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 176: {;eadog.c: 177:
      +                            send_lcd_cmd_dma(cmd);
  6518                           ;stkvar	_cmd @ sp[(0)+-1]
  6519                           
  6520                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6521                           ;incstack = 0
  6522  01ABAA  0EFF               	movlw	-1
  6523  01ABAC  50E3               	movf	plusw1,w,c
  6524  01ABAE  6EE6               	movwf	postinc1,c
  6525  01ABB0  ECF5  F0CE         	call	_send_lcd_cmd_dma	;wreg free
  6526                           
  6527                           ; BSR set to: 0
  6528                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  6529  01ABB4  52E5               	movf	postdec1,f,c
  6530  01ABB6  0012               	return		;funcret
  6531  01ABB8                     __end_of_eaDogM_WriteCommand:
  6532                           	opt callstack 0
  6533                           
  6534 ;; *************** function _convert_adc_data *****************
  6535 ;; Defined at:
  6536 ;;		line 40 in file "mbmc.c"
  6537 ;; Parameters:    Size  Location     Type
  6538 ;;		None
  6539 ;; Auto vars:     Size  Location     Type
  6540 ;;  i               1  [STACK] unsigned char 
  6541 ;; Return value:  Size  Location     Type
  6542 ;;                  1  [STACK] void 
  6543 ;; Registers used:
  6544 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  6545 ;; Tracked objects:
  6546 ;;		On entry : 0/0
  6547 ;;		On exit  : 0/0
  6548 ;;		Unchanged: 0/0
  6549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6554 ;;Total ram usage:        0 bytes
  6555 ;; Hardware stack levels used:    1
  6556 ;; Hardware stack levels required when called:   18
  6557 ;; This function calls:
  6558 ;;		_conv_raw_result
  6559 ;;		_lp_filter
  6560 ;; This function is called by:
  6561 ;;		_main
  6562 ;; This function uses a reentrant model
  6563 ;;
  6564                           
  6565                           	psect	text21
  6566  0190BE                     __ptext21:
  6567                           	opt callstack 0
  6568  0190BE                     _convert_adc_data:
  6569                           	opt callstack 0
  6570                           
  6571                           ; BSR set to: 0
  6572                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6573  0190BE  52E6               	movf	postinc1,f,c
  6574                           
  6575                           ;mbmc.c: 42:  uint8_t i = 0;
  6576                           ;stkvar	_i @ sp[(-1)+0]
  6577                           
  6578                           ;incstack = 0
  6579  0190C0  0EFF               	movlw	-1
  6580  0190C2  6AE3               	clrf	plusw1,c
  6581  0190C4                     l10284:
  6582                           
  6583                           ;mbmc.c: 45:   if (V.calib) {
  6584  0190C4  0102               	movlb	2	; () banked
  6585  0190C6  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
  6586  0190C8  B4D8               	btfsc	status,2,c
  6587  0190CA  D01B               	goto	l10288
  6588                           
  6589                           ; BSR set to: 2
  6590                           ;mbmc.c: 46:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
  6591  0190CC  0E01               	movlw	1
  6592  0190CE  6EE6               	movwf	postinc1,c
  6593                           
  6594                           ;stkvar	_i @ sp[(-2)+0]
  6595  0190D0  0EFE               	movlw	-2
  6596  0190D2  50E3               	movf	plusw1,w,c
  6597  0190D4  6EE6               	movwf	postinc1,c
  6598  0190D6  0E01               	movlw	1
  6599  0190D8  6EE6               	movwf	postinc1,c
  6600                           
  6601                           ;stkvar	_i @ sp[(-4)+0]
  6602  0190DA  0EFC               	movlw	-4
  6603  0190DC  50E3               	movf	plusw1,w,c
  6604  0190DE  6EE6               	movwf	postinc1,c
  6605  0190E0  ECF8  F0A3         	call	_conv_raw_result	;wreg free
  6606  0190E4  0060  F007  FFE6   	movff	btemp,postinc1
  6607  0190EA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6608  0190F0  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6609  0190F6  0060  F013  FFE6   	movff	btemp+3,postinc1
  6610  0190FC  EC1C  F0BA         	call	_lp_filter	;wreg free
  6611  019100  D01A               	goto	L3
  6612  019102                     l10288:
  6613                           
  6614                           ; BSR set to: 2
  6615                           ;mbmc.c: 48:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
  6616  019102  0E00               	movlw	0
  6617  019104  6EE6               	movwf	postinc1,c
  6618                           
  6619                           ;stkvar	_i @ sp[(-2)+0]
  6620  019106  0EFE               	movlw	-2
  6621  019108  50E3               	movf	plusw1,w,c
  6622  01910A  6EE6               	movwf	postinc1,c
  6623  01910C  0E00               	movlw	0
  6624  01910E  6EE6               	movwf	postinc1,c
  6625                           
  6626                           ;stkvar	_i @ sp[(-4)+0]
  6627  019110  0EFC               	movlw	-4
  6628  019112  50E3               	movf	plusw1,w,c
  6629  019114  6EE6               	movwf	postinc1,c
  6630  019116  ECF8  F0A3         	call	_conv_raw_result	;wreg free
  6631  01911A  0060  F007  FFE6   	movff	btemp,postinc1
  6632  019120  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6633  019126  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6634  01912C  0060  F013  FFE6   	movff	btemp+3,postinc1
  6635  019132  EC1C  F0BA         	call	_lp_filter	;wreg free
  6636  019136                     L3:
  6637                           
  6638                           ;stkvar	_i @ sp[(-1)+0]
  6639  019136  0EFF               	movlw	-1
  6640  019138  50E3               	movf	plusw1,w,c
  6641  01913A  0D04               	mullw	4
  6642  01913C  0E00               	movlw	low _C
  6643  01913E  24F3               	addwf	243,w,c
  6644  019140  6ED9               	movwf	fsr2l,c
  6645  019142  0E01               	movlw	high _C
  6646  019144  20F4               	addwfc	prodh,w,c
  6647  019146  6EDA               	movwf	fsr2h,c
  6648  019148  0060  F007  FFDE   	movff	btemp,postinc2
  6649  01914E  0060  F00B  FFDE   	movff	btemp+1,postinc2
  6650  019154  0060  F00F  FFDE   	movff	btemp+2,postinc2
  6651  01915A  0060  F013  FFDE   	movff	btemp+3,postinc2
  6652                           
  6653                           ;mbmc.c: 50:  } while (++i < 16);
  6654                           ;stkvar	_i @ sp[(-1)+0]
  6655  019160  0EFF               	movlw	-1
  6656  019162  2AE3               	incf	plusw1,f,c
  6657  019164  0EFF               	movlw	-1
  6658  019166  006F FF8C  F001    	movff	plusw1,btemp
  6659  01916C  0E0F               	movlw	15
  6660  01916E  6401               	cpfsgt	btemp^0,c
  6661  019170  D7A9               	goto	l10284
  6662                           
  6663                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  6664  019172  52E5               	movf	postdec1,f,c
  6665  019174  0012               	return		;funcret
  6666  019176                     __end_of_convert_adc_data:
  6667                           	opt callstack 0
  6668                           
  6669 ;; *************** function _clear_hid_pflags *****************
  6670 ;; Defined at:
  6671 ;;		line 51 in file "hid.c"
  6672 ;; Parameters:    Size  Location     Type
  6673 ;;  h               1  [STACK] PTR struct H_data
  6674 ;;		 -> H(7), 
  6675 ;; Auto vars:     Size  Location     Type
  6676 ;;		None
  6677 ;; Return value:  Size  Location     Type
  6678 ;;                  1  [STACK] void 
  6679 ;; Registers used:
  6680 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6681 ;; Tracked objects:
  6682 ;;		On entry : 3F/0
  6683 ;;		On exit  : 0/0
  6684 ;;		Unchanged: 0/0
  6685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6690 ;;Total ram usage:        0 bytes
  6691 ;; Hardware stack levels used:    1
  6692 ;; Hardware stack levels required when called:   15
  6693 ;; This function calls:
  6694 ;;		Nothing
  6695 ;; This function is called by:
  6696 ;;		_main
  6697 ;; This function uses a reentrant model
  6698 ;;
  6699                           
  6700                           	psect	text22
  6701  01A8C4                     __ptext22:
  6702                           	opt callstack 0
  6703  01A8C4                     _clear_hid_pflags:
  6704                           	opt callstack 15
  6705                           
  6706                           ;hid.c: 51: void clear_hid_pflags(H_data* h);hid.c: 52: {;hid.c: 53:  h->select_p = SW_O
      +                          FF;
  6707                           ;stkvar	_h @ sp[(0)+-1]
  6708                           
  6709                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6710                           ;incstack = 0
  6711  01A8C4  0EFF               	movlw	-1
  6712  01A8C6  50E3               	movf	plusw1,w,c
  6713  01A8C8  6ED9               	movwf	fsr2l,c
  6714  01A8CA  6ADA               	clrf	fsr2h,c
  6715  01A8CC  0E03               	movlw	3
  6716  01A8CE  26D9               	addwf	fsr2l,f,c
  6717  01A8D0  0E00               	movlw	0
  6718  01A8D2  6EDF               	movwf	indf2,c
  6719                           
  6720                           ;hid.c: 54:  h->enter_p = SW_OFF;
  6721                           ;stkvar	_h @ sp[(0)+-1]
  6722  01A8D4  0EFF               	movlw	-1
  6723  01A8D6  50E3               	movf	plusw1,w,c
  6724  01A8D8  6ED9               	movwf	fsr2l,c
  6725  01A8DA  6ADA               	clrf	fsr2h,c
  6726  01A8DC  0E05               	movlw	5
  6727  01A8DE  26D9               	addwf	fsr2l,f,c
  6728  01A8E0  0E00               	movlw	0
  6729  01A8E2  6EDF               	movwf	indf2,c
  6730                           
  6731                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  6732  01A8E4  52E5               	movf	postdec1,f,c
  6733  01A8E6  0012               	return		;funcret
  6734  01A8E8                     __end_of_clear_hid_pflags:
  6735                           	opt callstack 0
  6736                           
  6737 ;; *************** function _clear_adc_scan *****************
  6738 ;; Defined at:
  6739 ;;		line 63 in file "daq.c"
  6740 ;; Parameters:    Size  Location     Type
  6741 ;;		None
  6742 ;; Auto vars:     Size  Location     Type
  6743 ;;		None
  6744 ;; Return value:  Size  Location     Type
  6745 ;;                  1  [STACK] void 
  6746 ;; Registers used:
  6747 ;;		None
  6748 ;; Tracked objects:
  6749 ;;		On entry : 0/0
  6750 ;;		On exit  : 3F/0
  6751 ;;		Unchanged: 0/0
  6752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6756 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6757 ;;Total ram usage:        0 bytes
  6758 ;; Hardware stack levels used:    1
  6759 ;; Hardware stack levels required when called:   15
  6760 ;; This function calls:
  6761 ;;		Nothing
  6762 ;; This function is called by:
  6763 ;;		_main
  6764 ;; This function uses a reentrant model
  6765 ;;
  6766                           
  6767                           	psect	text23
  6768  01AC46                     __ptext23:
  6769                           	opt callstack 0
  6770  01AC46                     _clear_adc_scan:
  6771                           	opt callstack 15
  6772                           
  6773                           ;daq.c: 65:  R.done = 0;
  6774                           
  6775                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6776                           ;incstack = 0
  6777  01AC46  0100               	movlb	0	; () banked
  6778  01AC48  6BED               	clrf	(_R+39)& (0+255),b	;volatile
  6779                           
  6780                           ; BSR set to: 0
  6781                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  6782  01AC4A  0012               	return		;funcret
  6783  01AC4C                     __end_of_clear_adc_scan:
  6784                           	opt callstack 0
  6785                           
  6786 ;; *************** function _check_help *****************
  6787 ;; Defined at:
  6788 ;;		line 40 in file "mconfig.c"
  6789 ;; Parameters:    Size  Location     Type
  6790 ;;  flipper         1  [STACK] const _Bool 
  6791 ;; Auto vars:     Size  Location     Type
  6792 ;;  estatus         1    0        _Bool 
  6793 ;; Return value:  Size  Location     Type
  6794 ;;                  1  [STACK] _Bool 
  6795 ;; Registers used:
  6796 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6797 ;; Tracked objects:
  6798 ;;		On entry : 3F/2
  6799 ;;		On exit  : 0/0
  6800 ;;		Unchanged: 0/0
  6801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6806 ;;Total ram usage:        0 bytes
  6807 ;; Hardware stack levels used:    1
  6808 ;; Hardware stack levels required when called:   27
  6809 ;; This function calls:
  6810 ;;		_StartTimer
  6811 ;;		_TimerDone
  6812 ;;		_display_help
  6813 ;;		_display_info
  6814 ;;		_get_vterm_ptr
  6815 ;;		_help_button
  6816 ;;		_mode_lamp_bright
  6817 ;;		_mode_lamp_dim
  6818 ;;		_set_display_info
  6819 ;;		_set_temp_display_help
  6820 ;;		_set_vterm
  6821 ;;		_sprintf
  6822 ;;		_update_lcd
  6823 ;;		_vterm_dump
  6824 ;; This function is called by:
  6825 ;;		_main
  6826 ;; This function uses a reentrant model
  6827 ;;
  6828                           
  6829                           	psect	text24
  6830  016E22                     __ptext24:
  6831                           	opt callstack 0
  6832  016E22                     _check_help:
  6833                           	opt callstack 3
  6834                           
  6835                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
  6836                           
  6837                           ; BSR set to: 0
  6838                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6839                           ;incstack = 0
  6840  016E22  EC71  F0D1         	call	_help_button	;wreg free
  6841  016E26  5001               	movf	btemp^0,w,c
  6842  016E28  B4D8               	btfsc	status,2,c
  6843  016E2A  D0D0               	goto	l12078
  6844  016E2C  EC13  F0D6         	call	_display_info	;wreg free
  6845  016E30  0401               	decf	btemp^0,w,c
  6846  016E32  B4D8               	btfsc	status,2,c
  6847  016E34  D0CB               	goto	l12078
  6848                           
  6849                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
  6850  016E36  0EDC               	movlw	220
  6851  016E38  6EE6               	movwf	postinc1,c
  6852  016E3A  0E05               	movlw	5
  6853  016E3C  6EE6               	movwf	postinc1,c
  6854  016E3E  0E0B               	movlw	11
  6855  016E40  6EE6               	movwf	postinc1,c
  6856  016E42  ECD2  F0D0         	call	_StartTimer	;wreg free
  6857                           
  6858                           ;mconfig.c: 48:   if (V.debug)
  6859  016E46  0102               	movlb	2	; () banked
  6860  016E48  B39B               	btfsc	(_V+155)& (0+255),1,b	;volatile
  6861                           
  6862                           ; BSR set to: 2
  6863                           ;mconfig.c: 49:    vterm_dump();
  6864  016E4A  ECF8  F0C1         	call	_vterm_dump	;wreg free
  6865                           
  6866                           ;mconfig.c: 51:   set_vterm(1);
  6867  016E4E  0E01               	movlw	1
  6868  016E50  6EE6               	movwf	postinc1,c
  6869  016E52  ECFE  F0D4         	call	_set_vterm	;wreg free
  6870                           
  6871                           ;mconfig.c: 52:   set_temp_display_help(display_info());
  6872  016E56  EC13  F0D6         	call	_display_info	;wreg free
  6873  016E5A  5001               	movf	btemp^0,w,c
  6874  016E5C  6EE6               	movwf	postinc1,c
  6875  016E5E  ECCD  F0D5         	call	_set_temp_display_help	;wreg free
  6876                           
  6877                           ; BSR set to: 2
  6878                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
  6879  016E62  0E01               	movlw	1
  6880  016E64  6EE6               	movwf	postinc1,c
  6881  016E66  EC0D  F0D5         	call	_set_display_info	;wreg free
  6882                           
  6883                           ;mconfig.c: 54:   if (flipper) {
  6884                           ;stkvar	_flipper @ sp[(0)+-1]
  6885  016E6A  0EFF               	movlw	-1
  6886  016E6C  50E3               	movf	plusw1,w,c
  6887  016E6E  B4D8               	btfsc	status,2,c
  6888  016E70  D019               	goto	l12064
  6889                           
  6890                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  6891  016E72  0EB2               	movlw	low STR_29
  6892  016E74  6EE6               	movwf	postinc1,c
  6893  016E76  0EFF               	movlw	high STR_29
  6894  016E78  6EE6               	movwf	postinc1,c
  6895  016E7A  0E93               	movlw	low STR_31
  6896  016E7C  6EE6               	movwf	postinc1,c
  6897  016E7E  0EFE               	movlw	high STR_31
  6898  016E80  6EE6               	movwf	postinc1,c
  6899  016E82  0E01               	movlw	1
  6900  016E84  6EE6               	movwf	postinc1,c
  6901  016E86  0E00               	movlw	0
  6902  016E88  6EE6               	movwf	postinc1,c
  6903  016E8A  EC8C  F0D2         	call	_get_vterm_ptr	;wreg free
  6904  016E8E  0060  F007  FFE6   	movff	btemp,postinc1
  6905  016E94  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6906  016E9A  0E06               	movlw	6
  6907  016E9C  6EE6               	movwf	postinc1,c
  6908  016E9E  ECBF  F0C4         	call	_sprintf	;wreg free
  6909                           
  6910                           ;mconfig.c: 56:   } else {
  6911  016EA2  D018               	goto	l1651
  6912  016EA4                     l12064:
  6913                           
  6914                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  6915  016EA4  0EC8               	movlw	low STR_30
  6916  016EA6  6EE6               	movwf	postinc1,c
  6917  016EA8  0EFF               	movlw	high STR_30
  6918  016EAA  6EE6               	movwf	postinc1,c
  6919  016EAC  0E93               	movlw	low STR_31
  6920  016EAE  6EE6               	movwf	postinc1,c
  6921  016EB0  0EFE               	movlw	high STR_31
  6922  016EB2  6EE6               	movwf	postinc1,c
  6923  016EB4  0E01               	movlw	1
  6924  016EB6  6EE6               	movwf	postinc1,c
  6925  016EB8  0E00               	movlw	0
  6926  016EBA  6EE6               	movwf	postinc1,c
  6927  016EBC  EC8C  F0D2         	call	_get_vterm_ptr	;wreg free
  6928  016EC0  0060  F007  FFE6   	movff	btemp,postinc1
  6929  016EC6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6930  016ECC  0E06               	movlw	6
  6931  016ECE  6EE6               	movwf	postinc1,c
  6932  016ED0  ECBF  F0C4         	call	_sprintf	;wreg free
  6933  016ED4                     l1651:
  6934                           
  6935                           ; BSR set to: 0
  6936                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  6937  016ED4  0102               	movlb	2	; () banked
  6938  016ED6  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  6939  016ED8  32E8               	rrcf	wreg,f,c
  6940  016EDA  32E8               	rrcf	wreg,f,c
  6941  016EDC  0B03               	andlw	3
  6942  016EDE  0D24               	mullw	36
  6943  016EE0  0E12               	movlw	18
  6944  016EE2  26F3               	addwf	243,f,c
  6945  016EE4  0E00               	movlw	0
  6946  016EE6  22F4               	addwfc	244,f,c
  6947  016EE8  0E1F               	movlw	low _T
  6948  016EEA  6E0B               	movwf	(btemp+10)^0,c
  6949  016EEC  0EFD               	movlw	high _T
  6950  016EEE  6E0C               	movwf	(btemp+11)^0,c
  6951  016EF0  50F3               	movf	243,w,c
  6952  016EF2  260B               	addwf	(btemp+10)^0,f,c
  6953  016EF4  50F4               	movf	244,w,c
  6954  016EF6  220C               	addwfc	(btemp+11)^0,f,c
  6955  016EF8  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6956  016EFE  0060  F033  FFE6   	movff	btemp+11,postinc1
  6957  016F04  0EBE               	movlw	low STR_33
  6958  016F06  6EE6               	movwf	postinc1,c
  6959  016F08  0EFF               	movlw	high STR_33
  6960  016F0A  6EE6               	movwf	postinc1,c
  6961  016F0C  0E01               	movlw	1
  6962  016F0E  6EE6               	movwf	postinc1,c
  6963  016F10  0E01               	movlw	1
  6964  016F12  6EE6               	movwf	postinc1,c
  6965  016F14  EC8C  F0D2         	call	_get_vterm_ptr	;wreg free
  6966  016F18  0060  F007  FFE6   	movff	btemp,postinc1
  6967  016F1E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6968  016F24  0E06               	movlw	6
  6969  016F26  6EE6               	movwf	postinc1,c
  6970  016F28  ECBF  F0C4         	call	_sprintf	;wreg free
  6971                           
  6972                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  6973  016F2C  0102               	movlb	2	; () banked
  6974  016F2E  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  6975  016F30  32E8               	rrcf	wreg,f,c
  6976  016F32  32E8               	rrcf	wreg,f,c
  6977  016F34  0B03               	andlw	3
  6978  016F36  0D24               	mullw	36
  6979  016F38  0E1F               	movlw	low _T
  6980  016F3A  6E0B               	movwf	(btemp+10)^0,c
  6981  016F3C  0EFD               	movlw	high _T
  6982  016F3E  6E0C               	movwf	(btemp+11)^0,c
  6983  016F40  50F3               	movf	243,w,c
  6984  016F42  260B               	addwf	(btemp+10)^0,f,c
  6985  016F44  50F4               	movf	244,w,c
  6986  016F46  220C               	addwfc	(btemp+11)^0,f,c
  6987  016F48  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6988  016F4E  0060  F033  FFE6   	movff	btemp+11,postinc1
  6989  016F54  0EBE               	movlw	low STR_33
  6990  016F56  6EE6               	movwf	postinc1,c
  6991  016F58  0EFF               	movlw	high STR_33
  6992  016F5A  6EE6               	movwf	postinc1,c
  6993  016F5C  0E01               	movlw	1
  6994  016F5E  6EE6               	movwf	postinc1,c
  6995  016F60  0E02               	movlw	2
  6996  016F62  6EE6               	movwf	postinc1,c
  6997  016F64  EC8C  F0D2         	call	_get_vterm_ptr	;wreg free
  6998  016F68  0060  F007  FFE6   	movff	btemp,postinc1
  6999  016F6E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7000  016F74  0E06               	movlw	6
  7001  016F76  6EE6               	movwf	postinc1,c
  7002  016F78  ECBF  F0C4         	call	_sprintf	;wreg free
  7003                           
  7004                           ; BSR set to: 0
  7005                           ;mconfig.c: 61:   V.help_id++;
  7006  016F7C  EE20  F29B         	lfsr	2,_V+155	;volatile
  7007  016F80  38DF               	swapf	223,w,c
  7008  016F82  6E0C               	movwf	(btemp+11)^0,c
  7009  016F84  320C               	rrcf	(btemp+11)^0,f,c
  7010  016F86  300C               	rrcf	(btemp+11)^0,w,c
  7011  016F88  0B03               	andlw	3
  7012  016F8A  6E0C               	movwf	(btemp+11)^0,c
  7013  016F8C  2A0C               	incf	(btemp+11)^0,f,c
  7014  016F8E  3A0C               	swapf	(btemp+11)^0,f,c
  7015  016F90  360C               	rlcf	(btemp+11)^0,f,c
  7016  016F92  360C               	rlcf	(btemp+11)^0,f,c
  7017  016F94  50DF               	movf	223,w,c
  7018  016F96  180C               	xorwf	(btemp+11)^0,w,c
  7019  016F98  0B3F               	andlw	-193
  7020  016F9A  180C               	xorwf	(btemp+11)^0,w,c
  7021  016F9C  6EDF               	movwf	223,c
  7022                           
  7023                           ; BSR set to: 0
  7024                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
  7025  016F9E  0EB8               	movlw	184
  7026  016FA0  6EE6               	movwf	postinc1,c
  7027  016FA2  0E0B               	movlw	11
  7028  016FA4  6EE6               	movwf	postinc1,c
  7029  016FA6  0E09               	movlw	9
  7030  016FA8  6EE6               	movwf	postinc1,c
  7031  016FAA  ECD2  F0D0         	call	_StartTimer	;wreg free
  7032                           
  7033                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
  7034  016FAE  0EB8               	movlw	184
  7035  016FB0  6EE6               	movwf	postinc1,c
  7036  016FB2  0E0B               	movlw	11
  7037  016FB4  6EE6               	movwf	postinc1,c
  7038  016FB6  0E07               	movlw	7
  7039  016FB8  6EE6               	movwf	postinc1,c
  7040  016FBA  ECD2  F0D0         	call	_StartTimer	;wreg free
  7041                           
  7042                           ;mconfig.c: 64:   mode_lamp_bright();
  7043  016FBE  ECDC  F0D5         	call	_mode_lamp_bright	;wreg free
  7044                           
  7045                           ;mconfig.c: 65:   update_lcd(1);
  7046  016FC2  0E01               	movlw	1
  7047  016FC4  6EE6               	movwf	postinc1,c
  7048  016FC6  EC37  F0C4         	call	_update_lcd	;wreg free
  7049                           
  7050                           ;mconfig.c: 67:  } else {
  7051  016FCA  D032               	goto	l1652
  7052  016FCC                     l12078:
  7053                           
  7054                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
  7055  016FCC  0E09               	movlw	9
  7056  016FCE  6EE6               	movwf	postinc1,c
  7057  016FD0  EC37  F0D3         	call	_TimerDone	;wreg free
  7058  016FD4  5001               	movf	btemp^0,w,c
  7059  016FD6  B4D8               	btfsc	status,2,c
  7060  016FD8  D02B               	goto	l1652
  7061                           
  7062                           ;mconfig.c: 69:    set_vterm(0);
  7063  016FDA  0E00               	movlw	0
  7064  016FDC  6EE6               	movwf	postinc1,c
  7065  016FDE  ECFE  F0D4         	call	_set_vterm	;wreg free
  7066                           
  7067                           ;mconfig.c: 70:    V.help = 0;
  7068  016FE2  0102               	movlb	2	; () banked
  7069  016FE4  959B               	bcf	(_V+155)& (0+255),2,b	;volatile
  7070                           
  7071                           ; BSR set to: 2
  7072                           ;mconfig.c: 71:    set_display_info(display_help());
  7073  016FE6  EC17  F0D6         	call	_display_help	;wreg free
  7074  016FEA  5001               	movf	btemp^0,w,c
  7075  016FEC  6EE6               	movwf	postinc1,c
  7076  016FEE  EC0D  F0D5         	call	_set_display_info	;wreg free
  7077                           
  7078                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
  7079  016FF2  0060  FA57  FFE6   	movff	_V+149,postinc1
  7080  016FF8  0060  FA5B  FFE6   	movff	_V+150,postinc1
  7081  016FFE  EC71  F0D5         	call	_mode_lamp_dim	;wreg free
  7082                           
  7083                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
  7084  017002  0E0B               	movlw	11
  7085  017004  6EE6               	movwf	postinc1,c
  7086  017006  EC37  F0D3         	call	_TimerDone	;wreg free
  7087  01700A  5001               	movf	btemp^0,w,c
  7088  01700C  B4D8               	btfsc	status,2,c
  7089  01700E  D010               	goto	l1652
  7090                           
  7091                           ;mconfig.c: 74:     V.flipper = !V.flipper;
  7092  017010  0102               	movlb	2	; () banked
  7093  017012  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  7094  017014  A4D8               	btfss	status,2,c
  7095  017016  D002               	goto	u11690
  7096  017018  0E01               	movlw	1
  7097  01701A  D001               	goto	u11700
  7098  01701C                     u11690:
  7099  01701C  0E00               	movlw	0
  7100  01701E                     u11700:
  7101  01701E  6FAA               	movwf	(_V+170)& (0+255),b	;volatile
  7102                           
  7103                           ; BSR set to: 2
  7104                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
  7105  017020  0EDC               	movlw	220
  7106  017022  6EE6               	movwf	postinc1,c
  7107  017024  0E05               	movlw	5
  7108  017026  6EE6               	movwf	postinc1,c
  7109  017028  0E0B               	movlw	11
  7110  01702A  6EE6               	movwf	postinc1,c
  7111  01702C  ECD2  F0D0         	call	_StartTimer	;wreg free
  7112  017030                     l1652:
  7113                           
  7114                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  7115  017030  52E5               	movf	postdec1,f,c
  7116  017032  0012               	return		;funcret
  7117  017034                     __end_of_check_help:
  7118                           	opt callstack 0
  7119                           
  7120 ;; *************** function _vterm_dump *****************
  7121 ;; Defined at:
  7122 ;;		line 121 in file "mconfig.c"
  7123 ;; Parameters:    Size  Location     Type
  7124 ;;		None
  7125 ;; Auto vars:     Size  Location     Type
  7126 ;;		None
  7127 ;; Return value:  Size  Location     Type
  7128 ;;                  1  [STACK] void 
  7129 ;; Registers used:
  7130 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7131 ;; Tracked objects:
  7132 ;;		On entry : 3F/2
  7133 ;;		On exit  : 0/0
  7134 ;;		Unchanged: 0/0
  7135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7140 ;;Total ram usage:        0 bytes
  7141 ;; Hardware stack levels used:    1
  7142 ;; Hardware stack levels required when called:   26
  7143 ;; This function calls:
  7144 ;;		_WaitMs
  7145 ;;		_eaDogM_WriteStringAtPos
  7146 ;;		_get_vterm_ptr
  7147 ;;		_sprintf
  7148 ;;		_wait_lcd_done
  7149 ;; This function is called by:
  7150 ;;		_check_help
  7151 ;; This function uses a reentrant model
  7152 ;;
  7153                           
  7154                           	psect	text25
  7155  0183F0                     __ptext25:
  7156                           	opt callstack 0
  7157  0183F0                     _vterm_dump:
  7158                           	opt callstack 3
  7159                           
  7160                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  7161                           
  7162                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7163                           ;incstack = 0
  7164  0183F0  0E01               	movlw	1
  7165  0183F2  6EE6               	movwf	postinc1,c
  7166  0183F4  0E00               	movlw	0
  7167  0183F6  6EE6               	movwf	postinc1,c
  7168  0183F8  EC8C  F0D2         	call	_get_vterm_ptr	;wreg free
  7169  0183FC  0060  F007  FFE6   	movff	btemp,postinc1
  7170  018402  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7171  018408  0E00               	movlw	0
  7172  01840A  6EE6               	movwf	postinc1,c
  7173  01840C  0E00               	movlw	0
  7174  01840E  6EE6               	movwf	postinc1,c
  7175  018410  EC8C  F0D2         	call	_get_vterm_ptr	;wreg free
  7176  018414  0060  F007  FFE6   	movff	btemp,postinc1
  7177  01841A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7178  018420  0E94               	movlw	low STR_35
  7179  018422  6EE6               	movwf	postinc1,c
  7180  018424  0EFF               	movlw	high STR_35
  7181  018426  6EE6               	movwf	postinc1,c
  7182  018428  0E01               	movlw	low (_V+1)
  7183  01842A  6EE6               	movwf	postinc1,c
  7184  01842C  0E02               	movlw	high (_V+1)
  7185  01842E  6EE6               	movwf	postinc1,c
  7186  018430  0E08               	movlw	8
  7187  018432  6EE6               	movwf	postinc1,c
  7188  018434  ECBF  F0C4         	call	_sprintf	;wreg free
  7189                           
  7190                           ; BSR set to: 0
  7191                           ;mconfig.c: 124:  wait_lcd_done();
  7192  018438  EC3A  F0D5         	call	_wait_lcd_done	;wreg free
  7193                           
  7194                           ; BSR set to: 0
  7195                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  7196  01843C  0E01               	movlw	low (_V+1)
  7197  01843E  6EE6               	movwf	postinc1,c
  7198  018440  0E02               	movlw	high (_V+1)
  7199  018442  6EE6               	movwf	postinc1,c
  7200  018444  0E00               	movlw	0
  7201  018446  6EE6               	movwf	postinc1,c
  7202  018448  0E00               	movlw	0
  7203  01844A  6EE6               	movwf	postinc1,c
  7204  01844C  ECC3  F0D1         	call	_eaDogM_WriteStringAtPos	;wreg free
  7205                           
  7206                           ; BSR set to: 59
  7207                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  7208  018450  0E01               	movlw	1
  7209  018452  6EE6               	movwf	postinc1,c
  7210  018454  0E01               	movlw	1
  7211  018456  6EE6               	movwf	postinc1,c
  7212  018458  EC8C  F0D2         	call	_get_vterm_ptr	;wreg free
  7213  01845C  0060  F007  FFE6   	movff	btemp,postinc1
  7214  018462  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7215  018468  0E00               	movlw	0
  7216  01846A  6EE6               	movwf	postinc1,c
  7217  01846C  0E01               	movlw	1
  7218  01846E  6EE6               	movwf	postinc1,c
  7219  018470  EC8C  F0D2         	call	_get_vterm_ptr	;wreg free
  7220  018474  0060  F007  FFE6   	movff	btemp,postinc1
  7221  01847A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7222  018480  0E94               	movlw	low STR_35
  7223  018482  6EE6               	movwf	postinc1,c
  7224  018484  0EFF               	movlw	high STR_35
  7225  018486  6EE6               	movwf	postinc1,c
  7226  018488  0E01               	movlw	low (_V+1)
  7227  01848A  6EE6               	movwf	postinc1,c
  7228  01848C  0E02               	movlw	high (_V+1)
  7229  01848E  6EE6               	movwf	postinc1,c
  7230  018490  0E08               	movlw	8
  7231  018492  6EE6               	movwf	postinc1,c
  7232  018494  ECBF  F0C4         	call	_sprintf	;wreg free
  7233                           
  7234                           ; BSR set to: 0
  7235                           ;mconfig.c: 127:  wait_lcd_done();
  7236  018498  EC3A  F0D5         	call	_wait_lcd_done	;wreg free
  7237                           
  7238                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  7239  01849C  0E01               	movlw	low (_V+1)
  7240  01849E  6EE6               	movwf	postinc1,c
  7241  0184A0  0E02               	movlw	high (_V+1)
  7242  0184A2  6EE6               	movwf	postinc1,c
  7243  0184A4  0E00               	movlw	0
  7244  0184A6  6EE6               	movwf	postinc1,c
  7245  0184A8  0E01               	movlw	1
  7246  0184AA  6EE6               	movwf	postinc1,c
  7247  0184AC  ECC3  F0D1         	call	_eaDogM_WriteStringAtPos	;wreg free
  7248                           
  7249                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  7250  0184B0  0E01               	movlw	1
  7251  0184B2  6EE6               	movwf	postinc1,c
  7252  0184B4  0E02               	movlw	2
  7253  0184B6  6EE6               	movwf	postinc1,c
  7254  0184B8  EC8C  F0D2         	call	_get_vterm_ptr	;wreg free
  7255  0184BC  0060  F007  FFE6   	movff	btemp,postinc1
  7256  0184C2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7257  0184C8  0E00               	movlw	0
  7258  0184CA  6EE6               	movwf	postinc1,c
  7259  0184CC  0E02               	movlw	2
  7260  0184CE  6EE6               	movwf	postinc1,c
  7261  0184D0  EC8C  F0D2         	call	_get_vterm_ptr	;wreg free
  7262  0184D4  0060  F007  FFE6   	movff	btemp,postinc1
  7263  0184DA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7264  0184E0  0E94               	movlw	low STR_35
  7265  0184E2  6EE6               	movwf	postinc1,c
  7266  0184E4  0EFF               	movlw	high STR_35
  7267  0184E6  6EE6               	movwf	postinc1,c
  7268  0184E8  0E01               	movlw	low (_V+1)
  7269  0184EA  6EE6               	movwf	postinc1,c
  7270  0184EC  0E02               	movlw	high (_V+1)
  7271  0184EE  6EE6               	movwf	postinc1,c
  7272  0184F0  0E08               	movlw	8
  7273  0184F2  6EE6               	movwf	postinc1,c
  7274  0184F4  ECBF  F0C4         	call	_sprintf	;wreg free
  7275                           
  7276                           ; BSR set to: 0
  7277                           ;mconfig.c: 130:  wait_lcd_done();
  7278  0184F8  EC3A  F0D5         	call	_wait_lcd_done	;wreg free
  7279                           
  7280                           ; BSR set to: 0
  7281                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  7282  0184FC  0E01               	movlw	low (_V+1)
  7283  0184FE  6EE6               	movwf	postinc1,c
  7284  018500  0E02               	movlw	high (_V+1)
  7285  018502  6EE6               	movwf	postinc1,c
  7286  018504  0E00               	movlw	0
  7287  018506  6EE6               	movwf	postinc1,c
  7288  018508  0E02               	movlw	2
  7289  01850A  6EE6               	movwf	postinc1,c
  7290  01850C  ECC3  F0D1         	call	_eaDogM_WriteStringAtPos	;wreg free
  7291                           
  7292                           ; BSR set to: 59
  7293                           ;mconfig.c: 132:  WaitMs(3000);
  7294  018510  0EB8               	movlw	184
  7295  018512  6EE6               	movwf	postinc1,c
  7296  018514  0E0B               	movlw	11
  7297  018516  6EE6               	movwf	postinc1,c
  7298  018518  ECA8  F0D1         	call	_WaitMs	;wreg free
  7299                           
  7300                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  7301  01851C  0012               	return		;funcret
  7302  01851E                     __end_of_vterm_dump:
  7303                           	opt callstack 0
  7304                           
  7305 ;; *************** function _sprintf *****************
  7306 ;; Defined at:
  7307 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  7308 ;; Parameters:    Size  Location     Type
  7309 ;;  s               2  [STACK] PTR unsigned char 
  7310 ;;		 -> D.lcd(288), D(290), port_data(512), V(188), 
  7311 ;;  fmt             2  [STACK] PTR const unsigned char 
  7312 ;;		 -> STR_48(79), STR_46(3), STR_45(3), STR_44(19), 
  7313 ;;		 -> STR_43(19), STR_42(19), STR_41(19), STR_40(19), 
  7314 ;;		 -> STR_39(19), STR_38(24), STR_37(15), STR_36(15), 
  7315 ;;		 -> STR_35(15), STR_34(10), STR_33(10), STR_32(19), 
  7316 ;;		 -> STR_31(19), STR_25(17), STR_24(16), STR_23(16), 
  7317 ;;		 -> STR_22(19), STR_21(20), STR_20(19), STR_19(19), 
  7318 ;;		 -> STR_18(19), STR_17(19), STR_16(19), STR_15(19), 
  7319 ;;		 -> STR_14(19), STR_13(17), STR_12(16), STR_11(16), 
  7320 ;;		 -> STR_10(22), STR_9(22), STR_8(22), STR_7(17), 
  7321 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_2(15), 
  7322 ;;		 -> STR_1(17), 
  7323 ;; Auto vars:     Size  Location     Type
  7324 ;;  f               6  [STACK] struct _IO_FILE
  7325 ;;  ap              2  [STACK] PTR void [1]
  7326 ;;		 -> ?_printf(2), ?_sprintf(2), 
  7327 ;;  ret             2    0        int 
  7328 ;; Return value:  Size  Location     Type
  7329 ;;                  2  [STACK] int 
  7330 ;; Registers used:
  7331 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7332 ;; Tracked objects:
  7333 ;;		On entry : 0/0
  7334 ;;		On exit  : 3F/0
  7335 ;;		Unchanged: 0/0
  7336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7341 ;;Total ram usage:        0 bytes
  7342 ;; Hardware stack levels used:    1
  7343 ;; Hardware stack levels required when called:   23
  7344 ;; This function calls:
  7345 ;;		_vfprintf
  7346 ;; This function is called by:
  7347 ;;		_main
  7348 ;;		_check_help
  7349 ;;		_vterm_dump
  7350 ;;		_calc_bsoc
  7351 ;; This function uses a reentrant model
  7352 ;;
  7353                           
  7354                           	psect	text26
  7355  01897E                     __ptext26:
  7356                           	opt callstack 0
  7357  01897E                     _sprintf:
  7358                           	opt callstack 0
  7359                           
  7360                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 52, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  7361  01897E  0E08               	movlw	8
  7362  018980  26E1               	addwf	fsr1l,f,c
  7363  018982  0E00               	movlw	0
  7364  018984  22E2               	addwfc	fsr1h,f,c
  7365                           
  7366                           ;incstack = 0
  7367 ;; hardware stack exceeded
  7368  018986  0EFE               	movlw	254
  7369  018988  6E0B               	movwf	(btemp+10)^0,c
  7370  01898A  0EFF               	movlw	255
  7371  01898C  6E0C               	movwf	(btemp+11)^0,c
  7372                           
  7373                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  7374  01898E  0EF5               	movlw	245
  7375  018990  24E1               	addwf	fsr1l,w,c
  7376  018992  6E09               	movwf	(btemp+8)^0,c
  7377  018994  0EFF               	movlw	255
  7378  018996  20E2               	addwfc	fsr1h,w,c
  7379  018998  6E0A               	movwf	(btemp+9)^0,c
  7380  01899A  500B               	movf	(btemp+10)^0,w,c
  7381  01899C  2609               	addwf	(btemp+8)^0,f,c
  7382  01899E  500C               	movf	(btemp+11)^0,w,c
  7383  0189A0  220A               	addwfc	(btemp+9)^0,f,c
  7384                           
  7385                           ;stkvar	_ap @ sp[(-8)+6]
  7386  0189A2  0EFF               	movlw	-1
  7387  0189A4  0060  F02B  FFE3   	movff	btemp+9,plusw1
  7388  0189AA  0EFE               	movlw	-2
  7389  0189AC  0060  F027  FFE3   	movff	btemp+8,plusw1
  7390                           
  7391                           ;stkvar	_s @ sp[(-8)+-3]
  7392  0189B2  0EF5               	movlw	-11
  7393  0189B4  006F FF8C  F00B    	movff	plusw1,btemp+10
  7394  0189BA  0EF6               	movlw	-10
  7395  0189BC  006F FF8C  F00C    	movff	plusw1,btemp+11
  7396                           
  7397                           ;stkvar	_f @ sp[(-8)+0]
  7398  0189C2  0EF9               	movlw	-7
  7399  0189C4  0060  F033  FFE3   	movff	btemp+11,plusw1
  7400  0189CA  0EF8               	movlw	-8
  7401  0189CC  0060  F02F  FFE3   	movff	btemp+10,plusw1
  7402                           
  7403                           ;stkvar	_f @ sp[(-8)+0]
  7404  0189D2  0EFA               	movlw	250
  7405  0189D4  24E1               	addwf	fsr1l,w,c
  7406  0189D6  6ED9               	movwf	fsr2l,c
  7407  0189D8  0EFF               	movlw	255
  7408  0189DA  20E2               	addwfc	fsr1h,w,c
  7409  0189DC  6EDA               	movwf	fsr2h,c
  7410  0189DE  0E00               	movlw	0
  7411  0189E0  6EDE               	movwf	postinc2,c
  7412  0189E2  0E00               	movlw	0
  7413  0189E4  6EDD               	movwf	postdec2,c
  7414                           
  7415                           ;stkvar	_f @ sp[(-8)+0]
  7416  0189E6  0EFC               	movlw	252
  7417  0189E8  24E1               	addwf	fsr1l,w,c
  7418  0189EA  6ED9               	movwf	fsr2l,c
  7419  0189EC  0EFF               	movlw	255
  7420  0189EE  20E2               	addwfc	fsr1h,w,c
  7421  0189F0  6EDA               	movwf	fsr2h,c
  7422  0189F2  0E00               	movlw	0
  7423  0189F4  6EDE               	movwf	postinc2,c
  7424  0189F6  0E00               	movlw	0
  7425  0189F8  6EDD               	movwf	postdec2,c
  7426                           
  7427                           ;stkvar	_ap @ sp[(-8)+6]
  7428  0189FA  0EFE               	movlw	254
  7429  0189FC  24E1               	addwf	fsr1l,w,c
  7430  0189FE  6E01               	movwf	btemp^0,c
  7431  018A00  0EFF               	movlw	255
  7432  018A02  20E2               	addwfc	fsr1h,w,c
  7433  018A04  6E02               	movwf	(btemp+1)^0,c
  7434  018A06  0060  F007  FFE6   	movff	btemp,postinc1
  7435  018A0C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7436                           
  7437                           ;stkvar	_fmt @ sp[(-10)+-5]
  7438  018A12  0EF1               	movlw	-15
  7439  018A14  006F FF8F FFE6     	movff	plusw1,postinc1
  7440  018A1A  006F FF8F FFE6     	movff	plusw1,postinc1
  7441                           
  7442                           ;stkvar	_f @ sp[(-12)+0]
  7443  018A20  0EF4               	movlw	244
  7444  018A22  24E1               	addwf	fsr1l,w,c
  7445  018A24  6E01               	movwf	btemp^0,c
  7446  018A26  0EFF               	movlw	255
  7447  018A28  20E2               	addwfc	fsr1h,w,c
  7448  018A2A  6E02               	movwf	(btemp+1)^0,c
  7449  018A2C  0060  F007  FFE6   	movff	btemp,postinc1
  7450  018A32  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7451  018A38  EC12  F0C9         	call	_vfprintf	;wreg free
  7452                           
  7453                           ; BSR set to: 0
  7454                           ;stkvar	_f @ sp[(-8)+0]
  7455  018A3C  0EFA               	movlw	250
  7456  018A3E  24E1               	addwf	fsr1l,w,c
  7457  018A40  6ED9               	movwf	fsr2l,c
  7458  018A42  0EFF               	movlw	255
  7459  018A44  20E2               	addwfc	fsr1h,w,c
  7460  018A46  6EDA               	movwf	fsr2h,c
  7461  018A48  006F FF78  F00B    	movff	postinc2,btemp+10
  7462  018A4E  006F FF74  F00C    	movff	postdec2,btemp+11
  7463                           
  7464                           ;stkvar	_s @ sp[(-8)+-3]
  7465  018A54  0EF5               	movlw	-11
  7466  018A56  006F FF8C  F009    	movff	plusw1,btemp+8
  7467  018A5C  0EF6               	movlw	-10
  7468  018A5E  006F FF8C  F00A    	movff	plusw1,btemp+9
  7469  018A64  500B               	movf	(btemp+10)^0,w,c
  7470  018A66  2409               	addwf	(btemp+8)^0,w,c
  7471  018A68  6ED9               	movwf	fsr2l,c
  7472  018A6A  500C               	movf	(btemp+11)^0,w,c
  7473  018A6C  200A               	addwfc	(btemp+9)^0,w,c
  7474  018A6E  6EDA               	movwf	fsr2h,c
  7475  018A70  0E00               	movlw	0
  7476  018A72  6EDF               	movwf	indf2,c
  7477                           
  7478                           ; BSR set to: 0
  7479                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 52, args
      +                          ize = 4, vargsize = 0
  7480  018A74  0EF8               	movlw	248
  7481  018A76  26E1               	addwf	fsr1l,f,c
  7482  018A78  0EFF               	movlw	255
  7483  018A7A  22E2               	addwfc	fsr1h,f,c
  7484  018A7C  52E5               	movf	postdec1,f,c
  7485  018A7E  50E7               	movf	indf1,w,c
  7486  018A80  5EE1               	subwf	fsr1l,f,c
  7487  018A82  0E00               	movlw	0
  7488  018A84  5AE2               	subwfb	fsr1h,f,c
  7489  018A86  0012               	return		;funcret
  7490  018A88                     __end_of_sprintf:
  7491                           	opt callstack 0
  7492                           
  7493 ;; *************** function _get_vterm_ptr *****************
  7494 ;; Defined at:
  7495 ;;		line 116 in file "mconfig.c"
  7496 ;; Parameters:    Size  Location     Type
  7497 ;;  line            1  [STACK] const unsigned char 
  7498 ;;  vterm           1  [STACK] const unsigned char 
  7499 ;; Auto vars:     Size  Location     Type
  7500 ;;		None
  7501 ;; Return value:  Size  Location     Type
  7502 ;;                  2  [STACK] PTR unsigned char 
  7503 ;; Registers used:
  7504 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
  7505 ;; Tracked objects:
  7506 ;;		On entry : 0/0
  7507 ;;		On exit  : 0/0
  7508 ;;		Unchanged: 0/0
  7509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7514 ;;Total ram usage:        0 bytes
  7515 ;; Hardware stack levels used:    1
  7516 ;; Hardware stack levels required when called:   15
  7517 ;; This function calls:
  7518 ;;		Nothing
  7519 ;; This function is called by:
  7520 ;;		_main
  7521 ;;		_check_help
  7522 ;;		_vterm_dump
  7523 ;; This function uses a reentrant model
  7524 ;;
  7525                           
  7526                           	psect	text27
  7527  01A518                     __ptext27:
  7528                           	opt callstack 0
  7529  01A518                     _get_vterm_ptr:
  7530                           	opt callstack 15
  7531                           
  7532                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
  7533                           ;stkvar	_vterm @ sp[(0)+-2]
  7534                           
  7535                           ; BSR set to: 0
  7536                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7537                           ;incstack = 0
  7538  01A518  0EFE               	movlw	-2
  7539  01A51A  50E3               	movf	plusw1,w,c
  7540  01A51C  0B03               	andlw	3
  7541  01A51E  0D48               	mullw	72
  7542  01A520  0EFF               	movlw	low _D
  7543  01A522  6E01               	movwf	btemp^0,c
  7544  01A524  0E07               	movlw	high _D
  7545  01A526  6E02               	movwf	(btemp+1)^0,c
  7546  01A528  50F3               	movf	243,w,c
  7547  01A52A  2601               	addwf	btemp^0,f,c
  7548  01A52C  50F4               	movf	244,w,c
  7549  01A52E  2202               	addwfc	(btemp+1)^0,f,c
  7550                           
  7551                           ;stkvar	_line @ sp[(0)+-1]
  7552  01A530  0EFF               	movlw	-1
  7553  01A532  50E3               	movf	plusw1,w,c
  7554  01A534  0B03               	andlw	3
  7555  01A536  0D18               	mullw	24
  7556  01A538  50F3               	movf	243,w,c
  7557  01A53A  2601               	addwf	btemp^0,f,c
  7558  01A53C  50F4               	movf	244,w,c
  7559  01A53E  2202               	addwfc	(btemp+1)^0,f,c
  7560                           
  7561                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  7562  01A540  52E5               	movf	postdec1,f,c
  7563  01A542  52E5               	movf	postdec1,f,c
  7564  01A544  0012               	return		;funcret
  7565  01A546                     __end_of_get_vterm_ptr:
  7566                           	opt callstack 0
  7567                           
  7568 ;; *************** function _WaitMs *****************
  7569 ;; Defined at:
  7570 ;;		line 32 in file "timers.c"
  7571 ;; Parameters:    Size  Location     Type
  7572 ;;  numMilliseco    2  [STACK] const unsigned short 
  7573 ;; Auto vars:     Size  Location     Type
  7574 ;;		None
  7575 ;; Return value:  Size  Location     Type
  7576 ;;                  1  [STACK] void 
  7577 ;; Registers used:
  7578 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  7579 ;; Tracked objects:
  7580 ;;		On entry : 0/2
  7581 ;;		On exit  : 0/0
  7582 ;;		Unchanged: 0/0
  7583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7588 ;;Total ram usage:        0 bytes
  7589 ;; Hardware stack levels used:    1
  7590 ;; Hardware stack levels required when called:   16
  7591 ;; This function calls:
  7592 ;;		_StartTimer
  7593 ;;		_TimerDone
  7594 ;; This function is called by:
  7595 ;;		_main
  7596 ;;		_vterm_dump
  7597 ;; This function uses a reentrant model
  7598 ;;
  7599                           
  7600                           	psect	text28
  7601  01A350                     __ptext28:
  7602                           	opt callstack 0
  7603  01A350                     _WaitMs:
  7604                           	opt callstack 12
  7605                           
  7606                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  7607                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  7608                           
  7609                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7610                           ;incstack = 0
  7611  01A350  0EFE               	movlw	-2
  7612  01A352  006F FF8F FFE6     	movff	plusw1,postinc1
  7613  01A358  006F FF8F FFE6     	movff	plusw1,postinc1
  7614  01A35E  0E00               	movlw	0
  7615  01A360  6EE6               	movwf	postinc1,c
  7616  01A362  ECD2  F0D0         	call	_StartTimer	;wreg free
  7617                           
  7618                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  7619  01A366  D005               	goto	l9210
  7620  01A368                     l1583:
  7621                           
  7622                           ;timers.c: 36:   __nop();
  7623  01A368  F000               	nop	
  7624                           
  7625                           ;timers.c: 37:   __nop();
  7626  01A36A  F000               	nop	
  7627                           
  7628                           ;timers.c: 38:   __nop();
  7629  01A36C  F000               	nop	
  7630                           
  7631                           ;timers.c: 39:   __nop();
  7632  01A36E  F000               	nop	
  7633  01A370  0004               	clrwdt		;# 
  7634  01A372                     l9210:
  7635                           
  7636                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  7637  01A372  0E00               	movlw	0
  7638  01A374  6EE6               	movwf	postinc1,c
  7639  01A376  EC37  F0D3         	call	_TimerDone	;wreg free
  7640  01A37A  5001               	movf	btemp^0,w,c
  7641  01A37C  B4D8               	btfsc	status,2,c
  7642  01A37E  D7F4               	goto	l1583
  7643                           
  7644                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  7645  01A380  52E5               	movf	postdec1,f,c
  7646  01A382  52E5               	movf	postdec1,f,c
  7647  01A384  0012               	return		;funcret
  7648  01A386                     __end_of_WaitMs:
  7649                           	opt callstack 0
  7650                           
  7651 ;; *************** function _update_lcd *****************
  7652 ;; Defined at:
  7653 ;;		line 85 in file "mconfig.c"
  7654 ;; Parameters:    Size  Location     Type
  7655 ;;  vterm           1  [STACK] unsigned char 
  7656 ;; Auto vars:     Size  Location     Type
  7657 ;;		None
  7658 ;; Return value:  Size  Location     Type
  7659 ;;                  1  [STACK] unsigned char 
  7660 ;; Registers used:
  7661 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7662 ;; Tracked objects:
  7663 ;;		On entry : 0/0
  7664 ;;		On exit  : 0/0
  7665 ;;		Unchanged: 0/0
  7666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7670 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7671 ;;Total ram usage:        0 bytes
  7672 ;; Hardware stack levels used:    1
  7673 ;; Hardware stack levels required when called:   26
  7674 ;; This function calls:
  7675 ;;		_eaDogM_WriteStringAtPos
  7676 ;;		_wait_lcd_done
  7677 ;; This function is called by:
  7678 ;;		_main
  7679 ;;		_check_help
  7680 ;; This function uses a reentrant model
  7681 ;;
  7682                           
  7683                           	psect	text29
  7684  01886E                     __ptext29:
  7685                           	opt callstack 0
  7686  01886E                     _update_lcd:
  7687                           	opt callstack 4
  7688                           
  7689                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
  7690                           ;stkvar	_vterm @ sp[(0)+-1]
  7691                           
  7692                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7693                           ;incstack = 0
  7694  01886E  0EFF               	movlw	-1
  7695  018870  006F FF8C  F001    	movff	plusw1,btemp
  7696  018876  0E03               	movlw	3
  7697  018878  1601               	andwf	btemp^0,f,c
  7698  01887A  0EFF               	movlw	-1
  7699  01887C  0060  F007  FFE3   	movff	btemp,plusw1
  7700                           
  7701                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
  7702  018882  EE22  F11F         	lfsr	2,_D+288
  7703  018886  A0DF               	btfss	indf2,0,c
  7704  018888  D004               	goto	l11882
  7705                           
  7706                           ;stkvar	_vterm @ sp[(0)+-1]
  7707  01888A  0EFF               	movlw	-1
  7708  01888C  50E3               	movf	plusw1,w,c
  7709  01888E  B4D8               	btfsc	status,2,c
  7710  018890  D074               	goto	l1659
  7711  018892                     l11882:
  7712                           
  7713                           ;mconfig.c: 92:  D.lcd[vterm][0][16] = 0;
  7714                           ;stkvar	_vterm @ sp[(0)+-1]
  7715  018892  0EFF               	movlw	-1
  7716  018894  50E3               	movf	plusw1,w,c
  7717  018896  0D48               	mullw	72
  7718  018898  0E0F               	movlw	low (_D+16)
  7719  01889A  24F3               	addwf	243,w,c
  7720  01889C  6ED9               	movwf	fsr2l,c
  7721  01889E  0E08               	movlw	high (_D+16)
  7722  0188A0  20F4               	addwfc	prodh,w,c
  7723  0188A2  6EDA               	movwf	fsr2h,c
  7724  0188A4  0E00               	movlw	0
  7725  0188A6  6EDF               	movwf	indf2,c
  7726                           
  7727                           ;mconfig.c: 93:  D.lcd[vterm][1][16] = 0;
  7728                           ;stkvar	_vterm @ sp[(0)+-1]
  7729  0188A8  0EFF               	movlw	-1
  7730  0188AA  50E3               	movf	plusw1,w,c
  7731  0188AC  0D48               	mullw	72
  7732  0188AE  0E27               	movlw	low (_D+40)
  7733  0188B0  24F3               	addwf	243,w,c
  7734  0188B2  6ED9               	movwf	fsr2l,c
  7735  0188B4  0E08               	movlw	high (_D+40)
  7736  0188B6  20F4               	addwfc	prodh,w,c
  7737  0188B8  6EDA               	movwf	fsr2h,c
  7738  0188BA  0E00               	movlw	0
  7739  0188BC  6EDF               	movwf	indf2,c
  7740                           
  7741                           ;mconfig.c: 94:  D.lcd[vterm][2][16] = 0;
  7742                           ;stkvar	_vterm @ sp[(0)+-1]
  7743  0188BE  0EFF               	movlw	-1
  7744  0188C0  50E3               	movf	plusw1,w,c
  7745  0188C2  0D48               	mullw	72
  7746  0188C4  0E3F               	movlw	low (_D+64)
  7747  0188C6  24F3               	addwf	243,w,c
  7748  0188C8  6ED9               	movwf	fsr2l,c
  7749  0188CA  0E08               	movlw	high (_D+64)
  7750  0188CC  20F4               	addwfc	prodh,w,c
  7751  0188CE  6EDA               	movwf	fsr2h,c
  7752  0188D0  0E00               	movlw	0
  7753  0188D2  6EDF               	movwf	indf2,c
  7754                           
  7755                           ;mconfig.c: 95:  wait_lcd_done();
  7756  0188D4  EC3A  F0D5         	call	_wait_lcd_done	;wreg free
  7757                           
  7758                           ; BSR set to: 0
  7759                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
  7760                           ;stkvar	_vterm @ sp[(0)+-1]
  7761  0188D8  0EFF               	movlw	-1
  7762  0188DA  50E3               	movf	plusw1,w,c
  7763  0188DC  0D48               	mullw	72
  7764  0188DE  0EFF               	movlw	low _D
  7765  0188E0  6E0B               	movwf	(btemp+10)^0,c
  7766  0188E2  0E07               	movlw	high _D
  7767  0188E4  6E0C               	movwf	(btemp+11)^0,c
  7768  0188E6  50F3               	movf	243,w,c
  7769  0188E8  260B               	addwf	(btemp+10)^0,f,c
  7770  0188EA  50F4               	movf	244,w,c
  7771  0188EC  220C               	addwfc	(btemp+11)^0,f,c
  7772  0188EE  0060  F02F  FFE6   	movff	btemp+10,postinc1
  7773  0188F4  0060  F033  FFE6   	movff	btemp+11,postinc1
  7774  0188FA  0E00               	movlw	0
  7775  0188FC  6EE6               	movwf	postinc1,c
  7776  0188FE  0E00               	movlw	0
  7777  018900  6EE6               	movwf	postinc1,c
  7778  018902  ECC3  F0D1         	call	_eaDogM_WriteStringAtPos	;wreg free
  7779                           
  7780                           ; BSR set to: 59
  7781                           ;mconfig.c: 97:  wait_lcd_done();
  7782  018906  EC3A  F0D5         	call	_wait_lcd_done	;wreg free
  7783                           
  7784                           ; BSR set to: 0
  7785                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
  7786                           ;stkvar	_vterm @ sp[(0)+-1]
  7787  01890A  0EFF               	movlw	-1
  7788  01890C  50E3               	movf	plusw1,w,c
  7789  01890E  0D48               	mullw	72
  7790  018910  0EFF               	movlw	low _D
  7791  018912  6E0B               	movwf	(btemp+10)^0,c
  7792  018914  0E07               	movlw	high _D
  7793  018916  6E0C               	movwf	(btemp+11)^0,c
  7794  018918  0E18               	movlw	24
  7795  01891A  260B               	addwf	(btemp+10)^0,f,c
  7796  01891C  0E00               	movlw	0
  7797  01891E  220C               	addwfc	(btemp+11)^0,f,c
  7798  018920  50F3               	movf	243,w,c
  7799  018922  260B               	addwf	(btemp+10)^0,f,c
  7800  018924  50F4               	movf	244,w,c
  7801  018926  220C               	addwfc	(btemp+11)^0,f,c
  7802  018928  0060  F02F  FFE6   	movff	btemp+10,postinc1
  7803  01892E  0060  F033  FFE6   	movff	btemp+11,postinc1
  7804  018934  0E00               	movlw	0
  7805  018936  6EE6               	movwf	postinc1,c
  7806  018938  0E01               	movlw	1
  7807  01893A  6EE6               	movwf	postinc1,c
  7808  01893C  ECC3  F0D1         	call	_eaDogM_WriteStringAtPos	;wreg free
  7809                           
  7810                           ; BSR set to: 59
  7811                           ;mconfig.c: 99:  wait_lcd_done();
  7812  018940  EC3A  F0D5         	call	_wait_lcd_done	;wreg free
  7813                           
  7814                           ; BSR set to: 0
  7815                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
  7816                           ;stkvar	_vterm @ sp[(0)+-1]
  7817  018944  0EFF               	movlw	-1
  7818  018946  50E3               	movf	plusw1,w,c
  7819  018948  0D48               	mullw	72
  7820  01894A  0EFF               	movlw	low _D
  7821  01894C  6E0B               	movwf	(btemp+10)^0,c
  7822  01894E  0E07               	movlw	high _D
  7823  018950  6E0C               	movwf	(btemp+11)^0,c
  7824  018952  0E30               	movlw	48
  7825  018954  260B               	addwf	(btemp+10)^0,f,c
  7826  018956  0E00               	movlw	0
  7827  018958  220C               	addwfc	(btemp+11)^0,f,c
  7828  01895A  50F3               	movf	243,w,c
  7829  01895C  260B               	addwf	(btemp+10)^0,f,c
  7830  01895E  50F4               	movf	244,w,c
  7831  018960  220C               	addwfc	(btemp+11)^0,f,c
  7832  018962  0060  F02F  FFE6   	movff	btemp+10,postinc1
  7833  018968  0060  F033  FFE6   	movff	btemp+11,postinc1
  7834  01896E  0E00               	movlw	0
  7835  018970  6EE6               	movwf	postinc1,c
  7836  018972  0E02               	movlw	2
  7837  018974  6EE6               	movwf	postinc1,c
  7838  018976  ECC3  F0D1         	call	_eaDogM_WriteStringAtPos	;wreg free
  7839  01897A                     l1659:
  7840                           
  7841                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  7842  01897A  52E5               	movf	postdec1,f,c
  7843  01897C  0012               	return		;funcret
  7844  01897E                     __end_of_update_lcd:
  7845                           	opt callstack 0
  7846                           
  7847 ;; *************** function _eaDogM_WriteStringAtPos *****************
  7848 ;; Defined at:
  7849 ;;		line 278 in file "eadog.c"
  7850 ;; Parameters:    Size  Location     Type
  7851 ;;  r               1  [STACK] const unsigned char 
  7852 ;;  c               1  [STACK] const unsigned char 
  7853 ;;  strPtr          2  [STACK] PTR unsigned char 
  7854 ;;		 -> D.lcd(288), D(290), V(188), 
  7855 ;; Auto vars:     Size  Location     Type
  7856 ;;		None
  7857 ;; Return value:  Size  Location     Type
  7858 ;;                  1  [STACK] void 
  7859 ;; Registers used:
  7860 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7861 ;; Tracked objects:
  7862 ;;		On entry : 3F/0
  7863 ;;		On exit  : 3F/3B
  7864 ;;		Unchanged: 0/0
  7865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7870 ;;Total ram usage:        0 bytes
  7871 ;; Hardware stack levels used:    1
  7872 ;; Hardware stack levels required when called:   25
  7873 ;; This function calls:
  7874 ;;		_eaDogM_WriteString
  7875 ;;		_send_lcd_cmd_dma
  7876 ;; This function is called by:
  7877 ;;		_update_lcd
  7878 ;;		_vterm_dump
  7879 ;; This function uses a reentrant model
  7880 ;;
  7881                           
  7882                           	psect	text30
  7883  01A386                     __ptext30:
  7884                           	opt callstack 0
  7885  01A386                     _eaDogM_WriteStringAtPos:
  7886                           	opt callstack 4
  7887                           
  7888                           ;eadog.c: 278: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 279: {;eadog.c: 280:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  7889                           ;stkvar	_c @ sp[(0)+-2]
  7890                           
  7891                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7892                           ;incstack = 0
  7893  01A386  0EFE               	movlw	-2
  7894  01A388  006F FF8C  F00C    	movff	plusw1,btemp+11
  7895                           
  7896                           ;stkvar	_r @ sp[(0)+-1]
  7897  01A38E  0EFF               	movlw	-1
  7898  01A390  50E3               	movf	plusw1,w,c
  7899  01A392  0D10               	mullw	16
  7900  01A394  50F3               	movf	243,w,c
  7901  01A396  240C               	addwf	(btemp+11)^0,w,c
  7902  01A398  0F80               	addlw	128
  7903  01A39A  6EE6               	movwf	postinc1,c
  7904  01A39C  ECF5  F0CE         	call	_send_lcd_cmd_dma	;wreg free
  7905                           
  7906                           ;eadog.c: 281:  eaDogM_WriteString(strPtr);
  7907                           ;stkvar	_strPtr @ sp[(0)+-4]
  7908  01A3A0  0EFC               	movlw	-4
  7909  01A3A2  006F FF8F FFE6     	movff	plusw1,postinc1
  7910  01A3A8  006F FF8F FFE6     	movff	plusw1,postinc1
  7911  01A3AE  ECBD  F0C9         	call	_eaDogM_WriteString	;wreg free
  7912                           
  7913                           ; BSR set to: 59
  7914                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
  7915  01A3B2  52E5               	movf	postdec1,f,c
  7916  01A3B4  52E5               	movf	postdec1,f,c
  7917  01A3B6  52E5               	movf	postdec1,f,c
  7918  01A3B8  52E5               	movf	postdec1,f,c
  7919  01A3BA  0012               	return		;funcret
  7920  01A3BC                     __end_of_eaDogM_WriteStringAtPos:
  7921                           	opt callstack 0
  7922                           
  7923 ;; *************** function _send_lcd_cmd_dma *****************
  7924 ;; Defined at:
  7925 ;;		line 220 in file "eadog.c"
  7926 ;; Parameters:    Size  Location     Type
  7927 ;;  strPtr          1  [STACK] unsigned char 
  7928 ;; Auto vars:     Size  Location     Type
  7929 ;;		None
  7930 ;; Return value:  Size  Location     Type
  7931 ;;                  1  [STACK] void 
  7932 ;; Registers used:
  7933 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7934 ;; Tracked objects:
  7935 ;;		On entry : 0/3D
  7936 ;;		On exit  : 3F/0
  7937 ;;		Unchanged: 0/0
  7938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7943 ;;Total ram usage:        0 bytes
  7944 ;; Hardware stack levels used:    1
  7945 ;; Hardware stack levels required when called:   24
  7946 ;; This function calls:
  7947 ;;		_printf
  7948 ;;		_ringBufS_flush
  7949 ;;		_start_lcd
  7950 ;;		_wait_lcd_done
  7951 ;;		_wait_lcd_set
  7952 ;; This function is called by:
  7953 ;;		_eaDogM_WriteCommand
  7954 ;;		_eaDogM_WriteStringAtPos
  7955 ;; This function uses a reentrant model
  7956 ;;
  7957                           
  7958                           	psect	text31
  7959  019DEA                     __ptext31:
  7960                           	opt callstack 0
  7961  019DEA                     _send_lcd_cmd_dma:
  7962                           	opt callstack 4
  7963                           
  7964                           ;eadog.c: 220: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 221: {;eadog.c: 223:  wait
      +                          _lcd_set();
  7965                           
  7966                           ; BSR set to: 59
  7967                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7968                           ;incstack = 0
  7969  019DEA  EC26  F0D6         	call	_wait_lcd_set	;wreg free
  7970                           
  7971                           ; BSR set to: 0
  7972                           ;eadog.c: 225:  ringBufS_flush(spi_link.tx1a, 0);
  7973  019DEE  0E00               	movlw	0
  7974  019DF0  6EE6               	movwf	postinc1,c
  7975  019DF2  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
  7976  019DF8  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
  7977  019DFE  ECF6  F0CA         	call	_ringBufS_flush	;wreg free
  7978  019E02  92BC               	bcf	188,1,c	;volatile
  7979  019E04  94BC               	bcf	188,2,c	;volatile
  7980                           
  7981                           ;eadog.c: 228:  DMA1CON0bits.EN = 0;
  7982  019E06  013B               	movlb	59	; () banked
  7983  019E08  9FFC               	bcf	252,7,b	;volatile
  7984                           
  7985                           ; BSR set to: 59
  7986                           ;eadog.c: 229:  DMA1SSZ = 1;
  7987  019E0A  0E00               	movlw	0
  7988  019E0C  6FF8               	movwf	248,b	;volatile
  7989  019E0E  0E01               	movlw	1
  7990  019E10  6FF7               	movwf	247,b	;volatile
  7991                           
  7992                           ; BSR set to: 59
  7993                           ;eadog.c: 230:  DMA1CON0bits.EN = 1;
  7994  019E12  8FFC               	bsf	252,7,b	;volatile
  7995                           
  7996                           ; BSR set to: 59
  7997                           ;eadog.c: 231:  printf("%c", strPtr);
  7998                           ;stkvar	_strPtr @ sp[(0)+-1]
  7999  019E14  0EFF               	movlw	-1
  8000  019E16  50E3               	movf	plusw1,w,c
  8001  019E18  6EE6               	movwf	postinc1,c
  8002  019E1A  0E00               	movlw	0
  8003  019E1C  6EE6               	movwf	postinc1,c
  8004  019E1E  0EF9               	movlw	low STR_27
  8005  019E20  6EE6               	movwf	postinc1,c
  8006  019E22  0EFF               	movlw	high STR_27
  8007  019E24  6EE6               	movwf	postinc1,c
  8008  019E26  0E04               	movlw	4
  8009  019E28  6EE6               	movwf	postinc1,c
  8010  019E2A  ECDC  F0CD         	call	_printf	;wreg free
  8011                           
  8012                           ; BSR set to: 0
  8013                           ;eadog.c: 232:  start_lcd();
  8014  019E2E  EC29  F0D6         	call	_start_lcd	;wreg free
  8015                           
  8016                           ; BSR set to: 59
  8017                           ;eadog.c: 233:  wait_lcd_done();
  8018  019E32  EC3A  F0D5         	call	_wait_lcd_done	;wreg free
  8019                           
  8020                           ; BSR set to: 0
  8021  019E36  82BC               	bsf	188,1,c	;volatile
  8022                           
  8023                           ; BSR set to: 0
  8024                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  8025  019E38  52E5               	movf	postdec1,f,c
  8026  019E3A  0012               	return		;funcret
  8027  019E3C                     __end_of_send_lcd_cmd_dma:
  8028                           	opt callstack 0
  8029                           
  8030 ;; *************** function _wait_lcd_done *****************
  8031 ;; Defined at:
  8032 ;;		line 156 in file "eadog.c"
  8033 ;; Parameters:    Size  Location     Type
  8034 ;;		None
  8035 ;; Auto vars:     Size  Location     Type
  8036 ;;		None
  8037 ;; Return value:  Size  Location     Type
  8038 ;;                  1  [STACK] void 
  8039 ;; Registers used:
  8040 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  8041 ;; Tracked objects:
  8042 ;;		On entry : 0/0
  8043 ;;		On exit  : 3F/0
  8044 ;;		Unchanged: 0/0
  8045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8049 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8050 ;;Total ram usage:        0 bytes
  8051 ;; Hardware stack levels used:    1
  8052 ;; Hardware stack levels required when called:   16
  8053 ;; This function calls:
  8054 ;;		_wdtdelay
  8055 ;; This function is called by:
  8056 ;;		_send_lcd_cmd_dma
  8057 ;;		_update_lcd
  8058 ;;		_vterm_dump
  8059 ;; This function uses a reentrant model
  8060 ;;
  8061                           
  8062                           	psect	text32
  8063  01AA74                     __ptext32:
  8064                           	opt callstack 0
  8065  01AA74                     _wait_lcd_done:
  8066                           	opt callstack 13
  8067                           
  8068                           ;eadog.c: 158:  while (spi_link.LCD_DATA);
  8069                           
  8070                           ; BSR set to: 0
  8071                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8072                           ;incstack = 0
  8073  01AA74  0100               	movlb	0	; () banked
  8074  01AA76  B760               	btfsc	_spi_link& (0+255),3,b	;volatile
  8075  01AA78  D7FD               	goto	_wait_lcd_done
  8076                           
  8077                           ; BSR set to: 0
  8078                           ;eadog.c: 159:  wdtdelay(50);
  8079  01AA7A  0E32               	movlw	50
  8080  01AA7C  6EE6               	movwf	postinc1,c
  8081  01AA7E  0E00               	movlw	0
  8082  01AA80  6EE6               	movwf	postinc1,c
  8083  01AA82  0E00               	movlw	0
  8084  01AA84  6EE6               	movwf	postinc1,c
  8085  01AA86  0E00               	movlw	0
  8086  01AA88  6EE6               	movwf	postinc1,c
  8087  01AA8A  EC6D  F0CE         	call	_wdtdelay	;wreg free
  8088                           
  8089                           ; BSR set to: 0
  8090                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  8091  01AA8E  0012               	return		;funcret
  8092  01AA90                     __end_of_wait_lcd_done:
  8093                           	opt callstack 0
  8094                           
  8095 ;; *************** function _wdtdelay *****************
  8096 ;; Defined at:
  8097 ;;		line 23 in file "eadog.c"
  8098 ;; Parameters:    Size  Location     Type
  8099 ;;  delay           4  [STACK] const unsigned long 
  8100 ;; Auto vars:     Size  Location     Type
  8101 ;;		None
  8102 ;; Return value:  Size  Location     Type
  8103 ;;                  1  [STACK] void 
  8104 ;; Registers used:
  8105 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  8106 ;; Tracked objects:
  8107 ;;		On entry : 0/0
  8108 ;;		On exit  : 3F/0
  8109 ;;		Unchanged: 0/0
  8110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8114 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8115 ;;Total ram usage:        0 bytes
  8116 ;; Hardware stack levels used:    1
  8117 ;; Hardware stack levels required when called:   15
  8118 ;; This function calls:
  8119 ;;		Nothing
  8120 ;; This function is called by:
  8121 ;;		_init_display
  8122 ;;		_send_lcd_cmd
  8123 ;;		_send_lcd_cmd_long
  8124 ;;		_wait_lcd_done
  8125 ;; This function uses a reentrant model
  8126 ;;
  8127                           
  8128                           	psect	text33
  8129  019CDA                     __ptext33:
  8130                           	opt callstack 0
  8131  019CDA                     _wdtdelay:
  8132                           	opt callstack 13
  8133                           
  8134                           ;eadog.c: 23: void wdtdelay(const uint32_t delay);eadog.c: 24: {;eadog.c: 25:  static ui
      +                          nt32_t dcount;;eadog.c: 27:  for (dcount = 0; dcount <= delay; dcount++) {
  8135                           
  8136                           ; BSR set to: 0
  8137                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8138                           ;incstack = 0
  8139  019CDA  0100               	movlb	0	; () banked
  8140  019CDC  6B94               	clrf	wdtdelay@dcount& (0+255),b
  8141  019CDE  6B95               	clrf	(wdtdelay@dcount+1)& (0+255),b
  8142  019CE0  6B96               	clrf	(wdtdelay@dcount+2)& (0+255),b
  8143  019CE2  6B97               	clrf	(wdtdelay@dcount+3)& (0+255),b
  8144  019CE4                     l1424:
  8145                           
  8146                           ; BSR set to: 0
  8147                           ;eadog.c: 28:   __nop();
  8148  019CE4  F000               	nop	
  8149  019CE6  0004               	clrwdt		;# 
  8150                           
  8151                           ;eadog.c: 30:  };
  8152  019CE8  0E01               	movlw	1
  8153  019CEA  0100               	movlb	0	; () banked
  8154  019CEC  2794               	addwf	wdtdelay@dcount& (0+255),f,b
  8155  019CEE  0E00               	movlw	0
  8156  019CF0  2395               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  8157  019CF2  2396               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  8158  019CF4  2397               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  8159                           
  8160                           ; BSR set to: 0
  8161                           ;stkvar	_delay @ sp[(0)+-4]
  8162  019CF6  0EFC               	movlw	-4
  8163  019CF8  006F FF8C  F001    	movff	plusw1,btemp
  8164  019CFE  5194               	movf	wdtdelay@dcount& (0+255),w,b
  8165  019D00  5C01               	subwf	btemp^0,w,c
  8166  019D02  0EFD               	movlw	-3
  8167  019D04  006F FF8C  F001    	movff	plusw1,btemp
  8168  019D0A  5195               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  8169  019D0C  5801               	subwfb	btemp^0,w,c
  8170  019D0E  0EFE               	movlw	-2
  8171  019D10  006F FF8C  F001    	movff	plusw1,btemp
  8172  019D16  5196               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  8173  019D18  5801               	subwfb	btemp^0,w,c
  8174  019D1A  0EFF               	movlw	-1
  8175  019D1C  006F FF8C  F001    	movff	plusw1,btemp
  8176  019D22  5197               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  8177  019D24  5801               	subwfb	btemp^0,w,c
  8178  019D26  B0D8               	btfsc	status,0,c
  8179  019D28  D7DD               	goto	l1424
  8180                           
  8181                           ; BSR set to: 0
  8182                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  8183  019D2A  52E5               	movf	postdec1,f,c
  8184  019D2C  52E5               	movf	postdec1,f,c
  8185  019D2E  52E5               	movf	postdec1,f,c
  8186  019D30  52E5               	movf	postdec1,f,c
  8187  019D32  0012               	return		;funcret
  8188  019D34                     __end_of_wdtdelay:
  8189                           	opt callstack 0
  8190                           
  8191 ;; *************** function _eaDogM_WriteString *****************
  8192 ;; Defined at:
  8193 ;;		line 199 in file "eadog.c"
  8194 ;; Parameters:    Size  Location     Type
  8195 ;;  strPtr          2  [STACK] PTR unsigned char 
  8196 ;;		 -> D.lcd(288), D(290), V(188), 
  8197 ;; Auto vars:     Size  Location     Type
  8198 ;;		None
  8199 ;; Return value:  Size  Location     Type
  8200 ;;                  1  [STACK] void 
  8201 ;; Registers used:
  8202 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8203 ;; Tracked objects:
  8204 ;;		On entry : 3F/0
  8205 ;;		On exit  : 3F/3B
  8206 ;;		Unchanged: 0/0
  8207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8211 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8212 ;;Total ram usage:        0 bytes
  8213 ;; Hardware stack levels used:    1
  8214 ;; Hardware stack levels required when called:   24
  8215 ;; This function calls:
  8216 ;;		_printf
  8217 ;;		_ringBufS_flush
  8218 ;;		_start_lcd
  8219 ;;		_strlen
  8220 ;;		_wait_lcd_set
  8221 ;; This function is called by:
  8222 ;;		_eaDogM_WriteStringAtPos
  8223 ;; This function uses a reentrant model
  8224 ;;
  8225                           
  8226                           	psect	text34
  8227  01937A                     __ptext34:
  8228                           	opt callstack 0
  8229  01937A                     _eaDogM_WriteString:
  8230                           	opt callstack 4
  8231                           
  8232                           ;eadog.c: 199: void eaDogM_WriteString(char *strPtr);eadog.c: 200: {;eadog.c: 202:  wait
      +                          _lcd_set();
  8233                           
  8234                           ; BSR set to: 0
  8235                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8236                           ;incstack = 0
  8237  01937A  EC26  F0D6         	call	_wait_lcd_set	;wreg free
  8238                           
  8239                           ; BSR set to: 0
  8240                           ;eadog.c: 204:  ringBufS_flush(spi_link.tx1a, 0);
  8241  01937E  0E00               	movlw	0
  8242  019380  6EE6               	movwf	postinc1,c
  8243  019382  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
  8244  019388  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
  8245  01938E  ECF6  F0CA         	call	_ringBufS_flush	;wreg free
  8246  019392  94BC               	bcf	188,2,c	;volatile
  8247                           
  8248                           ;eadog.c: 206:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  8249                           ;stkvar	_strPtr @ sp[(0)+-2]
  8250  019394  0EFE               	movlw	-2
  8251  019396  006F FF8F FFE6     	movff	plusw1,postinc1
  8252  01939C  006F FF8F FFE6     	movff	plusw1,postinc1
  8253  0193A2  EC10  F0CA         	call	_strlen	;wreg free
  8254  0193A6  5002               	movf	(btemp+1)^0,w,c
  8255  0193A8  E104               	bnz	u11500
  8256  0193AA  0E41               	movlw	65
  8257  0193AC  5C01               	subwf	btemp^0,w,c
  8258  0193AE  A0D8               	btfss	status,0,c
  8259  0193B0  D010               	goto	l11836
  8260  0193B2                     u11500:
  8261                           
  8262                           ;stkvar	_strPtr @ sp[(0)+-2]
  8263  0193B2  0EFE               	movlw	-2
  8264  0193B4  006F FF8C  F00B    	movff	plusw1,btemp+10
  8265  0193BA  0EFF               	movlw	-1
  8266  0193BC  006F FF8C  F00C    	movff	plusw1,btemp+11
  8267  0193C2  0E40               	movlw	64
  8268  0193C4  240B               	addwf	(btemp+10)^0,w,c
  8269  0193C6  6ED9               	movwf	fsr2l,c
  8270  0193C8  0E00               	movlw	0
  8271  0193CA  200C               	addwfc	(btemp+11)^0,w,c
  8272  0193CC  6EDA               	movwf	fsr2h,c
  8273  0193CE  0E00               	movlw	0
  8274  0193D0  6EDF               	movwf	indf2,c
  8275  0193D2                     l11836:
  8276                           
  8277                           ;eadog.c: 207:  DMA1CON0bits.EN = 0;
  8278  0193D2  013B               	movlb	59	; () banked
  8279  0193D4  9FFC               	bcf	252,7,b	;volatile
  8280                           
  8281                           ; BSR set to: 59
  8282                           ;eadog.c: 208:  DMA1SSZ = strlen(strPtr);
  8283                           ;stkvar	_strPtr @ sp[(0)+-2]
  8284  0193D6  0EFE               	movlw	-2
  8285  0193D8  006F FF8F FFE6     	movff	plusw1,postinc1
  8286  0193DE  006F FF8F FFE6     	movff	plusw1,postinc1
  8287  0193E4  EC10  F0CA         	call	_strlen	;wreg free
  8288  0193E8  0060  F007  FBF7   	movff	btemp,15351	;volatile
  8289  0193EE  0060  F00B  FBF8   	movff	btemp+1,15352	;volatile
  8290                           
  8291                           ;eadog.c: 209:  DMA1CON0bits.EN = 1;
  8292  0193F4  013B               	movlb	59	; () banked
  8293  0193F6  8FFC               	bsf	252,7,b	;volatile
  8294                           
  8295                           ; BSR set to: 59
  8296                           ;eadog.c: 210:  printf("%s", strPtr);
  8297                           ;stkvar	_strPtr @ sp[(0)+-2]
  8298  0193F8  0EFE               	movlw	-2
  8299  0193FA  006F FF8F FFE6     	movff	plusw1,postinc1
  8300  019400  006F FF8F FFE6     	movff	plusw1,postinc1
  8301  019406  0EFC               	movlw	low STR_26
  8302  019408  6EE6               	movwf	postinc1,c
  8303  01940A  0EFF               	movlw	high STR_26
  8304  01940C  6EE6               	movwf	postinc1,c
  8305  01940E  0E04               	movlw	4
  8306  019410  6EE6               	movwf	postinc1,c
  8307  019412  ECDC  F0CD         	call	_printf	;wreg free
  8308                           
  8309                           ; BSR set to: 0
  8310                           ;eadog.c: 211:  start_lcd();
  8311  019416  EC29  F0D6         	call	_start_lcd	;wreg free
  8312                           
  8313                           ; BSR set to: 59
  8314                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
  8315  01941A  52E5               	movf	postdec1,f,c
  8316  01941C  52E5               	movf	postdec1,f,c
  8317  01941E  0012               	return		;funcret
  8318  019420                     __end_of_eaDogM_WriteString:
  8319                           	opt callstack 0
  8320                           
  8321 ;; *************** function _wait_lcd_set *****************
  8322 ;; Defined at:
  8323 ;;		line 146 in file "eadog.c"
  8324 ;; Parameters:    Size  Location     Type
  8325 ;;		None
  8326 ;; Auto vars:     Size  Location     Type
  8327 ;;		None
  8328 ;; Return value:  Size  Location     Type
  8329 ;;                  1  [STACK] void 
  8330 ;; Registers used:
  8331 ;;		None
  8332 ;; Tracked objects:
  8333 ;;		On entry : 0/3D
  8334 ;;		On exit  : 3F/0
  8335 ;;		Unchanged: 0/0
  8336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8341 ;;Total ram usage:        0 bytes
  8342 ;; Hardware stack levels used:    1
  8343 ;; Hardware stack levels required when called:   15
  8344 ;; This function calls:
  8345 ;;		Nothing
  8346 ;; This function is called by:
  8347 ;;		_eaDogM_WriteString
  8348 ;;		_send_lcd_cmd_dma
  8349 ;; This function uses a reentrant model
  8350 ;;
  8351                           
  8352                           	psect	text35
  8353  01AC4C                     __ptext35:
  8354                           	opt callstack 0
  8355  01AC4C                     _wait_lcd_set:
  8356                           	opt callstack 12
  8357                           
  8358                           ;eadog.c: 148:  spi_link.LCD_DATA = 1;
  8359                           
  8360                           ; BSR set to: 59
  8361                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8362                           ;incstack = 0
  8363  01AC4C  0100               	movlb	0	; () banked
  8364  01AC4E  8760               	bsf	_spi_link& (0+255),3,b	;volatile
  8365                           
  8366                           ; BSR set to: 0
  8367                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  8368  01AC50  0012               	return		;funcret
  8369  01AC52                     __end_of_wait_lcd_set:
  8370                           	opt callstack 0
  8371                           
  8372 ;; *************** function _start_lcd *****************
  8373 ;; Defined at:
  8374 ;;		line 141 in file "eadog.c"
  8375 ;; Parameters:    Size  Location     Type
  8376 ;;		None
  8377 ;; Auto vars:     Size  Location     Type
  8378 ;;		None
  8379 ;; Return value:  Size  Location     Type
  8380 ;;                  1  [STACK] void 
  8381 ;; Registers used:
  8382 ;;		None
  8383 ;; Tracked objects:
  8384 ;;		On entry : 3F/0
  8385 ;;		On exit  : 3F/3B
  8386 ;;		Unchanged: 0/0
  8387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8391 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8392 ;;Total ram usage:        0 bytes
  8393 ;; Hardware stack levels used:    1
  8394 ;; Hardware stack levels required when called:   15
  8395 ;; This function calls:
  8396 ;;		Nothing
  8397 ;; This function is called by:
  8398 ;;		_eaDogM_WriteString
  8399 ;;		_send_lcd_cmd_dma
  8400 ;; This function uses a reentrant model
  8401 ;;
  8402                           
  8403                           	psect	text36
  8404  01AC52                     __ptext36:
  8405                           	opt callstack 0
  8406  01AC52                     _start_lcd:
  8407                           	opt callstack 12
  8408                           
  8409                           ;eadog.c: 143:  DMA1CON0bits.DMA1SIRQEN = 1;
  8410                           
  8411                           ; BSR set to: 0
  8412                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8413                           ;incstack = 0
  8414  01AC52  013B               	movlb	59	; () banked
  8415  01AC54  8DFC               	bsf	252,6,b	;volatile
  8416                           
  8417                           ; BSR set to: 59
  8418                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  8419  01AC56  0012               	return		;funcret
  8420  01AC58                     __end_of_start_lcd:
  8421                           	opt callstack 0
  8422                           
  8423 ;; *************** function _ringBufS_flush *****************
  8424 ;; Defined at:
  8425 ;;		line 76 in file "ringbufs.c"
  8426 ;; Parameters:    Size  Location     Type
  8427 ;;  _this           2  [STACK] PTR struct ringBufS_t
  8428 ;;		 -> ring_buf1(67), 
  8429 ;;  clearBuffer     1  [STACK] const char 
  8430 ;; Auto vars:     Size  Location     Type
  8431 ;;		None
  8432 ;; Return value:  Size  Location     Type
  8433 ;;                  1  [STACK] void 
  8434 ;; Registers used:
  8435 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  8436 ;; Tracked objects:
  8437 ;;		On entry : 3F/0
  8438 ;;		On exit  : 0/0
  8439 ;;		Unchanged: 0/0
  8440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8444 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8445 ;;Total ram usage:        0 bytes
  8446 ;; Hardware stack levels used:    1
  8447 ;; Hardware stack levels required when called:   16
  8448 ;; This function calls:
  8449 ;;		_memset
  8450 ;; This function is called by:
  8451 ;;		_eaDogM_WriteString
  8452 ;;		_send_lcd_cmd_dma
  8453 ;; This function uses a reentrant model
  8454 ;;
  8455                           
  8456                           	psect	text37
  8457  0195EC                     __ptext37:
  8458                           	opt callstack 0
  8459  0195EC                     _ringBufS_flush:
  8460                           	opt callstack 11
  8461                           
  8462                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  8463                           ;stkvar	__this @ sp[(0)+-2]
  8464                           
  8465                           ; BSR set to: 59
  8466                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8467                           ;incstack = 0
  8468  0195EC  0EFE               	movlw	-2
  8469  0195EE  006F FF8C  F00B    	movff	plusw1,btemp+10
  8470  0195F4  0EFF               	movlw	-1
  8471  0195F6  006F FF8C  F00C    	movff	plusw1,btemp+11
  8472  0195FC  0E42               	movlw	66
  8473  0195FE  240B               	addwf	(btemp+10)^0,w,c
  8474  019600  6ED9               	movwf	fsr2l,c
  8475  019602  0E00               	movlw	0
  8476  019604  200C               	addwfc	(btemp+11)^0,w,c
  8477  019606  6EDA               	movwf	fsr2h,c
  8478  019608  0E00               	movlw	0
  8479  01960A  6EDF               	movwf	indf2,c
  8480                           
  8481                           ;ringbufs.c: 79:  _this->head = 0;
  8482                           ;stkvar	__this @ sp[(0)+-2]
  8483  01960C  0EFE               	movlw	-2
  8484  01960E  006F FF8C  F00B    	movff	plusw1,btemp+10
  8485  019614  0EFF               	movlw	-1
  8486  019616  006F FF8C  F00C    	movff	plusw1,btemp+11
  8487  01961C  0E40               	movlw	64
  8488  01961E  240B               	addwf	(btemp+10)^0,w,c
  8489  019620  6ED9               	movwf	fsr2l,c
  8490  019622  0E00               	movlw	0
  8491  019624  200C               	addwfc	(btemp+11)^0,w,c
  8492  019626  6EDA               	movwf	fsr2h,c
  8493  019628  0E00               	movlw	0
  8494  01962A  6EDF               	movwf	indf2,c
  8495                           
  8496                           ;ringbufs.c: 80:  _this->tail = 0;
  8497                           ;stkvar	__this @ sp[(0)+-2]
  8498  01962C  0EFE               	movlw	-2
  8499  01962E  006F FF8C  F00B    	movff	plusw1,btemp+10
  8500  019634  0EFF               	movlw	-1
  8501  019636  006F FF8C  F00C    	movff	plusw1,btemp+11
  8502  01963C  0E41               	movlw	65
  8503  01963E  240B               	addwf	(btemp+10)^0,w,c
  8504  019640  6ED9               	movwf	fsr2l,c
  8505  019642  0E00               	movlw	0
  8506  019644  200C               	addwfc	(btemp+11)^0,w,c
  8507  019646  6EDA               	movwf	fsr2h,c
  8508  019648  0E00               	movlw	0
  8509  01964A  6EDF               	movwf	indf2,c
  8510                           
  8511                           ;ringbufs.c: 81:  if (clearBuffer) {
  8512                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  8513  01964C  0EFD               	movlw	-3
  8514  01964E  50E3               	movf	plusw1,w,c
  8515  019650  B4D8               	btfsc	status,2,c
  8516  019652  D011               	goto	l1568
  8517                           
  8518                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  8519  019654  0E40               	movlw	64
  8520  019656  6EE6               	movwf	postinc1,c
  8521  019658  0E00               	movlw	0
  8522  01965A  6EE6               	movwf	postinc1,c
  8523  01965C  0E00               	movlw	0
  8524  01965E  6EE6               	movwf	postinc1,c
  8525  019660  0E00               	movlw	0
  8526  019662  6EE6               	movwf	postinc1,c
  8527                           
  8528                           ;stkvar	__this @ sp[(-4)+-2]
  8529  019664  0EFA               	movlw	-6
  8530  019666  006F FF8F FFE6     	movff	plusw1,postinc1
  8531  01966C  006F FF8F FFE6     	movff	plusw1,postinc1
  8532  019672  EC92  F0AF         	call	_memset	;wreg free
  8533  019676                     l1568:
  8534                           
  8535                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  8536  019676  52E5               	movf	postdec1,f,c
  8537  019678  52E5               	movf	postdec1,f,c
  8538  01967A  52E5               	movf	postdec1,f,c
  8539  01967C  0012               	return		;funcret
  8540  01967E                     __end_of_ringBufS_flush:
  8541                           	opt callstack 0
  8542                           
  8543 ;; *************** function _memset *****************
  8544 ;; Defined at:
  8545 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
  8546 ;; Parameters:    Size  Location     Type
  8547 ;;  dest            2  [STACK] PTR void 
  8548 ;;		 -> ring_buf2(67), ring_buf1(67), 
  8549 ;;  c               2  [STACK] int 
  8550 ;;  n               2  [STACK] unsigned int 
  8551 ;; Auto vars:     Size  Location     Type
  8552 ;;  s               2  [STACK] PTR unsigned char 
  8553 ;;		 -> ring_buf2(67), ring_buf1(67), 
  8554 ;;  k               2  [STACK] unsigned int 
  8555 ;; Return value:  Size  Location     Type
  8556 ;;                  2  [STACK] PTR void 
  8557 ;; Registers used:
  8558 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  8559 ;; Tracked objects:
  8560 ;;		On entry : 0/0
  8561 ;;		On exit  : 0/0
  8562 ;;		Unchanged: 0/0
  8563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8567 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8568 ;;Total ram usage:        0 bytes
  8569 ;; Hardware stack levels used:    1
  8570 ;; Hardware stack levels required when called:   15
  8571 ;; This function calls:
  8572 ;;		Nothing
  8573 ;; This function is called by:
  8574 ;;		_ringBufS_init
  8575 ;;		_ringBufS_flush
  8576 ;; This function uses a reentrant model
  8577 ;;
  8578                           
  8579                           	psect	text38
  8580  015F24                     __ptext38:
  8581                           	opt callstack 0
  8582  015F24                     _memset:
  8583                           	opt callstack 0
  8584                           
  8585                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8586  015F24  52E6               	movf	postinc1,f,c
  8587  015F26  52E6               	movf	postinc1,f,c
  8588  015F28  52E6               	movf	postinc1,f,c
  8589  015F2A  52E6               	movf	postinc1,f,c
  8590                           
  8591                           ;stkvar	_dest @ sp[(-4)+-2]
  8592                           
  8593                           ;incstack = 0
  8594  015F2C  0EFA               	movlw	-6
  8595  015F2E  006F FF8C  F00B    	movff	plusw1,btemp+10
  8596  015F34  0EFB               	movlw	-5
  8597  015F36  006F FF8C  F00C    	movff	plusw1,btemp+11
  8598                           
  8599                           ;stkvar	_s @ sp[(-4)+0]
  8600  015F3C  0EFD               	movlw	-3
  8601  015F3E  0060  F033  FFE3   	movff	btemp+11,plusw1
  8602  015F44  0EFC               	movlw	-4
  8603  015F46  0060  F02F  FFE3   	movff	btemp+10,plusw1
  8604                           
  8605                           ;stkvar	_n @ sp[(-4)+-6]
  8606  015F4C  0EF6               	movlw	-10
  8607  015F4E  006F FF8C  F001    	movff	plusw1,btemp
  8608  015F54  0EF7               	movlw	-9
  8609  015F56  50E3               	movf	plusw1,w,c
  8610  015F58  1001               	iorwf	btemp^0,w,c
  8611  015F5A  B4D8               	btfsc	status,2,c
  8612  015F5C  D154               	goto	u10110
  8613                           
  8614                           ;stkvar	_c @ sp[(-4)+-4]
  8615                           ;stkvar	_s @ sp[(-4)+0]
  8616  015F5E  0EFC               	movlw	-4
  8617  015F60  006F FF8F FFD9     	movff	plusw1,fsr2l
  8618  015F66  0EFD               	movlw	-3
  8619  015F68  006F FF8F FFDA     	movff	plusw1,fsr2h
  8620  015F6E  0EF8               	movlw	-8
  8621  015F70  006F FF8F FFDF     	movff	plusw1,indf2
  8622                           
  8623                           ;stkvar	_c @ sp[(-4)+-4]
  8624                           ;stkvar	_n @ sp[(-4)+-6]
  8625                           ;stkvar	_s @ sp[(-4)+0]
  8626  015F76  0EFC               	movlw	-4
  8627  015F78  006F FF8C  F00B    	movff	plusw1,btemp+10
  8628  015F7E  0EFD               	movlw	-3
  8629  015F80  006F FF8C  F00C    	movff	plusw1,btemp+11
  8630  015F86  0EF6               	movlw	-10
  8631  015F88  50E3               	movf	plusw1,w,c
  8632  015F8A  260B               	addwf	(btemp+10)^0,f,c
  8633  015F8C  0EF7               	movlw	-9
  8634  015F8E  50E3               	movf	plusw1,w,c
  8635  015F90  220C               	addwfc	(btemp+11)^0,f,c
  8636  015F92  0EFF               	movlw	255
  8637  015F94  240B               	addwf	(btemp+10)^0,w,c
  8638  015F96  6ED9               	movwf	fsr2l,c
  8639  015F98  0EFF               	movlw	255
  8640  015F9A  200C               	addwfc	(btemp+11)^0,w,c
  8641  015F9C  6EDA               	movwf	fsr2h,c
  8642  015F9E  0EF8               	movlw	-8
  8643  015FA0  006F FF8F FFDF     	movff	plusw1,indf2
  8644                           
  8645                           ;stkvar	_n @ sp[(-4)+-6]
  8646  015FA6  0EF7               	movlw	-9
  8647  015FA8  50E3               	movf	plusw1,w,c
  8648  015FAA  E108               	bnz	l11008
  8649  015FAC  0EF6               	movlw	-10
  8650  015FAE  006F FF8C  F001    	movff	plusw1,btemp
  8651  015FB4  0E03               	movlw	3
  8652  015FB6  5E01               	subwf	btemp^0,f,c
  8653  015FB8  A0D8               	btfss	status,0,c
  8654  015FBA  D125               	goto	u10110
  8655  015FBC                     l11008:
  8656                           
  8657                           ;stkvar	_c @ sp[(-4)+-4]
  8658                           ;stkvar	_s @ sp[(-4)+0]
  8659  015FBC  0EFC               	movlw	-4
  8660  015FBE  006F FF8C  F00B    	movff	plusw1,btemp+10
  8661  015FC4  0EFD               	movlw	-3
  8662  015FC6  006F FF8C  F00C    	movff	plusw1,btemp+11
  8663  015FCC  0E01               	movlw	1
  8664  015FCE  240B               	addwf	(btemp+10)^0,w,c
  8665  015FD0  6ED9               	movwf	fsr2l,c
  8666  015FD2  0E00               	movlw	0
  8667  015FD4  200C               	addwfc	(btemp+11)^0,w,c
  8668  015FD6  6EDA               	movwf	fsr2h,c
  8669  015FD8  0EF8               	movlw	-8
  8670  015FDA  006F FF8F FFDF     	movff	plusw1,indf2
  8671                           
  8672                           ;stkvar	_c @ sp[(-4)+-4]
  8673                           ;stkvar	_s @ sp[(-4)+0]
  8674  015FE0  0EFC               	movlw	-4
  8675  015FE2  006F FF8C  F00B    	movff	plusw1,btemp+10
  8676  015FE8  0EFD               	movlw	-3
  8677  015FEA  006F FF8C  F00C    	movff	plusw1,btemp+11
  8678  015FF0  0E02               	movlw	2
  8679  015FF2  240B               	addwf	(btemp+10)^0,w,c
  8680  015FF4  6ED9               	movwf	fsr2l,c
  8681  015FF6  0E00               	movlw	0
  8682  015FF8  200C               	addwfc	(btemp+11)^0,w,c
  8683  015FFA  6EDA               	movwf	fsr2h,c
  8684  015FFC  0EF8               	movlw	-8
  8685  015FFE  006F FF8F FFDF     	movff	plusw1,indf2
  8686                           
  8687                           ;stkvar	_c @ sp[(-4)+-4]
  8688                           ;stkvar	_n @ sp[(-4)+-6]
  8689                           ;stkvar	_s @ sp[(-4)+0]
  8690  016004  0EFC               	movlw	-4
  8691  016006  006F FF8C  F00B    	movff	plusw1,btemp+10
  8692  01600C  0EFD               	movlw	-3
  8693  01600E  006F FF8C  F00C    	movff	plusw1,btemp+11
  8694  016014  0EF6               	movlw	-10
  8695  016016  50E3               	movf	plusw1,w,c
  8696  016018  260B               	addwf	(btemp+10)^0,f,c
  8697  01601A  0EF7               	movlw	-9
  8698  01601C  50E3               	movf	plusw1,w,c
  8699  01601E  220C               	addwfc	(btemp+11)^0,f,c
  8700  016020  0EFE               	movlw	254
  8701  016022  240B               	addwf	(btemp+10)^0,w,c
  8702  016024  6ED9               	movwf	fsr2l,c
  8703  016026  0EFF               	movlw	255
  8704  016028  200C               	addwfc	(btemp+11)^0,w,c
  8705  01602A  6EDA               	movwf	fsr2h,c
  8706  01602C  0EF8               	movlw	-8
  8707  01602E  006F FF8F FFDF     	movff	plusw1,indf2
  8708                           
  8709                           ;stkvar	_c @ sp[(-4)+-4]
  8710                           ;stkvar	_n @ sp[(-4)+-6]
  8711                           ;stkvar	_s @ sp[(-4)+0]
  8712  016034  0EFC               	movlw	-4
  8713  016036  006F FF8C  F00B    	movff	plusw1,btemp+10
  8714  01603C  0EFD               	movlw	-3
  8715  01603E  006F FF8C  F00C    	movff	plusw1,btemp+11
  8716  016044  0EF6               	movlw	-10
  8717  016046  50E3               	movf	plusw1,w,c
  8718  016048  260B               	addwf	(btemp+10)^0,f,c
  8719  01604A  0EF7               	movlw	-9
  8720  01604C  50E3               	movf	plusw1,w,c
  8721  01604E  220C               	addwfc	(btemp+11)^0,f,c
  8722  016050  0EFD               	movlw	253
  8723  016052  240B               	addwf	(btemp+10)^0,w,c
  8724  016054  6ED9               	movwf	fsr2l,c
  8725  016056  0EFF               	movlw	255
  8726  016058  200C               	addwfc	(btemp+11)^0,w,c
  8727  01605A  6EDA               	movwf	fsr2h,c
  8728  01605C  0EF8               	movlw	-8
  8729  01605E  006F FF8F FFDF     	movff	plusw1,indf2
  8730                           
  8731                           ;stkvar	_n @ sp[(-4)+-6]
  8732  016064  0EF7               	movlw	-9
  8733  016066  50E3               	movf	plusw1,w,c
  8734  016068  E108               	bnz	l11014
  8735  01606A  0EF6               	movlw	-10
  8736  01606C  006F FF8C  F001    	movff	plusw1,btemp
  8737  016072  0E07               	movlw	7
  8738  016074  5E01               	subwf	btemp^0,f,c
  8739  016076  A0D8               	btfss	status,0,c
  8740  016078  D0C6               	goto	u10110
  8741  01607A                     l11014:
  8742                           
  8743                           ;stkvar	_c @ sp[(-4)+-4]
  8744                           ;stkvar	_s @ sp[(-4)+0]
  8745  01607A  0EFC               	movlw	-4
  8746  01607C  006F FF8C  F00B    	movff	plusw1,btemp+10
  8747  016082  0EFD               	movlw	-3
  8748  016084  006F FF8C  F00C    	movff	plusw1,btemp+11
  8749  01608A  0E03               	movlw	3
  8750  01608C  240B               	addwf	(btemp+10)^0,w,c
  8751  01608E  6ED9               	movwf	fsr2l,c
  8752  016090  0E00               	movlw	0
  8753  016092  200C               	addwfc	(btemp+11)^0,w,c
  8754  016094  6EDA               	movwf	fsr2h,c
  8755  016096  0EF8               	movlw	-8
  8756  016098  006F FF8F FFDF     	movff	plusw1,indf2
  8757                           
  8758                           ;stkvar	_c @ sp[(-4)+-4]
  8759                           ;stkvar	_n @ sp[(-4)+-6]
  8760                           ;stkvar	_s @ sp[(-4)+0]
  8761  01609E  0EFC               	movlw	-4
  8762  0160A0  006F FF8C  F00B    	movff	plusw1,btemp+10
  8763  0160A6  0EFD               	movlw	-3
  8764  0160A8  006F FF8C  F00C    	movff	plusw1,btemp+11
  8765  0160AE  0EF6               	movlw	-10
  8766  0160B0  50E3               	movf	plusw1,w,c
  8767  0160B2  260B               	addwf	(btemp+10)^0,f,c
  8768  0160B4  0EF7               	movlw	-9
  8769  0160B6  50E3               	movf	plusw1,w,c
  8770  0160B8  220C               	addwfc	(btemp+11)^0,f,c
  8771  0160BA  0EFC               	movlw	252
  8772  0160BC  240B               	addwf	(btemp+10)^0,w,c
  8773  0160BE  6ED9               	movwf	fsr2l,c
  8774  0160C0  0EFF               	movlw	255
  8775  0160C2  200C               	addwfc	(btemp+11)^0,w,c
  8776  0160C4  6EDA               	movwf	fsr2h,c
  8777  0160C6  0EF8               	movlw	-8
  8778  0160C8  006F FF8F FFDF     	movff	plusw1,indf2
  8779                           
  8780                           ;stkvar	_n @ sp[(-4)+-6]
  8781  0160CE  0EF7               	movlw	-9
  8782  0160D0  50E3               	movf	plusw1,w,c
  8783  0160D2  E108               	bnz	l11020
  8784  0160D4  0EF6               	movlw	-10
  8785  0160D6  006F FF8C  F001    	movff	plusw1,btemp
  8786  0160DC  0E09               	movlw	9
  8787  0160DE  5E01               	subwf	btemp^0,f,c
  8788  0160E0  A0D8               	btfss	status,0,c
  8789  0160E2  D091               	goto	u10110
  8790  0160E4                     l11020:
  8791                           
  8792                           ;stkvar	_s @ sp[(-4)+0]
  8793  0160E4  0EFC               	movlw	-4
  8794  0160E6  006F FF8C  F00B    	movff	plusw1,btemp+10
  8795  0160EC  1E0B               	comf	(btemp+10)^0,f,c
  8796  0160EE  0EFD               	movlw	-3
  8797  0160F0  006F FF8C  F00C    	movff	plusw1,btemp+11
  8798  0160F6  1E0C               	comf	(btemp+11)^0,f,c
  8799  0160F8  2A0B               	incf	(btemp+10)^0,f,c
  8800  0160FA  B4D8               	btfsc	status,2,c
  8801  0160FC  2A0C               	incf	(btemp+11)^0,f,c
  8802  0160FE  0E03               	movlw	3
  8803  016100  160B               	andwf	(btemp+10)^0,f,c
  8804  016102  0E00               	movlw	0
  8805  016104  160C               	andwf	(btemp+11)^0,f,c
  8806                           
  8807                           ;stkvar	_k @ sp[(-4)+2]
  8808  016106  0EFE               	movlw	-2
  8809  016108  0060  F02F  FFE3   	movff	btemp+10,plusw1
  8810  01610E  0EFF               	movlw	-1
  8811  016110  0060  F033  FFE3   	movff	btemp+11,plusw1
  8812                           
  8813                           ;stkvar	_k @ sp[(-4)+2]
  8814                           ;stkvar	_s @ sp[(-4)+0]
  8815  016116  0EFC               	movlw	-4
  8816  016118  50E3               	movf	plusw1,w,c
  8817  01611A  6E01               	movwf	btemp^0,c
  8818  01611C  0EFE               	movlw	-2
  8819  01611E  50E3               	movf	plusw1,w,c
  8820  016120  2601               	addwf	btemp^0,f,c
  8821  016122  0EFC               	movlw	-4
  8822  016124  0060  F007  FFE3   	movff	btemp,plusw1
  8823  01612A  0EFD               	movlw	-3
  8824  01612C  50E3               	movf	plusw1,w,c
  8825  01612E  6E01               	movwf	btemp^0,c
  8826  016130  0EFF               	movlw	-1
  8827  016132  50E3               	movf	plusw1,w,c
  8828  016134  2201               	addwfc	btemp^0,f,c
  8829  016136  0EFD               	movlw	-3
  8830  016138  0060  F007  FFE3   	movff	btemp,plusw1
  8831                           
  8832                           ;stkvar	_k @ sp[(-4)+2]
  8833                           ;stkvar	_n @ sp[(-4)+-6]
  8834  01613E  0EF6               	movlw	-10
  8835  016140  50E3               	movf	plusw1,w,c
  8836  016142  6E01               	movwf	btemp^0,c
  8837  016144  0EFE               	movlw	-2
  8838  016146  50E3               	movf	plusw1,w,c
  8839  016148  5E01               	subwf	btemp^0,f,c
  8840  01614A  0EF6               	movlw	-10
  8841  01614C  0060  F007  FFE3   	movff	btemp,plusw1
  8842  016152  0EF7               	movlw	-9
  8843  016154  50E3               	movf	plusw1,w,c
  8844  016156  6E01               	movwf	btemp^0,c
  8845  016158  0EFF               	movlw	-1
  8846  01615A  50E3               	movf	plusw1,w,c
  8847  01615C  5A01               	subwfb	btemp^0,f,c
  8848  01615E  0EF7               	movlw	-9
  8849  016160  0060  F007  FFE3   	movff	btemp,plusw1
  8850  016166  0EFC               	movlw	252
  8851  016168  6E0B               	movwf	(btemp+10)^0,c
  8852  01616A  0EFF               	movlw	255
  8853  01616C  6E0C               	movwf	(btemp+11)^0,c
  8854                           
  8855                           ;stkvar	_n @ sp[(-4)+-6]
  8856  01616E  0EF6               	movlw	-10
  8857  016170  006F FF8C  F001    	movff	plusw1,btemp
  8858  016176  500B               	movf	(btemp+10)^0,w,c
  8859  016178  1601               	andwf	btemp^0,f,c
  8860  01617A  0EF6               	movlw	-10
  8861  01617C  0060  F007  FFE3   	movff	btemp,plusw1
  8862  016182  0EF7               	movlw	-9
  8863  016184  006F FF8C  F001    	movff	plusw1,btemp
  8864  01618A  500C               	movf	(btemp+11)^0,w,c
  8865  01618C  1601               	andwf	btemp^0,f,c
  8866  01618E  0EF7               	movlw	-9
  8867  016190  D02E               	goto	L4
  8868  016192                     l11028:
  8869                           
  8870                           ;stkvar	_c @ sp[(-4)+-4]
  8871                           ;stkvar	_s @ sp[(-4)+0]
  8872  016192  0EFC               	movlw	-4
  8873  016194  006F FF8F FFD9     	movff	plusw1,fsr2l
  8874  01619A  0EFD               	movlw	-3
  8875  01619C  006F FF8F FFDA     	movff	plusw1,fsr2h
  8876  0161A2  0EF8               	movlw	-8
  8877  0161A4  006F FF8F FFDF     	movff	plusw1,indf2
  8878                           
  8879                           ;stkvar	_n @ sp[(-4)+-6]
  8880  0161AA  0EF6               	movlw	-10
  8881  0161AC  006F FF8C  F001    	movff	plusw1,btemp
  8882  0161B2  0E01               	movlw	1
  8883  0161B4  5E01               	subwf	btemp^0,f,c
  8884  0161B6  0EF6               	movlw	-10
  8885  0161B8  0060  F007  FFE3   	movff	btemp,plusw1
  8886  0161BE  0EF7               	movlw	-9
  8887  0161C0  006F FF8C  F001    	movff	plusw1,btemp
  8888  0161C6  0E00               	movlw	0
  8889  0161C8  5A01               	subwfb	btemp^0,f,c
  8890  0161CA  0EF7               	movlw	-9
  8891  0161CC  0060  F007  FFE3   	movff	btemp,plusw1
  8892                           
  8893                           ;stkvar	_s @ sp[(-4)+0]
  8894  0161D2  0EFC               	movlw	-4
  8895  0161D4  50E3               	movf	plusw1,w,c
  8896  0161D6  0F01               	addlw	1
  8897  0161D8  6E01               	movwf	btemp^0,c
  8898  0161DA  0EFC               	movlw	-4
  8899  0161DC  0060  F007  FFE3   	movff	btemp,plusw1
  8900  0161E2  6A01               	clrf	btemp^0,c
  8901  0161E4  0EFD               	movlw	-3
  8902  0161E6  50E3               	movf	plusw1,w,c
  8903  0161E8  2001               	addwfc	btemp^0,w,c
  8904  0161EA  6E01               	movwf	btemp^0,c
  8905  0161EC  0EFD               	movlw	-3
  8906  0161EE                     L4:
  8907  0161EE  0060  F007  FFE3   	movff	btemp,plusw1
  8908                           
  8909                           ;stkvar	_n @ sp[(-4)+-6]
  8910  0161F4  0EF6               	movlw	-10
  8911  0161F6  006F FF8C  F001    	movff	plusw1,btemp
  8912  0161FC  0EF7               	movlw	-9
  8913  0161FE  50E3               	movf	plusw1,w,c
  8914  016200  1001               	iorwf	btemp^0,w,c
  8915  016202  A4D8               	btfss	status,2,c
  8916  016204  D7C6               	goto	l11028
  8917  016206                     u10110:
  8918                           
  8919                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  8920  016206  0EF6               	movlw	246
  8921  016208  26E1               	addwf	fsr1l,f,c
  8922  01620A  0EFF               	movlw	255
  8923  01620C  22E2               	addwfc	fsr1h,f,c
  8924  01620E  0012               	return		;funcret
  8925  016210                     __end_of_memset:
  8926                           	opt callstack 0
  8927                           
  8928 ;; *************** function _printf *****************
  8929 ;; Defined at:
  8930 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
  8931 ;; Parameters:    Size  Location     Type
  8932 ;;  fmt             2  [STACK] PTR const unsigned char 
  8933 ;;		 -> STR_28(3), STR_27(3), STR_26(3), 
  8934 ;; Auto vars:     Size  Location     Type
  8935 ;;  ap              2  [STACK] PTR void [1]
  8936 ;;		 -> ?_printf(2), ?_sprintf(2), 
  8937 ;;  ret             2    0        int 
  8938 ;; Return value:  Size  Location     Type
  8939 ;;                  2  [STACK] int 
  8940 ;; Registers used:
  8941 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8942 ;; Tracked objects:
  8943 ;;		On entry : 3F/3B
  8944 ;;		On exit  : 3F/0
  8945 ;;		Unchanged: 0/0
  8946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8951 ;;Total ram usage:        0 bytes
  8952 ;; Hardware stack levels used:    1
  8953 ;; Hardware stack levels required when called:   23
  8954 ;; This function calls:
  8955 ;;		_vfprintf
  8956 ;; This function is called by:
  8957 ;;		_eaDogM_WriteString
  8958 ;;		_send_lcd_cmd_dma
  8959 ;; This function uses a reentrant model
  8960 ;;
  8961                           
  8962                           	psect	text39
  8963  019BB8                     __ptext39:
  8964                           	opt callstack 0
  8965  019BB8                     _printf:
  8966                           	opt callstack 0
  8967                           
  8968                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8969  019BB8  52E6               	movf	postinc1,f,c
  8970  019BBA  52E6               	movf	postinc1,f,c
  8971                           
  8972                           ;stkvar	?_printf @ sp[(-2)+-3]
  8973                           
  8974                           ;incstack = 0
  8975  019BBC  0EFB               	movlw	251
  8976  019BBE  24E1               	addwf	fsr1l,w,c
  8977  019BC0  6E0B               	movwf	(btemp+10)^0,c
  8978  019BC2  0EFF               	movlw	255
  8979  019BC4  20E2               	addwfc	fsr1h,w,c
  8980  019BC6  6E0C               	movwf	(btemp+11)^0,c
  8981                           
  8982                           ;stkvar	_ap @ sp[(-2)+0]
  8983  019BC8  0EFF               	movlw	-1
  8984  019BCA  0060  F033  FFE3   	movff	btemp+11,plusw1
  8985  019BD0  0EFE               	movlw	-2
  8986  019BD2  0060  F02F  FFE3   	movff	btemp+10,plusw1
  8987                           
  8988                           ;stkvar	_ap @ sp[(-2)+0]
  8989  019BD8  0EFE               	movlw	254
  8990  019BDA  24E1               	addwf	fsr1l,w,c
  8991  019BDC  6E01               	movwf	btemp^0,c
  8992  019BDE  0EFF               	movlw	255
  8993  019BE0  20E2               	addwfc	fsr1h,w,c
  8994  019BE2  6E02               	movwf	(btemp+1)^0,c
  8995  019BE4  0060  F007  FFE6   	movff	btemp,postinc1
  8996  019BEA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8997                           
  8998                           ;stkvar	_fmt @ sp[(-4)+-3]
  8999  019BF0  0EF9               	movlw	-7
  9000  019BF2  006F FF8F FFE6     	movff	plusw1,postinc1
  9001  019BF8  006F FF8F FFE6     	movff	plusw1,postinc1
  9002  019BFE  0E00               	movlw	0
  9003  019C00  6EE6               	movwf	postinc1,c
  9004  019C02  0E00               	movlw	0
  9005  019C04  6EE6               	movwf	postinc1,c
  9006  019C06  EC12  F0C9         	call	_vfprintf	;wreg free
  9007                           
  9008                           ; BSR set to: 0
  9009                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
  9010  019C0A  52E5               	movf	postdec1,f,c
  9011  019C0C  52E5               	movf	postdec1,f,c
  9012  019C0E  52E5               	movf	postdec1,f,c
  9013  019C10  50E7               	movf	indf1,w,c
  9014  019C12  5EE1               	subwf	fsr1l,f,c
  9015  019C14  0E00               	movlw	0
  9016  019C16  5AE2               	subwfb	fsr1h,f,c
  9017  019C18  0012               	return		;funcret
  9018  019C1A                     __end_of_printf:
  9019                           	opt callstack 0
  9020                           
  9021 ;; *************** function _vfprintf *****************
  9022 ;; Defined at:
  9023 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  9024 ;; Parameters:    Size  Location     Type
  9025 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9026 ;;		 -> f(6), NULL(0), 
  9027 ;;  fmt             2  [STACK] PTR const unsigned char 
  9028 ;;		 -> STR_48(79), STR_46(3), STR_45(3), STR_44(19), 
  9029 ;;		 -> STR_43(19), STR_42(19), STR_41(19), STR_40(19), 
  9030 ;;		 -> STR_39(19), STR_38(24), STR_37(15), STR_36(15), 
  9031 ;;		 -> STR_35(15), STR_34(10), STR_33(10), STR_32(19), 
  9032 ;;		 -> STR_31(19), STR_28(3), STR_27(3), STR_26(3), 
  9033 ;;		 -> STR_25(17), STR_24(16), STR_23(16), STR_22(19), 
  9034 ;;		 -> STR_21(20), STR_20(19), STR_19(19), STR_18(19), 
  9035 ;;		 -> STR_17(19), STR_16(19), STR_15(19), STR_14(19), 
  9036 ;;		 -> STR_13(17), STR_12(16), STR_11(16), STR_10(22), 
  9037 ;;		 -> STR_9(22), STR_8(22), STR_7(17), STR_6(17), 
  9038 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
  9039 ;;  ap              2  [STACK] PTR PTR void 
  9040 ;;		 -> ap(2), ap(2), 
  9041 ;; Auto vars:     Size  Location     Type
  9042 ;;  cfmt            2  [STACK] PTR unsigned char 
  9043 ;;		 -> STR_48(79), STR_46(3), STR_45(3), STR_44(19), 
  9044 ;;		 -> STR_43(19), STR_42(19), STR_41(19), STR_40(19), 
  9045 ;;		 -> STR_39(19), STR_38(24), STR_37(15), STR_36(15), 
  9046 ;;		 -> STR_35(15), STR_34(10), STR_33(10), STR_32(19), 
  9047 ;;		 -> STR_31(19), STR_28(3), STR_27(3), STR_26(3), 
  9048 ;;		 -> STR_25(17), STR_24(16), STR_23(16), STR_22(19), 
  9049 ;;		 -> STR_21(20), STR_20(19), STR_19(19), STR_18(19), 
  9050 ;;		 -> STR_17(19), STR_16(19), STR_15(19), STR_14(19), 
  9051 ;;		 -> STR_13(17), STR_12(16), STR_11(16), STR_10(22), 
  9052 ;;		 -> STR_9(22), STR_8(22), STR_7(17), STR_6(17), 
  9053 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
  9054 ;; Return value:  Size  Location     Type
  9055 ;;                  2  [STACK] int 
  9056 ;; Registers used:
  9057 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9058 ;; Tracked objects:
  9059 ;;		On entry : 0/0
  9060 ;;		On exit  : 3F/0
  9061 ;;		Unchanged: 0/0
  9062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9067 ;;Total ram usage:        0 bytes
  9068 ;; Hardware stack levels used:    1
  9069 ;; Hardware stack levels required when called:   22
  9070 ;; This function calls:
  9071 ;;		_vfpfcnvrt
  9072 ;; This function is called by:
  9073 ;;		_sprintf
  9074 ;;		_printf
  9075 ;; This function uses a reentrant model
  9076 ;;
  9077                           
  9078                           	psect	text40
  9079  019224                     __ptext40:
  9080                           	opt callstack 0
  9081  019224                     _vfprintf:
  9082                           	opt callstack 0
  9083                           
  9084                           ; BSR set to: 0
  9085                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9086  019224  52E6               	movf	postinc1,f,c
  9087  019226  52E6               	movf	postinc1,f,c
  9088                           
  9089                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  9090                           ;stkvar	_fmt @ sp[(-2)+-4]
  9091                           
  9092                           ;incstack = 0
  9093 ;; hardware stack exceeded
  9094  019228  0EFA               	movlw	-6
  9095  01922A  006F FF8C  F00B    	movff	plusw1,btemp+10
  9096  019230  0EFB               	movlw	-5
  9097  019232  006F FF8C  F00C    	movff	plusw1,btemp+11
  9098                           
  9099                           ;stkvar	_cfmt @ sp[(-2)+0]
  9100  019238  0EFF               	movlw	-1
  9101  01923A  0060  F033  FFE3   	movff	btemp+11,plusw1
  9102  019240  0EFE               	movlw	-2
  9103  019242  0060  F02F  FFE3   	movff	btemp+10,plusw1
  9104                           
  9105                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  9106  019248  0100               	movlb	0	; () banked
  9107  01924A  6BBA               	clrf	_nout& (0+255),b
  9108  01924C  6BBB               	clrf	(_nout+1)& (0+255),b
  9109                           
  9110                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  9111  01924E  D021               	goto	l11852
  9112  019250                     l11850:
  9113                           
  9114                           ; BSR set to: 0
  9115                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  9116                           ;stkvar	_ap @ sp[(-2)+-6]
  9117  019250  0EF8               	movlw	-8
  9118  019252  006F FF8F FFE6     	movff	plusw1,postinc1
  9119  019258  006F FF8F FFE6     	movff	plusw1,postinc1
  9120                           
  9121                           ;stkvar	_cfmt @ sp[(-4)+0]
  9122  01925E  0EFC               	movlw	252
  9123  019260  24E1               	addwf	fsr1l,w,c
  9124  019262  6E01               	movwf	btemp^0,c
  9125  019264  0EFF               	movlw	255
  9126  019266  20E2               	addwfc	fsr1h,w,c
  9127  019268  6E02               	movwf	(btemp+1)^0,c
  9128  01926A  0060  F007  FFE6   	movff	btemp,postinc1
  9129  019270  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9130                           
  9131                           ;stkvar	_fp @ sp[(-6)+-2]
  9132  019276  0EF8               	movlw	-8
  9133  019278  006F FF8F FFE6     	movff	plusw1,postinc1
  9134  01927E  006F FF8F FFE6     	movff	plusw1,postinc1
  9135  019284  EC22  F089         	call	_vfpfcnvrt	;wreg free
  9136  019288  5001               	movf	btemp^0,w,c
  9137  01928A  0100               	movlb	0	; () banked
  9138  01928C  27BA               	addwf	_nout& (0+255),f,b
  9139  01928E  5002               	movf	(btemp+1)^0,w,c
  9140  019290  23BB               	addwfc	(_nout+1)& (0+255),f,b
  9141  019292                     l11852:
  9142                           
  9143                           ; BSR set to: 0
  9144                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  9145                           ;stkvar	_cfmt @ sp[(-2)+0]
  9146  019292  50E1               	movf	fsr1l,w,c
  9147  019294  0FFE               	addlw	-2
  9148  019296  6ED9               	movwf	fsr2l,c
  9149  019298  50E2               	movf	fsr1h,w,c
  9150  01929A  6EDA               	movwf	fsr2h,c
  9151  01929C  0EFF               	movlw	255
  9152  01929E  22DA               	addwfc	fsr2h,f,c
  9153  0192A0  006F FF7B FFF6     	movff	postinc2,tblptrl
  9154  0192A6  006F FF77 FFF7     	movff	postdec2,tblptrh
  9155  0192AC                     	if	0	;tblptru may be non-zero
  9156  0192AC                     	endif
  9157  0192AC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9158  0192AC  0E00               	movlw	low (__mediumconst shr (0+16))
  9159  0192AE  6EF8               	movwf	tblptru,c
  9160  0192B0                     	endif
  9161  0192B0  0008               	tblrd		*
  9162  0192B2  50F5               	movf	tablat,w,c
  9163  0192B4  0900               	iorlw	0
  9164  0192B6  A4D8               	btfss	status,2,c
  9165  0192B8  D7CB               	goto	l11850
  9166                           
  9167                           ; BSR set to: 0
  9168                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  9169  0192BA  0060  F2E8  F001   	movff	_nout,btemp
  9170  0192C0  0060  F2EC  F002   	movff	_nout+1,btemp+1
  9171                           
  9172                           ; BSR set to: 0
  9173                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
  9174  0192C6  0EF8               	movlw	248
  9175  0192C8  26E1               	addwf	fsr1l,f,c
  9176  0192CA  0EFF               	movlw	255
  9177  0192CC  22E2               	addwfc	fsr1h,f,c
  9178  0192CE  0012               	return		;funcret
  9179  0192D0                     __end_of_vfprintf:
  9180                           	opt callstack 0
  9181                           
  9182 ;; *************** function _vfpfcnvrt *****************
  9183 ;; Defined at:
  9184 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  9185 ;; Parameters:    Size  Location     Type
  9186 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9187 ;;		 -> f(6), NULL(0), 
  9188 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  9189 ;;		 -> cfmt(2), 
  9190 ;;  ap              2  [STACK] PTR PTR void 
  9191 ;;		 -> ap(2), ap(2), 
  9192 ;; Auto vars:     Size  Location     Type
  9193 ;;  llu             8  [STACK] unsigned long long 
  9194 ;;  ll              8  [STACK] long long 
  9195 ;;  f               4  [STACK] long long 
  9196 ;;  ct              3  [STACK] unsigned char [3]
  9197 ;;  vp              3    0        PTR void 
  9198 ;;  cp              2  [STACK] PTR unsigned char 
  9199 ;;		 -> ?_printf(2), ?_sprintf(2), STR_30(9), STR_29(12), 
  9200 ;;		 -> D.lcd(288), D(290), T(144), STR_3(6), 
  9201 ;;		 -> V(188), 
  9202 ;;  i               2    0        int 
  9203 ;;  done            2    0        int 
  9204 ;;  c               1  [STACK] unsigned char 
  9205 ;; Return value:  Size  Location     Type
  9206 ;;                  2  [STACK] int 
  9207 ;; Registers used:
  9208 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9209 ;; Tracked objects:
  9210 ;;		On entry : 0/0
  9211 ;;		On exit  : 0/0
  9212 ;;		Unchanged: 0/0
  9213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9218 ;;Total ram usage:        0 bytes
  9219 ;; Hardware stack levels used:    1
  9220 ;; Hardware stack levels required when called:   21
  9221 ;; This function calls:
  9222 ;;		_atoi
  9223 ;;		_ctoa
  9224 ;;		_dtoa
  9225 ;;		_efgtoa
  9226 ;;		_fputc
  9227 ;;		_isdigit
  9228 ;;		_isupper
  9229 ;;		_stoa
  9230 ;;		_strncmp
  9231 ;;		_tolower
  9232 ;;		_utoa
  9233 ;;		_xtoa
  9234 ;; This function is called by:
  9235 ;;		_vfprintf
  9236 ;; This function uses a reentrant model
  9237 ;;
  9238                           
  9239                           	psect	text41
  9240  011244                     __ptext41:
  9241                           	opt callstack 0
  9242  011244                     _vfpfcnvrt:
  9243                           	opt callstack 0
  9244                           
  9245                           ; BSR set to: 0
  9246                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  9247  011244  0E20               	movlw	32
  9248  011246  26E1               	addwf	fsr1l,f,c
  9249  011248  0E00               	movlw	0
  9250  01124A  22E2               	addwfc	fsr1h,f,c
  9251                           
  9252                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  9253                           ;stkvar	_fmt @ sp[(-32)+-4]
  9254                           
  9255                           ;incstack = 0
  9256 ;; hardware stack exceeded
  9257  01124C  0EDC               	movlw	-36
  9258  01124E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9259  011254  0EDD               	movlw	-35
  9260  011256  006F FF8F FFDA     	movff	plusw1,fsr2h
  9261  01125C  006F FF7B FFF6     	movff	postinc2,tblptrl
  9262  011262  006F FF77 FFF7     	movff	postdec2,tblptrh
  9263  011268                     	if	0	;tblptru may be non-zero
  9264  011268                     	endif
  9265  011268                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9266  011268  0E00               	movlw	low (__mediumconst shr (0+16))
  9267  01126A  6EF8               	movwf	tblptru,c
  9268  01126C                     	endif
  9269  01126C  0008               	tblrd		*
  9270  01126E  50F5               	movf	tablat,w,c
  9271  011270  0A25               	xorlw	37
  9272  011272  A4D8               	btfss	status,2,c
  9273  011274  EFC9  F090         	goto	l11796
  9274                           
  9275                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  9276                           ;stkvar	_fmt @ sp[(-32)+-4]
  9277  011278  0EDC               	movlw	-36
  9278  01127A  006F FF8F FFD9     	movff	plusw1,fsr2l
  9279  011280  0EDD               	movlw	-35
  9280  011282  006F FF8F FFDA     	movff	plusw1,fsr2h
  9281  011288  2ADE               	incf	postinc2,f,c
  9282  01128A  0E00               	movlw	0
  9283  01128C  22DD               	addwfc	postdec2,f,c
  9284                           
  9285                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  9286  01128E  6A21               	clrf	_width^0,c
  9287  011290  6A22               	clrf	(_width+1)^0,c
  9288  011292  6A25               	clrf	_flags^0,c
  9289  011294  6A26               	clrf	(_flags+1)^0,c
  9290                           
  9291                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  9292  011296  6823               	setf	_prec^0,c
  9293  011298  6824               	setf	(_prec+1)^0,c
  9294                           
  9295                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  9296                           ;stkvar	_fmt @ sp[(-32)+-4]
  9297  01129A  0EDC               	movlw	-36
  9298  01129C  006F FF8F FFD9     	movff	plusw1,fsr2l
  9299  0112A2  0EDD               	movlw	-35
  9300  0112A4  006F FF8F FFDA     	movff	plusw1,fsr2h
  9301  0112AA  006F FF7B FFF6     	movff	postinc2,tblptrl
  9302  0112B0  006F FF77 FFF7     	movff	postdec2,tblptrh
  9303  0112B6                     	if	0	;tblptru may be non-zero
  9304  0112B6                     	endif
  9305  0112B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9306  0112B6  0E00               	movlw	low (__mediumconst shr (0+16))
  9307  0112B8  6EF8               	movwf	tblptru,c
  9308  0112BA                     	endif
  9309  0112BA  0008               	tblrd		*
  9310  0112BC  50F5               	movf	tablat,w,c
  9311  0112BE  0A2A               	xorlw	42
  9312  0112C0  A4D8               	btfss	status,2,c
  9313  0112C2  D031               	goto	l11614
  9314                           
  9315                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  9316                           ;stkvar	_fmt @ sp[(-32)+-4]
  9317  0112C4  0EDC               	movlw	-36
  9318  0112C6  006F FF8F FFD9     	movff	plusw1,fsr2l
  9319  0112CC  0EDD               	movlw	-35
  9320  0112CE  006F FF8F FFDA     	movff	plusw1,fsr2h
  9321  0112D4  2ADE               	incf	postinc2,f,c
  9322  0112D6  0E00               	movlw	0
  9323  0112D8  22DD               	addwfc	postdec2,f,c
  9324                           
  9325                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  9326                           ;stkvar	_ap @ sp[(-32)+-6]
  9327  0112DA  0EDA               	movlw	-38
  9328  0112DC  006F FF8F FFD9     	movff	plusw1,fsr2l
  9329  0112E2  0EDB               	movlw	-37
  9330  0112E4  006F FF8F FFDA     	movff	plusw1,fsr2h
  9331  0112EA  0E02               	movlw	2
  9332  0112EC  5EDE               	subwf	postinc2,f,c
  9333  0112EE  0E00               	movlw	0
  9334  0112F0  5ADD               	subwfb	postdec2,f,c
  9335  0112F2  006F FF78  F00B    	movff	postinc2,btemp+10
  9336  0112F8  006F FF74  F00C    	movff	postdec2,btemp+11
  9337  0112FE  0060  F02F  FFD9   	movff	btemp+10,fsr2l
  9338  011304  0060  F033  FFDA   	movff	btemp+11,fsr2h
  9339  01130A  006F FF78  F021    	movff	postinc2,_width
  9340  011310  006F FF74  F022    	movff	postdec2,_width+1
  9341                           
  9342                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  9343  011316  AE22               	btfss	(_width+1)^0,7,c
  9344  011318  D066               	goto	u11240
  9345                           
  9346                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
  9347  01131A  8025               	bsf	_flags^0,0,c
  9348                           
  9349                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
  9350  01131C  6C21               	negf	_width^0,c
  9351  01131E  1E22               	comf	(_width+1)^0,f,c
  9352  011320  B0D8               	btfsc	status,0,c
  9353  011322  2A22               	incf	(_width+1)^0,f,c
  9354  011324  D060               	goto	u11240
  9355  011326                     l11614:
  9356                           
  9357                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
  9358                           ;stkvar	_fmt @ sp[(-32)+-4]
  9359  011326  0EDC               	movlw	-36
  9360  011328  006F FF8F FFD9     	movff	plusw1,fsr2l
  9361  01132E  0EDD               	movlw	-35
  9362  011330  006F FF8F FFDA     	movff	plusw1,fsr2h
  9363  011336  006F FF78  F00B    	movff	postinc2,btemp+10
  9364  01133C  006F FF74  F00C    	movff	postdec2,btemp+11
  9365  011342  0060  F02F  FFE6   	movff	btemp+10,postinc1
  9366  011348  0060  F033  FFE6   	movff	btemp+11,postinc1
  9367  01134E  ECA7  F0B3         	call	_atoi	;wreg free
  9368  011352  0060  F004  F021   	movff	btemp,_width
  9369  011358  0060  F008  F022   	movff	btemp+1,_width+1
  9370                           
  9371                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  9372  01135E  D00B               	goto	l11618
  9373  011360                     l11616:
  9374                           
  9375                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
  9376                           ;stkvar	_fmt @ sp[(-32)+-4]
  9377  011360  0EDC               	movlw	-36
  9378  011362  006F FF8F FFD9     	movff	plusw1,fsr2l
  9379  011368  0EDD               	movlw	-35
  9380  01136A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9381  011370  2ADE               	incf	postinc2,f,c
  9382  011372  0E00               	movlw	0
  9383  011374  22DD               	addwfc	postdec2,f,c
  9384  011376                     l11618:
  9385  011376  0ED0               	movlw	208
  9386  011378  6E0B               	movwf	(btemp+10)^0,c
  9387  01137A  0EFF               	movlw	255
  9388  01137C  6E0C               	movwf	(btemp+11)^0,c
  9389                           
  9390                           ;stkvar	_fmt @ sp[(-32)+-4]
  9391  01137E  0EDC               	movlw	-36
  9392  011380  006F FF8F FFD9     	movff	plusw1,fsr2l
  9393  011386  0EDD               	movlw	-35
  9394  011388  006F FF8F FFDA     	movff	plusw1,fsr2h
  9395  01138E  006F FF7B FFF6     	movff	postinc2,tblptrl
  9396  011394  006F FF77 FFF7     	movff	postdec2,tblptrh
  9397  01139A                     	if	0	;tblptru may be non-zero
  9398  01139A                     	endif
  9399  01139A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9400  01139A  0E00               	movlw	low (__mediumconst shr (0+16))
  9401  01139C  6EF8               	movwf	tblptru,c
  9402  01139E                     	endif
  9403  01139E  0008               	tblrd		*
  9404  0113A0  50F5               	movf	tablat,w,c
  9405  0113A2  6E09               	movwf	(btemp+8)^0,c
  9406  0113A4  6A0A               	clrf	(btemp+9)^0,c
  9407  0113A6  500B               	movf	(btemp+10)^0,w,c
  9408  0113A8  2609               	addwf	(btemp+8)^0,f,c
  9409  0113AA  500C               	movf	(btemp+11)^0,w,c
  9410  0113AC  220A               	addwfc	(btemp+9)^0,f,c
  9411  0113AE  500A               	movf	(btemp+9)^0,w,c
  9412  0113B0  E106               	bnz	u11220
  9413  0113B2  0E0A               	movlw	10
  9414  0113B4  5C09               	subwf	(btemp+8)^0,w,c
  9415  0113B6  B0D8               	btfsc	status,0,c
  9416  0113B8  D002               	goto	u11220
  9417  0113BA  0E01               	movlw	1
  9418  0113BC  D001               	goto	u11230
  9419  0113BE                     u11220:
  9420  0113BE  0E00               	movlw	0
  9421  0113C0                     u11230:
  9422  0113C0  6E0B               	movwf	(btemp+10)^0,c
  9423  0113C2  6A0C               	clrf	(btemp+11)^0,c
  9424                           
  9425                           ;stkvar	_vfpfcnvrt$5319 @ sp[(-32)+4]
  9426  0113C4  0EE4               	movlw	-28
  9427  0113C6  0060  F02F  FFE3   	movff	btemp+10,plusw1
  9428  0113CC  0EE5               	movlw	-27
  9429  0113CE  0060  F033  FFE3   	movff	btemp+11,plusw1
  9430                           
  9431                           ;stkvar	_vfpfcnvrt$5319 @ sp[(-32)+4]
  9432  0113D4  0EE4               	movlw	-28
  9433  0113D6  006F FF8C  F001    	movff	plusw1,btemp
  9434  0113DC  0EE5               	movlw	-27
  9435  0113DE  50E3               	movf	plusw1,w,c
  9436  0113E0  1001               	iorwf	btemp^0,w,c
  9437  0113E2  A4D8               	btfss	status,2,c
  9438  0113E4  D7BD               	goto	l11616
  9439  0113E6                     u11240:
  9440                           
  9441                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
  9442                           ;stkvar	_fmt @ sp[(-32)+-4]
  9443  0113E6  0EDC               	movlw	-36
  9444  0113E8  006F FF8F FFD9     	movff	plusw1,fsr2l
  9445  0113EE  0EDD               	movlw	-35
  9446  0113F0  006F FF8F FFDA     	movff	plusw1,fsr2h
  9447  0113F6  006F FF7B FFF6     	movff	postinc2,tblptrl
  9448  0113FC  006F FF77 FFF7     	movff	postdec2,tblptrh
  9449  011402                     	if	0	;tblptru may be non-zero
  9450  011402                     	endif
  9451  011402                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9452  011402  0E00               	movlw	low (__mediumconst shr (0+16))
  9453  011404  6EF8               	movwf	tblptru,c
  9454  011406                     	endif
  9455  011406  0008               	tblrd		*
  9456  011408  50F5               	movf	tablat,w,c
  9457  01140A  0A2E               	xorlw	46
  9458  01140C  A4D8               	btfss	status,2,c
  9459  01140E  D0AC               	goto	u11290
  9460                           
  9461                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
  9462  011410  6A23               	clrf	_prec^0,c
  9463  011412  6A24               	clrf	(_prec+1)^0,c
  9464                           
  9465                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
  9466                           ;stkvar	_fmt @ sp[(-32)+-4]
  9467  011414  0EDC               	movlw	-36
  9468  011416  006F FF8F FFD9     	movff	plusw1,fsr2l
  9469  01141C  0EDD               	movlw	-35
  9470  01141E  006F FF8F FFDA     	movff	plusw1,fsr2h
  9471  011424  2ADE               	incf	postinc2,f,c
  9472  011426  0E00               	movlw	0
  9473  011428  22DD               	addwfc	postdec2,f,c
  9474                           
  9475                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
  9476                           ;stkvar	_fmt @ sp[(-32)+-4]
  9477  01142A  0EDC               	movlw	-36
  9478  01142C  006F FF8F FFD9     	movff	plusw1,fsr2l
  9479  011432  0EDD               	movlw	-35
  9480  011434  006F FF8F FFDA     	movff	plusw1,fsr2h
  9481  01143A  006F FF7B FFF6     	movff	postinc2,tblptrl
  9482  011440  006F FF77 FFF7     	movff	postdec2,tblptrh
  9483  011446                     	if	0	;tblptru may be non-zero
  9484  011446                     	endif
  9485  011446                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9486  011446  0E00               	movlw	low (__mediumconst shr (0+16))
  9487  011448  6EF8               	movwf	tblptru,c
  9488  01144A                     	endif
  9489  01144A  0008               	tblrd		*
  9490  01144C  50F5               	movf	tablat,w,c
  9491  01144E  0A2A               	xorlw	42
  9492  011450  A4D8               	btfss	status,2,c
  9493  011452  D02A               	goto	l11636
  9494                           
  9495                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
  9496                           ;stkvar	_fmt @ sp[(-32)+-4]
  9497  011454  0EDC               	movlw	-36
  9498  011456  006F FF8F FFD9     	movff	plusw1,fsr2l
  9499  01145C  0EDD               	movlw	-35
  9500  01145E  006F FF8F FFDA     	movff	plusw1,fsr2h
  9501  011464  2ADE               	incf	postinc2,f,c
  9502  011466  0E00               	movlw	0
  9503  011468  22DD               	addwfc	postdec2,f,c
  9504                           
  9505                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
  9506                           ;stkvar	_ap @ sp[(-32)+-6]
  9507  01146A  0EDA               	movlw	-38
  9508  01146C  006F FF8F FFD9     	movff	plusw1,fsr2l
  9509  011472  0EDB               	movlw	-37
  9510  011474  006F FF8F FFDA     	movff	plusw1,fsr2h
  9511  01147A  0E02               	movlw	2
  9512  01147C  5EDE               	subwf	postinc2,f,c
  9513  01147E  0E00               	movlw	0
  9514  011480  5ADD               	subwfb	postdec2,f,c
  9515  011482  006F FF78  F00B    	movff	postinc2,btemp+10
  9516  011488  006F FF74  F00C    	movff	postdec2,btemp+11
  9517  01148E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
  9518  011494  0060  F033  FFDA   	movff	btemp+11,fsr2h
  9519  01149A  006F FF78  F023    	movff	postinc2,_prec
  9520  0114A0  006F FF74  F024    	movff	postdec2,_prec+1
  9521                           
  9522                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
  9523  0114A6  D060               	goto	u11290
  9524  0114A8                     l11636:
  9525                           
  9526                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
  9527                           ;stkvar	_fmt @ sp[(-32)+-4]
  9528  0114A8  0EDC               	movlw	-36
  9529  0114AA  006F FF8F FFD9     	movff	plusw1,fsr2l
  9530  0114B0  0EDD               	movlw	-35
  9531  0114B2  006F FF8F FFDA     	movff	plusw1,fsr2h
  9532  0114B8  006F FF78  F00B    	movff	postinc2,btemp+10
  9533  0114BE  006F FF74  F00C    	movff	postdec2,btemp+11
  9534  0114C4  0060  F02F  FFE6   	movff	btemp+10,postinc1
  9535  0114CA  0060  F033  FFE6   	movff	btemp+11,postinc1
  9536  0114D0  ECA7  F0B3         	call	_atoi	;wreg free
  9537  0114D4  0060  F004  F023   	movff	btemp,_prec
  9538  0114DA  0060  F008  F024   	movff	btemp+1,_prec+1
  9539                           
  9540                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  9541  0114E0  D00B               	goto	l11640
  9542  0114E2                     l11638:
  9543                           
  9544                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
  9545                           ;stkvar	_fmt @ sp[(-32)+-4]
  9546  0114E2  0EDC               	movlw	-36
  9547  0114E4  006F FF8F FFD9     	movff	plusw1,fsr2l
  9548  0114EA  0EDD               	movlw	-35
  9549  0114EC  006F FF8F FFDA     	movff	plusw1,fsr2h
  9550  0114F2  2ADE               	incf	postinc2,f,c
  9551  0114F4  0E00               	movlw	0
  9552  0114F6  22DD               	addwfc	postdec2,f,c
  9553  0114F8                     l11640:
  9554  0114F8  0ED0               	movlw	208
  9555  0114FA  6E0B               	movwf	(btemp+10)^0,c
  9556  0114FC  0EFF               	movlw	255
  9557  0114FE  6E0C               	movwf	(btemp+11)^0,c
  9558                           
  9559                           ;stkvar	_fmt @ sp[(-32)+-4]
  9560  011500  0EDC               	movlw	-36
  9561  011502  006F FF8F FFD9     	movff	plusw1,fsr2l
  9562  011508  0EDD               	movlw	-35
  9563  01150A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9564  011510  006F FF7B FFF6     	movff	postinc2,tblptrl
  9565  011516  006F FF77 FFF7     	movff	postdec2,tblptrh
  9566  01151C                     	if	0	;tblptru may be non-zero
  9567  01151C                     	endif
  9568  01151C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9569  01151C  0E00               	movlw	low (__mediumconst shr (0+16))
  9570  01151E  6EF8               	movwf	tblptru,c
  9571  011520                     	endif
  9572  011520  0008               	tblrd		*
  9573  011522  50F5               	movf	tablat,w,c
  9574  011524  6E09               	movwf	(btemp+8)^0,c
  9575  011526  6A0A               	clrf	(btemp+9)^0,c
  9576  011528  500B               	movf	(btemp+10)^0,w,c
  9577  01152A  2609               	addwf	(btemp+8)^0,f,c
  9578  01152C  500C               	movf	(btemp+11)^0,w,c
  9579  01152E  220A               	addwfc	(btemp+9)^0,f,c
  9580  011530  500A               	movf	(btemp+9)^0,w,c
  9581  011532  E106               	bnz	u11270
  9582  011534  0E0A               	movlw	10
  9583  011536  5C09               	subwf	(btemp+8)^0,w,c
  9584  011538  B0D8               	btfsc	status,0,c
  9585  01153A  D002               	goto	u11270
  9586  01153C  0E01               	movlw	1
  9587  01153E  D001               	goto	u11280
  9588  011540                     u11270:
  9589  011540  0E00               	movlw	0
  9590  011542                     u11280:
  9591  011542  6E0B               	movwf	(btemp+10)^0,c
  9592  011544  6A0C               	clrf	(btemp+11)^0,c
  9593                           
  9594                           ;stkvar	_vfpfcnvrt$5320 @ sp[(-32)+0]
  9595  011546  0EE0               	movlw	-32
  9596  011548  0060  F02F  FFE3   	movff	btemp+10,plusw1
  9597  01154E  0EE1               	movlw	-31
  9598  011550  0060  F033  FFE3   	movff	btemp+11,plusw1
  9599                           
  9600                           ;stkvar	_vfpfcnvrt$5320 @ sp[(-32)+0]
  9601  011556  0EE0               	movlw	-32
  9602  011558  006F FF8C  F001    	movff	plusw1,btemp
  9603  01155E  0EE1               	movlw	-31
  9604  011560  50E3               	movf	plusw1,w,c
  9605  011562  1001               	iorwf	btemp^0,w,c
  9606  011564  A4D8               	btfss	status,2,c
  9607  011566  D7BD               	goto	l11638
  9608  011568                     u11290:
  9609                           
  9610                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
  9611                           ;stkvar	_fmt @ sp[(-32)+-4]
  9612  011568  0EDC               	movlw	-36
  9613  01156A  006F FF8F FFD9     	movff	plusw1,fsr2l
  9614  011570  0EDD               	movlw	-35
  9615  011572  006F FF8F FFDA     	movff	plusw1,fsr2h
  9616  011578  006F FF7B FFF6     	movff	postinc2,tblptrl
  9617  01157E  006F FF77 FFF7     	movff	postdec2,tblptrh
  9618  011584                     	if	0	;tblptru may be non-zero
  9619  011584                     	endif
  9620  011584                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9621  011584  0E00               	movlw	low (__mediumconst shr (0+16))
  9622  011586  6EF8               	movwf	tblptru,c
  9623  011588                     	endif
  9624  011588  0008               	tblrd		*
  9625  01158A  50F5               	movf	tablat,w,c
  9626  01158C  6EE6               	movwf	postinc1,c
  9627  01158E  0E00               	movlw	0
  9628  011590  6EE6               	movwf	postinc1,c
  9629  011592  EC56  F0CC         	call	_tolower	;wreg free
  9630                           
  9631                           ;stkvar	_ct @ sp[(-32)+26]
  9632  011596  0EFA               	movlw	-6
  9633  011598  0060  F007  FFE3   	movff	btemp,plusw1
  9634                           
  9635                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
  9636                           ;stkvar	_ct @ sp[(-32)+26]
  9637  01159E  0EFA               	movlw	-6
  9638  0115A0  50E3               	movf	plusw1,w,c
  9639  0115A2  B4D8               	btfsc	status,2,c
  9640  0115A4  D05B               	goto	l11656
  9641                           
  9642                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
  9643                           ;stkvar	_ct @ sp[(-32)+26]
  9644  0115A6  0EFB               	movlw	251
  9645  0115A8  24E1               	addwf	fsr1l,w,c
  9646  0115AA  6ED9               	movwf	fsr2l,c
  9647  0115AC  0EFF               	movlw	255
  9648  0115AE  20E2               	addwfc	fsr1h,w,c
  9649  0115B0  6EDA               	movwf	fsr2h,c
  9650                           
  9651                           ;stkvar	_fmt @ sp[(-32)+-4]
  9652  0115B2  0EDC               	movlw	-36
  9653  0115B4  006F FF8F FFE9     	movff	plusw1,fsr0l
  9654  0115BA  0EDD               	movlw	-35
  9655  0115BC  006F FF8F FFEA     	movff	plusw1,fsr0h
  9656  0115C2  006F FFB8  F00B    	movff	postinc0,btemp+10
  9657  0115C8  006F FFB4  F00C    	movff	postdec0,btemp+11
  9658  0115CE  0E01               	movlw	1
  9659  0115D0  260B               	addwf	(btemp+10)^0,f,c
  9660  0115D2  0E00               	movlw	0
  9661  0115D4  220C               	addwfc	(btemp+11)^0,f,c
  9662  0115D6  0060  F02F  FFF6   	movff	btemp+10,tblptrl
  9663  0115DC  0060  F033  FFF7   	movff	btemp+11,tblptrh
  9664  0115E2                     	if	0	;tblptru may be non-zero
  9665  0115E2                     	endif
  9666  0115E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9667  0115E2  0E00               	movlw	low (__mediumconst shr (0+16))
  9668  0115E4  6EF8               	movwf	tblptru,c
  9669  0115E6                     	endif
  9670  0115E6  0008               	tblrd		*
  9671  0115E8  50F5               	movf	tablat,w,c
  9672  0115EA  6EE6               	movwf	postinc1,c
  9673  0115EC  0E00               	movlw	0
  9674  0115EE  6EE6               	movwf	postinc1,c
  9675  0115F0  EC56  F0CC         	call	_tolower	;wreg free
  9676  0115F4  5001               	movf	btemp^0,w,c
  9677  0115F6  6EDF               	movwf	indf2,c
  9678                           
  9679                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
  9680                           ;stkvar	_ct @ sp[(-32)+26]
  9681  0115F8  0EFB               	movlw	251
  9682  0115FA  24E1               	addwf	fsr1l,w,c
  9683  0115FC  6ED9               	movwf	fsr2l,c
  9684  0115FE  0EFF               	movlw	255
  9685  011600  20E2               	addwfc	fsr1h,w,c
  9686  011602  6EDA               	movwf	fsr2h,c
  9687  011604  50DF               	movf	indf2,w,c
  9688  011606  B4D8               	btfsc	status,2,c
  9689  011608  D029               	goto	l11656
  9690                           
  9691                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
  9692                           ;stkvar	_ct @ sp[(-32)+26]
  9693  01160A  0EFC               	movlw	252
  9694  01160C  24E1               	addwf	fsr1l,w,c
  9695  01160E  6ED9               	movwf	fsr2l,c
  9696  011610  0EFF               	movlw	255
  9697  011612  20E2               	addwfc	fsr1h,w,c
  9698  011614  6EDA               	movwf	fsr2h,c
  9699                           
  9700                           ;stkvar	_fmt @ sp[(-32)+-4]
  9701  011616  0EDC               	movlw	-36
  9702  011618  006F FF8F FFE9     	movff	plusw1,fsr0l
  9703  01161E  0EDD               	movlw	-35
  9704  011620  006F FF8F FFEA     	movff	plusw1,fsr0h
  9705  011626  006F FFB8  F00B    	movff	postinc0,btemp+10
  9706  01162C  006F FFB4  F00C    	movff	postdec0,btemp+11
  9707  011632  0E02               	movlw	2
  9708  011634  260B               	addwf	(btemp+10)^0,f,c
  9709  011636  0E00               	movlw	0
  9710  011638  220C               	addwfc	(btemp+11)^0,f,c
  9711  01163A  0060  F02F  FFF6   	movff	btemp+10,tblptrl
  9712  011640  0060  F033  FFF7   	movff	btemp+11,tblptrh
  9713  011646                     	if	0	;tblptru may be non-zero
  9714  011646                     	endif
  9715  011646                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9716  011646  0E00               	movlw	low (__mediumconst shr (0+16))
  9717  011648  6EF8               	movwf	tblptru,c
  9718  01164A                     	endif
  9719  01164A  0008               	tblrd		*
  9720  01164C  50F5               	movf	tablat,w,c
  9721  01164E  6EE6               	movwf	postinc1,c
  9722  011650  0E00               	movlw	0
  9723  011652  6EE6               	movwf	postinc1,c
  9724  011654  EC56  F0CC         	call	_tolower	;wreg free
  9725  011658  5001               	movf	btemp^0,w,c
  9726  01165A  6EDF               	movwf	indf2,c
  9727  01165C                     l11656:
  9728                           
  9729                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  9730                           ;stkvar	_fmt @ sp[(-32)+-4]
  9731  01165C  0EDC               	movlw	-36
  9732  01165E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9733  011664  0EDD               	movlw	-35
  9734  011666  006F FF8F FFDA     	movff	plusw1,fsr2h
  9735  01166C  006F FF7B FFF6     	movff	postinc2,tblptrl
  9736  011672  006F FF77 FFF7     	movff	postdec2,tblptrh
  9737  011678                     	if	0	;tblptru may be non-zero
  9738  011678                     	endif
  9739  011678                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9740  011678  0E00               	movlw	low (__mediumconst shr (0+16))
  9741  01167A  6EF8               	movwf	tblptru,c
  9742  01167C                     	endif
  9743  01167C  0008               	tblrd		*
  9744  01167E  50F5               	movf	tablat,w,c
  9745  011680  0A63               	xorlw	99
  9746  011682  A4D8               	btfss	status,2,c
  9747  011684  D037               	goto	l11666
  9748                           
  9749                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  9750                           ;stkvar	_fmt @ sp[(-32)+-4]
  9751  011686  0EDC               	movlw	-36
  9752  011688  006F FF8F FFD9     	movff	plusw1,fsr2l
  9753  01168E  0EDD               	movlw	-35
  9754  011690  006F FF8F FFDA     	movff	plusw1,fsr2h
  9755  011696  2ADE               	incf	postinc2,f,c
  9756  011698  0E00               	movlw	0
  9757  01169A  22DD               	addwfc	postdec2,f,c
  9758                           
  9759                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  9760                           ;stkvar	_ap @ sp[(-32)+-6]
  9761  01169C  0EDA               	movlw	-38
  9762  01169E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9763  0116A4  0EDB               	movlw	-37
  9764  0116A6  006F FF8F FFDA     	movff	plusw1,fsr2h
  9765  0116AC  0E02               	movlw	2
  9766  0116AE  5EDE               	subwf	postinc2,f,c
  9767  0116B0  0E00               	movlw	0
  9768  0116B2  5ADD               	subwfb	postdec2,f,c
  9769  0116B4  006F FF78  F00B    	movff	postinc2,btemp+10
  9770  0116BA  006F FF74  F00C    	movff	postdec2,btemp+11
  9771  0116C0  0060  F02F  FFD9   	movff	btemp+10,fsr2l
  9772  0116C6  0060  F033  FFDA   	movff	btemp+11,fsr2h
  9773  0116CC  50DF               	movf	indf2,w,c
  9774  0116CE  6E0C               	movwf	(btemp+11)^0,c
  9775                           
  9776                           ;stkvar	_c @ sp[(-32)+31]
  9777  0116D0  0EFF               	movlw	-1
  9778  0116D2  0060  F033  FFE3   	movff	btemp+11,plusw1
  9779                           
  9780                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  9781                           ;stkvar	_c @ sp[(-32)+31]
  9782  0116D8  0EFF               	movlw	-1
  9783  0116DA  50E3               	movf	plusw1,w,c
  9784  0116DC  6EE6               	movwf	postinc1,c
  9785                           
  9786                           ;stkvar	_fp @ sp[(-33)+-2]
  9787  0116DE  0EDD               	movlw	-35
  9788  0116E0  006F FF8F FFE6     	movff	plusw1,postinc1
  9789  0116E6  006F FF8F FFE6     	movff	plusw1,postinc1
  9790  0116EC  ECD0  F0CB         	call	_ctoa	;wreg free
  9791  0116F0  EFF3  F090         	goto	l2284
  9792  0116F4                     l11666:
  9793                           
  9794                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  9795                           ;stkvar	_fmt @ sp[(-32)+-4]
  9796  0116F4  0EDC               	movlw	-36
  9797  0116F6  006F FF8F FFD9     	movff	plusw1,fsr2l
  9798  0116FC  0EDD               	movlw	-35
  9799  0116FE  006F FF8F FFDA     	movff	plusw1,fsr2h
  9800  011704  006F FF7B FFF6     	movff	postinc2,tblptrl
  9801  01170A  006F FF77 FFF7     	movff	postdec2,tblptrh
  9802  011710                     	if	0	;tblptru may be non-zero
  9803  011710                     	endif
  9804  011710                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9805  011710  0E00               	movlw	low (__mediumconst shr (0+16))
  9806  011712  6EF8               	movwf	tblptru,c
  9807  011714                     	endif
  9808  011714  0008               	tblrd		*
  9809  011716  50F5               	movf	tablat,w,c
  9810  011718  0A64               	xorlw	100
  9811  01171A  B4D8               	btfsc	status,2,c
  9812  01171C  D015               	goto	u11340
  9813                           
  9814                           ;stkvar	_fmt @ sp[(-32)+-4]
  9815  01171E  0EDC               	movlw	-36
  9816  011720  006F FF8F FFD9     	movff	plusw1,fsr2l
  9817  011726  0EDD               	movlw	-35
  9818  011728  006F FF8F FFDA     	movff	plusw1,fsr2h
  9819  01172E  006F FF7B FFF6     	movff	postinc2,tblptrl
  9820  011734  006F FF77 FFF7     	movff	postdec2,tblptrh
  9821  01173A                     	if	0	;tblptru may be non-zero
  9822  01173A                     	endif
  9823  01173A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9824  01173A  0E00               	movlw	low (__mediumconst shr (0+16))
  9825  01173C  6EF8               	movwf	tblptru,c
  9826  01173E                     	endif
  9827  01173E  0008               	tblrd		*
  9828  011740  50F5               	movf	tablat,w,c
  9829  011742  0A69               	xorlw	105
  9830  011744  A4D8               	btfss	status,2,c
  9831  011746  D076               	goto	l11678
  9832  011748                     u11340:
  9833                           
  9834                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  9835                           ;stkvar	_fmt @ sp[(-32)+-4]
  9836  011748  0EDC               	movlw	-36
  9837  01174A  006F FF8F FFD9     	movff	plusw1,fsr2l
  9838  011750  0EDD               	movlw	-35
  9839  011752  006F FF8F FFDA     	movff	plusw1,fsr2h
  9840  011758  2ADE               	incf	postinc2,f,c
  9841  01175A  0E00               	movlw	0
  9842  01175C  22DD               	addwfc	postdec2,f,c
  9843                           
  9844                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  9845                           ;stkvar	_ap @ sp[(-32)+-6]
  9846  01175E  0EDA               	movlw	-38
  9847  011760  006F FF8F FFD9     	movff	plusw1,fsr2l
  9848  011766  0EDB               	movlw	-37
  9849  011768  006F FF8F FFDA     	movff	plusw1,fsr2h
  9850  01176E  0E02               	movlw	2
  9851  011770  5EDE               	subwf	postinc2,f,c
  9852  011772  0E00               	movlw	0
  9853  011774  5ADD               	subwfb	postdec2,f,c
  9854  011776  006F FF78  F00B    	movff	postinc2,btemp+10
  9855  01177C  006F FF74  F00C    	movff	postdec2,btemp+11
  9856  011782  0060  F02F  FFD9   	movff	btemp+10,fsr2l
  9857  011788  0060  F033  FFDA   	movff	btemp+11,fsr2h
  9858  01178E  006F FF78  F00B    	movff	postinc2,btemp+10
  9859  011794  006F FF74  F00C    	movff	postdec2,btemp+11
  9860                           
  9861                           ;stkvar	_ll @ sp[(-32)+14]
  9862  01179A  0EEE               	movlw	-18
  9863  01179C  0060  F02F  FFE3   	movff	btemp+10,plusw1
  9864  0117A2  0EEF               	movlw	-17
  9865  0117A4  0060  F033  FFE3   	movff	btemp+11,plusw1
  9866  0117AA  6A01               	clrf	btemp^0,c
  9867  0117AC  BEE3               	btfsc	plusw1,7,c
  9868  0117AE  6801               	setf	btemp^0,c
  9869  0117B0  0EF0               	movlw	-16
  9870  0117B2  0060  F007  FFE3   	movff	btemp,plusw1
  9871  0117B8  0EF1               	movlw	-15
  9872  0117BA  0060  F007  FFE3   	movff	btemp,plusw1
  9873  0117C0  0EF2               	movlw	-14
  9874  0117C2  0060  F007  FFE3   	movff	btemp,plusw1
  9875  0117C8  0EF3               	movlw	-13
  9876  0117CA  0060  F007  FFE3   	movff	btemp,plusw1
  9877  0117D0  0EF4               	movlw	-12
  9878  0117D2  0060  F007  FFE3   	movff	btemp,plusw1
  9879  0117D8  0EF5               	movlw	-11
  9880  0117DA  0060  F007  FFE3   	movff	btemp,plusw1
  9881  0117E0                     l11674:
  9882                           
  9883                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  9884                           ;stkvar	_ll @ sp[(-32)+14]
  9885  0117E0  50E1               	movf	fsr1l,w,c
  9886  0117E2  0FEE               	addlw	-18
  9887  0117E4  6ED9               	movwf	fsr2l,c
  9888  0117E6  50E2               	movf	fsr1h,w,c
  9889  0117E8  6EDA               	movwf	fsr2h,c
  9890  0117EA  0EFF               	movlw	255
  9891  0117EC  22DA               	addwfc	fsr2h,f,c
  9892  0117EE  006F FF7B FFE6     	movff	postinc2,postinc1
  9893  0117F4  006F FF7B FFE6     	movff	postinc2,postinc1
  9894  0117FA  006F FF7B FFE6     	movff	postinc2,postinc1
  9895  011800  006F FF7B FFE6     	movff	postinc2,postinc1
  9896  011806  006F FF7B FFE6     	movff	postinc2,postinc1
  9897  01180C  006F FF7B FFE6     	movff	postinc2,postinc1
  9898  011812  006F FF7B FFE6     	movff	postinc2,postinc1
  9899  011818  006F FF7B FFE6     	movff	postinc2,postinc1
  9900                           
  9901                           ;stkvar	_fp @ sp[(-40)+-2]
  9902  01181E  0ED6               	movlw	-42
  9903  011820  006F FF8F FFE6     	movff	plusw1,postinc1
  9904  011826  006F FF8F FFE6     	movff	plusw1,postinc1
  9905  01182C  EC4E  F0A6         	call	_dtoa	;wreg free
  9906  011830  EFF3  F090         	goto	l2284
  9907  011834                     l11678:
  9908                           
  9909                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
  9910  011834  0E02               	movlw	2
  9911  011836  6EE6               	movwf	postinc1,c
  9912  011838  0E00               	movlw	0
  9913  01183A  6EE6               	movwf	postinc1,c
  9914  01183C  0EEA               	movlw	low STR_57
  9915  01183E  6EE6               	movwf	postinc1,c
  9916  011840  0EFF               	movlw	high STR_57
  9917  011842  6EE6               	movwf	postinc1,c
  9918                           
  9919                           ;stkvar	_fmt @ sp[(-36)+-4]
  9920  011844  0ED8               	movlw	-40
  9921  011846  006F FF8F FFD9     	movff	plusw1,fsr2l
  9922  01184C  0ED9               	movlw	-39
  9923  01184E  006F FF8F FFDA     	movff	plusw1,fsr2h
  9924  011854  006F FF78  F00B    	movff	postinc2,btemp+10
  9925  01185A  006F FF74  F00C    	movff	postdec2,btemp+11
  9926  011860  0060  F02F  FFE6   	movff	btemp+10,postinc1
  9927  011866  0060  F033  FFE6   	movff	btemp+11,postinc1
  9928  01186C  EC01  F0B6         	call	_strncmp	;wreg free
  9929  011870  5001               	movf	btemp^0,w,c
  9930  011872  1002               	iorwf	(btemp+1)^0,w,c
  9931  011874  B4D8               	btfsc	status,2,c
  9932  011876  D022               	goto	u11360
  9933  011878  0E02               	movlw	2
  9934  01187A  6EE6               	movwf	postinc1,c
  9935  01187C  0E00               	movlw	0
  9936  01187E  6EE6               	movwf	postinc1,c
  9937  011880  0EF0               	movlw	low STR_61
  9938  011882  6EE6               	movwf	postinc1,c
  9939  011884  0EFF               	movlw	high STR_61
  9940  011886  6EE6               	movwf	postinc1,c
  9941                           
  9942                           ;stkvar	_fmt @ sp[(-36)+-4]
  9943  011888  0ED8               	movlw	-40
  9944  01188A  006F FF8F FFD9     	movff	plusw1,fsr2l
  9945  011890  0ED9               	movlw	-39
  9946  011892  006F FF8F FFDA     	movff	plusw1,fsr2h
  9947  011898  006F FF78  F00B    	movff	postinc2,btemp+10
  9948  01189E  006F FF74  F00C    	movff	postdec2,btemp+11
  9949  0118A4  0060  F02F  FFE6   	movff	btemp+10,postinc1
  9950  0118AA  0060  F033  FFE6   	movff	btemp+11,postinc1
  9951  0118B0  EC01  F0B6         	call	_strncmp	;wreg free
  9952  0118B4  5001               	movf	btemp^0,w,c
  9953  0118B6  1002               	iorwf	(btemp+1)^0,w,c
  9954  0118B8  A4D8               	btfss	status,2,c
  9955  0118BA  D069               	goto	l11690
  9956  0118BC                     u11360:
  9957                           
  9958                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
  9959                           ;stkvar	_fmt @ sp[(-32)+-4]
  9960  0118BC  0EDC               	movlw	-36
  9961  0118BE  006F FF8F FFD9     	movff	plusw1,fsr2l
  9962  0118C4  0EDD               	movlw	-35
  9963  0118C6  006F FF8F FFDA     	movff	plusw1,fsr2h
  9964  0118CC  0E02               	movlw	2
  9965  0118CE  26DE               	addwf	postinc2,f,c
  9966  0118D0  0E00               	movlw	0
  9967  0118D2  22DD               	addwfc	postdec2,f,c
  9968                           
  9969                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
  9970                           ;stkvar	_ap @ sp[(-32)+-6]
  9971  0118D4  0EDA               	movlw	-38
  9972  0118D6  006F FF8F FFD9     	movff	plusw1,fsr2l
  9973  0118DC  0EDB               	movlw	-37
  9974  0118DE  006F FF8F FFDA     	movff	plusw1,fsr2h
  9975  0118E4  0E04               	movlw	4
  9976  0118E6  5EDE               	subwf	postinc2,f,c
  9977  0118E8  0E00               	movlw	0
  9978  0118EA  5ADD               	subwfb	postdec2,f,c
  9979  0118EC  006F FF78  F00B    	movff	postinc2,btemp+10
  9980  0118F2  006F FF74  F00C    	movff	postdec2,btemp+11
  9981  0118F8  0060  F02F  FFD9   	movff	btemp+10,fsr2l
  9982  0118FE  0060  F033  FFDA   	movff	btemp+11,fsr2h
  9983  011904  006F FF78  F009    	movff	postinc2,btemp+8
  9984  01190A  006F FF78  F00A    	movff	postinc2,btemp+9
  9985  011910  006F FF78  F00B    	movff	postinc2,btemp+10
  9986  011916  006F FF78  F00C    	movff	postinc2,btemp+11
  9987  01191C  0060  F024  F011   	movff	btemp+8,btemp+16
  9988  011922  0060  F028  F012   	movff	btemp+9,btemp+17
  9989  011928  0060  F02C  F013   	movff	btemp+10,btemp+18
  9990  01192E  0060  F030  F014   	movff	btemp+11,btemp+19
  9991  011934  6A15               	clrf	(btemp+20)^0,c
  9992  011936  BE14               	btfsc	(btemp+19)^0,7,c
  9993  011938  6815               	setf	(btemp+20)^0,c
  9994  01193A  0060  F054  F016   	movff	btemp+20,btemp+21
  9995  011940  0060  F054  F017   	movff	btemp+20,btemp+22
  9996  011946  0060  F054  F018   	movff	btemp+20,btemp+23
  9997                           
  9998                           ;stkvar	_ll @ sp[(-32)+14]
  9999  01194C  0EEE               	movlw	-18
 10000  01194E  0060  F047  FFE3   	movff	btemp+16,plusw1
 10001  011954  0EEF               	movlw	-17
 10002  011956  0060  F04B  FFE3   	movff	btemp+17,plusw1
 10003  01195C  0EF0               	movlw	-16
 10004  01195E  0060  F04F  FFE3   	movff	btemp+18,plusw1
 10005  011964  0EF1               	movlw	-15
 10006  011966  0060  F053  FFE3   	movff	btemp+19,plusw1
 10007  01196C  0EF2               	movlw	-14
 10008  01196E  0060  F057  FFE3   	movff	btemp+20,plusw1
 10009  011974  0EF3               	movlw	-13
 10010  011976  0060  F05B  FFE3   	movff	btemp+21,plusw1
 10011  01197C  0EF4               	movlw	-12
 10012  01197E  0060  F05F  FFE3   	movff	btemp+22,plusw1
 10013  011984  0EF5               	movlw	-11
 10014  011986  0060  F063  FFE3   	movff	btemp+23,plusw1
 10015  01198C  D729               	goto	l11674
 10016  01198E                     l11690:
 10017                           
 10018                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
 10019                           ;stkvar	_ct @ sp[(-32)+26]
 10020  01198E  0EFA               	movlw	-6
 10021  011990  006F FF8C  F001    	movff	plusw1,btemp
 10022  011996  0E66               	movlw	102
 10023  011998  1801               	xorwf	btemp^0,w,c
 10024  01199A  A4D8               	btfss	status,2,c
 10025  01199C  D06E               	goto	l11702
 10026                           
 10027                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
 10028                           ;stkvar	_fmt @ sp[(-32)+-4]
 10029  01199E  0EDC               	movlw	-36
 10030  0119A0  006F FF8F FFD9     	movff	plusw1,fsr2l
 10031  0119A6  0EDD               	movlw	-35
 10032  0119A8  006F FF8F FFDA     	movff	plusw1,fsr2h
 10033  0119AE  006F FF7B FFF6     	movff	postinc2,tblptrl
 10034  0119B4  006F FF77 FFF7     	movff	postdec2,tblptrh
 10035  0119BA                     	if	0	;tblptru may be non-zero
 10036  0119BA                     	endif
 10037  0119BA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10038  0119BA  0E00               	movlw	low (__mediumconst shr (0+16))
 10039  0119BC  6EF8               	movwf	tblptru,c
 10040  0119BE                     	endif
 10041                           
 10042                           ;stkvar	_c @ sp[(-32)+31]
 10043  0119BE  0008               	tblrd		*
 10044  0119C0  0EFF               	movlw	-1
 10045  0119C2  006F FFD7 FFE3     	movff	tablat,plusw1
 10046                           
 10047                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
 10048                           ;stkvar	_fmt @ sp[(-32)+-4]
 10049  0119C8  0EDC               	movlw	-36
 10050  0119CA  006F FF8F FFD9     	movff	plusw1,fsr2l
 10051  0119D0  0EDD               	movlw	-35
 10052  0119D2  006F FF8F FFDA     	movff	plusw1,fsr2h
 10053  0119D8  2ADE               	incf	postinc2,f,c
 10054  0119DA  0E00               	movlw	0
 10055  0119DC  22DD               	addwfc	postdec2,f,c
 10056                           
 10057                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
 10058                           ;stkvar	_ap @ sp[(-32)+-6]
 10059  0119DE  0EDA               	movlw	-38
 10060  0119E0  006F FF8F FFD9     	movff	plusw1,fsr2l
 10061  0119E6  0EDB               	movlw	-37
 10062  0119E8  006F FF8F FFDA     	movff	plusw1,fsr2h
 10063  0119EE  0E04               	movlw	4
 10064  0119F0  5EDE               	subwf	postinc2,f,c
 10065  0119F2  0E00               	movlw	0
 10066  0119F4  5ADD               	subwfb	postdec2,f,c
 10067  0119F6  006F FF78  F00B    	movff	postinc2,btemp+10
 10068  0119FC  006F FF74  F00C    	movff	postdec2,btemp+11
 10069  011A02  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10070  011A08  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10071  011A0E  006F FF78  F009    	movff	postinc2,btemp+8
 10072  011A14  006F FF78  F00A    	movff	postinc2,btemp+9
 10073  011A1A  006F FF78  F00B    	movff	postinc2,btemp+10
 10074  011A20  006F FF78  F00C    	movff	postinc2,btemp+11
 10075                           
 10076                           ;stkvar	_f @ sp[(-32)+22]
 10077  011A26  0EF6               	movlw	-10
 10078  011A28  0060  F027  FFE3   	movff	btemp+8,plusw1
 10079  011A2E  0EF7               	movlw	-9
 10080  011A30  0060  F02B  FFE3   	movff	btemp+9,plusw1
 10081  011A36  0EF8               	movlw	-8
 10082  011A38  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10083  011A3E  0EF9               	movlw	-7
 10084  011A40  0060  F033  FFE3   	movff	btemp+11,plusw1
 10085  011A46                     l11698:
 10086                           
 10087                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
 10088                           ;stkvar	_c @ sp[(-32)+31]
 10089  011A46  0EFF               	movlw	-1
 10090  011A48  50E3               	movf	plusw1,w,c
 10091  011A4A  6EE6               	movwf	postinc1,c
 10092                           
 10093                           ;stkvar	_f @ sp[(-33)+22]
 10094  011A4C  0EF5               	movlw	-11
 10095  011A4E  006F FF8F FFE6     	movff	plusw1,postinc1
 10096  011A54  006F FF8F FFE6     	movff	plusw1,postinc1
 10097  011A5A  006F FF8F FFE6     	movff	plusw1,postinc1
 10098  011A60  006F FF8F FFE6     	movff	plusw1,postinc1
 10099                           
 10100                           ;stkvar	_fp @ sp[(-37)+-2]
 10101  011A66  0ED9               	movlw	-39
 10102  011A68  006F FF8F FFE6     	movff	plusw1,postinc1
 10103  011A6E  006F FF8F FFE6     	movff	plusw1,postinc1
 10104  011A74  EC00  F080         	call	_efgtoa	;wreg free
 10105  011A78  D3B6               	goto	l2284
 10106  011A7A                     l11702:
 10107                           
 10108                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 10109  011A7A  0E02               	movlw	2
 10110  011A7C  6EE6               	movwf	postinc1,c
 10111  011A7E  0E00               	movlw	0
 10112  011A80  6EE6               	movwf	postinc1,c
 10113  011A82  0EED               	movlw	low STR_66
 10114  011A84  6EE6               	movwf	postinc1,c
 10115  011A86  0EFF               	movlw	high STR_66
 10116  011A88  6EE6               	movwf	postinc1,c
 10117                           
 10118                           ;stkvar	_ct @ sp[(-36)+26]
 10119  011A8A  0EF6               	movlw	246
 10120  011A8C  24E1               	addwf	fsr1l,w,c
 10121  011A8E  6E01               	movwf	btemp^0,c
 10122  011A90  0EFF               	movlw	255
 10123  011A92  20E2               	addwfc	fsr1h,w,c
 10124  011A94  6E02               	movwf	(btemp+1)^0,c
 10125  011A96  0060  F007  FFE6   	movff	btemp,postinc1
 10126  011A9C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10127  011AA2  EC01  F0B6         	call	_strncmp	;wreg free
 10128  011AA6  5001               	movf	btemp^0,w,c
 10129  011AA8  1002               	iorwf	(btemp+1)^0,w,c
 10130  011AAA  A4D8               	btfss	status,2,c
 10131  011AAC  D096               	goto	l11722
 10132                           
 10133                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 10134                           ;stkvar	_fmt @ sp[(-32)+-4]
 10135  011AAE  0EDC               	movlw	-36
 10136  011AB0  006F FF8F FFD9     	movff	plusw1,fsr2l
 10137  011AB6  0EDD               	movlw	-35
 10138  011AB8  006F FF8F FFDA     	movff	plusw1,fsr2h
 10139  011ABE  006F FF78  F00B    	movff	postinc2,btemp+10
 10140  011AC4  006F FF74  F00C    	movff	postdec2,btemp+11
 10141  011ACA  0E01               	movlw	1
 10142  011ACC  260B               	addwf	(btemp+10)^0,f,c
 10143  011ACE  0E00               	movlw	0
 10144  011AD0  220C               	addwfc	(btemp+11)^0,f,c
 10145  011AD2  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 10146  011AD8  0060  F033  FFF7   	movff	btemp+11,tblptrh
 10147  011ADE                     	if	0	;tblptru may be non-zero
 10148  011ADE                     	endif
 10149  011ADE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10150  011ADE  0E00               	movlw	low (__mediumconst shr (0+16))
 10151  011AE0  6EF8               	movwf	tblptru,c
 10152  011AE2                     	endif
 10153                           
 10154                           ;stkvar	_c @ sp[(-32)+31]
 10155  011AE2  0008               	tblrd		*
 10156  011AE4  0EFF               	movlw	-1
 10157  011AE6  006F FFD7 FFE3     	movff	tablat,plusw1
 10158  011AEC  0EBF               	movlw	191
 10159  011AEE  6E0B               	movwf	(btemp+10)^0,c
 10160  011AF0  0EFF               	movlw	255
 10161  011AF2  6E0C               	movwf	(btemp+11)^0,c
 10162                           
 10163                           ;stkvar	_fmt @ sp[(-32)+-4]
 10164  011AF4  0EDC               	movlw	-36
 10165  011AF6  006F FF8F FFD9     	movff	plusw1,fsr2l
 10166  011AFC  0EDD               	movlw	-35
 10167  011AFE  006F FF8F FFDA     	movff	plusw1,fsr2h
 10168  011B04  006F FF7B FFF6     	movff	postinc2,tblptrl
 10169  011B0A  006F FF77 FFF7     	movff	postdec2,tblptrh
 10170  011B10                     	if	0	;tblptru may be non-zero
 10171  011B10                     	endif
 10172  011B10                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10173  011B10  0E00               	movlw	low (__mediumconst shr (0+16))
 10174  011B12  6EF8               	movwf	tblptru,c
 10175  011B14                     	endif
 10176  011B14  0008               	tblrd		*
 10177  011B16  50F5               	movf	tablat,w,c
 10178  011B18  6E09               	movwf	(btemp+8)^0,c
 10179  011B1A  6A0A               	clrf	(btemp+9)^0,c
 10180  011B1C  500B               	movf	(btemp+10)^0,w,c
 10181  011B1E  2609               	addwf	(btemp+8)^0,f,c
 10182  011B20  500C               	movf	(btemp+11)^0,w,c
 10183  011B22  220A               	addwfc	(btemp+9)^0,f,c
 10184  011B24  500A               	movf	(btemp+9)^0,w,c
 10185  011B26  E106               	bnz	u11390
 10186  011B28  0E1A               	movlw	26
 10187  011B2A  5C09               	subwf	(btemp+8)^0,w,c
 10188  011B2C  B0D8               	btfsc	status,0,c
 10189  011B2E  D002               	goto	u11390
 10190  011B30  0E01               	movlw	1
 10191  011B32  D001               	goto	u11400
 10192  011B34                     u11390:
 10193  011B34  0E00               	movlw	0
 10194  011B36                     u11400:
 10195  011B36  6E0B               	movwf	(btemp+10)^0,c
 10196  011B38  6A0C               	clrf	(btemp+11)^0,c
 10197                           
 10198                           ;stkvar	_vfpfcnvrt$5331 @ sp[(-32)+2]
 10199  011B3A  0EE2               	movlw	-30
 10200  011B3C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10201  011B42  0EE3               	movlw	-29
 10202  011B44  0060  F033  FFE3   	movff	btemp+11,plusw1
 10203                           
 10204                           ;stkvar	_vfpfcnvrt$5331 @ sp[(-32)+2]
 10205  011B4A  0EE2               	movlw	-30
 10206  011B4C  006F FF8C  F001    	movff	plusw1,btemp
 10207  011B52  0EE3               	movlw	-29
 10208  011B54  50E3               	movf	plusw1,w,c
 10209  011B56  1001               	iorwf	btemp^0,w,c
 10210                           
 10211                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
 10212                           ;stkvar	_ap @ sp[(-32)+-6]
 10213                           
 10214                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
 10215                           
 10216                           ;stkvar	_f @ sp[(-32)+22]
 10217                           
 10218                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
 10219                           ;stkvar	_ap @ sp[(-32)+-6]
 10220  011B58  0EDA               	movlw	-38
 10221  011B5A  006F FF8F FFD9     	movff	plusw1,fsr2l
 10222  011B60  0EDB               	movlw	-37
 10223  011B62  006F FF8F FFDA     	movff	plusw1,fsr2h
 10224  011B68  0E04               	movlw	4
 10225  011B6A  5EDE               	subwf	postinc2,f,c
 10226  011B6C  0E00               	movlw	0
 10227  011B6E  5ADD               	subwfb	postdec2,f,c
 10228  011B70  006F FF78  F00B    	movff	postinc2,btemp+10
 10229  011B76  006F FF74  F00C    	movff	postdec2,btemp+11
 10230  011B7C  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10231  011B82  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10232  011B88  006F FF78  F009    	movff	postinc2,btemp+8
 10233  011B8E  006F FF78  F00A    	movff	postinc2,btemp+9
 10234  011B94  006F FF78  F00B    	movff	postinc2,btemp+10
 10235  011B9A  006F FF78  F00C    	movff	postinc2,btemp+11
 10236                           
 10237                           ;stkvar	_f @ sp[(-32)+22]
 10238  011BA0  0EF6               	movlw	-10
 10239  011BA2  0060  F027  FFE3   	movff	btemp+8,plusw1
 10240  011BA8  0EF7               	movlw	-9
 10241  011BAA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 10242  011BB0  0EF8               	movlw	-8
 10243  011BB2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10244  011BB8  0EF9               	movlw	-7
 10245  011BBA  0060  F033  FFE3   	movff	btemp+11,plusw1
 10246                           
 10247                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
 10248                           ;stkvar	_fmt @ sp[(-32)+-4]
 10249  011BC0  0EDC               	movlw	-36
 10250  011BC2  006F FF8F FFD9     	movff	plusw1,fsr2l
 10251  011BC8  0EDD               	movlw	-35
 10252  011BCA  006F FF8F FFDA     	movff	plusw1,fsr2h
 10253  011BD0  0E02               	movlw	2
 10254  011BD2  26DE               	addwf	postinc2,f,c
 10255  011BD4  0E00               	movlw	0
 10256  011BD6  22DD               	addwfc	postdec2,f,c
 10257  011BD8  D736               	goto	l11698
 10258  011BDA                     l11722:
 10259                           
 10260                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 10261                           ;stkvar	_fmt @ sp[(-32)+-4]
 10262  011BDA  0EDC               	movlw	-36
 10263  011BDC  006F FF8F FFD9     	movff	plusw1,fsr2l
 10264  011BE2  0EDD               	movlw	-35
 10265  011BE4  006F FF8F FFDA     	movff	plusw1,fsr2h
 10266  011BEA  006F FF7B FFF6     	movff	postinc2,tblptrl
 10267  011BF0  006F FF77 FFF7     	movff	postdec2,tblptrh
 10268  011BF6                     	if	0	;tblptru may be non-zero
 10269  011BF6                     	endif
 10270  011BF6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10271  011BF6  0E00               	movlw	low (__mediumconst shr (0+16))
 10272  011BF8  6EF8               	movwf	tblptru,c
 10273  011BFA                     	endif
 10274  011BFA  0008               	tblrd		*
 10275  011BFC  50F5               	movf	tablat,w,c
 10276  011BFE  0A73               	xorlw	115
 10277  011C00  A4D8               	btfss	status,2,c
 10278  011C02  D042               	goto	l11732
 10279                           
 10280                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 10281                           ;stkvar	_fmt @ sp[(-32)+-4]
 10282  011C04  0EDC               	movlw	-36
 10283  011C06  006F FF8F FFD9     	movff	plusw1,fsr2l
 10284  011C0C  0EDD               	movlw	-35
 10285  011C0E  006F FF8F FFDA     	movff	plusw1,fsr2h
 10286  011C14  2ADE               	incf	postinc2,f,c
 10287  011C16  0E00               	movlw	0
 10288  011C18  22DD               	addwfc	postdec2,f,c
 10289                           
 10290                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 10291                           ;stkvar	_ap @ sp[(-32)+-6]
 10292  011C1A  0EDA               	movlw	-38
 10293  011C1C  006F FF8F FFD9     	movff	plusw1,fsr2l
 10294  011C22  0EDB               	movlw	-37
 10295  011C24  006F FF8F FFDA     	movff	plusw1,fsr2h
 10296  011C2A  0E02               	movlw	2
 10297  011C2C  5EDE               	subwf	postinc2,f,c
 10298  011C2E  0E00               	movlw	0
 10299  011C30  5ADD               	subwfb	postdec2,f,c
 10300  011C32  006F FF78  F00B    	movff	postinc2,btemp+10
 10301  011C38  006F FF74  F00C    	movff	postdec2,btemp+11
 10302  011C3E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10303  011C44  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10304  011C4A  006F FF78  F00B    	movff	postinc2,btemp+10
 10305  011C50  006F FF74  F00C    	movff	postdec2,btemp+11
 10306                           
 10307                           ;stkvar	_cp @ sp[(-32)+29]
 10308  011C56  0EFE               	movlw	-2
 10309  011C58  0060  F033  FFE3   	movff	btemp+11,plusw1
 10310  011C5E  0EFD               	movlw	-3
 10311  011C60  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10312                           
 10313                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 10314                           ;stkvar	_cp @ sp[(-32)+29]
 10315  011C66  0EFD               	movlw	-3
 10316  011C68  006F FF8F FFE6     	movff	plusw1,postinc1
 10317  011C6E  006F FF8F FFE6     	movff	plusw1,postinc1
 10318                           
 10319                           ;stkvar	_fp @ sp[(-34)+-2]
 10320  011C74  0EDC               	movlw	-36
 10321  011C76  006F FF8F FFE6     	movff	plusw1,postinc1
 10322  011C7C  006F FF8F FFE6     	movff	plusw1,postinc1
 10323  011C82  EC08  F0B1         	call	_stoa	;wreg free
 10324  011C86  D2AF               	goto	l2284
 10325  011C88                     l11732:
 10326                           
 10327                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
 10328                           ;stkvar	_fmt @ sp[(-32)+-4]
 10329  011C88  0EDC               	movlw	-36
 10330  011C8A  006F FF8F FFD9     	movff	plusw1,fsr2l
 10331  011C90  0EDD               	movlw	-35
 10332  011C92  006F FF8F FFDA     	movff	plusw1,fsr2h
 10333  011C98  006F FF7B FFF6     	movff	postinc2,tblptrl
 10334  011C9E  006F FF77 FFF7     	movff	postdec2,tblptrh
 10335  011CA4                     	if	0	;tblptru may be non-zero
 10336  011CA4                     	endif
 10337  011CA4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10338  011CA4  0E00               	movlw	low (__mediumconst shr (0+16))
 10339  011CA6  6EF8               	movwf	tblptru,c
 10340  011CA8                     	endif
 10341  011CA8  0008               	tblrd		*
 10342  011CAA  50F5               	movf	tablat,w,c
 10343  011CAC  0A75               	xorlw	117
 10344  011CAE  A4D8               	btfss	status,2,c
 10345  011CB0  D07C               	goto	l11742
 10346                           
 10347                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
 10348                           ;stkvar	_fmt @ sp[(-32)+-4]
 10349  011CB2  0EDC               	movlw	-36
 10350  011CB4  006F FF8F FFD9     	movff	plusw1,fsr2l
 10351  011CBA  0EDD               	movlw	-35
 10352  011CBC  006F FF8F FFDA     	movff	plusw1,fsr2h
 10353  011CC2  2ADE               	incf	postinc2,f,c
 10354  011CC4  0E00               	movlw	0
 10355  011CC6  22DD               	addwfc	postdec2,f,c
 10356                           
 10357                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1185:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 10358                           ;stkvar	_ap @ sp[(-32)+-6]
 10359  011CC8  0EDA               	movlw	-38
 10360  011CCA  006F FF8F FFD9     	movff	plusw1,fsr2l
 10361  011CD0  0EDB               	movlw	-37
 10362  011CD2  006F FF8F FFDA     	movff	plusw1,fsr2h
 10363  011CD8  0E02               	movlw	2
 10364  011CDA  5EDE               	subwf	postinc2,f,c
 10365  011CDC  0E00               	movlw	0
 10366  011CDE  5ADD               	subwfb	postdec2,f,c
 10367  011CE0  006F FF78  F00B    	movff	postinc2,btemp+10
 10368  011CE6  006F FF74  F00C    	movff	postdec2,btemp+11
 10369  011CEC  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10370  011CF2  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10371  011CF8  006F FF78  F00B    	movff	postinc2,btemp+10
 10372  011CFE  006F FF74  F00C    	movff	postdec2,btemp+11
 10373  011D04  500B               	movf	(btemp+10)^0,w,c
 10374  011D06  6E11               	movwf	(btemp+16)^0,c
 10375  011D08  500C               	movf	(btemp+11)^0,w,c
 10376  011D0A  6E12               	movwf	(btemp+17)^0,c
 10377  011D0C  6A13               	clrf	(btemp+18)^0,c
 10378  011D0E  6A14               	clrf	(btemp+19)^0,c
 10379  011D10  6A15               	clrf	(btemp+20)^0,c
 10380  011D12  6A16               	clrf	(btemp+21)^0,c
 10381  011D14  6A17               	clrf	(btemp+22)^0,c
 10382  011D16  6A18               	clrf	(btemp+23)^0,c
 10383                           
 10384                           ;stkvar	_llu @ sp[(-32)+6]
 10385  011D18  0EE6               	movlw	-26
 10386  011D1A  0060  F047  FFE3   	movff	btemp+16,plusw1
 10387  011D20  0EE7               	movlw	-25
 10388  011D22  0060  F04B  FFE3   	movff	btemp+17,plusw1
 10389  011D28  0EE8               	movlw	-24
 10390  011D2A  0060  F04F  FFE3   	movff	btemp+18,plusw1
 10391  011D30  0EE9               	movlw	-23
 10392  011D32  0060  F053  FFE3   	movff	btemp+19,plusw1
 10393  011D38  0EEA               	movlw	-22
 10394  011D3A  0060  F057  FFE3   	movff	btemp+20,plusw1
 10395  011D40  0EEB               	movlw	-21
 10396  011D42  0060  F05B  FFE3   	movff	btemp+21,plusw1
 10397  011D48  0EEC               	movlw	-20
 10398  011D4A  0060  F05F  FFE3   	movff	btemp+22,plusw1
 10399  011D50  0EED               	movlw	-19
 10400  011D52  0060  F063  FFE3   	movff	btemp+23,plusw1
 10401                           
 10402                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1187:             return utoa
      +                          (fp, llu);
 10403                           ;stkvar	_llu @ sp[(-32)+6]
 10404  011D58  50E1               	movf	fsr1l,w,c
 10405  011D5A  0FE6               	addlw	-26
 10406  011D5C  6ED9               	movwf	fsr2l,c
 10407  011D5E  50E2               	movf	fsr1h,w,c
 10408  011D60  6EDA               	movwf	fsr2h,c
 10409  011D62  0EFF               	movlw	255
 10410  011D64  22DA               	addwfc	fsr2h,f,c
 10411  011D66  006F FF7B FFE6     	movff	postinc2,postinc1
 10412  011D6C  006F FF7B FFE6     	movff	postinc2,postinc1
 10413  011D72  006F FF7B FFE6     	movff	postinc2,postinc1
 10414  011D78  006F FF7B FFE6     	movff	postinc2,postinc1
 10415  011D7E  006F FF7B FFE6     	movff	postinc2,postinc1
 10416  011D84  006F FF7B FFE6     	movff	postinc2,postinc1
 10417  011D8A  006F FF7B FFE6     	movff	postinc2,postinc1
 10418  011D90  006F FF7B FFE6     	movff	postinc2,postinc1
 10419                           
 10420                           ;stkvar	_fp @ sp[(-40)+-2]
 10421  011D96  0ED6               	movlw	-42
 10422  011D98  006F FF8F FFE6     	movff	plusw1,postinc1
 10423  011D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 10424  011DA4  ECF2  F0AD         	call	_utoa	;wreg free
 10425  011DA8  D21E               	goto	l2284
 10426  011DAA                     l11742:
 10427                           
 10428                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 10429  011DAA  0E02               	movlw	2
 10430  011DAC  6EE6               	movwf	postinc1,c
 10431  011DAE  0E00               	movlw	0
 10432  011DB0  6EE6               	movwf	postinc1,c
 10433  011DB2  0EF3               	movlw	low STR_71
 10434  011DB4  6EE6               	movwf	postinc1,c
 10435  011DB6  0EFF               	movlw	high STR_71
 10436  011DB8  6EE6               	movwf	postinc1,c
 10437                           
 10438                           ;stkvar	_fmt @ sp[(-36)+-4]
 10439  011DBA  0ED8               	movlw	-40
 10440  011DBC  006F FF8F FFD9     	movff	plusw1,fsr2l
 10441  011DC2  0ED9               	movlw	-39
 10442  011DC4  006F FF8F FFDA     	movff	plusw1,fsr2h
 10443  011DCA  006F FF78  F00B    	movff	postinc2,btemp+10
 10444  011DD0  006F FF74  F00C    	movff	postdec2,btemp+11
 10445  011DD6  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10446  011DDC  0060  F033  FFE6   	movff	btemp+11,postinc1
 10447  011DE2  EC01  F0B6         	call	_strncmp	;wreg free
 10448  011DE6  5001               	movf	btemp^0,w,c
 10449  011DE8  1002               	iorwf	(btemp+1)^0,w,c
 10450  011DEA  A4D8               	btfss	status,2,c
 10451  011DEC  D039               	goto	l11752
 10452                           
 10453                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
 10454                           ;stkvar	_fmt @ sp[(-32)+-4]
 10455  011DEE  0EDC               	movlw	-36
 10456  011DF0  006F FF8F FFD9     	movff	plusw1,fsr2l
 10457  011DF6  0EDD               	movlw	-35
 10458  011DF8  006F FF8F FFDA     	movff	plusw1,fsr2h
 10459  011DFE  0E02               	movlw	2
 10460  011E00  26DE               	addwf	postinc2,f,c
 10461  011E02  0E00               	movlw	0
 10462  011E04  22DD               	addwfc	postdec2,f,c
 10463                           
 10464                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 10465                           ;stkvar	_ap @ sp[(-32)+-6]
 10466  011E06  0EDA               	movlw	-38
 10467  011E08  006F FF8F FFD9     	movff	plusw1,fsr2l
 10468  011E0E  0EDB               	movlw	-37
 10469  011E10  006F FF8F FFDA     	movff	plusw1,fsr2h
 10470  011E16  0E04               	movlw	4
 10471  011E18  5EDE               	subwf	postinc2,f,c
 10472  011E1A  0E00               	movlw	0
 10473  011E1C  5ADD               	subwfb	postdec2,f,c
 10474  011E1E  006F FF78  F00B    	movff	postinc2,btemp+10
 10475  011E24  006F FF74  F00C    	movff	postdec2,btemp+11
 10476  011E2A  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10477  011E30  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10478  011E36  006F FF78  F009    	movff	postinc2,btemp+8
 10479  011E3C  006F FF78  F00A    	movff	postinc2,btemp+9
 10480  011E42  006F FF78  F00B    	movff	postinc2,btemp+10
 10481  011E48  006F FF78  F00C    	movff	postinc2,btemp+11
 10482  011E4E  5009               	movf	(btemp+8)^0,w,c
 10483  011E50  6E11               	movwf	(btemp+16)^0,c
 10484  011E52  500A               	movf	(btemp+9)^0,w,c
 10485  011E54  6E12               	movwf	(btemp+17)^0,c
 10486  011E56  500B               	movf	(btemp+10)^0,w,c
 10487  011E58  6E13               	movwf	(btemp+18)^0,c
 10488  011E5A  500C               	movf	(btemp+11)^0,w,c
 10489  011E5C  6E14               	movwf	(btemp+19)^0,c
 10490  011E5E  D758               	goto	L5
 10491  011E60                     l11752:
 10492                           
 10493                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
 10494                           ;stkvar	_fmt @ sp[(-32)+-4]
 10495  011E60  0EDC               	movlw	-36
 10496  011E62  006F FF8F FFD9     	movff	plusw1,fsr2l
 10497  011E68  0EDD               	movlw	-35
 10498  011E6A  006F FF8F FFDA     	movff	plusw1,fsr2h
 10499  011E70  006F FF7B FFF6     	movff	postinc2,tblptrl
 10500  011E76  006F FF77 FFF7     	movff	postdec2,tblptrh
 10501  011E7C                     	if	0	;tblptru may be non-zero
 10502  011E7C                     	endif
 10503  011E7C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10504  011E7C  0E00               	movlw	low (__mediumconst shr (0+16))
 10505  011E7E  6EF8               	movwf	tblptru,c
 10506  011E80                     	endif
 10507  011E80  0008               	tblrd		*
 10508  011E82  50F5               	movf	tablat,w,c
 10509  011E84  0A78               	xorlw	120
 10510  011E86  B4D8               	btfsc	status,2,c
 10511  011E88  D015               	goto	u11460
 10512                           
 10513                           ;stkvar	_fmt @ sp[(-32)+-4]
 10514  011E8A  0EDC               	movlw	-36
 10515  011E8C  006F FF8F FFD9     	movff	plusw1,fsr2l
 10516  011E92  0EDD               	movlw	-35
 10517  011E94  006F FF8F FFDA     	movff	plusw1,fsr2h
 10518  011E9A  006F FF7B FFF6     	movff	postinc2,tblptrl
 10519  011EA0  006F FF77 FFF7     	movff	postdec2,tblptrh
 10520  011EA6                     	if	0	;tblptru may be non-zero
 10521  011EA6                     	endif
 10522  011EA6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10523  011EA6  0E00               	movlw	low (__mediumconst shr (0+16))
 10524  011EA8  6EF8               	movwf	tblptru,c
 10525  011EAA                     	endif
 10526  011EAA  0008               	tblrd		*
 10527  011EAC  50F5               	movf	tablat,w,c
 10528  011EAE  0A58               	xorlw	88
 10529  011EB0  A4D8               	btfss	status,2,c
 10530  011EB2  D094               	goto	l11766
 10531  011EB4                     u11460:
 10532                           
 10533                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
 10534                           ;stkvar	_fmt @ sp[(-32)+-4]
 10535  011EB4  0EDC               	movlw	-36
 10536  011EB6  006F FF8F FFD9     	movff	plusw1,fsr2l
 10537  011EBC  0EDD               	movlw	-35
 10538  011EBE  006F FF8F FFDA     	movff	plusw1,fsr2h
 10539  011EC4  006F FF7B FFF6     	movff	postinc2,tblptrl
 10540  011ECA  006F FF77 FFF7     	movff	postdec2,tblptrh
 10541  011ED0                     	if	0	;tblptru may be non-zero
 10542  011ED0                     	endif
 10543  011ED0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10544  011ED0  0E00               	movlw	low (__mediumconst shr (0+16))
 10545  011ED2  6EF8               	movwf	tblptru,c
 10546  011ED4                     	endif
 10547                           
 10548                           ;stkvar	_c @ sp[(-32)+31]
 10549  011ED4  0008               	tblrd		*
 10550  011ED6  0EFF               	movlw	-1
 10551  011ED8  006F FFD7 FFE3     	movff	tablat,plusw1
 10552                           
 10553                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
 10554                           ;stkvar	_fmt @ sp[(-32)+-4]
 10555  011EDE  0EDC               	movlw	-36
 10556  011EE0  006F FF8F FFD9     	movff	plusw1,fsr2l
 10557  011EE6  0EDD               	movlw	-35
 10558  011EE8  006F FF8F FFDA     	movff	plusw1,fsr2h
 10559  011EEE  2ADE               	incf	postinc2,f,c
 10560  011EF0  0E00               	movlw	0
 10561  011EF2  22DD               	addwfc	postdec2,f,c
 10562                           
 10563                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 10564                           ;stkvar	_ap @ sp[(-32)+-6]
 10565  011EF4  0EDA               	movlw	-38
 10566  011EF6  006F FF8F FFD9     	movff	plusw1,fsr2l
 10567  011EFC  0EDB               	movlw	-37
 10568  011EFE  006F FF8F FFDA     	movff	plusw1,fsr2h
 10569  011F04  0E02               	movlw	2
 10570  011F06  5EDE               	subwf	postinc2,f,c
 10571  011F08  0E00               	movlw	0
 10572  011F0A  5ADD               	subwfb	postdec2,f,c
 10573  011F0C  006F FF78  F00B    	movff	postinc2,btemp+10
 10574  011F12  006F FF74  F00C    	movff	postdec2,btemp+11
 10575  011F18  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10576  011F1E  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10577  011F24  006F FF78  F00B    	movff	postinc2,btemp+10
 10578  011F2A  006F FF74  F00C    	movff	postdec2,btemp+11
 10579  011F30  500B               	movf	(btemp+10)^0,w,c
 10580  011F32  6E11               	movwf	(btemp+16)^0,c
 10581  011F34  500C               	movf	(btemp+11)^0,w,c
 10582  011F36  6E12               	movwf	(btemp+17)^0,c
 10583  011F38  6A13               	clrf	(btemp+18)^0,c
 10584  011F3A  6A14               	clrf	(btemp+19)^0,c
 10585  011F3C  6A15               	clrf	(btemp+20)^0,c
 10586  011F3E  6A16               	clrf	(btemp+21)^0,c
 10587  011F40  6A17               	clrf	(btemp+22)^0,c
 10588  011F42  6A18               	clrf	(btemp+23)^0,c
 10589                           
 10590                           ;stkvar	_llu @ sp[(-32)+6]
 10591  011F44  0EE6               	movlw	-26
 10592  011F46  0060  F047  FFE3   	movff	btemp+16,plusw1
 10593  011F4C  0EE7               	movlw	-25
 10594  011F4E  0060  F04B  FFE3   	movff	btemp+17,plusw1
 10595  011F54  0EE8               	movlw	-24
 10596  011F56  0060  F04F  FFE3   	movff	btemp+18,plusw1
 10597  011F5C  0EE9               	movlw	-23
 10598  011F5E  0060  F053  FFE3   	movff	btemp+19,plusw1
 10599  011F64  0EEA               	movlw	-22
 10600  011F66  0060  F057  FFE3   	movff	btemp+20,plusw1
 10601  011F6C  0EEB               	movlw	-21
 10602  011F6E  0060  F05B  FFE3   	movff	btemp+21,plusw1
 10603  011F74  0EEC               	movlw	-20
 10604  011F76  0060  F05F  FFE3   	movff	btemp+22,plusw1
 10605  011F7C  0EED               	movlw	-19
 10606  011F7E  0060  F063  FFE3   	movff	btemp+23,plusw1
 10607                           
 10608                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
 10609                           ;stkvar	_c @ sp[(-32)+31]
 10610  011F84  0EFF               	movlw	-1
 10611  011F86  50E3               	movf	plusw1,w,c
 10612  011F88  6EE6               	movwf	postinc1,c
 10613                           
 10614                           ;stkvar	_llu @ sp[(-33)+6]
 10615  011F8A  50E1               	movf	fsr1l,w,c
 10616  011F8C  0FE5               	addlw	-27
 10617  011F8E  6ED9               	movwf	fsr2l,c
 10618  011F90  50E2               	movf	fsr1h,w,c
 10619  011F92  6EDA               	movwf	fsr2h,c
 10620  011F94  0EFF               	movlw	255
 10621  011F96  22DA               	addwfc	fsr2h,f,c
 10622  011F98  006F FF7B FFE6     	movff	postinc2,postinc1
 10623  011F9E  006F FF7B FFE6     	movff	postinc2,postinc1
 10624  011FA4  006F FF7B FFE6     	movff	postinc2,postinc1
 10625  011FAA  006F FF7B FFE6     	movff	postinc2,postinc1
 10626  011FB0  006F FF7B FFE6     	movff	postinc2,postinc1
 10627  011FB6  006F FF7B FFE6     	movff	postinc2,postinc1
 10628  011FBC  006F FF7B FFE6     	movff	postinc2,postinc1
 10629  011FC2  006F FF7B FFE6     	movff	postinc2,postinc1
 10630                           
 10631                           ;stkvar	_fp @ sp[(-41)+-2]
 10632  011FC8  0ED5               	movlw	-43
 10633  011FCA  006F FF8F FFE6     	movff	plusw1,postinc1
 10634  011FD0  006F FF8F FFE6     	movff	plusw1,postinc1
 10635  011FD6  EC8E  F0A8         	call	_xtoa	;wreg free
 10636  011FDA  D105               	goto	l2284
 10637  011FDC                     l11766:
 10638                           
 10639                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
 10640  011FDC  0E02               	movlw	2
 10641  011FDE  6EE6               	movwf	postinc1,c
 10642  011FE0  0E00               	movlw	0
 10643  011FE2  6EE6               	movwf	postinc1,c
 10644  011FE4  0EF6               	movlw	low STR_76
 10645  011FE6  6EE6               	movwf	postinc1,c
 10646  011FE8  0EFF               	movlw	high STR_76
 10647  011FEA  6EE6               	movwf	postinc1,c
 10648                           
 10649                           ;stkvar	_fmt @ sp[(-36)+-4]
 10650  011FEC  0ED8               	movlw	-40
 10651  011FEE  006F FF8F FFD9     	movff	plusw1,fsr2l
 10652  011FF4  0ED9               	movlw	-39
 10653  011FF6  006F FF8F FFDA     	movff	plusw1,fsr2h
 10654  011FFC  006F FF78  F00B    	movff	postinc2,btemp+10
 10655  012002  006F FF74  F00C    	movff	postdec2,btemp+11
 10656  012008  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10657  01200E  0060  F033  FFE6   	movff	btemp+11,postinc1
 10658  012014  EC01  F0B6         	call	_strncmp	;wreg free
 10659  012018  5001               	movf	btemp^0,w,c
 10660  01201A  1002               	iorwf	(btemp+1)^0,w,c
 10661  01201C  B4D8               	btfsc	status,2,c
 10662  01201E  D022               	goto	u11480
 10663  012020  0E02               	movlw	2
 10664  012022  6EE6               	movwf	postinc1,c
 10665  012024  0E00               	movlw	0
 10666  012026  6EE6               	movwf	postinc1,c
 10667  012028  0EE7               	movlw	low STR_80
 10668  01202A  6EE6               	movwf	postinc1,c
 10669  01202C  0EFF               	movlw	high STR_80
 10670  01202E  6EE6               	movwf	postinc1,c
 10671                           
 10672                           ;stkvar	_fmt @ sp[(-36)+-4]
 10673  012030  0ED8               	movlw	-40
 10674  012032  006F FF8F FFD9     	movff	plusw1,fsr2l
 10675  012038  0ED9               	movlw	-39
 10676  01203A  006F FF8F FFDA     	movff	plusw1,fsr2h
 10677  012040  006F FF78  F00B    	movff	postinc2,btemp+10
 10678  012046  006F FF74  F00C    	movff	postdec2,btemp+11
 10679  01204C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10680  012052  0060  F033  FFE6   	movff	btemp+11,postinc1
 10681  012058  EC01  F0B6         	call	_strncmp	;wreg free
 10682  01205C  5001               	movf	btemp^0,w,c
 10683  01205E  1002               	iorwf	(btemp+1)^0,w,c
 10684  012060  A4D8               	btfss	status,2,c
 10685  012062  D058               	goto	l11780
 10686  012064                     u11480:
 10687                           
 10688                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
 10689                           ;stkvar	_fmt @ sp[(-32)+-4]
 10690  012064  0EDC               	movlw	-36
 10691  012066  006F FF8F FFD9     	movff	plusw1,fsr2l
 10692  01206C  0EDD               	movlw	-35
 10693  01206E  006F FF8F FFDA     	movff	plusw1,fsr2h
 10694  012074  006F FF78  F00B    	movff	postinc2,btemp+10
 10695  01207A  006F FF74  F00C    	movff	postdec2,btemp+11
 10696  012080  0E01               	movlw	1
 10697  012082  260B               	addwf	(btemp+10)^0,f,c
 10698  012084  0E00               	movlw	0
 10699  012086  220C               	addwfc	(btemp+11)^0,f,c
 10700  012088  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 10701  01208E  0060  F033  FFF7   	movff	btemp+11,tblptrh
 10702  012094                     	if	0	;tblptru may be non-zero
 10703  012094                     	endif
 10704  012094                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10705  012094  0E00               	movlw	low (__mediumconst shr (0+16))
 10706  012096  6EF8               	movwf	tblptru,c
 10707  012098                     	endif
 10708                           
 10709                           ;stkvar	_c @ sp[(-32)+31]
 10710  012098  0008               	tblrd		*
 10711  01209A  0EFF               	movlw	-1
 10712  01209C  006F FFD7 FFE3     	movff	tablat,plusw1
 10713                           
 10714                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
 10715                           ;stkvar	_fmt @ sp[(-32)+-4]
 10716  0120A2  0EDC               	movlw	-36
 10717  0120A4  006F FF8F FFD9     	movff	plusw1,fsr2l
 10718  0120AA  0EDD               	movlw	-35
 10719  0120AC  006F FF8F FFDA     	movff	plusw1,fsr2h
 10720  0120B2  0E02               	movlw	2
 10721  0120B4  26DE               	addwf	postinc2,f,c
 10722  0120B6  0E00               	movlw	0
 10723  0120B8  22DD               	addwfc	postdec2,f,c
 10724                           
 10725                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 10726                           ;stkvar	_ap @ sp[(-32)+-6]
 10727  0120BA  0EDA               	movlw	-38
 10728  0120BC  006F FF8F FFD9     	movff	plusw1,fsr2l
 10729  0120C2  0EDB               	movlw	-37
 10730  0120C4  006F FF8F FFDA     	movff	plusw1,fsr2h
 10731  0120CA  0E04               	movlw	4
 10732  0120CC  5EDE               	subwf	postinc2,f,c
 10733  0120CE  0E00               	movlw	0
 10734  0120D0  5ADD               	subwfb	postdec2,f,c
 10735  0120D2  006F FF78  F00B    	movff	postinc2,btemp+10
 10736  0120D8  006F FF74  F00C    	movff	postdec2,btemp+11
 10737  0120DE  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10738  0120E4  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10739  0120EA  006F FF78  F009    	movff	postinc2,btemp+8
 10740  0120F0  006F FF78  F00A    	movff	postinc2,btemp+9
 10741  0120F6  006F FF78  F00B    	movff	postinc2,btemp+10
 10742  0120FC  006F FF78  F00C    	movff	postinc2,btemp+11
 10743  012102  5009               	movf	(btemp+8)^0,w,c
 10744  012104  6E11               	movwf	(btemp+16)^0,c
 10745  012106  500A               	movf	(btemp+9)^0,w,c
 10746  012108  6E12               	movwf	(btemp+17)^0,c
 10747  01210A  500B               	movf	(btemp+10)^0,w,c
 10748  01210C  6E13               	movwf	(btemp+18)^0,c
 10749  01210E  500C               	movf	(btemp+11)^0,w,c
 10750  012110  6E14               	movwf	(btemp+19)^0,c
 10751  012112  D714               	goto	L6
 10752  012114                     l11780:
 10753                           
 10754                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 10755                           ;stkvar	_fmt @ sp[(-32)+-4]
 10756  012114  0EDC               	movlw	-36
 10757  012116  006F FF8F FFD9     	movff	plusw1,fsr2l
 10758  01211C  0EDD               	movlw	-35
 10759  01211E  006F FF8F FFDA     	movff	plusw1,fsr2h
 10760  012124  006F FF7B FFF6     	movff	postinc2,tblptrl
 10761  01212A  006F FF77 FFF7     	movff	postdec2,tblptrh
 10762  012130                     	if	0	;tblptru may be non-zero
 10763  012130                     	endif
 10764  012130                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10765  012130  0E00               	movlw	low (__mediumconst shr (0+16))
 10766  012132  6EF8               	movwf	tblptru,c
 10767  012134                     	endif
 10768  012134  0008               	tblrd		*
 10769  012136  50F5               	movf	tablat,w,c
 10770  012138  0A25               	xorlw	37
 10771  01213A  A4D8               	btfss	status,2,c
 10772  01213C  D01A               	goto	l11790
 10773                           
 10774                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 10775                           ;stkvar	_fmt @ sp[(-32)+-4]
 10776  01213E  0EDC               	movlw	-36
 10777  012140  006F FF8F FFD9     	movff	plusw1,fsr2l
 10778  012146  0EDD               	movlw	-35
 10779  012148  006F FF8F FFDA     	movff	plusw1,fsr2h
 10780  01214E  2ADE               	incf	postinc2,f,c
 10781  012150  0E00               	movlw	0
 10782  012152  22DD               	addwfc	postdec2,f,c
 10783                           
 10784                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 10785                           ;stkvar	_fp @ sp[(-32)+-2]
 10786  012154  0EDE               	movlw	-34
 10787  012156  006F FF8F FFE6     	movff	plusw1,postinc1
 10788  01215C  006F FF8F FFE6     	movff	plusw1,postinc1
 10789  012162  0E25               	movlw	37
 10790  012164  6EE6               	movwf	postinc1,c
 10791  012166  0E00               	movlw	0
 10792  012168  6EE6               	movwf	postinc1,c
 10793  01216A  EC8F  F0C2         	call	_fputc	;wreg free
 10794  01216E                     l11786:
 10795                           
 10796                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 10797  01216E  0E01               	movlw	1
 10798  012170  D00C               	goto	L7
 10799  012172                     l11790:
 10800                           
 10801                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 10802                           ;stkvar	_fmt @ sp[(-32)+-4]
 10803  012172  0EDC               	movlw	-36
 10804  012174  006F FF8F FFD9     	movff	plusw1,fsr2l
 10805  01217A  0EDD               	movlw	-35
 10806  01217C  006F FF8F FFDA     	movff	plusw1,fsr2h
 10807  012182  2ADE               	incf	postinc2,f,c
 10808  012184  0E00               	movlw	0
 10809  012186  22DD               	addwfc	postdec2,f,c
 10810                           
 10811                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 10812  012188  0E00               	movlw	0
 10813  01218A                     L7:
 10814  01218A  6E01               	movwf	btemp^0,c
 10815  01218C  0E00               	movlw	0
 10816  01218E  6E02               	movwf	(btemp+1)^0,c
 10817  012190  D02A               	goto	l2284
 10818  012192                     l11796:
 10819                           
 10820                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 10821                           ;stkvar	_fp @ sp[(-32)+-2]
 10822  012192  0EDE               	movlw	-34
 10823  012194  006F FF8F FFE6     	movff	plusw1,postinc1
 10824  01219A  006F FF8F FFE6     	movff	plusw1,postinc1
 10825                           
 10826                           ;stkvar	_fmt @ sp[(-34)+-4]
 10827  0121A0  0EDA               	movlw	-38
 10828  0121A2  006F FF8F FFD9     	movff	plusw1,fsr2l
 10829  0121A8  0EDB               	movlw	-37
 10830  0121AA  006F FF8F FFDA     	movff	plusw1,fsr2h
 10831  0121B0  006F FF7B FFF6     	movff	postinc2,tblptrl
 10832  0121B6  006F FF77 FFF7     	movff	postdec2,tblptrh
 10833  0121BC                     	if	0	;tblptru may be non-zero
 10834  0121BC                     	endif
 10835  0121BC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10836  0121BC  0E00               	movlw	low (__mediumconst shr (0+16))
 10837  0121BE  6EF8               	movwf	tblptru,c
 10838  0121C0                     	endif
 10839  0121C0  0008               	tblrd		*
 10840  0121C2  50F5               	movf	tablat,w,c
 10841  0121C4  6EE6               	movwf	postinc1,c
 10842  0121C6  0E00               	movlw	0
 10843  0121C8  6EE6               	movwf	postinc1,c
 10844  0121CA  EC8F  F0C2         	call	_fputc	;wreg free
 10845                           
 10846                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 10847                           ;stkvar	_fmt @ sp[(-32)+-4]
 10848  0121CE  0EDC               	movlw	-36
 10849  0121D0  006F FF8F FFD9     	movff	plusw1,fsr2l
 10850  0121D6  0EDD               	movlw	-35
 10851  0121D8  006F FF8F FFDA     	movff	plusw1,fsr2h
 10852  0121DE  2ADE               	incf	postinc2,f,c
 10853  0121E0  0E00               	movlw	0
 10854  0121E2  22DD               	addwfc	postdec2,f,c
 10855  0121E4  D7C4               	goto	l11786
 10856  0121E6                     l2284:
 10857                           
 10858                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 10859  0121E6  0EDA               	movlw	218
 10860  0121E8  26E1               	addwf	fsr1l,f,c
 10861  0121EA  0EFF               	movlw	255
 10862  0121EC  22E2               	addwfc	fsr1h,f,c
 10863  0121EE  0012               	return		;funcret
 10864  0121F0                     __end_of_vfpfcnvrt:
 10865                           	opt callstack 0
 10866                           
 10867 ;; *************** function _xtoa *****************
 10868 ;; Defined at:
 10869 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 10870 ;; Parameters:    Size  Location     Type
 10871 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10872 ;;		 -> f(6), NULL(0), 
 10873 ;;  d               8  [STACK] unsigned long long 
 10874 ;;  x               1  [STACK] unsigned char 
 10875 ;; Auto vars:     Size  Location     Type
 10876 ;;  n               8  [STACK] unsigned long long 
 10877 ;;  c               2  [STACK] int 
 10878 ;;  i               2  [STACK] int 
 10879 ;;  w               2  [STACK] int 
 10880 ;;  p               2  [STACK] int 
 10881 ;; Return value:  Size  Location     Type
 10882 ;;                  2  [STACK] int 
 10883 ;; Registers used:
 10884 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 10885 ;; Tracked objects:
 10886 ;;		On entry : 0/0
 10887 ;;		On exit  : 0/0
 10888 ;;		Unchanged: 0/0
 10889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10894 ;;Total ram usage:        0 bytes
 10895 ;; Hardware stack levels used:    1
 10896 ;; Hardware stack levels required when called:   20
 10897 ;; This function calls:
 10898 ;;		_isalpha
 10899 ;;		_isupper
 10900 ;;		_pad
 10901 ;;		_toupper
 10902 ;; This function is called by:
 10903 ;;		_vfpfcnvrt
 10904 ;; This function uses a reentrant model
 10905 ;;
 10906                           
 10907                           	psect	text42
 10908  01511C                     __ptext42:
 10909                           	opt callstack 0
 10910  01511C                     _xtoa:
 10911                           	opt callstack 0
 10912                           
 10913                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 10914  01511C  0E14               	movlw	20
 10915  01511E  26E1               	addwf	fsr1l,f,c
 10916  015120  0E00               	movlw	0
 10917  015122  22E2               	addwfc	fsr1h,f,c
 10918                           
 10919                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
 10920                           
 10921                           ;incstack = 0
 10922 ;; hardware stack exceeded
 10923  015124  AE24               	btfss	(_prec+1)^0,7,c
 10924                           
 10925                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
 10926  015126  9225               	bcf	_flags^0,1,c
 10927                           
 10928                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
 10929  015128  BE24               	btfsc	(_prec+1)^0,7,c
 10930  01512A  D005               	goto	u11010
 10931  01512C  5024               	movf	(_prec+1)^0,w,c
 10932  01512E  E110               	bnz	l11520
 10933  015130  0423               	decf	_prec^0,w,c
 10934  015132  B0D8               	btfsc	status,0,c
 10935  015134  D00D               	goto	l11520
 10936  015136                     u11010:
 10937  015136  0E01               	movlw	1
 10938  015138  6E0B               	movwf	(btemp+10)^0,c
 10939  01513A  0E00               	movlw	0
 10940  01513C  6E0C               	movwf	(btemp+11)^0,c
 10941                           
 10942                           ;stkvar	_p @ sp[(-20)+18]
 10943  01513E  0EFE               	movlw	-2
 10944  015140  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10945  015146  0EFF               	movlw	-1
 10946  015148  0060  F033  FFE3   	movff	btemp+11,plusw1
 10947  01514E  D008               	goto	l2234
 10948  015150                     l11520:
 10949                           
 10950                           ;stkvar	_p @ sp[(-20)+18]
 10951  015150  0EFE               	movlw	-2
 10952  015152  0060  F08F  FFE3   	movff	_prec,plusw1
 10953  015158  0EFF               	movlw	-1
 10954  01515A  0060  F093  FFE3   	movff	_prec+1,plusw1
 10955  015160                     l2234:
 10956                           
 10957                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 10958                           ;stkvar	_w @ sp[(-20)+16]
 10959  015160  0EFC               	movlw	-4
 10960  015162  0060  F087  FFE3   	movff	_width,plusw1
 10961  015168  0EFD               	movlw	-3
 10962  01516A  0060  F08B  FFE3   	movff	_width+1,plusw1
 10963                           
 10964                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
 10965  015170  A825               	btfss	_flags^0,4,c
 10966  015172  D00B               	goto	l11526
 10967                           
 10968                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 10969                           ;stkvar	_w @ sp[(-20)+16]
 10970  015174  50E1               	movf	fsr1l,w,c
 10971  015176  0FFC               	addlw	-4
 10972  015178  6ED9               	movwf	fsr2l,c
 10973  01517A  50E2               	movf	fsr1h,w,c
 10974  01517C  6EDA               	movwf	fsr2h,c
 10975  01517E  0EFF               	movlw	255
 10976  015180  22DA               	addwfc	fsr2h,f,c
 10977  015182  0EFE               	movlw	254
 10978  015184  26DE               	addwf	postinc2,f,c
 10979  015186  0EFF               	movlw	255
 10980  015188  22DD               	addwfc	postdec2,f,c
 10981  01518A                     l11526:
 10982                           
 10983                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 10984                           ;stkvar	_d @ sp[(-20)+-10]
 10985  01518A  0EE2               	movlw	226
 10986  01518C  24E1               	addwf	fsr1l,w,c
 10987  01518E  6ED9               	movwf	fsr2l,c
 10988  015190  0EFF               	movlw	255
 10989  015192  20E2               	addwfc	fsr1h,w,c
 10990  015194  6EDA               	movwf	fsr2h,c
 10991                           
 10992                           ;stkvar	_n @ sp[(-20)+4]
 10993  015196  0E08               	movlw	8
 10994  015198  6E01               	movwf	btemp^0,c
 10995  01519A  0EF0               	movlw	-16
 10996  01519C                     us1103999:
 10997  01519C  006F FF7B FFE3     	movff	postinc2,plusw1
 10998  0151A2  28E8               	incf	wreg,w,c
 10999  0151A4  2E01               	decfsz	btemp^0,f,c
 11000  0151A6  D7FA               	bra	us1103999
 11001                           
 11002                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
 11003  0151A8  0E4F               	movlw	79
 11004  0151AA  6E0B               	movwf	(btemp+10)^0,c
 11005  0151AC  0E00               	movlw	0
 11006  0151AE  6E0C               	movwf	(btemp+11)^0,c
 11007                           
 11008                           ;stkvar	_i @ sp[(-20)+14]
 11009  0151B0  0EFA               	movlw	-6
 11010  0151B2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11011  0151B8  0EFB               	movlw	-5
 11012  0151BA  0060  F033  FFE3   	movff	btemp+11,plusw1
 11013                           
 11014                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
 11015  0151C0  0103               	movlb	3	; () banked
 11016  0151C2  6BE3               	clrf	(_dbuf+79)& (0+255),b
 11017                           
 11018                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11019  0151C4  D0EE               	goto	l11564
 11020  0151C6                     l11532:
 11021                           
 11022                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 11023                           ;stkvar	_i @ sp[(-20)+14]
 11024  0151C6  50E1               	movf	fsr1l,w,c
 11025  0151C8  0FFA               	addlw	-6
 11026  0151CA  6ED9               	movwf	fsr2l,c
 11027  0151CC  50E2               	movf	fsr1h,w,c
 11028  0151CE  6EDA               	movwf	fsr2h,c
 11029  0151D0  0EFF               	movlw	255
 11030  0151D2  22DA               	addwfc	fsr2h,f,c
 11031  0151D4  06DE               	decf	postinc2,f,c
 11032  0151D6  0E00               	movlw	0
 11033  0151D8  5ADD               	subwfb	postdec2,f,c
 11034                           
 11035                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
 11036                           ;stkvar	_n @ sp[(-20)+4]
 11037  0151DA  0EF0               	movlw	-16
 11038  0151DC  006F FF8C  F00B    	movff	plusw1,btemp+10
 11039  0151E2  0EF1               	movlw	-15
 11040  0151E4  006F FF8C  F00C    	movff	plusw1,btemp+11
 11041  0151EA  0E0F               	movlw	15
 11042  0151EC  160B               	andwf	(btemp+10)^0,f,c
 11043  0151EE  0E00               	movlw	0
 11044  0151F0  160C               	andwf	(btemp+11)^0,f,c
 11045                           
 11046                           ;stkvar	_c @ sp[(-20)+12]
 11047  0151F2  0EF8               	movlw	-8
 11048  0151F4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11049  0151FA  0EF9               	movlw	-7
 11050  0151FC  0060  F033  FFE3   	movff	btemp+11,plusw1
 11051                           
 11052                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 11053                           ;stkvar	_c @ sp[(-20)+12]
 11054  015202  0EF9               	movlw	-7
 11055  015204  BEE3               	btfsc	plusw1,7,c
 11056  015206  D00F               	goto	l11540
 11057  015208  0EF9               	movlw	-7
 11058  01520A  50E3               	movf	plusw1,w,c
 11059  01520C  E108               	bnz	u11040
 11060  01520E  0EF8               	movlw	-8
 11061  015210  006F FF8C  F001    	movff	plusw1,btemp
 11062  015216  0E0A               	movlw	10
 11063  015218  5E01               	subwf	btemp^0,f,c
 11064  01521A  A0D8               	btfss	status,0,c
 11065  01521C  D004               	goto	l11540
 11066  01521E                     u11040:
 11067                           
 11068                           ;stkvar	_c @ sp[(-20)+12]
 11069  01521E  0EF8               	movlw	-8
 11070  015220  50E3               	movf	plusw1,w,c
 11071  015222  0F57               	addlw	87
 11072  015224  D003               	goto	L8
 11073  015226                     l11540:
 11074                           
 11075                           ;stkvar	_c @ sp[(-20)+12]
 11076  015226  0EF8               	movlw	-8
 11077  015228  50E3               	movf	plusw1,w,c
 11078  01522A  0F30               	addlw	48
 11079  01522C                     L8:
 11080  01522C  6E0B               	movwf	(btemp+10)^0,c
 11081  01522E  0EF9               	movlw	-7
 11082  015230  006F FF8C  F00C    	movff	plusw1,btemp+11
 11083  015236  0E00               	movlw	0
 11084  015238  220C               	addwfc	(btemp+11)^0,f,c
 11085                           
 11086                           ;stkvar	_c @ sp[(-20)+12]
 11087  01523A  0EF8               	movlw	-8
 11088  01523C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11089  015242  0EF9               	movlw	-7
 11090  015244  0060  F033  FFE3   	movff	btemp+11,plusw1
 11091  01524A  0EBF               	movlw	191
 11092  01524C  6E0B               	movwf	(btemp+10)^0,c
 11093  01524E  0EFF               	movlw	255
 11094  015250  6E0C               	movwf	(btemp+11)^0,c
 11095                           
 11096                           ;stkvar	_x @ sp[(-20)+-11]
 11097  015252  0EE1               	movlw	-31
 11098  015254  50E3               	movf	plusw1,w,c
 11099  015256  6E09               	movwf	(btemp+8)^0,c
 11100  015258  6A0A               	clrf	(btemp+9)^0,c
 11101  01525A  500B               	movf	(btemp+10)^0,w,c
 11102  01525C  2609               	addwf	(btemp+8)^0,f,c
 11103  01525E  500C               	movf	(btemp+11)^0,w,c
 11104  015260  220A               	addwfc	(btemp+9)^0,f,c
 11105  015262  500A               	movf	(btemp+9)^0,w,c
 11106  015264  E106               	bnz	u11050
 11107  015266  0E1A               	movlw	26
 11108  015268  5C09               	subwf	(btemp+8)^0,w,c
 11109  01526A  B0D8               	btfsc	status,0,c
 11110  01526C  D002               	goto	u11050
 11111  01526E  0E01               	movlw	1
 11112  015270  D001               	goto	u11060
 11113  015272                     u11050:
 11114  015272  0E00               	movlw	0
 11115  015274                     u11060:
 11116  015274  6E0B               	movwf	(btemp+10)^0,c
 11117  015276  6A0C               	clrf	(btemp+11)^0,c
 11118                           
 11119                           ;stkvar	_xtoa$5304 @ sp[(-20)+2]
 11120  015278  0EEE               	movlw	-18
 11121  01527A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11122  015280  0EEF               	movlw	-17
 11123  015282  0060  F033  FFE3   	movff	btemp+11,plusw1
 11124                           
 11125                           ;stkvar	_xtoa$5304 @ sp[(-20)+2]
 11126  015288  0EEE               	movlw	-18
 11127  01528A  006F FF8C  F001    	movff	plusw1,btemp
 11128  015290  0EEF               	movlw	-17
 11129  015292  50E3               	movf	plusw1,w,c
 11130  015294  1001               	iorwf	btemp^0,w,c
 11131  015296  B4D8               	btfsc	status,2,c
 11132  015298  D041               	goto	l11556
 11133  01529A  0E9F               	movlw	159
 11134  01529C  6E0B               	movwf	(btemp+10)^0,c
 11135  01529E  0EFF               	movlw	255
 11136  0152A0  6E0C               	movwf	(btemp+11)^0,c
 11137                           
 11138                           ;stkvar	_c @ sp[(-20)+12]
 11139  0152A2  0EF8               	movlw	-8
 11140  0152A4  006F FF8C  F009    	movff	plusw1,btemp+8
 11141  0152AA  0EF9               	movlw	-7
 11142  0152AC  006F FF8C  F00A    	movff	plusw1,btemp+9
 11143  0152B2  0E20               	movlw	32
 11144  0152B4  1209               	iorwf	(btemp+8)^0,f,c
 11145  0152B6  0E00               	movlw	0
 11146  0152B8  120A               	iorwf	(btemp+9)^0,f,c
 11147  0152BA  500B               	movf	(btemp+10)^0,w,c
 11148  0152BC  2609               	addwf	(btemp+8)^0,f,c
 11149  0152BE  500C               	movf	(btemp+11)^0,w,c
 11150  0152C0  220A               	addwfc	(btemp+9)^0,f,c
 11151  0152C2  500A               	movf	(btemp+9)^0,w,c
 11152  0152C4  E106               	bnz	u11080
 11153  0152C6  0E1A               	movlw	26
 11154  0152C8  5C09               	subwf	(btemp+8)^0,w,c
 11155  0152CA  B0D8               	btfsc	status,0,c
 11156  0152CC  D002               	goto	u11080
 11157  0152CE  0E01               	movlw	1
 11158  0152D0  D001               	goto	u11090
 11159  0152D2                     u11080:
 11160  0152D2  0E00               	movlw	0
 11161  0152D4                     u11090:
 11162  0152D4  6E0B               	movwf	(btemp+10)^0,c
 11163  0152D6  6A0C               	clrf	(btemp+11)^0,c
 11164                           
 11165                           ;stkvar	_xtoa$5305 @ sp[(-20)+0]
 11166  0152D8  0EEC               	movlw	-20
 11167  0152DA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11168  0152E0  0EED               	movlw	-19
 11169  0152E2  0060  F033  FFE3   	movff	btemp+11,plusw1
 11170                           
 11171                           ;stkvar	_xtoa$5305 @ sp[(-20)+0]
 11172  0152E8  0EEC               	movlw	-20
 11173  0152EA  006F FF8C  F001    	movff	plusw1,btemp
 11174  0152F0  0EED               	movlw	-19
 11175  0152F2  50E3               	movf	plusw1,w,c
 11176  0152F4  1001               	iorwf	btemp^0,w,c
 11177  0152F6  B4D8               	btfsc	status,2,c
 11178  0152F8  D011               	goto	l11556
 11179                           
 11180                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 11181                           ;stkvar	_c @ sp[(-20)+12]
 11182  0152FA  0EF8               	movlw	-8
 11183  0152FC  006F FF8F FFE6     	movff	plusw1,postinc1
 11184  015302  006F FF8F FFE6     	movff	plusw1,postinc1
 11185  015308  EC14  F0CC         	call	_toupper	;wreg free
 11186                           
 11187                           ;stkvar	_c @ sp[(-20)+12]
 11188  01530C  0EF8               	movlw	-8
 11189  01530E  0060  F007  FFE3   	movff	btemp,plusw1
 11190  015314  0EF9               	movlw	-7
 11191  015316  0060  F00B  FFE3   	movff	btemp+1,plusw1
 11192  01531C                     l11556:
 11193                           
 11194                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 11195                           ;stkvar	_c @ sp[(-20)+12]
 11196                           ;stkvar	_i @ sp[(-20)+14]
 11197  01531C  0EFA               	movlw	-6
 11198  01531E  006F FF8C  F00B    	movff	plusw1,btemp+10
 11199  015324  0EFB               	movlw	-5
 11200  015326  006F FF8C  F00C    	movff	plusw1,btemp+11
 11201  01532C  0E94               	movlw	low _dbuf
 11202  01532E  240B               	addwf	(btemp+10)^0,w,c
 11203  015330  6ED9               	movwf	fsr2l,c
 11204  015332  0E03               	movlw	high _dbuf
 11205  015334  200C               	addwfc	(btemp+11)^0,w,c
 11206  015336  6EDA               	movwf	fsr2h,c
 11207  015338  0EF8               	movlw	-8
 11208  01533A  006F FF8F FFDF     	movff	plusw1,indf2
 11209                           
 11210                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 11211                           ;stkvar	_p @ sp[(-20)+18]
 11212  015340  50E1               	movf	fsr1l,w,c
 11213  015342  0FFE               	addlw	-2
 11214  015344  6ED9               	movwf	fsr2l,c
 11215  015346  50E2               	movf	fsr1h,w,c
 11216  015348  6EDA               	movwf	fsr2h,c
 11217  01534A  0EFF               	movlw	255
 11218  01534C  22DA               	addwfc	fsr2h,f,c
 11219  01534E  06DE               	decf	postinc2,f,c
 11220  015350  0E00               	movlw	0
 11221  015352  5ADD               	subwfb	postdec2,f,c
 11222                           
 11223                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 11224                           ;stkvar	_w @ sp[(-20)+16]
 11225  015354  50E1               	movf	fsr1l,w,c
 11226  015356  0FFC               	addlw	-4
 11227  015358  6ED9               	movwf	fsr2l,c
 11228  01535A  50E2               	movf	fsr1h,w,c
 11229  01535C  6EDA               	movwf	fsr2h,c
 11230  01535E  0EFF               	movlw	255
 11231  015360  22DA               	addwfc	fsr2h,f,c
 11232  015362  06DE               	decf	postinc2,f,c
 11233  015364  0E00               	movlw	0
 11234  015366  5ADD               	subwfb	postdec2,f,c
 11235                           
 11236                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 11237  015368  0E04               	movlw	4
 11238  01536A  6E0C               	movwf	(btemp+11)^0,c
 11239                           
 11240                           ;stkvar	_n @ sp[(-20)+4]
 11241  01536C  50E1               	movf	fsr1l,w,c
 11242  01536E  0FF0               	addlw	-16
 11243  015370  6ED9               	movwf	fsr2l,c
 11244  015372  50E2               	movf	fsr1h,w,c
 11245  015374  6EDA               	movwf	fsr2h,c
 11246  015376  0EFF               	movlw	255
 11247  015378  22DA               	addwfc	fsr2h,f,c
 11248  01537A  280C               	incf	(btemp+11)^0,w,c
 11249  01537C  52DE               	movf	postinc2,f,c
 11250  01537E  D00F               	goto	u11110
 11251  015380                     u11115:
 11252  015380  52DE               	movf	postinc2,f,c
 11253  015382  52DE               	movf	postinc2,f,c
 11254  015384  52DE               	movf	postinc2,f,c
 11255  015386  52DE               	movf	postinc2,f,c
 11256  015388  52DE               	movf	postinc2,f,c
 11257  01538A  52DE               	movf	postinc2,f,c
 11258  01538C  90D8               	bcf	status,0,c
 11259  01538E  32DD               	rrcf	postdec2,f,c
 11260  015390  32DD               	rrcf	postdec2,f,c
 11261  015392  32DD               	rrcf	postdec2,f,c
 11262  015394  32DD               	rrcf	postdec2,f,c
 11263  015396  32DD               	rrcf	postdec2,f,c
 11264  015398  32DD               	rrcf	postdec2,f,c
 11265  01539A  32DD               	rrcf	postdec2,f,c
 11266  01539C  32DE               	rrcf	postinc2,f,c
 11267  01539E                     u11110:
 11268  01539E  2EE8               	decfsz	wreg,f,c
 11269  0153A0  D7EF               	goto	u11115
 11270  0153A2                     l11564:
 11271                           
 11272                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11273                           ;stkvar	_i @ sp[(-20)+14]
 11274  0153A2  0EFB               	movlw	-5
 11275  0153A4  BEE3               	btfsc	plusw1,7,c
 11276  0153A6  D03A               	goto	u11160
 11277  0153A8  0EFB               	movlw	-5
 11278  0153AA  50E3               	movf	plusw1,w,c
 11279  0153AC  E108               	bnz	u11120
 11280  0153AE  0EFA               	movlw	-6
 11281  0153B0  006F FF8C  F001    	movff	plusw1,btemp
 11282  0153B6  0E02               	movlw	2
 11283  0153B8  5E01               	subwf	btemp^0,f,c
 11284  0153BA  A0D8               	btfss	status,0,c
 11285  0153BC  D02F               	goto	u11160
 11286  0153BE                     u11120:
 11287                           
 11288                           ;stkvar	_n @ sp[(-20)+4]
 11289  0153BE  0EF0               	movlw	-16
 11290  0153C0  50E3               	movf	plusw1,w,c
 11291  0153C2  E115               	bnz	u11131
 11292  0153C4  0EF1               	movlw	-15
 11293  0153C6  50E3               	movf	plusw1,w,c
 11294  0153C8  E112               	bnz	u11131
 11295  0153CA  0EF2               	movlw	-14
 11296  0153CC  50E3               	movf	plusw1,w,c
 11297  0153CE  E10F               	bnz	u11131
 11298  0153D0  0EF3               	movlw	-13
 11299  0153D2  50E3               	movf	plusw1,w,c
 11300  0153D4  E10C               	bnz	u11131
 11301  0153D6  0EF4               	movlw	-12
 11302  0153D8  50E3               	movf	plusw1,w,c
 11303  0153DA  E109               	bnz	u11131
 11304  0153DC  0EF5               	movlw	-11
 11305  0153DE  50E3               	movf	plusw1,w,c
 11306  0153E0  E106               	bnz	u11131
 11307  0153E2  0EF6               	movlw	-10
 11308  0153E4  50E3               	movf	plusw1,w,c
 11309  0153E6  E103               	bnz	u11131
 11310  0153E8  0EF7               	movlw	-9
 11311  0153EA  50E3               	movf	plusw1,w,c
 11312  0153EC  A4D8               	btfss	status,2,c
 11313  0153EE                     u11131:
 11314  0153EE  D6EB               	goto	l11532
 11315                           
 11316                           ;stkvar	_p @ sp[(-20)+18]
 11317  0153F0  0EFF               	movlw	-1
 11318  0153F2  BEE3               	btfsc	plusw1,7,c
 11319  0153F4  D007               	goto	u11140
 11320  0153F6  0EFF               	movlw	-1
 11321  0153F8  50E3               	movf	plusw1,w,c
 11322  0153FA  E103               	bnz	u11141
 11323  0153FC  0EFE               	movlw	-2
 11324  0153FE  04E3               	decf	plusw1,w,c
 11325  015400  B0D8               	btfsc	status,0,c
 11326  015402                     u11141:
 11327  015402  D6E1               	goto	l11532
 11328  015404                     u11140:
 11329                           
 11330                           ;stkvar	_w @ sp[(-20)+16]
 11331  015404  0EFD               	movlw	-3
 11332  015406  BEE3               	btfsc	plusw1,7,c
 11333  015408  D009               	goto	u11160
 11334  01540A  0EFD               	movlw	-3
 11335  01540C  50E3               	movf	plusw1,w,c
 11336  01540E  E104               	bnz	u11150
 11337  015410  0EFC               	movlw	-4
 11338  015412  04E3               	decf	plusw1,w,c
 11339  015414  A0D8               	btfss	status,0,c
 11340  015416  D002               	goto	u11160
 11341  015418                     u11150:
 11342  015418  B225               	btfsc	_flags^0,1,c
 11343  01541A  D6D5               	goto	l11532
 11344  01541C                     u11160:
 11345                           
 11346                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 11347  01541C  A825               	btfss	_flags^0,4,c
 11348  01541E  D036               	goto	l11580
 11349                           
 11350                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 11351                           ;stkvar	_i @ sp[(-20)+14]
 11352  015420  50E1               	movf	fsr1l,w,c
 11353  015422  0FFA               	addlw	-6
 11354  015424  6ED9               	movwf	fsr2l,c
 11355  015426  50E2               	movf	fsr1h,w,c
 11356  015428  6EDA               	movwf	fsr2h,c
 11357  01542A  0EFF               	movlw	255
 11358  01542C  22DA               	addwfc	fsr2h,f,c
 11359  01542E  06DE               	decf	postinc2,f,c
 11360  015430  0E00               	movlw	0
 11361  015432  5ADD               	subwfb	postdec2,f,c
 11362                           
 11363                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 11364                           ;stkvar	_x @ sp[(-20)+-11]
 11365                           ;stkvar	_i @ sp[(-20)+14]
 11366  015434  0EFA               	movlw	-6
 11367  015436  006F FF8C  F00B    	movff	plusw1,btemp+10
 11368  01543C  0EFB               	movlw	-5
 11369  01543E  006F FF8C  F00C    	movff	plusw1,btemp+11
 11370  015444  0E94               	movlw	low _dbuf
 11371  015446  240B               	addwf	(btemp+10)^0,w,c
 11372  015448  6ED9               	movwf	fsr2l,c
 11373  01544A  0E03               	movlw	high _dbuf
 11374  01544C  200C               	addwfc	(btemp+11)^0,w,c
 11375  01544E  6EDA               	movwf	fsr2h,c
 11376  015450  0EE1               	movlw	-31
 11377  015452  006F FF8F FFDF     	movff	plusw1,indf2
 11378                           
 11379                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 11380                           ;stkvar	_i @ sp[(-20)+14]
 11381  015458  50E1               	movf	fsr1l,w,c
 11382  01545A  0FFA               	addlw	-6
 11383  01545C  6ED9               	movwf	fsr2l,c
 11384  01545E  50E2               	movf	fsr1h,w,c
 11385  015460  6EDA               	movwf	fsr2h,c
 11386  015462  0EFF               	movlw	255
 11387  015464  22DA               	addwfc	fsr2h,f,c
 11388  015466  06DE               	decf	postinc2,f,c
 11389  015468  0E00               	movlw	0
 11390  01546A  5ADD               	subwfb	postdec2,f,c
 11391                           
 11392                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 11393                           ;stkvar	_i @ sp[(-20)+14]
 11394  01546C  0EFA               	movlw	-6
 11395  01546E  006F FF8C  F00B    	movff	plusw1,btemp+10
 11396  015474  0EFB               	movlw	-5
 11397  015476  006F FF8C  F00C    	movff	plusw1,btemp+11
 11398  01547C  0E94               	movlw	low _dbuf
 11399  01547E  240B               	addwf	(btemp+10)^0,w,c
 11400  015480  6ED9               	movwf	fsr2l,c
 11401  015482  0E03               	movlw	high _dbuf
 11402  015484  200C               	addwfc	(btemp+11)^0,w,c
 11403  015486  6EDA               	movwf	fsr2h,c
 11404  015488  0E30               	movlw	48
 11405  01548A  6EDF               	movwf	indf2,c
 11406  01548C                     l11580:
 11407                           
 11408                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 11409                           ;stkvar	_w @ sp[(-20)+16]
 11410  01548C  0EFC               	movlw	-4
 11411  01548E  006F FF8F FFE6     	movff	plusw1,postinc1
 11412  015494  006F FF8F FFE6     	movff	plusw1,postinc1
 11413                           
 11414                           ;stkvar	_i @ sp[(-22)+14]
 11415  01549A  0E94               	movlw	low _dbuf
 11416  01549C  6E0B               	movwf	(btemp+10)^0,c
 11417  01549E  0E03               	movlw	high _dbuf
 11418  0154A0  6E0C               	movwf	(btemp+11)^0,c
 11419  0154A2  0EF8               	movlw	-8
 11420  0154A4  50E3               	movf	plusw1,w,c
 11421  0154A6  260B               	addwf	(btemp+10)^0,f,c
 11422  0154A8  0EF9               	movlw	-7
 11423  0154AA  50E3               	movf	plusw1,w,c
 11424  0154AC  220C               	addwfc	(btemp+11)^0,f,c
 11425  0154AE  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11426  0154B4  0060  F033  FFE6   	movff	btemp+11,postinc1
 11427                           
 11428                           ;stkvar	_fp @ sp[(-24)+-2]
 11429  0154BA  0EE6               	movlw	-26
 11430  0154BC  006F FF8F FFE6     	movff	plusw1,postinc1
 11431  0154C2  006F FF8F FFE6     	movff	plusw1,postinc1
 11432  0154C8  ECAD  F0C3         	call	_pad	;wreg free
 11433                           
 11434                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 11435  0154CC  0EE1               	movlw	225
 11436  0154CE  26E1               	addwf	fsr1l,f,c
 11437  0154D0  0EFF               	movlw	255
 11438  0154D2  22E2               	addwfc	fsr1h,f,c
 11439  0154D4  0012               	return		;funcret
 11440  0154D6                     __end_of_xtoa:
 11441                           	opt callstack 0
 11442                           
 11443 ;; *************** function _toupper *****************
 11444 ;; Defined at:
 11445 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 11446 ;; Parameters:    Size  Location     Type
 11447 ;;  c               2  [STACK] int 
 11448 ;; Auto vars:     Size  Location     Type
 11449 ;;		None
 11450 ;; Return value:  Size  Location     Type
 11451 ;;                  2  [STACK] int 
 11452 ;; Registers used:
 11453 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 11454 ;; Tracked objects:
 11455 ;;		On entry : 0/3
 11456 ;;		On exit  : 0/0
 11457 ;;		Unchanged: 0/0
 11458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11462 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11463 ;;Total ram usage:        0 bytes
 11464 ;; Hardware stack levels used:    1
 11465 ;; Hardware stack levels required when called:   16
 11466 ;; This function calls:
 11467 ;;		_islower
 11468 ;; This function is called by:
 11469 ;;		_xtoa
 11470 ;; This function uses a reentrant model
 11471 ;;
 11472                           
 11473                           	psect	text43
 11474  019828                     __ptext43:
 11475                           	opt callstack 0
 11476  019828                     _toupper:
 11477                           	opt callstack 0
 11478                           
 11479                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11480  019828  52E6               	movf	postinc1,f,c
 11481  01982A  52E6               	movf	postinc1,f,c
 11482                           
 11483                           ;stkvar	_c @ sp[(-2)+-2]
 11484                           
 11485                           ;incstack = 0
 11486 ;; hardware stack exceeded
 11487  01982C  0EFC               	movlw	-4
 11488  01982E  50E3               	movf	plusw1,w,c
 11489  019830  0F9F               	addlw	159
 11490  019832  6E0B               	movwf	(btemp+10)^0,c
 11491  019834  0EFD               	movlw	-3
 11492  019836  006F FF8C  F00C    	movff	plusw1,btemp+11
 11493  01983C  0EFF               	movlw	255
 11494  01983E  220C               	addwfc	(btemp+11)^0,f,c
 11495  019840  500C               	movf	(btemp+11)^0,w,c
 11496  019842  E106               	bnz	u5810
 11497  019844  0E1A               	movlw	26
 11498  019846  5C0B               	subwf	(btemp+10)^0,w,c
 11499  019848  B0D8               	btfsc	status,0,c
 11500  01984A  D002               	goto	u5810
 11501  01984C  0E01               	movlw	1
 11502  01984E  D001               	goto	u5820
 11503  019850                     u5810:
 11504  019850  0E00               	movlw	0
 11505  019852                     u5820:
 11506  019852  6E0B               	movwf	(btemp+10)^0,c
 11507  019854  6A0C               	clrf	(btemp+11)^0,c
 11508                           
 11509                           ;stkvar	_toupper$6111 @ sp[(-2)+0]
 11510  019856  0EFE               	movlw	-2
 11511  019858  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11512  01985E  0EFF               	movlw	-1
 11513  019860  0060  F033  FFE3   	movff	btemp+11,plusw1
 11514                           
 11515                           ;stkvar	_toupper$6111 @ sp[(-2)+0]
 11516  019866  0EFE               	movlw	-2
 11517  019868  006F FF8C  F001    	movff	plusw1,btemp
 11518  01986E  0EFF               	movlw	-1
 11519  019870  50E3               	movf	plusw1,w,c
 11520  019872  1001               	iorwf	btemp^0,w,c
 11521  019874  B4D8               	btfsc	status,2,c
 11522  019876  D00D               	goto	l7576
 11523                           
 11524                           ;stkvar	_c @ sp[(-2)+-2]
 11525  019878  0EFC               	movlw	-4
 11526  01987A  006F FF8C  F001    	movff	plusw1,btemp
 11527  019880  0EFD               	movlw	-3
 11528  019882  006F FF8C  F002    	movff	plusw1,btemp+1
 11529  019888  0E5F               	movlw	95
 11530  01988A  1601               	andwf	btemp^0,f,c
 11531  01988C  0E00               	movlw	0
 11532  01988E  1602               	andwf	(btemp+1)^0,f,c
 11533  019890  D008               	goto	l3401
 11534  019892                     l7576:
 11535                           
 11536                           ;stkvar	_c @ sp[(-2)+-2]
 11537  019892  0EFC               	movlw	-4
 11538  019894  006F FF8C  F001    	movff	plusw1,btemp
 11539  01989A  0EFD               	movlw	-3
 11540  01989C  006F FF8C  F002    	movff	plusw1,btemp+1
 11541  0198A2                     l3401:
 11542                           
 11543                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 11544  0198A2  52E5               	movf	postdec1,f,c
 11545  0198A4  52E5               	movf	postdec1,f,c
 11546  0198A6  52E5               	movf	postdec1,f,c
 11547  0198A8  52E5               	movf	postdec1,f,c
 11548  0198AA  0012               	return		;funcret
 11549  0198AC                     __end_of_toupper:
 11550                           	opt callstack 0
 11551                           
 11552 ;; *************** function _islower *****************
 11553 ;; Defined at:
 11554 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 11555 ;; Parameters:    Size  Location     Type
 11556 ;;  c               2  [STACK] int 
 11557 ;; Auto vars:     Size  Location     Type
 11558 ;;		None
 11559 ;; Return value:  Size  Location     Type
 11560 ;;                  2  [STACK] int 
 11561 ;; Registers used:
 11562 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 11563 ;; Tracked objects:
 11564 ;;		On entry : 0/0
 11565 ;;		On exit  : 0/0
 11566 ;;		Unchanged: 0/0
 11567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11572 ;;Total ram usage:        0 bytes
 11573 ;; Hardware stack levels used:    1
 11574 ;; Hardware stack levels required when called:   15
 11575 ;; This function calls:
 11576 ;;		Nothing
 11577 ;; This function is called by:
 11578 ;;		_toupper
 11579 ;; This function uses a reentrant model
 11580 ;;
 11581                           
 11582                           	psect	text44
 11583  01A488                     __ptext44:
 11584                           	opt callstack 0
 11585  01A488                     _islower:
 11586                           	opt callstack 0
 11587                           
 11588                           ;stkvar	_c @ sp[(0)+-2]
 11589                           
 11590                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11591                           ;incstack = 0
 11592 ;; hardware stack exceeded
 11593  01A488  0EFE               	movlw	-2
 11594  01A48A  50E3               	movf	plusw1,w,c
 11595  01A48C  0F9F               	addlw	159
 11596  01A48E  6E0B               	movwf	(btemp+10)^0,c
 11597  01A490  0EFF               	movlw	-1
 11598  01A492  006F FF8C  F00C    	movff	plusw1,btemp+11
 11599  01A498  0EFF               	movlw	255
 11600  01A49A  220C               	addwfc	(btemp+11)^0,f,c
 11601  01A49C  500C               	movf	(btemp+11)^0,w,c
 11602  01A49E  E106               	bnz	u5500
 11603  01A4A0  0E1A               	movlw	26
 11604  01A4A2  5C0B               	subwf	(btemp+10)^0,w,c
 11605  01A4A4  B0D8               	btfsc	status,0,c
 11606  01A4A6  D002               	goto	u5500
 11607  01A4A8  0E01               	movlw	1
 11608  01A4AA  D001               	goto	u5510
 11609  01A4AC                     u5500:
 11610  01A4AC  0E00               	movlw	0
 11611  01A4AE                     u5510:
 11612  01A4AE  6E01               	movwf	btemp^0,c
 11613  01A4B0  6A02               	clrf	(btemp+1)^0,c
 11614                           
 11615                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 11616  01A4B2  52E5               	movf	postdec1,f,c
 11617  01A4B4  52E5               	movf	postdec1,f,c
 11618  01A4B6  0012               	return		;funcret
 11619  01A4B8                     __end_of_islower:
 11620                           	opt callstack 0
 11621                           
 11622 ;; *************** function _isalpha *****************
 11623 ;; Defined at:
 11624 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 11625 ;; Parameters:    Size  Location     Type
 11626 ;;  c               2  [STACK] int 
 11627 ;; Auto vars:     Size  Location     Type
 11628 ;;		None
 11629 ;; Return value:  Size  Location     Type
 11630 ;;                  2  [STACK] int 
 11631 ;; Registers used:
 11632 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 11633 ;; Tracked objects:
 11634 ;;		On entry : 0/0
 11635 ;;		On exit  : 0/0
 11636 ;;		Unchanged: 0/0
 11637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11642 ;;Total ram usage:        0 bytes
 11643 ;; Hardware stack levels used:    1
 11644 ;; Hardware stack levels required when called:   15
 11645 ;; This function calls:
 11646 ;;		Nothing
 11647 ;; This function is called by:
 11648 ;;		_xtoa
 11649 ;; This function uses a reentrant model
 11650 ;;
 11651                           
 11652                           	psect	text45
 11653  01A11E                     __ptext45:
 11654                           	opt callstack 0
 11655  01A11E                     _isalpha:
 11656                           	opt callstack 0
 11657                           
 11658                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11659                           ;incstack = 0
 11660 ;; hardware stack exceeded
 11661  01A11E  0E9F               	movlw	159
 11662  01A120  6E0B               	movwf	(btemp+10)^0,c
 11663  01A122  0EFF               	movlw	255
 11664  01A124  6E0C               	movwf	(btemp+11)^0,c
 11665                           
 11666                           ;stkvar	_c @ sp[(0)+-2]
 11667  01A126  0EFE               	movlw	-2
 11668  01A128  006F FF8C  F009    	movff	plusw1,btemp+8
 11669  01A12E  0EFF               	movlw	-1
 11670  01A130  006F FF8C  F00A    	movff	plusw1,btemp+9
 11671  01A136  0E20               	movlw	32
 11672  01A138  1209               	iorwf	(btemp+8)^0,f,c
 11673  01A13A  0E00               	movlw	0
 11674  01A13C  120A               	iorwf	(btemp+9)^0,f,c
 11675  01A13E  500B               	movf	(btemp+10)^0,w,c
 11676  01A140  2609               	addwf	(btemp+8)^0,f,c
 11677  01A142  500C               	movf	(btemp+11)^0,w,c
 11678  01A144  220A               	addwfc	(btemp+9)^0,f,c
 11679  01A146  500A               	movf	(btemp+9)^0,w,c
 11680  01A148  E106               	bnz	u5790
 11681  01A14A  0E1A               	movlw	26
 11682  01A14C  5C09               	subwf	(btemp+8)^0,w,c
 11683  01A14E  B0D8               	btfsc	status,0,c
 11684  01A150  D002               	goto	u5790
 11685  01A152  0E01               	movlw	1
 11686  01A154  D001               	goto	u5800
 11687  01A156                     u5790:
 11688  01A156  0E00               	movlw	0
 11689  01A158                     u5800:
 11690  01A158  6E01               	movwf	btemp^0,c
 11691  01A15A  6A02               	clrf	(btemp+1)^0,c
 11692                           
 11693                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 11694  01A15C  52E5               	movf	postdec1,f,c
 11695  01A15E  52E5               	movf	postdec1,f,c
 11696  01A160  0012               	return		;funcret
 11697  01A162                     __end_of_isalpha:
 11698                           	opt callstack 0
 11699                           
 11700 ;; *************** function _utoa *****************
 11701 ;; Defined at:
 11702 ;;		line 593 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 11703 ;; Parameters:    Size  Location     Type
 11704 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11705 ;;		 -> f(6), NULL(0), 
 11706 ;;  d               8  [STACK] unsigned long long 
 11707 ;; Auto vars:     Size  Location     Type
 11708 ;;  n               8  [STACK] unsigned long long 
 11709 ;;  i               2  [STACK] int 
 11710 ;;  w               2  [STACK] int 
 11711 ;;  p               2  [STACK] int 
 11712 ;; Return value:  Size  Location     Type
 11713 ;;                  2  [STACK] int 
 11714 ;; Registers used:
 11715 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 11716 ;; Tracked objects:
 11717 ;;		On entry : 0/0
 11718 ;;		On exit  : 0/0
 11719 ;;		Unchanged: 0/0
 11720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11725 ;;Total ram usage:        0 bytes
 11726 ;; Hardware stack levels used:    1
 11727 ;; Hardware stack levels required when called:   20
 11728 ;; This function calls:
 11729 ;;		___lodiv
 11730 ;;		___lomod
 11731 ;;		_pad
 11732 ;; This function is called by:
 11733 ;;		_vfpfcnvrt
 11734 ;; This function uses a reentrant model
 11735 ;;
 11736                           
 11737                           	psect	text46
 11738  015BE4                     __ptext46:
 11739                           	opt callstack 0
 11740  015BE4                     _utoa:
 11741                           	opt callstack 0
 11742                           
 11743                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 11744  015BE4  0E0E               	movlw	14
 11745  015BE6  26E1               	addwf	fsr1l,f,c
 11746  015BE8  0E00               	movlw	0
 11747  015BEA  22E2               	addwfc	fsr1h,f,c
 11748                           
 11749                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
 11750                           
 11751                           ;incstack = 0
 11752 ;; hardware stack exceeded
 11753  015BEC  AE24               	btfss	(_prec+1)^0,7,c
 11754                           
 11755                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
 11756  015BEE  9225               	bcf	_flags^0,1,c
 11757                           
 11758                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
 11759  015BF0  BE24               	btfsc	(_prec+1)^0,7,c
 11760  015BF2  D005               	goto	u10930
 11761  015BF4  5024               	movf	(_prec+1)^0,w,c
 11762  015BF6  E110               	bnz	l11480
 11763  015BF8  0423               	decf	_prec^0,w,c
 11764  015BFA  B0D8               	btfsc	status,0,c
 11765  015BFC  D00D               	goto	l11480
 11766  015BFE                     u10930:
 11767  015BFE  0E01               	movlw	1
 11768  015C00  6E0B               	movwf	(btemp+10)^0,c
 11769  015C02  0E00               	movlw	0
 11770  015C04  6E0C               	movwf	(btemp+11)^0,c
 11771                           
 11772                           ;stkvar	_p @ sp[(-14)+12]
 11773  015C06  0EFE               	movlw	-2
 11774  015C08  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11775  015C0E  0EFF               	movlw	-1
 11776  015C10  0060  F033  FFE3   	movff	btemp+11,plusw1
 11777  015C16  D008               	goto	l2219
 11778  015C18                     l11480:
 11779                           
 11780                           ;stkvar	_p @ sp[(-14)+12]
 11781  015C18  0EFE               	movlw	-2
 11782  015C1A  0060  F08F  FFE3   	movff	_prec,plusw1
 11783  015C20  0EFF               	movlw	-1
 11784  015C22  0060  F093  FFE3   	movff	_prec+1,plusw1
 11785  015C28                     l2219:
 11786                           
 11787                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 603:     w = width;
 11788                           ;stkvar	_w @ sp[(-14)+10]
 11789  015C28  0EFC               	movlw	-4
 11790  015C2A  0060  F087  FFE3   	movff	_width,plusw1
 11791  015C30  0EFD               	movlw	-3
 11792  015C32  0060  F08B  FFE3   	movff	_width+1,plusw1
 11793                           
 11794                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 606:     n = d;
 11795                           ;stkvar	_d @ sp[(-14)+-10]
 11796  015C38  0EE8               	movlw	232
 11797  015C3A  24E1               	addwf	fsr1l,w,c
 11798  015C3C  6ED9               	movwf	fsr2l,c
 11799  015C3E  0EFF               	movlw	255
 11800  015C40  20E2               	addwfc	fsr1h,w,c
 11801  015C42  6EDA               	movwf	fsr2h,c
 11802                           
 11803                           ;stkvar	_n @ sp[(-14)+0]
 11804  015C44  0E08               	movlw	8
 11805  015C46  6E01               	movwf	btemp^0,c
 11806  015C48  0EF2               	movlw	-14
 11807  015C4A                     us1094999:
 11808  015C4A  006F FF7B FFE3     	movff	postinc2,plusw1
 11809  015C50  28E8               	incf	wreg,w,c
 11810  015C52  2E01               	decfsz	btemp^0,f,c
 11811  015C54  D7FA               	bra	us1094999
 11812                           
 11813                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
 11814  015C56  0E4F               	movlw	79
 11815  015C58  6E0B               	movwf	(btemp+10)^0,c
 11816  015C5A  0E00               	movlw	0
 11817  015C5C  6E0C               	movwf	(btemp+11)^0,c
 11818                           
 11819                           ;stkvar	_i @ sp[(-14)+8]
 11820  015C5E  0EFA               	movlw	-6
 11821  015C60  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11822  015C66  0EFB               	movlw	-5
 11823  015C68  0060  F033  FFE3   	movff	btemp+11,plusw1
 11824                           
 11825                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
 11826  015C6E  0103               	movlb	3	; () banked
 11827  015C70  6BE3               	clrf	(_dbuf+79)& (0+255),b
 11828                           
 11829                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 11830  015C72  D0FB               	goto	l11498
 11831  015C74                     l11488:
 11832                           
 11833                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 610:         --i;
 11834                           ;stkvar	_i @ sp[(-14)+8]
 11835  015C74  50E1               	movf	fsr1l,w,c
 11836  015C76  0FFA               	addlw	-6
 11837  015C78  6ED9               	movwf	fsr2l,c
 11838  015C7A  50E2               	movf	fsr1h,w,c
 11839  015C7C  6EDA               	movwf	fsr2h,c
 11840  015C7E  0EFF               	movlw	255
 11841  015C80  22DA               	addwfc	fsr2h,f,c
 11842  015C82  06DE               	decf	postinc2,f,c
 11843  015C84  0E00               	movlw	0
 11844  015C86  5ADD               	subwfb	postdec2,f,c
 11845                           
 11846                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
 11847  015C88  0E0A               	movlw	10
 11848  015C8A  6EE6               	movwf	postinc1,c
 11849  015C8C  0E00               	movlw	0
 11850  015C8E  6EE6               	movwf	postinc1,c
 11851  015C90  0E00               	movlw	0
 11852  015C92  6EE6               	movwf	postinc1,c
 11853  015C94  0E00               	movlw	0
 11854  015C96  6EE6               	movwf	postinc1,c
 11855  015C98  0E00               	movlw	0
 11856  015C9A  6EE6               	movwf	postinc1,c
 11857  015C9C  0E00               	movlw	0
 11858  015C9E  6EE6               	movwf	postinc1,c
 11859  015CA0  0E00               	movlw	0
 11860  015CA2  6EE6               	movwf	postinc1,c
 11861  015CA4  0E00               	movlw	0
 11862  015CA6  6EE6               	movwf	postinc1,c
 11863                           
 11864                           ;stkvar	_n @ sp[(-22)+0]
 11865  015CA8  50E1               	movf	fsr1l,w,c
 11866  015CAA  0FEA               	addlw	-22
 11867  015CAC  6ED9               	movwf	fsr2l,c
 11868  015CAE  50E2               	movf	fsr1h,w,c
 11869  015CB0  6EDA               	movwf	fsr2h,c
 11870  015CB2  0EFF               	movlw	255
 11871  015CB4  22DA               	addwfc	fsr2h,f,c
 11872  015CB6  006F FF7B FFE6     	movff	postinc2,postinc1
 11873  015CBC  006F FF7B FFE6     	movff	postinc2,postinc1
 11874  015CC2  006F FF7B FFE6     	movff	postinc2,postinc1
 11875  015CC8  006F FF7B FFE6     	movff	postinc2,postinc1
 11876  015CCE  006F FF7B FFE6     	movff	postinc2,postinc1
 11877  015CD4  006F FF7B FFE6     	movff	postinc2,postinc1
 11878  015CDA  006F FF7B FFE6     	movff	postinc2,postinc1
 11879  015CE0  006F FF7B FFE6     	movff	postinc2,postinc1
 11880  015CE6  ECBA  F0C0         	call	___lomod	;wreg free
 11881  015CEA  52E5               	movf	postdec1,f,c
 11882  015CEC  006F FF9C  F018    	movff	indf1,btemp+23
 11883  015CF2  52E5               	movf	postdec1,f,c
 11884  015CF4  006F FF9C  F017    	movff	indf1,btemp+22
 11885  015CFA  52E5               	movf	postdec1,f,c
 11886  015CFC  006F FF9C  F016    	movff	indf1,btemp+21
 11887  015D02  52E5               	movf	postdec1,f,c
 11888  015D04  006F FF9C  F015    	movff	indf1,btemp+20
 11889  015D0A  52E5               	movf	postdec1,f,c
 11890  015D0C  006F FF9C  F014    	movff	indf1,btemp+19
 11891  015D12  52E5               	movf	postdec1,f,c
 11892  015D14  006F FF9C  F013    	movff	indf1,btemp+18
 11893  015D1A  52E5               	movf	postdec1,f,c
 11894  015D1C  006F FF9C  F012    	movff	indf1,btemp+17
 11895  015D22  52E5               	movf	postdec1,f,c
 11896  015D24  006F FF9C  F011    	movff	indf1,btemp+16
 11897  015D2A  0EF8               	movlw	248
 11898  015D2C  26E1               	addwf	fsr1l,f,c
 11899  015D2E  0EFF               	movlw	255
 11900  015D30  22E2               	addwfc	fsr1h,f,c
 11901  015D32  0E30               	movlw	48
 11902  015D34  2611               	addwf	(btemp+16)^0,f,c
 11903                           
 11904                           ;stkvar	_i @ sp[(-14)+8]
 11905  015D36  0EFA               	movlw	-6
 11906  015D38  006F FF8C  F00B    	movff	plusw1,btemp+10
 11907  015D3E  0EFB               	movlw	-5
 11908  015D40  006F FF8C  F00C    	movff	plusw1,btemp+11
 11909  015D46  0E94               	movlw	low _dbuf
 11910  015D48  240B               	addwf	(btemp+10)^0,w,c
 11911  015D4A  6ED9               	movwf	fsr2l,c
 11912  015D4C  0E03               	movlw	high _dbuf
 11913  015D4E  200C               	addwfc	(btemp+11)^0,w,c
 11914  015D50  6EDA               	movwf	fsr2h,c
 11915  015D52  0060  F047  FFDF   	movff	btemp+16,indf2
 11916                           
 11917                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 612:         --p;
 11918                           ;stkvar	_p @ sp[(-14)+12]
 11919  015D58  50E1               	movf	fsr1l,w,c
 11920  015D5A  0FFE               	addlw	-2
 11921  015D5C  6ED9               	movwf	fsr2l,c
 11922  015D5E  50E2               	movf	fsr1h,w,c
 11923  015D60  6EDA               	movwf	fsr2h,c
 11924  015D62  0EFF               	movlw	255
 11925  015D64  22DA               	addwfc	fsr2h,f,c
 11926  015D66  06DE               	decf	postinc2,f,c
 11927  015D68  0E00               	movlw	0
 11928  015D6A  5ADD               	subwfb	postdec2,f,c
 11929                           
 11930                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 613:         --w;
 11931                           ;stkvar	_w @ sp[(-14)+10]
 11932  015D6C  50E1               	movf	fsr1l,w,c
 11933  015D6E  0FFC               	addlw	-4
 11934  015D70  6ED9               	movwf	fsr2l,c
 11935  015D72  50E2               	movf	fsr1h,w,c
 11936  015D74  6EDA               	movwf	fsr2h,c
 11937  015D76  0EFF               	movlw	255
 11938  015D78  22DA               	addwfc	fsr2h,f,c
 11939  015D7A  06DE               	decf	postinc2,f,c
 11940  015D7C  0E00               	movlw	0
 11941  015D7E  5ADD               	subwfb	postdec2,f,c
 11942                           
 11943                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
 11944  015D80  0E0A               	movlw	10
 11945  015D82  6EE6               	movwf	postinc1,c
 11946  015D84  0E00               	movlw	0
 11947  015D86  6EE6               	movwf	postinc1,c
 11948  015D88  0E00               	movlw	0
 11949  015D8A  6EE6               	movwf	postinc1,c
 11950  015D8C  0E00               	movlw	0
 11951  015D8E  6EE6               	movwf	postinc1,c
 11952  015D90  0E00               	movlw	0
 11953  015D92  6EE6               	movwf	postinc1,c
 11954  015D94  0E00               	movlw	0
 11955  015D96  6EE6               	movwf	postinc1,c
 11956  015D98  0E00               	movlw	0
 11957  015D9A  6EE6               	movwf	postinc1,c
 11958  015D9C  0E00               	movlw	0
 11959  015D9E  6EE6               	movwf	postinc1,c
 11960                           
 11961                           ;stkvar	_n @ sp[(-22)+0]
 11962  015DA0  50E1               	movf	fsr1l,w,c
 11963  015DA2  0FEA               	addlw	-22
 11964  015DA4  6ED9               	movwf	fsr2l,c
 11965  015DA6  50E2               	movf	fsr1h,w,c
 11966  015DA8  6EDA               	movwf	fsr2h,c
 11967  015DAA  0EFF               	movlw	255
 11968  015DAC  22DA               	addwfc	fsr2h,f,c
 11969  015DAE  006F FF7B FFE6     	movff	postinc2,postinc1
 11970  015DB4  006F FF7B FFE6     	movff	postinc2,postinc1
 11971  015DBA  006F FF7B FFE6     	movff	postinc2,postinc1
 11972  015DC0  006F FF7B FFE6     	movff	postinc2,postinc1
 11973  015DC6  006F FF7B FFE6     	movff	postinc2,postinc1
 11974  015DCC  006F FF7B FFE6     	movff	postinc2,postinc1
 11975  015DD2  006F FF7B FFE6     	movff	postinc2,postinc1
 11976  015DD8  006F FF7B FFE6     	movff	postinc2,postinc1
 11977  015DDE  ECC5  F0BB         	call	___lodiv	;wreg free
 11978  015DE2  52E5               	movf	postdec1,f,c
 11979  015DE4  006F FF9C  F018    	movff	indf1,btemp+23
 11980  015DEA  52E5               	movf	postdec1,f,c
 11981  015DEC  006F FF9C  F017    	movff	indf1,btemp+22
 11982  015DF2  52E5               	movf	postdec1,f,c
 11983  015DF4  006F FF9C  F016    	movff	indf1,btemp+21
 11984  015DFA  52E5               	movf	postdec1,f,c
 11985  015DFC  006F FF9C  F015    	movff	indf1,btemp+20
 11986  015E02  52E5               	movf	postdec1,f,c
 11987  015E04  006F FF9C  F014    	movff	indf1,btemp+19
 11988  015E0A  52E5               	movf	postdec1,f,c
 11989  015E0C  006F FF9C  F013    	movff	indf1,btemp+18
 11990  015E12  52E5               	movf	postdec1,f,c
 11991  015E14  006F FF9C  F012    	movff	indf1,btemp+17
 11992  015E1A  52E5               	movf	postdec1,f,c
 11993  015E1C  006F FF9C  F011    	movff	indf1,btemp+16
 11994  015E22  0EF8               	movlw	248
 11995  015E24  26E1               	addwf	fsr1l,f,c
 11996  015E26  0EFF               	movlw	255
 11997  015E28  22E2               	addwfc	fsr1h,f,c
 11998                           
 11999                           ;stkvar	_n @ sp[(-14)+0]
 12000  015E2A  0EF2               	movlw	-14
 12001  015E2C  0060  F047  FFE3   	movff	btemp+16,plusw1
 12002  015E32  0EF3               	movlw	-13
 12003  015E34  0060  F04B  FFE3   	movff	btemp+17,plusw1
 12004  015E3A  0EF4               	movlw	-12
 12005  015E3C  0060  F04F  FFE3   	movff	btemp+18,plusw1
 12006  015E42  0EF5               	movlw	-11
 12007  015E44  0060  F053  FFE3   	movff	btemp+19,plusw1
 12008  015E4A  0EF6               	movlw	-10
 12009  015E4C  0060  F057  FFE3   	movff	btemp+20,plusw1
 12010  015E52  0EF7               	movlw	-9
 12011  015E54  0060  F05B  FFE3   	movff	btemp+21,plusw1
 12012  015E5A  0EF8               	movlw	-8
 12013  015E5C  0060  F05F  FFE3   	movff	btemp+22,plusw1
 12014  015E62  0EF9               	movlw	-7
 12015  015E64  0060  F063  FFE3   	movff	btemp+23,plusw1
 12016  015E6A                     l11498:
 12017                           
 12018                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 12019                           ;stkvar	_i @ sp[(-14)+8]
 12020  015E6A  0EFA               	movlw	-6
 12021  015E6C  006F FF8C  F001    	movff	plusw1,btemp
 12022  015E72  0EFB               	movlw	-5
 12023  015E74  50E3               	movf	plusw1,w,c
 12024  015E76  1001               	iorwf	btemp^0,w,c
 12025  015E78  B4D8               	btfsc	status,2,c
 12026  015E7A  D02F               	goto	u10990
 12027                           
 12028                           ;stkvar	_n @ sp[(-14)+0]
 12029  015E7C  0EF2               	movlw	-14
 12030  015E7E  50E3               	movf	plusw1,w,c
 12031  015E80  E115               	bnz	u10961
 12032  015E82  0EF3               	movlw	-13
 12033  015E84  50E3               	movf	plusw1,w,c
 12034  015E86  E112               	bnz	u10961
 12035  015E88  0EF4               	movlw	-12
 12036  015E8A  50E3               	movf	plusw1,w,c
 12037  015E8C  E10F               	bnz	u10961
 12038  015E8E  0EF5               	movlw	-11
 12039  015E90  50E3               	movf	plusw1,w,c
 12040  015E92  E10C               	bnz	u10961
 12041  015E94  0EF6               	movlw	-10
 12042  015E96  50E3               	movf	plusw1,w,c
 12043  015E98  E109               	bnz	u10961
 12044  015E9A  0EF7               	movlw	-9
 12045  015E9C  50E3               	movf	plusw1,w,c
 12046  015E9E  E106               	bnz	u10961
 12047  015EA0  0EF8               	movlw	-8
 12048  015EA2  50E3               	movf	plusw1,w,c
 12049  015EA4  E103               	bnz	u10961
 12050  015EA6  0EF9               	movlw	-7
 12051  015EA8  50E3               	movf	plusw1,w,c
 12052  015EAA  A4D8               	btfss	status,2,c
 12053  015EAC                     u10961:
 12054  015EAC  D6E3               	goto	l11488
 12055                           
 12056                           ;stkvar	_p @ sp[(-14)+12]
 12057  015EAE  0EFF               	movlw	-1
 12058  015EB0  BEE3               	btfsc	plusw1,7,c
 12059  015EB2  D007               	goto	u10970
 12060  015EB4  0EFF               	movlw	-1
 12061  015EB6  50E3               	movf	plusw1,w,c
 12062  015EB8  E103               	bnz	u10971
 12063  015EBA  0EFE               	movlw	-2
 12064  015EBC  04E3               	decf	plusw1,w,c
 12065  015EBE  B0D8               	btfsc	status,0,c
 12066  015EC0                     u10971:
 12067  015EC0  D6D9               	goto	l11488
 12068  015EC2                     u10970:
 12069                           
 12070                           ;stkvar	_w @ sp[(-14)+10]
 12071  015EC2  0EFD               	movlw	-3
 12072  015EC4  BEE3               	btfsc	plusw1,7,c
 12073  015EC6  D009               	goto	u10990
 12074  015EC8  0EFD               	movlw	-3
 12075  015ECA  50E3               	movf	plusw1,w,c
 12076  015ECC  E104               	bnz	u10980
 12077  015ECE  0EFC               	movlw	-4
 12078  015ED0  04E3               	decf	plusw1,w,c
 12079  015ED2  A0D8               	btfss	status,0,c
 12080  015ED4  D002               	goto	u10990
 12081  015ED6                     u10980:
 12082  015ED6  B225               	btfsc	_flags^0,1,c
 12083  015ED8  D6CD               	goto	l11488
 12084  015EDA                     u10990:
 12085                           
 12086                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
 12087                           ;stkvar	_w @ sp[(-14)+10]
 12088  015EDA  0EFC               	movlw	-4
 12089  015EDC  006F FF8F FFE6     	movff	plusw1,postinc1
 12090  015EE2  006F FF8F FFE6     	movff	plusw1,postinc1
 12091                           
 12092                           ;stkvar	_i @ sp[(-16)+8]
 12093  015EE8  0E94               	movlw	low _dbuf
 12094  015EEA  6E0B               	movwf	(btemp+10)^0,c
 12095  015EEC  0E03               	movlw	high _dbuf
 12096  015EEE  6E0C               	movwf	(btemp+11)^0,c
 12097  015EF0  0EF8               	movlw	-8
 12098  015EF2  50E3               	movf	plusw1,w,c
 12099  015EF4  260B               	addwf	(btemp+10)^0,f,c
 12100  015EF6  0EF9               	movlw	-7
 12101  015EF8  50E3               	movf	plusw1,w,c
 12102  015EFA  220C               	addwfc	(btemp+11)^0,f,c
 12103  015EFC  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12104  015F02  0060  F033  FFE6   	movff	btemp+11,postinc1
 12105                           
 12106                           ;stkvar	_fp @ sp[(-18)+-2]
 12107  015F08  0EEC               	movlw	-20
 12108  015F0A  006F FF8F FFE6     	movff	plusw1,postinc1
 12109  015F10  006F FF8F FFE6     	movff	plusw1,postinc1
 12110  015F16  ECAD  F0C3         	call	_pad	;wreg free
 12111                           
 12112                           ; _utoa: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 12113  015F1A  0EE8               	movlw	232
 12114  015F1C  26E1               	addwf	fsr1l,f,c
 12115  015F1E  0EFF               	movlw	255
 12116  015F20  22E2               	addwfc	fsr1h,f,c
 12117  015F22  0012               	return		;funcret
 12118  015F24                     __end_of_utoa:
 12119                           	opt callstack 0
 12120                           
 12121 ;; *************** function ___lomod *****************
 12122 ;; Defined at:
 12123 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lomod.c"
 12124 ;; Parameters:    Size  Location     Type
 12125 ;;  dividend        8  [STACK] unsigned long long 
 12126 ;;  divisor         8  [STACK] unsigned long long 
 12127 ;; Auto vars:     Size  Location     Type
 12128 ;;  counter         1  [STACK] unsigned char 
 12129 ;; Return value:  Size  Location     Type
 12130 ;;                  8  [STACK] unsigned long long 
 12131 ;; Registers used:
 12132 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 12133 ;; Tracked objects:
 12134 ;;		On entry : 0/3
 12135 ;;		On exit  : 0/0
 12136 ;;		Unchanged: 0/0
 12137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12142 ;;Total ram usage:        0 bytes
 12143 ;; Hardware stack levels used:    1
 12144 ;; Hardware stack levels required when called:   15
 12145 ;; This function calls:
 12146 ;;		Nothing
 12147 ;; This function is called by:
 12148 ;;		_utoa
 12149 ;; This function uses a reentrant model
 12150 ;;
 12151                           
 12152                           	psect	text47
 12153  018174                     __ptext47:
 12154                           	opt callstack 0
 12155  018174                     ___lomod:
 12156                           	opt callstack 0
 12157                           
 12158                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 12159  018174  52E6               	movf	postinc1,f,c
 12160                           
 12161                           ;stkvar	_divisor @ sp[(-1)+-16]
 12162                           
 12163                           ;incstack = 0
 12164 ;; hardware stack exceeded
 12165  018176  0EEF               	movlw	-17
 12166  018178  50E3               	movf	plusw1,w,c
 12167  01817A  E116               	bnz	u6940
 12168  01817C  0EF0               	movlw	-16
 12169  01817E  50E3               	movf	plusw1,w,c
 12170  018180  E113               	bnz	u6940
 12171  018182  0EF1               	movlw	-15
 12172  018184  50E3               	movf	plusw1,w,c
 12173  018186  E110               	bnz	u6940
 12174  018188  0EF2               	movlw	-14
 12175  01818A  50E3               	movf	plusw1,w,c
 12176  01818C  E10D               	bnz	u6940
 12177  01818E  0EF3               	movlw	-13
 12178  018190  50E3               	movf	plusw1,w,c
 12179  018192  E10A               	bnz	u6940
 12180  018194  0EF4               	movlw	-12
 12181  018196  50E3               	movf	plusw1,w,c
 12182  018198  E107               	bnz	u6940
 12183  01819A  0EF5               	movlw	-11
 12184  01819C  50E3               	movf	plusw1,w,c
 12185  01819E  E104               	bnz	u6940
 12186  0181A0  0EF6               	movlw	-10
 12187  0181A2  50E3               	movf	plusw1,w,c
 12188  0181A4  B4D8               	btfsc	status,2,c
 12189  0181A6  D075               	goto	u6970
 12190  0181A8                     u6940:
 12191                           
 12192                           ;stkvar	_counter @ sp[(-1)+0]
 12193  0181A8  0EFF               	movlw	-1
 12194  0181AA  6AE3               	clrf	plusw1,c
 12195  0181AC  D012               	goto	L9
 12196  0181AE                     l8186:
 12197                           
 12198                           ;stkvar	_divisor @ sp[(-1)+-16]
 12199  0181AE  90D8               	bcf	status,0,c
 12200  0181B0  0EEF               	movlw	-17
 12201  0181B2  36E3               	rlcf	plusw1,f,c
 12202  0181B4  0EF0               	movlw	-16
 12203  0181B6  36E3               	rlcf	plusw1,f,c
 12204  0181B8  0EF1               	movlw	-15
 12205  0181BA  36E3               	rlcf	plusw1,f,c
 12206  0181BC  0EF2               	movlw	-14
 12207  0181BE  36E3               	rlcf	plusw1,f,c
 12208  0181C0  0EF3               	movlw	-13
 12209  0181C2  36E3               	rlcf	plusw1,f,c
 12210  0181C4  0EF4               	movlw	-12
 12211  0181C6  36E3               	rlcf	plusw1,f,c
 12212  0181C8  0EF5               	movlw	-11
 12213  0181CA  36E3               	rlcf	plusw1,f,c
 12214  0181CC  0EF6               	movlw	-10
 12215  0181CE  36E3               	rlcf	plusw1,f,c
 12216                           
 12217                           ;stkvar	_counter @ sp[(-1)+0]
 12218  0181D0  0EFF               	movlw	-1
 12219  0181D2                     L9:
 12220  0181D2  2AE3               	incf	plusw1,f,c
 12221                           
 12222                           ;stkvar	_divisor @ sp[(-1)+-16]
 12223  0181D4  0EF6               	movlw	-10
 12224  0181D6  AEE3               	btfss	plusw1,7,c
 12225  0181D8  D7EA               	goto	l8186
 12226  0181DA                     u6950:
 12227                           
 12228                           ;stkvar	_divisor @ sp[(-1)+-16]
 12229                           ;stkvar	_dividend @ sp[(-1)+-8]
 12230  0181DA  50E1               	movf	fsr1l,w,c
 12231  0181DC  0FF7               	addlw	-9
 12232  0181DE  6ED9               	movwf	fsr2l,c
 12233  0181E0  50E2               	movf	fsr1h,w,c
 12234  0181E2  6EDA               	movwf	fsr2h,c
 12235  0181E4  0EFF               	movlw	255
 12236  0181E6  22DA               	addwfc	fsr2h,f,c
 12237  0181E8  0EEF               	movlw	-17
 12238  0181EA  50E3               	movf	plusw1,w,c
 12239  0181EC  5CDE               	subwf	postinc2,w,c
 12240  0181EE  0EF0               	movlw	-16
 12241  0181F0  50E3               	movf	plusw1,w,c
 12242  0181F2  58DE               	subwfb	postinc2,w,c
 12243  0181F4  0EF1               	movlw	-15
 12244  0181F6  50E3               	movf	plusw1,w,c
 12245  0181F8  58DE               	subwfb	postinc2,w,c
 12246  0181FA  0EF2               	movlw	-14
 12247  0181FC  50E3               	movf	plusw1,w,c
 12248  0181FE  58DE               	subwfb	postinc2,w,c
 12249  018200  0EF3               	movlw	-13
 12250  018202  50E3               	movf	plusw1,w,c
 12251  018204  58DE               	subwfb	postinc2,w,c
 12252  018206  0EF4               	movlw	-12
 12253  018208  50E3               	movf	plusw1,w,c
 12254  01820A  58DE               	subwfb	postinc2,w,c
 12255  01820C  0EF5               	movlw	-11
 12256  01820E  50E3               	movf	plusw1,w,c
 12257  018210  58DE               	subwfb	postinc2,w,c
 12258  018212  0EF6               	movlw	-10
 12259  018214  50E3               	movf	plusw1,w,c
 12260  018216  58DE               	subwfb	postinc2,w,c
 12261  018218  A0D8               	btfss	status,0,c
 12262  01821A  D01F               	goto	l8194
 12263                           
 12264                           ;stkvar	_divisor @ sp[(-1)+-16]
 12265                           ;stkvar	_dividend @ sp[(-1)+-8]
 12266  01821C  50E1               	movf	fsr1l,w,c
 12267  01821E  0FF7               	addlw	-9
 12268  018220  6ED9               	movwf	fsr2l,c
 12269  018222  50E2               	movf	fsr1h,w,c
 12270  018224  6EDA               	movwf	fsr2h,c
 12271  018226  0EFF               	movlw	255
 12272  018228  22DA               	addwfc	fsr2h,f,c
 12273  01822A  0EEF               	movlw	-17
 12274  01822C  50E3               	movf	plusw1,w,c
 12275  01822E  5EDE               	subwf	postinc2,f,c
 12276  018230  0EF0               	movlw	-16
 12277  018232  50E3               	movf	plusw1,w,c
 12278  018234  5ADE               	subwfb	postinc2,f,c
 12279  018236  0EF1               	movlw	-15
 12280  018238  50E3               	movf	plusw1,w,c
 12281  01823A  5ADE               	subwfb	postinc2,f,c
 12282  01823C  0EF2               	movlw	-14
 12283  01823E  50E3               	movf	plusw1,w,c
 12284  018240  5ADE               	subwfb	postinc2,f,c
 12285  018242  0EF3               	movlw	-13
 12286  018244  50E3               	movf	plusw1,w,c
 12287  018246  5ADE               	subwfb	postinc2,f,c
 12288  018248  0EF4               	movlw	-12
 12289  01824A  50E3               	movf	plusw1,w,c
 12290  01824C  5ADE               	subwfb	postinc2,f,c
 12291  01824E  0EF5               	movlw	-11
 12292  018250  50E3               	movf	plusw1,w,c
 12293  018252  5ADE               	subwfb	postinc2,f,c
 12294  018254  0EF6               	movlw	-10
 12295  018256  50E3               	movf	plusw1,w,c
 12296  018258  5ADE               	subwfb	postinc2,f,c
 12297  01825A                     l8194:
 12298                           
 12299                           ;stkvar	_divisor @ sp[(-1)+-16]
 12300  01825A  90D8               	bcf	status,0,c
 12301  01825C  0EF6               	movlw	-10
 12302  01825E  32E3               	rrcf	plusw1,f,c
 12303  018260  0EF5               	movlw	-11
 12304  018262  32E3               	rrcf	plusw1,f,c
 12305  018264  0EF4               	movlw	-12
 12306  018266  32E3               	rrcf	plusw1,f,c
 12307  018268  0EF3               	movlw	-13
 12308  01826A  32E3               	rrcf	plusw1,f,c
 12309  01826C  0EF2               	movlw	-14
 12310  01826E  32E3               	rrcf	plusw1,f,c
 12311  018270  0EF1               	movlw	-15
 12312  018272  32E3               	rrcf	plusw1,f,c
 12313  018274  0EF0               	movlw	-16
 12314  018276  32E3               	rrcf	plusw1,f,c
 12315  018278  0EEF               	movlw	-17
 12316  01827A  32E3               	rrcf	plusw1,f,c
 12317                           
 12318                           ;stkvar	_counter @ sp[(-1)+0]
 12319  01827C  0EFF               	movlw	-1
 12320  01827E  50E3               	movf	plusw1,w,c
 12321  018280  6E01               	movwf	btemp^0,c
 12322  018282  0E01               	movlw	1
 12323  018284  5E01               	subwf	btemp^0,f,c
 12324  018286  0EFF               	movlw	-1
 12325  018288  0060  F007  FFE3   	movff	btemp,plusw1
 12326  01828E  A4D8               	btfss	status,2,c
 12327  018290  D7A4               	goto	u6950
 12328  018292                     u6970:
 12329                           
 12330                           ;stkvar	_dividend @ sp[(-1)+-8]
 12331  018292  0EF7               	movlw	247
 12332  018294  24E1               	addwf	fsr1l,w,c
 12333  018296  6ED9               	movwf	fsr2l,c
 12334  018298  0EFF               	movlw	255
 12335  01829A  20E2               	addwfc	fsr1h,w,c
 12336  01829C  6EDA               	movwf	fsr2h,c
 12337                           
 12338                           ;stkvar	?___lomod @ sp[(-1)+-8]
 12339  01829E  0E08               	movlw	8
 12340  0182A0  6E01               	movwf	btemp^0,c
 12341  0182A2  0EF7               	movlw	-9
 12342  0182A4                     us698999:
 12343  0182A4  006F FF7B FFE3     	movff	postinc2,plusw1
 12344  0182AA  28E8               	incf	wreg,w,c
 12345  0182AC  2E01               	decfsz	btemp^0,f,c
 12346  0182AE  D7FA               	bra	us698999
 12347                           
 12348                           ; ___lomod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 12349  0182B0  52E5               	movf	postdec1,f,c
 12350  0182B2  0012               	return		;funcret
 12351  0182B4                     __end_of___lomod:
 12352                           	opt callstack 0
 12353                           
 12354 ;; *************** function ___lodiv *****************
 12355 ;; Defined at:
 12356 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lodiv.c"
 12357 ;; Parameters:    Size  Location     Type
 12358 ;;  dividend        8  [STACK] unsigned long long 
 12359 ;;  divisor         8  [STACK] unsigned long long 
 12360 ;; Auto vars:     Size  Location     Type
 12361 ;;  quotient        8  [STACK] unsigned long long 
 12362 ;;  counter         1  [STACK] unsigned char 
 12363 ;; Return value:  Size  Location     Type
 12364 ;;                  8  [STACK] unsigned long long 
 12365 ;; Registers used:
 12366 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 12367 ;; Tracked objects:
 12368 ;;		On entry : 0/3
 12369 ;;		On exit  : 0/0
 12370 ;;		Unchanged: 0/0
 12371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12375 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12376 ;;Total ram usage:        0 bytes
 12377 ;; Hardware stack levels used:    1
 12378 ;; Hardware stack levels required when called:   15
 12379 ;; This function calls:
 12380 ;;		Nothing
 12381 ;; This function is called by:
 12382 ;;		_utoa
 12383 ;; This function uses a reentrant model
 12384 ;;
 12385                           
 12386                           	psect	text48
 12387  01778A                     __ptext48:
 12388                           	opt callstack 0
 12389  01778A                     ___lodiv:
 12390                           	opt callstack 0
 12391                           
 12392                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 12393  01778A  0E09               	movlw	9
 12394  01778C  26E1               	addwf	fsr1l,f,c
 12395  01778E  0E00               	movlw	0
 12396  017790  22E2               	addwfc	fsr1h,f,c
 12397                           
 12398                           ;stkvar	_quotient @ sp[(-9)+0]
 12399                           
 12400                           ;incstack = 0
 12401 ;; hardware stack exceeded
 12402  017792  0E07               	movlw	7
 12403  017794  6E01               	movwf	btemp^0,c
 12404  017796  0EF7               	movlw	-9
 12405  017798                     u6881:
 12406  017798  6AE3               	clrf	plusw1,c
 12407  01779A  2AE8               	incf	wreg,f,c
 12408  01779C  0601               	decf	btemp^0,f,c
 12409  01779E  E2FC               	bc	u6881
 12410                           
 12411                           ;stkvar	_divisor @ sp[(-9)+-16]
 12412  0177A0  0EE7               	movlw	-25
 12413  0177A2  50E3               	movf	plusw1,w,c
 12414  0177A4  E116               	bnz	u6890
 12415  0177A6  0EE8               	movlw	-24
 12416  0177A8  50E3               	movf	plusw1,w,c
 12417  0177AA  E113               	bnz	u6890
 12418  0177AC  0EE9               	movlw	-23
 12419  0177AE  50E3               	movf	plusw1,w,c
 12420  0177B0  E110               	bnz	u6890
 12421  0177B2  0EEA               	movlw	-22
 12422  0177B4  50E3               	movf	plusw1,w,c
 12423  0177B6  E10D               	bnz	u6890
 12424  0177B8  0EEB               	movlw	-21
 12425  0177BA  50E3               	movf	plusw1,w,c
 12426  0177BC  E10A               	bnz	u6890
 12427  0177BE  0EEC               	movlw	-20
 12428  0177C0  50E3               	movf	plusw1,w,c
 12429  0177C2  E107               	bnz	u6890
 12430  0177C4  0EED               	movlw	-19
 12431  0177C6  50E3               	movf	plusw1,w,c
 12432  0177C8  E104               	bnz	u6890
 12433  0177CA  0EEE               	movlw	-18
 12434  0177CC  50E3               	movf	plusw1,w,c
 12435  0177CE  B4D8               	btfsc	status,2,c
 12436  0177D0  D088               	goto	u6920
 12437  0177D2                     u6890:
 12438                           
 12439                           ;stkvar	_counter @ sp[(-9)+8]
 12440  0177D2  0EFF               	movlw	-1
 12441  0177D4  6AE3               	clrf	plusw1,c
 12442  0177D6  D012               	goto	L10
 12443  0177D8                     l8162:
 12444                           
 12445                           ;stkvar	_divisor @ sp[(-9)+-16]
 12446  0177D8  90D8               	bcf	status,0,c
 12447  0177DA  0EE7               	movlw	-25
 12448  0177DC  36E3               	rlcf	plusw1,f,c
 12449  0177DE  0EE8               	movlw	-24
 12450  0177E0  36E3               	rlcf	plusw1,f,c
 12451  0177E2  0EE9               	movlw	-23
 12452  0177E4  36E3               	rlcf	plusw1,f,c
 12453  0177E6  0EEA               	movlw	-22
 12454  0177E8  36E3               	rlcf	plusw1,f,c
 12455  0177EA  0EEB               	movlw	-21
 12456  0177EC  36E3               	rlcf	plusw1,f,c
 12457  0177EE  0EEC               	movlw	-20
 12458  0177F0  36E3               	rlcf	plusw1,f,c
 12459  0177F2  0EED               	movlw	-19
 12460  0177F4  36E3               	rlcf	plusw1,f,c
 12461  0177F6  0EEE               	movlw	-18
 12462  0177F8  36E3               	rlcf	plusw1,f,c
 12463                           
 12464                           ;stkvar	_counter @ sp[(-9)+8]
 12465  0177FA  0EFF               	movlw	-1
 12466  0177FC                     L10:
 12467  0177FC  2AE3               	incf	plusw1,f,c
 12468                           
 12469                           ;stkvar	_divisor @ sp[(-9)+-16]
 12470  0177FE  0EEE               	movlw	-18
 12471  017800  AEE3               	btfss	plusw1,7,c
 12472  017802  D7EA               	goto	l8162
 12473  017804                     u6900:
 12474                           
 12475                           ;stkvar	_quotient @ sp[(-9)+0]
 12476  017804  90D8               	bcf	status,0,c
 12477  017806  0EF7               	movlw	-9
 12478  017808  36E3               	rlcf	plusw1,f,c
 12479  01780A  0EF8               	movlw	-8
 12480  01780C  36E3               	rlcf	plusw1,f,c
 12481  01780E  0EF9               	movlw	-7
 12482  017810  36E3               	rlcf	plusw1,f,c
 12483  017812  0EFA               	movlw	-6
 12484  017814  36E3               	rlcf	plusw1,f,c
 12485  017816  0EFB               	movlw	-5
 12486  017818  36E3               	rlcf	plusw1,f,c
 12487  01781A  0EFC               	movlw	-4
 12488  01781C  36E3               	rlcf	plusw1,f,c
 12489  01781E  0EFD               	movlw	-3
 12490  017820  36E3               	rlcf	plusw1,f,c
 12491  017822  0EFE               	movlw	-2
 12492  017824  36E3               	rlcf	plusw1,f,c
 12493                           
 12494                           ;stkvar	_divisor @ sp[(-9)+-16]
 12495                           ;stkvar	_dividend @ sp[(-9)+-8]
 12496  017826  50E1               	movf	fsr1l,w,c
 12497  017828  0FEF               	addlw	-17
 12498  01782A  6ED9               	movwf	fsr2l,c
 12499  01782C  50E2               	movf	fsr1h,w,c
 12500  01782E  6EDA               	movwf	fsr2h,c
 12501  017830  0EFF               	movlw	255
 12502  017832  22DA               	addwfc	fsr2h,f,c
 12503  017834  0EE7               	movlw	-25
 12504  017836  50E3               	movf	plusw1,w,c
 12505  017838  5CDE               	subwf	postinc2,w,c
 12506  01783A  0EE8               	movlw	-24
 12507  01783C  50E3               	movf	plusw1,w,c
 12508  01783E  58DE               	subwfb	postinc2,w,c
 12509  017840  0EE9               	movlw	-23
 12510  017842  50E3               	movf	plusw1,w,c
 12511  017844  58DE               	subwfb	postinc2,w,c
 12512  017846  0EEA               	movlw	-22
 12513  017848  50E3               	movf	plusw1,w,c
 12514  01784A  58DE               	subwfb	postinc2,w,c
 12515  01784C  0EEB               	movlw	-21
 12516  01784E  50E3               	movf	plusw1,w,c
 12517  017850  58DE               	subwfb	postinc2,w,c
 12518  017852  0EEC               	movlw	-20
 12519  017854  50E3               	movf	plusw1,w,c
 12520  017856  58DE               	subwfb	postinc2,w,c
 12521  017858  0EED               	movlw	-19
 12522  01785A  50E3               	movf	plusw1,w,c
 12523  01785C  58DE               	subwfb	postinc2,w,c
 12524  01785E  0EEE               	movlw	-18
 12525  017860  50E3               	movf	plusw1,w,c
 12526  017862  58DE               	subwfb	postinc2,w,c
 12527  017864  A0D8               	btfss	status,0,c
 12528  017866  D021               	goto	l8174
 12529                           
 12530                           ;stkvar	_divisor @ sp[(-9)+-16]
 12531                           ;stkvar	_dividend @ sp[(-9)+-8]
 12532  017868  50E1               	movf	fsr1l,w,c
 12533  01786A  0FEF               	addlw	-17
 12534  01786C  6ED9               	movwf	fsr2l,c
 12535  01786E  50E2               	movf	fsr1h,w,c
 12536  017870  6EDA               	movwf	fsr2h,c
 12537  017872  0EFF               	movlw	255
 12538  017874  22DA               	addwfc	fsr2h,f,c
 12539  017876  0EE7               	movlw	-25
 12540  017878  50E3               	movf	plusw1,w,c
 12541  01787A  5EDE               	subwf	postinc2,f,c
 12542  01787C  0EE8               	movlw	-24
 12543  01787E  50E3               	movf	plusw1,w,c
 12544  017880  5ADE               	subwfb	postinc2,f,c
 12545  017882  0EE9               	movlw	-23
 12546  017884  50E3               	movf	plusw1,w,c
 12547  017886  5ADE               	subwfb	postinc2,f,c
 12548  017888  0EEA               	movlw	-22
 12549  01788A  50E3               	movf	plusw1,w,c
 12550  01788C  5ADE               	subwfb	postinc2,f,c
 12551  01788E  0EEB               	movlw	-21
 12552  017890  50E3               	movf	plusw1,w,c
 12553  017892  5ADE               	subwfb	postinc2,f,c
 12554  017894  0EEC               	movlw	-20
 12555  017896  50E3               	movf	plusw1,w,c
 12556  017898  5ADE               	subwfb	postinc2,f,c
 12557  01789A  0EED               	movlw	-19
 12558  01789C  50E3               	movf	plusw1,w,c
 12559  01789E  5ADE               	subwfb	postinc2,f,c
 12560  0178A0  0EEE               	movlw	-18
 12561  0178A2  50E3               	movf	plusw1,w,c
 12562  0178A4  5ADE               	subwfb	postinc2,f,c
 12563                           
 12564                           ;stkvar	_quotient @ sp[(-9)+0]
 12565  0178A6  0EF7               	movlw	-9
 12566  0178A8  80E3               	bsf	plusw1,0,c
 12567  0178AA                     l8174:
 12568                           
 12569                           ;stkvar	_divisor @ sp[(-9)+-16]
 12570  0178AA  90D8               	bcf	status,0,c
 12571  0178AC  0EEE               	movlw	-18
 12572  0178AE  32E3               	rrcf	plusw1,f,c
 12573  0178B0  0EED               	movlw	-19
 12574  0178B2  32E3               	rrcf	plusw1,f,c
 12575  0178B4  0EEC               	movlw	-20
 12576  0178B6  32E3               	rrcf	plusw1,f,c
 12577  0178B8  0EEB               	movlw	-21
 12578  0178BA  32E3               	rrcf	plusw1,f,c
 12579  0178BC  0EEA               	movlw	-22
 12580  0178BE  32E3               	rrcf	plusw1,f,c
 12581  0178C0  0EE9               	movlw	-23
 12582  0178C2  32E3               	rrcf	plusw1,f,c
 12583  0178C4  0EE8               	movlw	-24
 12584  0178C6  32E3               	rrcf	plusw1,f,c
 12585  0178C8  0EE7               	movlw	-25
 12586  0178CA  32E3               	rrcf	plusw1,f,c
 12587                           
 12588                           ;stkvar	_counter @ sp[(-9)+8]
 12589  0178CC  0EFF               	movlw	-1
 12590  0178CE  50E3               	movf	plusw1,w,c
 12591  0178D0  6E01               	movwf	btemp^0,c
 12592  0178D2  0E01               	movlw	1
 12593  0178D4  5E01               	subwf	btemp^0,f,c
 12594  0178D6  0EFF               	movlw	-1
 12595  0178D8  0060  F007  FFE3   	movff	btemp,plusw1
 12596  0178DE  A4D8               	btfss	status,2,c
 12597  0178E0  D791               	goto	u6900
 12598  0178E2                     u6920:
 12599                           
 12600                           ;stkvar	_quotient @ sp[(-9)+0]
 12601  0178E2  0EF7               	movlw	247
 12602  0178E4  24E1               	addwf	fsr1l,w,c
 12603  0178E6  6ED9               	movwf	fsr2l,c
 12604  0178E8  0EFF               	movlw	255
 12605  0178EA  20E2               	addwfc	fsr1h,w,c
 12606  0178EC  6EDA               	movwf	fsr2h,c
 12607                           
 12608                           ;stkvar	?___lodiv @ sp[(-9)+-8]
 12609  0178EE  0E08               	movlw	8
 12610  0178F0  6E01               	movwf	btemp^0,c
 12611  0178F2  0EEF               	movlw	-17
 12612  0178F4                     us693999:
 12613  0178F4  006F FF7B FFE3     	movff	postinc2,plusw1
 12614  0178FA  28E8               	incf	wreg,w,c
 12615  0178FC  2E01               	decfsz	btemp^0,f,c
 12616  0178FE  D7FA               	bra	us693999
 12617                           
 12618                           ; ___lodiv: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 12619  017900  0EF7               	movlw	247
 12620  017902  26E1               	addwf	fsr1l,f,c
 12621  017904  0EFF               	movlw	255
 12622  017906  22E2               	addwfc	fsr1h,f,c
 12623  017908  0012               	return		;funcret
 12624  01790A                     __end_of___lodiv:
 12625                           	opt callstack 0
 12626                           
 12627 ;; *************** function _strncmp *****************
 12628 ;; Defined at:
 12629 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 12630 ;; Parameters:    Size  Location     Type
 12631 ;;  _l              2  [STACK] PTR const unsigned char 
 12632 ;;		 -> ct(3), STR_48(79), STR_46(3), STR_45(3), 
 12633 ;;		 -> STR_44(19), STR_43(19), STR_42(19), STR_41(19), 
 12634 ;;		 -> STR_40(19), STR_39(19), STR_38(24), STR_37(15), 
 12635 ;;		 -> STR_36(15), STR_35(15), STR_34(10), STR_33(10), 
 12636 ;;		 -> STR_32(19), STR_31(19), STR_28(3), STR_27(3), 
 12637 ;;		 -> STR_26(3), STR_25(17), STR_24(16), STR_23(16), 
 12638 ;;		 -> STR_22(19), STR_21(20), STR_20(19), STR_19(19), 
 12639 ;;		 -> STR_18(19), STR_17(19), STR_16(19), STR_15(19), 
 12640 ;;		 -> STR_14(19), STR_13(17), STR_12(16), STR_11(16), 
 12641 ;;		 -> STR_10(22), STR_9(22), STR_8(22), STR_7(17), 
 12642 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_2(15), 
 12643 ;;		 -> STR_1(17), 
 12644 ;;  _r              2  [STACK] PTR const unsigned char 
 12645 ;;		 -> STR_82(3), STR_78(3), STR_73(3), STR_68(3), 
 12646 ;;		 -> STR_63(3), STR_59(3), 
 12647 ;;  n               2  [STACK] unsigned int 
 12648 ;; Auto vars:     Size  Location     Type
 12649 ;;  r               2  [STACK] PTR const unsigned char 
 12650 ;;		 -> STR_82(3), STR_78(3), STR_73(3), STR_68(3), 
 12651 ;;		 -> STR_63(3), STR_59(3), 
 12652 ;;  l               2  [STACK] PTR const unsigned char 
 12653 ;;		 -> ct(3), STR_48(79), STR_46(3), STR_45(3), 
 12654 ;;		 -> STR_44(19), STR_43(19), STR_42(19), STR_41(19), 
 12655 ;;		 -> STR_40(19), STR_39(19), STR_38(24), STR_37(15), 
 12656 ;;		 -> STR_36(15), STR_35(15), STR_34(10), STR_33(10), 
 12657 ;;		 -> STR_32(19), STR_31(19), STR_28(3), STR_27(3), 
 12658 ;;		 -> STR_26(3), STR_25(17), STR_24(16), STR_23(16), 
 12659 ;;		 -> STR_22(19), STR_21(20), STR_20(19), STR_19(19), 
 12660 ;;		 -> STR_18(19), STR_17(19), STR_16(19), STR_15(19), 
 12661 ;;		 -> STR_14(19), STR_13(17), STR_12(16), STR_11(16), 
 12662 ;;		 -> STR_10(22), STR_9(22), STR_8(22), STR_7(17), 
 12663 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_2(15), 
 12664 ;;		 -> STR_1(17), 
 12665 ;; Return value:  Size  Location     Type
 12666 ;;                  2  [STACK] int 
 12667 ;; Registers used:
 12668 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tbl
      +ptrh, tblptru, prodl
 12669 ;; Tracked objects:
 12670 ;;		On entry : 0/0
 12671 ;;		On exit  : 0/0
 12672 ;;		Unchanged: 0/0
 12673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12677 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12678 ;;Total ram usage:        0 bytes
 12679 ;; Hardware stack levels used:    1
 12680 ;; Hardware stack levels required when called:   15
 12681 ;; This function calls:
 12682 ;;		Nothing
 12683 ;; This function is called by:
 12684 ;;		_vfpfcnvrt
 12685 ;; This function uses a reentrant model
 12686 ;;
 12687                           
 12688                           	psect	text49
 12689  016C02                     __ptext49:
 12690                           	opt callstack 0
 12691  016C02                     _strncmp:
 12692                           	opt callstack 0
 12693                           
 12694                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12695  016C02  52E6               	movf	postinc1,f,c
 12696  016C04  52E6               	movf	postinc1,f,c
 12697  016C06  52E6               	movf	postinc1,f,c
 12698  016C08  52E6               	movf	postinc1,f,c
 12699                           
 12700                           ;stkvar	__l @ sp[(-4)+-2]
 12701                           
 12702                           ;incstack = 0
 12703 ;; hardware stack exceeded
 12704  016C0A  0EFA               	movlw	-6
 12705  016C0C  006F FF8C  F00B    	movff	plusw1,btemp+10
 12706  016C12  0EFB               	movlw	-5
 12707  016C14  006F FF8C  F00C    	movff	plusw1,btemp+11
 12708                           
 12709                           ;stkvar	_l @ sp[(-4)+2]
 12710  016C1A  0EFF               	movlw	-1
 12711  016C1C  0060  F033  FFE3   	movff	btemp+11,plusw1
 12712  016C22  0EFE               	movlw	-2
 12713  016C24  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12714                           
 12715                           ;stkvar	__r @ sp[(-4)+-4]
 12716  016C2A  0EF8               	movlw	-8
 12717  016C2C  006F FF8C  F00B    	movff	plusw1,btemp+10
 12718  016C32  0EF9               	movlw	-7
 12719  016C34  006F FF8C  F00C    	movff	plusw1,btemp+11
 12720                           
 12721                           ;stkvar	_r @ sp[(-4)+0]
 12722  016C3A  0EFD               	movlw	-3
 12723  016C3C  0060  F033  FFE3   	movff	btemp+11,plusw1
 12724  016C42  0EFC               	movlw	-4
 12725  016C44  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12726                           
 12727                           ;stkvar	_n @ sp[(-4)+-6]
 12728  016C4A  0EF6               	movlw	-10
 12729  016C4C  006F FF8C  F001    	movff	plusw1,btemp
 12730  016C52  0E01               	movlw	1
 12731  016C54  5E01               	subwf	btemp^0,f,c
 12732  016C56  0EF6               	movlw	-10
 12733  016C58  0060  F007  FFE3   	movff	btemp,plusw1
 12734  016C5E  0EF7               	movlw	-9
 12735  016C60  006F FF8C  F001    	movff	plusw1,btemp
 12736  016C66  0E00               	movlw	0
 12737  016C68  5A01               	subwfb	btemp^0,f,c
 12738  016C6A  0EF7               	movlw	-9
 12739  016C6C  0060  F007  FFE3   	movff	btemp,plusw1
 12740  016C72  0EF6               	movlw	-10
 12741  016C74  28E3               	incf	plusw1,w,c
 12742  016C76  E13F               	bnz	l8870
 12743  016C78  0EF7               	movlw	-9
 12744  016C7A  28E3               	incf	plusw1,w,c
 12745  016C7C  A4D8               	btfss	status,2,c
 12746  016C7E  D03B               	goto	l8870
 12747  016C80  0E00               	movlw	0
 12748  016C82  6E01               	movwf	btemp^0,c
 12749  016C84  0E00               	movlw	0
 12750  016C86  6E02               	movwf	(btemp+1)^0,c
 12751  016C88  D0C7               	goto	l3373
 12752  016C8A                     l8868:
 12753                           
 12754                           ;stkvar	_l @ sp[(-4)+2]
 12755  016C8A  0EFE               	movlw	-2
 12756  016C8C  50E3               	movf	plusw1,w,c
 12757  016C8E  0F01               	addlw	1
 12758  016C90  6E01               	movwf	btemp^0,c
 12759  016C92  0EFE               	movlw	-2
 12760  016C94  0060  F007  FFE3   	movff	btemp,plusw1
 12761  016C9A  6A01               	clrf	btemp^0,c
 12762  016C9C  0EFF               	movlw	-1
 12763  016C9E  50E3               	movf	plusw1,w,c
 12764  016CA0  2001               	addwfc	btemp^0,w,c
 12765  016CA2  6E01               	movwf	btemp^0,c
 12766  016CA4  0EFF               	movlw	-1
 12767  016CA6  0060  F007  FFE3   	movff	btemp,plusw1
 12768                           
 12769                           ;stkvar	_r @ sp[(-4)+0]
 12770  016CAC  0EFC               	movlw	-4
 12771  016CAE  50E3               	movf	plusw1,w,c
 12772  016CB0  0F01               	addlw	1
 12773  016CB2  6E01               	movwf	btemp^0,c
 12774  016CB4  0EFC               	movlw	-4
 12775  016CB6  0060  F007  FFE3   	movff	btemp,plusw1
 12776  016CBC  6A01               	clrf	btemp^0,c
 12777  016CBE  0EFD               	movlw	-3
 12778  016CC0  50E3               	movf	plusw1,w,c
 12779  016CC2  2001               	addwfc	btemp^0,w,c
 12780  016CC4  6E01               	movwf	btemp^0,c
 12781  016CC6  0EFD               	movlw	-3
 12782  016CC8  0060  F007  FFE3   	movff	btemp,plusw1
 12783                           
 12784                           ;stkvar	_n @ sp[(-4)+-6]
 12785  016CCE  0EF6               	movlw	-10
 12786  016CD0  006F FF8C  F001    	movff	plusw1,btemp
 12787  016CD6  0E01               	movlw	1
 12788  016CD8  5E01               	subwf	btemp^0,f,c
 12789  016CDA  0EF6               	movlw	-10
 12790  016CDC  0060  F007  FFE3   	movff	btemp,plusw1
 12791  016CE2  0EF7               	movlw	-9
 12792  016CE4  006F FF8C  F001    	movff	plusw1,btemp
 12793  016CEA  0E00               	movlw	0
 12794  016CEC  5A01               	subwfb	btemp^0,f,c
 12795  016CEE  0EF7               	movlw	-9
 12796  016CF0  0060  F007  FFE3   	movff	btemp,plusw1
 12797  016CF6                     l8870:
 12798                           
 12799                           ;stkvar	_l @ sp[(-4)+2]
 12800  016CF6  0EFE               	movlw	-2
 12801  016CF8  006F FF8F FFF6     	movff	plusw1,tblptrl
 12802  016CFE  0EFF               	movlw	-1
 12803  016D00  006F FF8F FFF7     	movff	plusw1,tblptrh
 12804  016D06  0E00               	movlw	low (__mediumconst shr (0+16))
 12805  016D08  6EF8               	movwf	tblptru,c
 12806  016D0A  0E1F               	movlw	(high __ramtop+-1)
 12807  016D0C  64F7               	cpfsgt	tblptrh,c
 12808  016D0E  D003               	bra	u8217
 12809  016D10  0008               	tblrd		*
 12810  016D12  50F5               	movf	tablat,w,c
 12811  016D14  D007               	bra	u8210
 12812  016D16                     u8217:
 12813  016D16  006F FFDB FFE9     	movff	tblptrl,fsr0l
 12814  016D1C  006F FFDF FFEA     	movff	tblptrh,fsr0h
 12815  016D22  50EF               	movf	indf0,w,c
 12816  016D24                     u8210:
 12817  016D24  0900               	iorlw	0
 12818  016D26  B4D8               	btfsc	status,2,c
 12819  016D28  D04A               	goto	u8250
 12820                           
 12821                           ;stkvar	_r @ sp[(-4)+0]
 12822  016D2A  50E1               	movf	fsr1l,w,c
 12823  016D2C  0FFC               	addlw	-4
 12824  016D2E  6ED9               	movwf	fsr2l,c
 12825  016D30  50E2               	movf	fsr1h,w,c
 12826  016D32  6EDA               	movwf	fsr2h,c
 12827  016D34  0EFF               	movlw	255
 12828  016D36  22DA               	addwfc	fsr2h,f,c
 12829  016D38  006F FF7B FFF6     	movff	postinc2,tblptrl
 12830  016D3E  006F FF77 FFF7     	movff	postdec2,tblptrh
 12831  016D44                     	if	0	;tblptru may be non-zero
 12832  016D44                     	endif
 12833  016D44                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12834  016D44  0E00               	movlw	low (__mediumconst shr (0+16))
 12835  016D46  6EF8               	movwf	tblptru,c
 12836  016D48                     	endif
 12837  016D48  0008               	tblrd		*
 12838  016D4A  50F5               	movf	tablat,w,c
 12839  016D4C  0900               	iorlw	0
 12840  016D4E  B4D8               	btfsc	status,2,c
 12841  016D50  D036               	goto	u8250
 12842                           
 12843                           ;stkvar	_n @ sp[(-4)+-6]
 12844  016D52  0EF6               	movlw	-10
 12845  016D54  006F FF8C  F001    	movff	plusw1,btemp
 12846  016D5A  0EF7               	movlw	-9
 12847  016D5C  50E3               	movf	plusw1,w,c
 12848  016D5E  1001               	iorwf	btemp^0,w,c
 12849  016D60  B4D8               	btfsc	status,2,c
 12850  016D62  D02D               	goto	u8250
 12851                           
 12852                           ;stkvar	_r @ sp[(-4)+0]
 12853  016D64  50E1               	movf	fsr1l,w,c
 12854  016D66  0FFC               	addlw	-4
 12855  016D68  6ED9               	movwf	fsr2l,c
 12856  016D6A  50E2               	movf	fsr1h,w,c
 12857  016D6C  6EDA               	movwf	fsr2h,c
 12858  016D6E  0EFF               	movlw	255
 12859  016D70  22DA               	addwfc	fsr2h,f,c
 12860  016D72  006F FF7B FFF6     	movff	postinc2,tblptrl
 12861  016D78  006F FF77 FFF7     	movff	postdec2,tblptrh
 12862  016D7E                     	if	0	;tblptru may be non-zero
 12863  016D7E                     	endif
 12864  016D7E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12865  016D7E  0E00               	movlw	low (__mediumconst shr (0+16))
 12866  016D80  6EF8               	movwf	tblptru,c
 12867  016D82                     	endif
 12868  016D82  0008               	tblrd		*
 12869  016D84  006F FFD4  F00C    	movff	tablat,btemp+11
 12870                           
 12871                           ;stkvar	_l @ sp[(-4)+2]
 12872  016D8A  0EFE               	movlw	-2
 12873  016D8C  006F FF8F FFF6     	movff	plusw1,tblptrl
 12874  016D92  0EFF               	movlw	-1
 12875  016D94  006F FF8F FFF7     	movff	plusw1,tblptrh
 12876  016D9A  0E00               	movlw	low (__mediumconst shr (0+16))
 12877  016D9C  6EF8               	movwf	tblptru,c
 12878  016D9E  0E1F               	movlw	(high __ramtop+-1)
 12879  016DA0  64F7               	cpfsgt	tblptrh,c
 12880  016DA2  D003               	bra	u8257
 12881  016DA4  0008               	tblrd		*
 12882  016DA6  50F5               	movf	tablat,w,c
 12883  016DA8  D007               	bra	u8255
 12884  016DAA                     u8257:
 12885  016DAA  006F FFDB FFE9     	movff	tblptrl,fsr0l
 12886  016DB0  006F FFDF FFEA     	movff	tblptrh,fsr0h
 12887  016DB6  50EF               	movf	indf0,w,c
 12888  016DB8                     u8255:
 12889  016DB8  180C               	xorwf	(btemp+11)^0,w,c
 12890  016DBA  B4D8               	btfsc	status,2,c
 12891  016DBC  D766               	goto	l8868
 12892  016DBE                     u8250:
 12893                           
 12894                           ;stkvar	_l @ sp[(-4)+2]
 12895  016DBE  0EFE               	movlw	-2
 12896  016DC0  006F FF8F FFF6     	movff	plusw1,tblptrl
 12897  016DC6  0EFF               	movlw	-1
 12898  016DC8  006F FF8F FFF7     	movff	plusw1,tblptrh
 12899  016DCE  0E00               	movlw	low (__mediumconst shr (0+16))
 12900  016DD0  6EF8               	movwf	tblptru,c
 12901  016DD2  0E1F               	movlw	(high __ramtop+-1)
 12902  016DD4  64F7               	cpfsgt	tblptrh,c
 12903  016DD6  D003               	bra	u8267
 12904  016DD8  0008               	tblrd		*
 12905  016DDA  50F5               	movf	tablat,w,c
 12906  016DDC  D007               	bra	u8260
 12907  016DDE                     u8267:
 12908  016DDE  006F FFDB FFE9     	movff	tblptrl,fsr0l
 12909  016DE4  006F FFDF FFEA     	movff	tblptrh,fsr0h
 12910  016DEA  50EF               	movf	indf0,w,c
 12911  016DEC                     u8260:
 12912  016DEC  6E01               	movwf	btemp^0,c
 12913  016DEE  6A02               	clrf	(btemp+1)^0,c
 12914                           
 12915                           ;stkvar	_r @ sp[(-4)+0]
 12916  016DF0  50E1               	movf	fsr1l,w,c
 12917  016DF2  0FFC               	addlw	-4
 12918  016DF4  6ED9               	movwf	fsr2l,c
 12919  016DF6  50E2               	movf	fsr1h,w,c
 12920  016DF8  6EDA               	movwf	fsr2h,c
 12921  016DFA  0EFF               	movlw	255
 12922  016DFC  22DA               	addwfc	fsr2h,f,c
 12923  016DFE  006F FF7B FFF6     	movff	postinc2,tblptrl
 12924  016E04  006F FF77 FFF7     	movff	postdec2,tblptrh
 12925  016E0A                     	if	0	;tblptru may be non-zero
 12926  016E0A                     	endif
 12927  016E0A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12928  016E0A  0E00               	movlw	low (__mediumconst shr (0+16))
 12929  016E0C  6EF8               	movwf	tblptru,c
 12930  016E0E                     	endif
 12931  016E0E  0008               	tblrd		*
 12932  016E10  50F5               	movf	tablat,w,c
 12933  016E12  5E01               	subwf	btemp^0,f,c
 12934  016E14  0E00               	movlw	0
 12935  016E16  5A02               	subwfb	(btemp+1)^0,f,c
 12936  016E18                     l3373:
 12937                           
 12938                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 12939  016E18  0EF6               	movlw	246
 12940  016E1A  26E1               	addwf	fsr1l,f,c
 12941  016E1C  0EFF               	movlw	255
 12942  016E1E  22E2               	addwfc	fsr1h,f,c
 12943  016E20  0012               	return		;funcret
 12944  016E22                     __end_of_strncmp:
 12945                           	opt callstack 0
 12946                           
 12947 ;; *************** function _stoa *****************
 12948 ;; Defined at:
 12949 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 12950 ;; Parameters:    Size  Location     Type
 12951 ;;  fp              2  [STACK] PTR struct _IO_FILE
 12952 ;;		 -> f(6), NULL(0), 
 12953 ;;  s               2  [STACK] PTR unsigned char 
 12954 ;;		 -> ?_printf(2), ?_sprintf(2), STR_30(9), STR_29(12), 
 12955 ;;		 -> D.lcd(288), D(290), T(144), STR_3(6), 
 12956 ;;		 -> V(188), 
 12957 ;; Auto vars:     Size  Location     Type
 12958 ;;  nuls            7  [STACK] unsigned char [7]
 12959 ;;  l               2  [STACK] int 
 12960 ;;  p               2  [STACK] int 
 12961 ;;  cp              2  [STACK] PTR unsigned char 
 12962 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_30(9), 
 12963 ;;		 -> STR_29(12), D.lcd(288), D(290), T(144), 
 12964 ;;		 -> STR_3(6), V(188), 
 12965 ;;  w               2  [STACK] int 
 12966 ;;  i               2  [STACK] int 
 12967 ;; Return value:  Size  Location     Type
 12968 ;;                  2  [STACK] int 
 12969 ;; Registers used:
 12970 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 12971 ;; Tracked objects:
 12972 ;;		On entry : 0/0
 12973 ;;		On exit  : 0/0
 12974 ;;		Unchanged: 0/0
 12975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12980 ;;Total ram usage:        0 bytes
 12981 ;; Hardware stack levels used:    1
 12982 ;; Hardware stack levels required when called:   18
 12983 ;; This function calls:
 12984 ;;		_fputc
 12985 ;;		_strlen
 12986 ;; This function is called by:
 12987 ;;		_vfpfcnvrt
 12988 ;; This function uses a reentrant model
 12989 ;;
 12990                           
 12991                           	psect	text50
 12992  016210                     __ptext50:
 12993                           	opt callstack 0
 12994  016210                     _stoa:
 12995                           	opt callstack 0
 12996                           
 12997                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 12998  016210  0E11               	movlw	17
 12999  016212  26E1               	addwf	fsr1l,f,c
 13000  016214  0E00               	movlw	0
 13001  016216  22E2               	addwfc	fsr1h,f,c
 13002                           
 13003                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 13004                           
 13005                           ;incstack = 0
 13006 ;; hardware stack exceeded
 13007  016218  EE20  F0EE         	lfsr	2,stoa@F1166
 13008                           
 13009                           ;stkvar	_nuls @ sp[(-17)+0]
 13010  01621C  0E07               	movlw	7
 13011  01621E  6E01               	movwf	btemp^0,c
 13012  016220  0EEF               	movlw	-17
 13013  016222                     us1082999:
 13014  016222  006F FF7B FFE3     	movff	postinc2,plusw1
 13015  016228  28E8               	incf	wreg,w,c
 13016  01622A  2E01               	decfsz	btemp^0,f,c
 13017  01622C  D7FA               	bra	us1082999
 13018                           
 13019                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 13020                           ;stkvar	_s @ sp[(-17)+-4]
 13021  01622E  0EEB               	movlw	-21
 13022  016230  006F FF8C  F00B    	movff	plusw1,btemp+10
 13023  016236  0EEC               	movlw	-20
 13024  016238  006F FF8C  F00C    	movff	plusw1,btemp+11
 13025                           
 13026                           ;stkvar	_cp @ sp[(-17)+11]
 13027  01623E  0EFB               	movlw	-5
 13028  016240  0060  F033  FFE3   	movff	btemp+11,plusw1
 13029  016246  0EFA               	movlw	-6
 13030  016248  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13031                           
 13032                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 13033                           ;stkvar	_cp @ sp[(-17)+11]
 13034  01624E  0EFA               	movlw	-6
 13035  016250  006F FF8C  F001    	movff	plusw1,btemp
 13036  016256  0EFB               	movlw	-5
 13037  016258  50E3               	movf	plusw1,w,c
 13038  01625A  1001               	iorwf	btemp^0,w,c
 13039  01625C  A4D8               	btfss	status,2,c
 13040  01625E  D00E               	goto	l11428
 13041                           
 13042                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 13043                           ;stkvar	_nuls @ sp[(-17)+0]
 13044  016260  0EEF               	movlw	239
 13045  016262  24E1               	addwf	fsr1l,w,c
 13046  016264  6E0B               	movwf	(btemp+10)^0,c
 13047  016266  0EFF               	movlw	255
 13048  016268  20E2               	addwfc	fsr1h,w,c
 13049  01626A  6E0C               	movwf	(btemp+11)^0,c
 13050                           
 13051                           ;stkvar	_cp @ sp[(-17)+11]
 13052  01626C  0EFB               	movlw	-5
 13053  01626E  0060  F033  FFE3   	movff	btemp+11,plusw1
 13054  016274  0EFA               	movlw	-6
 13055  016276  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13056  01627C                     l11428:
 13057                           
 13058                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 13059                           ;stkvar	_cp @ sp[(-17)+11]
 13060  01627C  0EFA               	movlw	-6
 13061  01627E  006F FF8F FFE6     	movff	plusw1,postinc1
 13062  016284  006F FF8F FFE6     	movff	plusw1,postinc1
 13063  01628A  EC10  F0CA         	call	_strlen	;wreg free
 13064                           
 13065                           ;stkvar	_l @ sp[(-17)+7]
 13066  01628E  0EF6               	movlw	-10
 13067  016290  0060  F007  FFE3   	movff	btemp,plusw1
 13068  016296  0EF7               	movlw	-9
 13069  016298  0060  F00B  FFE3   	movff	btemp+1,plusw1
 13070                           
 13071                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 13072                           ;stkvar	_p @ sp[(-17)+9]
 13073  01629E  0EF8               	movlw	-8
 13074  0162A0  0060  F08F  FFE3   	movff	_prec,plusw1
 13075  0162A6  0EF9               	movlw	-7
 13076  0162A8  0060  F093  FFE3   	movff	_prec+1,plusw1
 13077                           
 13078                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 13079                           ;stkvar	_p @ sp[(-17)+9]
 13080  0162AE  0EF9               	movlw	-7
 13081  0162B0  BEE3               	btfsc	plusw1,7,c
 13082  0162B2  D023               	goto	l2198
 13083                           
 13084                           ;stkvar	_l @ sp[(-17)+7]
 13085                           ;stkvar	_p @ sp[(-17)+9]
 13086  0162B4  50E1               	movf	fsr1l,w,c
 13087  0162B6  0FF8               	addlw	-8
 13088  0162B8  6ED9               	movwf	fsr2l,c
 13089  0162BA  50E2               	movf	fsr1h,w,c
 13090  0162BC  6EDA               	movwf	fsr2h,c
 13091  0162BE  0EFF               	movlw	255
 13092  0162C0  22DA               	addwfc	fsr2h,f,c
 13093  0162C2  0EF6               	movlw	-10
 13094  0162C4  50E3               	movf	plusw1,w,c
 13095  0162C6  5CDE               	subwf	postinc2,w,c
 13096  0162C8  50DE               	movf	postinc2,w,c
 13097  0162CA  0A80               	xorlw	128
 13098  0162CC  6E01               	movwf	btemp^0,c
 13099  0162CE  0EF7               	movlw	-9
 13100  0162D0  50E3               	movf	plusw1,w,c
 13101  0162D2  0A80               	xorlw	128
 13102  0162D4  5801               	subwfb	btemp^0,w,c
 13103  0162D6  B0D8               	btfsc	status,0,c
 13104  0162D8  D010               	goto	l2198
 13105                           
 13106                           ;stkvar	_p @ sp[(-17)+9]
 13107                           ;stkvar	_l @ sp[(-17)+7]
 13108  0162DA  0EF8               	movlw	-8
 13109  0162DC  006F FF8C  F001    	movff	plusw1,btemp
 13110  0162E2  0EF6               	movlw	-10
 13111  0162E4  0060  F007  FFE3   	movff	btemp,plusw1
 13112  0162EA  0EF9               	movlw	-7
 13113  0162EC  006F FF8C  F001    	movff	plusw1,btemp
 13114  0162F2  0EF7               	movlw	-9
 13115  0162F4  0060  F007  FFE3   	movff	btemp,plusw1
 13116  0162FA                     l2198:
 13117                           
 13118                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 13119                           ;stkvar	_l @ sp[(-17)+7]
 13120                           ;stkvar	_p @ sp[(-17)+9]
 13121  0162FA  0EF6               	movlw	-10
 13122  0162FC  006F FF8C  F001    	movff	plusw1,btemp
 13123  016302  0EF8               	movlw	-8
 13124  016304  0060  F007  FFE3   	movff	btemp,plusw1
 13125  01630A  0EF7               	movlw	-9
 13126  01630C  006F FF8C  F001    	movff	plusw1,btemp
 13127  016312  0EF9               	movlw	-7
 13128  016314  0060  F007  FFE3   	movff	btemp,plusw1
 13129                           
 13130                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 13131                           ;stkvar	_w @ sp[(-17)+13]
 13132  01631A  0EFC               	movlw	-4
 13133  01631C  0060  F087  FFE3   	movff	_width,plusw1
 13134  016322  0EFD               	movlw	-3
 13135  016324  0060  F08B  FFE3   	movff	_width+1,plusw1
 13136                           
 13137                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 13138  01632A  A025               	btfss	_flags^0,0,c
 13139  01632C  D01F               	goto	l11448
 13140  01632E  D031               	goto	u10870
 13141  016330                     l11444:
 13142                           
 13143                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 13144                           ;stkvar	_fp @ sp[(-17)+-2]
 13145  016330  0EED               	movlw	-19
 13146  016332  006F FF8F FFE6     	movff	plusw1,postinc1
 13147  016338  006F FF8F FFE6     	movff	plusw1,postinc1
 13148  01633E  0E20               	movlw	32
 13149  016340  6EE6               	movwf	postinc1,c
 13150  016342  0E00               	movlw	0
 13151  016344  6EE6               	movwf	postinc1,c
 13152  016346  EC8F  F0C2         	call	_fputc	;wreg free
 13153                           
 13154                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 13155                           ;stkvar	_l @ sp[(-17)+7]
 13156  01634A  0EF6               	movlw	-10
 13157  01634C  50E3               	movf	plusw1,w,c
 13158  01634E  0F01               	addlw	1
 13159  016350  6E01               	movwf	btemp^0,c
 13160  016352  0EF6               	movlw	-10
 13161  016354  0060  F007  FFE3   	movff	btemp,plusw1
 13162  01635A  6A01               	clrf	btemp^0,c
 13163  01635C  0EF7               	movlw	-9
 13164  01635E  50E3               	movf	plusw1,w,c
 13165  016360  2001               	addwfc	btemp^0,w,c
 13166  016362  6E01               	movwf	btemp^0,c
 13167  016364  0EF7               	movlw	-9
 13168  016366  0060  F007  FFE3   	movff	btemp,plusw1
 13169  01636C                     l11448:
 13170                           
 13171                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 13172                           ;stkvar	_w @ sp[(-17)+13]
 13173                           ;stkvar	_l @ sp[(-17)+7]
 13174  01636C  50E1               	movf	fsr1l,w,c
 13175  01636E  0FF6               	addlw	-10
 13176  016370  6ED9               	movwf	fsr2l,c
 13177  016372  50E2               	movf	fsr1h,w,c
 13178  016374  6EDA               	movwf	fsr2h,c
 13179  016376  0EFF               	movlw	255
 13180  016378  22DA               	addwfc	fsr2h,f,c
 13181  01637A  0EFC               	movlw	-4
 13182  01637C  50E3               	movf	plusw1,w,c
 13183  01637E  5CDE               	subwf	postinc2,w,c
 13184  016380  50DE               	movf	postinc2,w,c
 13185  016382  0A80               	xorlw	128
 13186  016384  6E01               	movwf	btemp^0,c
 13187  016386  0EFD               	movlw	-3
 13188  016388  50E3               	movf	plusw1,w,c
 13189  01638A  0A80               	xorlw	128
 13190  01638C  5801               	subwfb	btemp^0,w,c
 13191  01638E  A0D8               	btfss	status,0,c
 13192  016390  D7CF               	goto	l11444
 13193  016392                     u10870:
 13194                           
 13195                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 13196                           ;stkvar	_i @ sp[(-17)+15]
 13197  016392  0EFE               	movlw	-2
 13198  016394  6AE3               	clrf	plusw1,c
 13199  016396  0EFF               	movlw	-1
 13200  016398  6AE3               	clrf	plusw1,c
 13201                           
 13202                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 13203  01639A  D045               	goto	l11458
 13204  01639C                     l11452:
 13205                           
 13206                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 13207                           ;stkvar	_fp @ sp[(-17)+-2]
 13208  01639C  0EED               	movlw	-19
 13209  01639E  006F FF8F FFE6     	movff	plusw1,postinc1
 13210  0163A4  006F FF8F FFE6     	movff	plusw1,postinc1
 13211                           
 13212                           ;stkvar	_cp @ sp[(-19)+11]
 13213  0163AA  0EF8               	movlw	-8
 13214  0163AC  006F FF8F FFF6     	movff	plusw1,tblptrl
 13215  0163B2  0EF9               	movlw	-7
 13216  0163B4  006F FF8F FFF7     	movff	plusw1,tblptrh
 13217  0163BA  0E00               	movlw	low (__mediumconst shr (0+16))
 13218  0163BC  6EF8               	movwf	tblptru,c
 13219  0163BE  0E1F               	movlw	(high __ramtop+-1)
 13220  0163C0  64F7               	cpfsgt	tblptrh,c
 13221  0163C2  D003               	bra	u10887
 13222  0163C4  0008               	tblrd		*
 13223  0163C6  50F5               	movf	tablat,w,c
 13224  0163C8  D007               	bra	u10880
 13225  0163CA                     u10887:
 13226  0163CA  006F FFDB FFE9     	movff	tblptrl,fsr0l
 13227  0163D0  006F FFDF FFEA     	movff	tblptrh,fsr0h
 13228  0163D6  50EF               	movf	indf0,w,c
 13229  0163D8                     u10880:
 13230  0163D8  6EE6               	movwf	postinc1,c
 13231  0163DA  0E00               	movlw	0
 13232  0163DC  6EE6               	movwf	postinc1,c
 13233  0163DE  EC8F  F0C2         	call	_fputc	;wreg free
 13234                           
 13235                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 13236                           ;stkvar	_cp @ sp[(-17)+11]
 13237  0163E2  0EFA               	movlw	-6
 13238  0163E4  50E3               	movf	plusw1,w,c
 13239  0163E6  0F01               	addlw	1
 13240  0163E8  6E01               	movwf	btemp^0,c
 13241  0163EA  0EFA               	movlw	-6
 13242  0163EC  0060  F007  FFE3   	movff	btemp,plusw1
 13243  0163F2  6A01               	clrf	btemp^0,c
 13244  0163F4  0EFB               	movlw	-5
 13245  0163F6  50E3               	movf	plusw1,w,c
 13246  0163F8  2001               	addwfc	btemp^0,w,c
 13247  0163FA  6E01               	movwf	btemp^0,c
 13248  0163FC  0EFB               	movlw	-5
 13249  0163FE  0060  F007  FFE3   	movff	btemp,plusw1
 13250                           
 13251                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 13252                           ;stkvar	_i @ sp[(-17)+15]
 13253  016404  0EFE               	movlw	-2
 13254  016406  50E3               	movf	plusw1,w,c
 13255  016408  0F01               	addlw	1
 13256  01640A  6E01               	movwf	btemp^0,c
 13257  01640C  0EFE               	movlw	-2
 13258  01640E  0060  F007  FFE3   	movff	btemp,plusw1
 13259  016414  6A01               	clrf	btemp^0,c
 13260  016416  0EFF               	movlw	-1
 13261  016418  50E3               	movf	plusw1,w,c
 13262  01641A  2001               	addwfc	btemp^0,w,c
 13263  01641C  6E01               	movwf	btemp^0,c
 13264  01641E  0EFF               	movlw	-1
 13265  016420  0060  F007  FFE3   	movff	btemp,plusw1
 13266  016426                     l11458:
 13267                           
 13268                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 13269                           ;stkvar	_p @ sp[(-17)+9]
 13270                           ;stkvar	_i @ sp[(-17)+15]
 13271  016426  50E1               	movf	fsr1l,w,c
 13272  016428  0FFE               	addlw	-2
 13273  01642A  6ED9               	movwf	fsr2l,c
 13274  01642C  50E2               	movf	fsr1h,w,c
 13275  01642E  6EDA               	movwf	fsr2h,c
 13276  016430  0EFF               	movlw	255
 13277  016432  22DA               	addwfc	fsr2h,f,c
 13278  016434  0EF8               	movlw	-8
 13279  016436  50E3               	movf	plusw1,w,c
 13280  016438  5CDE               	subwf	postinc2,w,c
 13281  01643A  50DE               	movf	postinc2,w,c
 13282  01643C  0A80               	xorlw	128
 13283  01643E  6E01               	movwf	btemp^0,c
 13284  016440  0EF9               	movlw	-7
 13285  016442  50E3               	movf	plusw1,w,c
 13286  016444  0A80               	xorlw	128
 13287  016446  5801               	subwfb	btemp^0,w,c
 13288  016448  A0D8               	btfss	status,0,c
 13289  01644A  D7A8               	goto	l11452
 13290                           
 13291                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 13292  01644C  B025               	btfsc	_flags^0,0,c
 13293  01644E  D01F               	goto	l11466
 13294  016450  D031               	goto	u10910
 13295  016452                     l11462:
 13296                           
 13297                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 13298                           ;stkvar	_fp @ sp[(-17)+-2]
 13299  016452  0EED               	movlw	-19
 13300  016454  006F FF8F FFE6     	movff	plusw1,postinc1
 13301  01645A  006F FF8F FFE6     	movff	plusw1,postinc1
 13302  016460  0E20               	movlw	32
 13303  016462  6EE6               	movwf	postinc1,c
 13304  016464  0E00               	movlw	0
 13305  016466  6EE6               	movwf	postinc1,c
 13306  016468  EC8F  F0C2         	call	_fputc	;wreg free
 13307                           
 13308                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 13309                           ;stkvar	_l @ sp[(-17)+7]
 13310  01646C  0EF6               	movlw	-10
 13311  01646E  50E3               	movf	plusw1,w,c
 13312  016470  0F01               	addlw	1
 13313  016472  6E01               	movwf	btemp^0,c
 13314  016474  0EF6               	movlw	-10
 13315  016476  0060  F007  FFE3   	movff	btemp,plusw1
 13316  01647C  6A01               	clrf	btemp^0,c
 13317  01647E  0EF7               	movlw	-9
 13318  016480  50E3               	movf	plusw1,w,c
 13319  016482  2001               	addwfc	btemp^0,w,c
 13320  016484  6E01               	movwf	btemp^0,c
 13321  016486  0EF7               	movlw	-9
 13322  016488  0060  F007  FFE3   	movff	btemp,plusw1
 13323  01648E                     l11466:
 13324                           
 13325                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 13326                           ;stkvar	_w @ sp[(-17)+13]
 13327                           ;stkvar	_l @ sp[(-17)+7]
 13328  01648E  50E1               	movf	fsr1l,w,c
 13329  016490  0FF6               	addlw	-10
 13330  016492  6ED9               	movwf	fsr2l,c
 13331  016494  50E2               	movf	fsr1h,w,c
 13332  016496  6EDA               	movwf	fsr2h,c
 13333  016498  0EFF               	movlw	255
 13334  01649A  22DA               	addwfc	fsr2h,f,c
 13335  01649C  0EFC               	movlw	-4
 13336  01649E  50E3               	movf	plusw1,w,c
 13337  0164A0  5CDE               	subwf	postinc2,w,c
 13338  0164A2  50DE               	movf	postinc2,w,c
 13339  0164A4  0A80               	xorlw	128
 13340  0164A6  6E01               	movwf	btemp^0,c
 13341  0164A8  0EFD               	movlw	-3
 13342  0164AA  50E3               	movf	plusw1,w,c
 13343  0164AC  0A80               	xorlw	128
 13344  0164AE  5801               	subwfb	btemp^0,w,c
 13345  0164B0  A0D8               	btfss	status,0,c
 13346  0164B2  D7CF               	goto	l11462
 13347  0164B4                     u10910:
 13348                           
 13349                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 13350                           ;stkvar	_l @ sp[(-17)+7]
 13351  0164B4  0EF6               	movlw	-10
 13352  0164B6  006F FF8C  F001    	movff	plusw1,btemp
 13353  0164BC  0EF7               	movlw	-9
 13354  0164BE  006F FF8C  F002    	movff	plusw1,btemp+1
 13355                           
 13356                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 13357  0164C4  0EEB               	movlw	235
 13358  0164C6  26E1               	addwf	fsr1l,f,c
 13359  0164C8  0EFF               	movlw	255
 13360  0164CA  22E2               	addwfc	fsr1h,f,c
 13361  0164CC  0012               	return		;funcret
 13362  0164CE                     __end_of_stoa:
 13363                           	opt callstack 0
 13364                           
 13365 ;; *************** function _efgtoa *****************
 13366 ;; Defined at:
 13367 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 13368 ;; Parameters:    Size  Location     Type
 13369 ;;  fp              2  [STACK] PTR struct _IO_FILE
 13370 ;;		 -> f(6), NULL(0), 
 13371 ;;  f               4  [STACK] PTR struct _IO_FILE
 13372 ;;  c               1  [STACK] unsigned char 
 13373 ;; Auto vars:     Size  Location     Type
 13374 ;;  u               4  [STACK] unsigned char 
 13375 ;;  g               4  [STACK] unsigned char 
 13376 ;;  l               4  [STACK] unsigned char 
 13377 ;;  h               4  [STACK] unsigned char 
 13378 ;;  ou              4  [STACK] unsigned char 
 13379 ;;  n               2  [STACK] int 
 13380 ;;  e               2  [STACK] int 
 13381 ;;  i               2  [STACK] int 
 13382 ;;  w               2  [STACK] int 
 13383 ;;  p               2  [STACK] int 
 13384 ;;  sign            2  [STACK] int 
 13385 ;;  d               2  [STACK] int 
 13386 ;;  ne              2  [STACK] int 
 13387 ;;  m               2  [STACK] int 
 13388 ;;  pp              2  [STACK] int 
 13389 ;;  t               2  [STACK] int 
 13390 ;;  mode            1  [STACK] unsigned char 
 13391 ;;  nmode           1  [STACK] unsigned char 
 13392 ;; Return value:  Size  Location     Type
 13393 ;;                  2  [STACK] int 
 13394 ;; Registers used:
 13395 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 13396 ;; Tracked objects:
 13397 ;;		On entry : 0/0
 13398 ;;		On exit  : 0/0
 13399 ;;		Unchanged: 0/0
 13400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13405 ;;Total ram usage:        0 bytes
 13406 ;; Hardware stack levels used:    1
 13407 ;; Hardware stack levels required when called:   20
 13408 ;; This function calls:
 13409 ;;		___awdiv
 13410 ;;		___awmod
 13411 ;;		___fladd
 13412 ;;		___fldiv
 13413 ;;		___fleq
 13414 ;;		___flge
 13415 ;;		___flmul
 13416 ;;		___flneg
 13417 ;;		___flsub
 13418 ;;		___fltol
 13419 ;;		___fpclassifyf
 13420 ;;		_floorf
 13421 ;;		_isupper
 13422 ;;		_pad
 13423 ;;		_strcpy
 13424 ;;		_tolower
 13425 ;; This function is called by:
 13426 ;;		_vfpfcnvrt
 13427 ;; This function uses a reentrant model
 13428 ;;
 13429                           
 13430                           	psect	text51
 13431  010000                     __ptext51:
 13432                           	opt callstack 0
 13433  010000                     _efgtoa:
 13434                           	opt callstack 0
 13435                           
 13436                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 13437  010000  0E38               	movlw	56
 13438  010002  26E1               	addwf	fsr1l,f,c
 13439  010004  0E00               	movlw	0
 13440  010006  22E2               	addwfc	fsr1h,f,c
 13441                           
 13442                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 13443                           ;stkvar	_sign @ sp[(-56)+42]
 13444                           
 13445                           ;incstack = 0
 13446 ;; hardware stack exceeded
 13447  010008  0EF2               	movlw	-14
 13448  01000A  6AE3               	clrf	plusw1,c
 13449  01000C  0EF3               	movlw	-13
 13450  01000E  6AE3               	clrf	plusw1,c
 13451                           
 13452                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 13453                           ;stkvar	_f @ sp[(-56)+-6]
 13454  010010  0EC2               	movlw	-62
 13455  010012  006F FF8C  F009    	movff	plusw1,btemp+8
 13456  010018  0EC3               	movlw	-61
 13457  01001A  006F FF8C  F00A    	movff	plusw1,btemp+9
 13458  010020  0EC4               	movlw	-60
 13459  010022  006F FF8C  F00B    	movff	plusw1,btemp+10
 13460  010028  0EC5               	movlw	-59
 13461  01002A  006F FF8C  F00C    	movff	plusw1,btemp+11
 13462                           
 13463                           ;stkvar	_g @ sp[(-56)+16]
 13464  010030  0ED8               	movlw	-40
 13465  010032  0060  F027  FFE3   	movff	btemp+8,plusw1
 13466  010038  0ED9               	movlw	-39
 13467  01003A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 13468  010040  0EDA               	movlw	-38
 13469  010042  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13470  010048  0EDB               	movlw	-37
 13471  01004A  0060  F033  FFE3   	movff	btemp+11,plusw1
 13472                           
 13473                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 13474                           ;stkvar	_g @ sp[(-56)+16]
 13475  010050  0EDB               	movlw	-37
 13476  010052  AEE3               	btfss	plusw1,7,c
 13477  010054  D02B               	goto	l11126
 13478                           
 13479                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 13480  010056  0E01               	movlw	1
 13481  010058  6E0B               	movwf	(btemp+10)^0,c
 13482  01005A  0E00               	movlw	0
 13483  01005C  6E0C               	movwf	(btemp+11)^0,c
 13484                           
 13485                           ;stkvar	_sign @ sp[(-56)+42]
 13486  01005E  0EF2               	movlw	-14
 13487  010060  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13488  010066  0EF3               	movlw	-13
 13489  010068  0060  F033  FFE3   	movff	btemp+11,plusw1
 13490                           
 13491                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 13492                           ;stkvar	_g @ sp[(-56)+16]
 13493  01006E  0ED8               	movlw	-40
 13494  010070  006F FF8F FFE6     	movff	plusw1,postinc1
 13495  010076  006F FF8F FFE6     	movff	plusw1,postinc1
 13496  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
 13497  010082  006F FF8F FFE6     	movff	plusw1,postinc1
 13498  010088  ECBC  F0CF         	call	___flneg	;wreg free
 13499                           
 13500                           ;stkvar	_g @ sp[(-56)+16]
 13501  01008C  0ED8               	movlw	-40
 13502  01008E  0060  F007  FFE3   	movff	btemp,plusw1
 13503  010094  0ED9               	movlw	-39
 13504  010096  0060  F00B  FFE3   	movff	btemp+1,plusw1
 13505  01009C  0EDA               	movlw	-38
 13506  01009E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 13507  0100A4  0EDB               	movlw	-37
 13508  0100A6  0060  F013  FFE3   	movff	btemp+3,plusw1
 13509  0100AC                     l11126:
 13510                           
 13511                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 13512                           ;stkvar	_n @ sp[(-56)+32]
 13513  0100AC  0EE8               	movlw	-24
 13514  0100AE  6AE3               	clrf	plusw1,c
 13515  0100B0  0EE9               	movlw	-23
 13516  0100B2  6AE3               	clrf	plusw1,c
 13517                           
 13518                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 13519                           ;stkvar	_w @ sp[(-56)+38]
 13520  0100B4  0EEE               	movlw	-18
 13521  0100B6  0060  F087  FFE3   	movff	_width,plusw1
 13522  0100BC  0EEF               	movlw	-17
 13523  0100BE  0060  F08B  FFE3   	movff	_width+1,plusw1
 13524                           
 13525                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 13526                           ;stkvar	_sign @ sp[(-56)+42]
 13527  0100C4  0EF2               	movlw	-14
 13528  0100C6  006F FF8C  F001    	movff	plusw1,btemp
 13529  0100CC  0EF3               	movlw	-13
 13530  0100CE  50E3               	movf	plusw1,w,c
 13531  0100D0  1001               	iorwf	btemp^0,w,c
 13532  0100D2  A4D8               	btfss	status,2,c
 13533  0100D4  D002               	goto	u10320
 13534  0100D6  A425               	btfss	_flags^0,2,c
 13535  0100D8  D036               	goto	l11146
 13536  0100DA                     u10320:
 13537                           
 13538                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 13539                           ;stkvar	_sign @ sp[(-56)+42]
 13540  0100DA  0EF2               	movlw	-14
 13541  0100DC  006F FF8C  F001    	movff	plusw1,btemp
 13542  0100E2  0EF3               	movlw	-13
 13543  0100E4  50E3               	movf	plusw1,w,c
 13544  0100E6  1001               	iorwf	btemp^0,w,c
 13545  0100E8  A4D8               	btfss	status,2,c
 13546  0100EA  D002               	goto	l11138
 13547  0100EC  0E2B               	movlw	43
 13548  0100EE  D001               	goto	L11
 13549  0100F0                     l11138:
 13550  0100F0  0E2D               	movlw	45
 13551  0100F2                     L11:
 13552  0100F2  6E0B               	movwf	(btemp+10)^0,c
 13553  0100F4  0E00               	movlw	0
 13554  0100F6  6E0C               	movwf	(btemp+11)^0,c
 13555                           
 13556                           ;stkvar	_efgtoa$5266 @ sp[(-56)+10]
 13557  0100F8  0ED2               	movlw	-46
 13558  0100FA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13559  010100  0ED3               	movlw	-45
 13560  010102  0060  F033  FFE3   	movff	btemp+11,plusw1
 13561                           
 13562                           ;stkvar	_efgtoa$5266 @ sp[(-56)+10]
 13563  010108  0ED2               	movlw	-46
 13564  01010A  006F FF8C  F394    	movff	plusw1,_dbuf
 13565                           
 13566                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 13567                           ;stkvar	_n @ sp[(-56)+32]
 13568  010110  0EE8               	movlw	-24
 13569  010112  50E3               	movf	plusw1,w,c
 13570  010114  0F01               	addlw	1
 13571  010116  6E01               	movwf	btemp^0,c
 13572  010118  0EE8               	movlw	-24
 13573  01011A  0060  F007  FFE3   	movff	btemp,plusw1
 13574  010120  6A01               	clrf	btemp^0,c
 13575  010122  0EE9               	movlw	-23
 13576  010124  50E3               	movf	plusw1,w,c
 13577  010126  2001               	addwfc	btemp^0,w,c
 13578  010128  6E01               	movwf	btemp^0,c
 13579  01012A  0EE9               	movlw	-23
 13580  01012C  0060  F007  FFE3   	movff	btemp,plusw1
 13581                           
 13582                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 13583                           ;stkvar	_w @ sp[(-56)+38]
 13584  010132  50E1               	movf	fsr1l,w,c
 13585  010134  0FEE               	addlw	-18
 13586  010136  6ED9               	movwf	fsr2l,c
 13587  010138  50E2               	movf	fsr1h,w,c
 13588  01013A  6EDA               	movwf	fsr2h,c
 13589  01013C  0EFF               	movlw	255
 13590  01013E  22DA               	addwfc	fsr2h,f,c
 13591  010140  06DE               	decf	postinc2,f,c
 13592  010142  0E00               	movlw	0
 13593  010144  5ADD               	subwfb	postdec2,f,c
 13594  010146                     l11146:
 13595                           
 13596                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 13597                           ;stkvar	_g @ sp[(-56)+16]
 13598  010146  0ED8               	movlw	-40
 13599  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 13600  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 13601  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 13602  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 13603  010160  ECFA  F0BA         	call	___fpclassifyf	;wreg free
 13604  010164  0401               	decf	btemp^0,w,c
 13605  010166  1002               	iorwf	(btemp+1)^0,w,c
 13606  010168  A4D8               	btfss	status,2,c
 13607  01016A  D076               	goto	l11164
 13608  01016C  0EBF               	movlw	191
 13609  01016E  6E0B               	movwf	(btemp+10)^0,c
 13610  010170  0EFF               	movlw	255
 13611  010172  6E0C               	movwf	(btemp+11)^0,c
 13612                           
 13613                           ;stkvar	_c @ sp[(-56)+-7]
 13614  010174  0EC1               	movlw	-63
 13615  010176  50E3               	movf	plusw1,w,c
 13616  010178  6E09               	movwf	(btemp+8)^0,c
 13617  01017A  6A0A               	clrf	(btemp+9)^0,c
 13618  01017C  500B               	movf	(btemp+10)^0,w,c
 13619  01017E  2609               	addwf	(btemp+8)^0,f,c
 13620  010180  500C               	movf	(btemp+11)^0,w,c
 13621  010182  220A               	addwfc	(btemp+9)^0,f,c
 13622  010184  500A               	movf	(btemp+9)^0,w,c
 13623  010186  E106               	bnz	u10350
 13624  010188  0E1A               	movlw	26
 13625  01018A  5C09               	subwf	(btemp+8)^0,w,c
 13626  01018C  B0D8               	btfsc	status,0,c
 13627  01018E  D002               	goto	u10350
 13628  010190  0E01               	movlw	1
 13629  010192  D001               	goto	u10360
 13630  010194                     u10350:
 13631  010194  0E00               	movlw	0
 13632  010196                     u10360:
 13633  010196  6E0B               	movwf	(btemp+10)^0,c
 13634  010198  6A0C               	clrf	(btemp+11)^0,c
 13635                           
 13636                           ;stkvar	_efgtoa$5267 @ sp[(-56)+8]
 13637  01019A  0ED0               	movlw	-48
 13638  01019C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13639  0101A2  0ED1               	movlw	-47
 13640  0101A4  0060  F033  FFE3   	movff	btemp+11,plusw1
 13641                           
 13642                           ;stkvar	_efgtoa$5267 @ sp[(-56)+8]
 13643  0101AA  0ED0               	movlw	-48
 13644  0101AC  006F FF8C  F001    	movff	plusw1,btemp
 13645  0101B2  0ED1               	movlw	-47
 13646  0101B4  50E3               	movf	plusw1,w,c
 13647  0101B6  1001               	iorwf	btemp^0,w,c
 13648  0101B8  B4D8               	btfsc	status,2,c
 13649  0101BA  D017               	goto	l11156
 13650                           
 13651                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 13652  0101BC  0ED7               	movlw	low STR_49
 13653  0101BE  6EE6               	movwf	postinc1,c
 13654  0101C0  0EFF               	movlw	high STR_49
 13655  0101C2  6EE6               	movwf	postinc1,c
 13656                           
 13657                           ;stkvar	_n @ sp[(-58)+32]
 13658  0101C4  0E94               	movlw	low _dbuf
 13659  0101C6  6E0B               	movwf	(btemp+10)^0,c
 13660  0101C8  0E03               	movlw	high _dbuf
 13661  0101CA  6E0C               	movwf	(btemp+11)^0,c
 13662  0101CC  0EE6               	movlw	-26
 13663  0101CE  50E3               	movf	plusw1,w,c
 13664  0101D0  260B               	addwf	(btemp+10)^0,f,c
 13665  0101D2  0EE7               	movlw	-25
 13666  0101D4  50E3               	movf	plusw1,w,c
 13667  0101D6  220C               	addwfc	(btemp+11)^0,f,c
 13668  0101D8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13669  0101DE  0060  F033  FFE6   	movff	btemp+11,postinc1
 13670  0101E4  EC35  F0C7         	call	_strcpy	;wreg free
 13671                           
 13672                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 13673  0101E8  D016               	goto	l11158
 13674  0101EA                     l11156:
 13675                           
 13676                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 13677  0101EA  0EDF               	movlw	low STR_50
 13678  0101EC  6EE6               	movwf	postinc1,c
 13679  0101EE  0EFF               	movlw	high STR_50
 13680  0101F0  6EE6               	movwf	postinc1,c
 13681                           
 13682                           ;stkvar	_n @ sp[(-58)+32]
 13683  0101F2  0E94               	movlw	low _dbuf
 13684  0101F4  6E0B               	movwf	(btemp+10)^0,c
 13685  0101F6  0E03               	movlw	high _dbuf
 13686  0101F8  6E0C               	movwf	(btemp+11)^0,c
 13687  0101FA  0EE6               	movlw	-26
 13688  0101FC  50E3               	movf	plusw1,w,c
 13689  0101FE  260B               	addwf	(btemp+10)^0,f,c
 13690  010200  0EE7               	movlw	-25
 13691  010202  50E3               	movf	plusw1,w,c
 13692  010204  220C               	addwfc	(btemp+11)^0,f,c
 13693  010206  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13694  01020C  0060  F033  FFE6   	movff	btemp+11,postinc1
 13695  010212  EC35  F0C7         	call	_strcpy	;wreg free
 13696  010216                     l11158:
 13697                           
 13698                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 13699                           ;stkvar	_w @ sp[(-56)+38]
 13700  010216  50E1               	movf	fsr1l,w,c
 13701  010218  0FEE               	addlw	-18
 13702  01021A  6ED9               	movwf	fsr2l,c
 13703  01021C  50E2               	movf	fsr1h,w,c
 13704  01021E  6EDA               	movwf	fsr2h,c
 13705  010220  0EFF               	movlw	255
 13706  010222  22DA               	addwfc	fsr2h,f,c
 13707  010224  0EFD               	movlw	253
 13708  010226  26DE               	addwf	postinc2,f,c
 13709  010228  0EFF               	movlw	255
 13710  01022A  22DD               	addwfc	postdec2,f,c
 13711  01022C                     l11160:
 13712                           
 13713                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 13714                           ;stkvar	_w @ sp[(-56)+38]
 13715  01022C  0EEE               	movlw	-18
 13716  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 13717  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 13718  01023A  0E94               	movlw	low _dbuf
 13719  01023C  6EE6               	movwf	postinc1,c
 13720  01023E  0E03               	movlw	high _dbuf
 13721  010240  6EE6               	movwf	postinc1,c
 13722                           
 13723                           ;stkvar	_fp @ sp[(-60)+-2]
 13724  010242  0EC2               	movlw	-62
 13725  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 13726  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 13727  010250  ECAD  F0C3         	call	_pad	;wreg free
 13728  010254  EF1D  F089         	goto	l2116
 13729  010258                     l11164:
 13730                           
 13731                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 13732                           ;stkvar	_g @ sp[(-56)+16]
 13733  010258  0ED8               	movlw	-40
 13734  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 13735  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 13736  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 13737  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 13738  010272  ECFA  F0BA         	call	___fpclassifyf	;wreg free
 13739  010276  5001               	movf	btemp^0,w,c
 13740  010278  1002               	iorwf	(btemp+1)^0,w,c
 13741  01027A  A4D8               	btfss	status,2,c
 13742  01027C  D056               	goto	l11182
 13743  01027E  0EBF               	movlw	191
 13744  010280  6E0B               	movwf	(btemp+10)^0,c
 13745  010282  0EFF               	movlw	255
 13746  010284  6E0C               	movwf	(btemp+11)^0,c
 13747                           
 13748                           ;stkvar	_c @ sp[(-56)+-7]
 13749  010286  0EC1               	movlw	-63
 13750  010288  50E3               	movf	plusw1,w,c
 13751  01028A  6E09               	movwf	(btemp+8)^0,c
 13752  01028C  6A0A               	clrf	(btemp+9)^0,c
 13753  01028E  500B               	movf	(btemp+10)^0,w,c
 13754  010290  2609               	addwf	(btemp+8)^0,f,c
 13755  010292  500C               	movf	(btemp+11)^0,w,c
 13756  010294  220A               	addwfc	(btemp+9)^0,f,c
 13757  010296  500A               	movf	(btemp+9)^0,w,c
 13758  010298  E106               	bnz	u10390
 13759  01029A  0E1A               	movlw	26
 13760  01029C  5C09               	subwf	(btemp+8)^0,w,c
 13761  01029E  B0D8               	btfsc	status,0,c
 13762  0102A0  D002               	goto	u10390
 13763  0102A2  0E01               	movlw	1
 13764  0102A4  D001               	goto	u10400
 13765  0102A6                     u10390:
 13766  0102A6  0E00               	movlw	0
 13767  0102A8                     u10400:
 13768  0102A8  6E0B               	movwf	(btemp+10)^0,c
 13769  0102AA  6A0C               	clrf	(btemp+11)^0,c
 13770                           
 13771                           ;stkvar	_efgtoa$5271 @ sp[(-56)+6]
 13772  0102AC  0ECE               	movlw	-50
 13773  0102AE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13774  0102B4  0ECF               	movlw	-49
 13775  0102B6  0060  F033  FFE3   	movff	btemp+11,plusw1
 13776                           
 13777                           ;stkvar	_efgtoa$5271 @ sp[(-56)+6]
 13778  0102BC  0ECE               	movlw	-50
 13779  0102BE  006F FF8C  F001    	movff	plusw1,btemp
 13780  0102C4  0ECF               	movlw	-49
 13781  0102C6  50E3               	movf	plusw1,w,c
 13782  0102C8  1001               	iorwf	btemp^0,w,c
 13783  0102CA  B4D8               	btfsc	status,2,c
 13784  0102CC  D017               	goto	l11174
 13785                           
 13786                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 13787  0102CE  0EDB               	movlw	low STR_53
 13788  0102D0  6EE6               	movwf	postinc1,c
 13789  0102D2  0EFF               	movlw	high STR_53
 13790  0102D4  6EE6               	movwf	postinc1,c
 13791                           
 13792                           ;stkvar	_n @ sp[(-58)+32]
 13793  0102D6  0E94               	movlw	low _dbuf
 13794  0102D8  6E0B               	movwf	(btemp+10)^0,c
 13795  0102DA  0E03               	movlw	high _dbuf
 13796  0102DC  6E0C               	movwf	(btemp+11)^0,c
 13797  0102DE  0EE6               	movlw	-26
 13798  0102E0  50E3               	movf	plusw1,w,c
 13799  0102E2  260B               	addwf	(btemp+10)^0,f,c
 13800  0102E4  0EE7               	movlw	-25
 13801  0102E6  50E3               	movf	plusw1,w,c
 13802  0102E8  220C               	addwfc	(btemp+11)^0,f,c
 13803  0102EA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13804  0102F0  0060  F033  FFE6   	movff	btemp+11,postinc1
 13805  0102F6  EC35  F0C7         	call	_strcpy	;wreg free
 13806                           
 13807                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 13808  0102FA  D78D               	goto	l11158
 13809  0102FC                     l11174:
 13810                           
 13811                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 13812  0102FC  0EE3               	movlw	low STR_54
 13813  0102FE  6EE6               	movwf	postinc1,c
 13814  010300  0EFF               	movlw	high STR_54
 13815  010302  6EE6               	movwf	postinc1,c
 13816                           
 13817                           ;stkvar	_n @ sp[(-58)+32]
 13818  010304  0E94               	movlw	low _dbuf
 13819  010306  6E0B               	movwf	(btemp+10)^0,c
 13820  010308  0E03               	movlw	high _dbuf
 13821  01030A  6E0C               	movwf	(btemp+11)^0,c
 13822  01030C  0EE6               	movlw	-26
 13823  01030E  50E3               	movf	plusw1,w,c
 13824  010310  260B               	addwf	(btemp+10)^0,f,c
 13825  010312  0EE7               	movlw	-25
 13826  010314  50E3               	movf	plusw1,w,c
 13827  010316  220C               	addwfc	(btemp+11)^0,f,c
 13828  010318  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13829  01031E  0060  F033  FFE6   	movff	btemp+11,postinc1
 13830  010324  EC35  F0C7         	call	_strcpy	;wreg free
 13831  010328  D776               	goto	l11158
 13832  01032A                     l11182:
 13833                           
 13834                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 13835  01032A  0E00               	movlw	0
 13836  01032C  6E09               	movwf	(btemp+8)^0,c
 13837  01032E  0E00               	movlw	0
 13838  010330  6E0A               	movwf	(btemp+9)^0,c
 13839  010332  0E80               	movlw	128
 13840  010334  6E0B               	movwf	(btemp+10)^0,c
 13841  010336  0E3F               	movlw	63
 13842  010338  6E0C               	movwf	(btemp+11)^0,c
 13843                           
 13844                           ;stkvar	_u @ sp[(-56)+12]
 13845  01033A  0ED4               	movlw	-44
 13846  01033C  0060  F027  FFE3   	movff	btemp+8,plusw1
 13847  010342  0ED5               	movlw	-43
 13848  010344  0060  F02B  FFE3   	movff	btemp+9,plusw1
 13849  01034A  0ED6               	movlw	-42
 13850  01034C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13851  010352  0ED7               	movlw	-41
 13852  010354  0060  F033  FFE3   	movff	btemp+11,plusw1
 13853                           
 13854                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 13855                           ;stkvar	_e @ sp[(-56)+34]
 13856  01035A  0EEA               	movlw	-22
 13857  01035C  6AE3               	clrf	plusw1,c
 13858  01035E  0EEB               	movlw	-21
 13859  010360  6AE3               	clrf	plusw1,c
 13860                           
 13861                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 13862  010362  0E00               	movlw	0
 13863  010364  6EE6               	movwf	postinc1,c
 13864  010366  0E00               	movlw	0
 13865  010368  6EE6               	movwf	postinc1,c
 13866  01036A  0E00               	movlw	0
 13867  01036C  6EE6               	movwf	postinc1,c
 13868  01036E  0E00               	movlw	0
 13869  010370  6EE6               	movwf	postinc1,c
 13870                           
 13871                           ;stkvar	_g @ sp[(-60)+16]
 13872  010372  0ED4               	movlw	-44
 13873  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 13874  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 13875  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 13876  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 13877  01038C  EC9F  F0C7         	call	___fleq	;wreg free
 13878  010390  A001               	btfss	btemp& (0+255),0,c
 13879  010392  D039               	goto	l11194
 13880  010394  D0BC               	goto	u10440
 13881  010396                     l11190:
 13882                           
 13883                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 13884  010396  0E00               	movlw	0
 13885  010398  6EE6               	movwf	postinc1,c
 13886  01039A  0E00               	movlw	0
 13887  01039C  6EE6               	movwf	postinc1,c
 13888  01039E  0E20               	movlw	32
 13889  0103A0  6EE6               	movwf	postinc1,c
 13890  0103A2  0E41               	movlw	65
 13891  0103A4  6EE6               	movwf	postinc1,c
 13892                           
 13893                           ;stkvar	_u @ sp[(-60)+12]
 13894  0103A6  0ED0               	movlw	-48
 13895  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 13896  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 13897  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 13898  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 13899  0103C0  EC05  F096         	call	___flmul	;wreg free
 13900                           
 13901                           ;stkvar	_u @ sp[(-56)+12]
 13902  0103C4  0ED4               	movlw	-44
 13903  0103C6  0060  F007  FFE3   	movff	btemp,plusw1
 13904  0103CC  0ED5               	movlw	-43
 13905  0103CE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 13906  0103D4  0ED6               	movlw	-42
 13907  0103D6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 13908  0103DC  0ED7               	movlw	-41
 13909  0103DE  0060  F013  FFE3   	movff	btemp+3,plusw1
 13910                           
 13911                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 13912                           ;stkvar	_e @ sp[(-56)+34]
 13913  0103E4  0EEA               	movlw	-22
 13914  0103E6  50E3               	movf	plusw1,w,c
 13915  0103E8  0F01               	addlw	1
 13916  0103EA  6E01               	movwf	btemp^0,c
 13917  0103EC  0EEA               	movlw	-22
 13918  0103EE  0060  F007  FFE3   	movff	btemp,plusw1
 13919  0103F4  6A01               	clrf	btemp^0,c
 13920  0103F6  0EEB               	movlw	-21
 13921  0103F8  50E3               	movf	plusw1,w,c
 13922  0103FA  2001               	addwfc	btemp^0,w,c
 13923  0103FC  6E01               	movwf	btemp^0,c
 13924  0103FE  0EEB               	movlw	-21
 13925  010400  0060  F007  FFE3   	movff	btemp,plusw1
 13926  010406                     l11194:
 13927                           
 13928                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 13929  010406  0E00               	movlw	0
 13930  010408  6EE6               	movwf	postinc1,c
 13931  01040A  0E00               	movlw	0
 13932  01040C  6EE6               	movwf	postinc1,c
 13933  01040E  0E20               	movlw	32
 13934  010410  6EE6               	movwf	postinc1,c
 13935  010412  0E41               	movlw	65
 13936  010414  6EE6               	movwf	postinc1,c
 13937                           
 13938                           ;stkvar	_u @ sp[(-60)+12]
 13939  010416  0ED0               	movlw	-48
 13940  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 13941  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 13942  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 13943  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 13944  010430  EC05  F096         	call	___flmul	;wreg free
 13945  010434  0060  F007  FFE6   	movff	btemp,postinc1
 13946  01043A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13947  010440  0060  F00F  FFE6   	movff	btemp+2,postinc1
 13948  010446  0060  F013  FFE6   	movff	btemp+3,postinc1
 13949                           
 13950                           ;stkvar	_g @ sp[(-60)+16]
 13951  01044C  0ED4               	movlw	-44
 13952  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 13953  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 13954  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 13955  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 13956  010466  ECB0  F0BE         	call	___flge	;wreg free
 13957  01046A  A001               	btfss	btemp& (0+255),0,c
 13958  01046C  D032               	goto	l11200
 13959  01046E  D793               	goto	l11190
 13960  010470                     l11196:
 13961                           
 13962                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 13963  010470  0E00               	movlw	0
 13964  010472  6EE6               	movwf	postinc1,c
 13965  010474  0E00               	movlw	0
 13966  010476  6EE6               	movwf	postinc1,c
 13967  010478  0E20               	movlw	32
 13968  01047A  6EE6               	movwf	postinc1,c
 13969  01047C  0E41               	movlw	65
 13970  01047E  6EE6               	movwf	postinc1,c
 13971                           
 13972                           ;stkvar	_u @ sp[(-60)+12]
 13973  010480  0ED0               	movlw	-48
 13974  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 13975  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 13976  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 13977  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 13978  01049A  EC3B  F0A1         	call	___fldiv	;wreg free
 13979                           
 13980                           ;stkvar	_u @ sp[(-56)+12]
 13981  01049E  0ED4               	movlw	-44
 13982  0104A0  0060  F007  FFE3   	movff	btemp,plusw1
 13983  0104A6  0ED5               	movlw	-43
 13984  0104A8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 13985  0104AE  0ED6               	movlw	-42
 13986  0104B0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 13987  0104B6  0ED7               	movlw	-41
 13988  0104B8  0060  F013  FFE3   	movff	btemp+3,plusw1
 13989                           
 13990                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 13991                           ;stkvar	_e @ sp[(-56)+34]
 13992  0104BE  50E1               	movf	fsr1l,w,c
 13993  0104C0  0FEA               	addlw	-22
 13994  0104C2  6ED9               	movwf	fsr2l,c
 13995  0104C4  50E2               	movf	fsr1h,w,c
 13996  0104C6  6EDA               	movwf	fsr2h,c
 13997  0104C8  0EFF               	movlw	255
 13998  0104CA  22DA               	addwfc	fsr2h,f,c
 13999  0104CC  06DE               	decf	postinc2,f,c
 14000  0104CE  0E00               	movlw	0
 14001  0104D0  5ADD               	subwfb	postdec2,f,c
 14002  0104D2                     l11200:
 14003                           
 14004                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 14005                           ;stkvar	_u @ sp[(-56)+12]
 14006  0104D2  0ED4               	movlw	-44
 14007  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 14008  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 14009  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 14010  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 14011                           
 14012                           ;stkvar	_g @ sp[(-60)+16]
 14013  0104EC  0ED4               	movlw	-44
 14014  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 14015  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 14016  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 14017  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 14018  010506  ECB0  F0BE         	call	___flge	;wreg free
 14019  01050A  A001               	btfss	btemp& (0+255),0,c
 14020  01050C  D7B1               	goto	l11196
 14021  01050E                     u10440:
 14022                           
 14023                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 14024                           ;stkvar	_c @ sp[(-56)+-7]
 14025  01050E  0EC1               	movlw	-63
 14026  010510  50E3               	movf	plusw1,w,c
 14027  010512  6EE6               	movwf	postinc1,c
 14028  010514  0E00               	movlw	0
 14029  010516  6EE6               	movwf	postinc1,c
 14030  010518  EC56  F0CC         	call	_tolower	;wreg free
 14031                           
 14032                           ;stkvar	_mode @ sp[(-56)+54]
 14033  01051C  0EFE               	movlw	-2
 14034  01051E  0060  F007  FFE3   	movff	btemp,plusw1
 14035                           
 14036                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 14037                           ;stkvar	_mode @ sp[(-56)+54]
 14038                           ;stkvar	_nmode @ sp[(-56)+55]
 14039  010524  0EFE               	movlw	-2
 14040  010526  006F FF8C  F001    	movff	plusw1,btemp
 14041  01052C  0EFF               	movlw	-1
 14042  01052E  0060  F007  FFE3   	movff	btemp,plusw1
 14043                           
 14044                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 14045                           ;stkvar	_mode @ sp[(-56)+54]
 14046  010534  0EFE               	movlw	-2
 14047  010536  006F FF8C  F001    	movff	plusw1,btemp
 14048  01053C  0E67               	movlw	103
 14049  01053E  1801               	xorwf	btemp^0,w,c
 14050  010540  A4D8               	btfss	status,2,c
 14051  010542  D025               	goto	l11218
 14052                           
 14053                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 14054  010544  5023               	movf	_prec^0,w,c
 14055  010546  1024               	iorwf	(_prec+1)^0,w,c
 14056  010548  A4D8               	btfss	status,2,c
 14057  01054A  D004               	goto	l11212
 14058                           
 14059                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 14060  01054C  0E00               	movlw	0
 14061  01054E  6E24               	movwf	(_prec+1)^0,c
 14062  010550  0E01               	movlw	1
 14063  010552  6E23               	movwf	_prec^0,c
 14064  010554                     l11212:
 14065                           
 14066                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 14067  010554  BE24               	btfsc	(_prec+1)^0,7,c
 14068  010556  D005               	goto	u10470
 14069  010558  5024               	movf	(_prec+1)^0,w,c
 14070  01055A  E110               	bnz	l11216
 14071  01055C  0423               	decf	_prec^0,w,c
 14072  01055E  B0D8               	btfsc	status,0,c
 14073  010560  D00D               	goto	l11216
 14074  010562                     u10470:
 14075  010562  0E06               	movlw	6
 14076  010564  6E0B               	movwf	(btemp+10)^0,c
 14077  010566  0E00               	movlw	0
 14078  010568  6E0C               	movwf	(btemp+11)^0,c
 14079                           
 14080                           ;stkvar	_p @ sp[(-56)+40]
 14081  01056A  0EF0               	movlw	-16
 14082  01056C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14083  010572  0EF1               	movlw	-15
 14084  010574  0060  F033  FFE3   	movff	btemp+11,plusw1
 14085  01057A  D00C               	goto	l11224
 14086  01057C                     l11216:
 14087                           
 14088                           ;stkvar	_p @ sp[(-56)+40]
 14089  01057C  0EF0               	movlw	-16
 14090  01057E  0060  F08F  FFE3   	movff	_prec,plusw1
 14091  010584  0EF1               	movlw	-15
 14092  010586  0060  F093  FFE3   	movff	_prec+1,plusw1
 14093  01058C  D003               	goto	l11224
 14094  01058E                     l11218:
 14095                           
 14096                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 14097  01058E  AE24               	btfss	(_prec+1)^0,7,c
 14098  010590  D7F5               	goto	l11216
 14099  010592  D7E7               	goto	u10470
 14100  010594                     l11224:
 14101                           
 14102                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 14103                           ;stkvar	_mode @ sp[(-56)+54]
 14104  010594  0EFE               	movlw	-2
 14105  010596  006F FF8C  F001    	movff	plusw1,btemp
 14106  01059C  0E67               	movlw	103
 14107  01059E  1801               	xorwf	btemp^0,w,c
 14108  0105A0  A4D8               	btfss	status,2,c
 14109  0105A2  D02F               	goto	l11234
 14110                           
 14111                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 14112                           ;stkvar	_e @ sp[(-56)+34]
 14113  0105A4  0EEB               	movlw	-21
 14114  0105A6  AEE3               	btfss	plusw1,7,c
 14115  0105A8  D00E               	goto	u10500
 14116  0105AA  0EEA               	movlw	-22
 14117  0105AC  006F FF8C  F001    	movff	plusw1,btemp
 14118  0105B2  0EFC               	movlw	252
 14119  0105B4  5E01               	subwf	btemp^0,f,c
 14120  0105B6  0EEB               	movlw	-21
 14121  0105B8  006F FF8C  F001    	movff	plusw1,btemp
 14122  0105BE  0EFF               	movlw	255
 14123  0105C0  5A01               	subwfb	btemp^0,f,c
 14124  0105C2  A0D8               	btfss	status,0,c
 14125  0105C4  D018               	goto	l11232
 14126  0105C6                     u10500:
 14127                           
 14128                           ;stkvar	_e @ sp[(-56)+34]
 14129                           ;stkvar	_p @ sp[(-56)+40]
 14130  0105C6  0EF0               	movlw	-16
 14131  0105C8  50E3               	movf	plusw1,w,c
 14132  0105CA  0FFF               	addlw	255
 14133  0105CC  6E0B               	movwf	(btemp+10)^0,c
 14134  0105CE  0EF1               	movlw	-15
 14135  0105D0  006F FF8C  F00C    	movff	plusw1,btemp+11
 14136  0105D6  0EFF               	movlw	255
 14137  0105D8  220C               	addwfc	(btemp+11)^0,f,c
 14138  0105DA  0EEA               	movlw	-22
 14139  0105DC  50E3               	movf	plusw1,w,c
 14140  0105DE  5C0B               	subwf	(btemp+10)^0,w,c
 14141  0105E0  500C               	movf	(btemp+11)^0,w,c
 14142  0105E2  0A80               	xorlw	128
 14143  0105E4  6E01               	movwf	btemp^0,c
 14144  0105E6  0EEB               	movlw	-21
 14145  0105E8  50E3               	movf	plusw1,w,c
 14146  0105EA  0A80               	xorlw	128
 14147  0105EC  5801               	subwfb	btemp^0,w,c
 14148  0105EE  A0D8               	btfss	status,0,c
 14149  0105F0  D002               	goto	l11232
 14150                           
 14151                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 14152  0105F2  0E66               	movlw	102
 14153  0105F4  D001               	goto	L12
 14154  0105F6                     l11232:
 14155                           
 14156                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 14157  0105F6  0E65               	movlw	101
 14158  0105F8                     L12:
 14159  0105F8  6E0C               	movwf	(btemp+11)^0,c
 14160                           
 14161                           ;stkvar	_nmode @ sp[(-56)+55]
 14162  0105FA  0EFF               	movlw	-1
 14163  0105FC  0060  F033  FFE3   	movff	btemp+11,plusw1
 14164  010602                     l11234:
 14165                           
 14166                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 14167                           ;stkvar	_p @ sp[(-56)+40]
 14168                           ;stkvar	_m @ sp[(-56)+48]
 14169  010602  0EF0               	movlw	-16
 14170  010604  006F FF8C  F001    	movff	plusw1,btemp
 14171  01060A  0EF8               	movlw	-8
 14172  01060C  0060  F007  FFE3   	movff	btemp,plusw1
 14173  010612  0EF1               	movlw	-15
 14174  010614  006F FF8C  F001    	movff	plusw1,btemp
 14175  01061A  0EF9               	movlw	-7
 14176  01061C  0060  F007  FFE3   	movff	btemp,plusw1
 14177                           
 14178                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 14179                           ;stkvar	_mode @ sp[(-56)+54]
 14180  010622  0EFE               	movlw	-2
 14181  010624  006F FF8C  F001    	movff	plusw1,btemp
 14182  01062A  0E67               	movlw	103
 14183  01062C  1801               	xorwf	btemp^0,w,c
 14184  01062E  A4D8               	btfss	status,2,c
 14185  010630  D00B               	goto	u10540
 14186                           
 14187                           ;stkvar	_nmode @ sp[(-56)+55]
 14188  010632  0EFF               	movlw	-1
 14189  010634  006F FF8C  F001    	movff	plusw1,btemp
 14190  01063A  0E66               	movlw	102
 14191  01063C  1801               	xorwf	btemp^0,w,c
 14192  01063E  A4D8               	btfss	status,2,c
 14193  010640  D014               	goto	l2145
 14194                           
 14195                           ;stkvar	_e @ sp[(-56)+34]
 14196  010642  0EEB               	movlw	-21
 14197  010644  AEE3               	btfss	plusw1,7,c
 14198  010646  D011               	goto	l2145
 14199  010648                     u10540:
 14200                           
 14201                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 14202                           ;stkvar	_m @ sp[(-56)+48]
 14203  010648  0EF8               	movlw	-8
 14204  01064A  50E3               	movf	plusw1,w,c
 14205  01064C  0F01               	addlw	1
 14206  01064E  6E01               	movwf	btemp^0,c
 14207  010650  0EF8               	movlw	-8
 14208  010652  0060  F007  FFE3   	movff	btemp,plusw1
 14209  010658  6A01               	clrf	btemp^0,c
 14210  01065A  0EF9               	movlw	-7
 14211  01065C  50E3               	movf	plusw1,w,c
 14212  01065E  2001               	addwfc	btemp^0,w,c
 14213  010660  6E01               	movwf	btemp^0,c
 14214  010662  0EF9               	movlw	-7
 14215  010664  0060  F007  FFE3   	movff	btemp,plusw1
 14216  01066A                     l2145:
 14217                           
 14218                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 14219                           ;stkvar	_nmode @ sp[(-56)+55]
 14220  01066A  0EFF               	movlw	-1
 14221  01066C  006F FF8C  F001    	movff	plusw1,btemp
 14222  010672  0E66               	movlw	102
 14223  010674  1801               	xorwf	btemp^0,w,c
 14224  010676  A4D8               	btfss	status,2,c
 14225  010678  D03B               	goto	l11254
 14226                           
 14227                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 14228                           ;stkvar	_e @ sp[(-56)+34]
 14229  01067A  0EEB               	movlw	-21
 14230  01067C  AEE3               	btfss	plusw1,7,c
 14231  01067E  D01C               	goto	l11250
 14232                           
 14233                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 14234  010680  0E00               	movlw	0
 14235  010682  6E09               	movwf	(btemp+8)^0,c
 14236  010684  0E00               	movlw	0
 14237  010686  6E0A               	movwf	(btemp+9)^0,c
 14238  010688  0E80               	movlw	128
 14239  01068A  6E0B               	movwf	(btemp+10)^0,c
 14240  01068C  0E3F               	movlw	63
 14241  01068E  6E0C               	movwf	(btemp+11)^0,c
 14242                           
 14243                           ;stkvar	_u @ sp[(-56)+12]
 14244  010690  0ED4               	movlw	-44
 14245  010692  0060  F027  FFE3   	movff	btemp+8,plusw1
 14246  010698  0ED5               	movlw	-43
 14247  01069A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 14248  0106A0  0ED6               	movlw	-42
 14249  0106A2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14250  0106A8  0ED7               	movlw	-41
 14251  0106AA  0060  F033  FFE3   	movff	btemp+11,plusw1
 14252                           
 14253                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 14254                           ;stkvar	_e @ sp[(-56)+34]
 14255  0106B0  0EEA               	movlw	-22
 14256  0106B2  6AE3               	clrf	plusw1,c
 14257  0106B4  0EEB               	movlw	-21
 14258  0106B6  6AE3               	clrf	plusw1,c
 14259  0106B8                     l11250:
 14260                           
 14261                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 14262                           ;stkvar	_mode @ sp[(-56)+54]
 14263  0106B8  0EFE               	movlw	-2
 14264  0106BA  006F FF8C  F001    	movff	plusw1,btemp
 14265  0106C0  0E67               	movlw	103
 14266  0106C2  1801               	xorwf	btemp^0,w,c
 14267  0106C4  B4D8               	btfsc	status,2,c
 14268  0106C6  D014               	goto	l11254
 14269                           
 14270                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 14271                           ;stkvar	_e @ sp[(-56)+34]
 14272                           ;stkvar	_m @ sp[(-56)+48]
 14273  0106C8  0EF8               	movlw	-8
 14274  0106CA  50E3               	movf	plusw1,w,c
 14275  0106CC  6E01               	movwf	btemp^0,c
 14276  0106CE  0EEA               	movlw	-22
 14277  0106D0  50E3               	movf	plusw1,w,c
 14278  0106D2  2601               	addwf	btemp^0,f,c
 14279  0106D4  0EF8               	movlw	-8
 14280  0106D6  0060  F007  FFE3   	movff	btemp,plusw1
 14281  0106DC  0EF9               	movlw	-7
 14282  0106DE  50E3               	movf	plusw1,w,c
 14283  0106E0  6E01               	movwf	btemp^0,c
 14284  0106E2  0EEB               	movlw	-21
 14285  0106E4  50E3               	movf	plusw1,w,c
 14286  0106E6  2201               	addwfc	btemp^0,f,c
 14287  0106E8  0EF9               	movlw	-7
 14288  0106EA  0060  F007  FFE3   	movff	btemp,plusw1
 14289  0106F0                     l11254:
 14290                           
 14291                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 14292                           ;stkvar	_i @ sp[(-56)+36]
 14293  0106F0  0EEC               	movlw	-20
 14294  0106F2  6AE3               	clrf	plusw1,c
 14295  0106F4  0EED               	movlw	-19
 14296  0106F6  6AE3               	clrf	plusw1,c
 14297                           
 14298                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 14299                           ;stkvar	_g @ sp[(-56)+16]
 14300  0106F8  0ED8               	movlw	-40
 14301  0106FA  006F FF8C  F009    	movff	plusw1,btemp+8
 14302  010700  0ED9               	movlw	-39
 14303  010702  006F FF8C  F00A    	movff	plusw1,btemp+9
 14304  010708  0EDA               	movlw	-38
 14305  01070A  006F FF8C  F00B    	movff	plusw1,btemp+10
 14306  010710  0EDB               	movlw	-37
 14307  010712  006F FF8C  F00C    	movff	plusw1,btemp+11
 14308                           
 14309                           ;stkvar	_h @ sp[(-56)+24]
 14310  010718  0EE0               	movlw	-32
 14311  01071A  0060  F027  FFE3   	movff	btemp+8,plusw1
 14312  010720  0EE1               	movlw	-31
 14313  010722  0060  F02B  FFE3   	movff	btemp+9,plusw1
 14314  010728  0EE2               	movlw	-30
 14315  01072A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14316  010730  0EE3               	movlw	-29
 14317  010732  0060  F033  FFE3   	movff	btemp+11,plusw1
 14318                           
 14319                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 14320                           ;stkvar	_u @ sp[(-56)+12]
 14321  010738  0ED4               	movlw	-44
 14322  01073A  006F FF8C  F009    	movff	plusw1,btemp+8
 14323  010740  0ED5               	movlw	-43
 14324  010742  006F FF8C  F00A    	movff	plusw1,btemp+9
 14325  010748  0ED6               	movlw	-42
 14326  01074A  006F FF8C  F00B    	movff	plusw1,btemp+10
 14327  010750  0ED7               	movlw	-41
 14328  010752  006F FF8C  F00C    	movff	plusw1,btemp+11
 14329                           
 14330                           ;stkvar	_ou @ sp[(-56)+28]
 14331  010758  0EE4               	movlw	-28
 14332  01075A  0060  F027  FFE3   	movff	btemp+8,plusw1
 14333  010760  0EE5               	movlw	-27
 14334  010762  0060  F02B  FFE3   	movff	btemp+9,plusw1
 14335  010768  0EE6               	movlw	-26
 14336  01076A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14337  010770  0EE7               	movlw	-25
 14338  010772  0060  F033  FFE3   	movff	btemp+11,plusw1
 14339                           
 14340                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 14341  010778  D0D6               	goto	l11270
 14342  01077A                     l11260:
 14343                           
 14344                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 14345                           ;stkvar	_u @ sp[(-56)+12]
 14346  01077A  0ED4               	movlw	-44
 14347  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 14348  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 14349  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 14350  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 14351                           
 14352                           ;stkvar	_h @ sp[(-60)+24]
 14353  010794  0EDC               	movlw	-36
 14354  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 14355  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 14356  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 14357  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 14358  0107AE  EC3B  F0A1         	call	___fldiv	;wreg free
 14359  0107B2  0060  F007  FFE6   	movff	btemp,postinc1
 14360  0107B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 14361  0107BE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 14362  0107C4  0060  F013  FFE6   	movff	btemp+3,postinc1
 14363  0107CA  EC3C  F0AC         	call	_floorf	;wreg free
 14364                           
 14365                           ;stkvar	_l @ sp[(-56)+20]
 14366  0107CE  0EDC               	movlw	-36
 14367  0107D0  0060  F007  FFE3   	movff	btemp,plusw1
 14368  0107D6  0EDD               	movlw	-35
 14369  0107D8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 14370  0107DE  0EDE               	movlw	-34
 14371  0107E0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 14372  0107E6  0EDF               	movlw	-33
 14373  0107E8  0060  F013  FFE3   	movff	btemp+3,plusw1
 14374                           
 14375                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 14376                           ;stkvar	_l @ sp[(-56)+20]
 14377  0107EE  0EDC               	movlw	-36
 14378  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 14379  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 14380  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 14381  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 14382  010808  EC3F  F0BD         	call	___fltol	;wreg free
 14383  01080C  0060  F004  F00B   	movff	btemp,btemp+10
 14384  010812  0060  F008  F00C   	movff	btemp+1,btemp+11
 14385                           
 14386                           ;stkvar	_d @ sp[(-56)+44]
 14387  010818  0EF4               	movlw	-12
 14388  01081A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14389  010820  0EF5               	movlw	-11
 14390  010822  0060  F033  FFE3   	movff	btemp+11,plusw1
 14391                           
 14392                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 14393                           ;stkvar	_u @ sp[(-56)+12]
 14394  010828  0ED4               	movlw	-44
 14395  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 14396  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 14397  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 14398  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 14399                           
 14400                           ;stkvar	_l @ sp[(-60)+20]
 14401  010842  0ED8               	movlw	-40
 14402  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 14403  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 14404  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 14405  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 14406  01085C  EC05  F096         	call	___flmul	;wreg free
 14407  010860  0060  F007  FFE6   	movff	btemp,postinc1
 14408  010866  0060  F00B  FFE6   	movff	btemp+1,postinc1
 14409  01086C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 14410  010872  0060  F013  FFE6   	movff	btemp+3,postinc1
 14411                           
 14412                           ;stkvar	_h @ sp[(-60)+24]
 14413  010878  0EDC               	movlw	-36
 14414  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 14415  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 14416  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 14417  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 14418  010892  EC03  F0D0         	call	___flsub	;wreg free
 14419                           
 14420                           ;stkvar	_h @ sp[(-56)+24]
 14421  010896  0EE0               	movlw	-32
 14422  010898  0060  F007  FFE3   	movff	btemp,plusw1
 14423  01089E  0EE1               	movlw	-31
 14424  0108A0  0060  F00B  FFE3   	movff	btemp+1,plusw1
 14425  0108A6  0EE2               	movlw	-30
 14426  0108A8  0060  F00F  FFE3   	movff	btemp+2,plusw1
 14427  0108AE  0EE3               	movlw	-29
 14428  0108B0  0060  F013  FFE3   	movff	btemp+3,plusw1
 14429                           
 14430                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 14431  0108B6  0E00               	movlw	0
 14432  0108B8  6EE6               	movwf	postinc1,c
 14433  0108BA  0E00               	movlw	0
 14434  0108BC  6EE6               	movwf	postinc1,c
 14435  0108BE  0E20               	movlw	32
 14436  0108C0  6EE6               	movwf	postinc1,c
 14437  0108C2  0E41               	movlw	65
 14438  0108C4  6EE6               	movwf	postinc1,c
 14439                           
 14440                           ;stkvar	_u @ sp[(-60)+12]
 14441  0108C6  0ED0               	movlw	-48
 14442  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 14443  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 14444  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 14445  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 14446  0108E0  EC3B  F0A1         	call	___fldiv	;wreg free
 14447                           
 14448                           ;stkvar	_u @ sp[(-56)+12]
 14449  0108E4  0ED4               	movlw	-44
 14450  0108E6  0060  F007  FFE3   	movff	btemp,plusw1
 14451  0108EC  0ED5               	movlw	-43
 14452  0108EE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 14453  0108F4  0ED6               	movlw	-42
 14454  0108F6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 14455  0108FC  0ED7               	movlw	-41
 14456  0108FE  0060  F013  FFE3   	movff	btemp+3,plusw1
 14457                           
 14458                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 14459                           ;stkvar	_i @ sp[(-56)+36]
 14460  010904  0EEC               	movlw	-20
 14461  010906  50E3               	movf	plusw1,w,c
 14462  010908  0F01               	addlw	1
 14463  01090A  6E01               	movwf	btemp^0,c
 14464  01090C  0EEC               	movlw	-20
 14465  01090E  0060  F007  FFE3   	movff	btemp,plusw1
 14466  010914  6A01               	clrf	btemp^0,c
 14467  010916  0EED               	movlw	-19
 14468  010918  50E3               	movf	plusw1,w,c
 14469  01091A  2001               	addwfc	btemp^0,w,c
 14470  01091C  6E01               	movwf	btemp^0,c
 14471  01091E  0EED               	movlw	-19
 14472  010920  0060  F007  FFE3   	movff	btemp,plusw1
 14473  010926                     l11270:
 14474                           
 14475                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 14476                           ;stkvar	_m @ sp[(-56)+48]
 14477                           ;stkvar	_i @ sp[(-56)+36]
 14478  010926  50E1               	movf	fsr1l,w,c
 14479  010928  0FEC               	addlw	-20
 14480  01092A  6ED9               	movwf	fsr2l,c
 14481  01092C  50E2               	movf	fsr1h,w,c
 14482  01092E  6EDA               	movwf	fsr2h,c
 14483  010930  0EFF               	movlw	255
 14484  010932  22DA               	addwfc	fsr2h,f,c
 14485  010934  0EF8               	movlw	-8
 14486  010936  50E3               	movf	plusw1,w,c
 14487  010938  5CDE               	subwf	postinc2,w,c
 14488  01093A  50DE               	movf	postinc2,w,c
 14489  01093C  0A80               	xorlw	128
 14490  01093E  6E01               	movwf	btemp^0,c
 14491  010940  0EF9               	movlw	-7
 14492  010942  50E3               	movf	plusw1,w,c
 14493  010944  0A80               	xorlw	128
 14494  010946  5801               	subwfb	btemp^0,w,c
 14495  010948  A0D8               	btfss	status,0,c
 14496  01094A  D717               	goto	l11260
 14497                           
 14498                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 14499  01094C  0E00               	movlw	0
 14500  01094E  6EE6               	movwf	postinc1,c
 14501  010950  0E00               	movlw	0
 14502  010952  6EE6               	movwf	postinc1,c
 14503  010954  0EA0               	movlw	160
 14504  010956  6EE6               	movwf	postinc1,c
 14505  010958  0E40               	movlw	64
 14506  01095A  6EE6               	movwf	postinc1,c
 14507                           
 14508                           ;stkvar	_u @ sp[(-60)+12]
 14509  01095C  0ED0               	movlw	-48
 14510  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 14511  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 14512  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 14513  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 14514  010976  EC05  F096         	call	___flmul	;wreg free
 14515                           
 14516                           ;stkvar	_l @ sp[(-56)+20]
 14517  01097A  0EDC               	movlw	-36
 14518  01097C  0060  F007  FFE3   	movff	btemp,plusw1
 14519  010982  0EDD               	movlw	-35
 14520  010984  0060  F00B  FFE3   	movff	btemp+1,plusw1
 14521  01098A  0EDE               	movlw	-34
 14522  01098C  0060  F00F  FFE3   	movff	btemp+2,plusw1
 14523  010992  0EDF               	movlw	-33
 14524  010994  0060  F013  FFE3   	movff	btemp+3,plusw1
 14525                           
 14526                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 14527                           ;stkvar	_l @ sp[(-56)+20]
 14528  01099A  0EDC               	movlw	-36
 14529  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 14530  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 14531  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 14532  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 14533                           
 14534                           ;stkvar	_h @ sp[(-60)+24]
 14535  0109B4  0EDC               	movlw	-36
 14536  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 14537  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 14538  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 14539  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 14540  0109CE  ECB0  F0BE         	call	___flge	;wreg free
 14541  0109D2  A001               	btfss	btemp& (0+255),0,c
 14542  0109D4  D021               	goto	u10610
 14543                           
 14544                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 14545                           ;stkvar	_l @ sp[(-56)+20]
 14546                           
 14547                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 14548                           
 14549                           ;stkvar	_l @ sp[(-56)+20]
 14550                           
 14551                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 14552  0109D6  0EDC               	movlw	-36
 14553  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 14554  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 14555  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 14556  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 14557                           
 14558                           ;stkvar	_h @ sp[(-60)+24]
 14559  0109F0  0EDC               	movlw	-36
 14560  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 14561  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 14562  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 14563  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 14564  010A0A  EC9F  F0C7         	call	___fleq	;wreg free
 14565  010A0E  A001               	btfss	btemp& (0+255),0,c
 14566  010A10  D01B               	goto	l11284
 14567                           
 14568                           ;stkvar	_d @ sp[(-56)+44]
 14569  010A12  0EF4               	movlw	-12
 14570  010A14  B0E3               	btfsc	plusw1,0,c
 14571  010A16  D018               	goto	l11284
 14572  010A18                     u10610:
 14573                           
 14574                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 14575  010A18  0E00               	movlw	0
 14576  010A1A  6E09               	movwf	(btemp+8)^0,c
 14577  010A1C  0E00               	movlw	0
 14578  010A1E  6E0A               	movwf	(btemp+9)^0,c
 14579  010A20  0E00               	movlw	0
 14580  010A22  6E0B               	movwf	(btemp+10)^0,c
 14581  010A24  0E00               	movlw	0
 14582  010A26  6E0C               	movwf	(btemp+11)^0,c
 14583                           
 14584                           ;stkvar	_l @ sp[(-56)+20]
 14585  010A28  0EDC               	movlw	-36
 14586  010A2A  0060  F027  FFE3   	movff	btemp+8,plusw1
 14587  010A30  0EDD               	movlw	-35
 14588  010A32  0060  F02B  FFE3   	movff	btemp+9,plusw1
 14589  010A38  0EDE               	movlw	-34
 14590  010A3A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14591  010A40  0EDF               	movlw	-33
 14592  010A42  0060  F033  FFE3   	movff	btemp+11,plusw1
 14593  010A48                     l11284:
 14594                           
 14595                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 14596                           ;stkvar	_l @ sp[(-56)+20]
 14597  010A48  0EDC               	movlw	-36
 14598  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 14599  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 14600  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 14601  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 14602                           
 14603                           ;stkvar	_g @ sp[(-60)+16]
 14604  010A62  0ED4               	movlw	-44
 14605  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 14606  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 14607  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 14608  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 14609  010A7C  EC1A  F09A         	call	___fladd	;wreg free
 14610                           
 14611                           ;stkvar	_h @ sp[(-56)+24]
 14612  010A80  0EE0               	movlw	-32
 14613  010A82  0060  F007  FFE3   	movff	btemp,plusw1
 14614  010A88  0EE1               	movlw	-31
 14615  010A8A  0060  F00B  FFE3   	movff	btemp+1,plusw1
 14616  010A90  0EE2               	movlw	-30
 14617  010A92  0060  F00F  FFE3   	movff	btemp+2,plusw1
 14618  010A98  0EE3               	movlw	-29
 14619  010A9A  0060  F013  FFE3   	movff	btemp+3,plusw1
 14620                           
 14621                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 14622                           ;stkvar	_ou @ sp[(-56)+28]
 14623  010AA0  0EE4               	movlw	-28
 14624  010AA2  006F FF8C  F009    	movff	plusw1,btemp+8
 14625  010AA8  0EE5               	movlw	-27
 14626  010AAA  006F FF8C  F00A    	movff	plusw1,btemp+9
 14627  010AB0  0EE6               	movlw	-26
 14628  010AB2  006F FF8C  F00B    	movff	plusw1,btemp+10
 14629  010AB8  0EE7               	movlw	-25
 14630  010ABA  006F FF8C  F00C    	movff	plusw1,btemp+11
 14631                           
 14632                           ;stkvar	_u @ sp[(-56)+12]
 14633  010AC0  0ED4               	movlw	-44
 14634  010AC2  0060  F027  FFE3   	movff	btemp+8,plusw1
 14635  010AC8  0ED5               	movlw	-43
 14636  010ACA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 14637  010AD0  0ED6               	movlw	-42
 14638  010AD2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14639  010AD8  0ED7               	movlw	-41
 14640  010ADA  0060  F033  FFE3   	movff	btemp+11,plusw1
 14641                           
 14642                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 14643                           ;stkvar	_nmode @ sp[(-56)+55]
 14644  010AE0  0EFF               	movlw	-1
 14645  010AE2  006F FF8C  F001    	movff	plusw1,btemp
 14646  010AE8  0E65               	movlw	101
 14647  010AEA  1801               	xorwf	btemp^0,w,c
 14648  010AEC  B4D8               	btfsc	status,2,c
 14649  010AEE  D011               	goto	l11292
 14650                           
 14651                           ;stkvar	_e @ sp[(-56)+34]
 14652                           ;stkvar	_ne @ sp[(-56)+46]
 14653  010AF0  0EEA               	movlw	-22
 14654  010AF2  006F FF8C  F001    	movff	plusw1,btemp
 14655  010AF8  0EF6               	movlw	-10
 14656  010AFA  0060  F007  FFE3   	movff	btemp,plusw1
 14657  010B00  0EEB               	movlw	-21
 14658  010B02  006F FF8C  F001    	movff	plusw1,btemp
 14659  010B08  0EF7               	movlw	-9
 14660  010B0A  0060  F007  FFE3   	movff	btemp,plusw1
 14661  010B10  D004               	goto	l2160
 14662  010B12                     l11292:
 14663                           
 14664                           ;stkvar	_ne @ sp[(-56)+46]
 14665  010B12  0EF6               	movlw	-10
 14666  010B14  6AE3               	clrf	plusw1,c
 14667  010B16  0EF7               	movlw	-9
 14668  010B18  6AE3               	clrf	plusw1,c
 14669  010B1A                     l2160:
 14670                           
 14671                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 14672                           ;stkvar	_pp @ sp[(-56)+50]
 14673  010B1A  0EFA               	movlw	-6
 14674  010B1C  6AE3               	clrf	plusw1,c
 14675  010B1E  0EFB               	movlw	-5
 14676  010B20  6AE3               	clrf	plusw1,c
 14677                           
 14678                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 14679                           ;stkvar	_t @ sp[(-56)+52]
 14680  010B22  0EFC               	movlw	-4
 14681  010B24  6AE3               	clrf	plusw1,c
 14682  010B26  0EFD               	movlw	-3
 14683  010B28  6AE3               	clrf	plusw1,c
 14684                           
 14685                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 14686                           ;stkvar	_i @ sp[(-56)+36]
 14687  010B2A  0EEC               	movlw	-20
 14688  010B2C  6AE3               	clrf	plusw1,c
 14689  010B2E  0EED               	movlw	-19
 14690  010B30  6AE3               	clrf	plusw1,c
 14691                           
 14692                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 14693  010B32  D1B7               	goto	l11344
 14694  010B34                     l11294:
 14695                           
 14696                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 14697                           ;stkvar	_u @ sp[(-56)+12]
 14698  010B34  0ED4               	movlw	-44
 14699  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 14700  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 14701  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 14702  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 14703                           
 14704                           ;stkvar	_h @ sp[(-60)+24]
 14705  010B4E  0EDC               	movlw	-36
 14706  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 14707  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 14708  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 14709  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 14710  010B68  EC3B  F0A1         	call	___fldiv	;wreg free
 14711  010B6C  0060  F007  FFE6   	movff	btemp,postinc1
 14712  010B72  0060  F00B  FFE6   	movff	btemp+1,postinc1
 14713  010B78  0060  F00F  FFE6   	movff	btemp+2,postinc1
 14714  010B7E  0060  F013  FFE6   	movff	btemp+3,postinc1
 14715  010B84  EC3C  F0AC         	call	_floorf	;wreg free
 14716                           
 14717                           ;stkvar	_l @ sp[(-56)+20]
 14718  010B88  0EDC               	movlw	-36
 14719  010B8A  0060  F007  FFE3   	movff	btemp,plusw1
 14720  010B90  0EDD               	movlw	-35
 14721  010B92  0060  F00B  FFE3   	movff	btemp+1,plusw1
 14722  010B98  0EDE               	movlw	-34
 14723  010B9A  0060  F00F  FFE3   	movff	btemp+2,plusw1
 14724  010BA0  0EDF               	movlw	-33
 14725  010BA2  0060  F013  FFE3   	movff	btemp+3,plusw1
 14726                           
 14727                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 14728                           ;stkvar	_l @ sp[(-56)+20]
 14729  010BA8  0EDC               	movlw	-36
 14730  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 14731  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 14732  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 14733  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 14734  010BC2  EC3F  F0BD         	call	___fltol	;wreg free
 14735  010BC6  0060  F004  F00B   	movff	btemp,btemp+10
 14736  010BCC  0060  F008  F00C   	movff	btemp+1,btemp+11
 14737                           
 14738                           ;stkvar	_d @ sp[(-56)+44]
 14739  010BD2  0EF4               	movlw	-12
 14740  010BD4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14741  010BDA  0EF5               	movlw	-11
 14742  010BDC  0060  F033  FFE3   	movff	btemp+11,plusw1
 14743                           
 14744                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 14745  010BE2  B825               	btfsc	_flags^0,4,c
 14746  010BE4  D026               	goto	l11308
 14747                           
 14748                           ;stkvar	_d @ sp[(-56)+44]
 14749  010BE6  0EF4               	movlw	-12
 14750  010BE8  006F FF8C  F001    	movff	plusw1,btemp
 14751  010BEE  0EF5               	movlw	-11
 14752  010BF0  50E3               	movf	plusw1,w,c
 14753  010BF2  1001               	iorwf	btemp^0,w,c
 14754  010BF4  A4D8               	btfss	status,2,c
 14755  010BF6  D01D               	goto	l11308
 14756                           
 14757                           ;stkvar	_mode @ sp[(-56)+54]
 14758  010BF8  0EFE               	movlw	-2
 14759  010BFA  006F FF8C  F001    	movff	plusw1,btemp
 14760  010C00  0E67               	movlw	103
 14761  010C02  1801               	xorwf	btemp^0,w,c
 14762  010C04  A4D8               	btfss	status,2,c
 14763  010C06  D015               	goto	l11308
 14764                           
 14765                           ;stkvar	_ne @ sp[(-56)+46]
 14766  010C08  0EF7               	movlw	-9
 14767  010C0A  AEE3               	btfss	plusw1,7,c
 14768  010C0C  D012               	goto	l11308
 14769                           
 14770                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 14771                           ;stkvar	_t @ sp[(-56)+52]
 14772  010C0E  0EFC               	movlw	-4
 14773  010C10  50E3               	movf	plusw1,w,c
 14774  010C12  0F01               	addlw	1
 14775  010C14  6E01               	movwf	btemp^0,c
 14776  010C16  0EFC               	movlw	-4
 14777  010C18  0060  F007  FFE3   	movff	btemp,plusw1
 14778  010C1E  6A01               	clrf	btemp^0,c
 14779  010C20  0EFD               	movlw	-3
 14780  010C22  50E3               	movf	plusw1,w,c
 14781  010C24  2001               	addwfc	btemp^0,w,c
 14782  010C26  6E01               	movwf	btemp^0,c
 14783  010C28  0EFD               	movlw	-3
 14784  010C2A  0060  F007  FFE3   	movff	btemp,plusw1
 14785                           
 14786                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 14787  010C30  D0AF               	goto	l11336
 14788  010C32                     l11308:
 14789                           
 14790                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 14791                           ;stkvar	_pp @ sp[(-56)+50]
 14792  010C32  0EFA               	movlw	-6
 14793  010C34  006F FF8C  F001    	movff	plusw1,btemp
 14794  010C3A  0EFB               	movlw	-5
 14795  010C3C  50E3               	movf	plusw1,w,c
 14796  010C3E  1001               	iorwf	btemp^0,w,c
 14797  010C40  A4D8               	btfss	status,2,c
 14798  010C42  D070               	goto	l11328
 14799                           
 14800                           ;stkvar	_ne @ sp[(-56)+46]
 14801  010C44  0EF7               	movlw	-9
 14802  010C46  AEE3               	btfss	plusw1,7,c
 14803  010C48  D06D               	goto	l11328
 14804                           
 14805                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 14806                           ;stkvar	_n @ sp[(-56)+32]
 14807  010C4A  0EE8               	movlw	-24
 14808  010C4C  006F FF8C  F00B    	movff	plusw1,btemp+10
 14809  010C52  0EE9               	movlw	-23
 14810  010C54  006F FF8C  F00C    	movff	plusw1,btemp+11
 14811  010C5A  0E94               	movlw	low _dbuf
 14812  010C5C  240B               	addwf	(btemp+10)^0,w,c
 14813  010C5E  6ED9               	movwf	fsr2l,c
 14814  010C60  0E03               	movlw	high _dbuf
 14815  010C62  200C               	addwfc	(btemp+11)^0,w,c
 14816  010C64  6EDA               	movwf	fsr2h,c
 14817  010C66  0E2E               	movlw	46
 14818  010C68  6EDF               	movwf	indf2,c
 14819                           
 14820                           ;stkvar	_n @ sp[(-56)+32]
 14821  010C6A  0EE8               	movlw	-24
 14822  010C6C  50E3               	movf	plusw1,w,c
 14823  010C6E  0F01               	addlw	1
 14824  010C70  6E01               	movwf	btemp^0,c
 14825  010C72  0EE8               	movlw	-24
 14826  010C74  0060  F007  FFE3   	movff	btemp,plusw1
 14827  010C7A  6A01               	clrf	btemp^0,c
 14828  010C7C  0EE9               	movlw	-23
 14829  010C7E  50E3               	movf	plusw1,w,c
 14830  010C80  2001               	addwfc	btemp^0,w,c
 14831  010C82  6E01               	movwf	btemp^0,c
 14832  010C84  0EE9               	movlw	-23
 14833  010C86  0060  F007  FFE3   	movff	btemp,plusw1
 14834                           
 14835                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 14836                           ;stkvar	_w @ sp[(-56)+38]
 14837  010C8C  50E1               	movf	fsr1l,w,c
 14838  010C8E  0FEE               	addlw	-18
 14839  010C90  6ED9               	movwf	fsr2l,c
 14840  010C92  50E2               	movf	fsr1h,w,c
 14841  010C94  6EDA               	movwf	fsr2h,c
 14842  010C96  0EFF               	movlw	255
 14843  010C98  22DA               	addwfc	fsr2h,f,c
 14844  010C9A  06DE               	decf	postinc2,f,c
 14845  010C9C  0E00               	movlw	0
 14846  010C9E  5ADD               	subwfb	postdec2,f,c
 14847                           
 14848                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 14849  010CA0  0E01               	movlw	1
 14850  010CA2  6E0B               	movwf	(btemp+10)^0,c
 14851  010CA4  0E00               	movlw	0
 14852  010CA6  6E0C               	movwf	(btemp+11)^0,c
 14853                           
 14854                           ;stkvar	_pp @ sp[(-56)+50]
 14855  010CA8  0EFA               	movlw	-6
 14856  010CAA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14857  010CB0  0EFB               	movlw	-5
 14858  010CB2  0060  F033  FFE3   	movff	btemp+11,plusw1
 14859  010CB8  D035               	goto	l11328
 14860  010CBA                     l11320:
 14861                           
 14862                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 14863                           ;stkvar	_n @ sp[(-56)+32]
 14864  010CBA  0EE8               	movlw	-24
 14865  010CBC  006F FF8C  F00B    	movff	plusw1,btemp+10
 14866  010CC2  0EE9               	movlw	-23
 14867  010CC4  006F FF8C  F00C    	movff	plusw1,btemp+11
 14868  010CCA  0E94               	movlw	low _dbuf
 14869  010CCC  240B               	addwf	(btemp+10)^0,w,c
 14870  010CCE  6ED9               	movwf	fsr2l,c
 14871  010CD0  0E03               	movlw	high _dbuf
 14872  010CD2  200C               	addwfc	(btemp+11)^0,w,c
 14873  010CD4  6EDA               	movwf	fsr2h,c
 14874  010CD6  0E30               	movlw	48
 14875  010CD8  6EDF               	movwf	indf2,c
 14876                           
 14877                           ;stkvar	_n @ sp[(-56)+32]
 14878  010CDA  0EE8               	movlw	-24
 14879  010CDC  50E3               	movf	plusw1,w,c
 14880  010CDE  0F01               	addlw	1
 14881  010CE0  6E01               	movwf	btemp^0,c
 14882  010CE2  0EE8               	movlw	-24
 14883  010CE4  0060  F007  FFE3   	movff	btemp,plusw1
 14884  010CEA  6A01               	clrf	btemp^0,c
 14885  010CEC  0EE9               	movlw	-23
 14886  010CEE  50E3               	movf	plusw1,w,c
 14887  010CF0  2001               	addwfc	btemp^0,w,c
 14888  010CF2  6E01               	movwf	btemp^0,c
 14889  010CF4  0EE9               	movlw	-23
 14890  010CF6  0060  F007  FFE3   	movff	btemp,plusw1
 14891                           
 14892                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 14893                           ;stkvar	_w @ sp[(-56)+38]
 14894  010CFC  50E1               	movf	fsr1l,w,c
 14895  010CFE  0FEE               	addlw	-18
 14896  010D00  6ED9               	movwf	fsr2l,c
 14897  010D02  50E2               	movf	fsr1h,w,c
 14898  010D04  6EDA               	movwf	fsr2h,c
 14899  010D06  0EFF               	movlw	255
 14900  010D08  22DA               	addwfc	fsr2h,f,c
 14901  010D0A  06DE               	decf	postinc2,f,c
 14902  010D0C  0E00               	movlw	0
 14903  010D0E  5ADD               	subwfb	postdec2,f,c
 14904                           
 14905                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 14906                           ;stkvar	_t @ sp[(-56)+52]
 14907  010D10  50E1               	movf	fsr1l,w,c
 14908  010D12  0FFC               	addlw	-4
 14909  010D14  6ED9               	movwf	fsr2l,c
 14910  010D16  50E2               	movf	fsr1h,w,c
 14911  010D18  6EDA               	movwf	fsr2h,c
 14912  010D1A  0EFF               	movlw	255
 14913  010D1C  22DA               	addwfc	fsr2h,f,c
 14914  010D1E  06DE               	decf	postinc2,f,c
 14915  010D20  0E00               	movlw	0
 14916  010D22  5ADD               	subwfb	postdec2,f,c
 14917  010D24                     l11328:
 14918                           
 14919                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 14920                           ;stkvar	_t @ sp[(-56)+52]
 14921  010D24  0EFC               	movlw	-4
 14922  010D26  006F FF8C  F001    	movff	plusw1,btemp
 14923  010D2C  0EFD               	movlw	-3
 14924  010D2E  50E3               	movf	plusw1,w,c
 14925  010D30  1001               	iorwf	btemp^0,w,c
 14926  010D32  A4D8               	btfss	status,2,c
 14927  010D34  D7C2               	goto	l11320
 14928                           
 14929                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 14930                           ;stkvar	_n @ sp[(-56)+32]
 14931  010D36  0EE8               	movlw	-24
 14932  010D38  006F FF8C  F00B    	movff	plusw1,btemp+10
 14933  010D3E  0EE9               	movlw	-23
 14934  010D40  006F FF8C  F00C    	movff	plusw1,btemp+11
 14935  010D46  0E94               	movlw	low _dbuf
 14936  010D48  240B               	addwf	(btemp+10)^0,w,c
 14937  010D4A  6ED9               	movwf	fsr2l,c
 14938  010D4C  0E03               	movlw	high _dbuf
 14939  010D4E  200C               	addwfc	(btemp+11)^0,w,c
 14940  010D50  6EDA               	movwf	fsr2h,c
 14941                           
 14942                           ;stkvar	_d @ sp[(-56)+44]
 14943  010D52  0EF4               	movlw	-12
 14944  010D54  50E3               	movf	plusw1,w,c
 14945  010D56  0F30               	addlw	48
 14946  010D58  6EDF               	movwf	indf2,c
 14947                           
 14948                           ;stkvar	_n @ sp[(-56)+32]
 14949  010D5A  0EE8               	movlw	-24
 14950  010D5C  50E3               	movf	plusw1,w,c
 14951  010D5E  0F01               	addlw	1
 14952  010D60  6E01               	movwf	btemp^0,c
 14953  010D62  0EE8               	movlw	-24
 14954  010D64  0060  F007  FFE3   	movff	btemp,plusw1
 14955  010D6A  6A01               	clrf	btemp^0,c
 14956  010D6C  0EE9               	movlw	-23
 14957  010D6E  50E3               	movf	plusw1,w,c
 14958  010D70  2001               	addwfc	btemp^0,w,c
 14959  010D72  6E01               	movwf	btemp^0,c
 14960  010D74  0EE9               	movlw	-23
 14961  010D76  0060  F007  FFE3   	movff	btemp,plusw1
 14962                           
 14963                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 14964                           ;stkvar	_w @ sp[(-56)+38]
 14965  010D7C  50E1               	movf	fsr1l,w,c
 14966  010D7E  0FEE               	addlw	-18
 14967  010D80  6ED9               	movwf	fsr2l,c
 14968  010D82  50E2               	movf	fsr1h,w,c
 14969  010D84  6EDA               	movwf	fsr2h,c
 14970  010D86  0EFF               	movlw	255
 14971  010D88  22DA               	addwfc	fsr2h,f,c
 14972  010D8A  06DE               	decf	postinc2,f,c
 14973  010D8C  0E00               	movlw	0
 14974  010D8E  5ADD               	subwfb	postdec2,f,c
 14975  010D90                     l11336:
 14976                           
 14977                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 14978                           ;stkvar	_u @ sp[(-56)+12]
 14979  010D90  0ED4               	movlw	-44
 14980  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 14981  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 14982  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 14983  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 14984                           
 14985                           ;stkvar	_l @ sp[(-60)+20]
 14986  010DAA  0ED8               	movlw	-40
 14987  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 14988  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 14989  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 14990  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 14991  010DC4  EC05  F096         	call	___flmul	;wreg free
 14992  010DC8  0060  F007  FFE6   	movff	btemp,postinc1
 14993  010DCE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 14994  010DD4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 14995  010DDA  0060  F013  FFE6   	movff	btemp+3,postinc1
 14996                           
 14997                           ;stkvar	_h @ sp[(-60)+24]
 14998  010DE0  0EDC               	movlw	-36
 14999  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 15000  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 15001  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 15002  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 15003  010DFA  EC03  F0D0         	call	___flsub	;wreg free
 15004                           
 15005                           ;stkvar	_h @ sp[(-56)+24]
 15006  010DFE  0EE0               	movlw	-32
 15007  010E00  0060  F007  FFE3   	movff	btemp,plusw1
 15008  010E06  0EE1               	movlw	-31
 15009  010E08  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15010  010E0E  0EE2               	movlw	-30
 15011  010E10  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15012  010E16  0EE3               	movlw	-29
 15013  010E18  0060  F013  FFE3   	movff	btemp+3,plusw1
 15014                           
 15015                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 15016  010E1E  0E00               	movlw	0
 15017  010E20  6EE6               	movwf	postinc1,c
 15018  010E22  0E00               	movlw	0
 15019  010E24  6EE6               	movwf	postinc1,c
 15020  010E26  0E20               	movlw	32
 15021  010E28  6EE6               	movwf	postinc1,c
 15022  010E2A  0E41               	movlw	65
 15023  010E2C  6EE6               	movwf	postinc1,c
 15024                           
 15025                           ;stkvar	_u @ sp[(-60)+12]
 15026  010E2E  0ED0               	movlw	-48
 15027  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 15028  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 15029  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 15030  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 15031  010E48  EC3B  F0A1         	call	___fldiv	;wreg free
 15032                           
 15033                           ;stkvar	_u @ sp[(-56)+12]
 15034  010E4C  0ED4               	movlw	-44
 15035  010E4E  0060  F007  FFE3   	movff	btemp,plusw1
 15036  010E54  0ED5               	movlw	-43
 15037  010E56  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15038  010E5C  0ED6               	movlw	-42
 15039  010E5E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15040  010E64  0ED7               	movlw	-41
 15041  010E66  0060  F013  FFE3   	movff	btemp+3,plusw1
 15042                           
 15043                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 15044                           ;stkvar	_ne @ sp[(-56)+46]
 15045  010E6C  50E1               	movf	fsr1l,w,c
 15046  010E6E  0FF6               	addlw	-10
 15047  010E70  6ED9               	movwf	fsr2l,c
 15048  010E72  50E2               	movf	fsr1h,w,c
 15049  010E74  6EDA               	movwf	fsr2h,c
 15050  010E76  0EFF               	movlw	255
 15051  010E78  22DA               	addwfc	fsr2h,f,c
 15052  010E7A  06DE               	decf	postinc2,f,c
 15053  010E7C  0E00               	movlw	0
 15054  010E7E  5ADD               	subwfb	postdec2,f,c
 15055                           
 15056                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 15057                           ;stkvar	_i @ sp[(-56)+36]
 15058  010E80  0EEC               	movlw	-20
 15059  010E82  50E3               	movf	plusw1,w,c
 15060  010E84  0F01               	addlw	1
 15061  010E86  6E01               	movwf	btemp^0,c
 15062  010E88  0EEC               	movlw	-20
 15063  010E8A  0060  F007  FFE3   	movff	btemp,plusw1
 15064  010E90  6A01               	clrf	btemp^0,c
 15065  010E92  0EED               	movlw	-19
 15066  010E94  50E3               	movf	plusw1,w,c
 15067  010E96  2001               	addwfc	btemp^0,w,c
 15068  010E98  6E01               	movwf	btemp^0,c
 15069  010E9A  0EED               	movlw	-19
 15070  010E9C  0060  F007  FFE3   	movff	btemp,plusw1
 15071  010EA2                     l11344:
 15072                           
 15073                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 15074                           ;stkvar	_m @ sp[(-56)+48]
 15075                           ;stkvar	_i @ sp[(-56)+36]
 15076  010EA2  50E1               	movf	fsr1l,w,c
 15077  010EA4  0FEC               	addlw	-20
 15078  010EA6  6ED9               	movwf	fsr2l,c
 15079  010EA8  50E2               	movf	fsr1h,w,c
 15080  010EAA  6EDA               	movwf	fsr2h,c
 15081  010EAC  0EFF               	movlw	255
 15082  010EAE  22DA               	addwfc	fsr2h,f,c
 15083  010EB0  0EF8               	movlw	-8
 15084  010EB2  50E3               	movf	plusw1,w,c
 15085  010EB4  5CDE               	subwf	postinc2,w,c
 15086  010EB6  50DE               	movf	postinc2,w,c
 15087  010EB8  0A80               	xorlw	128
 15088  010EBA  6E01               	movwf	btemp^0,c
 15089  010EBC  0EF9               	movlw	-7
 15090  010EBE  50E3               	movf	plusw1,w,c
 15091  010EC0  0A80               	xorlw	128
 15092  010EC2  5801               	subwfb	btemp^0,w,c
 15093  010EC4  B0D8               	btfsc	status,0,c
 15094  010EC6  D00E               	goto	u10710
 15095                           
 15096                           ;stkvar	_n @ sp[(-56)+32]
 15097  010EC8  0EE9               	movlw	-23
 15098  010ECA  BEE3               	btfsc	plusw1,7,c
 15099  010ECC  D633               	goto	l11294
 15100  010ECE  0EE9               	movlw	-23
 15101  010ED0  50E3               	movf	plusw1,w,c
 15102  010ED2  E108               	bnz	u10710
 15103  010ED4  0EE8               	movlw	-24
 15104  010ED6  006F FF8C  F001    	movff	plusw1,btemp
 15105  010EDC  0E4B               	movlw	75
 15106  010EDE  5E01               	subwf	btemp^0,f,c
 15107  010EE0  A0D8               	btfss	status,0,c
 15108  010EE2  D628               	goto	l11294
 15109  010EE4                     u10710:
 15110                           
 15111                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 15112                           ;stkvar	_pp @ sp[(-56)+50]
 15113  010EE4  0EFA               	movlw	-6
 15114  010EE6  006F FF8C  F001    	movff	plusw1,btemp
 15115  010EEC  0EFB               	movlw	-5
 15116  010EEE  50E3               	movf	plusw1,w,c
 15117  010EF0  1001               	iorwf	btemp^0,w,c
 15118  010EF2  B4D8               	btfsc	status,2,c
 15119  010EF4  A825               	btfss	_flags^0,4,c
 15120  010EF6  D021               	goto	l11356
 15121                           
 15122                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 15123                           ;stkvar	_n @ sp[(-56)+32]
 15124  010EF8  0EE8               	movlw	-24
 15125  010EFA  006F FF8C  F00B    	movff	plusw1,btemp+10
 15126  010F00  0EE9               	movlw	-23
 15127  010F02  006F FF8C  F00C    	movff	plusw1,btemp+11
 15128  010F08  0E94               	movlw	low _dbuf
 15129  010F0A  240B               	addwf	(btemp+10)^0,w,c
 15130  010F0C  6ED9               	movwf	fsr2l,c
 15131  010F0E  0E03               	movlw	high _dbuf
 15132  010F10  200C               	addwfc	(btemp+11)^0,w,c
 15133  010F12  6EDA               	movwf	fsr2h,c
 15134  010F14  0E2E               	movlw	46
 15135  010F16  6EDF               	movwf	indf2,c
 15136                           
 15137                           ;stkvar	_n @ sp[(-56)+32]
 15138  010F18  0EE8               	movlw	-24
 15139  010F1A  50E3               	movf	plusw1,w,c
 15140  010F1C  0F01               	addlw	1
 15141  010F1E  6E01               	movwf	btemp^0,c
 15142  010F20  0EE8               	movlw	-24
 15143  010F22  0060  F007  FFE3   	movff	btemp,plusw1
 15144  010F28  6A01               	clrf	btemp^0,c
 15145  010F2A  0EE9               	movlw	-23
 15146  010F2C  50E3               	movf	plusw1,w,c
 15147  010F2E  2001               	addwfc	btemp^0,w,c
 15148  010F30  6E01               	movwf	btemp^0,c
 15149  010F32  0EE9               	movlw	-23
 15150  010F34  0060  F007  FFE3   	movff	btemp,plusw1
 15151  010F3A                     l11356:
 15152                           
 15153                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 15154                           ;stkvar	_n @ sp[(-56)+32]
 15155  010F3A  0EE8               	movlw	-24
 15156  010F3C  006F FF8C  F00B    	movff	plusw1,btemp+10
 15157  010F42  0EE9               	movlw	-23
 15158  010F44  006F FF8C  F00C    	movff	plusw1,btemp+11
 15159  010F4A  0E94               	movlw	low _dbuf
 15160  010F4C  240B               	addwf	(btemp+10)^0,w,c
 15161  010F4E  6ED9               	movwf	fsr2l,c
 15162  010F50  0E03               	movlw	high _dbuf
 15163  010F52  200C               	addwfc	(btemp+11)^0,w,c
 15164  010F54  6EDA               	movwf	fsr2h,c
 15165  010F56  0E00               	movlw	0
 15166  010F58  6EDF               	movwf	indf2,c
 15167                           
 15168                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 15169                           ;stkvar	_nmode @ sp[(-56)+55]
 15170  010F5A  0EFF               	movlw	-1
 15171  010F5C  006F FF8C  F001    	movff	plusw1,btemp
 15172  010F62  0E65               	movlw	101
 15173  010F64  1801               	xorwf	btemp^0,w,c
 15174  010F66  A4D8               	btfss	status,2,c
 15175  010F68  EF16  F081         	goto	l11160
 15176                           
 15177                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 15178  010F6C  0E4F               	movlw	79
 15179  010F6E  6E0B               	movwf	(btemp+10)^0,c
 15180  010F70  0E00               	movlw	0
 15181  010F72  6E0C               	movwf	(btemp+11)^0,c
 15182                           
 15183                           ;stkvar	_i @ sp[(-56)+36]
 15184  010F74  0EEC               	movlw	-20
 15185  010F76  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15186  010F7C  0EED               	movlw	-19
 15187  010F7E  0060  F033  FFE3   	movff	btemp+11,plusw1
 15188                           
 15189                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 15190                           ;stkvar	_i @ sp[(-56)+36]
 15191  010F84  0EEC               	movlw	-20
 15192  010F86  006F FF8C  F00B    	movff	plusw1,btemp+10
 15193  010F8C  0EED               	movlw	-19
 15194  010F8E  006F FF8C  F00C    	movff	plusw1,btemp+11
 15195  010F94  0E94               	movlw	low _dbuf
 15196  010F96  240B               	addwf	(btemp+10)^0,w,c
 15197  010F98  6ED9               	movwf	fsr2l,c
 15198  010F9A  0E03               	movlw	high _dbuf
 15199  010F9C  200C               	addwfc	(btemp+11)^0,w,c
 15200  010F9E  6EDA               	movwf	fsr2h,c
 15201  010FA0  0E00               	movlw	0
 15202  010FA2  6EDF               	movwf	indf2,c
 15203                           
 15204                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 15205                           ;stkvar	_sign @ sp[(-56)+42]
 15206  010FA4  0EF2               	movlw	-14
 15207  010FA6  6AE3               	clrf	plusw1,c
 15208  010FA8  0EF3               	movlw	-13
 15209  010FAA  6AE3               	clrf	plusw1,c
 15210                           
 15211                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 15212                           ;stkvar	_e @ sp[(-56)+34]
 15213  010FAC  0EEB               	movlw	-21
 15214  010FAE  AEE3               	btfss	plusw1,7,c
 15215  010FB0  D012               	goto	l11370
 15216                           
 15217                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 15218  010FB2  0E01               	movlw	1
 15219  010FB4  6E0B               	movwf	(btemp+10)^0,c
 15220  010FB6  0E00               	movlw	0
 15221  010FB8  6E0C               	movwf	(btemp+11)^0,c
 15222                           
 15223                           ;stkvar	_sign @ sp[(-56)+42]
 15224  010FBA  0EF2               	movlw	-14
 15225  010FBC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15226  010FC2  0EF3               	movlw	-13
 15227  010FC4  0060  F033  FFE3   	movff	btemp+11,plusw1
 15228                           
 15229                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 15230                           ;stkvar	_e @ sp[(-56)+34]
 15231                           ;stkvar	_e @ sp[(-56)+34]
 15232  010FCA  0EEA               	movlw	-22
 15233  010FCC  6CE3               	negf	plusw1,c
 15234  010FCE  0EEB               	movlw	-21
 15235  010FD0  1EE3               	comf	plusw1,f,c
 15236  010FD2  B0D8               	btfsc	status,0,c
 15237  010FD4  2AE3               	incf	plusw1,f,c
 15238  010FD6                     l11370:
 15239                           
 15240                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 15241  010FD6  0E02               	movlw	2
 15242  010FD8  6E0B               	movwf	(btemp+10)^0,c
 15243  010FDA  0E00               	movlw	0
 15244  010FDC  6E0C               	movwf	(btemp+11)^0,c
 15245                           
 15246                           ;stkvar	_p @ sp[(-56)+40]
 15247  010FDE  0EF0               	movlw	-16
 15248  010FE0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15249  010FE6  0EF1               	movlw	-15
 15250  010FE8  0060  F033  FFE3   	movff	btemp+11,plusw1
 15251                           
 15252                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 15253  010FEE  D051               	goto	l11382
 15254  010FF0                     l11372:
 15255                           
 15256                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 15257                           ;stkvar	_i @ sp[(-56)+36]
 15258  010FF0  50E1               	movf	fsr1l,w,c
 15259  010FF2  0FEC               	addlw	-20
 15260  010FF4  6ED9               	movwf	fsr2l,c
 15261  010FF6  50E2               	movf	fsr1h,w,c
 15262  010FF8  6EDA               	movwf	fsr2h,c
 15263  010FFA  0EFF               	movlw	255
 15264  010FFC  22DA               	addwfc	fsr2h,f,c
 15265  010FFE  06DE               	decf	postinc2,f,c
 15266  011000  0E00               	movlw	0
 15267  011002  5ADD               	subwfb	postdec2,f,c
 15268                           
 15269                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 15270                           ;stkvar	_i @ sp[(-56)+36]
 15271  011004  0EEC               	movlw	-20
 15272  011006  006F FF8C  F00B    	movff	plusw1,btemp+10
 15273  01100C  0EED               	movlw	-19
 15274  01100E  006F FF8C  F00C    	movff	plusw1,btemp+11
 15275  011014  0E94               	movlw	low _dbuf
 15276  011016  240B               	addwf	(btemp+10)^0,w,c
 15277  011018  6ED9               	movwf	fsr2l,c
 15278  01101A  0E03               	movlw	high _dbuf
 15279  01101C  200C               	addwfc	(btemp+11)^0,w,c
 15280  01101E  6EDA               	movwf	fsr2h,c
 15281  011020  0E0A               	movlw	10
 15282  011022  6EE6               	movwf	postinc1,c
 15283  011024  0E00               	movlw	0
 15284  011026  6EE6               	movwf	postinc1,c
 15285                           
 15286                           ;stkvar	_e @ sp[(-58)+34]
 15287  011028  0EE8               	movlw	-24
 15288  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 15289  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 15290  011036  EC21  F0C3         	call	___awmod	;wreg free
 15291  01103A  5001               	movf	btemp^0,w,c
 15292  01103C  0F30               	addlw	48
 15293  01103E  6EDF               	movwf	indf2,c
 15294                           
 15295                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 15296  011040  0E0A               	movlw	10
 15297  011042  6EE6               	movwf	postinc1,c
 15298  011044  0E00               	movlw	0
 15299  011046  6EE6               	movwf	postinc1,c
 15300                           
 15301                           ;stkvar	_e @ sp[(-58)+34]
 15302  011048  0EE8               	movlw	-24
 15303  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 15304  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 15305  011056  EC13  F0C0         	call	___awdiv	;wreg free
 15306                           
 15307                           ;stkvar	_e @ sp[(-56)+34]
 15308  01105A  0EEA               	movlw	-22
 15309  01105C  0060  F007  FFE3   	movff	btemp,plusw1
 15310  011062  0EEB               	movlw	-21
 15311  011064  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15312                           
 15313                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 15314                           ;stkvar	_p @ sp[(-56)+40]
 15315  01106A  50E1               	movf	fsr1l,w,c
 15316  01106C  0FF0               	addlw	-16
 15317  01106E  6ED9               	movwf	fsr2l,c
 15318  011070  50E2               	movf	fsr1h,w,c
 15319  011072  6EDA               	movwf	fsr2h,c
 15320  011074  0EFF               	movlw	255
 15321  011076  22DA               	addwfc	fsr2h,f,c
 15322  011078  06DE               	decf	postinc2,f,c
 15323  01107A  0E00               	movlw	0
 15324  01107C  5ADD               	subwfb	postdec2,f,c
 15325                           
 15326                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 15327                           ;stkvar	_w @ sp[(-56)+38]
 15328  01107E  50E1               	movf	fsr1l,w,c
 15329  011080  0FEE               	addlw	-18
 15330  011082  6ED9               	movwf	fsr2l,c
 15331  011084  50E2               	movf	fsr1h,w,c
 15332  011086  6EDA               	movwf	fsr2h,c
 15333  011088  0EFF               	movlw	255
 15334  01108A  22DA               	addwfc	fsr2h,f,c
 15335  01108C  06DE               	decf	postinc2,f,c
 15336  01108E  0E00               	movlw	0
 15337  011090  5ADD               	subwfb	postdec2,f,c
 15338  011092                     l11382:
 15339                           
 15340                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 15341                           ;stkvar	_e @ sp[(-56)+34]
 15342  011092  0EEA               	movlw	-22
 15343  011094  006F FF8C  F001    	movff	plusw1,btemp
 15344  01109A  0EEB               	movlw	-21
 15345  01109C  50E3               	movf	plusw1,w,c
 15346  01109E  1001               	iorwf	btemp^0,w,c
 15347  0110A0  A4D8               	btfss	status,2,c
 15348  0110A2  D7A6               	goto	l11372
 15349                           
 15350                           ;stkvar	_p @ sp[(-56)+40]
 15351  0110A4  0EF1               	movlw	-15
 15352  0110A6  BEE3               	btfsc	plusw1,7,c
 15353  0110A8  D007               	goto	u10770
 15354  0110AA  0EF1               	movlw	-15
 15355  0110AC  50E3               	movf	plusw1,w,c
 15356  0110AE  E1A0               	bnz	l11372
 15357  0110B0  0EF0               	movlw	-16
 15358  0110B2  04E3               	decf	plusw1,w,c
 15359  0110B4  B0D8               	btfsc	status,0,c
 15360  0110B6  D79C               	goto	l11372
 15361  0110B8                     u10770:
 15362                           
 15363                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 15364                           ;stkvar	_i @ sp[(-56)+36]
 15365  0110B8  50E1               	movf	fsr1l,w,c
 15366  0110BA  0FEC               	addlw	-20
 15367  0110BC  6ED9               	movwf	fsr2l,c
 15368  0110BE  50E2               	movf	fsr1h,w,c
 15369  0110C0  6EDA               	movwf	fsr2h,c
 15370  0110C2  0EFF               	movlw	255
 15371  0110C4  22DA               	addwfc	fsr2h,f,c
 15372  0110C6  06DE               	decf	postinc2,f,c
 15373  0110C8  0E00               	movlw	0
 15374  0110CA  5ADD               	subwfb	postdec2,f,c
 15375                           
 15376                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 15377                           ;stkvar	_sign @ sp[(-56)+42]
 15378  0110CC  0EF2               	movlw	-14
 15379  0110CE  006F FF8C  F001    	movff	plusw1,btemp
 15380  0110D4  0EF3               	movlw	-13
 15381  0110D6  50E3               	movf	plusw1,w,c
 15382  0110D8  1001               	iorwf	btemp^0,w,c
 15383  0110DA  A4D8               	btfss	status,2,c
 15384  0110DC  D002               	goto	l11392
 15385  0110DE  0E2B               	movlw	43
 15386  0110E0  D001               	goto	L13
 15387  0110E2                     l11392:
 15388  0110E2  0E2D               	movlw	45
 15389  0110E4                     L13:
 15390  0110E4  6E0B               	movwf	(btemp+10)^0,c
 15391  0110E6  0E00               	movlw	0
 15392  0110E8  6E0C               	movwf	(btemp+11)^0,c
 15393                           
 15394                           ;stkvar	_efgtoa$5275 @ sp[(-56)+4]
 15395  0110EA  0ECC               	movlw	-52
 15396  0110EC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15397  0110F2  0ECD               	movlw	-51
 15398  0110F4  0060  F033  FFE3   	movff	btemp+11,plusw1
 15399                           
 15400                           ;stkvar	_efgtoa$5275 @ sp[(-56)+4]
 15401                           ;stkvar	_i @ sp[(-56)+36]
 15402  0110FA  0EEC               	movlw	-20
 15403  0110FC  006F FF8C  F00B    	movff	plusw1,btemp+10
 15404  011102  0EED               	movlw	-19
 15405  011104  006F FF8C  F00C    	movff	plusw1,btemp+11
 15406  01110A  0E94               	movlw	low _dbuf
 15407  01110C  240B               	addwf	(btemp+10)^0,w,c
 15408  01110E  6ED9               	movwf	fsr2l,c
 15409  011110  0E03               	movlw	high _dbuf
 15410  011112  200C               	addwfc	(btemp+11)^0,w,c
 15411  011114  6EDA               	movwf	fsr2h,c
 15412  011116  0ECC               	movlw	-52
 15413  011118  006F FF8F FFDF     	movff	plusw1,indf2
 15414                           
 15415                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 15416                           ;stkvar	_w @ sp[(-56)+38]
 15417  01111E  50E1               	movf	fsr1l,w,c
 15418  011120  0FEE               	addlw	-18
 15419  011122  6ED9               	movwf	fsr2l,c
 15420  011124  50E2               	movf	fsr1h,w,c
 15421  011126  6EDA               	movwf	fsr2h,c
 15422  011128  0EFF               	movlw	255
 15423  01112A  22DA               	addwfc	fsr2h,f,c
 15424  01112C  06DE               	decf	postinc2,f,c
 15425  01112E  0E00               	movlw	0
 15426  011130  5ADD               	subwfb	postdec2,f,c
 15427                           
 15428                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 15429                           ;stkvar	_i @ sp[(-56)+36]
 15430  011132  50E1               	movf	fsr1l,w,c
 15431  011134  0FEC               	addlw	-20
 15432  011136  6ED9               	movwf	fsr2l,c
 15433  011138  50E2               	movf	fsr1h,w,c
 15434  01113A  6EDA               	movwf	fsr2h,c
 15435  01113C  0EFF               	movlw	255
 15436  01113E  22DA               	addwfc	fsr2h,f,c
 15437  011140  06DE               	decf	postinc2,f,c
 15438  011142  0E00               	movlw	0
 15439  011144  5ADD               	subwfb	postdec2,f,c
 15440  011146  0EBF               	movlw	191
 15441  011148  6E0B               	movwf	(btemp+10)^0,c
 15442  01114A  0EFF               	movlw	255
 15443  01114C  6E0C               	movwf	(btemp+11)^0,c
 15444                           
 15445                           ;stkvar	_c @ sp[(-56)+-7]
 15446  01114E  0EC1               	movlw	-63
 15447  011150  50E3               	movf	plusw1,w,c
 15448  011152  6E09               	movwf	(btemp+8)^0,c
 15449  011154  6A0A               	clrf	(btemp+9)^0,c
 15450  011156  500B               	movf	(btemp+10)^0,w,c
 15451  011158  2609               	addwf	(btemp+8)^0,f,c
 15452  01115A  500C               	movf	(btemp+11)^0,w,c
 15453  01115C  220A               	addwfc	(btemp+9)^0,f,c
 15454  01115E  500A               	movf	(btemp+9)^0,w,c
 15455  011160  E106               	bnz	u10790
 15456  011162  0E1A               	movlw	26
 15457  011164  5C09               	subwf	(btemp+8)^0,w,c
 15458  011166  B0D8               	btfsc	status,0,c
 15459  011168  D002               	goto	u10790
 15460  01116A  0E01               	movlw	1
 15461  01116C  D001               	goto	u10800
 15462  01116E                     u10790:
 15463  01116E  0E00               	movlw	0
 15464  011170                     u10800:
 15465  011170  6E0B               	movwf	(btemp+10)^0,c
 15466  011172  6A0C               	clrf	(btemp+11)^0,c
 15467                           
 15468                           ;stkvar	_efgtoa$5277 @ sp[(-56)+0]
 15469  011174  0EC8               	movlw	-56
 15470  011176  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15471  01117C  0EC9               	movlw	-55
 15472  01117E  0060  F033  FFE3   	movff	btemp+11,plusw1
 15473                           
 15474                           ;stkvar	_efgtoa$5277 @ sp[(-56)+0]
 15475  011184  0EC8               	movlw	-56
 15476  011186  006F FF8C  F001    	movff	plusw1,btemp
 15477  01118C  0EC9               	movlw	-55
 15478  01118E  50E3               	movf	plusw1,w,c
 15479  011190  1001               	iorwf	btemp^0,w,c
 15480  011192  A4D8               	btfss	status,2,c
 15481  011194  D002               	goto	l11408
 15482  011196  0E65               	movlw	101
 15483  011198  D001               	goto	L14
 15484  01119A                     l11408:
 15485  01119A  0E45               	movlw	69
 15486  01119C                     L14:
 15487  01119C  6E0B               	movwf	(btemp+10)^0,c
 15488  01119E  0E00               	movlw	0
 15489  0111A0  6E0C               	movwf	(btemp+11)^0,c
 15490                           
 15491                           ;stkvar	_efgtoa$5276 @ sp[(-56)+2]
 15492  0111A2  0ECA               	movlw	-54
 15493  0111A4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15494  0111AA  0ECB               	movlw	-53
 15495  0111AC  0060  F033  FFE3   	movff	btemp+11,plusw1
 15496                           
 15497                           ;stkvar	_efgtoa$5276 @ sp[(-56)+2]
 15498                           ;stkvar	_i @ sp[(-56)+36]
 15499  0111B2  0EEC               	movlw	-20
 15500  0111B4  006F FF8C  F00B    	movff	plusw1,btemp+10
 15501  0111BA  0EED               	movlw	-19
 15502  0111BC  006F FF8C  F00C    	movff	plusw1,btemp+11
 15503  0111C2  0E94               	movlw	low _dbuf
 15504  0111C4  240B               	addwf	(btemp+10)^0,w,c
 15505  0111C6  6ED9               	movwf	fsr2l,c
 15506  0111C8  0E03               	movlw	high _dbuf
 15507  0111CA  200C               	addwfc	(btemp+11)^0,w,c
 15508  0111CC  6EDA               	movwf	fsr2h,c
 15509  0111CE  0ECA               	movlw	-54
 15510  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 15511                           
 15512                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 15513                           ;stkvar	_w @ sp[(-56)+38]
 15514  0111D6  50E1               	movf	fsr1l,w,c
 15515  0111D8  0FEE               	addlw	-18
 15516  0111DA  6ED9               	movwf	fsr2l,c
 15517  0111DC  50E2               	movf	fsr1h,w,c
 15518  0111DE  6EDA               	movwf	fsr2h,c
 15519  0111E0  0EFF               	movlw	255
 15520  0111E2  22DA               	addwfc	fsr2h,f,c
 15521  0111E4  06DE               	decf	postinc2,f,c
 15522  0111E6  0E00               	movlw	0
 15523  0111E8  5ADD               	subwfb	postdec2,f,c
 15524                           
 15525                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 15526                           ;stkvar	_i @ sp[(-56)+36]
 15527  0111EA  0EEC               	movlw	-20
 15528  0111EC  006F FF8C  F00B    	movff	plusw1,btemp+10
 15529  0111F2  0EED               	movlw	-19
 15530  0111F4  006F FF8C  F00C    	movff	plusw1,btemp+11
 15531  0111FA  0E94               	movlw	low _dbuf
 15532  0111FC  240B               	addwf	(btemp+10)^0,w,c
 15533  0111FE  6E09               	movwf	(btemp+8)^0,c
 15534  011200  0E03               	movlw	high _dbuf
 15535  011202  200C               	addwfc	(btemp+11)^0,w,c
 15536  011204  6E0A               	movwf	(btemp+9)^0,c
 15537  011206  0060  F027  FFE6   	movff	btemp+8,postinc1
 15538  01120C  0060  F02B  FFE6   	movff	btemp+9,postinc1
 15539                           
 15540                           ;stkvar	_n @ sp[(-58)+32]
 15541  011212  0E94               	movlw	low _dbuf
 15542  011214  6E0B               	movwf	(btemp+10)^0,c
 15543  011216  0E03               	movlw	high _dbuf
 15544  011218  6E0C               	movwf	(btemp+11)^0,c
 15545  01121A  0EE6               	movlw	-26
 15546  01121C  50E3               	movf	plusw1,w,c
 15547  01121E  260B               	addwf	(btemp+10)^0,f,c
 15548  011220  0EE7               	movlw	-25
 15549  011222  50E3               	movf	plusw1,w,c
 15550  011224  220C               	addwfc	(btemp+11)^0,f,c
 15551  011226  0060  F02F  FFE6   	movff	btemp+10,postinc1
 15552  01122C  0060  F033  FFE6   	movff	btemp+11,postinc1
 15553  011232  EC35  F0C7         	call	_strcpy	;wreg free
 15554  011236  EF16  F081         	goto	l11160
 15555  01123A                     l2116:
 15556                           
 15557                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 15558  01123A  0EC1               	movlw	193
 15559  01123C  26E1               	addwf	fsr1l,f,c
 15560  01123E  0EFF               	movlw	255
 15561  011240  22E2               	addwfc	fsr1h,f,c
 15562  011242  0012               	return		;funcret
 15563  011244                     __end_of_efgtoa:
 15564                           	opt callstack 0
 15565                           
 15566 ;; *************** function _tolower *****************
 15567 ;; Defined at:
 15568 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 15569 ;; Parameters:    Size  Location     Type
 15570 ;;  c               2  [STACK] int 
 15571 ;; Auto vars:     Size  Location     Type
 15572 ;;		None
 15573 ;; Return value:  Size  Location     Type
 15574 ;;                  2  [STACK] int 
 15575 ;; Registers used:
 15576 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 15577 ;; Tracked objects:
 15578 ;;		On entry : 0/0
 15579 ;;		On exit  : 0/0
 15580 ;;		Unchanged: 0/0
 15581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15586 ;;Total ram usage:        0 bytes
 15587 ;; Hardware stack levels used:    1
 15588 ;; Hardware stack levels required when called:   16
 15589 ;; This function calls:
 15590 ;;		_isupper
 15591 ;; This function is called by:
 15592 ;;		_efgtoa
 15593 ;;		_vfpfcnvrt
 15594 ;; This function uses a reentrant model
 15595 ;;
 15596                           
 15597                           	psect	text52
 15598  0198AC                     __ptext52:
 15599                           	opt callstack 0
 15600  0198AC                     _tolower:
 15601                           	opt callstack 0
 15602                           
 15603                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15604  0198AC  52E6               	movf	postinc1,f,c
 15605  0198AE  52E6               	movf	postinc1,f,c
 15606                           
 15607                           ;stkvar	_c @ sp[(-2)+-2]
 15608                           
 15609                           ;incstack = 0
 15610 ;; hardware stack exceeded
 15611  0198B0  0EFC               	movlw	-4
 15612  0198B2  50E3               	movf	plusw1,w,c
 15613  0198B4  0FBF               	addlw	191
 15614  0198B6  6E0B               	movwf	(btemp+10)^0,c
 15615  0198B8  0EFD               	movlw	-3
 15616  0198BA  006F FF8C  F00C    	movff	plusw1,btemp+11
 15617  0198C0  0EFF               	movlw	255
 15618  0198C2  220C               	addwfc	(btemp+11)^0,f,c
 15619  0198C4  500C               	movf	(btemp+11)^0,w,c
 15620  0198C6  E106               	bnz	u5660
 15621  0198C8  0E1A               	movlw	26
 15622  0198CA  5C0B               	subwf	(btemp+10)^0,w,c
 15623  0198CC  B0D8               	btfsc	status,0,c
 15624  0198CE  D002               	goto	u5660
 15625  0198D0  0E01               	movlw	1
 15626  0198D2  D001               	goto	u5670
 15627  0198D4                     u5660:
 15628  0198D4  0E00               	movlw	0
 15629  0198D6                     u5670:
 15630  0198D6  6E0B               	movwf	(btemp+10)^0,c
 15631  0198D8  6A0C               	clrf	(btemp+11)^0,c
 15632                           
 15633                           ;stkvar	_tolower$6096 @ sp[(-2)+0]
 15634  0198DA  0EFE               	movlw	-2
 15635  0198DC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15636  0198E2  0EFF               	movlw	-1
 15637  0198E4  0060  F033  FFE3   	movff	btemp+11,plusw1
 15638                           
 15639                           ;stkvar	_tolower$6096 @ sp[(-2)+0]
 15640  0198EA  0EFE               	movlw	-2
 15641  0198EC  006F FF8C  F001    	movff	plusw1,btemp
 15642  0198F2  0EFF               	movlw	-1
 15643  0198F4  50E3               	movf	plusw1,w,c
 15644  0198F6  1001               	iorwf	btemp^0,w,c
 15645  0198F8  B4D8               	btfsc	status,2,c
 15646  0198FA  D00D               	goto	l7520
 15647                           
 15648                           ;stkvar	_c @ sp[(-2)+-2]
 15649  0198FC  0EFC               	movlw	-4
 15650  0198FE  006F FF8C  F001    	movff	plusw1,btemp
 15651  019904  0EFD               	movlw	-3
 15652  019906  006F FF8C  F002    	movff	plusw1,btemp+1
 15653  01990C  0E20               	movlw	32
 15654  01990E  1201               	iorwf	btemp^0,f,c
 15655  019910  0E00               	movlw	0
 15656  019912  1202               	iorwf	(btemp+1)^0,f,c
 15657  019914  D008               	goto	l3388
 15658  019916                     l7520:
 15659                           
 15660                           ;stkvar	_c @ sp[(-2)+-2]
 15661  019916  0EFC               	movlw	-4
 15662  019918  006F FF8C  F001    	movff	plusw1,btemp
 15663  01991E  0EFD               	movlw	-3
 15664  019920  006F FF8C  F002    	movff	plusw1,btemp+1
 15665  019926                     l3388:
 15666                           
 15667                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 15668  019926  52E5               	movf	postdec1,f,c
 15669  019928  52E5               	movf	postdec1,f,c
 15670  01992A  52E5               	movf	postdec1,f,c
 15671  01992C  52E5               	movf	postdec1,f,c
 15672  01992E  0012               	return		;funcret
 15673  019930                     __end_of_tolower:
 15674                           	opt callstack 0
 15675                           
 15676 ;; *************** function _isupper *****************
 15677 ;; Defined at:
 15678 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 15679 ;; Parameters:    Size  Location     Type
 15680 ;;  c               2  [STACK] int 
 15681 ;; Auto vars:     Size  Location     Type
 15682 ;;		None
 15683 ;; Return value:  Size  Location     Type
 15684 ;;                  2  [STACK] int 
 15685 ;; Registers used:
 15686 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 15687 ;; Tracked objects:
 15688 ;;		On entry : 0/0
 15689 ;;		On exit  : 0/0
 15690 ;;		Unchanged: 0/0
 15691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15695 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15696 ;;Total ram usage:        0 bytes
 15697 ;; Hardware stack levels used:    1
 15698 ;; Hardware stack levels required when called:   15
 15699 ;; This function calls:
 15700 ;;		Nothing
 15701 ;; This function is called by:
 15702 ;;		_efgtoa
 15703 ;;		_xtoa
 15704 ;;		_vfpfcnvrt
 15705 ;;		_tolower
 15706 ;; This function uses a reentrant model
 15707 ;;
 15708                           
 15709                           	psect	text53
 15710  01A4B8                     __ptext53:
 15711                           	opt callstack 0
 15712  01A4B8                     _isupper:
 15713                           	opt callstack 0
 15714                           
 15715                           ;stkvar	_c @ sp[(0)+-2]
 15716                           
 15717                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15718                           ;incstack = 0
 15719 ;; hardware stack exceeded
 15720  01A4B8  0EFE               	movlw	-2
 15721  01A4BA  50E3               	movf	plusw1,w,c
 15722  01A4BC  0FBF               	addlw	191
 15723  01A4BE  6E0B               	movwf	(btemp+10)^0,c
 15724  01A4C0  0EFF               	movlw	-1
 15725  01A4C2  006F FF8C  F00C    	movff	plusw1,btemp+11
 15726  01A4C8  0EFF               	movlw	255
 15727  01A4CA  220C               	addwfc	(btemp+11)^0,f,c
 15728  01A4CC  500C               	movf	(btemp+11)^0,w,c
 15729  01A4CE  E106               	bnz	u5060
 15730  01A4D0  0E1A               	movlw	26
 15731  01A4D2  5C0B               	subwf	(btemp+10)^0,w,c
 15732  01A4D4  B0D8               	btfsc	status,0,c
 15733  01A4D6  D002               	goto	u5060
 15734  01A4D8  0E01               	movlw	1
 15735  01A4DA  D001               	goto	u5070
 15736  01A4DC                     u5060:
 15737  01A4DC  0E00               	movlw	0
 15738  01A4DE                     u5070:
 15739  01A4DE  6E01               	movwf	btemp^0,c
 15740  01A4E0  6A02               	clrf	(btemp+1)^0,c
 15741                           
 15742                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 15743  01A4E2  52E5               	movf	postdec1,f,c
 15744  01A4E4  52E5               	movf	postdec1,f,c
 15745  01A4E6  0012               	return		;funcret
 15746  01A4E8                     __end_of_isupper:
 15747                           	opt callstack 0
 15748                           
 15749 ;; *************** function _strcpy *****************
 15750 ;; Defined at:
 15751 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 15752 ;; Parameters:    Size  Location     Type
 15753 ;;  dest            2  [STACK] PTR unsigned char 
 15754 ;;		 -> dbuf(80), 
 15755 ;;  src             2  [STACK] PTR const unsigned char 
 15756 ;;		 -> STR_54(4), STR_53(4), STR_50(4), STR_49(4), 
 15757 ;;		 -> dbuf(80), 
 15758 ;; Auto vars:     Size  Location     Type
 15759 ;;  d               2  [STACK] PTR unsigned char 
 15760 ;;		 -> dbuf(80), 
 15761 ;;  s               2  [STACK] PTR const unsigned char 
 15762 ;;		 -> STR_54(4), STR_53(4), STR_50(4), STR_49(4), 
 15763 ;;		 -> dbuf(80), 
 15764 ;; Return value:  Size  Location     Type
 15765 ;;                  2  [STACK] PTR unsigned char 
 15766 ;; Registers used:
 15767 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 15768 ;; Tracked objects:
 15769 ;;		On entry : 0/0
 15770 ;;		On exit  : 0/0
 15771 ;;		Unchanged: 0/0
 15772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15776 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15777 ;;Total ram usage:        0 bytes
 15778 ;; Hardware stack levels used:    1
 15779 ;; Hardware stack levels required when called:   15
 15780 ;; This function calls:
 15781 ;;		Nothing
 15782 ;; This function is called by:
 15783 ;;		_efgtoa
 15784 ;; This function uses a reentrant model
 15785 ;;
 15786                           
 15787                           	psect	text54
 15788  018E6A                     __ptext54:
 15789                           	opt callstack 0
 15790  018E6A                     _strcpy:
 15791                           	opt callstack 0
 15792                           
 15793                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15794  018E6A  52E6               	movf	postinc1,f,c
 15795  018E6C  52E6               	movf	postinc1,f,c
 15796  018E6E  52E6               	movf	postinc1,f,c
 15797  018E70  52E6               	movf	postinc1,f,c
 15798                           
 15799                           ;stkvar	_src @ sp[(-4)+-4]
 15800                           
 15801                           ;incstack = 0
 15802 ;; hardware stack exceeded
 15803  018E72  0EF8               	movlw	-8
 15804  018E74  006F FF8C  F00B    	movff	plusw1,btemp+10
 15805  018E7A  0EF9               	movlw	-7
 15806  018E7C  006F FF8C  F00C    	movff	plusw1,btemp+11
 15807                           
 15808                           ;stkvar	_s @ sp[(-4)+2]
 15809  018E82  0EFF               	movlw	-1
 15810  018E84  0060  F033  FFE3   	movff	btemp+11,plusw1
 15811  018E8A  0EFE               	movlw	-2
 15812  018E8C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15813                           
 15814                           ;stkvar	_dest @ sp[(-4)+-2]
 15815  018E92  0EFA               	movlw	-6
 15816  018E94  006F FF8C  F00B    	movff	plusw1,btemp+10
 15817  018E9A  0EFB               	movlw	-5
 15818  018E9C  006F FF8C  F00C    	movff	plusw1,btemp+11
 15819                           
 15820                           ;stkvar	_d @ sp[(-4)+0]
 15821  018EA2  0EFD               	movlw	-3
 15822  018EA4  0060  F033  FFE3   	movff	btemp+11,plusw1
 15823  018EAA  0EFC               	movlw	-4
 15824  018EAC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15825  018EB2                     l10992:
 15826                           
 15827                           ;stkvar	_s @ sp[(-4)+2]
 15828  018EB2  50E1               	movf	fsr1l,w,c
 15829  018EB4  0FFE               	addlw	-2
 15830  018EB6  6ED9               	movwf	fsr2l,c
 15831  018EB8  50E2               	movf	fsr1h,w,c
 15832  018EBA  6EDA               	movwf	fsr2h,c
 15833  018EBC  0EFF               	movlw	255
 15834  018EBE  22DA               	addwfc	fsr2h,f,c
 15835  018EC0  006F FF7C  F00B    	movff	indf2,btemp+10
 15836  018EC6  0E01               	movlw	1
 15837  018EC8  26DE               	addwf	postinc2,f,c
 15838  018ECA  006F FF7C  F00C    	movff	indf2,btemp+11
 15839  018ED0  0E00               	movlw	0
 15840  018ED2  22DD               	addwfc	postdec2,f,c
 15841  018ED4  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 15842  018EDA  0060  F033  FFF7   	movff	btemp+11,tblptrh
 15843  018EE0  0E00               	movlw	low (__mediumconst shr (0+16))
 15844  018EE2  6EF8               	movwf	tblptru,c
 15845                           
 15846                           ;stkvar	_d @ sp[(-4)+0]
 15847  018EE4  50E1               	movf	fsr1l,w,c
 15848  018EE6  0FFC               	addlw	-4
 15849  018EE8  6ED9               	movwf	fsr2l,c
 15850  018EEA  50E2               	movf	fsr1h,w,c
 15851  018EEC  6EDA               	movwf	fsr2h,c
 15852  018EEE  0EFF               	movlw	255
 15853  018EF0  22DA               	addwfc	fsr2h,f,c
 15854  018EF2  006F FF7C  F00B    	movff	indf2,btemp+10
 15855  018EF8  0E01               	movlw	1
 15856  018EFA  26DE               	addwf	postinc2,f,c
 15857  018EFC  006F FF7C  F00C    	movff	indf2,btemp+11
 15858  018F02  0E00               	movlw	0
 15859  018F04  22DD               	addwfc	postdec2,f,c
 15860  018F06  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 15861  018F0C  0060  F033  FFDA   	movff	btemp+11,fsr2h
 15862  018F12  0E1F               	movlw	(high __ramtop+-1)
 15863  018F14  64F7               	cpfsgt	tblptrh,c
 15864  018F16  D003               	bra	u10057
 15865  018F18  0008               	tblrd		*
 15866  018F1A  50F5               	movf	tablat,w,c
 15867  018F1C  D007               	bra	u10050
 15868  018F1E                     u10057:
 15869  018F1E  006F FFDB FFE9     	movff	tblptrl,fsr0l
 15870  018F24  006F FFDF FFEA     	movff	tblptrh,fsr0h
 15871  018F2A  50EF               	movf	indf0,w,c
 15872  018F2C                     u10050:
 15873  018F2C  6EDF               	movwf	indf2,c
 15874  018F2E  50DF               	movf	indf2,w,c
 15875  018F30  A4D8               	btfss	status,2,c
 15876  018F32  D7BF               	goto	l10992
 15877                           
 15878                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 15879  018F34  0EF8               	movlw	248
 15880  018F36  26E1               	addwf	fsr1l,f,c
 15881  018F38  0EFF               	movlw	255
 15882  018F3A  22E2               	addwfc	fsr1h,f,c
 15883  018F3C  0012               	return		;funcret
 15884  018F3E                     __end_of_strcpy:
 15885                           	opt callstack 0
 15886                           
 15887 ;; *************** function _floorf *****************
 15888 ;; Defined at:
 15889 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 15890 ;; Parameters:    Size  Location     Type
 15891 ;;  x               4  [STACK] float 
 15892 ;; Auto vars:     Size  Location     Type
 15893 ;;  u               4  [STACK] struct .
 15894 ;;  m               4  [STACK] unsigned long 
 15895 ;;  e               2  [STACK] int 
 15896 ;; Return value:  Size  Location     Type
 15897 ;;                  4  [STACK] float 
 15898 ;; Registers used:
 15899 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 15900 ;; Tracked objects:
 15901 ;;		On entry : 0/0
 15902 ;;		On exit  : 0/0
 15903 ;;		Unchanged: 0/0
 15904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15909 ;;Total ram usage:        0 bytes
 15910 ;; Hardware stack levels used:    1
 15911 ;; Hardware stack levels required when called:   15
 15912 ;; This function calls:
 15913 ;;		Nothing
 15914 ;; This function is called by:
 15915 ;;		_efgtoa
 15916 ;; This function uses a reentrant model
 15917 ;;
 15918                           
 15919                           	psect	text55
 15920  015878                     __ptext55:
 15921                           	opt callstack 0
 15922  015878                     _floorf:
 15923                           	opt callstack 0
 15924                           
 15925                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 15926  015878  0E0A               	movlw	10
 15927  01587A  26E1               	addwf	fsr1l,f,c
 15928  01587C  0E00               	movlw	0
 15929  01587E  22E2               	addwfc	fsr1h,f,c
 15930                           
 15931                           ;incstack = 0
 15932 ;; hardware stack exceeded
 15933  015880  0060  F1D0  F009   	movff	floorf@F524,btemp+8
 15934  015886  0060  F1D4  F00A   	movff	floorf@F524+1,btemp+9
 15935  01588C  0060  F1D8  F00B   	movff	floorf@F524+2,btemp+10
 15936  015892  0060  F1DC  F00C   	movff	floorf@F524+3,btemp+11
 15937                           
 15938                           ;stkvar	_u @ sp[(-10)+0]
 15939  015898  0EF6               	movlw	-10
 15940  01589A  0060  F027  FFE3   	movff	btemp+8,plusw1
 15941  0158A0  0EF7               	movlw	-9
 15942  0158A2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15943  0158A8  0EF8               	movlw	-8
 15944  0158AA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15945  0158B0  0EF9               	movlw	-7
 15946  0158B2  0060  F033  FFE3   	movff	btemp+11,plusw1
 15947                           
 15948                           ;stkvar	_x @ sp[(-10)+-4]
 15949  0158B8  0EF2               	movlw	-14
 15950  0158BA  006F FF8C  F009    	movff	plusw1,btemp+8
 15951  0158C0  0EF3               	movlw	-13
 15952  0158C2  006F FF8C  F00A    	movff	plusw1,btemp+9
 15953  0158C8  0EF4               	movlw	-12
 15954  0158CA  006F FF8C  F00B    	movff	plusw1,btemp+10
 15955  0158D0  0EF5               	movlw	-11
 15956  0158D2  006F FF8C  F00C    	movff	plusw1,btemp+11
 15957                           
 15958                           ;stkvar	_u @ sp[(-10)+0]
 15959  0158D8  0EF6               	movlw	-10
 15960  0158DA  0060  F027  FFE3   	movff	btemp+8,plusw1
 15961  0158E0  0EF7               	movlw	-9
 15962  0158E2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15963  0158E8  0EF8               	movlw	-8
 15964  0158EA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15965  0158F0  0EF9               	movlw	-7
 15966  0158F2  0060  F033  FFE3   	movff	btemp+11,plusw1
 15967  0158F8  0E81               	movlw	129
 15968  0158FA  6E0B               	movwf	(btemp+10)^0,c
 15969  0158FC  0EFF               	movlw	255
 15970  0158FE  6E0C               	movwf	(btemp+11)^0,c
 15971                           
 15972                           ;stkvar	_u @ sp[(-10)+0]
 15973  015900  0EF6               	movlw	-10
 15974  015902  006F FF8C  F005    	movff	plusw1,btemp+4
 15975  015908  0EF7               	movlw	-9
 15976  01590A  006F FF8C  F006    	movff	plusw1,btemp+5
 15977  015910  0EF8               	movlw	-8
 15978  015912  006F FF8C  F007    	movff	plusw1,btemp+6
 15979  015918  0EF9               	movlw	-7
 15980  01591A  006F FF8C  F008    	movff	plusw1,btemp+7
 15981  015920  0E18               	movlw	24
 15982  015922  D005               	goto	u5690
 15983  015924                     u5695:
 15984  015924  90D8               	bcf	status,0,c
 15985  015926  3208               	rrcf	(btemp+7)^0,f,c
 15986  015928  3207               	rrcf	(btemp+6)^0,f,c
 15987  01592A  3206               	rrcf	(btemp+5)^0,f,c
 15988  01592C  3205               	rrcf	(btemp+4)^0,f,c
 15989  01592E                     u5690:
 15990  01592E  2EE8               	decfsz	wreg,f,c
 15991  015930  D7F9               	goto	u5695
 15992  015932  0060  F014  F009   	movff	btemp+4,btemp+8
 15993  015938  0060  F018  F00A   	movff	btemp+5,btemp+9
 15994  01593E  0EFF               	movlw	255
 15995  015940  1609               	andwf	(btemp+8)^0,f,c
 15996  015942  0E00               	movlw	0
 15997  015944  160A               	andwf	(btemp+9)^0,f,c
 15998  015946  500B               	movf	(btemp+10)^0,w,c
 15999  015948  2609               	addwf	(btemp+8)^0,f,c
 16000  01594A  500C               	movf	(btemp+11)^0,w,c
 16001  01594C  220A               	addwfc	(btemp+9)^0,f,c
 16002                           
 16003                           ;stkvar	_e @ sp[(-10)+8]
 16004  01594E  0EFE               	movlw	-2
 16005  015950  0060  F027  FFE3   	movff	btemp+8,plusw1
 16006  015956  0EFF               	movlw	-1
 16007  015958  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16008                           
 16009                           ;stkvar	_e @ sp[(-10)+8]
 16010  01595E  0EFF               	movlw	-1
 16011  015960  BEE3               	btfsc	plusw1,7,c
 16012  015962  D019               	goto	l7534
 16013  015964  0EFF               	movlw	-1
 16014  015966  50E3               	movf	plusw1,w,c
 16015  015968  E108               	bnz	u5700
 16016  01596A  0EFE               	movlw	-2
 16017  01596C  006F FF8C  F001    	movff	plusw1,btemp
 16018  015972  0E17               	movlw	23
 16019  015974  5E01               	subwf	btemp^0,f,c
 16020  015976  A0D8               	btfss	status,0,c
 16021  015978  D00E               	goto	l7534
 16022  01597A                     u5700:
 16023                           
 16024                           ;stkvar	_x @ sp[(-10)+-4]
 16025  01597A  0EF2               	movlw	-14
 16026  01597C  006F FF8C  F001    	movff	plusw1,btemp
 16027  015982  0EF3               	movlw	-13
 16028  015984  006F FF8C  F002    	movff	plusw1,btemp+1
 16029  01598A  0EF4               	movlw	-12
 16030  01598C  006F FF8C  F003    	movff	plusw1,btemp+2
 16031  015992  0EF5               	movlw	-11
 16032  015994  D11F               	goto	L15
 16033  015996                     l7534:
 16034                           
 16035                           ;stkvar	_e @ sp[(-10)+8]
 16036  015996  0EFF               	movlw	-1
 16037  015998  BEE3               	btfsc	plusw1,7,c
 16038  01599A  D0B4               	goto	l7550
 16039                           
 16040                           ;stkvar	_e @ sp[(-10)+8]
 16041  01599C  0EFE               	movlw	-2
 16042  01599E  006F FF8C  F00C    	movff	plusw1,btemp+11
 16043  0159A4  0EFF               	movlw	255
 16044  0159A6  6E05               	movwf	(btemp+4)^0,c
 16045  0159A8  0EFF               	movlw	255
 16046  0159AA  6E06               	movwf	(btemp+5)^0,c
 16047  0159AC  0E7F               	movlw	127
 16048  0159AE  6E07               	movwf	(btemp+6)^0,c
 16049  0159B0  0E00               	movlw	0
 16050  0159B2  6E08               	movwf	(btemp+7)^0,c
 16051  0159B4                     u5725:
 16052  0159B4  660C               	tstfsz	(btemp+11)^0,c
 16053  0159B6  D001               	goto	u5726
 16054  0159B8  D007               	goto	u5727
 16055  0159BA                     u5726:
 16056  0159BA  3408               	rlcf	(btemp+7)^0,w,c
 16057  0159BC  3208               	rrcf	(btemp+7)^0,f,c
 16058  0159BE  3207               	rrcf	(btemp+6)^0,f,c
 16059  0159C0  3206               	rrcf	(btemp+5)^0,f,c
 16060  0159C2  3205               	rrcf	(btemp+4)^0,f,c
 16061  0159C4  2E0C               	decfsz	(btemp+11)^0,f,c
 16062  0159C6  D7F6               	goto	u5725
 16063  0159C8                     u5727:
 16064                           
 16065                           ;stkvar	_m @ sp[(-10)+4]
 16066  0159C8  0EFA               	movlw	-6
 16067  0159CA  0060  F017  FFE3   	movff	btemp+4,plusw1
 16068  0159D0  0EFB               	movlw	-5
 16069  0159D2  0060  F01B  FFE3   	movff	btemp+5,plusw1
 16070  0159D8  0EFC               	movlw	-4
 16071  0159DA  0060  F01F  FFE3   	movff	btemp+6,plusw1
 16072  0159E0  0EFD               	movlw	-3
 16073  0159E2  0060  F023  FFE3   	movff	btemp+7,plusw1
 16074                           
 16075                           ;stkvar	_m @ sp[(-10)+4]
 16076                           ;stkvar	_u @ sp[(-10)+0]
 16077  0159E8  0EF6               	movlw	-10
 16078  0159EA  006F FF8C  F009    	movff	plusw1,btemp+8
 16079  0159F0  0EF7               	movlw	-9
 16080  0159F2  006F FF8C  F00A    	movff	plusw1,btemp+9
 16081  0159F8  0EF8               	movlw	-8
 16082  0159FA  006F FF8C  F00B    	movff	plusw1,btemp+10
 16083  015A00  0EF9               	movlw	-7
 16084  015A02  006F FF8C  F00C    	movff	plusw1,btemp+11
 16085  015A08  0EFA               	movlw	-6
 16086  015A0A  50E3               	movf	plusw1,w,c
 16087  015A0C  1609               	andwf	(btemp+8)^0,f,c
 16088  015A0E  0EFB               	movlw	-5
 16089  015A10  50E3               	movf	plusw1,w,c
 16090  015A12  160A               	andwf	(btemp+9)^0,f,c
 16091  015A14  0EFC               	movlw	-4
 16092  015A16  50E3               	movf	plusw1,w,c
 16093  015A18  160B               	andwf	(btemp+10)^0,f,c
 16094  015A1A  0EFD               	movlw	-3
 16095  015A1C  50E3               	movf	plusw1,w,c
 16096  015A1E  160C               	andwf	(btemp+11)^0,f,c
 16097  015A20  5009               	movf	(btemp+8)^0,w,c
 16098  015A22  100A               	iorwf	(btemp+9)^0,w,c
 16099  015A24  100B               	iorwf	(btemp+10)^0,w,c
 16100  015A26  100C               	iorwf	(btemp+11)^0,w,c
 16101  015A28  B4D8               	btfsc	status,2,c
 16102  015A2A  D7A7               	goto	u5700
 16103                           
 16104                           ;stkvar	_u @ sp[(-10)+0]
 16105  015A2C  0EF6               	movlw	-10
 16106  015A2E  006F FF8C  F009    	movff	plusw1,btemp+8
 16107  015A34  0EF7               	movlw	-9
 16108  015A36  006F FF8C  F00A    	movff	plusw1,btemp+9
 16109  015A3C  0EF8               	movlw	-8
 16110  015A3E  006F FF8C  F00B    	movff	plusw1,btemp+10
 16111  015A44  0EF9               	movlw	-7
 16112  015A46  006F FF8C  F00C    	movff	plusw1,btemp+11
 16113  015A4C  0E20               	movlw	32
 16114  015A4E  D005               	goto	u5740
 16115  015A50                     u5745:
 16116  015A50  90D8               	bcf	status,0,c
 16117  015A52  320C               	rrcf	(btemp+11)^0,f,c
 16118  015A54  320B               	rrcf	(btemp+10)^0,f,c
 16119  015A56  320A               	rrcf	(btemp+9)^0,f,c
 16120  015A58  3209               	rrcf	(btemp+8)^0,f,c
 16121  015A5A                     u5740:
 16122  015A5A  2EE8               	decfsz	wreg,f,c
 16123  015A5C  D7F9               	goto	u5745
 16124  015A5E  5009               	movf	(btemp+8)^0,w,c
 16125  015A60  B4D8               	btfsc	status,2,c
 16126  015A62  D028               	goto	l7548
 16127                           
 16128                           ;stkvar	_m @ sp[(-10)+4]
 16129                           ;stkvar	_u @ sp[(-10)+0]
 16130  015A64  0EF6               	movlw	-10
 16131  015A66  50E3               	movf	plusw1,w,c
 16132  015A68  6E01               	movwf	btemp^0,c
 16133  015A6A  0EFA               	movlw	-6
 16134  015A6C  50E3               	movf	plusw1,w,c
 16135  015A6E  2601               	addwf	btemp^0,f,c
 16136  015A70  0EF6               	movlw	-10
 16137  015A72  0060  F007  FFE3   	movff	btemp,plusw1
 16138  015A78  0EF7               	movlw	-9
 16139  015A7A  50E3               	movf	plusw1,w,c
 16140  015A7C  6E01               	movwf	btemp^0,c
 16141  015A7E  0EFB               	movlw	-5
 16142  015A80  50E3               	movf	plusw1,w,c
 16143  015A82  2201               	addwfc	btemp^0,f,c
 16144  015A84  0EF7               	movlw	-9
 16145  015A86  0060  F007  FFE3   	movff	btemp,plusw1
 16146  015A8C  0EF8               	movlw	-8
 16147  015A8E  50E3               	movf	plusw1,w,c
 16148  015A90  6E01               	movwf	btemp^0,c
 16149  015A92  0EFC               	movlw	-4
 16150  015A94  50E3               	movf	plusw1,w,c
 16151  015A96  2201               	addwfc	btemp^0,f,c
 16152  015A98  0EF8               	movlw	-8
 16153  015A9A  0060  F007  FFE3   	movff	btemp,plusw1
 16154  015AA0  0EF9               	movlw	-7
 16155  015AA2  50E3               	movf	plusw1,w,c
 16156  015AA4  6E01               	movwf	btemp^0,c
 16157  015AA6  0EFD               	movlw	-3
 16158  015AA8  50E3               	movf	plusw1,w,c
 16159  015AAA  2201               	addwfc	btemp^0,f,c
 16160  015AAC  0EF9               	movlw	-7
 16161  015AAE  0060  F007  FFE3   	movff	btemp,plusw1
 16162  015AB4                     l7548:
 16163                           
 16164                           ;stkvar	_m @ sp[(-10)+4]
 16165  015AB4  0EFA               	movlw	-6
 16166  015AB6  006F FF8C  F009    	movff	plusw1,btemp+8
 16167  015ABC  0EFB               	movlw	-5
 16168  015ABE  006F FF8C  F00A    	movff	plusw1,btemp+9
 16169  015AC4  0EFC               	movlw	-4
 16170  015AC6  006F FF8C  F00B    	movff	plusw1,btemp+10
 16171  015ACC  0EFD               	movlw	-3
 16172  015ACE  006F FF8C  F00C    	movff	plusw1,btemp+11
 16173  015AD4  1C09               	comf	(btemp+8)^0,w,c
 16174  015AD6  6E05               	movwf	(btemp+4)^0,c
 16175  015AD8  1C0A               	comf	(btemp+9)^0,w,c
 16176  015ADA  6E06               	movwf	(btemp+5)^0,c
 16177  015ADC  1C0B               	comf	(btemp+10)^0,w,c
 16178  015ADE  6E07               	movwf	(btemp+6)^0,c
 16179  015AE0  1C0C               	comf	(btemp+11)^0,w,c
 16180  015AE2  6E08               	movwf	(btemp+7)^0,c
 16181                           
 16182                           ;stkvar	_u @ sp[(-10)+0]
 16183  015AE4  50E1               	movf	fsr1l,w,c
 16184  015AE6  0FF6               	addlw	-10
 16185  015AE8  6ED9               	movwf	fsr2l,c
 16186  015AEA  50E2               	movf	fsr1h,w,c
 16187  015AEC  6EDA               	movwf	fsr2h,c
 16188  015AEE  0EFF               	movlw	255
 16189  015AF0  22DA               	addwfc	fsr2h,f,c
 16190  015AF2  5005               	movf	(btemp+4)^0,w,c
 16191  015AF4  16DE               	andwf	postinc2,f,c
 16192  015AF6  5006               	movf	(btemp+5)^0,w,c
 16193  015AF8  16DE               	andwf	postinc2,f,c
 16194  015AFA  5007               	movf	(btemp+6)^0,w,c
 16195  015AFC  16DE               	andwf	postinc2,f,c
 16196  015AFE  5008               	movf	(btemp+7)^0,w,c
 16197  015B00  16DE               	andwf	postinc2,f,c
 16198  015B02  D05B               	goto	l7558
 16199  015B04                     l7550:
 16200                           
 16201                           ;stkvar	_u @ sp[(-10)+0]
 16202  015B04  0EF6               	movlw	-10
 16203  015B06  006F FF8C  F009    	movff	plusw1,btemp+8
 16204  015B0C  0EF7               	movlw	-9
 16205  015B0E  006F FF8C  F00A    	movff	plusw1,btemp+9
 16206  015B14  0EF8               	movlw	-8
 16207  015B16  006F FF8C  F00B    	movff	plusw1,btemp+10
 16208  015B1C  0EF9               	movlw	-7
 16209  015B1E  006F FF8C  F00C    	movff	plusw1,btemp+11
 16210  015B24  0E20               	movlw	32
 16211  015B26  D005               	goto	u5760
 16212  015B28                     u5765:
 16213  015B28  90D8               	bcf	status,0,c
 16214  015B2A  320C               	rrcf	(btemp+11)^0,f,c
 16215  015B2C  320B               	rrcf	(btemp+10)^0,f,c
 16216  015B2E  320A               	rrcf	(btemp+9)^0,f,c
 16217  015B30  3209               	rrcf	(btemp+8)^0,f,c
 16218  015B32                     u5760:
 16219  015B32  2EE8               	decfsz	wreg,f,c
 16220  015B34  D7F9               	goto	u5765
 16221  015B36  6609               	tstfsz	(btemp+8)^0,c
 16222  015B38  D009               	goto	l7554
 16223                           
 16224                           ;stkvar	_u @ sp[(-10)+0]
 16225  015B3A  0EF6               	movlw	-10
 16226  015B3C  6AE3               	clrf	plusw1,c
 16227  015B3E  0EF7               	movlw	-9
 16228  015B40  6AE3               	clrf	plusw1,c
 16229  015B42  0EF8               	movlw	-8
 16230  015B44  6AE3               	clrf	plusw1,c
 16231  015B46  0EF9               	movlw	-7
 16232  015B48  6AE3               	clrf	plusw1,c
 16233  015B4A  D037               	goto	l7558
 16234  015B4C                     l7554:
 16235                           
 16236                           ;stkvar	_u @ sp[(-10)+0]
 16237  015B4C  0EF6               	movlw	-10
 16238  015B4E  006F FF8C  F009    	movff	plusw1,btemp+8
 16239  015B54  0EF7               	movlw	-9
 16240  015B56  006F FF8C  F00A    	movff	plusw1,btemp+9
 16241  015B5C  0EF8               	movlw	-8
 16242  015B5E  006F FF8C  F00B    	movff	plusw1,btemp+10
 16243  015B64  0EF9               	movlw	-7
 16244  015B66  006F FF8C  F00C    	movff	plusw1,btemp+11
 16245  015B6C  90D8               	bcf	status,0,c
 16246  015B6E  3409               	rlcf	(btemp+8)^0,w,c
 16247  015B70  6E05               	movwf	(btemp+4)^0,c
 16248  015B72  340A               	rlcf	(btemp+9)^0,w,c
 16249  015B74  6E06               	movwf	(btemp+5)^0,c
 16250  015B76  340B               	rlcf	(btemp+10)^0,w,c
 16251  015B78  6E07               	movwf	(btemp+6)^0,c
 16252  015B7A  340C               	rlcf	(btemp+11)^0,w,c
 16253  015B7C  6E08               	movwf	(btemp+7)^0,c
 16254  015B7E  5005               	movf	(btemp+4)^0,w,c
 16255  015B80  1006               	iorwf	(btemp+5)^0,w,c
 16256  015B82  1007               	iorwf	(btemp+6)^0,w,c
 16257  015B84  1008               	iorwf	(btemp+7)^0,w,c
 16258  015B86  B4D8               	btfsc	status,2,c
 16259  015B88  D018               	goto	l7558
 16260  015B8A  0E00               	movlw	0
 16261  015B8C  6E09               	movwf	(btemp+8)^0,c
 16262  015B8E  0E00               	movlw	0
 16263  015B90  6E0A               	movwf	(btemp+9)^0,c
 16264  015B92  0E80               	movlw	128
 16265  015B94  6E0B               	movwf	(btemp+10)^0,c
 16266  015B96  0EBF               	movlw	191
 16267  015B98  6E0C               	movwf	(btemp+11)^0,c
 16268                           
 16269                           ;stkvar	_u @ sp[(-10)+0]
 16270  015B9A  0EF6               	movlw	-10
 16271  015B9C  0060  F027  FFE3   	movff	btemp+8,plusw1
 16272  015BA2  0EF7               	movlw	-9
 16273  015BA4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16274  015BAA  0EF8               	movlw	-8
 16275  015BAC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16276  015BB2  0EF9               	movlw	-7
 16277  015BB4  0060  F033  FFE3   	movff	btemp+11,plusw1
 16278  015BBA                     l7558:
 16279                           
 16280                           ;stkvar	_u @ sp[(-10)+0]
 16281  015BBA  0EF6               	movlw	-10
 16282  015BBC  006F FF8C  F001    	movff	plusw1,btemp
 16283  015BC2  0EF7               	movlw	-9
 16284  015BC4  006F FF8C  F002    	movff	plusw1,btemp+1
 16285  015BCA  0EF8               	movlw	-8
 16286  015BCC  006F FF8C  F003    	movff	plusw1,btemp+2
 16287  015BD2  0EF9               	movlw	-7
 16288  015BD4                     L15:
 16289  015BD4  006F FF8C  F004    	movff	plusw1,btemp+3
 16290                           
 16291                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 16292  015BDA  0EF2               	movlw	242
 16293  015BDC  26E1               	addwf	fsr1l,f,c
 16294  015BDE  0EFF               	movlw	255
 16295  015BE0  22E2               	addwfc	fsr1h,f,c
 16296  015BE2  0012               	return		;funcret
 16297  015BE4                     __end_of_floorf:
 16298                           	opt callstack 0
 16299                           
 16300 ;; *************** function ___fpclassifyf *****************
 16301 ;; Defined at:
 16302 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 16303 ;; Parameters:    Size  Location     Type
 16304 ;;  x               4  [STACK] float 
 16305 ;; Auto vars:     Size  Location     Type
 16306 ;;  u               4  [STACK] struct .
 16307 ;;  e               2  [STACK] int 
 16308 ;; Return value:  Size  Location     Type
 16309 ;;                  2  [STACK] int 
 16310 ;; Registers used:
 16311 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 16312 ;; Tracked objects:
 16313 ;;		On entry : 0/0
 16314 ;;		On exit  : 0/0
 16315 ;;		Unchanged: 0/0
 16316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16321 ;;Total ram usage:        0 bytes
 16322 ;; Hardware stack levels used:    1
 16323 ;; Hardware stack levels required when called:   15
 16324 ;; This function calls:
 16325 ;;		Nothing
 16326 ;; This function is called by:
 16327 ;;		_efgtoa
 16328 ;; This function uses a reentrant model
 16329 ;;
 16330                           
 16331                           	psect	text56
 16332  0175F4                     __ptext56:
 16333                           	opt callstack 0
 16334  0175F4                     ___fpclassifyf:
 16335                           	opt callstack 0
 16336                           
 16337                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16338  0175F4  0E06               	movlw	6
 16339  0175F6  26E1               	addwf	fsr1l,f,c
 16340  0175F8  0E00               	movlw	0
 16341  0175FA  22E2               	addwfc	fsr1h,f,c
 16342                           
 16343                           ;incstack = 0
 16344 ;; hardware stack exceeded
 16345  0175FC  0060  F1F0  F009   	movff	___fpclassifyf@F463,btemp+8
 16346  017602  0060  F1F4  F00A   	movff	___fpclassifyf@F463+1,btemp+9
 16347  017608  0060  F1F8  F00B   	movff	___fpclassifyf@F463+2,btemp+10
 16348  01760E  0060  F1FC  F00C   	movff	___fpclassifyf@F463+3,btemp+11
 16349                           
 16350                           ;stkvar	_u @ sp[(-6)+0]
 16351  017614  0EFA               	movlw	-6
 16352  017616  0060  F027  FFE3   	movff	btemp+8,plusw1
 16353  01761C  0EFB               	movlw	-5
 16354  01761E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16355  017624  0EFC               	movlw	-4
 16356  017626  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16357  01762C  0EFD               	movlw	-3
 16358  01762E  0060  F033  FFE3   	movff	btemp+11,plusw1
 16359                           
 16360                           ;stkvar	_x @ sp[(-6)+-4]
 16361  017634  0EF6               	movlw	-10
 16362  017636  006F FF8C  F009    	movff	plusw1,btemp+8
 16363  01763C  0EF7               	movlw	-9
 16364  01763E  006F FF8C  F00A    	movff	plusw1,btemp+9
 16365  017644  0EF8               	movlw	-8
 16366  017646  006F FF8C  F00B    	movff	plusw1,btemp+10
 16367  01764C  0EF9               	movlw	-7
 16368  01764E  006F FF8C  F00C    	movff	plusw1,btemp+11
 16369                           
 16370                           ;stkvar	_u @ sp[(-6)+0]
 16371  017654  0EFA               	movlw	-6
 16372  017656  0060  F027  FFE3   	movff	btemp+8,plusw1
 16373  01765C  0EFB               	movlw	-5
 16374  01765E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16375  017664  0EFC               	movlw	-4
 16376  017666  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16377  01766C  0EFD               	movlw	-3
 16378  01766E  0060  F033  FFE3   	movff	btemp+11,plusw1
 16379                           
 16380                           ;stkvar	_u @ sp[(-6)+0]
 16381  017674  0EFA               	movlw	-6
 16382  017676  006F FF8C  F009    	movff	plusw1,btemp+8
 16383  01767C  0EFB               	movlw	-5
 16384  01767E  006F FF8C  F00A    	movff	plusw1,btemp+9
 16385  017684  0EFC               	movlw	-4
 16386  017686  006F FF8C  F00B    	movff	plusw1,btemp+10
 16387  01768C  0EFD               	movlw	-3
 16388  01768E  006F FF8C  F00C    	movff	plusw1,btemp+11
 16389  017694  0E18               	movlw	24
 16390  017696  D005               	goto	u5570
 16391  017698                     u5575:
 16392  017698  90D8               	bcf	status,0,c
 16393  01769A  320C               	rrcf	(btemp+11)^0,f,c
 16394  01769C  320B               	rrcf	(btemp+10)^0,f,c
 16395  01769E  320A               	rrcf	(btemp+9)^0,f,c
 16396  0176A0  3209               	rrcf	(btemp+8)^0,f,c
 16397  0176A2                     u5570:
 16398  0176A2  2EE8               	decfsz	wreg,f,c
 16399  0176A4  D7F9               	goto	u5575
 16400  0176A6  0060  F024  F007   	movff	btemp+8,btemp+6
 16401  0176AC  0060  F028  F008   	movff	btemp+9,btemp+7
 16402  0176B2  0EFF               	movlw	255
 16403  0176B4  1607               	andwf	(btemp+6)^0,f,c
 16404  0176B6  0E00               	movlw	0
 16405  0176B8  1608               	andwf	(btemp+7)^0,f,c
 16406                           
 16407                           ;stkvar	_e @ sp[(-6)+4]
 16408  0176BA  0EFE               	movlw	-2
 16409  0176BC  0060  F01F  FFE3   	movff	btemp+6,plusw1
 16410  0176C2  0EFF               	movlw	-1
 16411  0176C4  0060  F023  FFE3   	movff	btemp+7,plusw1
 16412                           
 16413                           ;stkvar	_e @ sp[(-6)+4]
 16414  0176CA  0EFE               	movlw	-2
 16415  0176CC  006F FF8C  F001    	movff	plusw1,btemp
 16416  0176D2  0EFF               	movlw	-1
 16417  0176D4  50E3               	movf	plusw1,w,c
 16418  0176D6  1001               	iorwf	btemp^0,w,c
 16419  0176D8  A4D8               	btfss	status,2,c
 16420  0176DA  D023               	goto	l7496
 16421                           
 16422                           ;stkvar	_u @ sp[(-6)+0]
 16423  0176DC  0EFA               	movlw	-6
 16424  0176DE  006F FF8C  F009    	movff	plusw1,btemp+8
 16425  0176E4  0EFB               	movlw	-5
 16426  0176E6  006F FF8C  F00A    	movff	plusw1,btemp+9
 16427  0176EC  0EFC               	movlw	-4
 16428  0176EE  006F FF8C  F00B    	movff	plusw1,btemp+10
 16429  0176F4  0EFD               	movlw	-3
 16430  0176F6  006F FF8C  F00C    	movff	plusw1,btemp+11
 16431  0176FC  90D8               	bcf	status,0,c
 16432  0176FE  3409               	rlcf	(btemp+8)^0,w,c
 16433  017700  6E05               	movwf	(btemp+4)^0,c
 16434  017702  340A               	rlcf	(btemp+9)^0,w,c
 16435  017704  6E06               	movwf	(btemp+5)^0,c
 16436  017706  340B               	rlcf	(btemp+10)^0,w,c
 16437  017708  6E07               	movwf	(btemp+6)^0,c
 16438  01770A  340C               	rlcf	(btemp+11)^0,w,c
 16439  01770C  6E08               	movwf	(btemp+7)^0,c
 16440  01770E  5005               	movf	(btemp+4)^0,w,c
 16441  017710  1006               	iorwf	(btemp+5)^0,w,c
 16442  017712  1007               	iorwf	(btemp+6)^0,w,c
 16443  017714  1008               	iorwf	(btemp+7)^0,w,c
 16444  017716  A4D8               	btfss	status,2,c
 16445  017718  D002               	goto	l7492
 16446  01771A  0E02               	movlw	2
 16447  01771C  D02E               	goto	L16
 16448  01771E                     l7492:
 16449  01771E  0E03               	movlw	3
 16450  017720  D02C               	goto	L16
 16451  017722                     l7496:
 16452                           
 16453                           ;stkvar	_e @ sp[(-6)+4]
 16454  017722  0EFE               	movlw	-2
 16455  017724  28E3               	incf	plusw1,w,c
 16456  017726  E128               	bnz	l7502
 16457  017728  0EFF               	movlw	-1
 16458  01772A  50E3               	movf	plusw1,w,c
 16459  01772C  A4D8               	btfss	status,2,c
 16460  01772E  D024               	goto	l7502
 16461                           
 16462                           ;stkvar	_u @ sp[(-6)+0]
 16463  017730  0EFA               	movlw	-6
 16464  017732  006F FF8C  F009    	movff	plusw1,btemp+8
 16465  017738  0EFB               	movlw	-5
 16466  01773A  006F FF8C  F00A    	movff	plusw1,btemp+9
 16467  017740  0EFC               	movlw	-4
 16468  017742  006F FF8C  F00B    	movff	plusw1,btemp+10
 16469  017748  0EFD               	movlw	-3
 16470  01774A  006F FF8C  F00C    	movff	plusw1,btemp+11
 16471  017750  0E09               	movlw	9
 16472  017752                     u5615:
 16473  017752  90D8               	bcf	status,0,c
 16474  017754  3609               	rlcf	(btemp+8)^0,f,c
 16475  017756  360A               	rlcf	(btemp+9)^0,f,c
 16476  017758  360B               	rlcf	(btemp+10)^0,f,c
 16477  01775A  360C               	rlcf	(btemp+11)^0,f,c
 16478  01775C  2EE8               	decfsz	wreg,f,c
 16479  01775E  D7F9               	goto	u5615
 16480  017760  5009               	movf	(btemp+8)^0,w,c
 16481  017762  100A               	iorwf	(btemp+9)^0,w,c
 16482  017764  100B               	iorwf	(btemp+10)^0,w,c
 16483  017766  100C               	iorwf	(btemp+11)^0,w,c
 16484  017768  A4D8               	btfss	status,2,c
 16485  01776A  D002               	goto	u5620
 16486  01776C  0E01               	movlw	1
 16487  01776E  D001               	goto	u5630
 16488  017770                     u5620:
 16489  017770  0E00               	movlw	0
 16490  017772                     u5630:
 16491  017772  6E01               	movwf	btemp^0,c
 16492  017774  6A02               	clrf	(btemp+1)^0,c
 16493  017776  D004               	goto	l2998
 16494  017778                     l7502:
 16495  017778  0E04               	movlw	4
 16496  01777A                     L16:
 16497  01777A  6E01               	movwf	btemp^0,c
 16498  01777C  0E00               	movlw	0
 16499  01777E  6E02               	movwf	(btemp+1)^0,c
 16500  017780                     l2998:
 16501                           
 16502                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 16503  017780  0EF6               	movlw	246
 16504  017782  26E1               	addwf	fsr1l,f,c
 16505  017784  0EFF               	movlw	255
 16506  017786  22E2               	addwfc	fsr1h,f,c
 16507  017788  0012               	return		;funcret
 16508  01778A                     __end_of___fpclassifyf:
 16509                           	opt callstack 0
 16510                           
 16511 ;; *************** function ___fltol *****************
 16512 ;; Defined at:
 16513 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 16514 ;; Parameters:    Size  Location     Type
 16515 ;;  f1              4  [STACK] int 
 16516 ;; Auto vars:     Size  Location     Type
 16517 ;;  exp1            1  [STACK] unsigned char 
 16518 ;;  sign1           1  [STACK] unsigned char 
 16519 ;; Return value:  Size  Location     Type
 16520 ;;                  4  [STACK] long 
 16521 ;; Registers used:
 16522 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 16523 ;; Tracked objects:
 16524 ;;		On entry : 0/1
 16525 ;;		On exit  : 0/0
 16526 ;;		Unchanged: 0/0
 16527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16532 ;;Total ram usage:        0 bytes
 16533 ;; Hardware stack levels used:    1
 16534 ;; Hardware stack levels required when called:   15
 16535 ;; This function calls:
 16536 ;;		Nothing
 16537 ;; This function is called by:
 16538 ;;		_calc_bsoc
 16539 ;;		_init_bsoc
 16540 ;;		_efgtoa
 16541 ;; This function uses a reentrant model
 16542 ;;
 16543                           
 16544                           	psect	text57
 16545  017A7E                     __ptext57:
 16546                           	opt callstack 0
 16547  017A7E                     ___fltol:
 16548                           	opt callstack 0
 16549                           
 16550                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16551  017A7E  52E6               	movf	postinc1,f,c
 16552  017A80  52E6               	movf	postinc1,f,c
 16553                           
 16554                           ;stkvar	_f1 @ sp[(-2)+-4]
 16555                           
 16556                           ;incstack = 0
 16557 ;; hardware stack exceeded
 16558  017A82  0EFA               	movlw	-6
 16559  017A84  006F FF8C  F009    	movff	plusw1,btemp+8
 16560  017A8A  0EFB               	movlw	-5
 16561  017A8C  006F FF8C  F00A    	movff	plusw1,btemp+9
 16562  017A92  0EFC               	movlw	-4
 16563  017A94  006F FF8C  F00B    	movff	plusw1,btemp+10
 16564  017A9A  0EFD               	movlw	-3
 16565  017A9C  006F FF8C  F00C    	movff	plusw1,btemp+11
 16566  017AA2  0E18               	movlw	24
 16567  017AA4  D005               	goto	u6780
 16568  017AA6                     u6785:
 16569  017AA6  90D8               	bcf	status,0,c
 16570  017AA8  320C               	rrcf	(btemp+11)^0,f,c
 16571  017AAA  320B               	rrcf	(btemp+10)^0,f,c
 16572  017AAC  320A               	rrcf	(btemp+9)^0,f,c
 16573  017AAE  3209               	rrcf	(btemp+8)^0,f,c
 16574  017AB0                     u6780:
 16575  017AB0  2EE8               	decfsz	wreg,f,c
 16576  017AB2  D7F9               	goto	u6785
 16577                           
 16578                           ;stkvar	_exp1 @ sp[(-2)+0]
 16579  017AB4  0EFE               	movlw	-2
 16580  017AB6  0060  F027  FFE3   	movff	btemp+8,plusw1
 16581  017ABC  0EFE               	movlw	-2
 16582  017ABE  50E3               	movf	plusw1,w,c
 16583  017AC0  A4D8               	btfss	status,2,c
 16584  017AC2  D006               	goto	l8122
 16585  017AC4                     u6790:
 16586  017AC4  0E00               	movlw	0
 16587  017AC6  6E01               	movwf	btemp^0,c
 16588  017AC8  6A02               	clrf	(btemp+1)^0,c
 16589  017ACA  6A03               	clrf	(btemp+2)^0,c
 16590  017ACC  6A04               	clrf	(btemp+3)^0,c
 16591  017ACE  D08B               	goto	l2614
 16592  017AD0                     l8122:
 16593                           
 16594                           ;stkvar	_f1 @ sp[(-2)+-4]
 16595  017AD0  0EFA               	movlw	-6
 16596  017AD2  006F FF8C  F009    	movff	plusw1,btemp+8
 16597  017AD8  0EFB               	movlw	-5
 16598  017ADA  006F FF8C  F00A    	movff	plusw1,btemp+9
 16599  017AE0  0EFC               	movlw	-4
 16600  017AE2  006F FF8C  F00B    	movff	plusw1,btemp+10
 16601  017AE8  0EFD               	movlw	-3
 16602  017AEA  006F FF8C  F00C    	movff	plusw1,btemp+11
 16603  017AF0  0E20               	movlw	32
 16604  017AF2  D005               	goto	u6800
 16605  017AF4                     u6805:
 16606  017AF4  90D8               	bcf	status,0,c
 16607  017AF6  320C               	rrcf	(btemp+11)^0,f,c
 16608  017AF8  320B               	rrcf	(btemp+10)^0,f,c
 16609  017AFA  320A               	rrcf	(btemp+9)^0,f,c
 16610  017AFC  3209               	rrcf	(btemp+8)^0,f,c
 16611  017AFE                     u6800:
 16612  017AFE  2EE8               	decfsz	wreg,f,c
 16613  017B00  D7F9               	goto	u6805
 16614                           
 16615                           ;stkvar	_sign1 @ sp[(-2)+1]
 16616  017B02  0EFF               	movlw	-1
 16617  017B04  0060  F027  FFE3   	movff	btemp+8,plusw1
 16618                           
 16619                           ;stkvar	_f1 @ sp[(-2)+-4]
 16620  017B0A  0EFC               	movlw	-4
 16621  017B0C  8EE3               	bsf	plusw1,7,c
 16622                           
 16623                           ;stkvar	_f1 @ sp[(-2)+-4]
 16624  017B0E  50E1               	movf	fsr1l,w,c
 16625  017B10  0FFA               	addlw	-6
 16626  017B12  6ED9               	movwf	fsr2l,c
 16627  017B14  50E2               	movf	fsr1h,w,c
 16628  017B16  6EDA               	movwf	fsr2h,c
 16629  017B18  0EFF               	movlw	255
 16630  017B1A  22DA               	addwfc	fsr2h,f,c
 16631  017B1C  0EFF               	movlw	255
 16632  017B1E  16DE               	andwf	postinc2,f,c
 16633  017B20  0EFF               	movlw	255
 16634  017B22  16DE               	andwf	postinc2,f,c
 16635  017B24  0EFF               	movlw	255
 16636  017B26  16DE               	andwf	postinc2,f,c
 16637  017B28  0E00               	movlw	0
 16638  017B2A  16DE               	andwf	postinc2,f,c
 16639                           
 16640                           ;stkvar	_exp1 @ sp[(-2)+0]
 16641  017B2C  0EFE               	movlw	-2
 16642  017B2E  006F FF8C  F001    	movff	plusw1,btemp
 16643  017B34  0E96               	movlw	150
 16644  017B36  5E01               	subwf	btemp^0,f,c
 16645  017B38  0EFE               	movlw	-2
 16646  017B3A  0060  F007  FFE3   	movff	btemp,plusw1
 16647                           
 16648                           ;stkvar	_exp1 @ sp[(-2)+0]
 16649  017B40  0EFE               	movlw	-2
 16650  017B42  AEE3               	btfss	plusw1,7,c
 16651  017B44  D014               	goto	l8140
 16652                           
 16653                           ;stkvar	_exp1 @ sp[(-2)+0]
 16654  017B46  0EFE               	movlw	-2
 16655  017B48  50E3               	movf	plusw1,w,c
 16656  017B4A  0A80               	xorlw	128
 16657  017B4C  0F97               	addlw	151
 16658  017B4E  A0D8               	btfss	status,0,c
 16659  017B50  D7B9               	goto	u6790
 16660  017B52                     l8138:
 16661                           
 16662                           ;stkvar	_f1 @ sp[(-2)+-4]
 16663  017B52  90D8               	bcf	status,0,c
 16664  017B54  0EFD               	movlw	-3
 16665  017B56  32E3               	rrcf	plusw1,f,c
 16666  017B58  0EFC               	movlw	-4
 16667  017B5A  32E3               	rrcf	plusw1,f,c
 16668  017B5C  0EFB               	movlw	-5
 16669  017B5E  32E3               	rrcf	plusw1,f,c
 16670  017B60  0EFA               	movlw	-6
 16671  017B62  32E3               	rrcf	plusw1,f,c
 16672                           
 16673                           ;stkvar	_exp1 @ sp[(-2)+0]
 16674  017B64  0EFE               	movlw	-2
 16675  017B66  2AE3               	incf	plusw1,f,c
 16676  017B68  B4D8               	btfsc	status,2,c
 16677  017B6A  D018               	goto	u6850
 16678  017B6C  D7F2               	goto	l8138
 16679  017B6E                     l8140:
 16680                           
 16681                           ;stkvar	_exp1 @ sp[(-2)+0]
 16682  017B6E  0EFE               	movlw	-2
 16683  017B70  006F FF8C  F001    	movff	plusw1,btemp
 16684  017B76  0E1F               	movlw	31
 16685  017B78  6401               	cpfsgt	btemp^0,c
 16686  017B7A  D00C               	goto	l8148
 16687  017B7C  D7A3               	goto	u6790
 16688  017B7E                     l8146:
 16689                           
 16690                           ;stkvar	_f1 @ sp[(-2)+-4]
 16691  017B7E  90D8               	bcf	status,0,c
 16692  017B80  0EFA               	movlw	-6
 16693  017B82  36E3               	rlcf	plusw1,f,c
 16694  017B84  0EFB               	movlw	-5
 16695  017B86  36E3               	rlcf	plusw1,f,c
 16696  017B88  0EFC               	movlw	-4
 16697  017B8A  36E3               	rlcf	plusw1,f,c
 16698  017B8C  0EFD               	movlw	-3
 16699  017B8E  36E3               	rlcf	plusw1,f,c
 16700                           
 16701                           ;stkvar	_exp1 @ sp[(-2)+0]
 16702  017B90  0EFE               	movlw	-2
 16703  017B92  06E3               	decf	plusw1,f,c
 16704  017B94                     l8148:
 16705                           
 16706                           ;stkvar	_exp1 @ sp[(-2)+0]
 16707  017B94  0EFE               	movlw	-2
 16708  017B96  50E3               	movf	plusw1,w,c
 16709  017B98  A4D8               	btfss	status,2,c
 16710  017B9A  D7F1               	goto	l8146
 16711  017B9C                     u6850:
 16712                           
 16713                           ;stkvar	_sign1 @ sp[(-2)+1]
 16714  017B9C  0EFF               	movlw	-1
 16715  017B9E  50E3               	movf	plusw1,w,c
 16716  017BA0  B4D8               	btfsc	status,2,c
 16717  017BA2  D011               	goto	u6870
 16718                           
 16719                           ;stkvar	_f1 @ sp[(-2)+-4]
 16720                           ;stkvar	_f1 @ sp[(-2)+-4]
 16721  017BA4  0EFA               	movlw	-6
 16722  017BA6  6CE3               	negf	plusw1,c
 16723  017BA8  0EFB               	movlw	-5
 16724  017BAA  1EE3               	comf	plusw1,f,c
 16725  017BAC  0EFC               	movlw	-4
 16726  017BAE  1EE3               	comf	plusw1,f,c
 16727  017BB0  0EFD               	movlw	-3
 16728  017BB2  1EE3               	comf	plusw1,f,c
 16729  017BB4  E308               	bnc	u6870
 16730  017BB6  0EFB               	movlw	-5
 16731  017BB8  2AE3               	incf	plusw1,f,c
 16732  017BBA  E305               	bnc	u6870
 16733  017BBC  0EFC               	movlw	-4
 16734  017BBE  2AE3               	incf	plusw1,f,c
 16735  017BC0  E302               	bnc	u6870
 16736  017BC2  0EFD               	movlw	-3
 16737  017BC4  2AE3               	incf	plusw1,f,c
 16738  017BC6                     u6870:
 16739                           
 16740                           ;stkvar	_f1 @ sp[(-2)+-4]
 16741  017BC6  0EFA               	movlw	-6
 16742  017BC8  006F FF8C  F001    	movff	plusw1,btemp
 16743  017BCE  0EFB               	movlw	-5
 16744  017BD0  006F FF8C  F002    	movff	plusw1,btemp+1
 16745  017BD6  0EFC               	movlw	-4
 16746  017BD8  006F FF8C  F003    	movff	plusw1,btemp+2
 16747  017BDE  0EFD               	movlw	-3
 16748  017BE0  006F FF8C  F004    	movff	plusw1,btemp+3
 16749  017BE6                     l2614:
 16750                           
 16751                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 16752  017BE6  0EFA               	movlw	250
 16753  017BE8  26E1               	addwf	fsr1l,f,c
 16754  017BEA  0EFF               	movlw	255
 16755  017BEC  22E2               	addwfc	fsr1h,f,c
 16756  017BEE  0012               	return		;funcret
 16757  017BF0                     __end_of___fltol:
 16758                           	opt callstack 0
 16759                           
 16760 ;; *************** function ___flneg *****************
 16761 ;; Defined at:
 16762 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 16763 ;; Parameters:    Size  Location     Type
 16764 ;;  f1              4  [STACK] long 
 16765 ;; Auto vars:     Size  Location     Type
 16766 ;;		None
 16767 ;; Return value:  Size  Location     Type
 16768 ;;                  4  [STACK] long 
 16769 ;; Registers used:
 16770 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 16771 ;; Tracked objects:
 16772 ;;		On entry : 0/0
 16773 ;;		On exit  : 0/0
 16774 ;;		Unchanged: 0/0
 16775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16779 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16780 ;;Total ram usage:        0 bytes
 16781 ;; Hardware stack levels used:    1
 16782 ;; Hardware stack levels required when called:   15
 16783 ;; This function calls:
 16784 ;;		Nothing
 16785 ;; This function is called by:
 16786 ;;		_calc_bsoc
 16787 ;;		_efgtoa
 16788 ;; This function uses a reentrant model
 16789 ;;
 16790                           
 16791                           	psect	text58
 16792  019F78                     __ptext58:
 16793                           	opt callstack 0
 16794  019F78                     ___flneg:
 16795                           	opt callstack 0
 16796                           
 16797                           ;stkvar	_f1 @ sp[(0)+-4]
 16798                           
 16799                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16800                           ;incstack = 0
 16801 ;; hardware stack exceeded
 16802  019F78  0EFC               	movlw	-4
 16803  019F7A  50E3               	movf	plusw1,w,c
 16804  019F7C  E10A               	bnz	u6770
 16805  019F7E  0EFD               	movlw	-3
 16806  019F80  50E3               	movf	plusw1,w,c
 16807  019F82  E107               	bnz	u6770
 16808  019F84  0EFE               	movlw	-2
 16809  019F86  50E3               	movf	plusw1,w,c
 16810  019F88  E104               	bnz	u6770
 16811  019F8A  0EFF               	movlw	-1
 16812  019F8C  50E3               	movf	plusw1,w,c
 16813  019F8E  B4D8               	btfsc	status,2,c
 16814  019F90  D002               	goto	l8112
 16815  019F92                     u6770:
 16816                           
 16817                           ;stkvar	_f1 @ sp[(0)+-4]
 16818  019F92  0EFF               	movlw	-1
 16819  019F94  7EE3               	btg	plusw1,7,c
 16820  019F96                     l8112:
 16821                           
 16822                           ;stkvar	_f1 @ sp[(0)+-4]
 16823  019F96  0EFC               	movlw	-4
 16824  019F98  006F FF8C  F001    	movff	plusw1,btemp
 16825  019F9E  0EFD               	movlw	-3
 16826  019FA0  006F FF8C  F002    	movff	plusw1,btemp+1
 16827  019FA6  0EFE               	movlw	-2
 16828  019FA8  006F FF8C  F003    	movff	plusw1,btemp+2
 16829  019FAE  0EFF               	movlw	-1
 16830  019FB0  006F FF8C  F004    	movff	plusw1,btemp+3
 16831                           
 16832                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 16833  019FB6  52E5               	movf	postdec1,f,c
 16834  019FB8  52E5               	movf	postdec1,f,c
 16835  019FBA  52E5               	movf	postdec1,f,c
 16836  019FBC  52E5               	movf	postdec1,f,c
 16837  019FBE  0012               	return		;funcret
 16838  019FC0                     __end_of___flneg:
 16839                           	opt callstack 0
 16840                           
 16841 ;; *************** function ___fleq *****************
 16842 ;; Defined at:
 16843 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 16844 ;; Parameters:    Size  Location     Type
 16845 ;;  ff1             4  [STACK] long 
 16846 ;;  ff2             4  [STACK] long 
 16847 ;; Auto vars:     Size  Location     Type
 16848 ;;		None
 16849 ;; Return value:  Size  Location     Type
 16850 ;;		None               void
 16851 ;; Registers used:
 16852 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 16853 ;; Tracked objects:
 16854 ;;		On entry : 0/0
 16855 ;;		On exit  : 0/0
 16856 ;;		Unchanged: 0/0
 16857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16862 ;;Total ram usage:        0 bytes
 16863 ;; Hardware stack levels used:    1
 16864 ;; Hardware stack levels required when called:   15
 16865 ;; This function calls:
 16866 ;;		Nothing
 16867 ;; This function is called by:
 16868 ;;		_efgtoa
 16869 ;; This function uses a reentrant model
 16870 ;;
 16871                           
 16872                           	psect	text59
 16873  018F3E                     __ptext59:
 16874                           	opt callstack 0
 16875  018F3E                     ___fleq:
 16876                           	opt callstack 0
 16877                           
 16878                           ;stkvar	_ff1 @ sp[(0)+-4]
 16879                           
 16880                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16881                           ;incstack = 0
 16882 ;; hardware stack exceeded
 16883  018F3E  50E1               	movf	fsr1l,w,c
 16884  018F40  0FFC               	addlw	-4
 16885  018F42  6ED9               	movwf	fsr2l,c
 16886  018F44  50E2               	movf	fsr1h,w,c
 16887  018F46  6EDA               	movwf	fsr2h,c
 16888  018F48  0EFF               	movlw	255
 16889  018F4A  22DA               	addwfc	fsr2h,f,c
 16890  018F4C  0E00               	movlw	0
 16891  018F4E  14DE               	andwf	postinc2,w,c
 16892  018F50  6E09               	movwf	(btemp+8)^0,c
 16893  018F52  0E00               	movlw	0
 16894  018F54  14DE               	andwf	postinc2,w,c
 16895  018F56  6E0A               	movwf	(btemp+9)^0,c
 16896  018F58  0E80               	movlw	128
 16897  018F5A  14DE               	andwf	postinc2,w,c
 16898  018F5C  6E0B               	movwf	(btemp+10)^0,c
 16899  018F5E  0E7F               	movlw	127
 16900  018F60  14DE               	andwf	postinc2,w,c
 16901  018F62  6E0C               	movwf	(btemp+11)^0,c
 16902  018F64  5009               	movf	(btemp+8)^0,w,c
 16903  018F66  100A               	iorwf	(btemp+9)^0,w,c
 16904  018F68  100B               	iorwf	(btemp+10)^0,w,c
 16905  018F6A  100C               	iorwf	(btemp+11)^0,w,c
 16906  018F6C  A4D8               	btfss	status,2,c
 16907  018F6E  D008               	goto	l8070
 16908                           
 16909                           ;stkvar	_ff1 @ sp[(0)+-4]
 16910  018F70  0EFC               	movlw	-4
 16911  018F72  6AE3               	clrf	plusw1,c
 16912  018F74  0EFD               	movlw	-3
 16913  018F76  6AE3               	clrf	plusw1,c
 16914  018F78  0EFE               	movlw	-2
 16915  018F7A  6AE3               	clrf	plusw1,c
 16916  018F7C  0EFF               	movlw	-1
 16917  018F7E  6AE3               	clrf	plusw1,c
 16918  018F80                     l8070:
 16919                           
 16920                           ;stkvar	_ff2 @ sp[(0)+-8]
 16921  018F80  50E1               	movf	fsr1l,w,c
 16922  018F82  0FF8               	addlw	-8
 16923  018F84  6ED9               	movwf	fsr2l,c
 16924  018F86  50E2               	movf	fsr1h,w,c
 16925  018F88  6EDA               	movwf	fsr2h,c
 16926  018F8A  0EFF               	movlw	255
 16927  018F8C  22DA               	addwfc	fsr2h,f,c
 16928  018F8E  0E00               	movlw	0
 16929  018F90  14DE               	andwf	postinc2,w,c
 16930  018F92  6E09               	movwf	(btemp+8)^0,c
 16931  018F94  0E00               	movlw	0
 16932  018F96  14DE               	andwf	postinc2,w,c
 16933  018F98  6E0A               	movwf	(btemp+9)^0,c
 16934  018F9A  0E80               	movlw	128
 16935  018F9C  14DE               	andwf	postinc2,w,c
 16936  018F9E  6E0B               	movwf	(btemp+10)^0,c
 16937  018FA0  0E7F               	movlw	127
 16938  018FA2  14DE               	andwf	postinc2,w,c
 16939  018FA4  6E0C               	movwf	(btemp+11)^0,c
 16940  018FA6  5009               	movf	(btemp+8)^0,w,c
 16941  018FA8  100A               	iorwf	(btemp+9)^0,w,c
 16942  018FAA  100B               	iorwf	(btemp+10)^0,w,c
 16943  018FAC  100C               	iorwf	(btemp+11)^0,w,c
 16944  018FAE  A4D8               	btfss	status,2,c
 16945  018FB0  D008               	goto	l8074
 16946                           
 16947                           ;stkvar	_ff2 @ sp[(0)+-8]
 16948  018FB2  0EF8               	movlw	-8
 16949  018FB4  6AE3               	clrf	plusw1,c
 16950  018FB6  0EF9               	movlw	-7
 16951  018FB8  6AE3               	clrf	plusw1,c
 16952  018FBA  0EFA               	movlw	-6
 16953  018FBC  6AE3               	clrf	plusw1,c
 16954  018FBE  0EFB               	movlw	-5
 16955  018FC0  6AE3               	clrf	plusw1,c
 16956  018FC2                     l8074:
 16957                           
 16958                           ;stkvar	_ff2 @ sp[(0)+-8]
 16959                           ;stkvar	_ff1 @ sp[(0)+-4]
 16960  018FC2  50E1               	movf	fsr1l,w,c
 16961  018FC4  0FFC               	addlw	-4
 16962  018FC6  6ED9               	movwf	fsr2l,c
 16963  018FC8  50E2               	movf	fsr1h,w,c
 16964  018FCA  6EDA               	movwf	fsr2h,c
 16965  018FCC  0EFF               	movlw	255
 16966  018FCE  22DA               	addwfc	fsr2h,f,c
 16967  018FD0  0EF8               	movlw	-8
 16968  018FD2  50E3               	movf	plusw1,w,c
 16969  018FD4  18DE               	xorwf	postinc2,w,c
 16970  018FD6  E10D               	bnz	u6710
 16971  018FD8  0EF9               	movlw	-7
 16972  018FDA  50E3               	movf	plusw1,w,c
 16973  018FDC  18DE               	xorwf	postinc2,w,c
 16974  018FDE  E109               	bnz	u6710
 16975  018FE0  0EFA               	movlw	-6
 16976  018FE2  50E3               	movf	plusw1,w,c
 16977  018FE4  18DE               	xorwf	postinc2,w,c
 16978  018FE6  E105               	bnz	u6710
 16979  018FE8  0EFB               	movlw	-5
 16980  018FEA  50E3               	movf	plusw1,w,c
 16981  018FEC  18DE               	xorwf	postinc2,w,c
 16982  018FEE  B4D8               	btfsc	status,2,c
 16983  018FF0  D002               	goto	l8078
 16984  018FF2                     u6710:
 16985  018FF2  9001               	bcf	btemp& (0+255),0,c
 16986  018FF4  D001               	goto	l2576
 16987  018FF6                     l8078:
 16988  018FF6  8001               	bsf	btemp& (0+255),0,c
 16989  018FF8                     l2576:
 16990                           
 16991                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 16992  018FF8  0EF8               	movlw	248
 16993  018FFA  26E1               	addwf	fsr1l,f,c
 16994  018FFC  0EFF               	movlw	255
 16995  018FFE  22E2               	addwfc	fsr1h,f,c
 16996  019000  0012               	return		;funcret
 16997  019002                     __end_of___fleq:
 16998                           	opt callstack 0
 16999                           
 17000 ;; *************** function ___awmod *****************
 17001 ;; Defined at:
 17002 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 17003 ;; Parameters:    Size  Location     Type
 17004 ;;  dividend        2  [STACK] int 
 17005 ;;  divisor         2  [STACK] int 
 17006 ;; Auto vars:     Size  Location     Type
 17007 ;;  sign            1  [STACK] unsigned char 
 17008 ;;  counter         1  [STACK] unsigned char 
 17009 ;; Return value:  Size  Location     Type
 17010 ;;                  2  [STACK] int 
 17011 ;; Registers used:
 17012 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 17013 ;; Tracked objects:
 17014 ;;		On entry : 0/0
 17015 ;;		On exit  : 0/0
 17016 ;;		Unchanged: 0/0
 17017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17021 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17022 ;;Total ram usage:        0 bytes
 17023 ;; Hardware stack levels used:    1
 17024 ;; Hardware stack levels required when called:   15
 17025 ;; This function calls:
 17026 ;;		Nothing
 17027 ;; This function is called by:
 17028 ;;		_efgtoa
 17029 ;; This function uses a reentrant model
 17030 ;;
 17031                           
 17032                           	psect	text60
 17033  018642                     __ptext60:
 17034                           	opt callstack 0
 17035  018642                     ___awmod:
 17036                           	opt callstack 0
 17037                           
 17038                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17039  018642  52E6               	movf	postinc1,f,c
 17040  018644  52E6               	movf	postinc1,f,c
 17041                           
 17042                           ;stkvar	_sign @ sp[(-2)+0]
 17043                           
 17044                           ;incstack = 0
 17045 ;; hardware stack exceeded
 17046  018646  0EFE               	movlw	-2
 17047  018648  6AE3               	clrf	plusw1,c
 17048                           
 17049                           ;stkvar	_dividend @ sp[(-2)+-2]
 17050  01864A  0EFD               	movlw	-3
 17051  01864C  AEE3               	btfss	plusw1,7,c
 17052  01864E  D009               	goto	l8036
 17053                           
 17054                           ;stkvar	_dividend @ sp[(-2)+-2]
 17055                           ;stkvar	_dividend @ sp[(-2)+-2]
 17056  018650  0EFC               	movlw	-4
 17057  018652  6CE3               	negf	plusw1,c
 17058  018654  0EFD               	movlw	-3
 17059  018656  1EE3               	comf	plusw1,f,c
 17060  018658  B0D8               	btfsc	status,0,c
 17061  01865A  2AE3               	incf	plusw1,f,c
 17062                           
 17063                           ;stkvar	_sign @ sp[(-2)+0]
 17064  01865C  0EFE               	movlw	-2
 17065  01865E  6AE3               	clrf	plusw1,c
 17066  018660  2AE3               	incf	plusw1,f,c
 17067  018662                     l8036:
 17068                           
 17069                           ;stkvar	_divisor @ sp[(-2)+-4]
 17070  018662  0EFB               	movlw	-5
 17071  018664  AEE3               	btfss	plusw1,7,c
 17072  018666  D006               	goto	l8040
 17073                           
 17074                           ;stkvar	_divisor @ sp[(-2)+-4]
 17075                           ;stkvar	_divisor @ sp[(-2)+-4]
 17076  018668  0EFA               	movlw	-6
 17077  01866A  6CE3               	negf	plusw1,c
 17078  01866C  0EFB               	movlw	-5
 17079  01866E  1EE3               	comf	plusw1,f,c
 17080  018670  B0D8               	btfsc	status,0,c
 17081  018672  2AE3               	incf	plusw1,f,c
 17082  018674                     l8040:
 17083                           
 17084                           ;stkvar	_divisor @ sp[(-2)+-4]
 17085  018674  0EFA               	movlw	-6
 17086  018676  006F FF8C  F001    	movff	plusw1,btemp
 17087  01867C  0EFB               	movlw	-5
 17088  01867E  50E3               	movf	plusw1,w,c
 17089  018680  1001               	iorwf	btemp^0,w,c
 17090  018682  B4D8               	btfsc	status,2,c
 17091  018684  D053               	goto	u6670
 17092                           
 17093                           ;stkvar	_counter @ sp[(-2)+1]
 17094  018686  0EFF               	movlw	-1
 17095  018688  6AE3               	clrf	plusw1,c
 17096  01868A  D012               	goto	L17
 17097  01868C                     l8044:
 17098                           
 17099                           ;stkvar	_divisor @ sp[(-2)+-4]
 17100  01868C  0EFA               	movlw	-6
 17101  01868E  50E3               	movf	plusw1,w,c
 17102  018690  90D8               	bcf	status,0,c
 17103  018692  34E8               	rlcf	wreg,w,c
 17104  018694  6E01               	movwf	btemp^0,c
 17105  018696  0EFA               	movlw	-6
 17106  018698  0060  F007  FFE3   	movff	btemp,plusw1
 17107  01869E  0EFB               	movlw	-5
 17108  0186A0  50E3               	movf	plusw1,w,c
 17109  0186A2  34E8               	rlcf	wreg,w,c
 17110  0186A4  6E01               	movwf	btemp^0,c
 17111  0186A6  0EFB               	movlw	-5
 17112  0186A8  0060  F007  FFE3   	movff	btemp,plusw1
 17113                           
 17114                           ;stkvar	_counter @ sp[(-2)+1]
 17115  0186AE  0EFF               	movlw	-1
 17116  0186B0                     L17:
 17117  0186B0  2AE3               	incf	plusw1,f,c
 17118                           
 17119                           ;stkvar	_divisor @ sp[(-2)+-4]
 17120  0186B2  0EFB               	movlw	-5
 17121  0186B4  AEE3               	btfss	plusw1,7,c
 17122  0186B6  D7EA               	goto	l8044
 17123  0186B8                     u6650:
 17124                           
 17125                           ;stkvar	_divisor @ sp[(-2)+-4]
 17126  0186B8  0EFA               	movlw	-6
 17127  0186BA  006F FF8C  F00B    	movff	plusw1,btemp+10
 17128  0186C0  0EFB               	movlw	-5
 17129  0186C2  006F FF8C  F00C    	movff	plusw1,btemp+11
 17130                           
 17131                           ;stkvar	_dividend @ sp[(-2)+-2]
 17132  0186C8  0EFC               	movlw	-4
 17133  0186CA  006F FF8C  F009    	movff	plusw1,btemp+8
 17134  0186D0  0EFD               	movlw	-3
 17135  0186D2  006F FF8C  F00A    	movff	plusw1,btemp+9
 17136  0186D8  500B               	movf	(btemp+10)^0,w,c
 17137  0186DA  5C09               	subwf	(btemp+8)^0,w,c
 17138  0186DC  500C               	movf	(btemp+11)^0,w,c
 17139  0186DE  580A               	subwfb	(btemp+9)^0,w,c
 17140  0186E0  A0D8               	btfss	status,0,c
 17141  0186E2  D014               	goto	l8054
 17142                           
 17143                           ;stkvar	_divisor @ sp[(-2)+-4]
 17144                           ;stkvar	_dividend @ sp[(-2)+-2]
 17145  0186E4  0EFC               	movlw	-4
 17146  0186E6  50E3               	movf	plusw1,w,c
 17147  0186E8  6E01               	movwf	btemp^0,c
 17148  0186EA  0EFA               	movlw	-6
 17149  0186EC  50E3               	movf	plusw1,w,c
 17150  0186EE  5E01               	subwf	btemp^0,f,c
 17151  0186F0  0EFC               	movlw	-4
 17152  0186F2  0060  F007  FFE3   	movff	btemp,plusw1
 17153  0186F8  0EFD               	movlw	-3
 17154  0186FA  50E3               	movf	plusw1,w,c
 17155  0186FC  6E01               	movwf	btemp^0,c
 17156  0186FE  0EFB               	movlw	-5
 17157  018700  50E3               	movf	plusw1,w,c
 17158  018702  5A01               	subwfb	btemp^0,f,c
 17159  018704  0EFD               	movlw	-3
 17160  018706  0060  F007  FFE3   	movff	btemp,plusw1
 17161  01870C                     l8054:
 17162                           
 17163                           ;stkvar	_divisor @ sp[(-2)+-4]
 17164  01870C  90D8               	bcf	status,0,c
 17165  01870E  0EFB               	movlw	-5
 17166  018710  32E3               	rrcf	plusw1,f,c
 17167  018712  0EFA               	movlw	-6
 17168  018714  32E3               	rrcf	plusw1,f,c
 17169                           
 17170                           ;stkvar	_counter @ sp[(-2)+1]
 17171  018716  0EFF               	movlw	-1
 17172  018718  50E3               	movf	plusw1,w,c
 17173  01871A  6E01               	movwf	btemp^0,c
 17174  01871C  0E01               	movlw	1
 17175  01871E  5E01               	subwf	btemp^0,f,c
 17176  018720  0EFF               	movlw	-1
 17177  018722  0060  F007  FFE3   	movff	btemp,plusw1
 17178  018728  A4D8               	btfss	status,2,c
 17179  01872A  D7C6               	goto	u6650
 17180  01872C                     u6670:
 17181                           
 17182                           ;stkvar	_sign @ sp[(-2)+0]
 17183  01872C  0EFE               	movlw	-2
 17184  01872E  50E3               	movf	plusw1,w,c
 17185  018730  B4D8               	btfsc	status,2,c
 17186  018732  D006               	goto	l8062
 17187                           
 17188                           ;stkvar	_dividend @ sp[(-2)+-2]
 17189                           ;stkvar	_dividend @ sp[(-2)+-2]
 17190  018734  0EFC               	movlw	-4
 17191  018736  6CE3               	negf	plusw1,c
 17192  018738  0EFD               	movlw	-3
 17193  01873A  1EE3               	comf	plusw1,f,c
 17194  01873C  B0D8               	btfsc	status,0,c
 17195  01873E  2AE3               	incf	plusw1,f,c
 17196  018740                     l8062:
 17197                           
 17198                           ;stkvar	_dividend @ sp[(-2)+-2]
 17199  018740  0EFC               	movlw	-4
 17200  018742  006F FF8C  F001    	movff	plusw1,btemp
 17201  018748  0EFD               	movlw	-3
 17202  01874A  006F FF8C  F002    	movff	plusw1,btemp+1
 17203                           
 17204                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 17205  018750  0EFA               	movlw	250
 17206  018752  26E1               	addwf	fsr1l,f,c
 17207  018754  0EFF               	movlw	255
 17208  018756  22E2               	addwfc	fsr1h,f,c
 17209  018758  0012               	return		;funcret
 17210  01875A                     __end_of___awmod:
 17211                           	opt callstack 0
 17212                           
 17213 ;; *************** function ___awdiv *****************
 17214 ;; Defined at:
 17215 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 17216 ;; Parameters:    Size  Location     Type
 17217 ;;  dividend        2  [STACK] int 
 17218 ;;  divisor         2  [STACK] int 
 17219 ;; Auto vars:     Size  Location     Type
 17220 ;;  quotient        2  [STACK] int 
 17221 ;;  sign            1  [STACK] unsigned char 
 17222 ;;  counter         1  [STACK] unsigned char 
 17223 ;; Return value:  Size  Location     Type
 17224 ;;                  2  [STACK] int 
 17225 ;; Registers used:
 17226 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 17227 ;; Tracked objects:
 17228 ;;		On entry : 0/0
 17229 ;;		On exit  : 0/0
 17230 ;;		Unchanged: 0/0
 17231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17235 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17236 ;;Total ram usage:        0 bytes
 17237 ;; Hardware stack levels used:    1
 17238 ;; Hardware stack levels required when called:   15
 17239 ;; This function calls:
 17240 ;;		Nothing
 17241 ;; This function is called by:
 17242 ;;		_efgtoa
 17243 ;; This function uses a reentrant model
 17244 ;;
 17245                           
 17246                           	psect	text61
 17247  018026                     __ptext61:
 17248                           	opt callstack 0
 17249  018026                     ___awdiv:
 17250                           	opt callstack 0
 17251                           
 17252                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17253  018026  52E6               	movf	postinc1,f,c
 17254  018028  52E6               	movf	postinc1,f,c
 17255  01802A  52E6               	movf	postinc1,f,c
 17256  01802C  52E6               	movf	postinc1,f,c
 17257                           
 17258                           ;stkvar	_sign @ sp[(-4)+2]
 17259                           
 17260                           ;incstack = 0
 17261 ;; hardware stack exceeded
 17262  01802E  0EFE               	movlw	-2
 17263  018030  6AE3               	clrf	plusw1,c
 17264                           
 17265                           ;stkvar	_divisor @ sp[(-4)+-4]
 17266  018032  0EF9               	movlw	-7
 17267  018034  AEE3               	btfss	plusw1,7,c
 17268  018036  D009               	goto	l7990
 17269                           
 17270                           ;stkvar	_divisor @ sp[(-4)+-4]
 17271                           ;stkvar	_divisor @ sp[(-4)+-4]
 17272  018038  0EF8               	movlw	-8
 17273  01803A  6CE3               	negf	plusw1,c
 17274  01803C  0EF9               	movlw	-7
 17275  01803E  1EE3               	comf	plusw1,f,c
 17276  018040  B0D8               	btfsc	status,0,c
 17277  018042  2AE3               	incf	plusw1,f,c
 17278                           
 17279                           ;stkvar	_sign @ sp[(-4)+2]
 17280  018044  0EFE               	movlw	-2
 17281  018046  6AE3               	clrf	plusw1,c
 17282  018048  2AE3               	incf	plusw1,f,c
 17283  01804A                     l7990:
 17284                           
 17285                           ;stkvar	_dividend @ sp[(-4)+-2]
 17286  01804A  0EFB               	movlw	-5
 17287  01804C  AEE3               	btfss	plusw1,7,c
 17288  01804E  D008               	goto	l7996
 17289                           
 17290                           ;stkvar	_dividend @ sp[(-4)+-2]
 17291                           ;stkvar	_dividend @ sp[(-4)+-2]
 17292  018050  0EFA               	movlw	-6
 17293  018052  6CE3               	negf	plusw1,c
 17294  018054  0EFB               	movlw	-5
 17295  018056  1EE3               	comf	plusw1,f,c
 17296  018058  B0D8               	btfsc	status,0,c
 17297  01805A  2AE3               	incf	plusw1,f,c
 17298                           
 17299                           ;stkvar	_sign @ sp[(-4)+2]
 17300  01805C  0EFE               	movlw	-2
 17301  01805E  70E3               	btg	plusw1,0,c
 17302  018060                     l7996:
 17303                           
 17304                           ;stkvar	_quotient @ sp[(-4)+0]
 17305  018060  0EFC               	movlw	-4
 17306  018062  6AE3               	clrf	plusw1,c
 17307  018064  0EFD               	movlw	-3
 17308  018066  6AE3               	clrf	plusw1,c
 17309                           
 17310                           ;stkvar	_divisor @ sp[(-4)+-4]
 17311  018068  0EF8               	movlw	-8
 17312  01806A  006F FF8C  F001    	movff	plusw1,btemp
 17313  018070  0EF9               	movlw	-7
 17314  018072  50E3               	movf	plusw1,w,c
 17315  018074  1001               	iorwf	btemp^0,w,c
 17316  018076  B4D8               	btfsc	status,2,c
 17317  018078  D066               	goto	u6600
 17318                           
 17319                           ;stkvar	_counter @ sp[(-4)+3]
 17320  01807A  0EFF               	movlw	-1
 17321  01807C  6AE3               	clrf	plusw1,c
 17322  01807E  D012               	goto	L18
 17323  018080                     l8002:
 17324                           
 17325                           ;stkvar	_divisor @ sp[(-4)+-4]
 17326  018080  0EF8               	movlw	-8
 17327  018082  50E3               	movf	plusw1,w,c
 17328  018084  90D8               	bcf	status,0,c
 17329  018086  34E8               	rlcf	wreg,w,c
 17330  018088  6E01               	movwf	btemp^0,c
 17331  01808A  0EF8               	movlw	-8
 17332  01808C  0060  F007  FFE3   	movff	btemp,plusw1
 17333  018092  0EF9               	movlw	-7
 17334  018094  50E3               	movf	plusw1,w,c
 17335  018096  34E8               	rlcf	wreg,w,c
 17336  018098  6E01               	movwf	btemp^0,c
 17337  01809A  0EF9               	movlw	-7
 17338  01809C  0060  F007  FFE3   	movff	btemp,plusw1
 17339                           
 17340                           ;stkvar	_counter @ sp[(-4)+3]
 17341  0180A2  0EFF               	movlw	-1
 17342  0180A4                     L18:
 17343  0180A4  2AE3               	incf	plusw1,f,c
 17344                           
 17345                           ;stkvar	_divisor @ sp[(-4)+-4]
 17346  0180A6  0EF9               	movlw	-7
 17347  0180A8  AEE3               	btfss	plusw1,7,c
 17348  0180AA  D7EA               	goto	l8002
 17349  0180AC                     u6580:
 17350                           
 17351                           ;stkvar	_quotient @ sp[(-4)+0]
 17352  0180AC  0EFC               	movlw	-4
 17353  0180AE  50E3               	movf	plusw1,w,c
 17354  0180B0  90D8               	bcf	status,0,c
 17355  0180B2  34E8               	rlcf	wreg,w,c
 17356  0180B4  6E01               	movwf	btemp^0,c
 17357  0180B6  0EFC               	movlw	-4
 17358  0180B8  0060  F007  FFE3   	movff	btemp,plusw1
 17359  0180BE  0EFD               	movlw	-3
 17360  0180C0  50E3               	movf	plusw1,w,c
 17361  0180C2  34E8               	rlcf	wreg,w,c
 17362  0180C4  6E01               	movwf	btemp^0,c
 17363  0180C6  0EFD               	movlw	-3
 17364  0180C8  0060  F007  FFE3   	movff	btemp,plusw1
 17365                           
 17366                           ;stkvar	_divisor @ sp[(-4)+-4]
 17367  0180CE  0EF8               	movlw	-8
 17368  0180D0  006F FF8C  F00B    	movff	plusw1,btemp+10
 17369  0180D6  0EF9               	movlw	-7
 17370  0180D8  006F FF8C  F00C    	movff	plusw1,btemp+11
 17371                           
 17372                           ;stkvar	_dividend @ sp[(-4)+-2]
 17373  0180DE  0EFA               	movlw	-6
 17374  0180E0  006F FF8C  F009    	movff	plusw1,btemp+8
 17375  0180E6  0EFB               	movlw	-5
 17376  0180E8  006F FF8C  F00A    	movff	plusw1,btemp+9
 17377  0180EE  500B               	movf	(btemp+10)^0,w,c
 17378  0180F0  5C09               	subwf	(btemp+8)^0,w,c
 17379  0180F2  500C               	movf	(btemp+11)^0,w,c
 17380  0180F4  580A               	subwfb	(btemp+9)^0,w,c
 17381  0180F6  A0D8               	btfss	status,0,c
 17382  0180F8  D016               	goto	l8016
 17383                           
 17384                           ;stkvar	_divisor @ sp[(-4)+-4]
 17385                           ;stkvar	_dividend @ sp[(-4)+-2]
 17386  0180FA  0EFA               	movlw	-6
 17387  0180FC  50E3               	movf	plusw1,w,c
 17388  0180FE  6E01               	movwf	btemp^0,c
 17389  018100  0EF8               	movlw	-8
 17390  018102  50E3               	movf	plusw1,w,c
 17391  018104  5E01               	subwf	btemp^0,f,c
 17392  018106  0EFA               	movlw	-6
 17393  018108  0060  F007  FFE3   	movff	btemp,plusw1
 17394  01810E  0EFB               	movlw	-5
 17395  018110  50E3               	movf	plusw1,w,c
 17396  018112  6E01               	movwf	btemp^0,c
 17397  018114  0EF9               	movlw	-7
 17398  018116  50E3               	movf	plusw1,w,c
 17399  018118  5A01               	subwfb	btemp^0,f,c
 17400  01811A  0EFB               	movlw	-5
 17401  01811C  0060  F007  FFE3   	movff	btemp,plusw1
 17402                           
 17403                           ;stkvar	_quotient @ sp[(-4)+0]
 17404  018122  0EFC               	movlw	-4
 17405  018124  80E3               	bsf	plusw1,0,c
 17406  018126                     l8016:
 17407                           
 17408                           ;stkvar	_divisor @ sp[(-4)+-4]
 17409  018126  90D8               	bcf	status,0,c
 17410  018128  0EF9               	movlw	-7
 17411  01812A  32E3               	rrcf	plusw1,f,c
 17412  01812C  0EF8               	movlw	-8
 17413  01812E  32E3               	rrcf	plusw1,f,c
 17414                           
 17415                           ;stkvar	_counter @ sp[(-4)+3]
 17416  018130  0EFF               	movlw	-1
 17417  018132  50E3               	movf	plusw1,w,c
 17418  018134  6E01               	movwf	btemp^0,c
 17419  018136  0E01               	movlw	1
 17420  018138  5E01               	subwf	btemp^0,f,c
 17421  01813A  0EFF               	movlw	-1
 17422  01813C  0060  F007  FFE3   	movff	btemp,plusw1
 17423  018142  A4D8               	btfss	status,2,c
 17424  018144  D7B3               	goto	u6580
 17425  018146                     u6600:
 17426                           
 17427                           ;stkvar	_sign @ sp[(-4)+2]
 17428  018146  0EFE               	movlw	-2
 17429  018148  50E3               	movf	plusw1,w,c
 17430  01814A  B4D8               	btfsc	status,2,c
 17431  01814C  D006               	goto	l8024
 17432                           
 17433                           ;stkvar	_quotient @ sp[(-4)+0]
 17434                           ;stkvar	_quotient @ sp[(-4)+0]
 17435  01814E  0EFC               	movlw	-4
 17436  018150  6CE3               	negf	plusw1,c
 17437  018152  0EFD               	movlw	-3
 17438  018154  1EE3               	comf	plusw1,f,c
 17439  018156  B0D8               	btfsc	status,0,c
 17440  018158  2AE3               	incf	plusw1,f,c
 17441  01815A                     l8024:
 17442                           
 17443                           ;stkvar	_quotient @ sp[(-4)+0]
 17444  01815A  0EFC               	movlw	-4
 17445  01815C  006F FF8C  F001    	movff	plusw1,btemp
 17446  018162  0EFD               	movlw	-3
 17447  018164  006F FF8C  F002    	movff	plusw1,btemp+1
 17448                           
 17449                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 17450  01816A  0EF8               	movlw	248
 17451  01816C  26E1               	addwf	fsr1l,f,c
 17452  01816E  0EFF               	movlw	255
 17453  018170  22E2               	addwfc	fsr1h,f,c
 17454  018172  0012               	return		;funcret
 17455  018174                     __end_of___awdiv:
 17456                           	opt callstack 0
 17457                           
 17458 ;; *************** function _dtoa *****************
 17459 ;; Defined at:
 17460 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 17461 ;; Parameters:    Size  Location     Type
 17462 ;;  fp              2  [STACK] PTR struct _IO_FILE
 17463 ;;		 -> f(6), NULL(0), 
 17464 ;;  d               8  [STACK] long long 
 17465 ;; Auto vars:     Size  Location     Type
 17466 ;;  n               8  [STACK] long long 
 17467 ;;  i               2  [STACK] int 
 17468 ;;  s               2  [STACK] int 
 17469 ;;  w               2  [STACK] int 
 17470 ;;  p               2  [STACK] int 
 17471 ;; Return value:  Size  Location     Type
 17472 ;;                  2  [STACK] int 
 17473 ;; Registers used:
 17474 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 17475 ;; Tracked objects:
 17476 ;;		On entry : 0/0
 17477 ;;		On exit  : 0/0
 17478 ;;		Unchanged: 0/0
 17479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17483 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17484 ;;Total ram usage:        0 bytes
 17485 ;; Hardware stack levels used:    1
 17486 ;; Hardware stack levels required when called:   20
 17487 ;; This function calls:
 17488 ;;		___aodiv
 17489 ;;		___aomod
 17490 ;;		_abs
 17491 ;;		_pad
 17492 ;; This function is called by:
 17493 ;;		_vfpfcnvrt
 17494 ;; This function uses a reentrant model
 17495 ;;
 17496                           
 17497                           	psect	text62
 17498  014C9C                     __ptext62:
 17499                           	opt callstack 0
 17500  014C9C                     _dtoa:
 17501                           	opt callstack 0
 17502                           
 17503                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 17504  014C9C  0E12               	movlw	18
 17505  014C9E  26E1               	addwf	fsr1l,f,c
 17506  014CA0  0E00               	movlw	0
 17507  014CA2  22E2               	addwfc	fsr1h,f,c
 17508                           
 17509                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 17510                           ;stkvar	_d @ sp[(-18)+-10]
 17511                           
 17512                           ;incstack = 0
 17513 ;; hardware stack exceeded
 17514  014CA4  0EE4               	movlw	228
 17515  014CA6  24E1               	addwf	fsr1l,w,c
 17516  014CA8  6ED9               	movwf	fsr2l,c
 17517  014CAA  0EFF               	movlw	255
 17518  014CAC  20E2               	addwfc	fsr1h,w,c
 17519  014CAE  6EDA               	movwf	fsr2h,c
 17520                           
 17521                           ;stkvar	_n @ sp[(-18)+2]
 17522  014CB0  0E08               	movlw	8
 17523  014CB2  6E01               	movwf	btemp^0,c
 17524  014CB4  0EF0               	movlw	-16
 17525  014CB6                     us1013999:
 17526  014CB6  006F FF7B FFE3     	movff	postinc2,plusw1
 17527  014CBC  28E8               	incf	wreg,w,c
 17528  014CBE  2E01               	decfsz	btemp^0,f,c
 17529  014CC0  D7FA               	bra	us1013999
 17530                           
 17531                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 17532                           ;stkvar	_n @ sp[(-18)+2]
 17533  014CC2  0EF7               	movlw	-9
 17534  014CC4  AEE3               	btfss	plusw1,7,c
 17535  014CC6  D002               	goto	u10140
 17536  014CC8  0E01               	movlw	1
 17537  014CCA  D001               	goto	u10150
 17538  014CCC                     u10140:
 17539  014CCC  0E00               	movlw	0
 17540  014CCE                     u10150:
 17541  014CCE  6E0B               	movwf	(btemp+10)^0,c
 17542  014CD0  6A0C               	clrf	(btemp+11)^0,c
 17543                           
 17544                           ;stkvar	_s @ sp[(-18)+12]
 17545  014CD2  0EFA               	movlw	-6
 17546  014CD4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17547  014CDA  0EFB               	movlw	-5
 17548  014CDC  0060  F033  FFE3   	movff	btemp+11,plusw1
 17549                           
 17550                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 17551                           ;stkvar	_s @ sp[(-18)+12]
 17552  014CE2  0EFA               	movlw	-6
 17553  014CE4  006F FF8C  F001    	movff	plusw1,btemp
 17554  014CEA  0EFB               	movlw	-5
 17555  014CEC  50E3               	movf	plusw1,w,c
 17556  014CEE  1001               	iorwf	btemp^0,w,c
 17557  014CF0  B4D8               	btfsc	status,2,c
 17558  014CF2  D025               	goto	u10170
 17559                           
 17560                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 17561                           ;stkvar	_n @ sp[(-18)+2]
 17562                           ;stkvar	_n @ sp[(-18)+2]
 17563  014CF4  0EF0               	movlw	-16
 17564  014CF6  6CE3               	negf	plusw1,c
 17565  014CF8  0EF1               	movlw	-15
 17566  014CFA  1EE3               	comf	plusw1,f,c
 17567  014CFC  0EF2               	movlw	-14
 17568  014CFE  1EE3               	comf	plusw1,f,c
 17569  014D00  0EF3               	movlw	-13
 17570  014D02  1EE3               	comf	plusw1,f,c
 17571  014D04  0EF4               	movlw	-12
 17572  014D06  1EE3               	comf	plusw1,f,c
 17573  014D08  0EF5               	movlw	-11
 17574  014D0A  1EE3               	comf	plusw1,f,c
 17575  014D0C  0EF6               	movlw	-10
 17576  014D0E  1EE3               	comf	plusw1,f,c
 17577  014D10  0EF7               	movlw	-9
 17578  014D12  1EE3               	comf	plusw1,f,c
 17579  014D14  E314               	bnc	u10170
 17580  014D16  0EF1               	movlw	-15
 17581  014D18  2AE3               	incf	plusw1,f,c
 17582  014D1A  E311               	bnc	u10170
 17583  014D1C  0EF2               	movlw	-14
 17584  014D1E  2AE3               	incf	plusw1,f,c
 17585  014D20  E30E               	bnc	u10170
 17586  014D22  0EF3               	movlw	-13
 17587  014D24  2AE3               	incf	plusw1,f,c
 17588  014D26  E30B               	bnc	u10170
 17589  014D28  0EF4               	movlw	-12
 17590  014D2A  2AE3               	incf	plusw1,f,c
 17591  014D2C  E308               	bnc	u10170
 17592  014D2E  0EF5               	movlw	-11
 17593  014D30  2AE3               	incf	plusw1,f,c
 17594  014D32  E305               	bnc	u10170
 17595  014D34  0EF6               	movlw	-10
 17596  014D36  2AE3               	incf	plusw1,f,c
 17597  014D38  E302               	bnc	u10170
 17598  014D3A  0EF7               	movlw	-9
 17599  014D3C  2AE3               	incf	plusw1,f,c
 17600  014D3E                     u10170:
 17601                           
 17602                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 17603  014D3E  AE24               	btfss	(_prec+1)^0,7,c
 17604                           
 17605                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 17606  014D40  9225               	bcf	_flags^0,1,c
 17607                           
 17608                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 17609  014D42  BE24               	btfsc	(_prec+1)^0,7,c
 17610  014D44  D005               	goto	u10190
 17611  014D46  5024               	movf	(_prec+1)^0,w,c
 17612  014D48  E110               	bnz	l11066
 17613  014D4A  0423               	decf	_prec^0,w,c
 17614  014D4C  B0D8               	btfsc	status,0,c
 17615  014D4E  D00D               	goto	l11066
 17616  014D50                     u10190:
 17617  014D50  0E01               	movlw	1
 17618  014D52  6E0B               	movwf	(btemp+10)^0,c
 17619  014D54  0E00               	movlw	0
 17620  014D56  6E0C               	movwf	(btemp+11)^0,c
 17621                           
 17622                           ;stkvar	_p @ sp[(-18)+16]
 17623  014D58  0EFE               	movlw	-2
 17624  014D5A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17625  014D60  0EFF               	movlw	-1
 17626  014D62  0060  F033  FFE3   	movff	btemp+11,plusw1
 17627  014D68  D008               	goto	l2080
 17628  014D6A                     l11066:
 17629                           
 17630                           ;stkvar	_p @ sp[(-18)+16]
 17631  014D6A  0EFE               	movlw	-2
 17632  014D6C  0060  F08F  FFE3   	movff	_prec,plusw1
 17633  014D72  0EFF               	movlw	-1
 17634  014D74  0060  F093  FFE3   	movff	_prec+1,plusw1
 17635  014D7A                     l2080:
 17636                           
 17637                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 17638                           ;stkvar	_w @ sp[(-18)+14]
 17639  014D7A  0EFC               	movlw	-4
 17640  014D7C  0060  F087  FFE3   	movff	_width,plusw1
 17641  014D82  0EFD               	movlw	-3
 17642  014D84  0060  F08B  FFE3   	movff	_width+1,plusw1
 17643                           
 17644                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 17645                           ;stkvar	_s @ sp[(-18)+12]
 17646  014D8A  0EFA               	movlw	-6
 17647  014D8C  006F FF8C  F001    	movff	plusw1,btemp
 17648  014D92  0EFB               	movlw	-5
 17649  014D94  50E3               	movf	plusw1,w,c
 17650  014D96  1001               	iorwf	btemp^0,w,c
 17651  014D98  A4D8               	btfss	status,2,c
 17652  014D9A  D002               	goto	u10210
 17653  014D9C  A425               	btfss	_flags^0,2,c
 17654  014D9E  D00A               	goto	l11074
 17655  014DA0                     u10210:
 17656                           
 17657                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 17658                           ;stkvar	_w @ sp[(-18)+14]
 17659  014DA0  50E1               	movf	fsr1l,w,c
 17660  014DA2  0FFC               	addlw	-4
 17661  014DA4  6ED9               	movwf	fsr2l,c
 17662  014DA6  50E2               	movf	fsr1h,w,c
 17663  014DA8  6EDA               	movwf	fsr2h,c
 17664  014DAA  0EFF               	movlw	255
 17665  014DAC  22DA               	addwfc	fsr2h,f,c
 17666  014DAE  06DE               	decf	postinc2,f,c
 17667  014DB0  0E00               	movlw	0
 17668  014DB2  5ADD               	subwfb	postdec2,f,c
 17669  014DB4                     l11074:
 17670                           
 17671                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 17672  014DB4  0E4F               	movlw	79
 17673  014DB6  6E0B               	movwf	(btemp+10)^0,c
 17674  014DB8  0E00               	movlw	0
 17675  014DBA  6E0C               	movwf	(btemp+11)^0,c
 17676                           
 17677                           ;stkvar	_i @ sp[(-18)+10]
 17678  014DBC  0EF8               	movlw	-8
 17679  014DBE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17680  014DC4  0EF9               	movlw	-7
 17681  014DC6  0060  F033  FFE3   	movff	btemp+11,plusw1
 17682                           
 17683                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 17684  014DCC  0103               	movlb	3	; () banked
 17685  014DCE  6BE3               	clrf	(_dbuf+79)& (0+255),b
 17686                           
 17687                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 17688  014DD0  D109               	goto	l11088
 17689  014DD2                     l11078:
 17690                           
 17691                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 17692                           ;stkvar	_i @ sp[(-18)+10]
 17693  014DD2  50E1               	movf	fsr1l,w,c
 17694  014DD4  0FF8               	addlw	-8
 17695  014DD6  6ED9               	movwf	fsr2l,c
 17696  014DD8  50E2               	movf	fsr1h,w,c
 17697  014DDA  6EDA               	movwf	fsr2h,c
 17698  014DDC  0EFF               	movlw	255
 17699  014DDE  22DA               	addwfc	fsr2h,f,c
 17700  014DE0  06DE               	decf	postinc2,f,c
 17701  014DE2  0E00               	movlw	0
 17702  014DE4  5ADD               	subwfb	postdec2,f,c
 17703                           
 17704                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 17705  014DE6  0E0A               	movlw	10
 17706  014DE8  6EE6               	movwf	postinc1,c
 17707  014DEA  0E00               	movlw	0
 17708  014DEC  6EE6               	movwf	postinc1,c
 17709  014DEE  0E00               	movlw	0
 17710  014DF0  6EE6               	movwf	postinc1,c
 17711  014DF2  0E00               	movlw	0
 17712  014DF4  6EE6               	movwf	postinc1,c
 17713  014DF6  0E00               	movlw	0
 17714  014DF8  6EE6               	movwf	postinc1,c
 17715  014DFA  0E00               	movlw	0
 17716  014DFC  6EE6               	movwf	postinc1,c
 17717  014DFE  0E00               	movlw	0
 17718  014E00  6EE6               	movwf	postinc1,c
 17719  014E02  0E00               	movlw	0
 17720  014E04  6EE6               	movwf	postinc1,c
 17721                           
 17722                           ;stkvar	_n @ sp[(-26)+2]
 17723  014E06  50E1               	movf	fsr1l,w,c
 17724  014E08  0FE8               	addlw	-24
 17725  014E0A  6ED9               	movwf	fsr2l,c
 17726  014E0C  50E2               	movf	fsr1h,w,c
 17727  014E0E  6EDA               	movwf	fsr2h,c
 17728  014E10  0EFF               	movlw	255
 17729  014E12  22DA               	addwfc	fsr2h,f,c
 17730  014E14  006F FF7B FFE6     	movff	postinc2,postinc1
 17731  014E1A  006F FF7B FFE6     	movff	postinc2,postinc1
 17732  014E20  006F FF7B FFE6     	movff	postinc2,postinc1
 17733  014E26  006F FF7B FFE6     	movff	postinc2,postinc1
 17734  014E2C  006F FF7B FFE6     	movff	postinc2,postinc1
 17735  014E32  006F FF7B FFE6     	movff	postinc2,postinc1
 17736  014E38  006F FF7B FFE6     	movff	postinc2,postinc1
 17737  014E3E  006F FF7B FFE6     	movff	postinc2,postinc1
 17738  014E44  ECE1  F0B4         	call	___aomod	;wreg free
 17739  014E48  52E5               	movf	postdec1,f,c
 17740  014E4A  006F FF9C  F018    	movff	indf1,btemp+23
 17741  014E50  52E5               	movf	postdec1,f,c
 17742  014E52  006F FF9C  F017    	movff	indf1,btemp+22
 17743  014E58  52E5               	movf	postdec1,f,c
 17744  014E5A  006F FF9C  F016    	movff	indf1,btemp+21
 17745  014E60  52E5               	movf	postdec1,f,c
 17746  014E62  006F FF9C  F015    	movff	indf1,btemp+20
 17747  014E68  52E5               	movf	postdec1,f,c
 17748  014E6A  006F FF9C  F014    	movff	indf1,btemp+19
 17749  014E70  52E5               	movf	postdec1,f,c
 17750  014E72  006F FF9C  F013    	movff	indf1,btemp+18
 17751  014E78  52E5               	movf	postdec1,f,c
 17752  014E7A  006F FF9C  F012    	movff	indf1,btemp+17
 17753  014E80  52E5               	movf	postdec1,f,c
 17754  014E82  006F FF9C  F011    	movff	indf1,btemp+16
 17755  014E88  0EF8               	movlw	248
 17756  014E8A  26E1               	addwf	fsr1l,f,c
 17757  014E8C  0EFF               	movlw	255
 17758  014E8E  22E2               	addwfc	fsr1h,f,c
 17759  014E90  0060  F044  F00B   	movff	btemp+16,btemp+10
 17760  014E96  0060  F048  F00C   	movff	btemp+17,btemp+11
 17761  014E9C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 17762  014EA2  0060  F033  FFE6   	movff	btemp+11,postinc1
 17763  014EA8  ECE0  F0CF         	call	_abs	;wreg free
 17764  014EAC  0E30               	movlw	48
 17765  014EAE  2601               	addwf	btemp^0,f,c
 17766                           
 17767                           ;stkvar	_i @ sp[(-18)+10]
 17768  014EB0  0EF8               	movlw	-8
 17769  014EB2  006F FF8C  F00B    	movff	plusw1,btemp+10
 17770  014EB8  0EF9               	movlw	-7
 17771  014EBA  006F FF8C  F00C    	movff	plusw1,btemp+11
 17772  014EC0  0E94               	movlw	low _dbuf
 17773  014EC2  240B               	addwf	(btemp+10)^0,w,c
 17774  014EC4  6ED9               	movwf	fsr2l,c
 17775  014EC6  0E03               	movlw	high _dbuf
 17776  014EC8  200C               	addwfc	(btemp+11)^0,w,c
 17777  014ECA  6EDA               	movwf	fsr2h,c
 17778  014ECC  0060  F007  FFDF   	movff	btemp,indf2
 17779                           
 17780                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 17781                           ;stkvar	_p @ sp[(-18)+16]
 17782  014ED2  50E1               	movf	fsr1l,w,c
 17783  014ED4  0FFE               	addlw	-2
 17784  014ED6  6ED9               	movwf	fsr2l,c
 17785  014ED8  50E2               	movf	fsr1h,w,c
 17786  014EDA  6EDA               	movwf	fsr2h,c
 17787  014EDC  0EFF               	movlw	255
 17788  014EDE  22DA               	addwfc	fsr2h,f,c
 17789  014EE0  06DE               	decf	postinc2,f,c
 17790  014EE2  0E00               	movlw	0
 17791  014EE4  5ADD               	subwfb	postdec2,f,c
 17792                           
 17793                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 17794                           ;stkvar	_w @ sp[(-18)+14]
 17795  014EE6  50E1               	movf	fsr1l,w,c
 17796  014EE8  0FFC               	addlw	-4
 17797  014EEA  6ED9               	movwf	fsr2l,c
 17798  014EEC  50E2               	movf	fsr1h,w,c
 17799  014EEE  6EDA               	movwf	fsr2h,c
 17800  014EF0  0EFF               	movlw	255
 17801  014EF2  22DA               	addwfc	fsr2h,f,c
 17802  014EF4  06DE               	decf	postinc2,f,c
 17803  014EF6  0E00               	movlw	0
 17804  014EF8  5ADD               	subwfb	postdec2,f,c
 17805                           
 17806                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 17807  014EFA  0E0A               	movlw	10
 17808  014EFC  6EE6               	movwf	postinc1,c
 17809  014EFE  0E00               	movlw	0
 17810  014F00  6EE6               	movwf	postinc1,c
 17811  014F02  0E00               	movlw	0
 17812  014F04  6EE6               	movwf	postinc1,c
 17813  014F06  0E00               	movlw	0
 17814  014F08  6EE6               	movwf	postinc1,c
 17815  014F0A  0E00               	movlw	0
 17816  014F0C  6EE6               	movwf	postinc1,c
 17817  014F0E  0E00               	movlw	0
 17818  014F10  6EE6               	movwf	postinc1,c
 17819  014F12  0E00               	movlw	0
 17820  014F14  6EE6               	movwf	postinc1,c
 17821  014F16  0E00               	movlw	0
 17822  014F18  6EE6               	movwf	postinc1,c
 17823                           
 17824                           ;stkvar	_n @ sp[(-26)+2]
 17825  014F1A  50E1               	movf	fsr1l,w,c
 17826  014F1C  0FE8               	addlw	-24
 17827  014F1E  6ED9               	movwf	fsr2l,c
 17828  014F20  50E2               	movf	fsr1h,w,c
 17829  014F22  6EDA               	movwf	fsr2h,c
 17830  014F24  0EFF               	movlw	255
 17831  014F26  22DA               	addwfc	fsr2h,f,c
 17832  014F28  006F FF7B FFE6     	movff	postinc2,postinc1
 17833  014F2E  006F FF7B FFE6     	movff	postinc2,postinc1
 17834  014F34  006F FF7B FFE6     	movff	postinc2,postinc1
 17835  014F3A  006F FF7B FFE6     	movff	postinc2,postinc1
 17836  014F40  006F FF7B FFE6     	movff	postinc2,postinc1
 17837  014F46  006F FF7B FFE6     	movff	postinc2,postinc1
 17838  014F4C  006F FF7B FFE6     	movff	postinc2,postinc1
 17839  014F52  006F FF7B FFE6     	movff	postinc2,postinc1
 17840  014F58  EC67  F0B2         	call	___aodiv	;wreg free
 17841  014F5C  52E5               	movf	postdec1,f,c
 17842  014F5E  006F FF9C  F018    	movff	indf1,btemp+23
 17843  014F64  52E5               	movf	postdec1,f,c
 17844  014F66  006F FF9C  F017    	movff	indf1,btemp+22
 17845  014F6C  52E5               	movf	postdec1,f,c
 17846  014F6E  006F FF9C  F016    	movff	indf1,btemp+21
 17847  014F74  52E5               	movf	postdec1,f,c
 17848  014F76  006F FF9C  F015    	movff	indf1,btemp+20
 17849  014F7C  52E5               	movf	postdec1,f,c
 17850  014F7E  006F FF9C  F014    	movff	indf1,btemp+19
 17851  014F84  52E5               	movf	postdec1,f,c
 17852  014F86  006F FF9C  F013    	movff	indf1,btemp+18
 17853  014F8C  52E5               	movf	postdec1,f,c
 17854  014F8E  006F FF9C  F012    	movff	indf1,btemp+17
 17855  014F94  52E5               	movf	postdec1,f,c
 17856  014F96  006F FF9C  F011    	movff	indf1,btemp+16
 17857  014F9C  0EF8               	movlw	248
 17858  014F9E  26E1               	addwf	fsr1l,f,c
 17859  014FA0  0EFF               	movlw	255
 17860  014FA2  22E2               	addwfc	fsr1h,f,c
 17861                           
 17862                           ;stkvar	_n @ sp[(-18)+2]
 17863  014FA4  0EF0               	movlw	-16
 17864  014FA6  0060  F047  FFE3   	movff	btemp+16,plusw1
 17865  014FAC  0EF1               	movlw	-15
 17866  014FAE  0060  F04B  FFE3   	movff	btemp+17,plusw1
 17867  014FB4  0EF2               	movlw	-14
 17868  014FB6  0060  F04F  FFE3   	movff	btemp+18,plusw1
 17869  014FBC  0EF3               	movlw	-13
 17870  014FBE  0060  F053  FFE3   	movff	btemp+19,plusw1
 17871  014FC4  0EF4               	movlw	-12
 17872  014FC6  0060  F057  FFE3   	movff	btemp+20,plusw1
 17873  014FCC  0EF5               	movlw	-11
 17874  014FCE  0060  F05B  FFE3   	movff	btemp+21,plusw1
 17875  014FD4  0EF6               	movlw	-10
 17876  014FD6  0060  F05F  FFE3   	movff	btemp+22,plusw1
 17877  014FDC  0EF7               	movlw	-9
 17878  014FDE  0060  F063  FFE3   	movff	btemp+23,plusw1
 17879  014FE4                     l11088:
 17880                           
 17881                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 17882                           ;stkvar	_i @ sp[(-18)+10]
 17883  014FE4  0EF9               	movlw	-7
 17884  014FE6  BEE3               	btfsc	plusw1,7,c
 17885  014FE8  D036               	goto	u10260
 17886  014FEA  0EF9               	movlw	-7
 17887  014FEC  50E3               	movf	plusw1,w,c
 17888  014FEE  E104               	bnz	u10220
 17889  014FF0  0EF8               	movlw	-8
 17890  014FF2  04E3               	decf	plusw1,w,c
 17891  014FF4  A0D8               	btfss	status,0,c
 17892  014FF6  D02F               	goto	u10260
 17893  014FF8                     u10220:
 17894                           
 17895                           ;stkvar	_n @ sp[(-18)+2]
 17896  014FF8  0EF0               	movlw	-16
 17897  014FFA  50E3               	movf	plusw1,w,c
 17898  014FFC  E115               	bnz	u10231
 17899  014FFE  0EF1               	movlw	-15
 17900  015000  50E3               	movf	plusw1,w,c
 17901  015002  E112               	bnz	u10231
 17902  015004  0EF2               	movlw	-14
 17903  015006  50E3               	movf	plusw1,w,c
 17904  015008  E10F               	bnz	u10231
 17905  01500A  0EF3               	movlw	-13
 17906  01500C  50E3               	movf	plusw1,w,c
 17907  01500E  E10C               	bnz	u10231
 17908  015010  0EF4               	movlw	-12
 17909  015012  50E3               	movf	plusw1,w,c
 17910  015014  E109               	bnz	u10231
 17911  015016  0EF5               	movlw	-11
 17912  015018  50E3               	movf	plusw1,w,c
 17913  01501A  E106               	bnz	u10231
 17914  01501C  0EF6               	movlw	-10
 17915  01501E  50E3               	movf	plusw1,w,c
 17916  015020  E103               	bnz	u10231
 17917  015022  0EF7               	movlw	-9
 17918  015024  50E3               	movf	plusw1,w,c
 17919  015026  A4D8               	btfss	status,2,c
 17920  015028                     u10231:
 17921  015028  D6D4               	goto	l11078
 17922                           
 17923                           ;stkvar	_p @ sp[(-18)+16]
 17924  01502A  0EFF               	movlw	-1
 17925  01502C  BEE3               	btfsc	plusw1,7,c
 17926  01502E  D007               	goto	u10240
 17927  015030  0EFF               	movlw	-1
 17928  015032  50E3               	movf	plusw1,w,c
 17929  015034  E103               	bnz	u10241
 17930  015036  0EFE               	movlw	-2
 17931  015038  04E3               	decf	plusw1,w,c
 17932  01503A  B0D8               	btfsc	status,0,c
 17933  01503C                     u10241:
 17934  01503C  D6CA               	goto	l11078
 17935  01503E                     u10240:
 17936                           
 17937                           ;stkvar	_w @ sp[(-18)+14]
 17938  01503E  0EFD               	movlw	-3
 17939  015040  BEE3               	btfsc	plusw1,7,c
 17940  015042  D009               	goto	u10260
 17941  015044  0EFD               	movlw	-3
 17942  015046  50E3               	movf	plusw1,w,c
 17943  015048  E104               	bnz	u10250
 17944  01504A  0EFC               	movlw	-4
 17945  01504C  04E3               	decf	plusw1,w,c
 17946  01504E  A0D8               	btfss	status,0,c
 17947  015050  D002               	goto	u10260
 17948  015052                     u10250:
 17949  015052  B225               	btfsc	_flags^0,1,c
 17950  015054  D6BE               	goto	l11078
 17951  015056                     u10260:
 17952                           
 17953                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 17954                           ;stkvar	_s @ sp[(-18)+12]
 17955  015056  0EFA               	movlw	-6
 17956  015058  006F FF8C  F001    	movff	plusw1,btemp
 17957  01505E  0EFB               	movlw	-5
 17958  015060  50E3               	movf	plusw1,w,c
 17959  015062  1001               	iorwf	btemp^0,w,c
 17960  015064  A4D8               	btfss	status,2,c
 17961  015066  D002               	goto	u10280
 17962  015068  A425               	btfss	_flags^0,2,c
 17963  01506A  D033               	goto	l11112
 17964  01506C                     u10280:
 17965                           
 17966                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 17967                           ;stkvar	_i @ sp[(-18)+10]
 17968  01506C  50E1               	movf	fsr1l,w,c
 17969  01506E  0FF8               	addlw	-8
 17970  015070  6ED9               	movwf	fsr2l,c
 17971  015072  50E2               	movf	fsr1h,w,c
 17972  015074  6EDA               	movwf	fsr2h,c
 17973  015076  0EFF               	movlw	255
 17974  015078  22DA               	addwfc	fsr2h,f,c
 17975  01507A  06DE               	decf	postinc2,f,c
 17976  01507C  0E00               	movlw	0
 17977  01507E  5ADD               	subwfb	postdec2,f,c
 17978                           
 17979                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 17980                           ;stkvar	_s @ sp[(-18)+12]
 17981  015080  0EFA               	movlw	-6
 17982  015082  006F FF8C  F001    	movff	plusw1,btemp
 17983  015088  0EFB               	movlw	-5
 17984  01508A  50E3               	movf	plusw1,w,c
 17985  01508C  1001               	iorwf	btemp^0,w,c
 17986  01508E  A4D8               	btfss	status,2,c
 17987  015090  D002               	goto	l11108
 17988  015092  0E2B               	movlw	43
 17989  015094  D001               	goto	L19
 17990  015096                     l11108:
 17991  015096  0E2D               	movlw	45
 17992  015098                     L19:
 17993  015098  6E0B               	movwf	(btemp+10)^0,c
 17994  01509A  0E00               	movlw	0
 17995  01509C  6E0C               	movwf	(btemp+11)^0,c
 17996                           
 17997                           ;stkvar	_dtoa$5243 @ sp[(-18)+0]
 17998  01509E  0EEE               	movlw	-18
 17999  0150A0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18000  0150A6  0EEF               	movlw	-17
 18001  0150A8  0060  F033  FFE3   	movff	btemp+11,plusw1
 18002                           
 18003                           ;stkvar	_dtoa$5243 @ sp[(-18)+0]
 18004                           ;stkvar	_i @ sp[(-18)+10]
 18005  0150AE  0EF8               	movlw	-8
 18006  0150B0  006F FF8C  F00B    	movff	plusw1,btemp+10
 18007  0150B6  0EF9               	movlw	-7
 18008  0150B8  006F FF8C  F00C    	movff	plusw1,btemp+11
 18009  0150BE  0E94               	movlw	low _dbuf
 18010  0150C0  240B               	addwf	(btemp+10)^0,w,c
 18011  0150C2  6ED9               	movwf	fsr2l,c
 18012  0150C4  0E03               	movlw	high _dbuf
 18013  0150C6  200C               	addwfc	(btemp+11)^0,w,c
 18014  0150C8  6EDA               	movwf	fsr2h,c
 18015  0150CA  0EEE               	movlw	-18
 18016  0150CC  006F FF8F FFDF     	movff	plusw1,indf2
 18017  0150D2                     l11112:
 18018                           
 18019                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 18020                           ;stkvar	_w @ sp[(-18)+14]
 18021  0150D2  0EFC               	movlw	-4
 18022  0150D4  006F FF8F FFE6     	movff	plusw1,postinc1
 18023  0150DA  006F FF8F FFE6     	movff	plusw1,postinc1
 18024                           
 18025                           ;stkvar	_i @ sp[(-20)+10]
 18026  0150E0  0E94               	movlw	low _dbuf
 18027  0150E2  6E0B               	movwf	(btemp+10)^0,c
 18028  0150E4  0E03               	movlw	high _dbuf
 18029  0150E6  6E0C               	movwf	(btemp+11)^0,c
 18030  0150E8  0EF6               	movlw	-10
 18031  0150EA  50E3               	movf	plusw1,w,c
 18032  0150EC  260B               	addwf	(btemp+10)^0,f,c
 18033  0150EE  0EF7               	movlw	-9
 18034  0150F0  50E3               	movf	plusw1,w,c
 18035  0150F2  220C               	addwfc	(btemp+11)^0,f,c
 18036  0150F4  0060  F02F  FFE6   	movff	btemp+10,postinc1
 18037  0150FA  0060  F033  FFE6   	movff	btemp+11,postinc1
 18038                           
 18039                           ;stkvar	_fp @ sp[(-22)+-2]
 18040  015100  0EE8               	movlw	-24
 18041  015102  006F FF8F FFE6     	movff	plusw1,postinc1
 18042  015108  006F FF8F FFE6     	movff	plusw1,postinc1
 18043  01510E  ECAD  F0C3         	call	_pad	;wreg free
 18044                           
 18045                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 18046  015112  0EE4               	movlw	228
 18047  015114  26E1               	addwf	fsr1l,f,c
 18048  015116  0EFF               	movlw	255
 18049  015118  22E2               	addwfc	fsr1h,f,c
 18050  01511A  0012               	return		;funcret
 18051  01511C                     __end_of_dtoa:
 18052                           	opt callstack 0
 18053                           
 18054 ;; *************** function _abs *****************
 18055 ;; Defined at:
 18056 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 18057 ;; Parameters:    Size  Location     Type
 18058 ;;  a               2  [STACK] int 
 18059 ;; Auto vars:     Size  Location     Type
 18060 ;;		None
 18061 ;; Return value:  Size  Location     Type
 18062 ;;                  2  [STACK] int 
 18063 ;; Registers used:
 18064 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 18065 ;; Tracked objects:
 18066 ;;		On entry : 0/3
 18067 ;;		On exit  : 0/0
 18068 ;;		Unchanged: 0/0
 18069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18073 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18074 ;;Total ram usage:        0 bytes
 18075 ;; Hardware stack levels used:    1
 18076 ;; Hardware stack levels required when called:   15
 18077 ;; This function calls:
 18078 ;;		Nothing
 18079 ;; This function is called by:
 18080 ;;		_dtoa
 18081 ;; This function uses a reentrant model
 18082 ;;
 18083                           
 18084                           	psect	text63
 18085  019FC0                     __ptext63:
 18086                           	opt callstack 0
 18087  019FC0                     _abs:
 18088                           	opt callstack 0
 18089                           
 18090                           ;stkvar	_a @ sp[(0)+-2]
 18091                           
 18092                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18093                           ;incstack = 0
 18094 ;; hardware stack exceeded
 18095  019FC0  0EFF               	movlw	-1
 18096  019FC2  BEE3               	btfsc	plusw1,7,c
 18097  019FC4  D007               	goto	u5560
 18098  019FC6  0EFF               	movlw	-1
 18099  019FC8  50E3               	movf	plusw1,w,c
 18100  019FCA  E112               	bnz	l7478
 18101  019FCC  0EFE               	movlw	-2
 18102  019FCE  04E3               	decf	plusw1,w,c
 18103  019FD0  B0D8               	btfsc	status,0,c
 18104  019FD2  D00E               	goto	l7478
 18105  019FD4                     u5560:
 18106                           
 18107                           ;stkvar	_a @ sp[(0)+-2]
 18108  019FD4  0EFE               	movlw	-2
 18109  019FD6  006F FF8C  F001    	movff	plusw1,btemp
 18110  019FDC  1E01               	comf	btemp^0,f,c
 18111  019FDE  0EFF               	movlw	-1
 18112  019FE0  006F FF8C  F002    	movff	plusw1,btemp+1
 18113  019FE6  1E02               	comf	(btemp+1)^0,f,c
 18114  019FE8  2A01               	incf	btemp^0,f,c
 18115  019FEA  B4D8               	btfsc	status,2,c
 18116  019FEC  2A02               	incf	(btemp+1)^0,f,c
 18117  019FEE  D008               	goto	l3006
 18118  019FF0                     l7478:
 18119                           
 18120                           ;stkvar	_a @ sp[(0)+-2]
 18121  019FF0  0EFE               	movlw	-2
 18122  019FF2  006F FF8C  F001    	movff	plusw1,btemp
 18123  019FF8  0EFF               	movlw	-1
 18124  019FFA  006F FF8C  F002    	movff	plusw1,btemp+1
 18125  01A000                     l3006:
 18126                           
 18127                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 18128  01A000  52E5               	movf	postdec1,f,c
 18129  01A002  52E5               	movf	postdec1,f,c
 18130  01A004  0012               	return		;funcret
 18131  01A006                     __end_of_abs:
 18132                           	opt callstack 0
 18133                           
 18134 ;; *************** function ___aomod *****************
 18135 ;; Defined at:
 18136 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 18137 ;; Parameters:    Size  Location     Type
 18138 ;;  dividend        8  [STACK] long long 
 18139 ;;  divisor         8  [STACK] long long 
 18140 ;; Auto vars:     Size  Location     Type
 18141 ;;  sign            1  [STACK] unsigned char 
 18142 ;;  counter         1  [STACK] unsigned char 
 18143 ;; Return value:  Size  Location     Type
 18144 ;;                  8  [STACK] long long 
 18145 ;; Registers used:
 18146 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 18147 ;; Tracked objects:
 18148 ;;		On entry : 0/3
 18149 ;;		On exit  : 0/0
 18150 ;;		Unchanged: 0/0
 18151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18156 ;;Total ram usage:        0 bytes
 18157 ;; Hardware stack levels used:    1
 18158 ;; Hardware stack levels required when called:   15
 18159 ;; This function calls:
 18160 ;;		Nothing
 18161 ;; This function is called by:
 18162 ;;		_dtoa
 18163 ;; This function uses a reentrant model
 18164 ;;
 18165                           
 18166                           	psect	text64
 18167  0169C2                     __ptext64:
 18168                           	opt callstack 0
 18169  0169C2                     ___aomod:
 18170                           	opt callstack 0
 18171                           
 18172                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 18173  0169C2  52E6               	movf	postinc1,f,c
 18174  0169C4  52E6               	movf	postinc1,f,c
 18175                           
 18176                           ;stkvar	_sign @ sp[(-2)+0]
 18177                           
 18178                           ;incstack = 0
 18179 ;; hardware stack exceeded
 18180  0169C6  0EFE               	movlw	-2
 18181  0169C8  6AE3               	clrf	plusw1,c
 18182                           
 18183                           ;stkvar	_dividend @ sp[(-2)+-8]
 18184  0169CA  0EFD               	movlw	-3
 18185  0169CC  AEE3               	btfss	plusw1,7,c
 18186  0169CE  D028               	goto	l7636
 18187                           
 18188                           ;stkvar	_dividend @ sp[(-2)+-8]
 18189                           ;stkvar	_dividend @ sp[(-2)+-8]
 18190  0169D0  0EF6               	movlw	-10
 18191  0169D2  6CE3               	negf	plusw1,c
 18192  0169D4  0EF7               	movlw	-9
 18193  0169D6  1EE3               	comf	plusw1,f,c
 18194  0169D8  0EF8               	movlw	-8
 18195  0169DA  1EE3               	comf	plusw1,f,c
 18196  0169DC  0EF9               	movlw	-7
 18197  0169DE  1EE3               	comf	plusw1,f,c
 18198  0169E0  0EFA               	movlw	-6
 18199  0169E2  1EE3               	comf	plusw1,f,c
 18200  0169E4  0EFB               	movlw	-5
 18201  0169E6  1EE3               	comf	plusw1,f,c
 18202  0169E8  0EFC               	movlw	-4
 18203  0169EA  1EE3               	comf	plusw1,f,c
 18204  0169EC  0EFD               	movlw	-3
 18205  0169EE  1EE3               	comf	plusw1,f,c
 18206  0169F0  E314               	bnc	u5990
 18207  0169F2  0EF7               	movlw	-9
 18208  0169F4  2AE3               	incf	plusw1,f,c
 18209  0169F6  E311               	bnc	u5990
 18210  0169F8  0EF8               	movlw	-8
 18211  0169FA  2AE3               	incf	plusw1,f,c
 18212  0169FC  E30E               	bnc	u5990
 18213  0169FE  0EF9               	movlw	-7
 18214  016A00  2AE3               	incf	plusw1,f,c
 18215  016A02  E30B               	bnc	u5990
 18216  016A04  0EFA               	movlw	-6
 18217  016A06  2AE3               	incf	plusw1,f,c
 18218  016A08  E308               	bnc	u5990
 18219  016A0A  0EFB               	movlw	-5
 18220  016A0C  2AE3               	incf	plusw1,f,c
 18221  016A0E  E305               	bnc	u5990
 18222  016A10  0EFC               	movlw	-4
 18223  016A12  2AE3               	incf	plusw1,f,c
 18224  016A14  E302               	bnc	u5990
 18225  016A16  0EFD               	movlw	-3
 18226  016A18  2AE3               	incf	plusw1,f,c
 18227  016A1A                     u5990:
 18228                           
 18229                           ;stkvar	_sign @ sp[(-2)+0]
 18230  016A1A  0EFE               	movlw	-2
 18231  016A1C  6AE3               	clrf	plusw1,c
 18232  016A1E  2AE3               	incf	plusw1,f,c
 18233  016A20                     l7636:
 18234                           
 18235                           ;stkvar	_divisor @ sp[(-2)+-16]
 18236  016A20  0EF5               	movlw	-11
 18237  016A22  AEE3               	btfss	plusw1,7,c
 18238  016A24  D025               	goto	u6010
 18239                           
 18240                           ;stkvar	_divisor @ sp[(-2)+-16]
 18241                           ;stkvar	_divisor @ sp[(-2)+-16]
 18242  016A26  0EEE               	movlw	-18
 18243  016A28  6CE3               	negf	plusw1,c
 18244  016A2A  0EEF               	movlw	-17
 18245  016A2C  1EE3               	comf	plusw1,f,c
 18246  016A2E  0EF0               	movlw	-16
 18247  016A30  1EE3               	comf	plusw1,f,c
 18248  016A32  0EF1               	movlw	-15
 18249  016A34  1EE3               	comf	plusw1,f,c
 18250  016A36  0EF2               	movlw	-14
 18251  016A38  1EE3               	comf	plusw1,f,c
 18252  016A3A  0EF3               	movlw	-13
 18253  016A3C  1EE3               	comf	plusw1,f,c
 18254  016A3E  0EF4               	movlw	-12
 18255  016A40  1EE3               	comf	plusw1,f,c
 18256  016A42  0EF5               	movlw	-11
 18257  016A44  1EE3               	comf	plusw1,f,c
 18258  016A46  E314               	bnc	u6010
 18259  016A48  0EEF               	movlw	-17
 18260  016A4A  2AE3               	incf	plusw1,f,c
 18261  016A4C  E311               	bnc	u6010
 18262  016A4E  0EF0               	movlw	-16
 18263  016A50  2AE3               	incf	plusw1,f,c
 18264  016A52  E30E               	bnc	u6010
 18265  016A54  0EF1               	movlw	-15
 18266  016A56  2AE3               	incf	plusw1,f,c
 18267  016A58  E30B               	bnc	u6010
 18268  016A5A  0EF2               	movlw	-14
 18269  016A5C  2AE3               	incf	plusw1,f,c
 18270  016A5E  E308               	bnc	u6010
 18271  016A60  0EF3               	movlw	-13
 18272  016A62  2AE3               	incf	plusw1,f,c
 18273  016A64  E305               	bnc	u6010
 18274  016A66  0EF4               	movlw	-12
 18275  016A68  2AE3               	incf	plusw1,f,c
 18276  016A6A  E302               	bnc	u6010
 18277  016A6C  0EF5               	movlw	-11
 18278  016A6E  2AE3               	incf	plusw1,f,c
 18279  016A70                     u6010:
 18280                           
 18281                           ;stkvar	_divisor @ sp[(-2)+-16]
 18282  016A70  0EEE               	movlw	-18
 18283  016A72  50E3               	movf	plusw1,w,c
 18284  016A74  E116               	bnz	u6020
 18285  016A76  0EEF               	movlw	-17
 18286  016A78  50E3               	movf	plusw1,w,c
 18287  016A7A  E113               	bnz	u6020
 18288  016A7C  0EF0               	movlw	-16
 18289  016A7E  50E3               	movf	plusw1,w,c
 18290  016A80  E110               	bnz	u6020
 18291  016A82  0EF1               	movlw	-15
 18292  016A84  50E3               	movf	plusw1,w,c
 18293  016A86  E10D               	bnz	u6020
 18294  016A88  0EF2               	movlw	-14
 18295  016A8A  50E3               	movf	plusw1,w,c
 18296  016A8C  E10A               	bnz	u6020
 18297  016A8E  0EF3               	movlw	-13
 18298  016A90  50E3               	movf	plusw1,w,c
 18299  016A92  E107               	bnz	u6020
 18300  016A94  0EF4               	movlw	-12
 18301  016A96  50E3               	movf	plusw1,w,c
 18302  016A98  E104               	bnz	u6020
 18303  016A9A  0EF5               	movlw	-11
 18304  016A9C  50E3               	movf	plusw1,w,c
 18305  016A9E  B4D8               	btfsc	status,2,c
 18306  016AA0  D075               	goto	u6050
 18307  016AA2                     u6020:
 18308                           
 18309                           ;stkvar	_counter @ sp[(-2)+1]
 18310  016AA2  0EFF               	movlw	-1
 18311  016AA4  6AE3               	clrf	plusw1,c
 18312  016AA6  D012               	goto	L20
 18313  016AA8                     l7644:
 18314                           
 18315                           ;stkvar	_divisor @ sp[(-2)+-16]
 18316  016AA8  90D8               	bcf	status,0,c
 18317  016AAA  0EEE               	movlw	-18
 18318  016AAC  36E3               	rlcf	plusw1,f,c
 18319  016AAE  0EEF               	movlw	-17
 18320  016AB0  36E3               	rlcf	plusw1,f,c
 18321  016AB2  0EF0               	movlw	-16
 18322  016AB4  36E3               	rlcf	plusw1,f,c
 18323  016AB6  0EF1               	movlw	-15
 18324  016AB8  36E3               	rlcf	plusw1,f,c
 18325  016ABA  0EF2               	movlw	-14
 18326  016ABC  36E3               	rlcf	plusw1,f,c
 18327  016ABE  0EF3               	movlw	-13
 18328  016AC0  36E3               	rlcf	plusw1,f,c
 18329  016AC2  0EF4               	movlw	-12
 18330  016AC4  36E3               	rlcf	plusw1,f,c
 18331  016AC6  0EF5               	movlw	-11
 18332  016AC8  36E3               	rlcf	plusw1,f,c
 18333                           
 18334                           ;stkvar	_counter @ sp[(-2)+1]
 18335  016ACA  0EFF               	movlw	-1
 18336  016ACC                     L20:
 18337  016ACC  2AE3               	incf	plusw1,f,c
 18338                           
 18339                           ;stkvar	_divisor @ sp[(-2)+-16]
 18340  016ACE  0EF5               	movlw	-11
 18341  016AD0  AEE3               	btfss	plusw1,7,c
 18342  016AD2  D7EA               	goto	l7644
 18343  016AD4                     u6030:
 18344                           
 18345                           ;stkvar	_divisor @ sp[(-2)+-16]
 18346                           ;stkvar	_dividend @ sp[(-2)+-8]
 18347  016AD4  50E1               	movf	fsr1l,w,c
 18348  016AD6  0FF6               	addlw	-10
 18349  016AD8  6ED9               	movwf	fsr2l,c
 18350  016ADA  50E2               	movf	fsr1h,w,c
 18351  016ADC  6EDA               	movwf	fsr2h,c
 18352  016ADE  0EFF               	movlw	255
 18353  016AE0  22DA               	addwfc	fsr2h,f,c
 18354  016AE2  0EEE               	movlw	-18
 18355  016AE4  50E3               	movf	plusw1,w,c
 18356  016AE6  5CDE               	subwf	postinc2,w,c
 18357  016AE8  0EEF               	movlw	-17
 18358  016AEA  50E3               	movf	plusw1,w,c
 18359  016AEC  58DE               	subwfb	postinc2,w,c
 18360  016AEE  0EF0               	movlw	-16
 18361  016AF0  50E3               	movf	plusw1,w,c
 18362  016AF2  58DE               	subwfb	postinc2,w,c
 18363  016AF4  0EF1               	movlw	-15
 18364  016AF6  50E3               	movf	plusw1,w,c
 18365  016AF8  58DE               	subwfb	postinc2,w,c
 18366  016AFA  0EF2               	movlw	-14
 18367  016AFC  50E3               	movf	plusw1,w,c
 18368  016AFE  58DE               	subwfb	postinc2,w,c
 18369  016B00  0EF3               	movlw	-13
 18370  016B02  50E3               	movf	plusw1,w,c
 18371  016B04  58DE               	subwfb	postinc2,w,c
 18372  016B06  0EF4               	movlw	-12
 18373  016B08  50E3               	movf	plusw1,w,c
 18374  016B0A  58DE               	subwfb	postinc2,w,c
 18375  016B0C  0EF5               	movlw	-11
 18376  016B0E  50E3               	movf	plusw1,w,c
 18377  016B10  58DE               	subwfb	postinc2,w,c
 18378  016B12  A0D8               	btfss	status,0,c
 18379  016B14  D01F               	goto	l7652
 18380                           
 18381                           ;stkvar	_divisor @ sp[(-2)+-16]
 18382                           ;stkvar	_dividend @ sp[(-2)+-8]
 18383  016B16  50E1               	movf	fsr1l,w,c
 18384  016B18  0FF6               	addlw	-10
 18385  016B1A  6ED9               	movwf	fsr2l,c
 18386  016B1C  50E2               	movf	fsr1h,w,c
 18387  016B1E  6EDA               	movwf	fsr2h,c
 18388  016B20  0EFF               	movlw	255
 18389  016B22  22DA               	addwfc	fsr2h,f,c
 18390  016B24  0EEE               	movlw	-18
 18391  016B26  50E3               	movf	plusw1,w,c
 18392  016B28  5EDE               	subwf	postinc2,f,c
 18393  016B2A  0EEF               	movlw	-17
 18394  016B2C  50E3               	movf	plusw1,w,c
 18395  016B2E  5ADE               	subwfb	postinc2,f,c
 18396  016B30  0EF0               	movlw	-16
 18397  016B32  50E3               	movf	plusw1,w,c
 18398  016B34  5ADE               	subwfb	postinc2,f,c
 18399  016B36  0EF1               	movlw	-15
 18400  016B38  50E3               	movf	plusw1,w,c
 18401  016B3A  5ADE               	subwfb	postinc2,f,c
 18402  016B3C  0EF2               	movlw	-14
 18403  016B3E  50E3               	movf	plusw1,w,c
 18404  016B40  5ADE               	subwfb	postinc2,f,c
 18405  016B42  0EF3               	movlw	-13
 18406  016B44  50E3               	movf	plusw1,w,c
 18407  016B46  5ADE               	subwfb	postinc2,f,c
 18408  016B48  0EF4               	movlw	-12
 18409  016B4A  50E3               	movf	plusw1,w,c
 18410  016B4C  5ADE               	subwfb	postinc2,f,c
 18411  016B4E  0EF5               	movlw	-11
 18412  016B50  50E3               	movf	plusw1,w,c
 18413  016B52  5ADE               	subwfb	postinc2,f,c
 18414  016B54                     l7652:
 18415                           
 18416                           ;stkvar	_divisor @ sp[(-2)+-16]
 18417  016B54  90D8               	bcf	status,0,c
 18418  016B56  0EF5               	movlw	-11
 18419  016B58  32E3               	rrcf	plusw1,f,c
 18420  016B5A  0EF4               	movlw	-12
 18421  016B5C  32E3               	rrcf	plusw1,f,c
 18422  016B5E  0EF3               	movlw	-13
 18423  016B60  32E3               	rrcf	plusw1,f,c
 18424  016B62  0EF2               	movlw	-14
 18425  016B64  32E3               	rrcf	plusw1,f,c
 18426  016B66  0EF1               	movlw	-15
 18427  016B68  32E3               	rrcf	plusw1,f,c
 18428  016B6A  0EF0               	movlw	-16
 18429  016B6C  32E3               	rrcf	plusw1,f,c
 18430  016B6E  0EEF               	movlw	-17
 18431  016B70  32E3               	rrcf	plusw1,f,c
 18432  016B72  0EEE               	movlw	-18
 18433  016B74  32E3               	rrcf	plusw1,f,c
 18434                           
 18435                           ;stkvar	_counter @ sp[(-2)+1]
 18436  016B76  0EFF               	movlw	-1
 18437  016B78  50E3               	movf	plusw1,w,c
 18438  016B7A  6E01               	movwf	btemp^0,c
 18439  016B7C  0E01               	movlw	1
 18440  016B7E  5E01               	subwf	btemp^0,f,c
 18441  016B80  0EFF               	movlw	-1
 18442  016B82  0060  F007  FFE3   	movff	btemp,plusw1
 18443  016B88  A4D8               	btfss	status,2,c
 18444  016B8A  D7A4               	goto	u6030
 18445  016B8C                     u6050:
 18446                           
 18447                           ;stkvar	_sign @ sp[(-2)+0]
 18448  016B8C  0EFE               	movlw	-2
 18449  016B8E  50E3               	movf	plusw1,w,c
 18450  016B90  B4D8               	btfsc	status,2,c
 18451  016B92  D025               	goto	u6070
 18452                           
 18453                           ;stkvar	_dividend @ sp[(-2)+-8]
 18454                           ;stkvar	_dividend @ sp[(-2)+-8]
 18455  016B94  0EF6               	movlw	-10
 18456  016B96  6CE3               	negf	plusw1,c
 18457  016B98  0EF7               	movlw	-9
 18458  016B9A  1EE3               	comf	plusw1,f,c
 18459  016B9C  0EF8               	movlw	-8
 18460  016B9E  1EE3               	comf	plusw1,f,c
 18461  016BA0  0EF9               	movlw	-7
 18462  016BA2  1EE3               	comf	plusw1,f,c
 18463  016BA4  0EFA               	movlw	-6
 18464  016BA6  1EE3               	comf	plusw1,f,c
 18465  016BA8  0EFB               	movlw	-5
 18466  016BAA  1EE3               	comf	plusw1,f,c
 18467  016BAC  0EFC               	movlw	-4
 18468  016BAE  1EE3               	comf	plusw1,f,c
 18469  016BB0  0EFD               	movlw	-3
 18470  016BB2  1EE3               	comf	plusw1,f,c
 18471  016BB4  E314               	bnc	u6070
 18472  016BB6  0EF7               	movlw	-9
 18473  016BB8  2AE3               	incf	plusw1,f,c
 18474  016BBA  E311               	bnc	u6070
 18475  016BBC  0EF8               	movlw	-8
 18476  016BBE  2AE3               	incf	plusw1,f,c
 18477  016BC0  E30E               	bnc	u6070
 18478  016BC2  0EF9               	movlw	-7
 18479  016BC4  2AE3               	incf	plusw1,f,c
 18480  016BC6  E30B               	bnc	u6070
 18481  016BC8  0EFA               	movlw	-6
 18482  016BCA  2AE3               	incf	plusw1,f,c
 18483  016BCC  E308               	bnc	u6070
 18484  016BCE  0EFB               	movlw	-5
 18485  016BD0  2AE3               	incf	plusw1,f,c
 18486  016BD2  E305               	bnc	u6070
 18487  016BD4  0EFC               	movlw	-4
 18488  016BD6  2AE3               	incf	plusw1,f,c
 18489  016BD8  E302               	bnc	u6070
 18490  016BDA  0EFD               	movlw	-3
 18491  016BDC  2AE3               	incf	plusw1,f,c
 18492  016BDE                     u6070:
 18493                           
 18494                           ;stkvar	_dividend @ sp[(-2)+-8]
 18495  016BDE  0EF6               	movlw	246
 18496  016BE0  24E1               	addwf	fsr1l,w,c
 18497  016BE2  6ED9               	movwf	fsr2l,c
 18498  016BE4  0EFF               	movlw	255
 18499  016BE6  20E2               	addwfc	fsr1h,w,c
 18500  016BE8  6EDA               	movwf	fsr2h,c
 18501                           
 18502                           ;stkvar	?___aomod @ sp[(-2)+-8]
 18503  016BEA  0E08               	movlw	8
 18504  016BEC  6E01               	movwf	btemp^0,c
 18505  016BEE  0EF6               	movlw	-10
 18506  016BF0                     us608999:
 18507  016BF0  006F FF7B FFE3     	movff	postinc2,plusw1
 18508  016BF6  28E8               	incf	wreg,w,c
 18509  016BF8  2E01               	decfsz	btemp^0,f,c
 18510  016BFA  D7FA               	bra	us608999
 18511                           
 18512                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 18513  016BFC  52E5               	movf	postdec1,f,c
 18514  016BFE  52E5               	movf	postdec1,f,c
 18515  016C00  0012               	return		;funcret
 18516  016C02                     __end_of___aomod:
 18517                           	opt callstack 0
 18518                           
 18519 ;; *************** function ___aodiv *****************
 18520 ;; Defined at:
 18521 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 18522 ;; Parameters:    Size  Location     Type
 18523 ;;  dividend        8  [STACK] long long 
 18524 ;;  divisor         8  [STACK] long long 
 18525 ;; Auto vars:     Size  Location     Type
 18526 ;;  quotient        8  [STACK] long long 
 18527 ;;  sign            1  [STACK] unsigned char 
 18528 ;;  counter         1  [STACK] unsigned char 
 18529 ;; Return value:  Size  Location     Type
 18530 ;;                  8  [STACK] long long 
 18531 ;; Registers used:
 18532 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 18533 ;; Tracked objects:
 18534 ;;		On entry : 0/3
 18535 ;;		On exit  : 0/0
 18536 ;;		Unchanged: 0/0
 18537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18542 ;;Total ram usage:        0 bytes
 18543 ;; Hardware stack levels used:    1
 18544 ;; Hardware stack levels required when called:   15
 18545 ;; This function calls:
 18546 ;;		Nothing
 18547 ;; This function is called by:
 18548 ;;		_dtoa
 18549 ;; This function uses a reentrant model
 18550 ;;
 18551                           
 18552                           	psect	text65
 18553  0164CE                     __ptext65:
 18554                           	opt callstack 0
 18555  0164CE                     ___aodiv:
 18556                           	opt callstack 0
 18557                           
 18558                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 18559  0164CE  0E0A               	movlw	10
 18560  0164D0  26E1               	addwf	fsr1l,f,c
 18561  0164D2  0E00               	movlw	0
 18562  0164D4  22E2               	addwfc	fsr1h,f,c
 18563                           
 18564                           ;stkvar	_sign @ sp[(-10)+8]
 18565                           
 18566                           ;incstack = 0
 18567 ;; hardware stack exceeded
 18568  0164D6  0EFE               	movlw	-2
 18569  0164D8  6AE3               	clrf	plusw1,c
 18570                           
 18571                           ;stkvar	_divisor @ sp[(-10)+-16]
 18572  0164DA  0EED               	movlw	-19
 18573  0164DC  AEE3               	btfss	plusw1,7,c
 18574  0164DE  D028               	goto	l7592
 18575                           
 18576                           ;stkvar	_divisor @ sp[(-10)+-16]
 18577                           ;stkvar	_divisor @ sp[(-10)+-16]
 18578  0164E0  0EE6               	movlw	-26
 18579  0164E2  6CE3               	negf	plusw1,c
 18580  0164E4  0EE7               	movlw	-25
 18581  0164E6  1EE3               	comf	plusw1,f,c
 18582  0164E8  0EE8               	movlw	-24
 18583  0164EA  1EE3               	comf	plusw1,f,c
 18584  0164EC  0EE9               	movlw	-23
 18585  0164EE  1EE3               	comf	plusw1,f,c
 18586  0164F0  0EEA               	movlw	-22
 18587  0164F2  1EE3               	comf	plusw1,f,c
 18588  0164F4  0EEB               	movlw	-21
 18589  0164F6  1EE3               	comf	plusw1,f,c
 18590  0164F8  0EEC               	movlw	-20
 18591  0164FA  1EE3               	comf	plusw1,f,c
 18592  0164FC  0EED               	movlw	-19
 18593  0164FE  1EE3               	comf	plusw1,f,c
 18594  016500  E314               	bnc	u5870
 18595  016502  0EE7               	movlw	-25
 18596  016504  2AE3               	incf	plusw1,f,c
 18597  016506  E311               	bnc	u5870
 18598  016508  0EE8               	movlw	-24
 18599  01650A  2AE3               	incf	plusw1,f,c
 18600  01650C  E30E               	bnc	u5870
 18601  01650E  0EE9               	movlw	-23
 18602  016510  2AE3               	incf	plusw1,f,c
 18603  016512  E30B               	bnc	u5870
 18604  016514  0EEA               	movlw	-22
 18605  016516  2AE3               	incf	plusw1,f,c
 18606  016518  E308               	bnc	u5870
 18607  01651A  0EEB               	movlw	-21
 18608  01651C  2AE3               	incf	plusw1,f,c
 18609  01651E  E305               	bnc	u5870
 18610  016520  0EEC               	movlw	-20
 18611  016522  2AE3               	incf	plusw1,f,c
 18612  016524  E302               	bnc	u5870
 18613  016526  0EED               	movlw	-19
 18614  016528  2AE3               	incf	plusw1,f,c
 18615  01652A                     u5870:
 18616                           
 18617                           ;stkvar	_sign @ sp[(-10)+8]
 18618  01652A  0EFE               	movlw	-2
 18619  01652C  6AE3               	clrf	plusw1,c
 18620  01652E  2AE3               	incf	plusw1,f,c
 18621  016530                     l7592:
 18622                           
 18623                           ;stkvar	_dividend @ sp[(-10)+-8]
 18624  016530  0EF5               	movlw	-11
 18625  016532  AEE3               	btfss	plusw1,7,c
 18626  016534  D027               	goto	l7598
 18627                           
 18628                           ;stkvar	_dividend @ sp[(-10)+-8]
 18629                           ;stkvar	_dividend @ sp[(-10)+-8]
 18630  016536  0EEE               	movlw	-18
 18631  016538  6CE3               	negf	plusw1,c
 18632  01653A  0EEF               	movlw	-17
 18633  01653C  1EE3               	comf	plusw1,f,c
 18634  01653E  0EF0               	movlw	-16
 18635  016540  1EE3               	comf	plusw1,f,c
 18636  016542  0EF1               	movlw	-15
 18637  016544  1EE3               	comf	plusw1,f,c
 18638  016546  0EF2               	movlw	-14
 18639  016548  1EE3               	comf	plusw1,f,c
 18640  01654A  0EF3               	movlw	-13
 18641  01654C  1EE3               	comf	plusw1,f,c
 18642  01654E  0EF4               	movlw	-12
 18643  016550  1EE3               	comf	plusw1,f,c
 18644  016552  0EF5               	movlw	-11
 18645  016554  1EE3               	comf	plusw1,f,c
 18646  016556  E314               	bnc	u5890
 18647  016558  0EEF               	movlw	-17
 18648  01655A  2AE3               	incf	plusw1,f,c
 18649  01655C  E311               	bnc	u5890
 18650  01655E  0EF0               	movlw	-16
 18651  016560  2AE3               	incf	plusw1,f,c
 18652  016562  E30E               	bnc	u5890
 18653  016564  0EF1               	movlw	-15
 18654  016566  2AE3               	incf	plusw1,f,c
 18655  016568  E30B               	bnc	u5890
 18656  01656A  0EF2               	movlw	-14
 18657  01656C  2AE3               	incf	plusw1,f,c
 18658  01656E  E308               	bnc	u5890
 18659  016570  0EF3               	movlw	-13
 18660  016572  2AE3               	incf	plusw1,f,c
 18661  016574  E305               	bnc	u5890
 18662  016576  0EF4               	movlw	-12
 18663  016578  2AE3               	incf	plusw1,f,c
 18664  01657A  E302               	bnc	u5890
 18665  01657C  0EF5               	movlw	-11
 18666  01657E  2AE3               	incf	plusw1,f,c
 18667  016580                     u5890:
 18668                           
 18669                           ;stkvar	_sign @ sp[(-10)+8]
 18670  016580  0EFE               	movlw	-2
 18671  016582  70E3               	btg	plusw1,0,c
 18672  016584                     l7598:
 18673                           
 18674                           ;stkvar	_quotient @ sp[(-10)+0]
 18675  016584  0E07               	movlw	7
 18676  016586  6E01               	movwf	btemp^0,c
 18677  016588  0EF6               	movlw	-10
 18678  01658A                     u5901:
 18679  01658A  6AE3               	clrf	plusw1,c
 18680  01658C  2AE8               	incf	wreg,f,c
 18681  01658E  0601               	decf	btemp^0,f,c
 18682  016590  E2FC               	bc	u5901
 18683                           
 18684                           ;stkvar	_divisor @ sp[(-10)+-16]
 18685  016592  0EE6               	movlw	-26
 18686  016594  50E3               	movf	plusw1,w,c
 18687  016596  E116               	bnz	u5910
 18688  016598  0EE7               	movlw	-25
 18689  01659A  50E3               	movf	plusw1,w,c
 18690  01659C  E113               	bnz	u5910
 18691  01659E  0EE8               	movlw	-24
 18692  0165A0  50E3               	movf	plusw1,w,c
 18693  0165A2  E110               	bnz	u5910
 18694  0165A4  0EE9               	movlw	-23
 18695  0165A6  50E3               	movf	plusw1,w,c
 18696  0165A8  E10D               	bnz	u5910
 18697  0165AA  0EEA               	movlw	-22
 18698  0165AC  50E3               	movf	plusw1,w,c
 18699  0165AE  E10A               	bnz	u5910
 18700  0165B0  0EEB               	movlw	-21
 18701  0165B2  50E3               	movf	plusw1,w,c
 18702  0165B4  E107               	bnz	u5910
 18703  0165B6  0EEC               	movlw	-20
 18704  0165B8  50E3               	movf	plusw1,w,c
 18705  0165BA  E104               	bnz	u5910
 18706  0165BC  0EED               	movlw	-19
 18707  0165BE  50E3               	movf	plusw1,w,c
 18708  0165C0  B4D8               	btfsc	status,2,c
 18709  0165C2  D088               	goto	u5940
 18710  0165C4                     u5910:
 18711                           
 18712                           ;stkvar	_counter @ sp[(-10)+9]
 18713  0165C4  0EFF               	movlw	-1
 18714  0165C6  6AE3               	clrf	plusw1,c
 18715  0165C8  D012               	goto	L21
 18716  0165CA                     l7604:
 18717                           
 18718                           ;stkvar	_divisor @ sp[(-10)+-16]
 18719  0165CA  90D8               	bcf	status,0,c
 18720  0165CC  0EE6               	movlw	-26
 18721  0165CE  36E3               	rlcf	plusw1,f,c
 18722  0165D0  0EE7               	movlw	-25
 18723  0165D2  36E3               	rlcf	plusw1,f,c
 18724  0165D4  0EE8               	movlw	-24
 18725  0165D6  36E3               	rlcf	plusw1,f,c
 18726  0165D8  0EE9               	movlw	-23
 18727  0165DA  36E3               	rlcf	plusw1,f,c
 18728  0165DC  0EEA               	movlw	-22
 18729  0165DE  36E3               	rlcf	plusw1,f,c
 18730  0165E0  0EEB               	movlw	-21
 18731  0165E2  36E3               	rlcf	plusw1,f,c
 18732  0165E4  0EEC               	movlw	-20
 18733  0165E6  36E3               	rlcf	plusw1,f,c
 18734  0165E8  0EED               	movlw	-19
 18735  0165EA  36E3               	rlcf	plusw1,f,c
 18736                           
 18737                           ;stkvar	_counter @ sp[(-10)+9]
 18738  0165EC  0EFF               	movlw	-1
 18739  0165EE                     L21:
 18740  0165EE  2AE3               	incf	plusw1,f,c
 18741                           
 18742                           ;stkvar	_divisor @ sp[(-10)+-16]
 18743  0165F0  0EED               	movlw	-19
 18744  0165F2  AEE3               	btfss	plusw1,7,c
 18745  0165F4  D7EA               	goto	l7604
 18746  0165F6                     u5920:
 18747                           
 18748                           ;stkvar	_quotient @ sp[(-10)+0]
 18749  0165F6  90D8               	bcf	status,0,c
 18750  0165F8  0EF6               	movlw	-10
 18751  0165FA  36E3               	rlcf	plusw1,f,c
 18752  0165FC  0EF7               	movlw	-9
 18753  0165FE  36E3               	rlcf	plusw1,f,c
 18754  016600  0EF8               	movlw	-8
 18755  016602  36E3               	rlcf	plusw1,f,c
 18756  016604  0EF9               	movlw	-7
 18757  016606  36E3               	rlcf	plusw1,f,c
 18758  016608  0EFA               	movlw	-6
 18759  01660A  36E3               	rlcf	plusw1,f,c
 18760  01660C  0EFB               	movlw	-5
 18761  01660E  36E3               	rlcf	plusw1,f,c
 18762  016610  0EFC               	movlw	-4
 18763  016612  36E3               	rlcf	plusw1,f,c
 18764  016614  0EFD               	movlw	-3
 18765  016616  36E3               	rlcf	plusw1,f,c
 18766                           
 18767                           ;stkvar	_divisor @ sp[(-10)+-16]
 18768                           ;stkvar	_dividend @ sp[(-10)+-8]
 18769  016618  50E1               	movf	fsr1l,w,c
 18770  01661A  0FEE               	addlw	-18
 18771  01661C  6ED9               	movwf	fsr2l,c
 18772  01661E  50E2               	movf	fsr1h,w,c
 18773  016620  6EDA               	movwf	fsr2h,c
 18774  016622  0EFF               	movlw	255
 18775  016624  22DA               	addwfc	fsr2h,f,c
 18776  016626  0EE6               	movlw	-26
 18777  016628  50E3               	movf	plusw1,w,c
 18778  01662A  5CDE               	subwf	postinc2,w,c
 18779  01662C  0EE7               	movlw	-25
 18780  01662E  50E3               	movf	plusw1,w,c
 18781  016630  58DE               	subwfb	postinc2,w,c
 18782  016632  0EE8               	movlw	-24
 18783  016634  50E3               	movf	plusw1,w,c
 18784  016636  58DE               	subwfb	postinc2,w,c
 18785  016638  0EE9               	movlw	-23
 18786  01663A  50E3               	movf	plusw1,w,c
 18787  01663C  58DE               	subwfb	postinc2,w,c
 18788  01663E  0EEA               	movlw	-22
 18789  016640  50E3               	movf	plusw1,w,c
 18790  016642  58DE               	subwfb	postinc2,w,c
 18791  016644  0EEB               	movlw	-21
 18792  016646  50E3               	movf	plusw1,w,c
 18793  016648  58DE               	subwfb	postinc2,w,c
 18794  01664A  0EEC               	movlw	-20
 18795  01664C  50E3               	movf	plusw1,w,c
 18796  01664E  58DE               	subwfb	postinc2,w,c
 18797  016650  0EED               	movlw	-19
 18798  016652  50E3               	movf	plusw1,w,c
 18799  016654  58DE               	subwfb	postinc2,w,c
 18800  016656  A0D8               	btfss	status,0,c
 18801  016658  D021               	goto	l7616
 18802                           
 18803                           ;stkvar	_divisor @ sp[(-10)+-16]
 18804                           ;stkvar	_dividend @ sp[(-10)+-8]
 18805  01665A  50E1               	movf	fsr1l,w,c
 18806  01665C  0FEE               	addlw	-18
 18807  01665E  6ED9               	movwf	fsr2l,c
 18808  016660  50E2               	movf	fsr1h,w,c
 18809  016662  6EDA               	movwf	fsr2h,c
 18810  016664  0EFF               	movlw	255
 18811  016666  22DA               	addwfc	fsr2h,f,c
 18812  016668  0EE6               	movlw	-26
 18813  01666A  50E3               	movf	plusw1,w,c
 18814  01666C  5EDE               	subwf	postinc2,f,c
 18815  01666E  0EE7               	movlw	-25
 18816  016670  50E3               	movf	plusw1,w,c
 18817  016672  5ADE               	subwfb	postinc2,f,c
 18818  016674  0EE8               	movlw	-24
 18819  016676  50E3               	movf	plusw1,w,c
 18820  016678  5ADE               	subwfb	postinc2,f,c
 18821  01667A  0EE9               	movlw	-23
 18822  01667C  50E3               	movf	plusw1,w,c
 18823  01667E  5ADE               	subwfb	postinc2,f,c
 18824  016680  0EEA               	movlw	-22
 18825  016682  50E3               	movf	plusw1,w,c
 18826  016684  5ADE               	subwfb	postinc2,f,c
 18827  016686  0EEB               	movlw	-21
 18828  016688  50E3               	movf	plusw1,w,c
 18829  01668A  5ADE               	subwfb	postinc2,f,c
 18830  01668C  0EEC               	movlw	-20
 18831  01668E  50E3               	movf	plusw1,w,c
 18832  016690  5ADE               	subwfb	postinc2,f,c
 18833  016692  0EED               	movlw	-19
 18834  016694  50E3               	movf	plusw1,w,c
 18835  016696  5ADE               	subwfb	postinc2,f,c
 18836                           
 18837                           ;stkvar	_quotient @ sp[(-10)+0]
 18838  016698  0EF6               	movlw	-10
 18839  01669A  80E3               	bsf	plusw1,0,c
 18840  01669C                     l7616:
 18841                           
 18842                           ;stkvar	_divisor @ sp[(-10)+-16]
 18843  01669C  90D8               	bcf	status,0,c
 18844  01669E  0EED               	movlw	-19
 18845  0166A0  32E3               	rrcf	plusw1,f,c
 18846  0166A2  0EEC               	movlw	-20
 18847  0166A4  32E3               	rrcf	plusw1,f,c
 18848  0166A6  0EEB               	movlw	-21
 18849  0166A8  32E3               	rrcf	plusw1,f,c
 18850  0166AA  0EEA               	movlw	-22
 18851  0166AC  32E3               	rrcf	plusw1,f,c
 18852  0166AE  0EE9               	movlw	-23
 18853  0166B0  32E3               	rrcf	plusw1,f,c
 18854  0166B2  0EE8               	movlw	-24
 18855  0166B4  32E3               	rrcf	plusw1,f,c
 18856  0166B6  0EE7               	movlw	-25
 18857  0166B8  32E3               	rrcf	plusw1,f,c
 18858  0166BA  0EE6               	movlw	-26
 18859  0166BC  32E3               	rrcf	plusw1,f,c
 18860                           
 18861                           ;stkvar	_counter @ sp[(-10)+9]
 18862  0166BE  0EFF               	movlw	-1
 18863  0166C0  50E3               	movf	plusw1,w,c
 18864  0166C2  6E01               	movwf	btemp^0,c
 18865  0166C4  0E01               	movlw	1
 18866  0166C6  5E01               	subwf	btemp^0,f,c
 18867  0166C8  0EFF               	movlw	-1
 18868  0166CA  0060  F007  FFE3   	movff	btemp,plusw1
 18869  0166D0  A4D8               	btfss	status,2,c
 18870  0166D2  D791               	goto	u5920
 18871  0166D4                     u5940:
 18872                           
 18873                           ;stkvar	_sign @ sp[(-10)+8]
 18874  0166D4  0EFE               	movlw	-2
 18875  0166D6  50E3               	movf	plusw1,w,c
 18876  0166D8  B4D8               	btfsc	status,2,c
 18877  0166DA  D025               	goto	u5960
 18878                           
 18879                           ;stkvar	_quotient @ sp[(-10)+0]
 18880                           ;stkvar	_quotient @ sp[(-10)+0]
 18881  0166DC  0EF6               	movlw	-10
 18882  0166DE  6CE3               	negf	plusw1,c
 18883  0166E0  0EF7               	movlw	-9
 18884  0166E2  1EE3               	comf	plusw1,f,c
 18885  0166E4  0EF8               	movlw	-8
 18886  0166E6  1EE3               	comf	plusw1,f,c
 18887  0166E8  0EF9               	movlw	-7
 18888  0166EA  1EE3               	comf	plusw1,f,c
 18889  0166EC  0EFA               	movlw	-6
 18890  0166EE  1EE3               	comf	plusw1,f,c
 18891  0166F0  0EFB               	movlw	-5
 18892  0166F2  1EE3               	comf	plusw1,f,c
 18893  0166F4  0EFC               	movlw	-4
 18894  0166F6  1EE3               	comf	plusw1,f,c
 18895  0166F8  0EFD               	movlw	-3
 18896  0166FA  1EE3               	comf	plusw1,f,c
 18897  0166FC  E314               	bnc	u5960
 18898  0166FE  0EF7               	movlw	-9
 18899  016700  2AE3               	incf	plusw1,f,c
 18900  016702  E311               	bnc	u5960
 18901  016704  0EF8               	movlw	-8
 18902  016706  2AE3               	incf	plusw1,f,c
 18903  016708  E30E               	bnc	u5960
 18904  01670A  0EF9               	movlw	-7
 18905  01670C  2AE3               	incf	plusw1,f,c
 18906  01670E  E30B               	bnc	u5960
 18907  016710  0EFA               	movlw	-6
 18908  016712  2AE3               	incf	plusw1,f,c
 18909  016714  E308               	bnc	u5960
 18910  016716  0EFB               	movlw	-5
 18911  016718  2AE3               	incf	plusw1,f,c
 18912  01671A  E305               	bnc	u5960
 18913  01671C  0EFC               	movlw	-4
 18914  01671E  2AE3               	incf	plusw1,f,c
 18915  016720  E302               	bnc	u5960
 18916  016722  0EFD               	movlw	-3
 18917  016724  2AE3               	incf	plusw1,f,c
 18918  016726                     u5960:
 18919                           
 18920                           ;stkvar	_quotient @ sp[(-10)+0]
 18921  016726  0EF6               	movlw	246
 18922  016728  24E1               	addwf	fsr1l,w,c
 18923  01672A  6ED9               	movwf	fsr2l,c
 18924  01672C  0EFF               	movlw	255
 18925  01672E  20E2               	addwfc	fsr1h,w,c
 18926  016730  6EDA               	movwf	fsr2h,c
 18927                           
 18928                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 18929  016732  0E08               	movlw	8
 18930  016734  6E01               	movwf	btemp^0,c
 18931  016736  0EEE               	movlw	-18
 18932  016738                     us597999:
 18933  016738  006F FF7B FFE3     	movff	postinc2,plusw1
 18934  01673E  28E8               	incf	wreg,w,c
 18935  016740  2E01               	decfsz	btemp^0,f,c
 18936  016742  D7FA               	bra	us597999
 18937                           
 18938                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 18939  016744  0EF6               	movlw	246
 18940  016746  26E1               	addwf	fsr1l,f,c
 18941  016748  0EFF               	movlw	255
 18942  01674A  22E2               	addwfc	fsr1h,f,c
 18943  01674C  0012               	return		;funcret
 18944  01674E                     __end_of___aodiv:
 18945                           	opt callstack 0
 18946                           
 18947 ;; *************** function _ctoa *****************
 18948 ;; Defined at:
 18949 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 18950 ;; Parameters:    Size  Location     Type
 18951 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18952 ;;		 -> f(6), NULL(0), 
 18953 ;;  c               1  [STACK] unsigned char 
 18954 ;; Auto vars:     Size  Location     Type
 18955 ;;  w               2  [STACK] int 
 18956 ;;  l               2    0        int 
 18957 ;; Return value:  Size  Location     Type
 18958 ;;                  2  [STACK] int 
 18959 ;; Registers used:
 18960 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 18961 ;; Tracked objects:
 18962 ;;		On entry : 0/0
 18963 ;;		On exit  : 0/0
 18964 ;;		Unchanged: 0/0
 18965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18969 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18970 ;;Total ram usage:        0 bytes
 18971 ;; Hardware stack levels used:    1
 18972 ;; Hardware stack levels required when called:   20
 18973 ;; This function calls:
 18974 ;;		_pad
 18975 ;; This function is called by:
 18976 ;;		_vfpfcnvrt
 18977 ;; This function uses a reentrant model
 18978 ;;
 18979                           
 18980                           	psect	text66
 18981  0197A0                     __ptext66:
 18982                           	opt callstack 0
 18983  0197A0                     _ctoa:
 18984                           	opt callstack 0
 18985                           
 18986                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18987  0197A0  52E6               	movf	postinc1,f,c
 18988  0197A2  52E6               	movf	postinc1,f,c
 18989                           
 18990                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 18991                           
 18992                           ;incstack = 0
 18993 ;; hardware stack exceeded
 18994  0197A4  5021               	movf	_width^0,w,c
 18995  0197A6  1022               	iorwf	(_width+1)^0,w,c
 18996  0197A8  A4D8               	btfss	status,2,c
 18997  0197AA  D009               	goto	l11040
 18998                           
 18999                           ;stkvar	_w @ sp[(-2)+0]
 19000  0197AC  0EFE               	movlw	-2
 19001  0197AE  0060  F087  FFE3   	movff	_width,plusw1
 19002  0197B4  0EFF               	movlw	-1
 19003  0197B6  0060  F08B  FFE3   	movff	_width+1,plusw1
 19004  0197BC  D016               	goto	l11042
 19005  0197BE                     l11040:
 19006  0197BE  0EFF               	movlw	255
 19007  0197C0  6E0B               	movwf	(btemp+10)^0,c
 19008  0197C2  0EFF               	movlw	255
 19009  0197C4  6E0C               	movwf	(btemp+11)^0,c
 19010  0197C6  0060  F084  F009   	movff	_width,btemp+8
 19011  0197CC  0060  F088  F00A   	movff	_width+1,btemp+9
 19012  0197D2  500B               	movf	(btemp+10)^0,w,c
 19013  0197D4  2609               	addwf	(btemp+8)^0,f,c
 19014  0197D6  500C               	movf	(btemp+11)^0,w,c
 19015  0197D8  220A               	addwfc	(btemp+9)^0,f,c
 19016                           
 19017                           ;stkvar	_w @ sp[(-2)+0]
 19018  0197DA  0EFE               	movlw	-2
 19019  0197DC  0060  F027  FFE3   	movff	btemp+8,plusw1
 19020  0197E2  0EFF               	movlw	-1
 19021  0197E4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 19022  0197EA                     l11042:
 19023                           
 19024                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 19025                           ;stkvar	_c @ sp[(-2)+-3]
 19026  0197EA  0EFB               	movlw	-5
 19027  0197EC  006F FF8C  F394    	movff	plusw1,_dbuf
 19028                           
 19029                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 19030  0197F2  0103               	movlb	3	; () banked
 19031  0197F4  6B95               	clrf	(_dbuf+1)& (0+255),b
 19032                           
 19033                           ; BSR set to: 3
 19034                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 19035                           ;stkvar	_w @ sp[(-2)+0]
 19036  0197F6  0EFE               	movlw	-2
 19037  0197F8  006F FF8F FFE6     	movff	plusw1,postinc1
 19038  0197FE  006F FF8F FFE6     	movff	plusw1,postinc1
 19039  019804  0E94               	movlw	low _dbuf
 19040  019806  6EE6               	movwf	postinc1,c
 19041  019808  0E03               	movlw	high _dbuf
 19042  01980A  6EE6               	movwf	postinc1,c
 19043                           
 19044                           ;stkvar	_fp @ sp[(-6)+-2]
 19045  01980C  0EF8               	movlw	-8
 19046  01980E  006F FF8F FFE6     	movff	plusw1,postinc1
 19047  019814  006F FF8F FFE6     	movff	plusw1,postinc1
 19048  01981A  ECAD  F0C3         	call	_pad	;wreg free
 19049                           
 19050                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 19051  01981E  0EFB               	movlw	251
 19052  019820  26E1               	addwf	fsr1l,f,c
 19053  019822  0EFF               	movlw	255
 19054  019824  22E2               	addwfc	fsr1h,f,c
 19055  019826  0012               	return		;funcret
 19056  019828                     __end_of_ctoa:
 19057                           	opt callstack 0
 19058                           
 19059 ;; *************** function _pad *****************
 19060 ;; Defined at:
 19061 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 19062 ;; Parameters:    Size  Location     Type
 19063 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19064 ;;		 -> f(6), NULL(0), 
 19065 ;;  buf             2  [STACK] PTR unsigned char 
 19066 ;;		 -> dbuf(80), 
 19067 ;;  p               2  [STACK] int 
 19068 ;; Auto vars:     Size  Location     Type
 19069 ;;  w               2  [STACK] int 
 19070 ;;  i               2  [STACK] int 
 19071 ;; Return value:  Size  Location     Type
 19072 ;;                  2  [STACK] int 
 19073 ;; Registers used:
 19074 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 19075 ;; Tracked objects:
 19076 ;;		On entry : 0/3
 19077 ;;		On exit  : 0/0
 19078 ;;		Unchanged: 0/0
 19079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19083 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19084 ;;Total ram usage:        0 bytes
 19085 ;; Hardware stack levels used:    1
 19086 ;; Hardware stack levels required when called:   19
 19087 ;; This function calls:
 19088 ;;		_fputc
 19089 ;;		_fputs
 19090 ;;		_strlen
 19091 ;; This function is called by:
 19092 ;;		_ctoa
 19093 ;;		_dtoa
 19094 ;;		_efgtoa
 19095 ;;		_utoa
 19096 ;;		_xtoa
 19097 ;; This function uses a reentrant model
 19098 ;;
 19099                           
 19100                           	psect	text67
 19101  01875A                     __ptext67:
 19102                           	opt callstack 0
 19103  01875A                     _pad:
 19104                           	opt callstack 0
 19105                           
 19106                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19107  01875A  52E6               	movf	postinc1,f,c
 19108  01875C  52E6               	movf	postinc1,f,c
 19109  01875E  52E6               	movf	postinc1,f,c
 19110  018760  52E6               	movf	postinc1,f,c
 19111                           
 19112                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 19113                           
 19114                           ;incstack = 0
 19115 ;; hardware stack exceeded
 19116  018762  A025               	btfss	_flags^0,0,c
 19117  018764  D010               	goto	l10972
 19118                           
 19119                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 19120                           ;stkvar	_fp @ sp[(-4)+-2]
 19121  018766  0EFA               	movlw	-6
 19122  018768  006F FF8F FFE6     	movff	plusw1,postinc1
 19123  01876E  006F FF8F FFE6     	movff	plusw1,postinc1
 19124                           
 19125                           ;stkvar	_buf @ sp[(-6)+-4]
 19126  018774  0EF6               	movlw	-10
 19127  018776  006F FF8F FFE6     	movff	plusw1,postinc1
 19128  01877C  006F FF8F FFE6     	movff	plusw1,postinc1
 19129  018782  EC61  F0CA         	call	_fputs	;wreg free
 19130  018786                     l10972:
 19131                           
 19132                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 19133                           ;stkvar	_p @ sp[(-4)+-6]
 19134  018786  0EF7               	movlw	-9
 19135  018788  BEE3               	btfsc	plusw1,7,c
 19136  01878A  D011               	goto	l10976
 19137                           
 19138                           ;stkvar	_p @ sp[(-4)+-6]
 19139                           ;stkvar	_w @ sp[(-4)+0]
 19140  01878C  0EF6               	movlw	-10
 19141  01878E  006F FF8C  F001    	movff	plusw1,btemp
 19142  018794  0EFC               	movlw	-4
 19143  018796  0060  F007  FFE3   	movff	btemp,plusw1
 19144  01879C  0EF7               	movlw	-9
 19145  01879E  006F FF8C  F001    	movff	plusw1,btemp
 19146  0187A4  0EFD               	movlw	-3
 19147  0187A6  0060  F007  FFE3   	movff	btemp,plusw1
 19148  0187AC  D004               	goto	l2060
 19149  0187AE                     l10976:
 19150                           
 19151                           ;stkvar	_w @ sp[(-4)+0]
 19152  0187AE  0EFC               	movlw	-4
 19153  0187B0  6AE3               	clrf	plusw1,c
 19154  0187B2  0EFD               	movlw	-3
 19155  0187B4  6AE3               	clrf	plusw1,c
 19156  0187B6                     l2060:
 19157                           
 19158                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 19159                           ;stkvar	_i @ sp[(-4)+2]
 19160  0187B6  0EFE               	movlw	-2
 19161  0187B8  6AE3               	clrf	plusw1,c
 19162  0187BA  0EFF               	movlw	-1
 19163  0187BC  6AE3               	clrf	plusw1,c
 19164                           
 19165                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 19166  0187BE  D01E               	goto	l10982
 19167  0187C0                     l10978:
 19168                           
 19169                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 19170                           ;stkvar	_fp @ sp[(-4)+-2]
 19171  0187C0  0EFA               	movlw	-6
 19172  0187C2  006F FF8F FFE6     	movff	plusw1,postinc1
 19173  0187C8  006F FF8F FFE6     	movff	plusw1,postinc1
 19174  0187CE  0E20               	movlw	32
 19175  0187D0  6EE6               	movwf	postinc1,c
 19176  0187D2  0E00               	movlw	0
 19177  0187D4  6EE6               	movwf	postinc1,c
 19178  0187D6  EC8F  F0C2         	call	_fputc	;wreg free
 19179                           
 19180                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 19181                           ;stkvar	_i @ sp[(-4)+2]
 19182  0187DA  0EFE               	movlw	-2
 19183  0187DC  50E3               	movf	plusw1,w,c
 19184  0187DE  0F01               	addlw	1
 19185  0187E0  6E01               	movwf	btemp^0,c
 19186  0187E2  0EFE               	movlw	-2
 19187  0187E4  0060  F007  FFE3   	movff	btemp,plusw1
 19188  0187EA  6A01               	clrf	btemp^0,c
 19189  0187EC  0EFF               	movlw	-1
 19190  0187EE  50E3               	movf	plusw1,w,c
 19191  0187F0  2001               	addwfc	btemp^0,w,c
 19192  0187F2  6E01               	movwf	btemp^0,c
 19193  0187F4  0EFF               	movlw	-1
 19194  0187F6  0060  F007  FFE3   	movff	btemp,plusw1
 19195  0187FC                     l10982:
 19196                           
 19197                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 19198                           ;stkvar	_w @ sp[(-4)+0]
 19199                           ;stkvar	_i @ sp[(-4)+2]
 19200  0187FC  50E1               	movf	fsr1l,w,c
 19201  0187FE  0FFE               	addlw	-2
 19202  018800  6ED9               	movwf	fsr2l,c
 19203  018802  50E2               	movf	fsr1h,w,c
 19204  018804  6EDA               	movwf	fsr2h,c
 19205  018806  0EFF               	movlw	255
 19206  018808  22DA               	addwfc	fsr2h,f,c
 19207  01880A  0EFC               	movlw	-4
 19208  01880C  50E3               	movf	plusw1,w,c
 19209  01880E  5CDE               	subwf	postinc2,w,c
 19210  018810  50DE               	movf	postinc2,w,c
 19211  018812  0A80               	xorlw	128
 19212  018814  6E01               	movwf	btemp^0,c
 19213  018816  0EFD               	movlw	-3
 19214  018818  50E3               	movf	plusw1,w,c
 19215  01881A  0A80               	xorlw	128
 19216  01881C  5801               	subwfb	btemp^0,w,c
 19217  01881E  A0D8               	btfss	status,0,c
 19218  018820  D7CF               	goto	l10978
 19219                           
 19220                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 19221  018822  B025               	btfsc	_flags^0,0,c
 19222  018824  D010               	goto	l10986
 19223                           
 19224                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 19225                           ;stkvar	_fp @ sp[(-4)+-2]
 19226  018826  0EFA               	movlw	-6
 19227  018828  006F FF8F FFE6     	movff	plusw1,postinc1
 19228  01882E  006F FF8F FFE6     	movff	plusw1,postinc1
 19229                           
 19230                           ;stkvar	_buf @ sp[(-6)+-4]
 19231  018834  0EF6               	movlw	-10
 19232  018836  006F FF8F FFE6     	movff	plusw1,postinc1
 19233  01883C  006F FF8F FFE6     	movff	plusw1,postinc1
 19234  018842  EC61  F0CA         	call	_fputs	;wreg free
 19235  018846                     l10986:
 19236                           
 19237                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 19238                           ;stkvar	_w @ sp[(-4)+0]
 19239                           ;stkvar	_buf @ sp[(-4)+-4]
 19240  018846  0EF8               	movlw	-8
 19241  018848  006F FF8F FFE6     	movff	plusw1,postinc1
 19242  01884E  006F FF8F FFE6     	movff	plusw1,postinc1
 19243  018854  EC10  F0CA         	call	_strlen	;wreg free
 19244  018858  0EFC               	movlw	-4
 19245  01885A  50E3               	movf	plusw1,w,c
 19246  01885C  2601               	addwf	btemp^0,f,c
 19247  01885E  0EFD               	movlw	-3
 19248  018860  50E3               	movf	plusw1,w,c
 19249  018862  2202               	addwfc	(btemp+1)^0,f,c
 19250                           
 19251                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 19252  018864  0EF6               	movlw	246
 19253  018866  26E1               	addwf	fsr1l,f,c
 19254  018868  0EFF               	movlw	255
 19255  01886A  22E2               	addwfc	fsr1h,f,c
 19256  01886C  0012               	return		;funcret
 19257  01886E                     __end_of_pad:
 19258                           	opt callstack 0
 19259                           
 19260 ;; *************** function _strlen *****************
 19261 ;; Defined at:
 19262 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 19263 ;; Parameters:    Size  Location     Type
 19264 ;;  s               2  [STACK] PTR const unsigned char 
 19265 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 19266 ;;		 -> STR_30(9), STR_29(12), D.lcd(288), D(290), 
 19267 ;;		 -> T(144), port_data(512), STR_3(6), V(188), 
 19268 ;; Auto vars:     Size  Location     Type
 19269 ;;  a               2  [STACK] PTR const unsigned char 
 19270 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 19271 ;;		 -> STR_30(9), STR_29(12), D.lcd(288), D(290), 
 19272 ;;		 -> T(144), port_data(512), STR_3(6), V(188), 
 19273 ;; Return value:  Size  Location     Type
 19274 ;;                  2  [STACK] unsigned int 
 19275 ;; Registers used:
 19276 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 19277 ;; Tracked objects:
 19278 ;;		On entry : 0/0
 19279 ;;		On exit  : 0/0
 19280 ;;		Unchanged: 0/0
 19281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19285 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19286 ;;Total ram usage:        0 bytes
 19287 ;; Hardware stack levels used:    1
 19288 ;; Hardware stack levels required when called:   15
 19289 ;; This function calls:
 19290 ;;		Nothing
 19291 ;; This function is called by:
 19292 ;;		_eaDogM_WriteString
 19293 ;;		_calc_bsoc
 19294 ;;		_pad
 19295 ;;		_stoa
 19296 ;; This function uses a reentrant model
 19297 ;;
 19298                           
 19299                           	psect	text68
 19300  019420                     __ptext68:
 19301                           	opt callstack 0
 19302  019420                     _strlen:
 19303                           	opt callstack 0
 19304                           
 19305                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19306  019420  52E6               	movf	postinc1,f,c
 19307  019422  52E6               	movf	postinc1,f,c
 19308                           
 19309                           ;stkvar	_s @ sp[(-2)+-2]
 19310                           
 19311                           ;incstack = 0
 19312 ;; hardware stack exceeded
 19313  019424  0EFC               	movlw	-4
 19314  019426  006F FF8C  F00B    	movff	plusw1,btemp+10
 19315  01942C  0EFD               	movlw	-3
 19316  01942E  006F FF8C  F00C    	movff	plusw1,btemp+11
 19317                           
 19318                           ;stkvar	_a @ sp[(-2)+0]
 19319  019434  0EFF               	movlw	-1
 19320  019436  0060  F033  FFE3   	movff	btemp+11,plusw1
 19321  01943C  0EFE               	movlw	-2
 19322  01943E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19323  019444  D011               	goto	l7210
 19324  019446                     l7208:
 19325                           
 19326                           ;stkvar	_s @ sp[(-2)+-2]
 19327  019446  0EFC               	movlw	-4
 19328  019448  50E3               	movf	plusw1,w,c
 19329  01944A  0F01               	addlw	1
 19330  01944C  6E01               	movwf	btemp^0,c
 19331  01944E  0EFC               	movlw	-4
 19332  019450  0060  F007  FFE3   	movff	btemp,plusw1
 19333  019456  6A01               	clrf	btemp^0,c
 19334  019458  0EFD               	movlw	-3
 19335  01945A  50E3               	movf	plusw1,w,c
 19336  01945C  2001               	addwfc	btemp^0,w,c
 19337  01945E  6E01               	movwf	btemp^0,c
 19338  019460  0EFD               	movlw	-3
 19339  019462  0060  F007  FFE3   	movff	btemp,plusw1
 19340  019468                     l7210:
 19341                           
 19342                           ;stkvar	_s @ sp[(-2)+-2]
 19343  019468  0EFC               	movlw	-4
 19344  01946A  006F FF8F FFF6     	movff	plusw1,tblptrl
 19345  019470  0EFD               	movlw	-3
 19346  019472  006F FF8F FFF7     	movff	plusw1,tblptrh
 19347  019478  0E00               	movlw	low (__mediumconst shr (0+16))
 19348  01947A  6EF8               	movwf	tblptru,c
 19349  01947C  0E1F               	movlw	(high __ramtop+-1)
 19350  01947E  64F7               	cpfsgt	tblptrh,c
 19351  019480  D003               	bra	u5037
 19352  019482  0008               	tblrd		*
 19353  019484  50F5               	movf	tablat,w,c
 19354  019486  D007               	bra	u5030
 19355  019488                     u5037:
 19356  019488  006F FFDB FFE9     	movff	tblptrl,fsr0l
 19357  01948E  006F FFDF FFEA     	movff	tblptrh,fsr0h
 19358  019494  50EF               	movf	indf0,w,c
 19359  019496                     u5030:
 19360  019496  0900               	iorlw	0
 19361  019498  A4D8               	btfss	status,2,c
 19362  01949A  D7D5               	goto	l7208
 19363                           
 19364                           ;stkvar	_a @ sp[(-2)+0]
 19365                           ;stkvar	_s @ sp[(-2)+-2]
 19366  01949C  0EFC               	movlw	-4
 19367  01949E  006F FF8C  F001    	movff	plusw1,btemp
 19368  0194A4  0EFD               	movlw	-3
 19369  0194A6  006F FF8C  F002    	movff	plusw1,btemp+1
 19370  0194AC  0EFE               	movlw	-2
 19371  0194AE  50E3               	movf	plusw1,w,c
 19372  0194B0  5E01               	subwf	btemp^0,f,c
 19373  0194B2  0EFF               	movlw	-1
 19374  0194B4  50E3               	movf	plusw1,w,c
 19375  0194B6  5A02               	subwfb	(btemp+1)^0,f,c
 19376                           
 19377                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 19378  0194B8  52E5               	movf	postdec1,f,c
 19379  0194BA  52E5               	movf	postdec1,f,c
 19380  0194BC  52E5               	movf	postdec1,f,c
 19381  0194BE  52E5               	movf	postdec1,f,c
 19382  0194C0  0012               	return		;funcret
 19383  0194C2                     __end_of_strlen:
 19384                           	opt callstack 0
 19385                           
 19386 ;; *************** function _fputs *****************
 19387 ;; Defined at:
 19388 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 19389 ;; Parameters:    Size  Location     Type
 19390 ;;  s               2  [STACK] PTR const unsigned char 
 19391 ;;		 -> dbuf(80), 
 19392 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19393 ;;		 -> f(6), NULL(0), 
 19394 ;; Auto vars:     Size  Location     Type
 19395 ;;  i               2  [STACK] int 
 19396 ;;  c               1  [STACK] unsigned char 
 19397 ;; Return value:  Size  Location     Type
 19398 ;;                  2  [STACK] int 
 19399 ;; Registers used:
 19400 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 19401 ;; Tracked objects:
 19402 ;;		On entry : 0/3
 19403 ;;		On exit  : 0/0
 19404 ;;		Unchanged: 0/0
 19405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19409 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19410 ;;Total ram usage:        0 bytes
 19411 ;; Hardware stack levels used:    1
 19412 ;; Hardware stack levels required when called:   18
 19413 ;; This function calls:
 19414 ;;		_fputc
 19415 ;; This function is called by:
 19416 ;;		_pad
 19417 ;; This function uses a reentrant model
 19418 ;;
 19419                           
 19420                           	psect	text69
 19421  0194C2                     __ptext69:
 19422                           	opt callstack 0
 19423  0194C2                     _fputs:
 19424                           	opt callstack 0
 19425                           
 19426                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19427  0194C2  52E6               	movf	postinc1,f,c
 19428  0194C4  52E6               	movf	postinc1,f,c
 19429  0194C6  52E6               	movf	postinc1,f,c
 19430                           
 19431                           ;stkvar	_i @ sp[(-3)+0]
 19432                           
 19433                           ;incstack = 0
 19434 ;; hardware stack exceeded
 19435  0194C8  0EFD               	movlw	-3
 19436  0194CA  6AE3               	clrf	plusw1,c
 19437  0194CC  0EFE               	movlw	-2
 19438  0194CE  6AE3               	clrf	plusw1,c
 19439  0194D0  D01F               	goto	l10966
 19440  0194D2                     l10962:
 19441                           
 19442                           ;stkvar	_fp @ sp[(-3)+-4]
 19443  0194D2  0EF9               	movlw	-7
 19444  0194D4  006F FF8F FFE6     	movff	plusw1,postinc1
 19445  0194DA  006F FF8F FFE6     	movff	plusw1,postinc1
 19446                           
 19447                           ;stkvar	_c @ sp[(-5)+2]
 19448  0194E0  0EFD               	movlw	-3
 19449  0194E2  50E3               	movf	plusw1,w,c
 19450  0194E4  6EE6               	movwf	postinc1,c
 19451  0194E6  0E00               	movlw	0
 19452  0194E8  6EE6               	movwf	postinc1,c
 19453  0194EA  EC8F  F0C2         	call	_fputc	;wreg free
 19454                           
 19455                           ;stkvar	_i @ sp[(-3)+0]
 19456  0194EE  0EFD               	movlw	-3
 19457  0194F0  50E3               	movf	plusw1,w,c
 19458  0194F2  0F01               	addlw	1
 19459  0194F4  6E01               	movwf	btemp^0,c
 19460  0194F6  0EFD               	movlw	-3
 19461  0194F8  0060  F007  FFE3   	movff	btemp,plusw1
 19462  0194FE  6A01               	clrf	btemp^0,c
 19463  019500  0EFE               	movlw	-2
 19464  019502  50E3               	movf	plusw1,w,c
 19465  019504  2001               	addwfc	btemp^0,w,c
 19466  019506  6E01               	movwf	btemp^0,c
 19467  019508  0EFE               	movlw	-2
 19468  01950A  0060  F007  FFE3   	movff	btemp,plusw1
 19469  019510                     l10966:
 19470                           
 19471                           ;stkvar	_i @ sp[(-3)+0]
 19472  019510  0EFD               	movlw	-3
 19473  019512  006F FF8C  F00B    	movff	plusw1,btemp+10
 19474  019518  0EFE               	movlw	-2
 19475  01951A  006F FF8C  F00C    	movff	plusw1,btemp+11
 19476                           
 19477                           ;stkvar	_s @ sp[(-3)+-2]
 19478  019520  0EFB               	movlw	-5
 19479  019522  006F FF8C  F009    	movff	plusw1,btemp+8
 19480  019528  0EFC               	movlw	-4
 19481  01952A  006F FF8C  F00A    	movff	plusw1,btemp+9
 19482  019530  500B               	movf	(btemp+10)^0,w,c
 19483  019532  2409               	addwf	(btemp+8)^0,w,c
 19484  019534  6ED9               	movwf	fsr2l,c
 19485  019536  500C               	movf	(btemp+11)^0,w,c
 19486  019538  200A               	addwfc	(btemp+9)^0,w,c
 19487  01953A  6EDA               	movwf	fsr2h,c
 19488  01953C  50DF               	movf	indf2,w,c
 19489  01953E  6E0C               	movwf	(btemp+11)^0,c
 19490                           
 19491                           ;stkvar	_c @ sp[(-3)+2]
 19492  019540  0EFF               	movlw	-1
 19493  019542  0060  F033  FFE3   	movff	btemp+11,plusw1
 19494  019548  0EFF               	movlw	-1
 19495  01954A  50E3               	movf	plusw1,w,c
 19496  01954C  A4D8               	btfss	status,2,c
 19497  01954E  D7C1               	goto	l10962
 19498                           
 19499                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 19500  019550  0EF9               	movlw	249
 19501  019552  26E1               	addwf	fsr1l,f,c
 19502  019554  0EFF               	movlw	255
 19503  019556  22E2               	addwfc	fsr1h,f,c
 19504  019558  0012               	return		;funcret
 19505  01955A                     __end_of_fputs:
 19506                           	opt callstack 0
 19507                           
 19508 ;; *************** function _fputc *****************
 19509 ;; Defined at:
 19510 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 19511 ;; Parameters:    Size  Location     Type
 19512 ;;  c               2  [STACK] int 
 19513 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19514 ;;		 -> f(6), NULL(0), 
 19515 ;; Auto vars:     Size  Location     Type
 19516 ;;		None
 19517 ;; Return value:  Size  Location     Type
 19518 ;;                  2  [STACK] int 
 19519 ;; Registers used:
 19520 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 19521 ;; Tracked objects:
 19522 ;;		On entry : 0/0
 19523 ;;		On exit  : 0/0
 19524 ;;		Unchanged: 0/0
 19525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19530 ;;Total ram usage:        0 bytes
 19531 ;; Hardware stack levels used:    1
 19532 ;; Hardware stack levels required when called:   17
 19533 ;; This function calls:
 19534 ;;		_putch
 19535 ;; This function is called by:
 19536 ;;		_pad
 19537 ;;		_stoa
 19538 ;;		_vfpfcnvrt
 19539 ;;		_fputs
 19540 ;; This function uses a reentrant model
 19541 ;;
 19542                           
 19543                           	psect	text70
 19544  01851E                     __ptext70:
 19545                           	opt callstack 0
 19546  01851E                     _fputc:
 19547                           	opt callstack 0
 19548                           
 19549                           ;stkvar	_fp @ sp[(0)+-4]
 19550                           
 19551                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19552                           ;incstack = 0
 19553 ;; hardware stack exceeded
 19554  01851E  0EFC               	movlw	-4
 19555  018520  006F FF8C  F001    	movff	plusw1,btemp
 19556  018526  0EFD               	movlw	-3
 19557  018528  50E3               	movf	plusw1,w,c
 19558  01852A  1001               	iorwf	btemp^0,w,c
 19559  01852C  B4D8               	btfsc	status,2,c
 19560  01852E  D009               	goto	u9970
 19561                           
 19562                           ;stkvar	_fp @ sp[(0)+-4]
 19563  018530  0EFC               	movlw	-4
 19564  018532  006F FF8C  F001    	movff	plusw1,btemp
 19565  018538  0EFD               	movlw	-3
 19566  01853A  50E3               	movf	plusw1,w,c
 19567  01853C  1001               	iorwf	btemp^0,w,c
 19568  01853E  A4D8               	btfss	status,2,c
 19569  018540  D006               	goto	l10950
 19570  018542                     u9970:
 19571                           
 19572                           ;stkvar	_c @ sp[(0)+-2]
 19573  018542  0EFE               	movlw	-2
 19574  018544  50E3               	movf	plusw1,w,c
 19575  018546  6EE6               	movwf	postinc1,c
 19576  018548  EC56  F0D5         	call	_putch	;wreg free
 19577  01854C  D075               	goto	l3106
 19578  01854E                     l10950:
 19579                           
 19580                           ;stkvar	_fp @ sp[(0)+-4]
 19581  01854E  0EFC               	movlw	-4
 19582  018550  006F FF8C  F00B    	movff	plusw1,btemp+10
 19583  018556  0EFD               	movlw	-3
 19584  018558  006F FF8C  F00C    	movff	plusw1,btemp+11
 19585  01855E  0E04               	movlw	4
 19586  018560  240B               	addwf	(btemp+10)^0,w,c
 19587  018562  6ED9               	movwf	fsr2l,c
 19588  018564  0E00               	movlw	0
 19589  018566  200C               	addwfc	(btemp+11)^0,w,c
 19590  018568  6EDA               	movwf	fsr2h,c
 19591  01856A  50DE               	movf	postinc2,w,c
 19592  01856C  10DE               	iorwf	postinc2,w,c
 19593  01856E  B4D8               	btfsc	status,2,c
 19594  018570  D026               	goto	u9990
 19595                           
 19596                           ;stkvar	_fp @ sp[(0)+-4]
 19597  018572  0EFC               	movlw	-4
 19598  018574  006F FF8C  F00B    	movff	plusw1,btemp+10
 19599  01857A  0EFD               	movlw	-3
 19600  01857C  006F FF8C  F00C    	movff	plusw1,btemp+11
 19601  018582  0E04               	movlw	4
 19602  018584  240B               	addwf	(btemp+10)^0,w,c
 19603  018586  6ED9               	movwf	fsr2l,c
 19604  018588  0E00               	movlw	0
 19605  01858A  200C               	addwfc	(btemp+11)^0,w,c
 19606  01858C  6EDA               	movwf	fsr2h,c
 19607                           
 19608                           ;stkvar	_fp @ sp[(0)+-4]
 19609  01858E  0EFC               	movlw	-4
 19610  018590  006F FF8C  F00B    	movff	plusw1,btemp+10
 19611  018596  0EFD               	movlw	-3
 19612  018598  006F FF8C  F00C    	movff	plusw1,btemp+11
 19613  01859E  0E02               	movlw	2
 19614  0185A0  240B               	addwf	(btemp+10)^0,w,c
 19615  0185A2  6EE9               	movwf	fsr0l,c
 19616  0185A4  0E00               	movlw	0
 19617  0185A6  200C               	addwfc	(btemp+11)^0,w,c
 19618  0185A8  6EEA               	movwf	fsr0h,c
 19619  0185AA  50DE               	movf	postinc2,w,c
 19620  0185AC  5CEE               	subwf	postinc0,w,c
 19621  0185AE  50EE               	movf	postinc0,w,c
 19622  0185B0  0A80               	xorlw	128
 19623  0185B2  6E01               	movwf	btemp^0,c
 19624  0185B4  50DE               	movf	postinc2,w,c
 19625  0185B6  0A80               	xorlw	128
 19626  0185B8  5801               	subwfb	btemp^0,w,c
 19627  0185BA  B0D8               	btfsc	status,0,c
 19628  0185BC  D03D               	goto	l3106
 19629  0185BE                     u9990:
 19630                           
 19631                           ;stkvar	_c @ sp[(0)+-2]
 19632                           ;stkvar	_fp @ sp[(0)+-4]
 19633  0185BE  0EFC               	movlw	-4
 19634  0185C0  006F FF8C  F00B    	movff	plusw1,btemp+10
 19635  0185C6  0EFD               	movlw	-3
 19636  0185C8  006F FF8C  F00C    	movff	plusw1,btemp+11
 19637  0185CE  0E02               	movlw	2
 19638  0185D0  240B               	addwf	(btemp+10)^0,w,c
 19639  0185D2  6ED9               	movwf	fsr2l,c
 19640  0185D4  0E00               	movlw	0
 19641  0185D6  200C               	addwfc	(btemp+11)^0,w,c
 19642  0185D8  6EDA               	movwf	fsr2h,c
 19643  0185DA  006F FF78  F00B    	movff	postinc2,btemp+10
 19644  0185E0  006F FF74  F00C    	movff	postdec2,btemp+11
 19645                           
 19646                           ;stkvar	_fp @ sp[(0)+-4]
 19647  0185E6  0EFC               	movlw	-4
 19648  0185E8  006F FF8F FFD9     	movff	plusw1,fsr2l
 19649  0185EE  0EFD               	movlw	-3
 19650  0185F0  006F FF8F FFDA     	movff	plusw1,fsr2h
 19651  0185F6  006F FF78  F009    	movff	postinc2,btemp+8
 19652  0185FC  006F FF74  F00A    	movff	postdec2,btemp+9
 19653  018602  500B               	movf	(btemp+10)^0,w,c
 19654  018604  2409               	addwf	(btemp+8)^0,w,c
 19655  018606  6ED9               	movwf	fsr2l,c
 19656  018608  500C               	movf	(btemp+11)^0,w,c
 19657  01860A  200A               	addwfc	(btemp+9)^0,w,c
 19658  01860C  6EDA               	movwf	fsr2h,c
 19659  01860E  0EFE               	movlw	-2
 19660  018610  006F FF8F FFDF     	movff	plusw1,indf2
 19661                           
 19662                           ;stkvar	_fp @ sp[(0)+-4]
 19663  018616  0EFC               	movlw	-4
 19664  018618  006F FF8C  F00B    	movff	plusw1,btemp+10
 19665  01861E  0EFD               	movlw	-3
 19666  018620  006F FF8C  F00C    	movff	plusw1,btemp+11
 19667  018626  0E02               	movlw	2
 19668  018628  240B               	addwf	(btemp+10)^0,w,c
 19669  01862A  6ED9               	movwf	fsr2l,c
 19670  01862C  0E00               	movlw	0
 19671  01862E  200C               	addwfc	(btemp+11)^0,w,c
 19672  018630  6EDA               	movwf	fsr2h,c
 19673  018632  2ADE               	incf	postinc2,f,c
 19674  018634  0E00               	movlw	0
 19675  018636  22DD               	addwfc	postdec2,f,c
 19676  018638                     l3106:
 19677                           
 19678                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 19679  018638  52E5               	movf	postdec1,f,c
 19680  01863A  52E5               	movf	postdec1,f,c
 19681  01863C  52E5               	movf	postdec1,f,c
 19682  01863E  52E5               	movf	postdec1,f,c
 19683  018640  0012               	return		;funcret
 19684  018642                     __end_of_fputc:
 19685                           	opt callstack 0
 19686                           
 19687 ;; *************** function _putch *****************
 19688 ;; Defined at:
 19689 ;;		line 170 in file "eadog.c"
 19690 ;; Parameters:    Size  Location     Type
 19691 ;;  c               1  [STACK] unsigned char 
 19692 ;; Auto vars:     Size  Location     Type
 19693 ;;		None
 19694 ;; Return value:  Size  Location     Type
 19695 ;;                  1  [STACK] void 
 19696 ;; Registers used:
 19697 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 19698 ;; Tracked objects:
 19699 ;;		On entry : 0/0
 19700 ;;		On exit  : 0/0
 19701 ;;		Unchanged: 0/0
 19702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19706 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19707 ;;Total ram usage:        0 bytes
 19708 ;; Hardware stack levels used:    1
 19709 ;; Hardware stack levels required when called:   16
 19710 ;; This function calls:
 19711 ;;		_ringBufS_put_dma
 19712 ;; This function is called by:
 19713 ;;		_fputc
 19714 ;; This function uses a reentrant model
 19715 ;;
 19716                           
 19717                           	psect	text71
 19718  01AAAC                     __ptext71:
 19719                           	opt callstack 0
 19720  01AAAC                     _putch:
 19721                           	opt callstack 0
 19722                           
 19723                           ;eadog.c: 170: void putch(char c);eadog.c: 171: {;eadog.c: 172:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 19724                           ;stkvar	_c @ sp[(0)+-1]
 19725                           
 19726                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19727                           ;incstack = 0
 19728 ;; hardware stack exceeded
 19729  01AAAC  0EFF               	movlw	-1
 19730  01AAAE  50E3               	movf	plusw1,w,c
 19731  01AAB0  6EE6               	movwf	postinc1,c
 19732  01AAB2  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 19733  01AAB8  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 19734  01AABE  EC68  F0C9         	call	_ringBufS_put_dma	;wreg free
 19735                           
 19736                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 19737  01AAC2  52E5               	movf	postdec1,f,c
 19738  01AAC4  0012               	return		;funcret
 19739  01AAC6                     __end_of_putch:
 19740                           	opt callstack 0
 19741                           
 19742 ;; *************** function _ringBufS_put_dma *****************
 19743 ;; Defined at:
 19744 ;;		line 67 in file "ringbufs.c"
 19745 ;; Parameters:    Size  Location     Type
 19746 ;;  _this           2  [STACK] PTR struct ringBufS_t
 19747 ;;		 -> ring_buf1(67), 
 19748 ;;  c               1  [STACK] const unsigned char 
 19749 ;; Auto vars:     Size  Location     Type
 19750 ;;		None
 19751 ;; Return value:  Size  Location     Type
 19752 ;;                  1  [STACK] void 
 19753 ;; Registers used:
 19754 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 19755 ;; Tracked objects:
 19756 ;;		On entry : 0/0
 19757 ;;		On exit  : 0/0
 19758 ;;		Unchanged: 0/0
 19759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19764 ;;Total ram usage:        0 bytes
 19765 ;; Hardware stack levels used:    1
 19766 ;; Hardware stack levels required when called:   15
 19767 ;; This function calls:
 19768 ;;		Nothing
 19769 ;; This function is called by:
 19770 ;;		_putch
 19771 ;; This function uses a reentrant model
 19772 ;;
 19773                           
 19774                           	psect	text72
 19775  0192D0                     __ptext72:
 19776                           	opt callstack 0
 19777  0192D0                     _ringBufS_put_dma:
 19778                           	opt callstack 0
 19779                           
 19780                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 19781                           ;stkvar	__this @ sp[(0)+-2]
 19782                           
 19783                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19784                           ;incstack = 0
 19785 ;; hardware stack exceeded
 19786  0192D0  0EFE               	movlw	-2
 19787  0192D2  006F FF8C  F00B    	movff	plusw1,btemp+10
 19788  0192D8  0EFF               	movlw	-1
 19789  0192DA  006F FF8C  F00C    	movff	plusw1,btemp+11
 19790  0192E0  0E42               	movlw	66
 19791  0192E2  240B               	addwf	(btemp+10)^0,w,c
 19792  0192E4  6ED9               	movwf	fsr2l,c
 19793  0192E6  0E00               	movlw	0
 19794  0192E8  200C               	addwfc	(btemp+11)^0,w,c
 19795  0192EA  6EDA               	movwf	fsr2h,c
 19796  0192EC  0E40               	movlw	64
 19797  0192EE  60DF               	cpfslt	indf2,c
 19798  0192F0  D040               	goto	l1564
 19799                           
 19800                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 19801                           ;stkvar	_c @ sp[(0)+-3]
 19802                           ;stkvar	__this @ sp[(0)+-2]
 19803  0192F2  0EFE               	movlw	-2
 19804  0192F4  006F FF8C  F00B    	movff	plusw1,btemp+10
 19805  0192FA  0EFF               	movlw	-1
 19806  0192FC  006F FF8C  F00C    	movff	plusw1,btemp+11
 19807  019302  0E40               	movlw	64
 19808  019304  240B               	addwf	(btemp+10)^0,w,c
 19809  019306  6ED9               	movwf	fsr2l,c
 19810  019308  0E00               	movlw	0
 19811  01930A  200C               	addwfc	(btemp+11)^0,w,c
 19812  01930C  6EDA               	movwf	fsr2h,c
 19813  01930E  50DF               	movf	indf2,w,c
 19814  019310  6E0C               	movwf	(btemp+11)^0,c
 19815                           
 19816                           ;stkvar	__this @ sp[(0)+-2]
 19817  019312  0EFE               	movlw	-2
 19818  019314  006F FF8C  F009    	movff	plusw1,btemp+8
 19819  01931A  0EFF               	movlw	-1
 19820  01931C  006F FF8C  F00A    	movff	plusw1,btemp+9
 19821  019322  500C               	movf	(btemp+11)^0,w,c
 19822  019324  2409               	addwf	(btemp+8)^0,w,c
 19823  019326  6ED9               	movwf	fsr2l,c
 19824  019328  0E00               	movlw	0
 19825  01932A  200A               	addwfc	(btemp+9)^0,w,c
 19826  01932C  6EDA               	movwf	fsr2h,c
 19827  01932E  0EFD               	movlw	-3
 19828  019330  006F FF8F FFDF     	movff	plusw1,indf2
 19829                           
 19830                           ;ringbufs.c: 71:   ++_this->head;
 19831                           ;stkvar	__this @ sp[(0)+-2]
 19832  019336  0EFE               	movlw	-2
 19833  019338  006F FF8C  F00B    	movff	plusw1,btemp+10
 19834  01933E  0EFF               	movlw	-1
 19835  019340  006F FF8C  F00C    	movff	plusw1,btemp+11
 19836  019346  0E40               	movlw	64
 19837  019348  240B               	addwf	(btemp+10)^0,w,c
 19838  01934A  6ED9               	movwf	fsr2l,c
 19839  01934C  0E00               	movlw	0
 19840  01934E  200C               	addwfc	(btemp+11)^0,w,c
 19841  019350  6EDA               	movwf	fsr2h,c
 19842  019352  2ADF               	incf	indf2,f,c
 19843                           
 19844                           ;ringbufs.c: 72:   ++_this->count;
 19845                           ;stkvar	__this @ sp[(0)+-2]
 19846  019354  0EFE               	movlw	-2
 19847  019356  006F FF8C  F00B    	movff	plusw1,btemp+10
 19848  01935C  0EFF               	movlw	-1
 19849  01935E  006F FF8C  F00C    	movff	plusw1,btemp+11
 19850  019364  0E42               	movlw	66
 19851  019366  240B               	addwf	(btemp+10)^0,w,c
 19852  019368  6ED9               	movwf	fsr2l,c
 19853  01936A  0E00               	movlw	0
 19854  01936C  200C               	addwfc	(btemp+11)^0,w,c
 19855  01936E  6EDA               	movwf	fsr2h,c
 19856  019370  2ADF               	incf	indf2,f,c
 19857  019372                     l1564:
 19858                           
 19859                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 19860  019372  52E5               	movf	postdec1,f,c
 19861  019374  52E5               	movf	postdec1,f,c
 19862  019376  52E5               	movf	postdec1,f,c
 19863  019378  0012               	return		;funcret
 19864  01937A                     __end_of_ringBufS_put_dma:
 19865                           	opt callstack 0
 19866                           
 19867 ;; *************** function _atoi *****************
 19868 ;; Defined at:
 19869 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 19870 ;; Parameters:    Size  Location     Type
 19871 ;;  s               2  [STACK] PTR const unsigned char 
 19872 ;;		 -> STR_48(79), STR_46(3), STR_45(3), STR_44(19), 
 19873 ;;		 -> STR_43(19), STR_42(19), STR_41(19), STR_40(19), 
 19874 ;;		 -> STR_39(19), STR_38(24), STR_37(15), STR_36(15), 
 19875 ;;		 -> STR_35(15), STR_34(10), STR_33(10), STR_32(19), 
 19876 ;;		 -> STR_31(19), STR_28(3), STR_27(3), STR_26(3), 
 19877 ;;		 -> STR_25(17), STR_24(16), STR_23(16), STR_22(19), 
 19878 ;;		 -> STR_21(20), STR_20(19), STR_19(19), STR_18(19), 
 19879 ;;		 -> STR_17(19), STR_16(19), STR_15(19), STR_14(19), 
 19880 ;;		 -> STR_13(17), STR_12(16), STR_11(16), STR_10(22), 
 19881 ;;		 -> STR_9(22), STR_8(22), STR_7(17), STR_6(17), 
 19882 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
 19883 ;; Auto vars:     Size  Location     Type
 19884 ;;  n               2  [STACK] int 
 19885 ;;  neg             2  [STACK] int 
 19886 ;; Return value:  Size  Location     Type
 19887 ;;                  2  [STACK] int 
 19888 ;; Registers used:
 19889 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 19890 ;; Tracked objects:
 19891 ;;		On entry : 0/0
 19892 ;;		On exit  : 0/0
 19893 ;;		Unchanged: 0/0
 19894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19899 ;;Total ram usage:        0 bytes
 19900 ;; Hardware stack levels used:    1
 19901 ;; Hardware stack levels required when called:   16
 19902 ;; This function calls:
 19903 ;;		_isdigit
 19904 ;;		_isspace
 19905 ;; This function is called by:
 19906 ;;		_vfpfcnvrt
 19907 ;; This function uses a reentrant model
 19908 ;;
 19909                           
 19910                           	psect	text73
 19911  01674E                     __ptext73:
 19912                           	opt callstack 0
 19913  01674E                     _atoi:
 19914                           	opt callstack 0
 19915                           
 19916                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19917  01674E  0E09               	movlw	9
 19918  016750  26E1               	addwf	fsr1l,f,c
 19919  016752  0E00               	movlw	0
 19920  016754  22E2               	addwfc	fsr1h,f,c
 19921                           
 19922                           ;stkvar	_n @ sp[(-9)+5]
 19923                           
 19924                           ;incstack = 0
 19925 ;; hardware stack exceeded
 19926  016756  0EFC               	movlw	-4
 19927  016758  6AE3               	clrf	plusw1,c
 19928  01675A  0EFD               	movlw	-3
 19929  01675C  6AE3               	clrf	plusw1,c
 19930                           
 19931                           ;stkvar	_neg @ sp[(-9)+7]
 19932  01675E  0EFE               	movlw	-2
 19933  016760  6AE3               	clrf	plusw1,c
 19934  016762  0EFF               	movlw	-1
 19935  016764  6AE3               	clrf	plusw1,c
 19936  016766  D011               	goto	l8818
 19937  016768                     l8816:
 19938                           
 19939                           ;stkvar	_s @ sp[(-9)+-2]
 19940  016768  0EF5               	movlw	-11
 19941  01676A  50E3               	movf	plusw1,w,c
 19942  01676C  0F01               	addlw	1
 19943  01676E  6E01               	movwf	btemp^0,c
 19944  016770  0EF5               	movlw	-11
 19945  016772  0060  F007  FFE3   	movff	btemp,plusw1
 19946  016778  6A01               	clrf	btemp^0,c
 19947  01677A  0EF6               	movlw	-10
 19948  01677C  50E3               	movf	plusw1,w,c
 19949  01677E  2001               	addwfc	btemp^0,w,c
 19950  016780  6E01               	movwf	btemp^0,c
 19951  016782  0EF6               	movlw	-10
 19952  016784  0060  F007  FFE3   	movff	btemp,plusw1
 19953  01678A                     l8818:
 19954                           
 19955                           ;stkvar	_atoi$5826 @ sp[(-9)+4]
 19956  01678A  0EFB               	movlw	-5
 19957  01678C  6AE3               	clrf	plusw1,c
 19958  01678E  2AE3               	incf	plusw1,f,c
 19959                           
 19960                           ;stkvar	_s @ sp[(-9)+-2]
 19961  016790  50E1               	movf	fsr1l,w,c
 19962  016792  0FF5               	addlw	-11
 19963  016794  6ED9               	movwf	fsr2l,c
 19964  016796  50E2               	movf	fsr1h,w,c
 19965  016798  6EDA               	movwf	fsr2h,c
 19966  01679A  0EFF               	movlw	255
 19967  01679C  22DA               	addwfc	fsr2h,f,c
 19968  01679E  006F FF7B FFF6     	movff	postinc2,tblptrl
 19969  0167A4  006F FF77 FFF7     	movff	postdec2,tblptrh
 19970  0167AA                     	if	0	;tblptru may be non-zero
 19971  0167AA                     	endif
 19972  0167AA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19973  0167AA  0E00               	movlw	low (__mediumconst shr (0+16))
 19974  0167AC  6EF8               	movwf	tblptru,c
 19975  0167AE                     	endif
 19976  0167AE  0008               	tblrd		*
 19977  0167B0  50F5               	movf	tablat,w,c
 19978  0167B2  0A20               	xorlw	32
 19979  0167B4  B4D8               	btfsc	status,2,c
 19980  0167B6  D023               	goto	l8826
 19981  0167B8  0EF7               	movlw	247
 19982  0167BA  6E0B               	movwf	(btemp+10)^0,c
 19983  0167BC  0EFF               	movlw	255
 19984  0167BE  6E0C               	movwf	(btemp+11)^0,c
 19985                           
 19986                           ;stkvar	_s @ sp[(-9)+-2]
 19987  0167C0  50E1               	movf	fsr1l,w,c
 19988  0167C2  0FF5               	addlw	-11
 19989  0167C4  6ED9               	movwf	fsr2l,c
 19990  0167C6  50E2               	movf	fsr1h,w,c
 19991  0167C8  6EDA               	movwf	fsr2h,c
 19992  0167CA  0EFF               	movlw	255
 19993  0167CC  22DA               	addwfc	fsr2h,f,c
 19994  0167CE  006F FF7B FFF6     	movff	postinc2,tblptrl
 19995  0167D4  006F FF77 FFF7     	movff	postdec2,tblptrh
 19996  0167DA                     	if	0	;tblptru may be non-zero
 19997  0167DA                     	endif
 19998  0167DA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19999  0167DA  0E00               	movlw	low (__mediumconst shr (0+16))
 20000  0167DC  6EF8               	movwf	tblptru,c
 20001  0167DE                     	endif
 20002  0167DE  0008               	tblrd		*
 20003  0167E0  50F5               	movf	tablat,w,c
 20004  0167E2  6E09               	movwf	(btemp+8)^0,c
 20005  0167E4  6A0A               	clrf	(btemp+9)^0,c
 20006  0167E6  500B               	movf	(btemp+10)^0,w,c
 20007  0167E8  2609               	addwf	(btemp+8)^0,f,c
 20008  0167EA  500C               	movf	(btemp+11)^0,w,c
 20009  0167EC  220A               	addwfc	(btemp+9)^0,f,c
 20010  0167EE  500A               	movf	(btemp+9)^0,w,c
 20011  0167F0  E104               	bnz	u8140
 20012  0167F2  0E05               	movlw	5
 20013  0167F4  5C09               	subwf	(btemp+8)^0,w,c
 20014  0167F6  A0D8               	btfss	status,0,c
 20015  0167F8  D002               	goto	l8826
 20016  0167FA                     u8140:
 20017                           
 20018                           ;stkvar	_atoi$5826 @ sp[(-9)+4]
 20019  0167FA  0EFB               	movlw	-5
 20020  0167FC  6AE3               	clrf	plusw1,c
 20021  0167FE                     l8826:
 20022                           
 20023                           ;stkvar	_atoi$5826 @ sp[(-9)+4]
 20024  0167FE  0EFB               	movlw	-5
 20025  016800  50E3               	movf	plusw1,w,c
 20026  016802  6E0B               	movwf	(btemp+10)^0,c
 20027  016804  6A0C               	clrf	(btemp+11)^0,c
 20028                           
 20029                           ;stkvar	_atoi$5825 @ sp[(-9)+2]
 20030  016806  0EF9               	movlw	-7
 20031  016808  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20032  01680E  0EFA               	movlw	-6
 20033  016810  0060  F033  FFE3   	movff	btemp+11,plusw1
 20034                           
 20035                           ;stkvar	_atoi$5825 @ sp[(-9)+2]
 20036  016816  0EF9               	movlw	-7
 20037  016818  006F FF8C  F001    	movff	plusw1,btemp
 20038  01681E  0EFA               	movlw	-6
 20039  016820  50E3               	movf	plusw1,w,c
 20040  016822  1001               	iorwf	btemp^0,w,c
 20041  016824  B4D8               	btfsc	status,2,c
 20042  016826  D01F               	goto	l8836
 20043  016828  D79F               	goto	l8816
 20044  01682A                     l8832:
 20045  01682A  0E01               	movlw	1
 20046  01682C  6E0B               	movwf	(btemp+10)^0,c
 20047  01682E  0E00               	movlw	0
 20048  016830  6E0C               	movwf	(btemp+11)^0,c
 20049                           
 20050                           ;stkvar	_neg @ sp[(-9)+7]
 20051  016832  0EFE               	movlw	-2
 20052  016834  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20053  01683A  0EFF               	movlw	-1
 20054  01683C  0060  F033  FFE3   	movff	btemp+11,plusw1
 20055  016842                     l8834:
 20056                           
 20057                           ;stkvar	_s @ sp[(-9)+-2]
 20058  016842  0EF5               	movlw	-11
 20059  016844  50E3               	movf	plusw1,w,c
 20060  016846  0F01               	addlw	1
 20061  016848  6E01               	movwf	btemp^0,c
 20062  01684A  0EF5               	movlw	-11
 20063  01684C  0060  F007  FFE3   	movff	btemp,plusw1
 20064  016852  6A01               	clrf	btemp^0,c
 20065  016854  0EF6               	movlw	-10
 20066  016856  50E3               	movf	plusw1,w,c
 20067  016858  2001               	addwfc	btemp^0,w,c
 20068  01685A  6E01               	movwf	btemp^0,c
 20069  01685C  0EF6               	movlw	-10
 20070  01685E  0060  F007  FFE3   	movff	btemp,plusw1
 20071  016864  D053               	goto	l8842
 20072  016866                     l8836:
 20073                           
 20074                           ;stkvar	_s @ sp[(-9)+-2]
 20075  016866  50E1               	movf	fsr1l,w,c
 20076  016868  0FF5               	addlw	-11
 20077  01686A  6ED9               	movwf	fsr2l,c
 20078  01686C  50E2               	movf	fsr1h,w,c
 20079  01686E  6EDA               	movwf	fsr2h,c
 20080  016870  0EFF               	movlw	255
 20081  016872  22DA               	addwfc	fsr2h,f,c
 20082  016874  006F FF7B FFF6     	movff	postinc2,tblptrl
 20083  01687A  006F FF77 FFF7     	movff	postdec2,tblptrh
 20084  016880                     	if	0	;tblptru may be non-zero
 20085  016880                     	endif
 20086  016880                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20087  016880  0E00               	movlw	low (__mediumconst shr (0+16))
 20088  016882  6EF8               	movwf	tblptru,c
 20089  016884                     	endif
 20090  016884  0008               	tblrd		*
 20091  016886  50F5               	movf	tablat,w,c
 20092  016888  6E0B               	movwf	(btemp+10)^0,c
 20093  01688A  6A0C               	clrf	(btemp+11)^0,c
 20094                           
 20095                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 20096                           ; Switch size 1, requested type "simple"
 20097                           ; Number of cases is 1, Range of values is 0 to 0
 20098                           ; switch strategies available:
 20099                           ; Name         Instructions Cycles
 20100                           ; simple_byte            4     3 (average)
 20101                           ;	Chosen strategy is simple_byte
 20102  01688C  500C               	movf	(btemp+11)^0,w,c
 20103  01688E  0A00               	xorlw	0	; case 0
 20104  016890  A4D8               	btfss	status,2,c
 20105  016892  D03C               	goto	l8842
 20106                           
 20107                           ; Switch size 1, requested type "simple"
 20108                           ; Number of cases is 2, Range of values is 43 to 45
 20109                           ; switch strategies available:
 20110                           ; Name         Instructions Cycles
 20111                           ; simple_byte            7     4 (average)
 20112                           ;	Chosen strategy is simple_byte
 20113  016894  500B               	movf	(btemp+10)^0,w,c
 20114  016896  0A2B               	xorlw	43	; case 43
 20115  016898  B4D8               	btfsc	status,2,c
 20116  01689A  D7D3               	goto	l8834
 20117  01689C  0A06               	xorlw	6	; case 45
 20118  01689E  B4D8               	btfsc	status,2,c
 20119  0168A0  D7C4               	goto	l8832
 20120  0168A2  D034               	goto	l8842
 20121  0168A4                     l8838:
 20122                           
 20123                           ;stkvar	_n @ sp[(-9)+5]
 20124  0168A4  0EFC               	movlw	-4
 20125  0168A6  006F FF8C  F00B    	movff	plusw1,btemp+10
 20126  0168AC  0EFD               	movlw	-3
 20127  0168AE  006F FF8C  F00C    	movff	plusw1,btemp+11
 20128  0168B4  0E0A               	movlw	10
 20129  0168B6  020B               	mulwf	(btemp+10)^0,c
 20130  0168B8  006F FFCC  F009    	movff	prodl,btemp+8
 20131  0168BE  006F FFD0  F00A    	movff	prodh,btemp+9
 20132  0168C4  020C               	mulwf	(btemp+11)^0,c
 20133  0168C6  50F3               	movf	prodl,w,c
 20134  0168C8  260A               	addwf	(btemp+9)^0,f,c
 20135                           
 20136                           ;stkvar	_s @ sp[(-9)+-2]
 20137  0168CA  50E1               	movf	fsr1l,w,c
 20138  0168CC  0FF5               	addlw	-11
 20139  0168CE  6ED9               	movwf	fsr2l,c
 20140  0168D0  50E2               	movf	fsr1h,w,c
 20141  0168D2  6EDA               	movwf	fsr2h,c
 20142  0168D4  0EFF               	movlw	255
 20143  0168D6  22DA               	addwfc	fsr2h,f,c
 20144  0168D8  006F FF7B FFF6     	movff	postinc2,tblptrl
 20145  0168DE  006F FF77 FFF7     	movff	postdec2,tblptrh
 20146  0168E4                     	if	0	;tblptru may be non-zero
 20147  0168E4                     	endif
 20148  0168E4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20149  0168E4  0E00               	movlw	low (__mediumconst shr (0+16))
 20150  0168E6  6EF8               	movwf	tblptru,c
 20151  0168E8                     	endif
 20152  0168E8  0008               	tblrd		*
 20153  0168EA  50F5               	movf	tablat,w,c
 20154  0168EC  5E09               	subwf	(btemp+8)^0,f,c
 20155  0168EE  0E00               	movlw	0
 20156  0168F0  5A0A               	subwfb	(btemp+9)^0,f,c
 20157  0168F2  0E30               	movlw	48
 20158  0168F4  2609               	addwf	(btemp+8)^0,f,c
 20159  0168F6  0E00               	movlw	0
 20160  0168F8  220A               	addwfc	(btemp+9)^0,f,c
 20161                           
 20162                           ;stkvar	_n @ sp[(-9)+5]
 20163  0168FA  0EFC               	movlw	-4
 20164  0168FC  0060  F027  FFE3   	movff	btemp+8,plusw1
 20165  016902  0EFD               	movlw	-3
 20166  016904  0060  F02B  FFE3   	movff	btemp+9,plusw1
 20167  01690A  D79B               	goto	l8834
 20168  01690C                     l8842:
 20169  01690C  0ED0               	movlw	208
 20170  01690E  6E0B               	movwf	(btemp+10)^0,c
 20171  016910  0EFF               	movlw	255
 20172  016912  6E0C               	movwf	(btemp+11)^0,c
 20173                           
 20174                           ;stkvar	_s @ sp[(-9)+-2]
 20175  016914  50E1               	movf	fsr1l,w,c
 20176  016916  0FF5               	addlw	-11
 20177  016918  6ED9               	movwf	fsr2l,c
 20178  01691A  50E2               	movf	fsr1h,w,c
 20179  01691C  6EDA               	movwf	fsr2h,c
 20180  01691E  0EFF               	movlw	255
 20181  016920  22DA               	addwfc	fsr2h,f,c
 20182  016922  006F FF7B FFF6     	movff	postinc2,tblptrl
 20183  016928  006F FF77 FFF7     	movff	postdec2,tblptrh
 20184  01692E                     	if	0	;tblptru may be non-zero
 20185  01692E                     	endif
 20186  01692E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20187  01692E  0E00               	movlw	low (__mediumconst shr (0+16))
 20188  016930  6EF8               	movwf	tblptru,c
 20189  016932                     	endif
 20190  016932  0008               	tblrd		*
 20191  016934  50F5               	movf	tablat,w,c
 20192  016936  6E09               	movwf	(btemp+8)^0,c
 20193  016938  6A0A               	clrf	(btemp+9)^0,c
 20194  01693A  500B               	movf	(btemp+10)^0,w,c
 20195  01693C  2609               	addwf	(btemp+8)^0,f,c
 20196  01693E  500C               	movf	(btemp+11)^0,w,c
 20197  016940  220A               	addwfc	(btemp+9)^0,f,c
 20198  016942  500A               	movf	(btemp+9)^0,w,c
 20199  016944  E106               	bnz	u8160
 20200  016946  0E0A               	movlw	10
 20201  016948  5C09               	subwf	(btemp+8)^0,w,c
 20202  01694A  B0D8               	btfsc	status,0,c
 20203  01694C  D002               	goto	u8160
 20204  01694E  0E01               	movlw	1
 20205  016950  D001               	goto	u8170
 20206  016952                     u8160:
 20207  016952  0E00               	movlw	0
 20208  016954                     u8170:
 20209  016954  6E0B               	movwf	(btemp+10)^0,c
 20210  016956  6A0C               	clrf	(btemp+11)^0,c
 20211                           
 20212                           ;stkvar	_atoi$5827 @ sp[(-9)+0]
 20213  016958  0EF7               	movlw	-9
 20214  01695A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20215  016960  0EF8               	movlw	-8
 20216  016962  0060  F033  FFE3   	movff	btemp+11,plusw1
 20217                           
 20218                           ;stkvar	_atoi$5827 @ sp[(-9)+0]
 20219  016968  0EF7               	movlw	-9
 20220  01696A  006F FF8C  F001    	movff	plusw1,btemp
 20221  016970  0EF8               	movlw	-8
 20222  016972  50E3               	movf	plusw1,w,c
 20223  016974  1001               	iorwf	btemp^0,w,c
 20224  016976  A4D8               	btfss	status,2,c
 20225  016978  D795               	goto	l8838
 20226                           
 20227                           ;stkvar	_neg @ sp[(-9)+7]
 20228  01697A  0EFE               	movlw	-2
 20229  01697C  006F FF8C  F001    	movff	plusw1,btemp
 20230  016982  0EFF               	movlw	-1
 20231  016984  50E3               	movf	plusw1,w,c
 20232  016986  1001               	iorwf	btemp^0,w,c
 20233  016988  A4D8               	btfss	status,2,c
 20234  01698A  D00E               	goto	l8852
 20235                           
 20236                           ;stkvar	_n @ sp[(-9)+5]
 20237  01698C  0EFC               	movlw	-4
 20238  01698E  006F FF8C  F001    	movff	plusw1,btemp
 20239  016994  1E01               	comf	btemp^0,f,c
 20240  016996  0EFD               	movlw	-3
 20241  016998  006F FF8C  F002    	movff	plusw1,btemp+1
 20242  01699E  1E02               	comf	(btemp+1)^0,f,c
 20243  0169A0  2A01               	incf	btemp^0,f,c
 20244  0169A2  B4D8               	btfsc	status,2,c
 20245  0169A4  2A02               	incf	(btemp+1)^0,f,c
 20246  0169A6  D008               	goto	l3037
 20247  0169A8                     l8852:
 20248                           
 20249                           ;stkvar	_n @ sp[(-9)+5]
 20250  0169A8  0EFC               	movlw	-4
 20251  0169AA  006F FF8C  F001    	movff	plusw1,btemp
 20252  0169B0  0EFD               	movlw	-3
 20253  0169B2  006F FF8C  F002    	movff	plusw1,btemp+1
 20254  0169B8                     l3037:
 20255                           
 20256                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 20257  0169B8  0EF5               	movlw	245
 20258  0169BA  26E1               	addwf	fsr1l,f,c
 20259  0169BC  0EFF               	movlw	255
 20260  0169BE  22E2               	addwfc	fsr1h,f,c
 20261  0169C0  0012               	return		;funcret
 20262  0169C2                     __end_of_atoi:
 20263                           	opt callstack 0
 20264                           
 20265 ;; *************** function _isspace *****************
 20266 ;; Defined at:
 20267 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 20268 ;; Parameters:    Size  Location     Type
 20269 ;;  c               2  [STACK] int 
 20270 ;; Auto vars:     Size  Location     Type
 20271 ;;		None
 20272 ;; Return value:  Size  Location     Type
 20273 ;;                  2  [STACK] int 
 20274 ;; Registers used:
 20275 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 20276 ;; Tracked objects:
 20277 ;;		On entry : 0/0
 20278 ;;		On exit  : 0/0
 20279 ;;		Unchanged: 0/0
 20280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20284 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20285 ;;Total ram usage:        0 bytes
 20286 ;; Hardware stack levels used:    1
 20287 ;; Hardware stack levels required when called:   15
 20288 ;; This function calls:
 20289 ;;		Nothing
 20290 ;; This function is called by:
 20291 ;;		_atoi
 20292 ;; This function uses a reentrant model
 20293 ;;
 20294                           
 20295                           	psect	text74
 20296  019E3C                     __ptext74:
 20297                           	opt callstack 0
 20298  019E3C                     _isspace:
 20299                           	opt callstack 0
 20300                           
 20301                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20302  019E3C  52E6               	movf	postinc1,f,c
 20303                           
 20304                           ;stkvar	_isspace$5876 @ sp[(-1)+0]
 20305                           
 20306                           ;incstack = 0
 20307 ;; hardware stack exceeded
 20308  019E3E  0EFF               	movlw	-1
 20309  019E40  6AE3               	clrf	plusw1,c
 20310  019E42  2AE3               	incf	plusw1,f,c
 20311                           
 20312                           ;stkvar	_c @ sp[(-1)+-2]
 20313  019E44  0EFD               	movlw	-3
 20314  019E46  006F FF8C  F001    	movff	plusw1,btemp
 20315  019E4C  0E20               	movlw	32
 20316  019E4E  1801               	xorwf	btemp^0,w,c
 20317  019E50  E104               	bnz	u6990
 20318  019E52  0EFE               	movlw	-2
 20319  019E54  50E3               	movf	plusw1,w,c
 20320  019E56  B4D8               	btfsc	status,2,c
 20321  019E58  D012               	goto	l8210
 20322  019E5A                     u6990:
 20323                           
 20324                           ;stkvar	_c @ sp[(-1)+-2]
 20325  019E5A  0EFD               	movlw	-3
 20326  019E5C  50E3               	movf	plusw1,w,c
 20327  019E5E  0FF7               	addlw	247
 20328  019E60  6E0B               	movwf	(btemp+10)^0,c
 20329  019E62  0EFE               	movlw	-2
 20330  019E64  006F FF8C  F00C    	movff	plusw1,btemp+11
 20331  019E6A  0EFF               	movlw	255
 20332  019E6C  220C               	addwfc	(btemp+11)^0,f,c
 20333  019E6E  500C               	movf	(btemp+11)^0,w,c
 20334  019E70  E104               	bnz	u7000
 20335  019E72  0E05               	movlw	5
 20336  019E74  5C0B               	subwf	(btemp+10)^0,w,c
 20337  019E76  A0D8               	btfss	status,0,c
 20338  019E78  D002               	goto	l8210
 20339  019E7A                     u7000:
 20340                           
 20341                           ;stkvar	_isspace$5876 @ sp[(-1)+0]
 20342  019E7A  0EFF               	movlw	-1
 20343  019E7C  6AE3               	clrf	plusw1,c
 20344  019E7E                     l8210:
 20345                           
 20346                           ;stkvar	_isspace$5876 @ sp[(-1)+0]
 20347  019E7E  0EFF               	movlw	-1
 20348  019E80  50E3               	movf	plusw1,w,c
 20349  019E82  6E01               	movwf	btemp^0,c
 20350  019E84  6A02               	clrf	(btemp+1)^0,c
 20351                           
 20352                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 20353  019E86  52E5               	movf	postdec1,f,c
 20354  019E88  52E5               	movf	postdec1,f,c
 20355  019E8A  52E5               	movf	postdec1,f,c
 20356  019E8C  0012               	return		;funcret
 20357  019E8E                     __end_of_isspace:
 20358                           	opt callstack 0
 20359                           
 20360 ;; *************** function _isdigit *****************
 20361 ;; Defined at:
 20362 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 20363 ;; Parameters:    Size  Location     Type
 20364 ;;  c               2  [STACK] int 
 20365 ;; Auto vars:     Size  Location     Type
 20366 ;;		None
 20367 ;; Return value:  Size  Location     Type
 20368 ;;                  2  [STACK] int 
 20369 ;; Registers used:
 20370 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 20371 ;; Tracked objects:
 20372 ;;		On entry : 0/0
 20373 ;;		On exit  : 0/0
 20374 ;;		Unchanged: 0/0
 20375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20380 ;;Total ram usage:        0 bytes
 20381 ;; Hardware stack levels used:    1
 20382 ;; Hardware stack levels required when called:   15
 20383 ;; This function calls:
 20384 ;;		Nothing
 20385 ;; This function is called by:
 20386 ;;		_vfpfcnvrt
 20387 ;;		_atoi
 20388 ;; This function uses a reentrant model
 20389 ;;
 20390                           
 20391                           	psect	text75
 20392  01A4E8                     __ptext75:
 20393                           	opt callstack 0
 20394  01A4E8                     _isdigit:
 20395                           	opt callstack 0
 20396                           
 20397                           ;stkvar	_c @ sp[(0)+-2]
 20398                           
 20399                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20400                           ;incstack = 0
 20401 ;; hardware stack exceeded
 20402  01A4E8  0EFE               	movlw	-2
 20403  01A4EA  50E3               	movf	plusw1,w,c
 20404  01A4EC  0FD0               	addlw	208
 20405  01A4EE  6E0B               	movwf	(btemp+10)^0,c
 20406  01A4F0  0EFF               	movlw	-1
 20407  01A4F2  006F FF8C  F00C    	movff	plusw1,btemp+11
 20408  01A4F8  0EFF               	movlw	255
 20409  01A4FA  220C               	addwfc	(btemp+11)^0,f,c
 20410  01A4FC  500C               	movf	(btemp+11)^0,w,c
 20411  01A4FE  E106               	bnz	u5840
 20412  01A500  0E0A               	movlw	10
 20413  01A502  5C0B               	subwf	(btemp+10)^0,w,c
 20414  01A504  B0D8               	btfsc	status,0,c
 20415  01A506  D002               	goto	u5840
 20416  01A508  0E01               	movlw	1
 20417  01A50A  D001               	goto	u5850
 20418  01A50C                     u5840:
 20419  01A50C  0E00               	movlw	0
 20420  01A50E                     u5850:
 20421  01A50E  6E01               	movwf	btemp^0,c
 20422  01A510  6A02               	clrf	(btemp+1)^0,c
 20423                           
 20424                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 20425  01A512  52E5               	movf	postdec1,f,c
 20426  01A514  52E5               	movf	postdec1,f,c
 20427  01A516  0012               	return		;funcret
 20428  01A518                     __end_of_isdigit:
 20429                           	opt callstack 0
 20430                           
 20431 ;; *************** function _set_vterm *****************
 20432 ;; Defined at:
 20433 ;;		line 107 in file "mconfig.c"
 20434 ;; Parameters:    Size  Location     Type
 20435 ;;  vterm           1  [STACK] const unsigned char 
 20436 ;; Auto vars:     Size  Location     Type
 20437 ;;		None
 20438 ;; Return value:  Size  Location     Type
 20439 ;;                  1  [STACK] unsigned char 
 20440 ;; Registers used:
 20441 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 20442 ;; Tracked objects:
 20443 ;;		On entry : 0/0
 20444 ;;		On exit  : 0/0
 20445 ;;		Unchanged: 0/0
 20446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20450 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20451 ;;Total ram usage:        0 bytes
 20452 ;; Hardware stack levels used:    1
 20453 ;; Hardware stack levels required when called:   15
 20454 ;; This function calls:
 20455 ;;		Nothing
 20456 ;; This function is called by:
 20457 ;;		_main
 20458 ;;		_check_help
 20459 ;; This function uses a reentrant model
 20460 ;;
 20461                           
 20462                           	psect	text76
 20463  01A9FC                     __ptext76:
 20464                           	opt callstack 0
 20465  01A9FC                     _set_vterm:
 20466                           	opt callstack 15
 20467                           
 20468                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 20469                           ;stkvar	_vterm @ sp[(0)+-1]
 20470                           
 20471                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20472                           ;incstack = 0
 20473  01A9FC  0EFF               	movlw	-1
 20474  01A9FE  006F FF8C  F00C    	movff	plusw1,btemp+11
 20475  01AA04  0E03               	movlw	3
 20476  01AA06  160C               	andwf	(btemp+11)^0,f,c
 20477  01AA08  EE22  F11F         	lfsr	2,_D+288
 20478  01AA0C  50DF               	movf	223,w,c
 20479  01AA0E  180C               	xorwf	(btemp+11)^0,w,c
 20480  01AA10  0BFE               	andlw	-2
 20481  01AA12  180C               	xorwf	(btemp+11)^0,w,c
 20482  01AA14  6EDF               	movwf	223,c
 20483                           
 20484                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 20485  01AA16  52E5               	movf	postdec1,f,c
 20486  01AA18  0012               	return		;funcret
 20487  01AA1A                     __end_of_set_vterm:
 20488                           	opt callstack 0
 20489                           
 20490 ;; *************** function _set_temp_display_help *****************
 20491 ;; Defined at:
 20492 ;;		line 211 in file "mconfig.c"
 20493 ;; Parameters:    Size  Location     Type
 20494 ;;  new_response    1  [STACK] const enum E16509
 20495 ;; Auto vars:     Size  Location     Type
 20496 ;;		None
 20497 ;; Return value:  Size  Location     Type
 20498 ;;                  1  [STACK] enum E16509
 20499 ;; Registers used:
 20500 ;;		wreg, fsr1l, fsr1h
 20501 ;; Tracked objects:
 20502 ;;		On entry : 0/2
 20503 ;;		On exit  : 3F/2
 20504 ;;		Unchanged: 0/0
 20505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20510 ;;Total ram usage:        0 bytes
 20511 ;; Hardware stack levels used:    1
 20512 ;; Hardware stack levels required when called:   15
 20513 ;; This function calls:
 20514 ;;		Nothing
 20515 ;; This function is called by:
 20516 ;;		_check_help
 20517 ;; This function uses a reentrant model
 20518 ;;
 20519                           
 20520                           	psect	text77
 20521  01AB9A                     __ptext77:
 20522                           	opt callstack 0
 20523  01AB9A                     _set_temp_display_help:
 20524                           	opt callstack 14
 20525                           
 20526                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 20527                           
 20528                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20529                           ;incstack = 0
 20530  01AB9A  0102               	movlb	2	; () banked
 20531  01AB9C  51A4               	movf	(_V+164)& (0+255),w,b	;volatile
 20532                           
 20533                           ; BSR set to: 2
 20534                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 20535                           ;stkvar	_new_response_info @ sp[(0)+-1]
 20536  01AB9E  0EFF               	movlw	-1
 20537  01ABA0  006F FF8C  F2A4    	movff	plusw1,_V+164	;volatile
 20538                           
 20539                           ; BSR set to: 2
 20540                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 20541  01ABA6  52E5               	movf	postdec1,f,c
 20542  01ABA8  0012               	return		;funcret
 20543  01ABAA                     __end_of_set_temp_display_help:
 20544                           	opt callstack 0
 20545                           
 20546 ;; *************** function _set_display_info *****************
 20547 ;; Defined at:
 20548 ;;		line 200 in file "mconfig.c"
 20549 ;; Parameters:    Size  Location     Type
 20550 ;;  new_response    1  [STACK] const enum E16509
 20551 ;; Auto vars:     Size  Location     Type
 20552 ;;		None
 20553 ;; Return value:  Size  Location     Type
 20554 ;;                  1  [STACK] enum E16994
 20555 ;; Registers used:
 20556 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 20557 ;; Tracked objects:
 20558 ;;		On entry : 0/0
 20559 ;;		On exit  : 0/0
 20560 ;;		Unchanged: 0/0
 20561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20566 ;;Total ram usage:        0 bytes
 20567 ;; Hardware stack levels used:    1
 20568 ;; Hardware stack levels required when called:   16
 20569 ;; This function calls:
 20570 ;;		_TimerDone
 20571 ;; This function is called by:
 20572 ;;		_main
 20573 ;;		_check_help
 20574 ;; This function uses a reentrant model
 20575 ;;
 20576                           
 20577                           	psect	text78
 20578  01AA1A                     __ptext78:
 20579                           	opt callstack 0
 20580  01AA1A                     _set_display_info:
 20581                           	opt callstack 14
 20582                           
 20583                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 20584                           
 20585                           ; BSR set to: 2
 20586                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20587                           ;incstack = 0
 20588  01AA1A  0E07               	movlw	7
 20589  01AA1C  6EE6               	movwf	postinc1,c
 20590  01AA1E  EC37  F0D3         	call	_TimerDone	;wreg free
 20591  01AA22  5001               	movf	btemp^0,w,c
 20592  01AA24  B4D8               	btfsc	status,2,c
 20593  01AA26  D006               	goto	l1699
 20594                           
 20595                           ;mconfig.c: 205:   old_info = V.response.info;
 20596  01AA28  0102               	movlb	2	; () banked
 20597  01AA2A  51A3               	movf	(_V+163)& (0+255),w,b	;volatile
 20598                           
 20599                           ; BSR set to: 2
 20600                           ;mconfig.c: 206:   V.response.info = new_response_info;
 20601                           ;stkvar	_new_response_info @ sp[(0)+-1]
 20602  01AA2C  0EFF               	movlw	-1
 20603  01AA2E  006F FF8C  F2A3    	movff	plusw1,_V+163	;volatile
 20604  01AA34                     l1699:
 20605                           
 20606                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 20607  01AA34  52E5               	movf	postdec1,f,c
 20608  01AA36  0012               	return		;funcret
 20609  01AA38                     __end_of_set_display_info:
 20610                           	opt callstack 0
 20611                           
 20612 ;; *************** function _mode_lamp_dim *****************
 20613 ;; Defined at:
 20614 ;;		line 13 in file "mconfig.c"
 20615 ;; Parameters:    Size  Location     Type
 20616 ;;  level           2  [STACK] const unsigned short 
 20617 ;; Auto vars:     Size  Location     Type
 20618 ;;		None
 20619 ;; Return value:  Size  Location     Type
 20620 ;;                  1  [STACK] void 
 20621 ;; Registers used:
 20622 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 20623 ;; Tracked objects:
 20624 ;;		On entry : 0/2
 20625 ;;		On exit  : 0/0
 20626 ;;		Unchanged: 0/0
 20627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20632 ;;Total ram usage:        0 bytes
 20633 ;; Hardware stack levels used:    1
 20634 ;; Hardware stack levels required when called:   16
 20635 ;; This function calls:
 20636 ;;		_PWM8_LoadDutyValue
 20637 ;; This function is called by:
 20638 ;;		_main
 20639 ;;		_check_help
 20640 ;; This function uses a reentrant model
 20641 ;;
 20642                           
 20643                           	psect	text79
 20644  01AAE2                     __ptext79:
 20645                           	opt callstack 0
 20646  01AAE2                     _mode_lamp_dim:
 20647                           	opt callstack 14
 20648                           
 20649                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 20650                           ;stkvar	_level @ sp[(0)+-2]
 20651                           
 20652                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20653                           ;incstack = 0
 20654  01AAE2  0EFE               	movlw	-2
 20655  01AAE4  006F FF8F FFE6     	movff	plusw1,postinc1
 20656  01AAEA  006F FF8F FFE6     	movff	plusw1,postinc1
 20657  01AAF0  ECB1  F0D0         	call	_PWM8_LoadDutyValue	;wreg free
 20658                           
 20659                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 20660  01AAF4  52E5               	movf	postdec1,f,c
 20661  01AAF6  52E5               	movf	postdec1,f,c
 20662  01AAF8  0012               	return		;funcret
 20663  01AAFA                     __end_of_mode_lamp_dim:
 20664                           	opt callstack 0
 20665                           
 20666 ;; *************** function _mode_lamp_bright *****************
 20667 ;; Defined at:
 20668 ;;		line 18 in file "mconfig.c"
 20669 ;; Parameters:    Size  Location     Type
 20670 ;;		None
 20671 ;; Auto vars:     Size  Location     Type
 20672 ;;		None
 20673 ;; Return value:  Size  Location     Type
 20674 ;;                  1  [STACK] void 
 20675 ;; Registers used:
 20676 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 20677 ;; Tracked objects:
 20678 ;;		On entry : 0/0
 20679 ;;		On exit  : 0/0
 20680 ;;		Unchanged: 0/0
 20681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20686 ;;Total ram usage:        0 bytes
 20687 ;; Hardware stack levels used:    1
 20688 ;; Hardware stack levels required when called:   16
 20689 ;; This function calls:
 20690 ;;		_PWM8_LoadDutyValue
 20691 ;; This function is called by:
 20692 ;;		_check_help
 20693 ;; This function uses a reentrant model
 20694 ;;
 20695                           
 20696                           	psect	text80
 20697  01ABB8                     __ptext80:
 20698                           	opt callstack 0
 20699  01ABB8                     _mode_lamp_bright:
 20700                           	opt callstack 13
 20701                           
 20702                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 20703                           
 20704                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20705                           ;incstack = 0
 20706  01ABB8  0E2C               	movlw	44
 20707  01ABBA  6EE6               	movwf	postinc1,c
 20708  01ABBC  0E01               	movlw	1
 20709  01ABBE  6EE6               	movwf	postinc1,c
 20710  01ABC0  ECB1  F0D0         	call	_PWM8_LoadDutyValue	;wreg free
 20711                           
 20712                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 20713  01ABC4  0012               	return		;funcret
 20714  01ABC6                     __end_of_mode_lamp_bright:
 20715                           	opt callstack 0
 20716                           
 20717 ;; *************** function _PWM8_LoadDutyValue *****************
 20718 ;; Defined at:
 20719 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 20720 ;; Parameters:    Size  Location     Type
 20721 ;;  dutyValue       2  [STACK] unsigned short 
 20722 ;; Auto vars:     Size  Location     Type
 20723 ;;		None
 20724 ;; Return value:  Size  Location     Type
 20725 ;;                  1  [STACK] void 
 20726 ;; Registers used:
 20727 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 20728 ;; Tracked objects:
 20729 ;;		On entry : 0/2
 20730 ;;		On exit  : 0/0
 20731 ;;		Unchanged: 0/0
 20732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20737 ;;Total ram usage:        0 bytes
 20738 ;; Hardware stack levels used:    1
 20739 ;; Hardware stack levels required when called:   15
 20740 ;; This function calls:
 20741 ;;		Nothing
 20742 ;; This function is called by:
 20743 ;;		_mode_lamp_dim
 20744 ;;		_mode_lamp_bright
 20745 ;; This function uses a reentrant model
 20746 ;;
 20747                           
 20748                           	psect	text81
 20749  01A162                     __ptext81:
 20750                           	opt callstack 0
 20751  01A162                     _PWM8_LoadDutyValue:
 20752                           	opt callstack 14
 20753                           
 20754                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 20755                           ;stkvar	_dutyValue @ sp[(0)+-2]
 20756                           
 20757                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20758                           ;incstack = 0
 20759  01A162  0EFE               	movlw	-2
 20760  01A164  006F FF8C  F00B    	movff	plusw1,btemp+10
 20761  01A16A  0EFF               	movlw	-1
 20762  01A16C  006F FF8C  F00C    	movff	plusw1,btemp+11
 20763  01A172  90D8               	bcf	status,0,c
 20764  01A174  320C               	rrcf	(btemp+11)^0,f,c
 20765  01A176  320B               	rrcf	(btemp+10)^0,f,c
 20766  01A178  90D8               	bcf	status,0,c
 20767  01A17A  320C               	rrcf	(btemp+11)^0,f,c
 20768  01A17C  320B               	rrcf	(btemp+10)^0,f,c
 20769  01A17E  500B               	movf	(btemp+10)^0,w,c
 20770  01A180  6E61               	movwf	97,c	;volatile
 20771                           
 20772                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 20773                           ;stkvar	_dutyValue @ sp[(0)+-2]
 20774  01A182  0EFE               	movlw	-2
 20775  01A184  006F FF8C  F00C    	movff	plusw1,btemp+11
 20776  01A18A  0E03               	movlw	3
 20777  01A18C  160C               	andwf	(btemp+11)^0,f,c
 20778  01A18E  0E06               	movlw	6
 20779  01A190  6E01               	movwf	btemp^0,c
 20780  01A192                     u8645:
 20781  01A192  90D8               	bcf	status,0,c
 20782  01A194  360C               	rlcf	(btemp+11)^0,f,c
 20783  01A196  2E01               	decfsz	btemp^0,f,c
 20784  01A198  D7FC               	goto	u8645
 20785  01A19A  500C               	movf	(btemp+11)^0,w,c
 20786  01A19C  6E60               	movwf	96,c	;volatile
 20787                           
 20788                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 20789  01A19E  52E5               	movf	postdec1,f,c
 20790  01A1A0  52E5               	movf	postdec1,f,c
 20791  01A1A2  0012               	return		;funcret
 20792  01A1A4                     __end_of_PWM8_LoadDutyValue:
 20793                           	opt callstack 0
 20794                           
 20795 ;; *************** function _help_button *****************
 20796 ;; Defined at:
 20797 ;;		line 26 in file "mconfig.c"
 20798 ;; Parameters:    Size  Location     Type
 20799 ;;		None
 20800 ;; Auto vars:     Size  Location     Type
 20801 ;;		None
 20802 ;; Return value:  Size  Location     Type
 20803 ;;                  1  [STACK] _Bool 
 20804 ;; Registers used:
 20805 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 20806 ;; Tracked objects:
 20807 ;;		On entry : 0/2
 20808 ;;		On exit  : 0/0
 20809 ;;		Unchanged: 0/0
 20810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20814 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20815 ;;Total ram usage:        0 bytes
 20816 ;; Hardware stack levels used:    1
 20817 ;; Hardware stack levels required when called:   16
 20818 ;; This function calls:
 20819 ;;		_StartTimer
 20820 ;;		_TimerDone
 20821 ;; This function is called by:
 20822 ;;		_check_help
 20823 ;; This function uses a reentrant model
 20824 ;;
 20825                           
 20826                           	psect	text82
 20827  01A2E2                     __ptext82:
 20828                           	opt callstack 0
 20829  01A2E2                     _help_button:
 20830                           	opt callstack 13
 20831                           
 20832                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 20833                           
 20834                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20835                           ;incstack = 0
 20836  01A2E2  B0CB               	btfsc	203,0,c	;volatile
 20837  01A2E4  D00C               	goto	l1642
 20838                           
 20839                           ;mconfig.c: 29:   V.help = 1;
 20840  01A2E6  0102               	movlb	2	; () banked
 20841  01A2E8  859B               	bsf	(_V+155)& (0+255),2,b	;volatile
 20842                           
 20843                           ; BSR set to: 2
 20844                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 20845  01A2EA  0E08               	movlw	8
 20846  01A2EC  6EE6               	movwf	postinc1,c
 20847  01A2EE  EC37  F0D3         	call	_TimerDone	;wreg free
 20848  01A2F2  5001               	movf	btemp^0,w,c
 20849  01A2F4  B4D8               	btfsc	status,2,c
 20850  01A2F6  D003               	goto	l1642
 20851                           
 20852                           ;mconfig.c: 31:    return 1;
 20853  01A2F8  0E01               	movlw	1
 20854  01A2FA  6E01               	movwf	btemp^0,c
 20855  01A2FC  0012               	return	
 20856  01A2FE                     l1642:
 20857                           
 20858                           ;mconfig.c: 34:  if (!V.help)
 20859  01A2FE  0102               	movlb	2	; () banked
 20860  01A300  B59B               	btfsc	(_V+155)& (0+255),2,b	;volatile
 20861  01A302  D008               	goto	l9796
 20862                           
 20863                           ; BSR set to: 2
 20864                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 20865  01A304  0E2C               	movlw	44
 20866  01A306  6EE6               	movwf	postinc1,c
 20867  01A308  0E01               	movlw	1
 20868  01A30A  6EE6               	movwf	postinc1,c
 20869  01A30C  0E08               	movlw	8
 20870  01A30E  6EE6               	movwf	postinc1,c
 20871  01A310  ECD2  F0D0         	call	_StartTimer	;wreg free
 20872  01A314                     l9796:
 20873                           
 20874                           ;mconfig.c: 37:  return 0;
 20875  01A314  0E00               	movlw	0
 20876  01A316  6E01               	movwf	btemp^0,c
 20877                           
 20878                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 20879  01A318  0012               	return		;funcret
 20880  01A31A                     __end_of_help_button:
 20881                           	opt callstack 0
 20882                           
 20883 ;; *************** function _TimerDone *****************
 20884 ;; Defined at:
 20885 ;;		line 20 in file "timers.c"
 20886 ;; Parameters:    Size  Location     Type
 20887 ;;  timer           1  [STACK] const unsigned char 
 20888 ;; Auto vars:     Size  Location     Type
 20889 ;;		None
 20890 ;; Return value:  Size  Location     Type
 20891 ;;                  1  [STACK] _Bool 
 20892 ;; Registers used:
 20893 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 20894 ;; Tracked objects:
 20895 ;;		On entry : 0/0
 20896 ;;		On exit  : 0/0
 20897 ;;		Unchanged: 0/0
 20898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20903 ;;Total ram usage:        0 bytes
 20904 ;; Hardware stack levels used:    1
 20905 ;; Hardware stack levels required when called:   15
 20906 ;; This function calls:
 20907 ;;		Nothing
 20908 ;; This function is called by:
 20909 ;;		_main
 20910 ;;		_WaitMs
 20911 ;;		_help_button
 20912 ;;		_check_help
 20913 ;;		_set_display_info
 20914 ;; This function uses a reentrant model
 20915 ;;
 20916                           
 20917                           	psect	text83
 20918  01A66E                     __ptext83:
 20919                           	opt callstack 0
 20920  01A66E                     _TimerDone:
 20921                           	opt callstack 14
 20922                           
 20923                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20924                           ;incstack = 0
 20925  01A66E  0004               	clrwdt		;# 
 20926                           
 20927                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 20928                           ;stkvar	_timer @ sp[(0)+-1]
 20929  01A670  0EFF               	movlw	-1
 20930  01A672  50E3               	movf	plusw1,w,c
 20931  01A674  0D02               	mullw	2
 20932  01A676  0EE5               	movlw	low _tickCount
 20933  01A678  24F3               	addwf	243,w,c
 20934  01A67A  6ED9               	movwf	fsr2l,c
 20935  01A67C  0E02               	movlw	high _tickCount
 20936  01A67E  20F4               	addwfc	prodh,w,c
 20937  01A680  6EDA               	movwf	fsr2h,c
 20938  01A682  50DE               	movf	postinc2,w,c
 20939  01A684  10DE               	iorwf	postinc2,w,c
 20940  01A686  A4D8               	btfss	status,2,c
 20941  01A688  D002               	goto	l9118
 20942                           
 20943                           ;timers.c: 24:   return 1;
 20944  01A68A  0E01               	movlw	1
 20945  01A68C  D001               	goto	L22
 20946  01A68E                     l9118:
 20947                           
 20948                           ;timers.c: 26:  return 0;
 20949  01A68E  0E00               	movlw	0
 20950  01A690                     L22:
 20951  01A690  6E01               	movwf	btemp^0,c
 20952                           
 20953                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 20954  01A692  52E5               	movf	postdec1,f,c
 20955  01A694  0012               	return		;funcret
 20956  01A696                     __end_of_TimerDone:
 20957                           	opt callstack 0
 20958                           
 20959 ;; *************** function _StartTimer *****************
 20960 ;; Defined at:
 20961 ;;		line 12 in file "timers.c"
 20962 ;; Parameters:    Size  Location     Type
 20963 ;;  timer           1  [STACK] const unsigned char 
 20964 ;;  count           2  [STACK] const unsigned short 
 20965 ;; Auto vars:     Size  Location     Type
 20966 ;;		None
 20967 ;; Return value:  Size  Location     Type
 20968 ;;                  1  [STACK] void 
 20969 ;; Registers used:
 20970 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 20971 ;; Tracked objects:
 20972 ;;		On entry : 0/0
 20973 ;;		On exit  : 0/0
 20974 ;;		Unchanged: 0/0
 20975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20980 ;;Total ram usage:        0 bytes
 20981 ;; Hardware stack levels used:    1
 20982 ;; Hardware stack levels required when called:   15
 20983 ;; This function calls:
 20984 ;;		Nothing
 20985 ;; This function is called by:
 20986 ;;		_main
 20987 ;;		_WaitMs
 20988 ;;		_help_button
 20989 ;;		_check_help
 20990 ;;		_calc_bsoc
 20991 ;; This function uses a reentrant model
 20992 ;;
 20993                           
 20994                           	psect	text84
 20995  01A1A4                     __ptext84:
 20996                           	opt callstack 0
 20997  01A1A4                     _StartTimer:
 20998                           	opt callstack 0
 20999                           
 21000                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 21001                           ;stkvar	_count @ sp[(0)+-3]
 21002                           
 21003                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21004                           ;incstack = 0
 21005 ;; hardware stack exceeded
 21006  01A1A4  0EFD               	movlw	-3
 21007  01A1A6  006F FF8C  F00B    	movff	plusw1,btemp+10
 21008  01A1AC  0EFE               	movlw	-2
 21009  01A1AE  006F FF8C  F00C    	movff	plusw1,btemp+11
 21010  01A1B4  90D8               	bcf	status,0,c
 21011  01A1B6  340B               	rlcf	(btemp+10)^0,w,c
 21012  01A1B8  6E09               	movwf	(btemp+8)^0,c
 21013  01A1BA  340C               	rlcf	(btemp+11)^0,w,c
 21014  01A1BC  6E0A               	movwf	(btemp+9)^0,c
 21015                           
 21016                           ;stkvar	_timer @ sp[(0)+-1]
 21017  01A1BE  0EFF               	movlw	-1
 21018  01A1C0  50E3               	movf	plusw1,w,c
 21019  01A1C2  0D02               	mullw	2
 21020  01A1C4  0EE5               	movlw	low _tickCount
 21021  01A1C6  24F3               	addwf	243,w,c
 21022  01A1C8  6ED9               	movwf	fsr2l,c
 21023  01A1CA  0E02               	movlw	high _tickCount
 21024  01A1CC  20F4               	addwfc	prodh,w,c
 21025  01A1CE  6EDA               	movwf	fsr2h,c
 21026  01A1D0  0060  F027  FFDE   	movff	btemp+8,postinc2
 21027  01A1D6  0060  F02B  FFDD   	movff	btemp+9,postdec2
 21028                           
 21029                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 21030  01A1DC  52E5               	movf	postdec1,f,c
 21031  01A1DE  52E5               	movf	postdec1,f,c
 21032  01A1E0  52E5               	movf	postdec1,f,c
 21033  01A1E2  0012               	return		;funcret
 21034  01A1E4                     __end_of_StartTimer:
 21035                           	opt callstack 0
 21036                           
 21037 ;; *************** function _display_info *****************
 21038 ;; Defined at:
 21039 ;;		line 190 in file "mconfig.c"
 21040 ;; Parameters:    Size  Location     Type
 21041 ;;		None
 21042 ;; Auto vars:     Size  Location     Type
 21043 ;;		None
 21044 ;; Return value:  Size  Location     Type
 21045 ;;                  1  [STACK] enum E16509
 21046 ;; Registers used:
 21047 ;;		btemp
 21048 ;; Tracked objects:
 21049 ;;		On entry : 0/2
 21050 ;;		On exit  : 0/0
 21051 ;;		Unchanged: 0/0
 21052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21057 ;;Total ram usage:        0 bytes
 21058 ;; Hardware stack levels used:    1
 21059 ;; Hardware stack levels required when called:   15
 21060 ;; This function calls:
 21061 ;;		Nothing
 21062 ;; This function is called by:
 21063 ;;		_check_help
 21064 ;; This function uses a reentrant model
 21065 ;;
 21066                           
 21067                           	psect	text85
 21068  01AC26                     __ptext85:
 21069                           	opt callstack 0
 21070  01AC26                     _display_info:
 21071                           	opt callstack 14
 21072                           
 21073                           ;mconfig.c: 192:  return V.response.info;
 21074                           
 21075                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21076                           ;incstack = 0
 21077  01AC26  0060  FA8C  F001   	movff	_V+163,btemp	;volatile
 21078                           
 21079                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 21080  01AC2C  0012               	return		;funcret
 21081  01AC2E                     __end_of_display_info:
 21082                           	opt callstack 0
 21083                           
 21084 ;; *************** function _display_help *****************
 21085 ;; Defined at:
 21086 ;;		line 195 in file "mconfig.c"
 21087 ;; Parameters:    Size  Location     Type
 21088 ;;		None
 21089 ;; Auto vars:     Size  Location     Type
 21090 ;;		None
 21091 ;; Return value:  Size  Location     Type
 21092 ;;                  1  [STACK] enum E16509
 21093 ;; Registers used:
 21094 ;;		btemp
 21095 ;; Tracked objects:
 21096 ;;		On entry : 3F/2
 21097 ;;		On exit  : 0/0
 21098 ;;		Unchanged: 0/0
 21099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21104 ;;Total ram usage:        0 bytes
 21105 ;; Hardware stack levels used:    1
 21106 ;; Hardware stack levels required when called:   15
 21107 ;; This function calls:
 21108 ;;		Nothing
 21109 ;; This function is called by:
 21110 ;;		_check_help
 21111 ;; This function uses a reentrant model
 21112 ;;
 21113                           
 21114                           	psect	text86
 21115  01AC2E                     __ptext86:
 21116                           	opt callstack 0
 21117  01AC2E                     _display_help:
 21118                           	opt callstack 14
 21119                           
 21120                           ;mconfig.c: 197:  return V.response.help_temp;
 21121                           
 21122                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21123                           ;incstack = 0
 21124  01AC2E  0060  FA90  F001   	movff	_V+164,btemp	;volatile
 21125                           
 21126                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 21127  01AC34  0012               	return		;funcret
 21128  01AC36                     __end_of_display_help:
 21129                           	opt callstack 0
 21130                           
 21131 ;; *************** function _check_enter_button *****************
 21132 ;; Defined at:
 21133 ;;		line 42 in file "hid.c"
 21134 ;; Parameters:    Size  Location     Type
 21135 ;;  h               1  [STACK] PTR struct H_data
 21136 ;;		 -> H(7), 
 21137 ;; Auto vars:     Size  Location     Type
 21138 ;;		None
 21139 ;; Return value:  Size  Location     Type
 21140 ;;                  1  [STACK] _Bool 
 21141 ;; Registers used:
 21142 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 21143 ;; Tracked objects:
 21144 ;;		On entry : 0/0
 21145 ;;		On exit  : 0/0
 21146 ;;		Unchanged: 0/0
 21147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21151 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21152 ;;Total ram usage:        0 bytes
 21153 ;; Hardware stack levels used:    1
 21154 ;; Hardware stack levels required when called:   15
 21155 ;; This function calls:
 21156 ;;		Nothing
 21157 ;; This function is called by:
 21158 ;;		_main
 21159 ;; This function uses a reentrant model
 21160 ;;
 21161                           
 21162                           	psect	text87
 21163  01A1E4                     __ptext87:
 21164                           	opt callstack 0
 21165  01A1E4                     _check_enter_button:
 21166                           	opt callstack 15
 21167                           
 21168                           ;hid.c: 42: _Bool check_enter_button(H_data* h);hid.c: 43: {;hid.c: 44:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 21169                           ;stkvar	_h @ sp[(0)+-1]
 21170                           
 21171                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21172                           ;incstack = 0
 21173  01A1E4  0EFF               	movlw	-1
 21174  01A1E6  50E3               	movf	plusw1,w,c
 21175  01A1E8  6ED9               	movwf	fsr2l,c
 21176  01A1EA  6ADA               	clrf	fsr2h,c
 21177  01A1EC  0E04               	movlw	4
 21178  01A1EE  26D9               	addwf	fsr2l,f,c
 21179  01A1F0  50DF               	movf	indf2,w,c
 21180  01A1F2  A4D8               	btfss	status,2,c
 21181  01A1F4  D013               	goto	l10428
 21182                           
 21183                           ;stkvar	_h @ sp[(0)+-1]
 21184  01A1F6  0EFF               	movlw	-1
 21185  01A1F8  50E3               	movf	plusw1,w,c
 21186  01A1FA  6ED9               	movwf	fsr2l,c
 21187  01A1FC  6ADA               	clrf	fsr2h,c
 21188  01A1FE  0E05               	movlw	5
 21189  01A200  26D9               	addwf	fsr2l,f,c
 21190  01A202  50DF               	movf	indf2,w,c
 21191  01A204  A4D8               	btfss	status,2,c
 21192  01A206  D00A               	goto	l10428
 21193                           
 21194                           ;hid.c: 45:   h->wait_enter = 1;
 21195                           ;stkvar	_h @ sp[(0)+-1]
 21196  01A208  0EFF               	movlw	-1
 21197  01A20A  50E3               	movf	plusw1,w,c
 21198  01A20C  6ED9               	movwf	fsr2l,c
 21199  01A20E  6ADA               	clrf	fsr2h,c
 21200  01A210  0E04               	movlw	4
 21201  01A212  26D9               	addwf	fsr2l,f,c
 21202  01A214  0E01               	movlw	1
 21203  01A216  6EDF               	movwf	indf2,c
 21204                           
 21205                           ;hid.c: 46:   return 1;
 21206  01A218  0E01               	movlw	1
 21207  01A21A  D001               	goto	L23
 21208  01A21C                     l10428:
 21209                           
 21210                           ;hid.c: 48:  return 0;
 21211  01A21C  0E00               	movlw	0
 21212  01A21E                     L23:
 21213  01A21E  6E01               	movwf	btemp^0,c
 21214                           
 21215                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 21216  01A220  52E5               	movf	postdec1,f,c
 21217  01A222  0012               	return		;funcret
 21218  01A224                     __end_of_check_enter_button:
 21219                           	opt callstack 0
 21220                           
 21221 ;; *************** function _check_adc_scan *****************
 21222 ;; Defined at:
 21223 ;;		line 55 in file "daq.c"
 21224 ;; Parameters:    Size  Location     Type
 21225 ;;		None
 21226 ;; Auto vars:     Size  Location     Type
 21227 ;;		None
 21228 ;; Return value:  Size  Location     Type
 21229 ;;                  1  [STACK] _Bool 
 21230 ;; Registers used:
 21231 ;;		btemp
 21232 ;; Tracked objects:
 21233 ;;		On entry : 0/0
 21234 ;;		On exit  : 0/0
 21235 ;;		Unchanged: 0/0
 21236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21241 ;;Total ram usage:        0 bytes
 21242 ;; Hardware stack levels used:    1
 21243 ;; Hardware stack levels required when called:   15
 21244 ;; This function calls:
 21245 ;;		Nothing
 21246 ;; This function is called by:
 21247 ;;		_main
 21248 ;; This function uses a reentrant model
 21249 ;;
 21250                           
 21251                           	psect	text88
 21252  01AC36                     __ptext88:
 21253                           	opt callstack 0
 21254  01AC36                     _check_adc_scan:
 21255                           	opt callstack 15
 21256                           
 21257                           ;daq.c: 57:  return R.done;
 21258                           
 21259                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21260                           ;incstack = 0
 21261  01AC36  0060  F3B4  F001   	movff	_R+39,btemp	;volatile
 21262                           
 21263                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 21264  01AC3C  0012               	return		;funcret
 21265  01AC3E                     __end_of_check_adc_scan:
 21266                           	opt callstack 0
 21267                           
 21268 ;; *************** function _calc_ror_data *****************
 21269 ;; Defined at:
 21270 ;;		line 87 in file "mbmc.c"
 21271 ;; Parameters:    Size  Location     Type
 21272 ;;		None
 21273 ;; Auto vars:     Size  Location     Type
 21274 ;;		None
 21275 ;; Return value:  Size  Location     Type
 21276 ;;                  1  [STACK] void 
 21277 ;; Registers used:
 21278 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 21279 ;; Tracked objects:
 21280 ;;		On entry : 0/39
 21281 ;;		On exit  : 0/0
 21282 ;;		Unchanged: 0/0
 21283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21287 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21288 ;;Total ram usage:        0 bytes
 21289 ;; Hardware stack levels used:    1
 21290 ;; Hardware stack levels required when called:   18
 21291 ;; This function calls:
 21292 ;;		___flge
 21293 ;;		___flsub
 21294 ;;		_conv_raw_result
 21295 ;;		_fabsf
 21296 ;; This function is called by:
 21297 ;;		_main
 21298 ;; This function uses a reentrant model
 21299 ;;
 21300                           
 21301                           	psect	text89
 21302  01790A                     __ptext89:
 21303                           	opt callstack 0
 21304  01790A                     _calc_ror_data:
 21305                           	opt callstack 12
 21306                           
 21307                           ;mbmc.c: 89:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 91:  C.bc_ror = fabsf(conv_
      +                          raw_result(C_BATT, CONV) - bcror);
 21308                           
 21309                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21310                           ;incstack = 0
 21311  01790A  0060  F203  FFE6   	movff	calc_ror_data@bcror,postinc1
 21312  017910  0060  F207  FFE6   	movff	calc_ror_data@bcror+1,postinc1
 21313  017916  0060  F20B  FFE6   	movff	calc_ror_data@bcror+2,postinc1
 21314  01791C  0060  F20F  FFE6   	movff	calc_ror_data@bcror+3,postinc1
 21315  017922  0E00               	movlw	0
 21316  017924  6EE6               	movwf	postinc1,c
 21317  017926  0E00               	movlw	0
 21318  017928  6EE6               	movwf	postinc1,c
 21319  01792A  ECF8  F0A3         	call	_conv_raw_result	;wreg free
 21320  01792E  0060  F007  FFE6   	movff	btemp,postinc1
 21321  017934  0060  F00B  FFE6   	movff	btemp+1,postinc1
 21322  01793A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 21323  017940  0060  F013  FFE6   	movff	btemp+3,postinc1
 21324  017946  EC03  F0D0         	call	___flsub	;wreg free
 21325  01794A  0060  F007  FFE6   	movff	btemp,postinc1
 21326  017950  0060  F00B  FFE6   	movff	btemp+1,postinc1
 21327  017956  0060  F00F  FFE6   	movff	btemp+2,postinc1
 21328  01795C  0060  F013  FFE6   	movff	btemp+3,postinc1
 21329  017962  ECBB  F0C8         	call	_fabsf	;wreg free
 21330  017966  0060  F004  F16C   	movff	btemp,_C+108	;volatile
 21331  01796C  0060  F008  F16D   	movff	btemp+1,_C+109	;volatile
 21332  017972  0060  F00C  F16E   	movff	btemp+2,_C+110	;volatile
 21333  017978  0060  F010  F16F   	movff	btemp+3,_C+111	;volatile
 21334                           
 21335                           ;mbmc.c: 92:  bcror = conv_raw_result(C_BATT, CONV);
 21336  01797E  0E00               	movlw	0
 21337  017980  6EE6               	movwf	postinc1,c
 21338  017982  0E00               	movlw	0
 21339  017984  6EE6               	movwf	postinc1,c
 21340  017986  ECF8  F0A3         	call	_conv_raw_result	;wreg free
 21341  01798A  0060  F004  F080   	movff	btemp,calc_ror_data@bcror
 21342  017990  0060  F008  F081   	movff	btemp+1,calc_ror_data@bcror+1
 21343  017996  0060  F00C  F082   	movff	btemp+2,calc_ror_data@bcror+2
 21344  01799C  0060  F010  F083   	movff	btemp+3,calc_ror_data@bcror+3
 21345                           
 21346                           ;mbmc.c: 93:  C.bv_ror = fabsf(conv_raw_result(V_BAT, CONV) - bvror);
 21347  0179A2  0060  F213  FFE6   	movff	calc_ror_data@bvror,postinc1
 21348  0179A8  0060  F217  FFE6   	movff	calc_ror_data@bvror+1,postinc1
 21349  0179AE  0060  F21B  FFE6   	movff	calc_ror_data@bvror+2,postinc1
 21350  0179B4  0060  F21F  FFE6   	movff	calc_ror_data@bvror+3,postinc1
 21351  0179BA  0E00               	movlw	0
 21352  0179BC  6EE6               	movwf	postinc1,c
 21353  0179BE  0E04               	movlw	4
 21354  0179C0  6EE6               	movwf	postinc1,c
 21355  0179C2  ECF8  F0A3         	call	_conv_raw_result	;wreg free
 21356  0179C6  0060  F007  FFE6   	movff	btemp,postinc1
 21357  0179CC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 21358  0179D2  0060  F00F  FFE6   	movff	btemp+2,postinc1
 21359  0179D8  0060  F013  FFE6   	movff	btemp+3,postinc1
 21360  0179DE  EC03  F0D0         	call	___flsub	;wreg free
 21361  0179E2  0060  F007  FFE6   	movff	btemp,postinc1
 21362  0179E8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 21363  0179EE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 21364  0179F4  0060  F013  FFE6   	movff	btemp+3,postinc1
 21365  0179FA  ECBB  F0C8         	call	_fabsf	;wreg free
 21366  0179FE  0060  F004  F168   	movff	btemp,_C+104	;volatile
 21367  017A04  0060  F008  F169   	movff	btemp+1,_C+105	;volatile
 21368  017A0A  0060  F00C  F16A   	movff	btemp+2,_C+106	;volatile
 21369  017A10  0060  F010  F16B   	movff	btemp+3,_C+107	;volatile
 21370                           
 21371                           ;mbmc.c: 94:  if (C.bv_ror < 0.0001)
 21372  017A16  0E17               	movlw	23
 21373  017A18  6EE6               	movwf	postinc1,c
 21374  017A1A  0EB7               	movlw	183
 21375  017A1C  6EE6               	movwf	postinc1,c
 21376  017A1E  0ED1               	movlw	209
 21377  017A20  6EE6               	movwf	postinc1,c
 21378  017A22  0E38               	movlw	56
 21379  017A24  6EE6               	movwf	postinc1,c
 21380  017A26  0060  F5A3  FFE6   	movff	_C+104,postinc1
 21381  017A2C  0060  F5A7  FFE6   	movff	_C+105,postinc1
 21382  017A32  0060  F5AB  FFE6   	movff	_C+106,postinc1
 21383  017A38  0060  F5AF  FFE6   	movff	_C+107,postinc1
 21384  017A3E  ECB0  F0BE         	call	___flge	;wreg free
 21385  017A42  B001               	btfsc	btemp& (0+255),0,c
 21386  017A44  D009               	goto	l10264
 21387                           
 21388                           ;mbmc.c: 95:   C.bv_ror = 0.0051;
 21389  017A46  0EE7               	movlw	231
 21390  017A48  0101               	movlb	1	; () banked
 21391  017A4A  6F68               	movwf	(_C+104)& (0+255),b	;volatile
 21392  017A4C  0E1D               	movlw	29
 21393  017A4E  6F69               	movwf	(_C+105)& (0+255),b	;volatile
 21394  017A50  0EA7               	movlw	167
 21395  017A52  6F6A               	movwf	(_C+106)& (0+255),b	;volatile
 21396  017A54  0E3B               	movlw	59
 21397  017A56  6F6B               	movwf	(_C+107)& (0+255),b	;volatile
 21398  017A58                     l10264:
 21399                           
 21400                           ;mbmc.c: 96:  bvror = conv_raw_result(V_BAT, CONV);
 21401  017A58  0E00               	movlw	0
 21402  017A5A  6EE6               	movwf	postinc1,c
 21403  017A5C  0E04               	movlw	4
 21404  017A5E  6EE6               	movwf	postinc1,c
 21405  017A60  ECF8  F0A3         	call	_conv_raw_result	;wreg free
 21406  017A64  0060  F004  F084   	movff	btemp,calc_ror_data@bvror
 21407  017A6A  0060  F008  F085   	movff	btemp+1,calc_ror_data@bvror+1
 21408  017A70  0060  F00C  F086   	movff	btemp+2,calc_ror_data@bvror+2
 21409  017A76  0060  F010  F087   	movff	btemp+3,calc_ror_data@bvror+3
 21410                           
 21411                           ; _calc_ror_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 21412  017A7C  0012               	return		;funcret
 21413  017A7E                     __end_of_calc_ror_data:
 21414                           	opt callstack 0
 21415                           
 21416 ;; *************** function _fabsf *****************
 21417 ;; Defined at:
 21418 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fabsf.c"
 21419 ;; Parameters:    Size  Location     Type
 21420 ;;  x               4  [STACK] float 
 21421 ;; Auto vars:     Size  Location     Type
 21422 ;;  u               4  [STACK] struct .
 21423 ;; Return value:  Size  Location     Type
 21424 ;;                  4  [STACK] float 
 21425 ;; Registers used:
 21426 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 21427 ;; Tracked objects:
 21428 ;;		On entry : 0/39
 21429 ;;		On exit  : 0/0
 21430 ;;		Unchanged: 0/0
 21431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21436 ;;Total ram usage:        0 bytes
 21437 ;; Hardware stack levels used:    1
 21438 ;; Hardware stack levels required when called:   15
 21439 ;; This function calls:
 21440 ;;		Nothing
 21441 ;; This function is called by:
 21442 ;;		_calc_ror_data
 21443 ;; This function uses a reentrant model
 21444 ;;
 21445                           
 21446                           	psect	text90
 21447  019176                     __ptext90:
 21448                           	opt callstack 0
 21449  019176                     _fabsf:
 21450                           	opt callstack 0
 21451                           
 21452                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21453  019176  52E6               	movf	postinc1,f,c
 21454  019178  52E6               	movf	postinc1,f,c
 21455  01917A  52E6               	movf	postinc1,f,c
 21456  01917C  52E6               	movf	postinc1,f,c
 21457                           
 21458                           ;incstack = 0
 21459  01917E  0060  F1E0  F009   	movff	fabsf@F463,btemp+8
 21460  019184  0060  F1E4  F00A   	movff	fabsf@F463+1,btemp+9
 21461  01918A  0060  F1E8  F00B   	movff	fabsf@F463+2,btemp+10
 21462  019190  0060  F1EC  F00C   	movff	fabsf@F463+3,btemp+11
 21463                           
 21464                           ;stkvar	_u @ sp[(-4)+0]
 21465  019196  0EFC               	movlw	-4
 21466  019198  0060  F027  FFE3   	movff	btemp+8,plusw1
 21467  01919E  0EFD               	movlw	-3
 21468  0191A0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 21469  0191A6  0EFE               	movlw	-2
 21470  0191A8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21471  0191AE  0EFF               	movlw	-1
 21472  0191B0  0060  F033  FFE3   	movff	btemp+11,plusw1
 21473                           
 21474                           ;stkvar	_x @ sp[(-4)+-4]
 21475  0191B6  0EF8               	movlw	-8
 21476  0191B8  006F FF8C  F009    	movff	plusw1,btemp+8
 21477  0191BE  0EF9               	movlw	-7
 21478  0191C0  006F FF8C  F00A    	movff	plusw1,btemp+9
 21479  0191C6  0EFA               	movlw	-6
 21480  0191C8  006F FF8C  F00B    	movff	plusw1,btemp+10
 21481  0191CE  0EFB               	movlw	-5
 21482  0191D0  006F FF8C  F00C    	movff	plusw1,btemp+11
 21483                           
 21484                           ;stkvar	_u @ sp[(-4)+0]
 21485  0191D6  0EFC               	movlw	-4
 21486  0191D8  0060  F027  FFE3   	movff	btemp+8,plusw1
 21487  0191DE  0EFD               	movlw	-3
 21488  0191E0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 21489  0191E6  0EFE               	movlw	-2
 21490  0191E8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21491  0191EE  0EFF               	movlw	-1
 21492  0191F0  0060  F033  FFE3   	movff	btemp+11,plusw1
 21493                           
 21494                           ;stkvar	_u @ sp[(-4)+0]
 21495  0191F6  0EFF               	movlw	-1
 21496  0191F8  9EE3               	bcf	plusw1,7,c
 21497                           
 21498                           ;stkvar	_u @ sp[(-4)+0]
 21499  0191FA  0EFC               	movlw	-4
 21500  0191FC  006F FF8C  F001    	movff	plusw1,btemp
 21501  019202  0EFD               	movlw	-3
 21502  019204  006F FF8C  F002    	movff	plusw1,btemp+1
 21503  01920A  0EFE               	movlw	-2
 21504  01920C  006F FF8C  F003    	movff	plusw1,btemp+2
 21505  019212  0EFF               	movlw	-1
 21506  019214  006F FF8C  F004    	movff	plusw1,btemp+3
 21507                           
 21508                           ; _fabsf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 21509  01921A  0EF8               	movlw	248
 21510  01921C  26E1               	addwf	fsr1l,f,c
 21511  01921E  0EFF               	movlw	255
 21512  019220  22E2               	addwfc	fsr1h,f,c
 21513  019222  0012               	return		;funcret
 21514  019224                     __end_of_fabsf:
 21515                           	opt callstack 0
 21516                           
 21517 ;; *************** function _conv_raw_result *****************
 21518 ;; Defined at:
 21519 ;;		line 95 in file "daq.c"
 21520 ;; Parameters:    Size  Location     Type
 21521 ;;  chan            1  [STACK] const enum E16581
 21522 ;;  to_what         1  [STACK] const enum E16643
 21523 ;; Auto vars:     Size  Location     Type
 21524 ;;		None
 21525 ;; Return value:  Size  Location     Type
 21526 ;;                  4  [STACK] float 
 21527 ;; Registers used:
 21528 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 21529 ;; Tracked objects:
 21530 ;;		On entry : 0/1
 21531 ;;		On exit  : 0/0
 21532 ;;		Unchanged: 0/0
 21533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21537 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21538 ;;Total ram usage:        0 bytes
 21539 ;; Hardware stack levels used:    1
 21540 ;; Hardware stack levels required when called:   17
 21541 ;; This function calls:
 21542 ;;		___fldiv
 21543 ;;		___flmul
 21544 ;;		___flsub
 21545 ;;		___xxtofl
 21546 ;;		_get_raw_result
 21547 ;;		_nanf
 21548 ;; This function is called by:
 21549 ;;		_convert_adc_data
 21550 ;;		_calc_ror_data
 21551 ;;		_init_bsoc
 21552 ;; This function uses a reentrant model
 21553 ;;
 21554                           
 21555                           	psect	text91
 21556  0147F0                     __ptext91:
 21557                           	opt callstack 0
 21558  0147F0                     _conv_raw_result:
 21559                           	opt callstack 12
 21560                           
 21561                           ;daq.c: 95: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);d
      +                          aq.c: 96: {;daq.c: 98:  switch (to_what) {
 21562                           
 21563                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21564                           ;incstack = 0
 21565  0147F0  D242               	goto	l9886
 21566  0147F2                     l9832:
 21567                           
 21568                           ;daq.c: 100:   if (!(0b0011110001110111 >> chan & 0x1))
 21569                           ;stkvar	_chan @ sp[(0)+-1]
 21570  0147F2  0EFF               	movlw	-1
 21571  0147F4  006F FF8C  F00C    	movff	plusw1,btemp+11
 21572  0147FA  0E77               	movlw	119
 21573  0147FC  6E09               	movwf	(btemp+8)^0,c
 21574  0147FE  0E3C               	movlw	60
 21575  014800  6E0A               	movwf	(btemp+9)^0,c
 21576  014802  2A0C               	incf	(btemp+11)^0,f,c
 21577  014804  D003               	goto	u8944
 21578  014806                     u8945:
 21579  014806  340A               	rlcf	(btemp+9)^0,w,c
 21580  014808  320A               	rrcf	(btemp+9)^0,f,c
 21581  01480A  3209               	rrcf	(btemp+8)^0,f,c
 21582  01480C                     u8944:
 21583  01480C  2E0C               	decfsz	(btemp+11)^0,f,c
 21584  01480E  D7FB               	goto	u8945
 21585  014810  B009               	btfsc	(btemp+8)^0,0,c
 21586  014812  D007               	goto	l9838
 21587                           
 21588                           ;daq.c: 101:    return nanf("");
 21589  014814  0E11               	movlw	low (STR_48+78)
 21590  014816  6EE6               	movwf	postinc1,c
 21591  014818  0EFE               	movlw	high (STR_48+78)
 21592  01481A  6EE6               	movwf	postinc1,c
 21593  01481C  EC0D  F0CE         	call	_nanf	;wreg free
 21594  014820  D23A               	goto	l1761
 21595  014822                     l9838:
 21596                           
 21597                           ;daq.c: 103:   if (0b0000000000000011 >> chan & 0x1) {
 21598                           ;stkvar	_chan @ sp[(0)+-1]
 21599  014822  0EFF               	movlw	-1
 21600  014824  006F FF8C  F00C    	movff	plusw1,btemp+11
 21601  01482A  0E03               	movlw	3
 21602  01482C  6E09               	movwf	(btemp+8)^0,c
 21603  01482E  0E00               	movlw	0
 21604  014830  6E0A               	movwf	(btemp+9)^0,c
 21605  014832  2A0C               	incf	(btemp+11)^0,f,c
 21606  014834  D003               	goto	u8964
 21607  014836                     u8965:
 21608  014836  340A               	rlcf	(btemp+9)^0,w,c
 21609  014838  320A               	rrcf	(btemp+9)^0,f,c
 21610  01483A  3209               	rrcf	(btemp+8)^0,f,c
 21611  01483C                     u8964:
 21612  01483C  2E0C               	decfsz	(btemp+11)^0,f,c
 21613  01483E  D7FB               	goto	u8965
 21614  014840  A009               	btfss	(btemp+8)^0,0,c
 21615  014842  D0EB               	goto	l9852
 21616                           
 21617                           ;daq.c: 104:    if (0b0000000000000001 >> chan & 0x1) {
 21618                           ;stkvar	_chan @ sp[(0)+-1]
 21619  014844  0EFF               	movlw	-1
 21620  014846  006F FF8C  F00C    	movff	plusw1,btemp+11
 21621  01484C  0E01               	movlw	1
 21622  01484E  6E09               	movwf	(btemp+8)^0,c
 21623  014850  0E00               	movlw	0
 21624  014852  6E0A               	movwf	(btemp+9)^0,c
 21625  014854  2A0C               	incf	(btemp+11)^0,f,c
 21626  014856  D003               	goto	u8984
 21627  014858                     u8985:
 21628  014858  340A               	rlcf	(btemp+9)^0,w,c
 21629  01485A  320A               	rrcf	(btemp+9)^0,f,c
 21630  01485C  3209               	rrcf	(btemp+8)^0,f,c
 21631  01485E                     u8984:
 21632  01485E  2E0C               	decfsz	(btemp+11)^0,f,c
 21633  014860  D7FB               	goto	u8985
 21634  014862  A009               	btfss	(btemp+8)^0,0,c
 21635  014864  D06D               	goto	l9848
 21636                           
 21637                           ;daq.c: 105:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[0]) * 0.0850
      +                          000;
 21638  014866  0E7B               	movlw	123
 21639  014868  6EE6               	movwf	postinc1,c
 21640  01486A  0E14               	movlw	20
 21641  01486C  6EE6               	movwf	postinc1,c
 21642  01486E  0EAE               	movlw	174
 21643  014870  6EE6               	movwf	postinc1,c
 21644  014872  0E3D               	movlw	61
 21645  014874  6EE6               	movwf	postinc1,c
 21646  014876  0060  F398  F009   	movff	_R+32,btemp+8	;volatile
 21647  01487C  0060  F39C  F00A   	movff	_R+33,btemp+9	;volatile
 21648  014882  0E00               	movlw	0
 21649  014884  BE0A               	btfsc	(btemp+9)^0,7,c
 21650  014886  0EFF               	movlw	255
 21651  014888  6E0B               	movwf	(btemp+10)^0,c
 21652  01488A  6E0C               	movwf	(btemp+11)^0,c
 21653  01488C  0060  F027  FFE6   	movff	btemp+8,postinc1
 21654  014892  0060  F02B  FFE6   	movff	btemp+9,postinc1
 21655  014898  0060  F02F  FFE6   	movff	btemp+10,postinc1
 21656  01489E  0060  F033  FFE6   	movff	btemp+11,postinc1
 21657  0148A4  0E01               	movlw	1
 21658  0148A6  6EE6               	movwf	postinc1,c
 21659  0148A8  EC1A  F0B8         	call	___xxtofl	;wreg free
 21660  0148AC  0060  F007  FFE6   	movff	btemp,postinc1
 21661  0148B2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 21662  0148B8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 21663  0148BE  0060  F013  FFE6   	movff	btemp+3,postinc1
 21664                           
 21665                           ;stkvar	_chan @ sp[(-8)+-1]
 21666  0148C4  0EF7               	movlw	-9
 21667  0148C6  50E3               	movf	plusw1,w,c
 21668  0148C8  6EE6               	movwf	postinc1,c
 21669  0148CA  EC1C  F0D5         	call	_get_raw_result	;wreg free
 21670  0148CE  0060  F004  F00B   	movff	btemp,btemp+10
 21671  0148D4  0060  F008  F00C   	movff	btemp+1,btemp+11
 21672  0148DA  500B               	movf	(btemp+10)^0,w,c
 21673  0148DC  6E05               	movwf	(btemp+4)^0,c
 21674  0148DE  500C               	movf	(btemp+11)^0,w,c
 21675  0148E0  6E06               	movwf	(btemp+5)^0,c
 21676  0148E2  6A07               	clrf	(btemp+6)^0,c
 21677  0148E4  6A08               	clrf	(btemp+7)^0,c
 21678  0148E6  0060  F017  FFE6   	movff	btemp+4,postinc1
 21679  0148EC  0060  F01B  FFE6   	movff	btemp+5,postinc1
 21680  0148F2  0060  F01F  FFE6   	movff	btemp+6,postinc1
 21681  0148F8  0060  F023  FFE6   	movff	btemp+7,postinc1
 21682  0148FE  0E00               	movlw	0
 21683  014900  6EE6               	movwf	postinc1,c
 21684  014902  EC1A  F0B8         	call	___xxtofl	;wreg free
 21685  014906  0060  F007  FFE6   	movff	btemp,postinc1
 21686  01490C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 21687  014912  0060  F00F  FFE6   	movff	btemp+2,postinc1
 21688  014918  0060  F013  FFE6   	movff	btemp+3,postinc1
 21689  01491E  EC03  F0D0         	call	___flsub	;wreg free
 21690  014922  0060  F007  FFE6   	movff	btemp,postinc1
 21691  014928  0060  F00B  FFE6   	movff	btemp+1,postinc1
 21692  01492E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 21693  014934  0060  F013  FFE6   	movff	btemp+3,postinc1
 21694  01493A  EC05  F096         	call	___flmul	;wreg free
 21695  01493E  D1AB               	goto	l1761
 21696  014940                     l9848:
 21697                           
 21698                           ;daq.c: 107:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[1]) * 0.0350
      +                          000;
 21699  014940  0E29               	movlw	41
 21700  014942  6EE6               	movwf	postinc1,c
 21701  014944  0E5C               	movlw	92
 21702  014946  6EE6               	movwf	postinc1,c
 21703  014948  0E0F               	movlw	15
 21704  01494A  6EE6               	movwf	postinc1,c
 21705  01494C  0E3D               	movlw	61
 21706  01494E  6EE6               	movwf	postinc1,c
 21707  014950  0060  F3A0  F009   	movff	_R+34,btemp+8	;volatile
 21708  014956  0060  F3A4  F00A   	movff	_R+35,btemp+9	;volatile
 21709  01495C  0E00               	movlw	0
 21710  01495E  BE0A               	btfsc	(btemp+9)^0,7,c
 21711  014960  0EFF               	movlw	255
 21712  014962  6E0B               	movwf	(btemp+10)^0,c
 21713  014964  6E0C               	movwf	(btemp+11)^0,c
 21714  014966  0060  F027  FFE6   	movff	btemp+8,postinc1
 21715  01496C  0060  F02B  FFE6   	movff	btemp+9,postinc1
 21716  014972  0060  F02F  FFE6   	movff	btemp+10,postinc1
 21717  014978  0060  F033  FFE6   	movff	btemp+11,postinc1
 21718  01497E  0E01               	movlw	1
 21719  014980  6EE6               	movwf	postinc1,c
 21720  014982  EC1A  F0B8         	call	___xxtofl	;wreg free
 21721  014986  0060  F007  FFE6   	movff	btemp,postinc1
 21722  01498C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 21723  014992  0060  F00F  FFE6   	movff	btemp+2,postinc1
 21724  014998  0060  F013  FFE6   	movff	btemp+3,postinc1
 21725                           
 21726                           ;stkvar	_chan @ sp[(-8)+-1]
 21727  01499E  0EF7               	movlw	-9
 21728  0149A0  50E3               	movf	plusw1,w,c
 21729  0149A2  6EE6               	movwf	postinc1,c
 21730  0149A4  EC1C  F0D5         	call	_get_raw_result	;wreg free
 21731  0149A8  0060  F004  F00B   	movff	btemp,btemp+10
 21732  0149AE  0060  F008  F00C   	movff	btemp+1,btemp+11
 21733  0149B4  500B               	movf	(btemp+10)^0,w,c
 21734  0149B6  6E05               	movwf	(btemp+4)^0,c
 21735  0149B8  500C               	movf	(btemp+11)^0,w,c
 21736  0149BA  6E06               	movwf	(btemp+5)^0,c
 21737  0149BC  6A07               	clrf	(btemp+6)^0,c
 21738  0149BE  6A08               	clrf	(btemp+7)^0,c
 21739  0149C0  0060  F017  FFE6   	movff	btemp+4,postinc1
 21740  0149C6  0060  F01B  FFE6   	movff	btemp+5,postinc1
 21741  0149CC  0060  F01F  FFE6   	movff	btemp+6,postinc1
 21742  0149D2  0060  F023  FFE6   	movff	btemp+7,postinc1
 21743  0149D8  0E00               	movlw	0
 21744  0149DA  6EE6               	movwf	postinc1,c
 21745  0149DC  EC1A  F0B8         	call	___xxtofl	;wreg free
 21746  0149E0  0060  F007  FFE6   	movff	btemp,postinc1
 21747  0149E6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 21748  0149EC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 21749  0149F2  0060  F013  FFE6   	movff	btemp+3,postinc1
 21750  0149F8  EC03  F0D0         	call	___flsub	;wreg free
 21751  0149FC  0060  F007  FFE6   	movff	btemp,postinc1
 21752  014A02  0060  F00B  FFE6   	movff	btemp+1,postinc1
 21753  014A08  0060  F00F  FFE6   	movff	btemp+2,postinc1
 21754  014A0E  0060  F013  FFE6   	movff	btemp+3,postinc1
 21755  014A14  EC05  F096         	call	___flmul	;wreg free
 21756  014A18  D13E               	goto	l1761
 21757  014A1A                     l9852:
 21758                           
 21759                           ;daq.c: 110:    if (0b0000100000000000 >> chan & 0x1) {
 21760                           ;stkvar	_chan @ sp[(0)+-1]
 21761  014A1A  0EFF               	movlw	-1
 21762  014A1C  006F FF8C  F00C    	movff	plusw1,btemp+11
 21763  014A22  0E00               	movlw	0
 21764  014A24  6E09               	movwf	(btemp+8)^0,c
 21765  014A26  0E08               	movlw	8
 21766  014A28  6E0A               	movwf	(btemp+9)^0,c
 21767  014A2A  2A0C               	incf	(btemp+11)^0,f,c
 21768  014A2C  D003               	goto	u9004
 21769  014A2E                     u9005:
 21770  014A2E  340A               	rlcf	(btemp+9)^0,w,c
 21771  014A30  320A               	rrcf	(btemp+9)^0,f,c
 21772  014A32  3209               	rrcf	(btemp+8)^0,f,c
 21773  014A34                     u9004:
 21774  014A34  2E0C               	decfsz	(btemp+11)^0,f,c
 21775  014A36  D7FB               	goto	u9005
 21776  014A38  A009               	btfss	(btemp+8)^0,0,c
 21777  014A3A  D008               	goto	l9860
 21778                           
 21779                           ;daq.c: 111:     return 25.0;
 21780  014A3C  0E00               	movlw	0
 21781  014A3E  6E01               	movwf	btemp^0,c
 21782  014A40  0E00               	movlw	0
 21783  014A42  6E02               	movwf	(btemp+1)^0,c
 21784  014A44  0EC8               	movlw	200
 21785  014A46  6E03               	movwf	(btemp+2)^0,c
 21786  014A48  0E41               	movlw	65
 21787  014A4A  D113               	goto	L24
 21788  014A4C                     l9860:
 21789                           
 21790                           ;daq.c: 113:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 21791  014A4C  0E00               	movlw	0
 21792  014A4E  6EE6               	movwf	postinc1,c
 21793  014A50  0E00               	movlw	0
 21794  014A52  6EE6               	movwf	postinc1,c
 21795  014A54  0E7A               	movlw	122
 21796  014A56  6EE6               	movwf	postinc1,c
 21797  014A58  0E44               	movlw	68
 21798  014A5A  6EE6               	movwf	postinc1,c
 21799  014A5C  0E61               	movlw	97
 21800  014A5E  6EE6               	movwf	postinc1,c
 21801  014A60  0E03               	movlw	3
 21802  014A62  6EE6               	movwf	postinc1,c
 21803  014A64  0E84               	movlw	132
 21804  014A66  6EE6               	movwf	postinc1,c
 21805  014A68  0E40               	movlw	64
 21806  014A6A  6EE6               	movwf	postinc1,c
 21807                           
 21808                           ;stkvar	_chan @ sp[(-8)+-1]
 21809  014A6C  0EF7               	movlw	-9
 21810  014A6E  50E3               	movf	plusw1,w,c
 21811  014A70  6EE6               	movwf	postinc1,c
 21812  014A72  EC1C  F0D5         	call	_get_raw_result	;wreg free
 21813  014A76  0060  F004  F00B   	movff	btemp,btemp+10
 21814  014A7C  0060  F008  F00C   	movff	btemp+1,btemp+11
 21815  014A82  500B               	movf	(btemp+10)^0,w,c
 21816  014A84  6E05               	movwf	(btemp+4)^0,c
 21817  014A86  500C               	movf	(btemp+11)^0,w,c
 21818  014A88  6E06               	movwf	(btemp+5)^0,c
 21819  014A8A  6A07               	clrf	(btemp+6)^0,c
 21820  014A8C  6A08               	clrf	(btemp+7)^0,c
 21821  014A8E  0060  F017  FFE6   	movff	btemp+4,postinc1
 21822  014A94  0060  F01B  FFE6   	movff	btemp+5,postinc1
 21823  014A9A  0060  F01F  FFE6   	movff	btemp+6,postinc1
 21824  014AA0  0060  F023  FFE6   	movff	btemp+7,postinc1
 21825  014AA6  0E00               	movlw	0
 21826  014AA8  6EE6               	movwf	postinc1,c
 21827  014AAA  EC1A  F0B8         	call	___xxtofl	;wreg free
 21828  014AAE  0060  F007  FFE6   	movff	btemp,postinc1
 21829  014AB4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 21830  014ABA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 21831  014AC0  0060  F013  FFE6   	movff	btemp+3,postinc1
 21832  014AC6  EC05  F096         	call	___flmul	;wreg free
 21833  014ACA  0060  F007  FFE6   	movff	btemp,postinc1
 21834  014AD0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 21835  014AD6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 21836  014ADC  0060  F013  FFE6   	movff	btemp+3,postinc1
 21837  014AE2  EC3B  F0A1         	call	___fldiv	;wreg free
 21838  014AE6  D0D7               	goto	l1761
 21839  014AE8                     l9864:
 21840                           
 21841                           ;daq.c: 118:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
 21842                           ;stkvar	_chan @ sp[(0)+-1]
 21843  014AE8  0EFF               	movlw	-1
 21844  014AEA  006F FF8C  F00C    	movff	plusw1,btemp+11
 21845  014AF0  0E03               	movlw	3
 21846  014AF2  6E09               	movwf	(btemp+8)^0,c
 21847  014AF4  0E00               	movlw	0
 21848  014AF6  6E0A               	movwf	(btemp+9)^0,c
 21849  014AF8  2A0C               	incf	(btemp+11)^0,f,c
 21850  014AFA  D003               	goto	u9024
 21851  014AFC                     u9025:
 21852  014AFC  340A               	rlcf	(btemp+9)^0,w,c
 21853  014AFE  320A               	rrcf	(btemp+9)^0,f,c
 21854  014B00  3209               	rrcf	(btemp+8)^0,f,c
 21855  014B02                     u9024:
 21856  014B02  2E0C               	decfsz	(btemp+11)^0,f,c
 21857  014B04  D7FB               	goto	u9025
 21858  014B06  B009               	btfsc	(btemp+8)^0,0,c
 21859  014B08  D011               	goto	u9050
 21860                           
 21861                           ;stkvar	_chan @ sp[(0)+-1]
 21862  014B0A  0EFF               	movlw	-1
 21863  014B0C  006F FF8C  F00C    	movff	plusw1,btemp+11
 21864  014B12  0E00               	movlw	0
 21865  014B14  6E09               	movwf	(btemp+8)^0,c
 21866  014B16  0E08               	movlw	8
 21867  014B18  6E0A               	movwf	(btemp+9)^0,c
 21868  014B1A  2A0C               	incf	(btemp+11)^0,f,c
 21869  014B1C  D003               	goto	u9044
 21870  014B1E                     u9045:
 21871  014B1E  340A               	rlcf	(btemp+9)^0,w,c
 21872  014B20  320A               	rrcf	(btemp+9)^0,f,c
 21873  014B22  3209               	rrcf	(btemp+8)^0,f,c
 21874  014B24                     u9044:
 21875  014B24  2E0C               	decfsz	(btemp+11)^0,f,c
 21876  014B26  D7FB               	goto	u9045
 21877  014B28  A009               	btfss	(btemp+8)^0,0,c
 21878  014B2A  D04E               	goto	l9872
 21879  014B2C                     u9050:
 21880                           
 21881                           ;daq.c: 119:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
 21882  014B2C  0E00               	movlw	0
 21883  014B2E  6EE6               	movwf	postinc1,c
 21884  014B30  0E00               	movlw	0
 21885  014B32  6EE6               	movwf	postinc1,c
 21886  014B34  0E7A               	movlw	122
 21887  014B36  6EE6               	movwf	postinc1,c
 21888  014B38  0E44               	movlw	68
 21889  014B3A  6EE6               	movwf	postinc1,c
 21890  014B3C  0E00               	movlw	0
 21891  014B3E  6EE6               	movwf	postinc1,c
 21892  014B40  0E00               	movlw	0
 21893  014B42  6EE6               	movwf	postinc1,c
 21894  014B44  0E20               	movlw	32
 21895  014B46  6EE6               	movwf	postinc1,c
 21896  014B48  0E3F               	movlw	63
 21897  014B4A  6EE6               	movwf	postinc1,c
 21898                           
 21899                           ;stkvar	_chan @ sp[(-8)+-1]
 21900  014B4C  0EF7               	movlw	-9
 21901  014B4E  50E3               	movf	plusw1,w,c
 21902  014B50  6EE6               	movwf	postinc1,c
 21903  014B52  EC1C  F0D5         	call	_get_raw_result	;wreg free
 21904  014B56  0060  F004  F00B   	movff	btemp,btemp+10
 21905  014B5C  0060  F008  F00C   	movff	btemp+1,btemp+11
 21906  014B62  500B               	movf	(btemp+10)^0,w,c
 21907  014B64  6E05               	movwf	(btemp+4)^0,c
 21908  014B66  500C               	movf	(btemp+11)^0,w,c
 21909  014B68  6E06               	movwf	(btemp+5)^0,c
 21910  014B6A  6A07               	clrf	(btemp+6)^0,c
 21911  014B6C  6A08               	clrf	(btemp+7)^0,c
 21912  014B6E  0060  F017  FFE6   	movff	btemp+4,postinc1
 21913  014B74  0060  F01B  FFE6   	movff	btemp+5,postinc1
 21914  014B7A  0060  F01F  FFE6   	movff	btemp+6,postinc1
 21915  014B80  0060  F023  FFE6   	movff	btemp+7,postinc1
 21916  014B86  0E00               	movlw	0
 21917  014B88  6EE6               	movwf	postinc1,c
 21918  014B8A  EC1A  F0B8         	call	___xxtofl	;wreg free
 21919  014B8E  0060  F007  FFE6   	movff	btemp,postinc1
 21920  014B94  0060  F00B  FFE6   	movff	btemp+1,postinc1
 21921  014B9A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 21922  014BA0  0060  F013  FFE6   	movff	btemp+3,postinc1
 21923  014BA6  EC05  F096         	call	___flmul	;wreg free
 21924  014BAA  0060  F007  FFE6   	movff	btemp,postinc1
 21925  014BB0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 21926  014BB6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 21927  014BBC  0060  F013  FFE6   	movff	btemp+3,postinc1
 21928  014BC2  EC3B  F0A1         	call	___fldiv	;wreg free
 21929  014BC6  D067               	goto	l1761
 21930  014BC8                     l9872:
 21931                           
 21932                           ;daq.c: 121:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 21933  014BC8  0E00               	movlw	0
 21934  014BCA  6EE6               	movwf	postinc1,c
 21935  014BCC  0E00               	movlw	0
 21936  014BCE  6EE6               	movwf	postinc1,c
 21937  014BD0  0E7A               	movlw	122
 21938  014BD2  6EE6               	movwf	postinc1,c
 21939  014BD4  0E44               	movlw	68
 21940  014BD6  6EE6               	movwf	postinc1,c
 21941  014BD8  0E61               	movlw	97
 21942  014BDA  6EE6               	movwf	postinc1,c
 21943  014BDC  0E03               	movlw	3
 21944  014BDE  6EE6               	movwf	postinc1,c
 21945  014BE0  0E84               	movlw	132
 21946  014BE2  6EE6               	movwf	postinc1,c
 21947  014BE4  0E40               	movlw	64
 21948  014BE6  6EE6               	movwf	postinc1,c
 21949                           
 21950                           ;stkvar	_chan @ sp[(-8)+-1]
 21951  014BE8  0EF7               	movlw	-9
 21952  014BEA  50E3               	movf	plusw1,w,c
 21953  014BEC  6EE6               	movwf	postinc1,c
 21954  014BEE  EC1C  F0D5         	call	_get_raw_result	;wreg free
 21955  014BF2  0060  F004  F00B   	movff	btemp,btemp+10
 21956  014BF8  0060  F008  F00C   	movff	btemp+1,btemp+11
 21957  014BFE  500B               	movf	(btemp+10)^0,w,c
 21958  014C00  6E05               	movwf	(btemp+4)^0,c
 21959  014C02  500C               	movf	(btemp+11)^0,w,c
 21960  014C04  6E06               	movwf	(btemp+5)^0,c
 21961  014C06  6A07               	clrf	(btemp+6)^0,c
 21962  014C08  6A08               	clrf	(btemp+7)^0,c
 21963  014C0A  0060  F017  FFE6   	movff	btemp+4,postinc1
 21964  014C10  0060  F01B  FFE6   	movff	btemp+5,postinc1
 21965  014C16  0060  F01F  FFE6   	movff	btemp+6,postinc1
 21966  014C1C  0060  F023  FFE6   	movff	btemp+7,postinc1
 21967  014C22  0E00               	movlw	0
 21968  014C24  6EE6               	movwf	postinc1,c
 21969  014C26  EC1A  F0B8         	call	___xxtofl	;wreg free
 21970  014C2A  0060  F007  FFE6   	movff	btemp,postinc1
 21971  014C30  0060  F00B  FFE6   	movff	btemp+1,postinc1
 21972  014C36  0060  F00F  FFE6   	movff	btemp+2,postinc1
 21973  014C3C  0060  F013  FFE6   	movff	btemp+3,postinc1
 21974  014C42  EC05  F096         	call	___flmul	;wreg free
 21975  014C46  0060  F007  FFE6   	movff	btemp,postinc1
 21976  014C4C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 21977  014C52  0060  F00F  FFE6   	movff	btemp+2,postinc1
 21978  014C58  0060  F013  FFE6   	movff	btemp+3,postinc1
 21979  014C5E  EC3B  F0A1         	call	___fldiv	;wreg free
 21980  014C62  D019               	goto	l1761
 21981  014C64                     l9878:
 21982                           
 21983                           ;daq.c: 124:   return 0.0;
 21984  014C64  0E00               	movlw	0
 21985  014C66  6E01               	movwf	btemp^0,c
 21986  014C68  0E00               	movlw	0
 21987  014C6A  6E02               	movwf	(btemp+1)^0,c
 21988  014C6C  0E00               	movlw	0
 21989  014C6E  6E03               	movwf	(btemp+2)^0,c
 21990  014C70  0E00               	movlw	0
 21991  014C72                     L24:
 21992  014C72  6E04               	movwf	(btemp+3)^0,c
 21993  014C74  D010               	goto	l1761
 21994  014C76                     l9886:
 21995                           
 21996                           ;stkvar	_to_what @ sp[(0)+-2]
 21997  014C76  0EFE               	movlw	-2
 21998  014C78  50E3               	movf	plusw1,w,c
 21999  014C7A  6E0B               	movwf	(btemp+10)^0,c
 22000  014C7C  6A0C               	clrf	(btemp+11)^0,c
 22001                           
 22002                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 22003                           ; Switch size 1, requested type "simple"
 22004                           ; Number of cases is 1, Range of values is 0 to 0
 22005                           ; switch strategies available:
 22006                           ; Name         Instructions Cycles
 22007                           ; simple_byte            4     3 (average)
 22008                           ;	Chosen strategy is simple_byte
 22009  014C7E  500C               	movf	(btemp+11)^0,w,c
 22010  014C80  0A00               	xorlw	0	; case 0
 22011  014C82  A4D8               	btfss	status,2,c
 22012  014C84  D7EF               	goto	l9878
 22013                           
 22014                           ; Switch size 1, requested type "simple"
 22015                           ; Number of cases is 2, Range of values is 0 to 1
 22016                           ; switch strategies available:
 22017                           ; Name         Instructions Cycles
 22018                           ; simple_byte            7     4 (average)
 22019                           ;	Chosen strategy is simple_byte
 22020  014C86  500B               	movf	(btemp+10)^0,w,c
 22021  014C88  0A00               	xorlw	0	; case 0
 22022  014C8A  B4D8               	btfsc	status,2,c
 22023  014C8C  D5B2               	goto	l9832
 22024  014C8E  0A01               	xorlw	1	; case 1
 22025  014C90  B4D8               	btfsc	status,2,c
 22026  014C92  D72A               	goto	l9864
 22027  014C94  D7E7               	goto	l9878
 22028  014C96                     l1761:
 22029                           
 22030                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 22031  014C96  52E5               	movf	postdec1,f,c
 22032  014C98  52E5               	movf	postdec1,f,c
 22033  014C9A  0012               	return		;funcret
 22034  014C9C                     __end_of_conv_raw_result:
 22035                           	opt callstack 0
 22036                           
 22037 ;; *************** function _nanf *****************
 22038 ;; Defined at:
 22039 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
 22040 ;; Parameters:    Size  Location     Type
 22041 ;;  s               2  [STACK] PTR const unsigned char 
 22042 ;;		 -> STR_85(1), STR_47(1), 
 22043 ;; Auto vars:     Size  Location     Type
 22044 ;;  u               4  [STACK] struct .
 22045 ;; Return value:  Size  Location     Type
 22046 ;;                  4  [STACK] float 
 22047 ;; Registers used:
 22048 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 22049 ;; Tracked objects:
 22050 ;;		On entry : 0/1
 22051 ;;		On exit  : 0/0
 22052 ;;		Unchanged: 0/0
 22053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22057 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22058 ;;Total ram usage:        0 bytes
 22059 ;; Hardware stack levels used:    1
 22060 ;; Hardware stack levels required when called:   15
 22061 ;; This function calls:
 22062 ;;		Nothing
 22063 ;; This function is called by:
 22064 ;;		_conv_raw_result
 22065 ;; This function uses a reentrant model
 22066 ;;
 22067                           
 22068                           	psect	text92
 22069  019C1A                     __ptext92:
 22070                           	opt callstack 0
 22071  019C1A                     _nanf:
 22072                           	opt callstack 0
 22073                           
 22074                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22075  019C1A  52E6               	movf	postinc1,f,c
 22076  019C1C  52E6               	movf	postinc1,f,c
 22077  019C1E  52E6               	movf	postinc1,f,c
 22078  019C20  52E6               	movf	postinc1,f,c
 22079                           
 22080                           ;incstack = 0
 22081  019C22  0EFF               	movlw	255
 22082  019C24  6E09               	movwf	(btemp+8)^0,c
 22083  019C26  0EFF               	movlw	255
 22084  019C28  6E0A               	movwf	(btemp+9)^0,c
 22085  019C2A  0EFF               	movlw	255
 22086  019C2C  6E0B               	movwf	(btemp+10)^0,c
 22087  019C2E  0E7F               	movlw	127
 22088  019C30  6E0C               	movwf	(btemp+11)^0,c
 22089                           
 22090                           ;stkvar	_u @ sp[(-4)+0]
 22091  019C32  0EFC               	movlw	-4
 22092  019C34  0060  F027  FFE3   	movff	btemp+8,plusw1
 22093  019C3A  0EFD               	movlw	-3
 22094  019C3C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22095  019C42  0EFE               	movlw	-2
 22096  019C44  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22097  019C4A  0EFF               	movlw	-1
 22098  019C4C  0060  F033  FFE3   	movff	btemp+11,plusw1
 22099                           
 22100                           ;stkvar	_u @ sp[(-4)+0]
 22101  019C52  0EFC               	movlw	-4
 22102  019C54  006F FF8C  F001    	movff	plusw1,btemp
 22103  019C5A  0EFD               	movlw	-3
 22104  019C5C  006F FF8C  F002    	movff	plusw1,btemp+1
 22105  019C62  0EFE               	movlw	-2
 22106  019C64  006F FF8C  F003    	movff	plusw1,btemp+2
 22107  019C6A  0EFF               	movlw	-1
 22108  019C6C  006F FF8C  F004    	movff	plusw1,btemp+3
 22109                           
 22110                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 22111  019C72  0EFA               	movlw	250
 22112  019C74  26E1               	addwf	fsr1l,f,c
 22113  019C76  0EFF               	movlw	255
 22114  019C78  22E2               	addwfc	fsr1h,f,c
 22115  019C7A  0012               	return		;funcret
 22116  019C7C                     __end_of_nanf:
 22117                           	opt callstack 0
 22118                           
 22119 ;; *************** function _get_raw_result *****************
 22120 ;; Defined at:
 22121 ;;		line 87 in file "daq.c"
 22122 ;; Parameters:    Size  Location     Type
 22123 ;;  index           1  [STACK] const enum E16581
 22124 ;; Auto vars:     Size  Location     Type
 22125 ;;		None
 22126 ;; Return value:  Size  Location     Type
 22127 ;;                  2  [STACK] unsigned short 
 22128 ;; Registers used:
 22129 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
 22130 ;; Tracked objects:
 22131 ;;		On entry : 0/2
 22132 ;;		On exit  : 0/0
 22133 ;;		Unchanged: 0/0
 22134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22138 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22139 ;;Total ram usage:        0 bytes
 22140 ;; Hardware stack levels used:    1
 22141 ;; Hardware stack levels required when called:   15
 22142 ;; This function calls:
 22143 ;;		Nothing
 22144 ;; This function is called by:
 22145 ;;		_main
 22146 ;;		_conv_raw_result
 22147 ;; This function uses a reentrant model
 22148 ;;
 22149                           
 22150                           	psect	text93
 22151  01AA38                     __ptext93:
 22152                           	opt callstack 0
 22153  01AA38                     _get_raw_result:
 22154                           	opt callstack 13
 22155                           
 22156                           ;daq.c: 87: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 88: {;daq.c: 
      +                          89:  return R.raw_adc[index];
 22157                           ;stkvar	_index @ sp[(0)+-1]
 22158                           
 22159                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22160                           ;incstack = 0
 22161  01AA38  0EFF               	movlw	-1
 22162  01AA3A  50E3               	movf	plusw1,w,c
 22163  01AA3C  0D02               	mullw	2
 22164  01AA3E  50F3               	movf	243,w,c
 22165  01AA40  0FC6               	addlw	low _R
 22166  01AA42  6ED9               	movwf	fsr2l,c
 22167  01AA44  6ADA               	clrf	fsr2h,c
 22168  01AA46  006F FF78  F001    	movff	postinc2,btemp
 22169  01AA4C  006F FF74  F002    	movff	postdec2,btemp+1
 22170                           
 22171                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
 22172  01AA52  52E5               	movf	postdec1,f,c
 22173  01AA54  0012               	return		;funcret
 22174  01AA56                     __end_of_get_raw_result:
 22175                           	opt callstack 0
 22176                           
 22177 ;; *************** function ___xxtofl *****************
 22178 ;; Defined at:
 22179 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
 22180 ;; Parameters:    Size  Location     Type
 22181 ;;  sign            1  [STACK] unsigned char 
 22182 ;;  val             4  [STACK] long 
 22183 ;; Auto vars:     Size  Location     Type
 22184 ;;  arg             4  [STACK] unsigned long 
 22185 ;;  exp             1  [STACK] unsigned char 
 22186 ;; Return value:  Size  Location     Type
 22187 ;;                  4  [STACK] unsigned char 
 22188 ;; Registers used:
 22189 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 22190 ;; Tracked objects:
 22191 ;;		On entry : 0/1
 22192 ;;		On exit  : 0/0
 22193 ;;		Unchanged: 0/0
 22194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22199 ;;Total ram usage:        0 bytes
 22200 ;; Hardware stack levels used:    1
 22201 ;; Hardware stack levels required when called:   15
 22202 ;; This function calls:
 22203 ;;		Nothing
 22204 ;; This function is called by:
 22205 ;;		_conv_raw_result
 22206 ;;		_init_bsoc
 22207 ;; This function uses a reentrant model
 22208 ;;
 22209                           
 22210                           	psect	text94
 22211  017034                     __ptext94:
 22212                           	opt callstack 0
 22213  017034                     ___xxtofl:
 22214                           	opt callstack 0
 22215                           
 22216                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22217  017034  0E05               	movlw	5
 22218  017036  26E1               	addwf	fsr1l,f,c
 22219  017038  0E00               	movlw	0
 22220  01703A  22E2               	addwfc	fsr1h,f,c
 22221                           
 22222                           ;stkvar	_sign @ sp[(-5)+-1]
 22223                           
 22224                           ;incstack = 0
 22225  01703C  0EFA               	movlw	-6
 22226  01703E  50E3               	movf	plusw1,w,c
 22227  017040  B4D8               	btfsc	status,2,c
 22228  017042  D01D               	goto	l9278
 22229                           
 22230                           ;stkvar	_val @ sp[(-5)+-5]
 22231  017044  0EF9               	movlw	-7
 22232  017046  AEE3               	btfss	plusw1,7,c
 22233  017048  D01A               	goto	l9278
 22234                           
 22235                           ;stkvar	_val @ sp[(-5)+-5]
 22236  01704A  0EF6               	movlw	-10
 22237  01704C  006F FF8C  F009    	movff	plusw1,btemp+8
 22238  017052  0EF7               	movlw	-9
 22239  017054  006F FF8C  F00A    	movff	plusw1,btemp+9
 22240  01705A  0EF8               	movlw	-8
 22241  01705C  006F FF8C  F00B    	movff	plusw1,btemp+10
 22242  017062  0EF9               	movlw	-7
 22243  017064  006F FF8C  F00C    	movff	plusw1,btemp+11
 22244  01706A  1E09               	comf	(btemp+8)^0,f,c
 22245  01706C  1E0A               	comf	(btemp+9)^0,f,c
 22246  01706E  1E0B               	comf	(btemp+10)^0,f,c
 22247  017070  1E0C               	comf	(btemp+11)^0,f,c
 22248  017072  2A09               	incf	(btemp+8)^0,f,c
 22249  017074  0E00               	movlw	0
 22250  017076  220A               	addwfc	(btemp+9)^0,f,c
 22251  017078  220B               	addwfc	(btemp+10)^0,f,c
 22252  01707A  220C               	addwfc	(btemp+11)^0,f,c
 22253  01707C  D010               	goto	L25
 22254  01707E                     l9278:
 22255                           
 22256                           ;stkvar	_val @ sp[(-5)+-5]
 22257  01707E  0EF6               	movlw	-10
 22258  017080  006F FF8C  F009    	movff	plusw1,btemp+8
 22259  017086  0EF7               	movlw	-9
 22260  017088  006F FF8C  F00A    	movff	plusw1,btemp+9
 22261  01708E  0EF8               	movlw	-8
 22262  017090  006F FF8C  F00B    	movff	plusw1,btemp+10
 22263  017096  0EF9               	movlw	-7
 22264  017098  006F FF8C  F00C    	movff	plusw1,btemp+11
 22265  01709E                     L25:
 22266                           
 22267                           ;stkvar	_arg @ sp[(-5)+0]
 22268  01709E  0EFB               	movlw	-5
 22269  0170A0  0060  F027  FFE3   	movff	btemp+8,plusw1
 22270  0170A6  0EFC               	movlw	-4
 22271  0170A8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22272  0170AE  0EFD               	movlw	-3
 22273  0170B0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22274  0170B6  0EFE               	movlw	-2
 22275  0170B8  0060  F033  FFE3   	movff	btemp+11,plusw1
 22276                           
 22277                           ;stkvar	_val @ sp[(-5)+-5]
 22278  0170BE  0EF6               	movlw	-10
 22279  0170C0  50E3               	movf	plusw1,w,c
 22280  0170C2  E113               	bnz	l9286
 22281  0170C4  0EF7               	movlw	-9
 22282  0170C6  50E3               	movf	plusw1,w,c
 22283  0170C8  E110               	bnz	l9286
 22284  0170CA  0EF8               	movlw	-8
 22285  0170CC  50E3               	movf	plusw1,w,c
 22286  0170CE  E10D               	bnz	l9286
 22287  0170D0  0EF9               	movlw	-7
 22288  0170D2  50E3               	movf	plusw1,w,c
 22289  0170D4  A4D8               	btfss	status,2,c
 22290  0170D6  D009               	goto	l9286
 22291  0170D8  0E00               	movlw	0
 22292  0170DA  6E01               	movwf	btemp^0,c
 22293  0170DC  0E00               	movlw	0
 22294  0170DE  6E02               	movwf	(btemp+1)^0,c
 22295  0170E0  0E00               	movlw	0
 22296  0170E2  6E03               	movwf	(btemp+2)^0,c
 22297  0170E4  0E00               	movlw	0
 22298  0170E6  6E04               	movwf	(btemp+3)^0,c
 22299  0170E8  D0A2               	goto	l2975
 22300  0170EA                     l9286:
 22301  0170EA  0E96               	movlw	150
 22302  0170EC  6E0C               	movwf	(btemp+11)^0,c
 22303                           
 22304                           ;stkvar	_exp @ sp[(-5)+4]
 22305  0170EE  0EFF               	movlw	-1
 22306  0170F0  0060  F033  FFE3   	movff	btemp+11,plusw1
 22307  0170F6  D00B               	goto	l9290
 22308  0170F8                     l9288:
 22309                           
 22310                           ;stkvar	_exp @ sp[(-5)+4]
 22311  0170F8  0EFF               	movlw	-1
 22312  0170FA  2AE3               	incf	plusw1,f,c
 22313                           
 22314                           ;stkvar	_arg @ sp[(-5)+0]
 22315  0170FC  90D8               	bcf	status,0,c
 22316  0170FE  0EFE               	movlw	-2
 22317  017100  32E3               	rrcf	plusw1,f,c
 22318  017102  0EFD               	movlw	-3
 22319  017104  32E3               	rrcf	plusw1,f,c
 22320  017106  0EFC               	movlw	-4
 22321  017108  32E3               	rrcf	plusw1,f,c
 22322  01710A  0EFB               	movlw	-5
 22323  01710C  32E3               	rrcf	plusw1,f,c
 22324  01710E                     l9290:
 22325                           
 22326                           ;stkvar	_arg @ sp[(-5)+0]
 22327  01710E  50E1               	movf	fsr1l,w,c
 22328  017110  0FFB               	addlw	-5
 22329  017112  6ED9               	movwf	fsr2l,c
 22330  017114  50E2               	movf	fsr1h,w,c
 22331  017116  6EDA               	movwf	fsr2h,c
 22332  017118  0EFF               	movlw	255
 22333  01711A  22DA               	addwfc	fsr2h,f,c
 22334  01711C  52DE               	movf	postinc2,f,c
 22335  01711E  52DE               	movf	postinc2,f,c
 22336  017120  52DE               	movf	postinc2,f,c
 22337  017122  0EFE               	movlw	254
 22338  017124  14DD               	andwf	postdec2,w,c
 22339  017126  B4D8               	btfsc	status,2,c
 22340  017128  D018               	goto	l9298
 22341  01712A  D7E6               	goto	l9288
 22342  01712C                     l9292:
 22343                           
 22344                           ;stkvar	_exp @ sp[(-5)+4]
 22345  01712C  0EFF               	movlw	-1
 22346  01712E  2AE3               	incf	plusw1,f,c
 22347                           
 22348                           ;stkvar	_arg @ sp[(-5)+0]
 22349  017130  50E1               	movf	fsr1l,w,c
 22350  017132  0FFB               	addlw	-5
 22351  017134  6ED9               	movwf	fsr2l,c
 22352  017136  50E2               	movf	fsr1h,w,c
 22353  017138  6EDA               	movwf	fsr2h,c
 22354  01713A  0EFF               	movlw	255
 22355  01713C  22DA               	addwfc	fsr2h,f,c
 22356  01713E  2ADE               	incf	postinc2,f,c
 22357  017140  0E00               	movlw	0
 22358  017142  22DE               	addwfc	postinc2,f,c
 22359  017144  22DE               	addwfc	postinc2,f,c
 22360  017146  22DE               	addwfc	postinc2,f,c
 22361                           
 22362                           ;stkvar	_arg @ sp[(-5)+0]
 22363  017148  90D8               	bcf	status,0,c
 22364  01714A  0EFE               	movlw	-2
 22365  01714C  32E3               	rrcf	plusw1,f,c
 22366  01714E  0EFD               	movlw	-3
 22367  017150  32E3               	rrcf	plusw1,f,c
 22368  017152  0EFC               	movlw	-4
 22369  017154  32E3               	rrcf	plusw1,f,c
 22370  017156  0EFB               	movlw	-5
 22371  017158  32E3               	rrcf	plusw1,f,c
 22372  01715A                     l9298:
 22373                           
 22374                           ;stkvar	_arg @ sp[(-5)+0]
 22375  01715A  50E1               	movf	fsr1l,w,c
 22376  01715C  0FFB               	addlw	-5
 22377  01715E  6ED9               	movwf	fsr2l,c
 22378  017160  50E2               	movf	fsr1h,w,c
 22379  017162  6EDA               	movwf	fsr2h,c
 22380  017164  0EFF               	movlw	255
 22381  017166  22DA               	addwfc	fsr2h,f,c
 22382  017168  52DE               	movf	postinc2,f,c
 22383  01716A  52DE               	movf	postinc2,f,c
 22384  01716C  52DE               	movf	postinc2,f,c
 22385  01716E  0EFF               	movlw	255
 22386  017170  14DD               	andwf	postdec2,w,c
 22387  017172  B4D8               	btfsc	status,2,c
 22388  017174  D00C               	goto	l9302
 22389  017176  D7DA               	goto	l9292
 22390  017178                     l9300:
 22391                           
 22392                           ;stkvar	_exp @ sp[(-5)+4]
 22393  017178  0EFF               	movlw	-1
 22394  01717A  06E3               	decf	plusw1,f,c
 22395                           
 22396                           ;stkvar	_arg @ sp[(-5)+0]
 22397  01717C  90D8               	bcf	status,0,c
 22398  01717E  0EFB               	movlw	-5
 22399  017180  36E3               	rlcf	plusw1,f,c
 22400  017182  0EFC               	movlw	-4
 22401  017184  36E3               	rlcf	plusw1,f,c
 22402  017186  0EFD               	movlw	-3
 22403  017188  36E3               	rlcf	plusw1,f,c
 22404  01718A  0EFE               	movlw	-2
 22405  01718C  36E3               	rlcf	plusw1,f,c
 22406  01718E                     l9302:
 22407                           
 22408                           ;stkvar	_arg @ sp[(-5)+0]
 22409  01718E  0EFD               	movlw	-3
 22410  017190  BEE3               	btfsc	plusw1,7,c
 22411  017192  D007               	goto	u8740
 22412                           
 22413                           ;stkvar	_exp @ sp[(-5)+4]
 22414  017194  0EFF               	movlw	-1
 22415  017196  006F FF8C  F001    	movff	plusw1,btemp
 22416  01719C  0E02               	movlw	2
 22417  01719E  6001               	cpfslt	btemp^0,c
 22418  0171A0  D7EB               	goto	l9300
 22419  0171A2                     u8740:
 22420                           
 22421                           ;stkvar	_exp @ sp[(-5)+4]
 22422  0171A2  0EFF               	movlw	-1
 22423  0171A4  B0E3               	btfsc	plusw1,0,c
 22424  0171A6  D002               	goto	l9310
 22425                           
 22426                           ;stkvar	_arg @ sp[(-5)+0]
 22427  0171A8  0EFD               	movlw	-3
 22428  0171AA  9EE3               	bcf	plusw1,7,c
 22429  0171AC                     l9310:
 22430                           
 22431                           ;stkvar	_exp @ sp[(-5)+4]
 22432  0171AC  50E1               	movf	fsr1l,w,c
 22433  0171AE  0FFF               	addlw	-1
 22434  0171B0  6ED9               	movwf	fsr2l,c
 22435  0171B2  50E2               	movf	fsr1h,w,c
 22436  0171B4  6EDA               	movwf	fsr2h,c
 22437  0171B6  0EFF               	movlw	255
 22438  0171B8  22DA               	addwfc	fsr2h,f,c
 22439  0171BA  90D8               	bcf	status,0,c
 22440  0171BC  32DF               	rrcf	indf2,f,c
 22441                           
 22442                           ;stkvar	_exp @ sp[(-5)+4]
 22443  0171BE  0EFF               	movlw	-1
 22444  0171C0  006F FF8C  F00C    	movff	plusw1,btemp+11
 22445  0171C6  0060  F030  F005   	movff	btemp+11,btemp+4
 22446  0171CC  6A06               	clrf	(btemp+5)^0,c
 22447  0171CE  6A07               	clrf	(btemp+6)^0,c
 22448  0171D0  6A08               	clrf	(btemp+7)^0,c
 22449  0171D2  0060  F014  F008   	movff	btemp+4,btemp+7
 22450  0171D8  6A07               	clrf	(btemp+6)^0,c
 22451  0171DA  6A06               	clrf	(btemp+5)^0,c
 22452  0171DC  6A05               	clrf	(btemp+4)^0,c
 22453                           
 22454                           ;stkvar	_arg @ sp[(-5)+0]
 22455  0171DE  50E1               	movf	fsr1l,w,c
 22456  0171E0  0FFB               	addlw	-5
 22457  0171E2  6ED9               	movwf	fsr2l,c
 22458  0171E4  50E2               	movf	fsr1h,w,c
 22459  0171E6  6EDA               	movwf	fsr2h,c
 22460  0171E8  0EFF               	movlw	255
 22461  0171EA  22DA               	addwfc	fsr2h,f,c
 22462  0171EC  5005               	movf	(btemp+4)^0,w,c
 22463  0171EE  12DE               	iorwf	postinc2,f,c
 22464  0171F0  5006               	movf	(btemp+5)^0,w,c
 22465  0171F2  12DE               	iorwf	postinc2,f,c
 22466  0171F4  5007               	movf	(btemp+6)^0,w,c
 22467  0171F6  12DE               	iorwf	postinc2,f,c
 22468  0171F8  5008               	movf	(btemp+7)^0,w,c
 22469  0171FA  12DE               	iorwf	postinc2,f,c
 22470                           
 22471                           ;stkvar	_sign @ sp[(-5)+-1]
 22472  0171FC  0EFA               	movlw	-6
 22473  0171FE  50E3               	movf	plusw1,w,c
 22474  017200  B4D8               	btfsc	status,2,c
 22475  017202  D005               	goto	l9320
 22476                           
 22477                           ;stkvar	_val @ sp[(-5)+-5]
 22478  017204  0EF9               	movlw	-7
 22479  017206  AEE3               	btfss	plusw1,7,c
 22480  017208  D002               	goto	l9320
 22481                           
 22482                           ;stkvar	_arg @ sp[(-5)+0]
 22483  01720A  0EFE               	movlw	-2
 22484  01720C  8EE3               	bsf	plusw1,7,c
 22485  01720E                     l9320:
 22486                           
 22487                           ;stkvar	_arg @ sp[(-5)+0]
 22488  01720E  0EFB               	movlw	-5
 22489  017210  006F FF8C  F001    	movff	plusw1,btemp
 22490  017216  0EFC               	movlw	-4
 22491  017218  006F FF8C  F002    	movff	plusw1,btemp+1
 22492  01721E  0EFD               	movlw	-3
 22493  017220  006F FF8C  F003    	movff	plusw1,btemp+2
 22494  017226  0EFE               	movlw	-2
 22495  017228  006F FF8C  F004    	movff	plusw1,btemp+3
 22496  01722E                     l2975:
 22497                           
 22498                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
 22499  01722E  0EF6               	movlw	246
 22500  017230  26E1               	addwf	fsr1l,f,c
 22501  017232  0EFF               	movlw	255
 22502  017234  22E2               	addwfc	fsr1h,f,c
 22503  017236  0012               	return		;funcret
 22504  017238                     __end_of___xxtofl:
 22505                           	opt callstack 0
 22506                           
 22507 ;; *************** function ___fldiv *****************
 22508 ;; Defined at:
 22509 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 22510 ;; Parameters:    Size  Location     Type
 22511 ;;  b               4  [STACK] unsigned char 
 22512 ;;  a               4  [STACK] unsigned char 
 22513 ;; Auto vars:     Size  Location     Type
 22514 ;;  grs             4  [STACK] unsigned long 
 22515 ;;  rem             4  [STACK] unsigned long 
 22516 ;;  new_exp         2  [STACK] short 
 22517 ;;  aexp            1  [STACK] unsigned char 
 22518 ;;  bexp            1  [STACK] unsigned char 
 22519 ;;  sign            1  [STACK] unsigned char 
 22520 ;; Return value:  Size  Location     Type
 22521 ;;                  4  [STACK] unsigned char 
 22522 ;; Registers used:
 22523 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 22524 ;; Tracked objects:
 22525 ;;		On entry : 0/1
 22526 ;;		On exit  : 0/0
 22527 ;;		Unchanged: 0/0
 22528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22533 ;;Total ram usage:        0 bytes
 22534 ;; Hardware stack levels used:    1
 22535 ;; Hardware stack levels required when called:   15
 22536 ;; This function calls:
 22537 ;;		Nothing
 22538 ;; This function is called by:
 22539 ;;		_conv_raw_result
 22540 ;;		_calc_bsoc
 22541 ;;		_init_bsoc
 22542 ;;		_efgtoa
 22543 ;; This function uses a reentrant model
 22544 ;;
 22545                           
 22546                           	psect	text95
 22547  014276                     __ptext95:
 22548                           	opt callstack 0
 22549  014276                     ___fldiv:
 22550                           	opt callstack 0
 22551                           
 22552                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 22553  014276  0E0D               	movlw	13
 22554  014278  26E1               	addwf	fsr1l,f,c
 22555  01427A  0E00               	movlw	0
 22556  01427C  22E2               	addwfc	fsr1h,f,c
 22557                           
 22558                           ;stkvar	_b @ sp[(-13)+-4]
 22559                           
 22560                           ;incstack = 0
 22561 ;; hardware stack exceeded
 22562  01427E  0EF2               	movlw	242
 22563  014280  24E1               	addwf	fsr1l,w,c
 22564  014282  6ED9               	movwf	fsr2l,c
 22565  014284  0EFF               	movlw	255
 22566  014286  20E2               	addwfc	fsr1h,w,c
 22567  014288  6EDA               	movwf	fsr2h,c
 22568  01428A  50DF               	movf	indf2,w,c
 22569  01428C  6E0C               	movwf	(btemp+11)^0,c
 22570  01428E  0E80               	movlw	128
 22571  014290  160C               	andwf	(btemp+11)^0,f,c
 22572                           
 22573                           ;stkvar	_sign @ sp[(-13)+12]
 22574  014292  0EFF               	movlw	-1
 22575  014294  0060  F033  FFE3   	movff	btemp+11,plusw1
 22576                           
 22577                           ;stkvar	_b @ sp[(-13)+-4]
 22578  01429A  0EF2               	movlw	242
 22579  01429C  24E1               	addwf	fsr1l,w,c
 22580  01429E  6ED9               	movwf	fsr2l,c
 22581  0142A0  0EFF               	movlw	255
 22582  0142A2  20E2               	addwfc	fsr1h,w,c
 22583  0142A4  6EDA               	movwf	fsr2h,c
 22584  0142A6  50DF               	movf	indf2,w,c
 22585  0142A8  6E0C               	movwf	(btemp+11)^0,c
 22586  0142AA  90D8               	bcf	status,0,c
 22587  0142AC  340C               	rlcf	(btemp+11)^0,w,c
 22588  0142AE  6E0B               	movwf	(btemp+10)^0,c
 22589                           
 22590                           ;stkvar	_bexp @ sp[(-13)+11]
 22591  0142B0  0EFE               	movlw	-2
 22592  0142B2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22593                           
 22594                           ;stkvar	_b @ sp[(-13)+-4]
 22595  0142B8  0EF1               	movlw	241
 22596  0142BA  24E1               	addwf	fsr1l,w,c
 22597  0142BC  6ED9               	movwf	fsr2l,c
 22598  0142BE  0EFF               	movlw	255
 22599  0142C0  20E2               	addwfc	fsr1h,w,c
 22600  0142C2  6EDA               	movwf	fsr2h,c
 22601  0142C4  AEDF               	btfss	indf2,7,c
 22602  0142C6  D002               	goto	l7672
 22603                           
 22604                           ;stkvar	_bexp @ sp[(-13)+11]
 22605  0142C8  0EFE               	movlw	-2
 22606  0142CA  80E3               	bsf	plusw1,0,c
 22607  0142CC                     l7672:
 22608                           
 22609                           ;stkvar	_bexp @ sp[(-13)+11]
 22610  0142CC  0EFE               	movlw	-2
 22611  0142CE  50E3               	movf	plusw1,w,c
 22612  0142D0  B4D8               	btfsc	status,2,c
 22613  0142D2  D027               	goto	l7682
 22614                           
 22615                           ;stkvar	_bexp @ sp[(-13)+11]
 22616  0142D4  0EFE               	movlw	-2
 22617  0142D6  28E3               	incf	plusw1,w,c
 22618  0142D8  A4D8               	btfss	status,2,c
 22619  0142DA  D018               	goto	l7678
 22620  0142DC  0E00               	movlw	0
 22621  0142DE  6E09               	movwf	(btemp+8)^0,c
 22622  0142E0  0E00               	movlw	0
 22623  0142E2  6E0A               	movwf	(btemp+9)^0,c
 22624  0142E4  0E00               	movlw	0
 22625  0142E6  6E0B               	movwf	(btemp+10)^0,c
 22626  0142E8  0E00               	movlw	0
 22627  0142EA  6E0C               	movwf	(btemp+11)^0,c
 22628                           
 22629                           ;stkvar	_b @ sp[(-13)+-4]
 22630  0142EC  0EEF               	movlw	-17
 22631  0142EE  0060  F027  FFE3   	movff	btemp+8,plusw1
 22632  0142F4  0EF0               	movlw	-16
 22633  0142F6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22634  0142FC  0EF1               	movlw	-15
 22635  0142FE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22636  014304  0EF2               	movlw	-14
 22637  014306  0060  F033  FFE3   	movff	btemp+11,plusw1
 22638  01430C                     l7678:
 22639                           
 22640                           ;stkvar	_b @ sp[(-13)+-4]
 22641  01430C  0EF1               	movlw	-15
 22642  01430E  8EE3               	bsf	plusw1,7,c
 22643                           
 22644                           ;stkvar	_b @ sp[(-13)+-4]
 22645  014310  0EF2               	movlw	242
 22646  014312  24E1               	addwf	fsr1l,w,c
 22647  014314  6ED9               	movwf	fsr2l,c
 22648  014316  0EFF               	movlw	255
 22649  014318  20E2               	addwfc	fsr1h,w,c
 22650  01431A  6EDA               	movwf	fsr2h,c
 22651  01431C  0E00               	movlw	0
 22652  01431E  6EDF               	movwf	indf2,c
 22653  014320  D018               	goto	l7684
 22654  014322                     l7682:
 22655  014322  0E00               	movlw	0
 22656  014324  6E09               	movwf	(btemp+8)^0,c
 22657  014326  0E00               	movlw	0
 22658  014328  6E0A               	movwf	(btemp+9)^0,c
 22659  01432A  0E00               	movlw	0
 22660  01432C  6E0B               	movwf	(btemp+10)^0,c
 22661  01432E  0E00               	movlw	0
 22662  014330  6E0C               	movwf	(btemp+11)^0,c
 22663                           
 22664                           ;stkvar	_b @ sp[(-13)+-4]
 22665  014332  0EEF               	movlw	-17
 22666  014334  0060  F027  FFE3   	movff	btemp+8,plusw1
 22667  01433A  0EF0               	movlw	-16
 22668  01433C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22669  014342  0EF1               	movlw	-15
 22670  014344  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22671  01434A  0EF2               	movlw	-14
 22672  01434C  0060  F033  FFE3   	movff	btemp+11,plusw1
 22673  014352                     l7684:
 22674                           
 22675                           ;stkvar	_a @ sp[(-13)+-8]
 22676  014352  0EEE               	movlw	238
 22677  014354  24E1               	addwf	fsr1l,w,c
 22678  014356  6ED9               	movwf	fsr2l,c
 22679  014358  0EFF               	movlw	255
 22680  01435A  20E2               	addwfc	fsr1h,w,c
 22681  01435C  6EDA               	movwf	fsr2h,c
 22682  01435E  50DF               	movf	indf2,w,c
 22683  014360  6E0C               	movwf	(btemp+11)^0,c
 22684  014362  0E80               	movlw	128
 22685  014364  160C               	andwf	(btemp+11)^0,f,c
 22686                           
 22687                           ;stkvar	_sign @ sp[(-13)+12]
 22688  014366  50E1               	movf	fsr1l,w,c
 22689  014368  0FFF               	addlw	-1
 22690  01436A  6ED9               	movwf	fsr2l,c
 22691  01436C  50E2               	movf	fsr1h,w,c
 22692  01436E  6EDA               	movwf	fsr2h,c
 22693  014370  0EFF               	movlw	255
 22694  014372  22DA               	addwfc	fsr2h,f,c
 22695  014374  500C               	movf	(btemp+11)^0,w,c
 22696  014376  1ADF               	xorwf	indf2,f,c
 22697                           
 22698                           ;stkvar	_a @ sp[(-13)+-8]
 22699  014378  0EEE               	movlw	238
 22700  01437A  24E1               	addwf	fsr1l,w,c
 22701  01437C  6ED9               	movwf	fsr2l,c
 22702  01437E  0EFF               	movlw	255
 22703  014380  20E2               	addwfc	fsr1h,w,c
 22704  014382  6EDA               	movwf	fsr2h,c
 22705  014384  50DF               	movf	indf2,w,c
 22706  014386  6E0C               	movwf	(btemp+11)^0,c
 22707  014388  90D8               	bcf	status,0,c
 22708  01438A  340C               	rlcf	(btemp+11)^0,w,c
 22709  01438C  6E0B               	movwf	(btemp+10)^0,c
 22710                           
 22711                           ;stkvar	_aexp @ sp[(-13)+10]
 22712  01438E  0EFD               	movlw	-3
 22713  014390  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22714                           
 22715                           ;stkvar	_a @ sp[(-13)+-8]
 22716  014396  0EED               	movlw	237
 22717  014398  24E1               	addwf	fsr1l,w,c
 22718  01439A  6ED9               	movwf	fsr2l,c
 22719  01439C  0EFF               	movlw	255
 22720  01439E  20E2               	addwfc	fsr1h,w,c
 22721  0143A0  6EDA               	movwf	fsr2h,c
 22722  0143A2  AEDF               	btfss	indf2,7,c
 22723  0143A4  D002               	goto	l7692
 22724                           
 22725                           ;stkvar	_aexp @ sp[(-13)+10]
 22726  0143A6  0EFD               	movlw	-3
 22727  0143A8  80E3               	bsf	plusw1,0,c
 22728  0143AA                     l7692:
 22729                           
 22730                           ;stkvar	_aexp @ sp[(-13)+10]
 22731  0143AA  0EFD               	movlw	-3
 22732  0143AC  50E3               	movf	plusw1,w,c
 22733  0143AE  B4D8               	btfsc	status,2,c
 22734  0143B0  D027               	goto	l7702
 22735                           
 22736                           ;stkvar	_aexp @ sp[(-13)+10]
 22737  0143B2  0EFD               	movlw	-3
 22738  0143B4  28E3               	incf	plusw1,w,c
 22739  0143B6  A4D8               	btfss	status,2,c
 22740  0143B8  D018               	goto	l7698
 22741  0143BA  0E00               	movlw	0
 22742  0143BC  6E09               	movwf	(btemp+8)^0,c
 22743  0143BE  0E00               	movlw	0
 22744  0143C0  6E0A               	movwf	(btemp+9)^0,c
 22745  0143C2  0E00               	movlw	0
 22746  0143C4  6E0B               	movwf	(btemp+10)^0,c
 22747  0143C6  0E00               	movlw	0
 22748  0143C8  6E0C               	movwf	(btemp+11)^0,c
 22749                           
 22750                           ;stkvar	_a @ sp[(-13)+-8]
 22751  0143CA  0EEB               	movlw	-21
 22752  0143CC  0060  F027  FFE3   	movff	btemp+8,plusw1
 22753  0143D2  0EEC               	movlw	-20
 22754  0143D4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22755  0143DA  0EED               	movlw	-19
 22756  0143DC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22757  0143E2  0EEE               	movlw	-18
 22758  0143E4  0060  F033  FFE3   	movff	btemp+11,plusw1
 22759  0143EA                     l7698:
 22760                           
 22761                           ;stkvar	_a @ sp[(-13)+-8]
 22762  0143EA  0EED               	movlw	-19
 22763  0143EC  8EE3               	bsf	plusw1,7,c
 22764                           
 22765                           ;stkvar	_a @ sp[(-13)+-8]
 22766  0143EE  0EEE               	movlw	238
 22767  0143F0  24E1               	addwf	fsr1l,w,c
 22768  0143F2  6ED9               	movwf	fsr2l,c
 22769  0143F4  0EFF               	movlw	255
 22770  0143F6  20E2               	addwfc	fsr1h,w,c
 22771  0143F8  6EDA               	movwf	fsr2h,c
 22772  0143FA  0E00               	movlw	0
 22773  0143FC  6EDF               	movwf	indf2,c
 22774  0143FE  D018               	goto	l7704
 22775  014400                     l7702:
 22776  014400  0E00               	movlw	0
 22777  014402  6E09               	movwf	(btemp+8)^0,c
 22778  014404  0E00               	movlw	0
 22779  014406  6E0A               	movwf	(btemp+9)^0,c
 22780  014408  0E00               	movlw	0
 22781  01440A  6E0B               	movwf	(btemp+10)^0,c
 22782  01440C  0E00               	movlw	0
 22783  01440E  6E0C               	movwf	(btemp+11)^0,c
 22784                           
 22785                           ;stkvar	_a @ sp[(-13)+-8]
 22786  014410  0EEB               	movlw	-21
 22787  014412  0060  F027  FFE3   	movff	btemp+8,plusw1
 22788  014418  0EEC               	movlw	-20
 22789  01441A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22790  014420  0EED               	movlw	-19
 22791  014422  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22792  014428  0EEE               	movlw	-18
 22793  01442A  0060  F033  FFE3   	movff	btemp+11,plusw1
 22794  014430                     l7704:
 22795                           
 22796                           ;stkvar	_a @ sp[(-13)+-8]
 22797  014430  0EEB               	movlw	-21
 22798  014432  50E3               	movf	plusw1,w,c
 22799  014434  E139               	bnz	l7716
 22800  014436  0EEC               	movlw	-20
 22801  014438  50E3               	movf	plusw1,w,c
 22802  01443A  E136               	bnz	l7716
 22803  01443C  0EED               	movlw	-19
 22804  01443E  50E3               	movf	plusw1,w,c
 22805  014440  E133               	bnz	l7716
 22806  014442  0EEE               	movlw	-18
 22807  014444  50E3               	movf	plusw1,w,c
 22808  014446  A4D8               	btfss	status,2,c
 22809  014448  D02F               	goto	l7716
 22810                           
 22811                           ;stkvar	_b @ sp[(-13)+-4]
 22812  01444A  0EEF               	movlw	-17
 22813  01444C  6AE3               	clrf	plusw1,c
 22814  01444E  0EF0               	movlw	-16
 22815  014450  6AE3               	clrf	plusw1,c
 22816  014452  0EF1               	movlw	-15
 22817  014454  6AE3               	clrf	plusw1,c
 22818  014456  0EF2               	movlw	-14
 22819  014458  6AE3               	clrf	plusw1,c
 22820                           
 22821                           ;stkvar	_b @ sp[(-13)+-4]
 22822  01445A  0EF1               	movlw	241
 22823  01445C  24E1               	addwf	fsr1l,w,c
 22824  01445E  6ED9               	movwf	fsr2l,c
 22825  014460  0EFF               	movlw	255
 22826  014462  20E2               	addwfc	fsr1h,w,c
 22827  014464  6EDA               	movwf	fsr2h,c
 22828  014466  0E80               	movlw	128
 22829  014468  12DE               	iorwf	postinc2,f,c
 22830  01446A  0E7F               	movlw	127
 22831  01446C  12DD               	iorwf	postdec2,f,c
 22832  01446E                     l7710:
 22833                           
 22834                           ;stkvar	_sign @ sp[(-13)+12]
 22835  01446E  0EFF               	movlw	-1
 22836  014470  006F FF8C  F00C    	movff	plusw1,btemp+11
 22837                           
 22838                           ;stkvar	_b @ sp[(-13)+-4]
 22839  014476  0EF2               	movlw	242
 22840  014478  24E1               	addwf	fsr1l,w,c
 22841  01447A  6ED9               	movwf	fsr2l,c
 22842  01447C  0EFF               	movlw	255
 22843  01447E  20E2               	addwfc	fsr1h,w,c
 22844  014480  6EDA               	movwf	fsr2h,c
 22845  014482  500C               	movf	(btemp+11)^0,w,c
 22846  014484  12DF               	iorwf	indf2,f,c
 22847                           
 22848                           ;stkvar	_b @ sp[(-13)+-4]
 22849  014486  0EEF               	movlw	-17
 22850  014488  006F FF8C  F001    	movff	plusw1,btemp
 22851  01448E  0EF0               	movlw	-16
 22852  014490  006F FF8C  F002    	movff	plusw1,btemp+1
 22853  014496  0EF1               	movlw	-15
 22854  014498  006F FF8C  F003    	movff	plusw1,btemp+2
 22855  01449E  0EF2               	movlw	-14
 22856  0144A0  006F FF8C  F004    	movff	plusw1,btemp+3
 22857  0144A6  D19F               	goto	l2899
 22858  0144A8                     l7716:
 22859                           
 22860                           ;stkvar	_bexp @ sp[(-13)+11]
 22861  0144A8  0EFE               	movlw	-2
 22862  0144AA  50E3               	movf	plusw1,w,c
 22863  0144AC  A4D8               	btfss	status,2,c
 22864  0144AE  D009               	goto	l7724
 22865  0144B0  0E00               	movlw	0
 22866  0144B2  6E01               	movwf	btemp^0,c
 22867  0144B4  0E00               	movlw	0
 22868  0144B6  6E02               	movwf	(btemp+1)^0,c
 22869  0144B8  0E00               	movlw	0
 22870  0144BA  6E03               	movwf	(btemp+2)^0,c
 22871  0144BC  0E00               	movlw	0
 22872  0144BE  6E04               	movwf	(btemp+3)^0,c
 22873  0144C0  D192               	goto	l2899
 22874  0144C2                     l7724:
 22875                           
 22876                           ;stkvar	_bexp @ sp[(-13)+11]
 22877  0144C2  0EFE               	movlw	-2
 22878  0144C4  50E3               	movf	plusw1,w,c
 22879  0144C6  6E0B               	movwf	(btemp+10)^0,c
 22880  0144C8  6A0C               	clrf	(btemp+11)^0,c
 22881                           
 22882                           ;stkvar	_aexp @ sp[(-13)+10]
 22883  0144CA  0EFD               	movlw	-3
 22884  0144CC  50E3               	movf	plusw1,w,c
 22885  0144CE  5E0B               	subwf	(btemp+10)^0,f,c
 22886  0144D0  0E00               	movlw	0
 22887  0144D2  5A0C               	subwfb	(btemp+11)^0,f,c
 22888  0144D4  0E7F               	movlw	127
 22889  0144D6  260B               	addwf	(btemp+10)^0,f,c
 22890  0144D8  0E00               	movlw	0
 22891  0144DA  220C               	addwfc	(btemp+11)^0,f,c
 22892                           
 22893                           ;stkvar	_new_exp @ sp[(-13)+8]
 22894  0144DC  0EFB               	movlw	-5
 22895  0144DE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22896  0144E4  0EFC               	movlw	-4
 22897  0144E6  0060  F033  FFE3   	movff	btemp+11,plusw1
 22898                           
 22899                           ;stkvar	_b @ sp[(-13)+-4]
 22900  0144EC  0EEF               	movlw	-17
 22901  0144EE  006F FF8C  F009    	movff	plusw1,btemp+8
 22902  0144F4  0EF0               	movlw	-16
 22903  0144F6  006F FF8C  F00A    	movff	plusw1,btemp+9
 22904  0144FC  0EF1               	movlw	-15
 22905  0144FE  006F FF8C  F00B    	movff	plusw1,btemp+10
 22906  014504  0EF2               	movlw	-14
 22907  014506  006F FF8C  F00C    	movff	plusw1,btemp+11
 22908                           
 22909                           ;stkvar	_rem @ sp[(-13)+4]
 22910  01450C  0EF7               	movlw	-9
 22911  01450E  0060  F027  FFE3   	movff	btemp+8,plusw1
 22912  014514  0EF8               	movlw	-8
 22913  014516  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22914  01451C  0EF9               	movlw	-7
 22915  01451E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22916  014524  0EFA               	movlw	-6
 22917  014526  0060  F033  FFE3   	movff	btemp+11,plusw1
 22918                           
 22919                           ;stkvar	_b @ sp[(-13)+-4]
 22920  01452C  0EEF               	movlw	-17
 22921  01452E  6AE3               	clrf	plusw1,c
 22922  014530  0EF0               	movlw	-16
 22923  014532  6AE3               	clrf	plusw1,c
 22924  014534  0EF1               	movlw	-15
 22925  014536  6AE3               	clrf	plusw1,c
 22926  014538  0EF2               	movlw	-14
 22927  01453A  6AE3               	clrf	plusw1,c
 22928                           
 22929                           ;stkvar	_grs @ sp[(-13)+0]
 22930  01453C  0EF3               	movlw	-13
 22931  01453E  6AE3               	clrf	plusw1,c
 22932  014540  0EF4               	movlw	-12
 22933  014542  6AE3               	clrf	plusw1,c
 22934  014544  0EF5               	movlw	-11
 22935  014546  6AE3               	clrf	plusw1,c
 22936  014548  0EF6               	movlw	-10
 22937  01454A  6AE3               	clrf	plusw1,c
 22938                           
 22939                           ;stkvar	_aexp @ sp[(-13)+10]
 22940  01454C  0EFD               	movlw	-3
 22941  01454E  6AE3               	clrf	plusw1,c
 22942  014550  D050               	goto	l7752
 22943  014552                     l7734:
 22944                           
 22945                           ;stkvar	_aexp @ sp[(-13)+10]
 22946  014552  0EFD               	movlw	-3
 22947  014554  50E3               	movf	plusw1,w,c
 22948  014556  B4D8               	btfsc	status,2,c
 22949  014558  D020               	goto	l7744
 22950                           
 22951                           ;stkvar	_rem @ sp[(-13)+4]
 22952  01455A  90D8               	bcf	status,0,c
 22953  01455C  0EF7               	movlw	-9
 22954  01455E  36E3               	rlcf	plusw1,f,c
 22955  014560  0EF8               	movlw	-8
 22956  014562  36E3               	rlcf	plusw1,f,c
 22957  014564  0EF9               	movlw	-7
 22958  014566  36E3               	rlcf	plusw1,f,c
 22959  014568  0EFA               	movlw	-6
 22960  01456A  36E3               	rlcf	plusw1,f,c
 22961                           
 22962                           ;stkvar	_b @ sp[(-13)+-4]
 22963  01456C  90D8               	bcf	status,0,c
 22964  01456E  0EEF               	movlw	-17
 22965  014570  36E3               	rlcf	plusw1,f,c
 22966  014572  0EF0               	movlw	-16
 22967  014574  36E3               	rlcf	plusw1,f,c
 22968  014576  0EF1               	movlw	-15
 22969  014578  36E3               	rlcf	plusw1,f,c
 22970  01457A  0EF2               	movlw	-14
 22971  01457C  36E3               	rlcf	plusw1,f,c
 22972                           
 22973                           ;stkvar	_grs @ sp[(-13)+0]
 22974  01457E  0EF6               	movlw	-10
 22975  014580  AEE3               	btfss	plusw1,7,c
 22976  014582  D002               	goto	l7742
 22977                           
 22978                           ;stkvar	_b @ sp[(-13)+-4]
 22979  014584  0EEF               	movlw	-17
 22980  014586  80E3               	bsf	plusw1,0,c
 22981  014588                     l7742:
 22982                           
 22983                           ;stkvar	_grs @ sp[(-13)+0]
 22984  014588  90D8               	bcf	status,0,c
 22985  01458A  0EF3               	movlw	-13
 22986  01458C  36E3               	rlcf	plusw1,f,c
 22987  01458E  0EF4               	movlw	-12
 22988  014590  36E3               	rlcf	plusw1,f,c
 22989  014592  0EF5               	movlw	-11
 22990  014594  36E3               	rlcf	plusw1,f,c
 22991  014596  0EF6               	movlw	-10
 22992  014598  36E3               	rlcf	plusw1,f,c
 22993  01459A                     l7744:
 22994                           
 22995                           ;stkvar	_a @ sp[(-13)+-8]
 22996                           ;stkvar	_rem @ sp[(-13)+4]
 22997  01459A  50E1               	movf	fsr1l,w,c
 22998  01459C  0FF7               	addlw	-9
 22999  01459E  6ED9               	movwf	fsr2l,c
 23000  0145A0  50E2               	movf	fsr1h,w,c
 23001  0145A2  6EDA               	movwf	fsr2h,c
 23002  0145A4  0EFF               	movlw	255
 23003  0145A6  22DA               	addwfc	fsr2h,f,c
 23004  0145A8  0EEB               	movlw	-21
 23005  0145AA  50E3               	movf	plusw1,w,c
 23006  0145AC  5CDE               	subwf	postinc2,w,c
 23007  0145AE  0EEC               	movlw	-20
 23008  0145B0  50E3               	movf	plusw1,w,c
 23009  0145B2  58DE               	subwfb	postinc2,w,c
 23010  0145B4  0EED               	movlw	-19
 23011  0145B6  50E3               	movf	plusw1,w,c
 23012  0145B8  58DE               	subwfb	postinc2,w,c
 23013  0145BA  0EEE               	movlw	-18
 23014  0145BC  50E3               	movf	plusw1,w,c
 23015  0145BE  58DE               	subwfb	postinc2,w,c
 23016  0145C0  A0D8               	btfss	status,0,c
 23017  0145C2  D015               	goto	l7750
 23018                           
 23019                           ;stkvar	_grs @ sp[(-13)+0]
 23020  0145C4  0EF6               	movlw	-10
 23021  0145C6  8CE3               	bsf	plusw1,6,c
 23022                           
 23023                           ;stkvar	_a @ sp[(-13)+-8]
 23024                           ;stkvar	_rem @ sp[(-13)+4]
 23025  0145C8  50E1               	movf	fsr1l,w,c
 23026  0145CA  0FF7               	addlw	-9
 23027  0145CC  6ED9               	movwf	fsr2l,c
 23028  0145CE  50E2               	movf	fsr1h,w,c
 23029  0145D0  6EDA               	movwf	fsr2h,c
 23030  0145D2  0EFF               	movlw	255
 23031  0145D4  22DA               	addwfc	fsr2h,f,c
 23032  0145D6  0EEB               	movlw	-21
 23033  0145D8  50E3               	movf	plusw1,w,c
 23034  0145DA  5EDE               	subwf	postinc2,f,c
 23035  0145DC  0EEC               	movlw	-20
 23036  0145DE  50E3               	movf	plusw1,w,c
 23037  0145E0  5ADE               	subwfb	postinc2,f,c
 23038  0145E2  0EED               	movlw	-19
 23039  0145E4  50E3               	movf	plusw1,w,c
 23040  0145E6  5ADE               	subwfb	postinc2,f,c
 23041  0145E8  0EEE               	movlw	-18
 23042  0145EA  50E3               	movf	plusw1,w,c
 23043  0145EC  5ADE               	subwfb	postinc2,f,c
 23044  0145EE                     l7750:
 23045                           
 23046                           ;stkvar	_aexp @ sp[(-13)+10]
 23047  0145EE  0EFD               	movlw	-3
 23048  0145F0  2AE3               	incf	plusw1,f,c
 23049  0145F2                     l7752:
 23050                           
 23051                           ;stkvar	_aexp @ sp[(-13)+10]
 23052  0145F2  0EFD               	movlw	-3
 23053  0145F4  006F FF8C  F001    	movff	plusw1,btemp
 23054  0145FA  0E19               	movlw	25
 23055  0145FC  6401               	cpfsgt	btemp^0,c
 23056  0145FE  D7A9               	goto	l7734
 23057                           
 23058                           ;stkvar	_rem @ sp[(-13)+4]
 23059  014600  0EF7               	movlw	-9
 23060  014602  50E3               	movf	plusw1,w,c
 23061  014604  E10A               	bnz	u6210
 23062  014606  0EF8               	movlw	-8
 23063  014608  50E3               	movf	plusw1,w,c
 23064  01460A  E107               	bnz	u6210
 23065  01460C  0EF9               	movlw	-7
 23066  01460E  50E3               	movf	plusw1,w,c
 23067  014610  E104               	bnz	u6210
 23068  014612  0EFA               	movlw	-6
 23069  014614  50E3               	movf	plusw1,w,c
 23070  014616  B4D8               	btfsc	status,2,c
 23071  014618  D024               	goto	l7768
 23072  01461A                     u6210:
 23073                           
 23074                           ;stkvar	_grs @ sp[(-13)+0]
 23075  01461A  0EF3               	movlw	-13
 23076  01461C  80E3               	bsf	plusw1,0,c
 23077  01461E  D021               	goto	l7768
 23078  014620                     l7758:
 23079                           
 23080                           ;stkvar	_b @ sp[(-13)+-4]
 23081  014620  90D8               	bcf	status,0,c
 23082  014622  0EEF               	movlw	-17
 23083  014624  36E3               	rlcf	plusw1,f,c
 23084  014626  0EF0               	movlw	-16
 23085  014628  36E3               	rlcf	plusw1,f,c
 23086  01462A  0EF1               	movlw	-15
 23087  01462C  36E3               	rlcf	plusw1,f,c
 23088  01462E  0EF2               	movlw	-14
 23089  014630  36E3               	rlcf	plusw1,f,c
 23090                           
 23091                           ;stkvar	_grs @ sp[(-13)+0]
 23092  014632  0EF6               	movlw	-10
 23093  014634  AEE3               	btfss	plusw1,7,c
 23094  014636  D002               	goto	l7764
 23095                           
 23096                           ;stkvar	_b @ sp[(-13)+-4]
 23097  014638  0EEF               	movlw	-17
 23098  01463A  80E3               	bsf	plusw1,0,c
 23099  01463C                     l7764:
 23100                           
 23101                           ;stkvar	_grs @ sp[(-13)+0]
 23102  01463C  90D8               	bcf	status,0,c
 23103  01463E  0EF3               	movlw	-13
 23104  014640  36E3               	rlcf	plusw1,f,c
 23105  014642  0EF4               	movlw	-12
 23106  014644  36E3               	rlcf	plusw1,f,c
 23107  014646  0EF5               	movlw	-11
 23108  014648  36E3               	rlcf	plusw1,f,c
 23109  01464A  0EF6               	movlw	-10
 23110  01464C  36E3               	rlcf	plusw1,f,c
 23111                           
 23112                           ;stkvar	_new_exp @ sp[(-13)+8]
 23113  01464E  50E1               	movf	fsr1l,w,c
 23114  014650  0FFB               	addlw	-5
 23115  014652  6ED9               	movwf	fsr2l,c
 23116  014654  50E2               	movf	fsr1h,w,c
 23117  014656  6EDA               	movwf	fsr2h,c
 23118  014658  0EFF               	movlw	255
 23119  01465A  22DA               	addwfc	fsr2h,f,c
 23120  01465C  06DE               	decf	postinc2,f,c
 23121  01465E  0E00               	movlw	0
 23122  014660  5ADD               	subwfb	postdec2,f,c
 23123  014662                     l7768:
 23124                           
 23125                           ;stkvar	_b @ sp[(-13)+-4]
 23126  014662  0EF1               	movlw	-15
 23127  014664  AEE3               	btfss	plusw1,7,c
 23128  014666  D7DC               	goto	l7758
 23129                           
 23130                           ;stkvar	_aexp @ sp[(-13)+10]
 23131  014668  0EFD               	movlw	-3
 23132  01466A  6AE3               	clrf	plusw1,c
 23133                           
 23134                           ;stkvar	_grs @ sp[(-13)+0]
 23135  01466C  0EF6               	movlw	-10
 23136  01466E  AEE3               	btfss	plusw1,7,c
 23137  014670  D020               	goto	l7782
 23138                           
 23139                           ;stkvar	_grs @ sp[(-13)+0]
 23140  014672  50E1               	movf	fsr1l,w,c
 23141  014674  0FF3               	addlw	-13
 23142  014676  6ED9               	movwf	fsr2l,c
 23143  014678  50E2               	movf	fsr1h,w,c
 23144  01467A  6EDA               	movwf	fsr2h,c
 23145  01467C  0EFF               	movlw	255
 23146  01467E  22DA               	addwfc	fsr2h,f,c
 23147  014680  0EFF               	movlw	255
 23148  014682  14DE               	andwf	postinc2,w,c
 23149  014684  6E09               	movwf	(btemp+8)^0,c
 23150  014686  0EFF               	movlw	255
 23151  014688  14DE               	andwf	postinc2,w,c
 23152  01468A  6E0A               	movwf	(btemp+9)^0,c
 23153  01468C  0EFF               	movlw	255
 23154  01468E  14DE               	andwf	postinc2,w,c
 23155  014690  6E0B               	movwf	(btemp+10)^0,c
 23156  014692  0E7F               	movlw	127
 23157  014694  14DE               	andwf	postinc2,w,c
 23158  014696  6E0C               	movwf	(btemp+11)^0,c
 23159  014698  5009               	movf	(btemp+8)^0,w,c
 23160  01469A  100A               	iorwf	(btemp+9)^0,w,c
 23161  01469C  100B               	iorwf	(btemp+10)^0,w,c
 23162  01469E  100C               	iorwf	(btemp+11)^0,w,c
 23163  0146A0  B4D8               	btfsc	status,2,c
 23164  0146A2  D004               	goto	l7778
 23165  0146A4                     u6250:
 23166                           
 23167                           ;stkvar	_aexp @ sp[(-13)+10]
 23168  0146A4  0EFD               	movlw	-3
 23169  0146A6  6AE3               	clrf	plusw1,c
 23170  0146A8  2AE3               	incf	plusw1,f,c
 23171  0146AA  D003               	goto	l7782
 23172  0146AC                     l7778:
 23173                           
 23174                           ;stkvar	_b @ sp[(-13)+-4]
 23175  0146AC  0EEF               	movlw	-17
 23176  0146AE  B0E3               	btfsc	plusw1,0,c
 23177  0146B0  D7F9               	goto	u6250
 23178  0146B2                     l7782:
 23179                           
 23180                           ;stkvar	_aexp @ sp[(-13)+10]
 23181  0146B2  0EFD               	movlw	-3
 23182  0146B4  50E3               	movf	plusw1,w,c
 23183  0146B6  B4D8               	btfsc	status,2,c
 23184  0146B8  D036               	goto	l7792
 23185                           
 23186                           ;stkvar	_b @ sp[(-13)+-4]
 23187  0146BA  50E1               	movf	fsr1l,w,c
 23188  0146BC  0FEF               	addlw	-17
 23189  0146BE  6ED9               	movwf	fsr2l,c
 23190  0146C0  50E2               	movf	fsr1h,w,c
 23191  0146C2  6EDA               	movwf	fsr2h,c
 23192  0146C4  0EFF               	movlw	255
 23193  0146C6  22DA               	addwfc	fsr2h,f,c
 23194  0146C8  2ADE               	incf	postinc2,f,c
 23195  0146CA  0E00               	movlw	0
 23196  0146CC  22DE               	addwfc	postinc2,f,c
 23197  0146CE  22DE               	addwfc	postinc2,f,c
 23198  0146D0  22DE               	addwfc	postinc2,f,c
 23199                           
 23200                           ;stkvar	_b @ sp[(-13)+-4]
 23201  0146D2  0EF2               	movlw	-14
 23202  0146D4  A0E3               	btfss	plusw1,0,c
 23203  0146D6  D027               	goto	l7792
 23204  0146D8  0E01               	movlw	1
 23205  0146DA  6E0C               	movwf	(btemp+11)^0,c
 23206                           
 23207                           ;stkvar	_b @ sp[(-13)+-4]
 23208  0146DC  50E1               	movf	fsr1l,w,c
 23209  0146DE  0FEF               	addlw	-17
 23210  0146E0  6ED9               	movwf	fsr2l,c
 23211  0146E2  50E2               	movf	fsr1h,w,c
 23212  0146E4  6EDA               	movwf	fsr2h,c
 23213  0146E6  0EFF               	movlw	255
 23214  0146E8  22DA               	addwfc	fsr2h,f,c
 23215  0146EA  280C               	incf	(btemp+11)^0,w,c
 23216  0146EC  52DE               	movf	postinc2,f,c
 23217  0146EE  D008               	goto	u6290
 23218  0146F0                     u6295:
 23219  0146F0  52DE               	movf	postinc2,f,c
 23220  0146F2  90D8               	bcf	status,0,c
 23221  0146F4  BEDC               	btfsc	preinc2,7,c
 23222  0146F6  80D8               	bsf	status,0,c
 23223  0146F8  32DD               	rrcf	postdec2,f,c
 23224  0146FA  32DD               	rrcf	postdec2,f,c
 23225  0146FC  32DD               	rrcf	postdec2,f,c
 23226  0146FE  32DE               	rrcf	postinc2,f,c
 23227  014700                     u6290:
 23228  014700  2EE8               	decfsz	wreg,f,c
 23229  014702  D7F6               	goto	u6295
 23230                           
 23231                           ;stkvar	_new_exp @ sp[(-13)+8]
 23232  014704  0EFB               	movlw	-5
 23233  014706  50E3               	movf	plusw1,w,c
 23234  014708  0F01               	addlw	1
 23235  01470A  6E01               	movwf	btemp^0,c
 23236  01470C  0EFB               	movlw	-5
 23237  01470E  0060  F007  FFE3   	movff	btemp,plusw1
 23238  014714  6A01               	clrf	btemp^0,c
 23239  014716  0EFC               	movlw	-4
 23240  014718  50E3               	movf	plusw1,w,c
 23241  01471A  2001               	addwfc	btemp^0,w,c
 23242  01471C  6E01               	movwf	btemp^0,c
 23243  01471E  0EFC               	movlw	-4
 23244  014720  0060  F007  FFE3   	movff	btemp,plusw1
 23245  014726                     l7792:
 23246                           
 23247                           ;stkvar	_new_exp @ sp[(-13)+8]
 23248  014726  0EFC               	movlw	-4
 23249  014728  BEE3               	btfsc	plusw1,7,c
 23250  01472A  D01B               	goto	l7798
 23251  01472C  0EFC               	movlw	-4
 23252  01472E  50E3               	movf	plusw1,w,c
 23253  014730  E104               	bnz	u6300
 23254  014732  0EFB               	movlw	-5
 23255  014734  28E3               	incf	plusw1,w,c
 23256  014736  A0D8               	btfss	status,0,c
 23257  014738  D014               	goto	l7798
 23258  01473A                     u6300:
 23259  01473A  0EFF               	movlw	255
 23260  01473C  6E0B               	movwf	(btemp+10)^0,c
 23261  01473E  0E00               	movlw	0
 23262  014740  6E0C               	movwf	(btemp+11)^0,c
 23263                           
 23264                           ;stkvar	_new_exp @ sp[(-13)+8]
 23265  014742  0EFB               	movlw	-5
 23266  014744  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23267  01474A  0EFC               	movlw	-4
 23268  01474C  0060  F033  FFE3   	movff	btemp+11,plusw1
 23269                           
 23270                           ;stkvar	_b @ sp[(-13)+-4]
 23271  014752  0EEF               	movlw	-17
 23272  014754  6AE3               	clrf	plusw1,c
 23273  014756  0EF0               	movlw	-16
 23274  014758  6AE3               	clrf	plusw1,c
 23275  01475A  0EF1               	movlw	-15
 23276  01475C  6AE3               	clrf	plusw1,c
 23277  01475E  0EF2               	movlw	-14
 23278  014760  6AE3               	clrf	plusw1,c
 23279  014762                     l7798:
 23280                           
 23281                           ;stkvar	_new_exp @ sp[(-13)+8]
 23282  014762  0EFC               	movlw	-4
 23283  014764  BEE3               	btfsc	plusw1,7,c
 23284  014766  D007               	goto	u6310
 23285  014768  0EFC               	movlw	-4
 23286  01476A  50E3               	movf	plusw1,w,c
 23287  01476C  E112               	bnz	l7804
 23288  01476E  0EFB               	movlw	-5
 23289  014770  04E3               	decf	plusw1,w,c
 23290  014772  B0D8               	btfsc	status,0,c
 23291  014774  D00E               	goto	l7804
 23292  014776                     u6310:
 23293                           
 23294                           ;stkvar	_new_exp @ sp[(-13)+8]
 23295  014776  0EFB               	movlw	-5
 23296  014778  6AE3               	clrf	plusw1,c
 23297  01477A  0EFC               	movlw	-4
 23298  01477C  6AE3               	clrf	plusw1,c
 23299                           
 23300                           ;stkvar	_b @ sp[(-13)+-4]
 23301  01477E  0EEF               	movlw	-17
 23302  014780  6AE3               	clrf	plusw1,c
 23303  014782  0EF0               	movlw	-16
 23304  014784  6AE3               	clrf	plusw1,c
 23305  014786  0EF1               	movlw	-15
 23306  014788  6AE3               	clrf	plusw1,c
 23307  01478A  0EF2               	movlw	-14
 23308  01478C  6AE3               	clrf	plusw1,c
 23309                           
 23310                           ;stkvar	_sign @ sp[(-13)+12]
 23311  01478E  0EFF               	movlw	-1
 23312  014790  6AE3               	clrf	plusw1,c
 23313  014792                     l7804:
 23314                           
 23315                           ;stkvar	_new_exp @ sp[(-13)+8]
 23316                           ;stkvar	_bexp @ sp[(-13)+11]
 23317  014792  0EFB               	movlw	-5
 23318  014794  006F FF8C  F001    	movff	plusw1,btemp
 23319  01479A  0EFE               	movlw	-2
 23320  01479C  0060  F007  FFE3   	movff	btemp,plusw1
 23321                           
 23322                           ;stkvar	_bexp @ sp[(-13)+11]
 23323  0147A2  0EFE               	movlw	-2
 23324  0147A4  A0E3               	btfss	plusw1,0,c
 23325  0147A6  D009               	goto	l7810
 23326                           
 23327                           ;stkvar	_b @ sp[(-13)+-4]
 23328  0147A8  0EF1               	movlw	241
 23329  0147AA  24E1               	addwf	fsr1l,w,c
 23330  0147AC  6ED9               	movwf	fsr2l,c
 23331  0147AE  0EFF               	movlw	255
 23332  0147B0  20E2               	addwfc	fsr1h,w,c
 23333  0147B2  6EDA               	movwf	fsr2h,c
 23334  0147B4  0E00               	movlw	0
 23335  0147B6  8EDB               	bsf	plusw2,7,c
 23336  0147B8  D008               	goto	l7812
 23337  0147BA                     l7810:
 23338                           
 23339                           ;stkvar	_b @ sp[(-13)+-4]
 23340  0147BA  0EF1               	movlw	241
 23341  0147BC  24E1               	addwf	fsr1l,w,c
 23342  0147BE  6ED9               	movwf	fsr2l,c
 23343  0147C0  0EFF               	movlw	255
 23344  0147C2  20E2               	addwfc	fsr1h,w,c
 23345  0147C4  6EDA               	movwf	fsr2h,c
 23346  0147C6  0E7F               	movlw	127
 23347  0147C8  16DF               	andwf	indf2,f,c
 23348  0147CA                     l7812:
 23349                           
 23350                           ;stkvar	_b @ sp[(-13)+-4]
 23351  0147CA  0EF2               	movlw	242
 23352  0147CC  24E1               	addwf	fsr1l,w,c
 23353  0147CE  6ED9               	movwf	fsr2l,c
 23354  0147D0  0EFF               	movlw	255
 23355  0147D2  20E2               	addwfc	fsr1h,w,c
 23356  0147D4  6EDA               	movwf	fsr2h,c
 23357                           
 23358                           ;stkvar	_bexp @ sp[(-13)+11]
 23359  0147D6  0EFE               	movlw	-2
 23360  0147D8  006F FF8C  F00C    	movff	plusw1,btemp+11
 23361  0147DE  90D8               	bcf	status,0,c
 23362  0147E0  300C               	rrcf	(btemp+11)^0,w,c
 23363  0147E2  6EDF               	movwf	indf2,c
 23364  0147E4  D644               	goto	l7710
 23365  0147E6                     l2899:
 23366                           
 23367                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 23368  0147E6  0EEB               	movlw	235
 23369  0147E8  26E1               	addwf	fsr1l,f,c
 23370  0147EA  0EFF               	movlw	255
 23371  0147EC  22E2               	addwfc	fsr1h,f,c
 23372  0147EE  0012               	return		;funcret
 23373  0147F0                     __end_of___fldiv:
 23374                           	opt callstack 0
 23375                           
 23376 ;; *************** function ___flge *****************
 23377 ;; Defined at:
 23378 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 23379 ;; Parameters:    Size  Location     Type
 23380 ;;  ff1             4  [STACK] unsigned char 
 23381 ;;  ff2             4  [STACK] unsigned char 
 23382 ;; Auto vars:     Size  Location     Type
 23383 ;;		None
 23384 ;; Return value:  Size  Location     Type
 23385 ;;		None               void
 23386 ;; Registers used:
 23387 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 23388 ;; Tracked objects:
 23389 ;;		On entry : 0/0
 23390 ;;		On exit  : 0/0
 23391 ;;		Unchanged: 0/0
 23392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23397 ;;Total ram usage:        0 bytes
 23398 ;; Hardware stack levels used:    1
 23399 ;; Hardware stack levels required when called:   15
 23400 ;; This function calls:
 23401 ;;		Nothing
 23402 ;; This function is called by:
 23403 ;;		_main
 23404 ;;		_calc_ror_data
 23405 ;;		_calc_bsoc
 23406 ;;		_efgtoa
 23407 ;; This function uses a reentrant model
 23408 ;;
 23409                           
 23410                           	psect	text96
 23411  017D60                     __ptext96:
 23412                           	opt callstack 0
 23413  017D60                     ___flge:
 23414                           	opt callstack 0
 23415                           
 23416                           ;stkvar	_ff1 @ sp[(0)+-4]
 23417                           
 23418                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23419                           ;incstack = 0
 23420 ;; hardware stack exceeded
 23421  017D60  50E1               	movf	fsr1l,w,c
 23422  017D62  0FFC               	addlw	-4
 23423  017D64  6ED9               	movwf	fsr2l,c
 23424  017D66  50E2               	movf	fsr1h,w,c
 23425  017D68  6EDA               	movwf	fsr2h,c
 23426  017D6A  0EFF               	movlw	255
 23427  017D6C  22DA               	addwfc	fsr2h,f,c
 23428  017D6E  0E00               	movlw	0
 23429  017D70  14DE               	andwf	postinc2,w,c
 23430  017D72  6E09               	movwf	(btemp+8)^0,c
 23431  017D74  0E00               	movlw	0
 23432  017D76  14DE               	andwf	postinc2,w,c
 23433  017D78  6E0A               	movwf	(btemp+9)^0,c
 23434  017D7A  0E80               	movlw	128
 23435  017D7C  14DE               	andwf	postinc2,w,c
 23436  017D7E  6E0B               	movwf	(btemp+10)^0,c
 23437  017D80  0E7F               	movlw	127
 23438  017D82  14DE               	andwf	postinc2,w,c
 23439  017D84  6E0C               	movwf	(btemp+11)^0,c
 23440  017D86  5009               	movf	(btemp+8)^0,w,c
 23441  017D88  100A               	iorwf	(btemp+9)^0,w,c
 23442  017D8A  100B               	iorwf	(btemp+10)^0,w,c
 23443  017D8C  100C               	iorwf	(btemp+11)^0,w,c
 23444  017D8E  A4D8               	btfss	status,2,c
 23445  017D90  D008               	goto	l8086
 23446                           
 23447                           ;stkvar	_ff1 @ sp[(0)+-4]
 23448  017D92  0EFC               	movlw	-4
 23449  017D94  6AE3               	clrf	plusw1,c
 23450  017D96  0EFD               	movlw	-3
 23451  017D98  6AE3               	clrf	plusw1,c
 23452  017D9A  0EFE               	movlw	-2
 23453  017D9C  6AE3               	clrf	plusw1,c
 23454  017D9E  0EFF               	movlw	-1
 23455  017DA0  6AE3               	clrf	plusw1,c
 23456  017DA2                     l8086:
 23457                           
 23458                           ;stkvar	_ff2 @ sp[(0)+-8]
 23459  017DA2  50E1               	movf	fsr1l,w,c
 23460  017DA4  0FF8               	addlw	-8
 23461  017DA6  6ED9               	movwf	fsr2l,c
 23462  017DA8  50E2               	movf	fsr1h,w,c
 23463  017DAA  6EDA               	movwf	fsr2h,c
 23464  017DAC  0EFF               	movlw	255
 23465  017DAE  22DA               	addwfc	fsr2h,f,c
 23466  017DB0  0E00               	movlw	0
 23467  017DB2  14DE               	andwf	postinc2,w,c
 23468  017DB4  6E09               	movwf	(btemp+8)^0,c
 23469  017DB6  0E00               	movlw	0
 23470  017DB8  14DE               	andwf	postinc2,w,c
 23471  017DBA  6E0A               	movwf	(btemp+9)^0,c
 23472  017DBC  0E80               	movlw	128
 23473  017DBE  14DE               	andwf	postinc2,w,c
 23474  017DC0  6E0B               	movwf	(btemp+10)^0,c
 23475  017DC2  0E7F               	movlw	127
 23476  017DC4  14DE               	andwf	postinc2,w,c
 23477  017DC6  6E0C               	movwf	(btemp+11)^0,c
 23478  017DC8  5009               	movf	(btemp+8)^0,w,c
 23479  017DCA  100A               	iorwf	(btemp+9)^0,w,c
 23480  017DCC  100B               	iorwf	(btemp+10)^0,w,c
 23481  017DCE  100C               	iorwf	(btemp+11)^0,w,c
 23482  017DD0  A4D8               	btfss	status,2,c
 23483  017DD2  D008               	goto	l2580
 23484                           
 23485                           ;stkvar	_ff2 @ sp[(0)+-8]
 23486  017DD4  0EF8               	movlw	-8
 23487  017DD6  6AE3               	clrf	plusw1,c
 23488  017DD8  0EF9               	movlw	-7
 23489  017DDA  6AE3               	clrf	plusw1,c
 23490  017DDC  0EFA               	movlw	-6
 23491  017DDE  6AE3               	clrf	plusw1,c
 23492  017DE0  0EFB               	movlw	-5
 23493  017DE2  6AE3               	clrf	plusw1,c
 23494  017DE4                     l2580:
 23495                           
 23496                           ;stkvar	_ff1 @ sp[(0)+-4]
 23497  017DE4  0EFF               	movlw	-1
 23498  017DE6  AEE3               	btfss	plusw1,7,c
 23499  017DE8  D024               	goto	l8092
 23500                           
 23501                           ;stkvar	_ff1 @ sp[(0)+-4]
 23502  017DEA  0E00               	movlw	0
 23503  017DEC  6E09               	movwf	(btemp+8)^0,c
 23504  017DEE  0E00               	movlw	0
 23505  017DF0  6E0A               	movwf	(btemp+9)^0,c
 23506  017DF2  0E00               	movlw	0
 23507  017DF4  6E0B               	movwf	(btemp+10)^0,c
 23508  017DF6  0E80               	movlw	128
 23509  017DF8  6E0C               	movwf	(btemp+11)^0,c
 23510  017DFA  0EFC               	movlw	-4
 23511  017DFC  50E3               	movf	plusw1,w,c
 23512  017DFE  5E09               	subwf	(btemp+8)^0,f,c
 23513  017E00  0EFD               	movlw	-3
 23514  017E02  50E3               	movf	plusw1,w,c
 23515  017E04  5A0A               	subwfb	(btemp+9)^0,f,c
 23516  017E06  0EFE               	movlw	-2
 23517  017E08  50E3               	movf	plusw1,w,c
 23518  017E0A  5A0B               	subwfb	(btemp+10)^0,f,c
 23519  017E0C  0EFF               	movlw	-1
 23520  017E0E  50E3               	movf	plusw1,w,c
 23521  017E10  5A0C               	subwfb	(btemp+11)^0,f,c
 23522                           
 23523                           ;stkvar	_ff1 @ sp[(0)+-4]
 23524  017E12  0EFC               	movlw	-4
 23525  017E14  0060  F027  FFE3   	movff	btemp+8,plusw1
 23526  017E1A  0EFD               	movlw	-3
 23527  017E1C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23528  017E22  0EFE               	movlw	-2
 23529  017E24  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23530  017E2A  0EFF               	movlw	-1
 23531  017E2C  0060  F033  FFE3   	movff	btemp+11,plusw1
 23532  017E32                     l8092:
 23533                           
 23534                           ;stkvar	_ff2 @ sp[(0)+-8]
 23535  017E32  0EFB               	movlw	-5
 23536  017E34  AEE3               	btfss	plusw1,7,c
 23537  017E36  D024               	goto	l8096
 23538                           
 23539                           ;stkvar	_ff2 @ sp[(0)+-8]
 23540  017E38  0E00               	movlw	0
 23541  017E3A  6E09               	movwf	(btemp+8)^0,c
 23542  017E3C  0E00               	movlw	0
 23543  017E3E  6E0A               	movwf	(btemp+9)^0,c
 23544  017E40  0E00               	movlw	0
 23545  017E42  6E0B               	movwf	(btemp+10)^0,c
 23546  017E44  0E80               	movlw	128
 23547  017E46  6E0C               	movwf	(btemp+11)^0,c
 23548  017E48  0EF8               	movlw	-8
 23549  017E4A  50E3               	movf	plusw1,w,c
 23550  017E4C  5E09               	subwf	(btemp+8)^0,f,c
 23551  017E4E  0EF9               	movlw	-7
 23552  017E50  50E3               	movf	plusw1,w,c
 23553  017E52  5A0A               	subwfb	(btemp+9)^0,f,c
 23554  017E54  0EFA               	movlw	-6
 23555  017E56  50E3               	movf	plusw1,w,c
 23556  017E58  5A0B               	subwfb	(btemp+10)^0,f,c
 23557  017E5A  0EFB               	movlw	-5
 23558  017E5C  50E3               	movf	plusw1,w,c
 23559  017E5E  5A0C               	subwfb	(btemp+11)^0,f,c
 23560                           
 23561                           ;stkvar	_ff2 @ sp[(0)+-8]
 23562  017E60  0EF8               	movlw	-8
 23563  017E62  0060  F027  FFE3   	movff	btemp+8,plusw1
 23564  017E68  0EF9               	movlw	-7
 23565  017E6A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23566  017E70  0EFA               	movlw	-6
 23567  017E72  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23568  017E78  0EFB               	movlw	-5
 23569  017E7A  0060  F033  FFE3   	movff	btemp+11,plusw1
 23570  017E80                     l8096:
 23571                           
 23572                           ;stkvar	_ff1 @ sp[(0)+-4]
 23573  017E80  0EFF               	movlw	-1
 23574  017E82  7EE3               	btg	plusw1,7,c
 23575                           
 23576                           ;stkvar	_ff2 @ sp[(0)+-8]
 23577  017E84  0EFB               	movlw	-5
 23578  017E86  7EE3               	btg	plusw1,7,c
 23579                           
 23580                           ;stkvar	_ff2 @ sp[(0)+-8]
 23581                           ;stkvar	_ff1 @ sp[(0)+-4]
 23582  017E88  50E1               	movf	fsr1l,w,c
 23583  017E8A  0FFC               	addlw	-4
 23584  017E8C  6ED9               	movwf	fsr2l,c
 23585  017E8E  50E2               	movf	fsr1h,w,c
 23586  017E90  6EDA               	movwf	fsr2h,c
 23587  017E92  0EFF               	movlw	255
 23588  017E94  22DA               	addwfc	fsr2h,f,c
 23589  017E96  0EF8               	movlw	-8
 23590  017E98  50E3               	movf	plusw1,w,c
 23591  017E9A  5CDE               	subwf	postinc2,w,c
 23592  017E9C  0EF9               	movlw	-7
 23593  017E9E  50E3               	movf	plusw1,w,c
 23594  017EA0  58DE               	subwfb	postinc2,w,c
 23595  017EA2  0EFA               	movlw	-6
 23596  017EA4  50E3               	movf	plusw1,w,c
 23597  017EA6  58DE               	subwfb	postinc2,w,c
 23598  017EA8  0EFB               	movlw	-5
 23599  017EAA  50E3               	movf	plusw1,w,c
 23600  017EAC  58DE               	subwfb	postinc2,w,c
 23601  017EAE  B0D8               	btfsc	status,0,c
 23602  017EB0  D002               	goto	l8104
 23603  017EB2  9001               	bcf	btemp& (0+255),0,c
 23604  017EB4  D001               	goto	l2587
 23605  017EB6                     l8104:
 23606  017EB6  8001               	bsf	btemp& (0+255),0,c
 23607  017EB8                     l2587:
 23608                           
 23609                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 23610  017EB8  0EF8               	movlw	248
 23611  017EBA  26E1               	addwf	fsr1l,f,c
 23612  017EBC  0EFF               	movlw	255
 23613  017EBE  22E2               	addwfc	fsr1h,f,c
 23614  017EC0  0012               	return		;funcret
 23615  017EC2                     __end_of___flge:
 23616                           	opt callstack 0
 23617                           
 23618 ;; *************** function _calc_model_data *****************
 23619 ;; Defined at:
 23620 ;;		line 56 in file "mbmc.c"
 23621 ;; Parameters:    Size  Location     Type
 23622 ;;		None
 23623 ;; Auto vars:     Size  Location     Type
 23624 ;;		None
 23625 ;; Return value:  Size  Location     Type
 23626 ;;                  1  [STACK] void 
 23627 ;; Registers used:
 23628 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23629 ;; Tracked objects:
 23630 ;;		On entry : 0/0
 23631 ;;		On exit  : 3F/1
 23632 ;;		Unchanged: 0/0
 23633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23637 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23638 ;;Total ram usage:        0 bytes
 23639 ;; Hardware stack levels used:    1
 23640 ;; Hardware stack levels required when called:   18
 23641 ;; This function calls:
 23642 ;;		___fladd
 23643 ;;		___flmul
 23644 ;;		___flsub
 23645 ;;		_lp_filter
 23646 ;;		_start_bsoc
 23647 ;;		_stop_bsoc
 23648 ;; This function is called by:
 23649 ;;		_main
 23650 ;; This function uses a reentrant model
 23651 ;;
 23652                           
 23653                           	psect	text97
 23654  0154D6                     __ptext97:
 23655                           	opt callstack 0
 23656  0154D6                     _calc_model_data:
 23657                           	opt callstack 12
 23658                           
 23659                           ;mbmc.c: 58:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 59:  stop_bsoc();
 23660                           
 23661                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23662                           ;incstack = 0
 23663  0154D6  EC2C  F0D6         	call	_stop_bsoc	;wreg free
 23664                           
 23665                           ; BSR set to: 57
 23666                           ;mbmc.c: 61:  if (!V.calib) {
 23667  0154DA  0102               	movlb	2	; () banked
 23668  0154DC  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
 23669  0154DE  A4D8               	btfss	status,2,c
 23670  0154E0  D1C5               	goto	l10328
 23671                           
 23672                           ; BSR set to: 2
 23673                           ;mbmc.c: 62:   C.c_bat = C.calc[C_BATT];
 23674  0154E2  C100  F144         	movff	_C,_C+68	;volatile
 23675  0154E6  C101  F145         	movff	_C+1,_C+69	;volatile
 23676  0154EA  C102  F146         	movff	_C+2,_C+70	;volatile
 23677  0154EE  C103  F147         	movff	_C+3,_C+71	;volatile
 23678                           
 23679                           ; BSR set to: 2
 23680                           ;mbmc.c: 63:   C.bc_ror = C.c_bat - bcror;
 23681  0154F2  0060  F223  FFE6   	movff	calc_model_data@bcror,postinc1
 23682  0154F8  0060  F227  FFE6   	movff	calc_model_data@bcror+1,postinc1
 23683  0154FE  0060  F22B  FFE6   	movff	calc_model_data@bcror+2,postinc1
 23684  015504  0060  F22F  FFE6   	movff	calc_model_data@bcror+3,postinc1
 23685  01550A  0060  F513  FFE6   	movff	_C+68,postinc1
 23686  015510  0060  F517  FFE6   	movff	_C+69,postinc1
 23687  015516  0060  F51B  FFE6   	movff	_C+70,postinc1
 23688  01551C  0060  F51F  FFE6   	movff	_C+71,postinc1
 23689  015522  EC03  F0D0         	call	___flsub	;wreg free
 23690  015526  0060  F004  F16C   	movff	btemp,_C+108	;volatile
 23691  01552C  0060  F008  F16D   	movff	btemp+1,_C+109	;volatile
 23692  015532  0060  F00C  F16E   	movff	btemp+2,_C+110	;volatile
 23693  015538  0060  F010  F16F   	movff	btemp+3,_C+111	;volatile
 23694                           
 23695                           ;mbmc.c: 64:   bcror = C.c_bat;
 23696  01553E  C144  F088         	movff	_C+68,calc_model_data@bcror	;volatile
 23697  015542  C145  F089         	movff	_C+69,calc_model_data@bcror+1	;volatile
 23698  015546  C146  F08A         	movff	_C+70,calc_model_data@bcror+2	;volatile
 23699  01554A  C147  F08B         	movff	_C+71,calc_model_data@bcror+3	;volatile
 23700                           
 23701                           ;mbmc.c: 65:   C.c_pv = C.calc[C_PV];
 23702  01554E  C104  F148         	movff	_C+4,_C+72	;volatile
 23703  015552  C105  F149         	movff	_C+5,_C+73	;volatile
 23704  015556  C106  F14A         	movff	_C+6,_C+74	;volatile
 23705  01555A  C107  F14B         	movff	_C+7,_C+75	;volatile
 23706                           
 23707                           ;mbmc.c: 66:   C.v_bat = C.calc[V_BAT];
 23708  01555E  C110  F154         	movff	_C+16,_C+84	;volatile
 23709  015562  C111  F155         	movff	_C+17,_C+85	;volatile
 23710  015566  C112  F156         	movff	_C+18,_C+86	;volatile
 23711  01556A  C113  F157         	movff	_C+19,_C+87	;volatile
 23712                           
 23713                           ;mbmc.c: 67:   C.bv_ror = C.v_bat - bvror;
 23714  01556E  0060  F233  FFE6   	movff	calc_model_data@bvror,postinc1
 23715  015574  0060  F237  FFE6   	movff	calc_model_data@bvror+1,postinc1
 23716  01557A  0060  F23B  FFE6   	movff	calc_model_data@bvror+2,postinc1
 23717  015580  0060  F23F  FFE6   	movff	calc_model_data@bvror+3,postinc1
 23718  015586  0060  F553  FFE6   	movff	_C+84,postinc1
 23719  01558C  0060  F557  FFE6   	movff	_C+85,postinc1
 23720  015592  0060  F55B  FFE6   	movff	_C+86,postinc1
 23721  015598  0060  F55F  FFE6   	movff	_C+87,postinc1
 23722  01559E  EC03  F0D0         	call	___flsub	;wreg free
 23723  0155A2  0060  F004  F168   	movff	btemp,_C+104	;volatile
 23724  0155A8  0060  F008  F169   	movff	btemp+1,_C+105	;volatile
 23725  0155AE  0060  F00C  F16A   	movff	btemp+2,_C+106	;volatile
 23726  0155B4  0060  F010  F16B   	movff	btemp+3,_C+107	;volatile
 23727                           
 23728                           ;mbmc.c: 68:   bvror = C.v_bat;
 23729  0155BA  C154  F08C         	movff	_C+84,calc_model_data@bvror	;volatile
 23730  0155BE  C155  F08D         	movff	_C+85,calc_model_data@bvror+1	;volatile
 23731  0155C2  C156  F08E         	movff	_C+86,calc_model_data@bvror+2	;volatile
 23732  0155C6  C157  F08F         	movff	_C+87,calc_model_data@bvror+3	;volatile
 23733                           
 23734                           ;mbmc.c: 69:   C.v_pv = C.calc[V_PV];
 23735  0155CA  C114  F150         	movff	_C+20,_C+80	;volatile
 23736  0155CE  C115  F151         	movff	_C+21,_C+81	;volatile
 23737  0155D2  C116  F152         	movff	_C+22,_C+82	;volatile
 23738  0155D6  C117  F153         	movff	_C+23,_C+83	;volatile
 23739                           
 23740                           ;mbmc.c: 70:   C.v_cc = C.calc[V_CC];
 23741  0155DA  C108  F14C         	movff	_C+8,_C+76	;volatile
 23742  0155DE  C109  F14D         	movff	_C+9,_C+77	;volatile
 23743  0155E2  C10A  F14E         	movff	_C+10,_C+78	;volatile
 23744  0155E6  C10B  F14F         	movff	_C+11,_C+79	;volatile
 23745                           
 23746                           ;mbmc.c: 71:   C.v_inverter = C.calc[V_INVERTER];
 23747  0155EA  C130  F164         	movff	_C+48,_C+100	;volatile
 23748  0155EE  C131  F165         	movff	_C+49,_C+101	;volatile
 23749  0155F2  C132  F166         	movff	_C+50,_C+102	;volatile
 23750  0155F6  C133  F167         	movff	_C+51,_C+103	;volatile
 23751                           
 23752                           ;mbmc.c: 72:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 23753  0155FA  0E01               	movlw	1
 23754  0155FC  6EE6               	movwf	postinc1,c
 23755  0155FE  0E10               	movlw	16
 23756  015600  6EE6               	movwf	postinc1,c
 23757  015602  0060  F403  FFE6   	movff	_C,postinc1
 23758  015608  0060  F407  FFE6   	movff	_C+1,postinc1
 23759  01560E  0060  F40B  FFE6   	movff	_C+2,postinc1
 23760  015614  0060  F40F  FFE6   	movff	_C+3,postinc1
 23761  01561A  0060  F413  FFE6   	movff	_C+4,postinc1
 23762  015620  0060  F417  FFE6   	movff	_C+5,postinc1
 23763  015626  0060  F41B  FFE6   	movff	_C+6,postinc1
 23764  01562C  0060  F41F  FFE6   	movff	_C+7,postinc1
 23765  015632  EC03  F0D0         	call	___flsub	;wreg free
 23766  015636  0060  F007  FFE6   	movff	btemp,postinc1
 23767  01563C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23768  015642  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23769  015648  0060  F013  FFE6   	movff	btemp+3,postinc1
 23770  01564E  EC1C  F0BA         	call	_lp_filter	;wreg free
 23771  015652  0060  F004  F140   	movff	btemp,_C+64	;volatile
 23772  015658  0060  F008  F141   	movff	btemp+1,_C+65	;volatile
 23773  01565E  0060  F00C  F142   	movff	btemp+2,_C+66	;volatile
 23774  015664  0060  F010  F143   	movff	btemp+3,_C+67	;volatile
 23775                           
 23776                           ;mbmc.c: 73:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 23777  01566A  0E01               	movlw	1
 23778  01566C  6EE6               	movwf	postinc1,c
 23779  01566E  0E11               	movlw	17
 23780  015670  6EE6               	movwf	postinc1,c
 23781  015672  0060  F553  FFE6   	movff	_C+84,postinc1
 23782  015678  0060  F557  FFE6   	movff	_C+85,postinc1
 23783  01567E  0060  F55B  FFE6   	movff	_C+86,postinc1
 23784  015684  0060  F55F  FFE6   	movff	_C+87,postinc1
 23785  01568A  0060  F503  FFE6   	movff	_C+64,postinc1
 23786  015690  0060  F507  FFE6   	movff	_C+65,postinc1
 23787  015696  0060  F50B  FFE6   	movff	_C+66,postinc1
 23788  01569C  0060  F50F  FFE6   	movff	_C+67,postinc1
 23789  0156A2  EC05  F096         	call	___flmul	;wreg free
 23790  0156A6  0060  F007  FFE6   	movff	btemp,postinc1
 23791  0156AC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23792  0156B2  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23793  0156B8  0060  F013  FFE6   	movff	btemp+3,postinc1
 23794  0156BE  EC1C  F0BA         	call	_lp_filter	;wreg free
 23795  0156C2  0060  F004  F170   	movff	btemp,_C+112	;volatile
 23796  0156C8  0060  F008  F171   	movff	btemp+1,_C+113	;volatile
 23797  0156CE  0060  F00C  F172   	movff	btemp+2,_C+114	;volatile
 23798  0156D4  0060  F010  F173   	movff	btemp+3,_C+115	;volatile
 23799                           
 23800                           ;mbmc.c: 74:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 23801  0156DA  0E01               	movlw	1
 23802  0156DC  6EE6               	movwf	postinc1,c
 23803  0156DE  0E12               	movlw	18
 23804  0156E0  6EE6               	movwf	postinc1,c
 23805  0156E2  0060  F543  FFE6   	movff	_C+80,postinc1
 23806  0156E8  0060  F547  FFE6   	movff	_C+81,postinc1
 23807  0156EE  0060  F54B  FFE6   	movff	_C+82,postinc1
 23808  0156F4  0060  F54F  FFE6   	movff	_C+83,postinc1
 23809  0156FA  0060  F523  FFE6   	movff	_C+72,postinc1
 23810  015700  0060  F527  FFE6   	movff	_C+73,postinc1
 23811  015706  0060  F52B  FFE6   	movff	_C+74,postinc1
 23812  01570C  0060  F52F  FFE6   	movff	_C+75,postinc1
 23813  015712  EC05  F096         	call	___flmul	;wreg free
 23814  015716  0060  F007  FFE6   	movff	btemp,postinc1
 23815  01571C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23816  015722  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23817  015728  0060  F013  FFE6   	movff	btemp+3,postinc1
 23818  01572E  EC1C  F0BA         	call	_lp_filter	;wreg free
 23819  015732  0060  F004  F178   	movff	btemp,_C+120	;volatile
 23820  015738  0060  F008  F179   	movff	btemp+1,_C+121	;volatile
 23821  01573E  0060  F00C  F17A   	movff	btemp+2,_C+122	;volatile
 23822  015744  0060  F010  F17B   	movff	btemp+3,_C+123	;volatile
 23823                           
 23824                           ;mbmc.c: 75:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 23825  01574A  0E01               	movlw	1
 23826  01574C  6EE6               	movwf	postinc1,c
 23827  01574E  0E13               	movlw	19
 23828  015750  6EE6               	movwf	postinc1,c
 23829  015752  0E00               	movlw	0
 23830  015754  6EE6               	movwf	postinc1,c
 23831  015756  0E00               	movlw	0
 23832  015758  6EE6               	movwf	postinc1,c
 23833  01575A  0E60               	movlw	96
 23834  01575C  6EE6               	movwf	postinc1,c
 23835  01575E  0EC1               	movlw	193
 23836  015760  6EE6               	movwf	postinc1,c
 23837  015762  0060  F593  FFE6   	movff	_C+100,postinc1
 23838  015768  0060  F597  FFE6   	movff	_C+101,postinc1
 23839  01576E  0060  F59B  FFE6   	movff	_C+102,postinc1
 23840  015774  0060  F59F  FFE6   	movff	_C+103,postinc1
 23841  01577A  0060  F503  FFE6   	movff	_C+64,postinc1
 23842  015780  0060  F507  FFE6   	movff	_C+65,postinc1
 23843  015786  0060  F50B  FFE6   	movff	_C+66,postinc1
 23844  01578C  0060  F50F  FFE6   	movff	_C+67,postinc1
 23845  015792  EC05  F096         	call	___flmul	;wreg free
 23846  015796  0060  F007  FFE6   	movff	btemp,postinc1
 23847  01579C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23848  0157A2  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23849  0157A8  0060  F013  FFE6   	movff	btemp+3,postinc1
 23850  0157AE  EC1A  F09A         	call	___fladd	;wreg free
 23851  0157B2  0060  F007  FFE6   	movff	btemp,postinc1
 23852  0157B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23853  0157BE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23854  0157C4  0060  F013  FFE6   	movff	btemp+3,postinc1
 23855  0157CA  EC1C  F0BA         	call	_lp_filter	;wreg free
 23856  0157CE  0060  F004  F174   	movff	btemp,_C+116	;volatile
 23857  0157D4  0060  F008  F175   	movff	btemp+1,_C+117	;volatile
 23858  0157DA  0060  F00C  F176   	movff	btemp+2,_C+118	;volatile
 23859  0157E0  0060  F010  F177   	movff	btemp+3,_C+119	;volatile
 23860                           
 23861                           ;mbmc.c: 76:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 23862  0157E6  0E01               	movlw	1
 23863  0157E8  6EE6               	movwf	postinc1,c
 23864  0157EA  0E14               	movlw	20
 23865  0157EC  6EE6               	movwf	postinc1,c
 23866  0157EE  0060  F553  FFE6   	movff	_C+84,postinc1
 23867  0157F4  0060  F557  FFE6   	movff	_C+85,postinc1
 23868  0157FA  0060  F55B  FFE6   	movff	_C+86,postinc1
 23869  015800  0060  F55F  FFE6   	movff	_C+87,postinc1
 23870  015806  0060  F513  FFE6   	movff	_C+68,postinc1
 23871  01580C  0060  F517  FFE6   	movff	_C+69,postinc1
 23872  015812  0060  F51B  FFE6   	movff	_C+70,postinc1
 23873  015818  0060  F51F  FFE6   	movff	_C+71,postinc1
 23874  01581E  EC05  F096         	call	___flmul	;wreg free
 23875  015822  0060  F007  FFE6   	movff	btemp,postinc1
 23876  015828  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23877  01582E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23878  015834  0060  F013  FFE6   	movff	btemp+3,postinc1
 23879  01583A  EC1C  F0BA         	call	_lp_filter	;wreg free
 23880  01583E  0060  F004  F17C   	movff	btemp,_C+124	;volatile
 23881  015844  0060  F008  F17D   	movff	btemp+1,_C+125	;volatile
 23882  01584A  0060  F00C  F17E   	movff	btemp+2,_C+126	;volatile
 23883  015850  0060  F010  F17F   	movff	btemp+3,_C+127	;volatile
 23884                           
 23885                           ;mbmc.c: 80:   if (C.p_inverter < 0.0)
 23886  015856  0101               	movlb	1	; () banked
 23887  015858  AF77               	btfss	(_C+119)& (0+255),7,b	;volatile
 23888  01585A  D008               	goto	l10328
 23889                           
 23890                           ; BSR set to: 1
 23891                           ;mbmc.c: 81:    C.p_inverter = 0.0001;
 23892  01585C  0E17               	movlw	23
 23893  01585E  6F74               	movwf	(_C+116)& (0+255),b	;volatile
 23894  015860  0EB7               	movlw	183
 23895  015862  6F75               	movwf	(_C+117)& (0+255),b	;volatile
 23896  015864  0ED1               	movlw	209
 23897  015866  6F76               	movwf	(_C+118)& (0+255),b	;volatile
 23898  015868  0E38               	movlw	56
 23899  01586A  6F77               	movwf	(_C+119)& (0+255),b	;volatile
 23900  01586C                     l10328:
 23901                           
 23902                           ;mbmc.c: 83:  start_bsoc();
 23903  01586C  ECCE  F0D4         	call	_start_bsoc	;wreg free
 23904                           
 23905                           ; BSR set to: 57
 23906                           ;mbmc.c: 84:  C.update = 1;
 23907  015870  0E01               	movlw	1
 23908  015872  0101               	movlb	1	; () banked
 23909  015874  6FAC               	movwf	(_C+172)& (0+255),b	;volatile
 23910                           
 23911                           ; BSR set to: 1
 23912                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23913  015876  0012               	return		;funcret
 23914  015878                     __end_of_calc_model_data:
 23915                           	opt callstack 0
 23916                           
 23917 ;; *************** function _stop_bsoc *****************
 23918 ;; Defined at:
 23919 ;;		line 106 in file "bsoc.c"
 23920 ;; Parameters:    Size  Location     Type
 23921 ;;		None
 23922 ;; Auto vars:     Size  Location     Type
 23923 ;;		None
 23924 ;; Return value:  Size  Location     Type
 23925 ;;                  1  [STACK] void 
 23926 ;; Registers used:
 23927 ;;		None
 23928 ;; Tracked objects:
 23929 ;;		On entry : 0/0
 23930 ;;		On exit  : 3F/39
 23931 ;;		Unchanged: 0/0
 23932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23936 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23937 ;;Total ram usage:        0 bytes
 23938 ;; Hardware stack levels used:    1
 23939 ;; Hardware stack levels required when called:   15
 23940 ;; This function calls:
 23941 ;;		Nothing
 23942 ;; This function is called by:
 23943 ;;		_calc_model_data
 23944 ;; This function uses a reentrant model
 23945 ;;
 23946                           
 23947                           	psect	text98
 23948  01AC58                     __ptext98:
 23949                           	opt callstack 0
 23950  01AC58                     _stop_bsoc:
 23951                           	opt callstack 14
 23952                           
 23953                           ;bsoc.c: 109:  PIE6bits.TMR3IE = 0;
 23954                           
 23955                           ; BSR set to: 1
 23956                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23957                           ;incstack = 0
 23958  01AC58  0139               	movlb	57	; () banked
 23959  01AC5A  9D96               	bcf	150,6,b	;volatile
 23960                           
 23961                           ; BSR set to: 57
 23962                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 23963  01AC5C  0012               	return		;funcret
 23964  01AC5E                     __end_of_stop_bsoc:
 23965                           	opt callstack 0
 23966                           
 23967 ;; *************** function _start_bsoc *****************
 23968 ;; Defined at:
 23969 ;;		line 97 in file "bsoc.c"
 23970 ;; Parameters:    Size  Location     Type
 23971 ;;		None
 23972 ;; Auto vars:     Size  Location     Type
 23973 ;;		None
 23974 ;; Return value:  Size  Location     Type
 23975 ;;                  1  [STACK] void 
 23976 ;; Registers used:
 23977 ;;		wreg, status,2, status,0, btemp+11
 23978 ;; Tracked objects:
 23979 ;;		On entry : 3C/2
 23980 ;;		On exit  : 3F/39
 23981 ;;		Unchanged: 0/0
 23982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23986 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23987 ;;Total ram usage:        0 bytes
 23988 ;; Hardware stack levels used:    1
 23989 ;; Hardware stack levels required when called:   15
 23990 ;; This function calls:
 23991 ;;		Nothing
 23992 ;; This function is called by:
 23993 ;;		_calc_model_data
 23994 ;; This function uses a reentrant model
 23995 ;;
 23996                           
 23997                           	psect	text99
 23998  01A99C                     __ptext99:
 23999                           	opt callstack 0
 24000  01A99C                     _start_bsoc:
 24001                           	opt callstack 14
 24002                           
 24003                           ;bsoc.c: 100:  PIE6bits.TMR3IE = 1;
 24004                           
 24005                           ; BSR set to: 57
 24006                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24007                           ;incstack = 0
 24008  01A99C  0139               	movlb	57	; () banked
 24009  01A99E  8D96               	bsf	150,6,b	;volatile
 24010                           
 24011                           ; BSR set to: 57
 24012  01A9A0  A4BE               	btfss	190,2,c	;volatile
 24013  01A9A2  D002               	goto	u9060
 24014  01A9A4  0E01               	movlw	1
 24015  01A9A6  D001               	goto	u9066
 24016  01A9A8                     u9060:
 24017  01A9A8  0E00               	movlw	0
 24018  01A9AA                     u9066:
 24019  01A9AA  0AFF               	xorlw	255
 24020  01A9AC  6E0C               	movwf	(btemp+11)^0,c
 24021  01A9AE  460C               	rlncf	(btemp+11)^0,f,c
 24022  01A9B0  460C               	rlncf	(btemp+11)^0,f,c
 24023  01A9B2  50BE               	movf	190,w,c	;volatile
 24024  01A9B4  180C               	xorwf	(btemp+11)^0,w,c
 24025  01A9B6  0BFB               	andlw	-5
 24026  01A9B8  180C               	xorwf	(btemp+11)^0,w,c
 24027  01A9BA  6EBE               	movwf	190,c	;volatile
 24028                           
 24029                           ; BSR set to: 57
 24030                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 24031  01A9BC  0012               	return		;funcret
 24032  01A9BE                     __end_of_start_bsoc:
 24033                           	opt callstack 0
 24034                           
 24035 ;; *************** function _lp_filter *****************
 24036 ;; Defined at:
 24037 ;;		line 18 in file "mbmc.c"
 24038 ;; Parameters:    Size  Location     Type
 24039 ;;  new             4  [STACK] const float 
 24040 ;;  bn              1  [STACK] const unsigned char 
 24041 ;;  slow            1  [STACK] const char 
 24042 ;; Auto vars:     Size  Location     Type
 24043 ;;  lp_speed        4  [STACK] float 
 24044 ;; Return value:  Size  Location     Type
 24045 ;;                  4  [STACK] float 
 24046 ;; Registers used:
 24047 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 24048 ;; Tracked objects:
 24049 ;;		On entry : 0/2
 24050 ;;		On exit  : 0/0
 24051 ;;		Unchanged: 0/0
 24052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24057 ;;Total ram usage:        0 bytes
 24058 ;; Hardware stack levels used:    1
 24059 ;; Hardware stack levels required when called:   17
 24060 ;; This function calls:
 24061 ;;		___fladd
 24062 ;;		___flmul
 24063 ;;		___flsub
 24064 ;; This function is called by:
 24065 ;;		_main
 24066 ;;		_convert_adc_data
 24067 ;;		_calc_model_data
 24068 ;; This function uses a reentrant model
 24069 ;;
 24070                           
 24071                           	psect	text100
 24072  017438                     __ptext100:
 24073                           	opt callstack 0
 24074  017438                     _lp_filter:
 24075                           	opt callstack 0
 24076                           
 24077                           ; BSR set to: 57
 24078                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24079  017438  52E6               	movf	postinc1,f,c
 24080  01743A  52E6               	movf	postinc1,f,c
 24081  01743C  52E6               	movf	postinc1,f,c
 24082  01743E  52E6               	movf	postinc1,f,c
 24083                           
 24084                           ;mbmc.c: 18: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 19: {;mbmc.c: 20:  static float smooth[16 +5];;mbmc.c: 21:  float lp_speed;;mbmc.c: 2
      +                          3:  if (bn >= 16 +5)
 24085                           ;stkvar	_bn @ sp[(-4)+-5]
 24086                           
 24087                           ;incstack = 0
 24088  017440  0EF7               	movlw	-9
 24089  017442  006F FF8C  F001    	movff	plusw1,btemp
 24090  017448  0E14               	movlw	20
 24091  01744A  6401               	cpfsgt	btemp^0,c
 24092  01744C  D011               	goto	l9750
 24093  01744E                     u8880:
 24094                           
 24095                           ;mbmc.c: 24:   return new;
 24096                           ;stkvar	_new @ sp[(-4)+-4]
 24097  01744E  0EF8               	movlw	-8
 24098  017450  006F FF8C  F001    	movff	plusw1,btemp
 24099  017456  0EF9               	movlw	-7
 24100  017458  006F FF8C  F002    	movff	plusw1,btemp+1
 24101  01745E  0EFA               	movlw	-6
 24102  017460  006F FF8C  F003    	movff	plusw1,btemp+2
 24103  017466  0EFB               	movlw	-5
 24104  017468  006F FF8C  F004    	movff	plusw1,btemp+3
 24105  01746E  D0BD               	goto	l1808
 24106  017470                     l9750:
 24107                           
 24108                           ;mbmc.c: 26:  if (slow == (-1)) {
 24109                           ;stkvar	_slow @ sp[(-4)+-6]
 24110  017470  0EF6               	movlw	-10
 24111  017472  28E3               	incf	plusw1,w,c
 24112  017474  A4D8               	btfss	status,2,c
 24113  017476  D012               	goto	l9758
 24114                           
 24115                           ;mbmc.c: 27:   smooth[bn] = 0.0;
 24116                           ;stkvar	_bn @ sp[(-4)+-5]
 24117  017478  0EF7               	movlw	-9
 24118  01747A  50E3               	movf	plusw1,w,c
 24119  01747C  0D04               	mullw	4
 24120  01747E  0E00               	movlw	low lp_filter@smooth
 24121  017480  24F3               	addwf	243,w,c
 24122  017482  6ED9               	movwf	fsr2l,c
 24123  017484  0E03               	movlw	high lp_filter@smooth
 24124  017486  20F4               	addwfc	prodh,w,c
 24125  017488  6EDA               	movwf	fsr2h,c
 24126  01748A  0E00               	movlw	0
 24127  01748C  6EDE               	movwf	postinc2,c
 24128  01748E  0E00               	movlw	0
 24129  017490  6EDE               	movwf	postinc2,c
 24130  017492  0E00               	movlw	0
 24131  017494  6EDE               	movwf	postinc2,c
 24132  017496  0E00               	movlw	0
 24133  017498  6EDD               	movwf	postdec2,c
 24134  01749A  D7D9               	goto	u8880
 24135  01749C                     l9758:
 24136                           
 24137                           ;mbmc.c: 31:  if (slow) {
 24138                           ;stkvar	_slow @ sp[(-4)+-6]
 24139  01749C  0EF6               	movlw	-10
 24140  01749E  50E3               	movf	plusw1,w,c
 24141  0174A0  B4D8               	btfsc	status,2,c
 24142  0174A2  D006               	goto	l9762
 24143                           
 24144                           ;mbmc.c: 32:   lp_speed = 0.033;
 24145  0174A4  0E02               	movlw	2
 24146  0174A6  6E09               	movwf	(btemp+8)^0,c
 24147  0174A8  0E2B               	movlw	43
 24148  0174AA  6E0A               	movwf	(btemp+9)^0,c
 24149  0174AC  0E07               	movlw	7
 24150  0174AE  D005               	goto	L26
 24151  0174B0                     l9762:
 24152                           
 24153                           ;mbmc.c: 34:   lp_speed = 0.066;
 24154  0174B0  0E02               	movlw	2
 24155  0174B2  6E09               	movwf	(btemp+8)^0,c
 24156  0174B4  0E2B               	movlw	43
 24157  0174B6  6E0A               	movwf	(btemp+9)^0,c
 24158  0174B8  0E87               	movlw	135
 24159  0174BA                     L26:
 24160  0174BA  6E0B               	movwf	(btemp+10)^0,c
 24161  0174BC  0E3D               	movlw	61
 24162  0174BE  6E0C               	movwf	(btemp+11)^0,c
 24163                           
 24164                           ;stkvar	_lp_speed @ sp[(-4)+0]
 24165  0174C0  0EFC               	movlw	-4
 24166  0174C2  0060  F027  FFE3   	movff	btemp+8,plusw1
 24167  0174C8  0EFD               	movlw	-3
 24168  0174CA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24169  0174D0  0EFE               	movlw	-2
 24170  0174D2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24171  0174D8  0EFF               	movlw	-1
 24172  0174DA  0060  F033  FFE3   	movff	btemp+11,plusw1
 24173                           
 24174                           ;mbmc.c: 37:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 24175                           ;stkvar	_bn @ sp[(-4)+-5]
 24176  0174E0  0EF7               	movlw	-9
 24177  0174E2  50E3               	movf	plusw1,w,c
 24178  0174E4  0D04               	mullw	4
 24179  0174E6  0E00               	movlw	low lp_filter@smooth
 24180  0174E8  24F3               	addwf	243,w,c
 24181  0174EA  6ED9               	movwf	fsr2l,c
 24182  0174EC  0E03               	movlw	high lp_filter@smooth
 24183  0174EE  20F4               	addwfc	prodh,w,c
 24184  0174F0  6EDA               	movwf	fsr2h,c
 24185  0174F2  006F FF7B FFE6     	movff	postinc2,postinc1
 24186  0174F8  006F FF7B FFE6     	movff	postinc2,postinc1
 24187  0174FE  006F FF7B FFE6     	movff	postinc2,postinc1
 24188  017504  006F FF7B FFE6     	movff	postinc2,postinc1
 24189                           
 24190                           ;stkvar	_lp_speed @ sp[(-8)+0]
 24191  01750A  0EF8               	movlw	-8
 24192  01750C  006F FF8F FFE6     	movff	plusw1,postinc1
 24193  017512  006F FF8F FFE6     	movff	plusw1,postinc1
 24194  017518  006F FF8F FFE6     	movff	plusw1,postinc1
 24195  01751E  006F FF8F FFE6     	movff	plusw1,postinc1
 24196                           
 24197                           ;stkvar	_bn @ sp[(-12)+-5]
 24198  017524  0EEF               	movlw	-17
 24199  017526  50E3               	movf	plusw1,w,c
 24200  017528  0D04               	mullw	4
 24201  01752A  0E00               	movlw	low lp_filter@smooth
 24202  01752C  24F3               	addwf	243,w,c
 24203  01752E  6ED9               	movwf	fsr2l,c
 24204  017530  0E03               	movlw	high lp_filter@smooth
 24205  017532  20F4               	addwfc	prodh,w,c
 24206  017534  6EDA               	movwf	fsr2h,c
 24207  017536  006F FF7B FFE6     	movff	postinc2,postinc1
 24208  01753C  006F FF7B FFE6     	movff	postinc2,postinc1
 24209  017542  006F FF7B FFE6     	movff	postinc2,postinc1
 24210  017548  006F FF7B FFE6     	movff	postinc2,postinc1
 24211                           
 24212                           ;stkvar	_new @ sp[(-16)+-4]
 24213  01754E  0EEC               	movlw	-20
 24214  017550  006F FF8F FFE6     	movff	plusw1,postinc1
 24215  017556  006F FF8F FFE6     	movff	plusw1,postinc1
 24216  01755C  006F FF8F FFE6     	movff	plusw1,postinc1
 24217  017562  006F FF8F FFE6     	movff	plusw1,postinc1
 24218  017568  EC03  F0D0         	call	___flsub	;wreg free
 24219  01756C  0060  F007  FFE6   	movff	btemp,postinc1
 24220  017572  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24221  017578  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24222  01757E  0060  F013  FFE6   	movff	btemp+3,postinc1
 24223  017584  EC05  F096         	call	___flmul	;wreg free
 24224  017588  0060  F007  FFE6   	movff	btemp,postinc1
 24225  01758E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24226  017594  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24227  01759A  0060  F013  FFE6   	movff	btemp+3,postinc1
 24228  0175A0  EC1A  F09A         	call	___fladd	;wreg free
 24229                           
 24230                           ;stkvar	_bn @ sp[(-4)+-5]
 24231  0175A4  0EF7               	movlw	-9
 24232  0175A6  50E3               	movf	plusw1,w,c
 24233  0175A8  0D04               	mullw	4
 24234  0175AA  0E00               	movlw	low lp_filter@smooth
 24235  0175AC  24F3               	addwf	243,w,c
 24236  0175AE  6ED9               	movwf	fsr2l,c
 24237  0175B0  0E03               	movlw	high lp_filter@smooth
 24238  0175B2  20F4               	addwfc	prodh,w,c
 24239  0175B4  6EDA               	movwf	fsr2h,c
 24240  0175B6  0060  F007  FFDE   	movff	btemp,postinc2
 24241  0175BC  0060  F00B  FFDE   	movff	btemp+1,postinc2
 24242  0175C2  0060  F00F  FFDE   	movff	btemp+2,postinc2
 24243  0175C8  0060  F013  FFDD   	movff	btemp+3,postdec2
 24244  0175CE  52DD               	movf	postdec2,f,c
 24245  0175D0  52DD               	movf	postdec2,f,c
 24246  0175D2  006F FF78  F001    	movff	postinc2,btemp
 24247  0175D8  006F FF78  F002    	movff	postinc2,btemp+1
 24248  0175DE  006F FF78  F003    	movff	postinc2,btemp+2
 24249  0175E4  006F FF78  F004    	movff	postinc2,btemp+3
 24250  0175EA                     l1808:
 24251                           
 24252                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 24253  0175EA  0EF6               	movlw	246
 24254  0175EC  26E1               	addwf	fsr1l,f,c
 24255  0175EE  0EFF               	movlw	255
 24256  0175F0  22E2               	addwfc	fsr1h,f,c
 24257  0175F2  0012               	return		;funcret
 24258  0175F4                     __end_of_lp_filter:
 24259                           	opt callstack 0
 24260                           
 24261 ;; *************** function ___flsub *****************
 24262 ;; Defined at:
 24263 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 24264 ;; Parameters:    Size  Location     Type
 24265 ;;  b               4  [STACK] float 
 24266 ;;  a               4  [STACK] float 
 24267 ;; Auto vars:     Size  Location     Type
 24268 ;;		None
 24269 ;; Return value:  Size  Location     Type
 24270 ;;                  4  [STACK] float 
 24271 ;; Registers used:
 24272 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 24273 ;; Tracked objects:
 24274 ;;		On entry : 0/0
 24275 ;;		On exit  : 0/0
 24276 ;;		Unchanged: 0/0
 24277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24282 ;;Total ram usage:        0 bytes
 24283 ;; Hardware stack levels used:    1
 24284 ;; Hardware stack levels required when called:   16
 24285 ;; This function calls:
 24286 ;;		___fladd
 24287 ;; This function is called by:
 24288 ;;		_conv_raw_result
 24289 ;;		_lp_filter
 24290 ;;		_calc_model_data
 24291 ;;		_calc_ror_data
 24292 ;;		_efgtoa
 24293 ;; This function uses a reentrant model
 24294 ;;
 24295                           
 24296                           	psect	text101
 24297  01A006                     __ptext101:
 24298                           	opt callstack 0
 24299  01A006                     ___flsub:
 24300                           	opt callstack 0
 24301                           
 24302                           ;stkvar	_a @ sp[(0)+-8]
 24303                           
 24304                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24305                           ;incstack = 0
 24306 ;; hardware stack exceeded
 24307  01A006  0EFB               	movlw	-5
 24308  01A008  7EE3               	btg	plusw1,7,c
 24309                           
 24310                           ;stkvar	_a @ sp[(0)+-8]
 24311  01A00A  0EF8               	movlw	-8
 24312  01A00C  006F FF8F FFE6     	movff	plusw1,postinc1
 24313  01A012  006F FF8F FFE6     	movff	plusw1,postinc1
 24314  01A018  006F FF8F FFE6     	movff	plusw1,postinc1
 24315  01A01E  006F FF8F FFE6     	movff	plusw1,postinc1
 24316                           
 24317                           ;stkvar	_b @ sp[(-4)+-4]
 24318  01A024  0EF8               	movlw	-8
 24319  01A026  006F FF8F FFE6     	movff	plusw1,postinc1
 24320  01A02C  006F FF8F FFE6     	movff	plusw1,postinc1
 24321  01A032  006F FF8F FFE6     	movff	plusw1,postinc1
 24322  01A038  006F FF8F FFE6     	movff	plusw1,postinc1
 24323  01A03E  EC1A  F09A         	call	___fladd	;wreg free
 24324                           
 24325                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 24326  01A042  0EF8               	movlw	248
 24327  01A044  26E1               	addwf	fsr1l,f,c
 24328  01A046  0EFF               	movlw	255
 24329  01A048  22E2               	addwfc	fsr1h,f,c
 24330  01A04A  0012               	return		;funcret
 24331  01A04C                     __end_of___flsub:
 24332                           	opt callstack 0
 24333                           
 24334 ;; *************** function ___fladd *****************
 24335 ;; Defined at:
 24336 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 24337 ;; Parameters:    Size  Location     Type
 24338 ;;  b               4  [STACK] float 
 24339 ;;  a               4  [STACK] float 
 24340 ;; Auto vars:     Size  Location     Type
 24341 ;;  grs             1  [STACK] unsigned char 
 24342 ;;  bexp            1  [STACK] unsigned char 
 24343 ;;  aexp            1  [STACK] unsigned char 
 24344 ;;  signs           1  [STACK] unsigned char 
 24345 ;; Return value:  Size  Location     Type
 24346 ;;                  4  [STACK] unsigned char 
 24347 ;; Registers used:
 24348 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 24349 ;; Tracked objects:
 24350 ;;		On entry : 0/0
 24351 ;;		On exit  : 0/0
 24352 ;;		Unchanged: 0/0
 24353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24357 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24358 ;;Total ram usage:        0 bytes
 24359 ;; Hardware stack levels used:    1
 24360 ;; Hardware stack levels required when called:   15
 24361 ;; This function calls:
 24362 ;;		Nothing
 24363 ;; This function is called by:
 24364 ;;		_lp_filter
 24365 ;;		_calc_model_data
 24366 ;;		_calc_bsoc
 24367 ;;		_efgtoa
 24368 ;;		___flsub
 24369 ;; This function uses a reentrant model
 24370 ;;
 24371                           
 24372                           	psect	text102
 24373  013434                     __ptext102:
 24374                           	opt callstack 0
 24375  013434                     ___fladd:
 24376                           	opt callstack 0
 24377                           
 24378                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24379  013434  52E6               	movf	postinc1,f,c
 24380  013436  52E6               	movf	postinc1,f,c
 24381  013438  52E6               	movf	postinc1,f,c
 24382  01343A  52E6               	movf	postinc1,f,c
 24383                           
 24384                           ;stkvar	_b @ sp[(-4)+-4]
 24385                           
 24386                           ;incstack = 0
 24387 ;; hardware stack exceeded
 24388  01343C  0EFB               	movlw	251
 24389  01343E  24E1               	addwf	fsr1l,w,c
 24390  013440  6ED9               	movwf	fsr2l,c
 24391  013442  0EFF               	movlw	255
 24392  013444  20E2               	addwfc	fsr1h,w,c
 24393  013446  6EDA               	movwf	fsr2h,c
 24394  013448  50DF               	movf	indf2,w,c
 24395  01344A  6E0C               	movwf	(btemp+11)^0,c
 24396  01344C  0E80               	movlw	128
 24397  01344E  160C               	andwf	(btemp+11)^0,f,c
 24398                           
 24399                           ;stkvar	_signs @ sp[(-4)+3]
 24400  013450  0EFF               	movlw	-1
 24401  013452  0060  F033  FFE3   	movff	btemp+11,plusw1
 24402                           
 24403                           ;stkvar	_b @ sp[(-4)+-4]
 24404  013458  0EFB               	movlw	251
 24405  01345A  24E1               	addwf	fsr1l,w,c
 24406  01345C  6ED9               	movwf	fsr2l,c
 24407  01345E  0EFF               	movlw	255
 24408  013460  20E2               	addwfc	fsr1h,w,c
 24409  013462  6EDA               	movwf	fsr2h,c
 24410  013464  50DF               	movf	indf2,w,c
 24411  013466  6E0C               	movwf	(btemp+11)^0,c
 24412  013468  90D8               	bcf	status,0,c
 24413  01346A  340C               	rlcf	(btemp+11)^0,w,c
 24414  01346C  6E0B               	movwf	(btemp+10)^0,c
 24415                           
 24416                           ;stkvar	_bexp @ sp[(-4)+1]
 24417  01346E  0EFD               	movlw	-3
 24418  013470  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24419                           
 24420                           ;stkvar	_b @ sp[(-4)+-4]
 24421  013476  0EFA               	movlw	250
 24422  013478  24E1               	addwf	fsr1l,w,c
 24423  01347A  6ED9               	movwf	fsr2l,c
 24424  01347C  0EFF               	movlw	255
 24425  01347E  20E2               	addwfc	fsr1h,w,c
 24426  013480  6EDA               	movwf	fsr2h,c
 24427  013482  AEDF               	btfss	indf2,7,c
 24428  013484  D002               	goto	l7236
 24429                           
 24430                           ;stkvar	_bexp @ sp[(-4)+1]
 24431  013486  0EFD               	movlw	-3
 24432  013488  80E3               	bsf	plusw1,0,c
 24433  01348A                     l7236:
 24434                           
 24435                           ;stkvar	_bexp @ sp[(-4)+1]
 24436  01348A  0EFD               	movlw	-3
 24437  01348C  50E3               	movf	plusw1,w,c
 24438  01348E  B4D8               	btfsc	status,2,c
 24439  013490  D027               	goto	l7246
 24440                           
 24441                           ;stkvar	_bexp @ sp[(-4)+1]
 24442  013492  0EFD               	movlw	-3
 24443  013494  28E3               	incf	plusw1,w,c
 24444  013496  A4D8               	btfss	status,2,c
 24445  013498  D018               	goto	l7242
 24446  01349A  0E00               	movlw	0
 24447  01349C  6E09               	movwf	(btemp+8)^0,c
 24448  01349E  0E00               	movlw	0
 24449  0134A0  6E0A               	movwf	(btemp+9)^0,c
 24450  0134A2  0E00               	movlw	0
 24451  0134A4  6E0B               	movwf	(btemp+10)^0,c
 24452  0134A6  0E00               	movlw	0
 24453  0134A8  6E0C               	movwf	(btemp+11)^0,c
 24454                           
 24455                           ;stkvar	_b @ sp[(-4)+-4]
 24456  0134AA  0EF8               	movlw	-8
 24457  0134AC  0060  F027  FFE3   	movff	btemp+8,plusw1
 24458  0134B2  0EF9               	movlw	-7
 24459  0134B4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24460  0134BA  0EFA               	movlw	-6
 24461  0134BC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24462  0134C2  0EFB               	movlw	-5
 24463  0134C4  0060  F033  FFE3   	movff	btemp+11,plusw1
 24464  0134CA                     l7242:
 24465                           
 24466                           ;stkvar	_b @ sp[(-4)+-4]
 24467  0134CA  0EFA               	movlw	-6
 24468  0134CC  8EE3               	bsf	plusw1,7,c
 24469                           
 24470                           ;stkvar	_b @ sp[(-4)+-4]
 24471  0134CE  0EFB               	movlw	251
 24472  0134D0  24E1               	addwf	fsr1l,w,c
 24473  0134D2  6ED9               	movwf	fsr2l,c
 24474  0134D4  0EFF               	movlw	255
 24475  0134D6  20E2               	addwfc	fsr1h,w,c
 24476  0134D8  6EDA               	movwf	fsr2h,c
 24477  0134DA  0E00               	movlw	0
 24478  0134DC  6EDF               	movwf	indf2,c
 24479  0134DE  D018               	goto	l7248
 24480  0134E0                     l7246:
 24481  0134E0  0E00               	movlw	0
 24482  0134E2  6E09               	movwf	(btemp+8)^0,c
 24483  0134E4  0E00               	movlw	0
 24484  0134E6  6E0A               	movwf	(btemp+9)^0,c
 24485  0134E8  0E00               	movlw	0
 24486  0134EA  6E0B               	movwf	(btemp+10)^0,c
 24487  0134EC  0E00               	movlw	0
 24488  0134EE  6E0C               	movwf	(btemp+11)^0,c
 24489                           
 24490                           ;stkvar	_b @ sp[(-4)+-4]
 24491  0134F0  0EF8               	movlw	-8
 24492  0134F2  0060  F027  FFE3   	movff	btemp+8,plusw1
 24493  0134F8  0EF9               	movlw	-7
 24494  0134FA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24495  013500  0EFA               	movlw	-6
 24496  013502  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24497  013508  0EFB               	movlw	-5
 24498  01350A  0060  F033  FFE3   	movff	btemp+11,plusw1
 24499  013510                     l7248:
 24500                           
 24501                           ;stkvar	_a @ sp[(-4)+-8]
 24502  013510  0EF7               	movlw	247
 24503  013512  24E1               	addwf	fsr1l,w,c
 24504  013514  6ED9               	movwf	fsr2l,c
 24505  013516  0EFF               	movlw	255
 24506  013518  20E2               	addwfc	fsr1h,w,c
 24507  01351A  6EDA               	movwf	fsr2h,c
 24508  01351C  50DF               	movf	indf2,w,c
 24509  01351E  6E0C               	movwf	(btemp+11)^0,c
 24510  013520  0E80               	movlw	128
 24511  013522  160C               	andwf	(btemp+11)^0,f,c
 24512                           
 24513                           ;stkvar	_aexp @ sp[(-4)+2]
 24514  013524  0EFE               	movlw	-2
 24515  013526  0060  F033  FFE3   	movff	btemp+11,plusw1
 24516                           
 24517                           ;stkvar	_signs @ sp[(-4)+3]
 24518                           ;stkvar	_aexp @ sp[(-4)+2]
 24519  01352C  50E1               	movf	fsr1l,w,c
 24520  01352E  0FFE               	addlw	-2
 24521  013530  6ED9               	movwf	fsr2l,c
 24522  013532  50E2               	movf	fsr1h,w,c
 24523  013534  6EDA               	movwf	fsr2h,c
 24524  013536  0EFF               	movlw	255
 24525  013538  22DA               	addwfc	fsr2h,f,c
 24526  01353A  0EFF               	movlw	-1
 24527  01353C  50E3               	movf	plusw1,w,c
 24528  01353E  18DE               	xorwf	postinc2,w,c
 24529  013540  B4D8               	btfsc	status,2,c
 24530  013542  D002               	goto	l7254
 24531                           
 24532                           ;stkvar	_signs @ sp[(-4)+3]
 24533  013544  0EFF               	movlw	-1
 24534  013546  8CE3               	bsf	plusw1,6,c
 24535  013548                     l7254:
 24536                           
 24537                           ;stkvar	_a @ sp[(-4)+-8]
 24538  013548  0EF7               	movlw	247
 24539  01354A  24E1               	addwf	fsr1l,w,c
 24540  01354C  6ED9               	movwf	fsr2l,c
 24541  01354E  0EFF               	movlw	255
 24542  013550  20E2               	addwfc	fsr1h,w,c
 24543  013552  6EDA               	movwf	fsr2h,c
 24544  013554  50DF               	movf	indf2,w,c
 24545  013556  6E0C               	movwf	(btemp+11)^0,c
 24546  013558  90D8               	bcf	status,0,c
 24547  01355A  340C               	rlcf	(btemp+11)^0,w,c
 24548  01355C  6E0B               	movwf	(btemp+10)^0,c
 24549                           
 24550                           ;stkvar	_aexp @ sp[(-4)+2]
 24551  01355E  0EFE               	movlw	-2
 24552  013560  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24553                           
 24554                           ;stkvar	_a @ sp[(-4)+-8]
 24555  013566  0EF6               	movlw	246
 24556  013568  24E1               	addwf	fsr1l,w,c
 24557  01356A  6ED9               	movwf	fsr2l,c
 24558  01356C  0EFF               	movlw	255
 24559  01356E  20E2               	addwfc	fsr1h,w,c
 24560  013570  6EDA               	movwf	fsr2h,c
 24561  013572  AEDF               	btfss	indf2,7,c
 24562  013574  D002               	goto	l7260
 24563                           
 24564                           ;stkvar	_aexp @ sp[(-4)+2]
 24565  013576  0EFE               	movlw	-2
 24566  013578  80E3               	bsf	plusw1,0,c
 24567  01357A                     l7260:
 24568                           
 24569                           ;stkvar	_aexp @ sp[(-4)+2]
 24570  01357A  0EFE               	movlw	-2
 24571  01357C  50E3               	movf	plusw1,w,c
 24572  01357E  B4D8               	btfsc	status,2,c
 24573  013580  D027               	goto	l7270
 24574                           
 24575                           ;stkvar	_aexp @ sp[(-4)+2]
 24576  013582  0EFE               	movlw	-2
 24577  013584  28E3               	incf	plusw1,w,c
 24578  013586  A4D8               	btfss	status,2,c
 24579  013588  D018               	goto	l7266
 24580  01358A  0E00               	movlw	0
 24581  01358C  6E09               	movwf	(btemp+8)^0,c
 24582  01358E  0E00               	movlw	0
 24583  013590  6E0A               	movwf	(btemp+9)^0,c
 24584  013592  0E00               	movlw	0
 24585  013594  6E0B               	movwf	(btemp+10)^0,c
 24586  013596  0E00               	movlw	0
 24587  013598  6E0C               	movwf	(btemp+11)^0,c
 24588                           
 24589                           ;stkvar	_a @ sp[(-4)+-8]
 24590  01359A  0EF4               	movlw	-12
 24591  01359C  0060  F027  FFE3   	movff	btemp+8,plusw1
 24592  0135A2  0EF5               	movlw	-11
 24593  0135A4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24594  0135AA  0EF6               	movlw	-10
 24595  0135AC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24596  0135B2  0EF7               	movlw	-9
 24597  0135B4  0060  F033  FFE3   	movff	btemp+11,plusw1
 24598  0135BA                     l7266:
 24599                           
 24600                           ;stkvar	_a @ sp[(-4)+-8]
 24601  0135BA  0EF6               	movlw	-10
 24602  0135BC  8EE3               	bsf	plusw1,7,c
 24603                           
 24604                           ;stkvar	_a @ sp[(-4)+-8]
 24605  0135BE  0EF7               	movlw	247
 24606  0135C0  24E1               	addwf	fsr1l,w,c
 24607  0135C2  6ED9               	movwf	fsr2l,c
 24608  0135C4  0EFF               	movlw	255
 24609  0135C6  20E2               	addwfc	fsr1h,w,c
 24610  0135C8  6EDA               	movwf	fsr2h,c
 24611  0135CA  0E00               	movlw	0
 24612  0135CC  6EDF               	movwf	indf2,c
 24613  0135CE  D018               	goto	l7272
 24614  0135D0                     l7270:
 24615  0135D0  0E00               	movlw	0
 24616  0135D2  6E09               	movwf	(btemp+8)^0,c
 24617  0135D4  0E00               	movlw	0
 24618  0135D6  6E0A               	movwf	(btemp+9)^0,c
 24619  0135D8  0E00               	movlw	0
 24620  0135DA  6E0B               	movwf	(btemp+10)^0,c
 24621  0135DC  0E00               	movlw	0
 24622  0135DE  6E0C               	movwf	(btemp+11)^0,c
 24623                           
 24624                           ;stkvar	_a @ sp[(-4)+-8]
 24625  0135E0  0EF4               	movlw	-12
 24626  0135E2  0060  F027  FFE3   	movff	btemp+8,plusw1
 24627  0135E8  0EF5               	movlw	-11
 24628  0135EA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24629  0135F0  0EF6               	movlw	-10
 24630  0135F2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24631  0135F8  0EF7               	movlw	-9
 24632  0135FA  0060  F033  FFE3   	movff	btemp+11,plusw1
 24633  013600                     l7272:
 24634                           
 24635                           ;stkvar	_bexp @ sp[(-4)+1]
 24636                           ;stkvar	_aexp @ sp[(-4)+2]
 24637  013600  50E1               	movf	fsr1l,w,c
 24638  013602  0FFE               	addlw	-2
 24639  013604  6ED9               	movwf	fsr2l,c
 24640  013606  50E2               	movf	fsr1h,w,c
 24641  013608  6EDA               	movwf	fsr2h,c
 24642  01360A  0EFF               	movlw	255
 24643  01360C  22DA               	addwfc	fsr2h,f,c
 24644  01360E  0EFD               	movlw	-3
 24645  013610  50E3               	movf	plusw1,w,c
 24646  013612  5CDE               	subwf	postinc2,w,c
 24647  013614  B0D8               	btfsc	status,0,c
 24648  013616  D0A4               	goto	l7308
 24649                           
 24650                           ;stkvar	_signs @ sp[(-4)+3]
 24651  013618  0EFF               	movlw	-1
 24652  01361A  ACE3               	btfss	plusw1,6,c
 24653  01361C  D002               	goto	l7278
 24654                           
 24655                           ;stkvar	_signs @ sp[(-4)+3]
 24656  01361E  0EFF               	movlw	-1
 24657  013620  7EE3               	btg	plusw1,7,c
 24658  013622                     l7278:
 24659                           
 24660                           ;stkvar	_bexp @ sp[(-4)+1]
 24661                           ;stkvar	_grs @ sp[(-4)+0]
 24662  013622  0EFD               	movlw	-3
 24663  013624  006F FF8C  F001    	movff	plusw1,btemp
 24664  01362A  0EFC               	movlw	-4
 24665  01362C  0060  F007  FFE3   	movff	btemp,plusw1
 24666                           
 24667                           ;stkvar	_aexp @ sp[(-4)+2]
 24668                           ;stkvar	_bexp @ sp[(-4)+1]
 24669  013632  0EFE               	movlw	-2
 24670  013634  006F FF8C  F001    	movff	plusw1,btemp
 24671  01363A  0EFD               	movlw	-3
 24672  01363C  0060  F007  FFE3   	movff	btemp,plusw1
 24673                           
 24674                           ;stkvar	_grs @ sp[(-4)+0]
 24675                           ;stkvar	_aexp @ sp[(-4)+2]
 24676  013642  0EFC               	movlw	-4
 24677  013644  006F FF8C  F001    	movff	plusw1,btemp
 24678  01364A  0EFE               	movlw	-2
 24679  01364C  0060  F007  FFE3   	movff	btemp,plusw1
 24680                           
 24681                           ;stkvar	_b @ sp[(-4)+-4]
 24682                           ;stkvar	_grs @ sp[(-4)+0]
 24683  013652  0EF8               	movlw	-8
 24684  013654  006F FF8C  F001    	movff	plusw1,btemp
 24685  01365A  0EFC               	movlw	-4
 24686  01365C  0060  F007  FFE3   	movff	btemp,plusw1
 24687                           
 24688                           ;stkvar	_a @ sp[(-4)+-8]
 24689                           ;stkvar	_b @ sp[(-4)+-4]
 24690  013662  0EF4               	movlw	-12
 24691  013664  006F FF8C  F001    	movff	plusw1,btemp
 24692  01366A  0EF8               	movlw	-8
 24693  01366C  0060  F007  FFE3   	movff	btemp,plusw1
 24694                           
 24695                           ;stkvar	_grs @ sp[(-4)+0]
 24696                           ;stkvar	_a @ sp[(-4)+-8]
 24697  013672  0EFC               	movlw	-4
 24698  013674  006F FF8C  F001    	movff	plusw1,btemp
 24699  01367A  0EF4               	movlw	-12
 24700  01367C  0060  F007  FFE3   	movff	btemp,plusw1
 24701                           
 24702                           ;stkvar	_b @ sp[(-4)+-4]
 24703  013682  0EF9               	movlw	249
 24704  013684  24E1               	addwf	fsr1l,w,c
 24705  013686  6ED9               	movwf	fsr2l,c
 24706  013688  0EFF               	movlw	255
 24707  01368A  20E2               	addwfc	fsr1h,w,c
 24708  01368C  6EDA               	movwf	fsr2h,c
 24709  01368E  50DF               	movf	indf2,w,c
 24710  013690  6E0C               	movwf	(btemp+11)^0,c
 24711                           
 24712                           ;stkvar	_grs @ sp[(-4)+0]
 24713  013692  0EFC               	movlw	-4
 24714  013694  0060  F033  FFE3   	movff	btemp+11,plusw1
 24715                           
 24716                           ;stkvar	_a @ sp[(-4)+-8]
 24717  01369A  0EF5               	movlw	245
 24718  01369C  24E1               	addwf	fsr1l,w,c
 24719  01369E  6ED9               	movwf	fsr2l,c
 24720  0136A0  0EFF               	movlw	255
 24721  0136A2  20E2               	addwfc	fsr1h,w,c
 24722  0136A4  6EDA               	movwf	fsr2h,c
 24723                           
 24724                           ;stkvar	_b @ sp[(-4)+-4]
 24725  0136A6  0EF9               	movlw	249
 24726  0136A8  24E1               	addwf	fsr1l,w,c
 24727  0136AA  6EE9               	movwf	fsr0l,c
 24728  0136AC  0EFF               	movlw	255
 24729  0136AE  20E2               	addwfc	fsr1h,w,c
 24730  0136B0  6EEA               	movwf	fsr0h,c
 24731  0136B2  006F FF7F FFEF     	movff	indf2,indf0
 24732                           
 24733                           ;stkvar	_grs @ sp[(-4)+0]
 24734                           ;stkvar	_a @ sp[(-4)+-8]
 24735  0136B8  0EF5               	movlw	245
 24736  0136BA  24E1               	addwf	fsr1l,w,c
 24737  0136BC  6ED9               	movwf	fsr2l,c
 24738  0136BE  0EFF               	movlw	255
 24739  0136C0  20E2               	addwfc	fsr1h,w,c
 24740  0136C2  6EDA               	movwf	fsr2h,c
 24741  0136C4  0EFC               	movlw	-4
 24742  0136C6  006F FF8F FFDF     	movff	plusw1,indf2
 24743                           
 24744                           ;stkvar	_b @ sp[(-4)+-4]
 24745  0136CC  0EFA               	movlw	250
 24746  0136CE  24E1               	addwf	fsr1l,w,c
 24747  0136D0  6ED9               	movwf	fsr2l,c
 24748  0136D2  0EFF               	movlw	255
 24749  0136D4  20E2               	addwfc	fsr1h,w,c
 24750  0136D6  6EDA               	movwf	fsr2h,c
 24751  0136D8  50DF               	movf	indf2,w,c
 24752  0136DA  6E0C               	movwf	(btemp+11)^0,c
 24753                           
 24754                           ;stkvar	_grs @ sp[(-4)+0]
 24755  0136DC  0EFC               	movlw	-4
 24756  0136DE  0060  F033  FFE3   	movff	btemp+11,plusw1
 24757                           
 24758                           ;stkvar	_a @ sp[(-4)+-8]
 24759  0136E4  0EF6               	movlw	246
 24760  0136E6  24E1               	addwf	fsr1l,w,c
 24761  0136E8  6ED9               	movwf	fsr2l,c
 24762  0136EA  0EFF               	movlw	255
 24763  0136EC  20E2               	addwfc	fsr1h,w,c
 24764  0136EE  6EDA               	movwf	fsr2h,c
 24765                           
 24766                           ;stkvar	_b @ sp[(-4)+-4]
 24767  0136F0  0EFA               	movlw	250
 24768  0136F2  24E1               	addwf	fsr1l,w,c
 24769  0136F4  6EE9               	movwf	fsr0l,c
 24770  0136F6  0EFF               	movlw	255
 24771  0136F8  20E2               	addwfc	fsr1h,w,c
 24772  0136FA  6EEA               	movwf	fsr0h,c
 24773  0136FC  006F FF7F FFEF     	movff	indf2,indf0
 24774                           
 24775                           ;stkvar	_grs @ sp[(-4)+0]
 24776                           ;stkvar	_a @ sp[(-4)+-8]
 24777  013702  0EF6               	movlw	246
 24778  013704  24E1               	addwf	fsr1l,w,c
 24779  013706  6ED9               	movwf	fsr2l,c
 24780  013708  0EFF               	movlw	255
 24781  01370A  20E2               	addwfc	fsr1h,w,c
 24782  01370C  6EDA               	movwf	fsr2h,c
 24783  01370E  0EFC               	movlw	-4
 24784  013710  006F FF8F FFDF     	movff	plusw1,indf2
 24785                           
 24786                           ;stkvar	_b @ sp[(-4)+-4]
 24787  013716  0EFB               	movlw	251
 24788  013718  24E1               	addwf	fsr1l,w,c
 24789  01371A  6ED9               	movwf	fsr2l,c
 24790  01371C  0EFF               	movlw	255
 24791  01371E  20E2               	addwfc	fsr1h,w,c
 24792  013720  6EDA               	movwf	fsr2h,c
 24793  013722  50DF               	movf	indf2,w,c
 24794  013724  6E0C               	movwf	(btemp+11)^0,c
 24795                           
 24796                           ;stkvar	_grs @ sp[(-4)+0]
 24797  013726  0EFC               	movlw	-4
 24798  013728  0060  F033  FFE3   	movff	btemp+11,plusw1
 24799                           
 24800                           ;stkvar	_a @ sp[(-4)+-8]
 24801  01372E  0EF7               	movlw	247
 24802  013730  24E1               	addwf	fsr1l,w,c
 24803  013732  6ED9               	movwf	fsr2l,c
 24804  013734  0EFF               	movlw	255
 24805  013736  20E2               	addwfc	fsr1h,w,c
 24806  013738  6EDA               	movwf	fsr2h,c
 24807                           
 24808                           ;stkvar	_b @ sp[(-4)+-4]
 24809  01373A  0EFB               	movlw	251
 24810  01373C  24E1               	addwf	fsr1l,w,c
 24811  01373E  6EE9               	movwf	fsr0l,c
 24812  013740  0EFF               	movlw	255
 24813  013742  20E2               	addwfc	fsr1h,w,c
 24814  013744  6EEA               	movwf	fsr0h,c
 24815  013746  006F FF7F FFEF     	movff	indf2,indf0
 24816                           
 24817                           ;stkvar	_grs @ sp[(-4)+0]
 24818                           ;stkvar	_a @ sp[(-4)+-8]
 24819  01374C  0EF7               	movlw	247
 24820  01374E  24E1               	addwf	fsr1l,w,c
 24821  013750  6ED9               	movwf	fsr2l,c
 24822  013752  0EFF               	movlw	255
 24823  013754  20E2               	addwfc	fsr1h,w,c
 24824  013756  6EDA               	movwf	fsr2h,c
 24825  013758  0EFC               	movlw	-4
 24826  01375A  006F FF8F FFDF     	movff	plusw1,indf2
 24827  013760                     l7308:
 24828                           
 24829                           ;stkvar	_grs @ sp[(-4)+0]
 24830  013760  0EFC               	movlw	-4
 24831  013762  6AE3               	clrf	plusw1,c
 24832                           
 24833                           ;stkvar	_aexp @ sp[(-4)+2]
 24834  013764  0EFE               	movlw	-2
 24835  013766  50E3               	movf	plusw1,w,c
 24836  013768  6E0B               	movwf	(btemp+10)^0,c
 24837  01376A  6A0C               	clrf	(btemp+11)^0,c
 24838                           
 24839                           ;stkvar	_bexp @ sp[(-4)+1]
 24840  01376C  0EFD               	movlw	-3
 24841  01376E  50E3               	movf	plusw1,w,c
 24842  013770  5E0B               	subwf	(btemp+10)^0,f,c
 24843  013772  0E00               	movlw	0
 24844  013774  5A0C               	subwfb	(btemp+11)^0,f,c
 24845  013776  BE0C               	btfsc	(btemp+11)^0,7,c
 24846  013778  D062               	goto	l7332
 24847  01377A  500C               	movf	(btemp+11)^0,w,c
 24848  01377C  E104               	bnz	u5170
 24849  01377E  0E1A               	movlw	26
 24850  013780  5C0B               	subwf	(btemp+10)^0,w,c
 24851  013782  A0D8               	btfss	status,0,c
 24852  013784  D05C               	goto	l7332
 24853  013786                     u5170:
 24854                           
 24855                           ;stkvar	_b @ sp[(-4)+-4]
 24856  013786  0EF8               	movlw	-8
 24857  013788  50E3               	movf	plusw1,w,c
 24858  01378A  E10A               	bnz	u5181
 24859  01378C  0EF9               	movlw	-7
 24860  01378E  50E3               	movf	plusw1,w,c
 24861  013790  E107               	bnz	u5181
 24862  013792  0EFA               	movlw	-6
 24863  013794  50E3               	movf	plusw1,w,c
 24864  013796  E104               	bnz	u5181
 24865  013798  0EFB               	movlw	-5
 24866  01379A  50E3               	movf	plusw1,w,c
 24867  01379C  B4D8               	btfsc	status,2,c
 24868  01379E  D003               	goto	u5180
 24869  0137A0                     u5181:
 24870  0137A0  6A0C               	clrf	(btemp+11)^0,c
 24871  0137A2  2A0C               	incf	(btemp+11)^0,f,c
 24872  0137A4  D001               	goto	u5198
 24873  0137A6                     u5180:
 24874  0137A6  6A0C               	clrf	(btemp+11)^0,c
 24875  0137A8                     u5198:
 24876                           
 24877                           ;stkvar	_grs @ sp[(-4)+0]
 24878  0137A8  0EFC               	movlw	-4
 24879  0137AA  0060  F033  FFE3   	movff	btemp+11,plusw1
 24880                           
 24881                           ;stkvar	_b @ sp[(-4)+-4]
 24882  0137B0  0EF8               	movlw	-8
 24883  0137B2  6AE3               	clrf	plusw1,c
 24884  0137B4  0EF9               	movlw	-7
 24885  0137B6  6AE3               	clrf	plusw1,c
 24886  0137B8  0EFA               	movlw	-6
 24887  0137BA  6AE3               	clrf	plusw1,c
 24888  0137BC  0EFB               	movlw	-5
 24889  0137BE  6AE3               	clrf	plusw1,c
 24890                           
 24891                           ;stkvar	_aexp @ sp[(-4)+2]
 24892                           ;stkvar	_bexp @ sp[(-4)+1]
 24893  0137C0  0EFE               	movlw	-2
 24894  0137C2  006F FF8C  F001    	movff	plusw1,btemp
 24895  0137C8  0EFD               	movlw	-3
 24896  0137CA  0060  F007  FFE3   	movff	btemp,plusw1
 24897  0137D0  D042               	goto	u5230
 24898  0137D2                     l7318:
 24899                           
 24900                           ;stkvar	_grs @ sp[(-4)+0]
 24901  0137D2  0EFC               	movlw	-4
 24902  0137D4  A0E3               	btfss	plusw1,0,c
 24903  0137D6  D00D               	goto	l7322
 24904                           
 24905                           ;stkvar	_grs @ sp[(-4)+0]
 24906  0137D8  0EFC               	movlw	-4
 24907  0137DA  006F FF8C  F00C    	movff	plusw1,btemp+11
 24908  0137E0  90D8               	bcf	status,0,c
 24909  0137E2  320C               	rrcf	(btemp+11)^0,f,c
 24910  0137E4  0E01               	movlw	1
 24911  0137E6  120C               	iorwf	(btemp+11)^0,f,c
 24912                           
 24913                           ;stkvar	_grs @ sp[(-4)+0]
 24914  0137E8  0EFC               	movlw	-4
 24915  0137EA  0060  F033  FFE3   	movff	btemp+11,plusw1
 24916  0137F0  D009               	goto	l7324
 24917  0137F2                     l7322:
 24918                           
 24919                           ;stkvar	_grs @ sp[(-4)+0]
 24920  0137F2  50E1               	movf	fsr1l,w,c
 24921  0137F4  0FFC               	addlw	-4
 24922  0137F6  6ED9               	movwf	fsr2l,c
 24923  0137F8  50E2               	movf	fsr1h,w,c
 24924  0137FA  6EDA               	movwf	fsr2h,c
 24925  0137FC  0EFF               	movlw	255
 24926  0137FE  22DA               	addwfc	fsr2h,f,c
 24927  013800  90D8               	bcf	status,0,c
 24928  013802  32DF               	rrcf	indf2,f,c
 24929  013804                     l7324:
 24930                           
 24931                           ;stkvar	_b @ sp[(-4)+-4]
 24932  013804  0EF8               	movlw	-8
 24933  013806  A0E3               	btfss	plusw1,0,c
 24934  013808  D002               	goto	l7328
 24935                           
 24936                           ;stkvar	_grs @ sp[(-4)+0]
 24937  01380A  0EFC               	movlw	-4
 24938  01380C  8EE3               	bsf	plusw1,7,c
 24939  01380E                     l7328:
 24940  01380E  0E01               	movlw	1
 24941  013810  6E0C               	movwf	(btemp+11)^0,c
 24942                           
 24943                           ;stkvar	_b @ sp[(-4)+-4]
 24944  013812  50E1               	movf	fsr1l,w,c
 24945  013814  0FF8               	addlw	-8
 24946  013816  6ED9               	movwf	fsr2l,c
 24947  013818  50E2               	movf	fsr1h,w,c
 24948  01381A  6EDA               	movwf	fsr2h,c
 24949  01381C  0EFF               	movlw	255
 24950  01381E  22DA               	addwfc	fsr2h,f,c
 24951  013820  280C               	incf	(btemp+11)^0,w,c
 24952  013822  52DE               	movf	postinc2,f,c
 24953  013824  D008               	goto	u5220
 24954  013826                     u5225:
 24955  013826  52DE               	movf	postinc2,f,c
 24956  013828  90D8               	bcf	status,0,c
 24957  01382A  BEDC               	btfsc	preinc2,7,c
 24958  01382C  80D8               	bsf	status,0,c
 24959  01382E  32DD               	rrcf	postdec2,f,c
 24960  013830  32DD               	rrcf	postdec2,f,c
 24961  013832  32DD               	rrcf	postdec2,f,c
 24962  013834  32DE               	rrcf	postinc2,f,c
 24963  013836                     u5220:
 24964  013836  2EE8               	decfsz	wreg,f,c
 24965  013838  D7F6               	goto	u5225
 24966                           
 24967                           ;stkvar	_bexp @ sp[(-4)+1]
 24968  01383A  0EFD               	movlw	-3
 24969  01383C  2AE3               	incf	plusw1,f,c
 24970  01383E                     l7332:
 24971                           
 24972                           ;stkvar	_aexp @ sp[(-4)+2]
 24973                           ;stkvar	_bexp @ sp[(-4)+1]
 24974  01383E  50E1               	movf	fsr1l,w,c
 24975  013840  0FFD               	addlw	-3
 24976  013842  6ED9               	movwf	fsr2l,c
 24977  013844  50E2               	movf	fsr1h,w,c
 24978  013846  6EDA               	movwf	fsr2h,c
 24979  013848  0EFF               	movlw	255
 24980  01384A  22DA               	addwfc	fsr2h,f,c
 24981  01384C  0EFE               	movlw	-2
 24982  01384E  50E3               	movf	plusw1,w,c
 24983  013850  5CDE               	subwf	postinc2,w,c
 24984  013852  A0D8               	btfss	status,0,c
 24985  013854  D7BE               	goto	l7318
 24986  013856                     u5230:
 24987                           
 24988                           ;stkvar	_signs @ sp[(-4)+3]
 24989  013856  0EFF               	movlw	-1
 24990  013858  BCE3               	btfsc	plusw1,6,c
 24991  01385A  D066               	goto	l7360
 24992                           
 24993                           ;stkvar	_bexp @ sp[(-4)+1]
 24994  01385C  0EFD               	movlw	-3
 24995  01385E  50E3               	movf	plusw1,w,c
 24996  013860  B4D8               	btfsc	status,2,c
 24997  013862  D0F2               	goto	u5330
 24998                           
 24999                           ;stkvar	_a @ sp[(-4)+-8]
 25000                           ;stkvar	_b @ sp[(-4)+-4]
 25001  013864  0EF8               	movlw	-8
 25002  013866  50E3               	movf	plusw1,w,c
 25003  013868  6E01               	movwf	btemp^0,c
 25004  01386A  0EF4               	movlw	-12
 25005  01386C  50E3               	movf	plusw1,w,c
 25006  01386E  2601               	addwf	btemp^0,f,c
 25007  013870  0EF8               	movlw	-8
 25008  013872  0060  F007  FFE3   	movff	btemp,plusw1
 25009  013878  0EF9               	movlw	-7
 25010  01387A  50E3               	movf	plusw1,w,c
 25011  01387C  6E01               	movwf	btemp^0,c
 25012  01387E  0EF5               	movlw	-11
 25013  013880  50E3               	movf	plusw1,w,c
 25014  013882  2201               	addwfc	btemp^0,f,c
 25015  013884  0EF9               	movlw	-7
 25016  013886  0060  F007  FFE3   	movff	btemp,plusw1
 25017  01388C  0EFA               	movlw	-6
 25018  01388E  50E3               	movf	plusw1,w,c
 25019  013890  6E01               	movwf	btemp^0,c
 25020  013892  0EF6               	movlw	-10
 25021  013894  50E3               	movf	plusw1,w,c
 25022  013896  2201               	addwfc	btemp^0,f,c
 25023  013898  0EFA               	movlw	-6
 25024  01389A  0060  F007  FFE3   	movff	btemp,plusw1
 25025  0138A0  0EFB               	movlw	-5
 25026  0138A2  50E3               	movf	plusw1,w,c
 25027  0138A4  6E01               	movwf	btemp^0,c
 25028  0138A6  0EF7               	movlw	-9
 25029  0138A8  50E3               	movf	plusw1,w,c
 25030  0138AA  2201               	addwfc	btemp^0,f,c
 25031  0138AC  0EFB               	movlw	-5
 25032  0138AE  0060  F007  FFE3   	movff	btemp,plusw1
 25033                           
 25034                           ;stkvar	_b @ sp[(-4)+-4]
 25035  0138B4  0EFB               	movlw	-5
 25036  0138B6  A0E3               	btfss	plusw1,0,c
 25037  0138B8  D101               	goto	u5370
 25038                           
 25039                           ;stkvar	_grs @ sp[(-4)+0]
 25040  0138BA  0EFC               	movlw	-4
 25041  0138BC  A0E3               	btfss	plusw1,0,c
 25042  0138BE  D00D               	goto	l7350
 25043                           
 25044                           ;stkvar	_grs @ sp[(-4)+0]
 25045  0138C0  0EFC               	movlw	-4
 25046  0138C2  006F FF8C  F00C    	movff	plusw1,btemp+11
 25047  0138C8  90D8               	bcf	status,0,c
 25048  0138CA  320C               	rrcf	(btemp+11)^0,f,c
 25049  0138CC  0E01               	movlw	1
 25050  0138CE  120C               	iorwf	(btemp+11)^0,f,c
 25051                           
 25052                           ;stkvar	_grs @ sp[(-4)+0]
 25053  0138D0  0EFC               	movlw	-4
 25054  0138D2  0060  F033  FFE3   	movff	btemp+11,plusw1
 25055  0138D8  D009               	goto	l7352
 25056  0138DA                     l7350:
 25057                           
 25058                           ;stkvar	_grs @ sp[(-4)+0]
 25059  0138DA  50E1               	movf	fsr1l,w,c
 25060  0138DC  0FFC               	addlw	-4
 25061  0138DE  6ED9               	movwf	fsr2l,c
 25062  0138E0  50E2               	movf	fsr1h,w,c
 25063  0138E2  6EDA               	movwf	fsr2h,c
 25064  0138E4  0EFF               	movlw	255
 25065  0138E6  22DA               	addwfc	fsr2h,f,c
 25066  0138E8  90D8               	bcf	status,0,c
 25067  0138EA  32DF               	rrcf	indf2,f,c
 25068  0138EC                     l7352:
 25069                           
 25070                           ;stkvar	_b @ sp[(-4)+-4]
 25071  0138EC  0EF8               	movlw	-8
 25072  0138EE  A0E3               	btfss	plusw1,0,c
 25073  0138F0  D002               	goto	l7356
 25074                           
 25075                           ;stkvar	_grs @ sp[(-4)+0]
 25076  0138F2  0EFC               	movlw	-4
 25077  0138F4  8EE3               	bsf	plusw1,7,c
 25078  0138F6                     l7356:
 25079  0138F6  0E01               	movlw	1
 25080  0138F8  6E0C               	movwf	(btemp+11)^0,c
 25081                           
 25082                           ;stkvar	_b @ sp[(-4)+-4]
 25083  0138FA  50E1               	movf	fsr1l,w,c
 25084  0138FC  0FF8               	addlw	-8
 25085  0138FE  6ED9               	movwf	fsr2l,c
 25086  013900  50E2               	movf	fsr1h,w,c
 25087  013902  6EDA               	movwf	fsr2h,c
 25088  013904  0EFF               	movlw	255
 25089  013906  22DA               	addwfc	fsr2h,f,c
 25090  013908  280C               	incf	(btemp+11)^0,w,c
 25091  01390A  52DE               	movf	postinc2,f,c
 25092  01390C  D008               	goto	u5290
 25093  01390E                     u5295:
 25094  01390E  52DE               	movf	postinc2,f,c
 25095  013910  90D8               	bcf	status,0,c
 25096  013912  BEDC               	btfsc	preinc2,7,c
 25097  013914  80D8               	bsf	status,0,c
 25098  013916  32DD               	rrcf	postdec2,f,c
 25099  013918  32DD               	rrcf	postdec2,f,c
 25100  01391A  32DD               	rrcf	postdec2,f,c
 25101  01391C  32DE               	rrcf	postinc2,f,c
 25102  01391E                     u5290:
 25103  01391E  2EE8               	decfsz	wreg,f,c
 25104  013920  D7F6               	goto	u5295
 25105                           
 25106                           ;stkvar	_bexp @ sp[(-4)+1]
 25107  013922  0EFD               	movlw	-3
 25108  013924  2AE3               	incf	plusw1,f,c
 25109  013926  D0CA               	goto	u5370
 25110  013928                     l7360:
 25111                           
 25112                           ;stkvar	_a @ sp[(-4)+-8]
 25113                           ;stkvar	_b @ sp[(-4)+-4]
 25114  013928  50E1               	movf	fsr1l,w,c
 25115  01392A  0FF8               	addlw	-8
 25116  01392C  6ED9               	movwf	fsr2l,c
 25117  01392E  50E2               	movf	fsr1h,w,c
 25118  013930  6EDA               	movwf	fsr2h,c
 25119  013932  0EFF               	movlw	255
 25120  013934  22DA               	addwfc	fsr2h,f,c
 25121  013936  0EF4               	movlw	-12
 25122  013938  50E3               	movf	plusw1,w,c
 25123  01393A  5CDE               	subwf	postinc2,w,c
 25124  01393C  0EF5               	movlw	-11
 25125  01393E  50E3               	movf	plusw1,w,c
 25126  013940  58DE               	subwfb	postinc2,w,c
 25127  013942  0EF6               	movlw	-10
 25128  013944  50E3               	movf	plusw1,w,c
 25129  013946  58DE               	subwfb	postinc2,w,c
 25130  013948  50DE               	movf	postinc2,w,c
 25131  01394A  0A80               	xorlw	128
 25132  01394C  6E01               	movwf	btemp^0,c
 25133  01394E  0EF7               	movlw	-9
 25134  013950  50E3               	movf	plusw1,w,c
 25135  013952  0A80               	xorlw	128
 25136  013954  5801               	subwfb	btemp^0,w,c
 25137  013956  B0D8               	btfsc	status,0,c
 25138  013958  D053               	goto	l7372
 25139                           
 25140                           ;stkvar	_b @ sp[(-4)+-4]
 25141                           ;stkvar	_a @ sp[(-4)+-8]
 25142  01395A  0EF4               	movlw	-12
 25143  01395C  006F FF8C  F009    	movff	plusw1,btemp+8
 25144  013962  0EF5               	movlw	-11
 25145  013964  006F FF8C  F00A    	movff	plusw1,btemp+9
 25146  01396A  0EF6               	movlw	-10
 25147  01396C  006F FF8C  F00B    	movff	plusw1,btemp+10
 25148  013972  0EF7               	movlw	-9
 25149  013974  006F FF8C  F00C    	movff	plusw1,btemp+11
 25150  01397A  0EF8               	movlw	-8
 25151  01397C  50E3               	movf	plusw1,w,c
 25152  01397E  5E09               	subwf	(btemp+8)^0,f,c
 25153  013980  0EF9               	movlw	-7
 25154  013982  50E3               	movf	plusw1,w,c
 25155  013984  5A0A               	subwfb	(btemp+9)^0,f,c
 25156  013986  0EFA               	movlw	-6
 25157  013988  50E3               	movf	plusw1,w,c
 25158  01398A  5A0B               	subwfb	(btemp+10)^0,f,c
 25159  01398C  0EFB               	movlw	-5
 25160  01398E  50E3               	movf	plusw1,w,c
 25161  013990  5A0C               	subwfb	(btemp+11)^0,f,c
 25162  013992  0EFF               	movlw	255
 25163  013994  2409               	addwf	(btemp+8)^0,w,c
 25164  013996  6E05               	movwf	(btemp+4)^0,c
 25165  013998  0EFF               	movlw	255
 25166  01399A  200A               	addwfc	(btemp+9)^0,w,c
 25167  01399C  6E06               	movwf	(btemp+5)^0,c
 25168  01399E  0EFF               	movlw	255
 25169  0139A0  200B               	addwfc	(btemp+10)^0,w,c
 25170  0139A2  6E07               	movwf	(btemp+6)^0,c
 25171  0139A4  0EFF               	movlw	255
 25172  0139A6  200C               	addwfc	(btemp+11)^0,w,c
 25173  0139A8  6E08               	movwf	(btemp+7)^0,c
 25174                           
 25175                           ;stkvar	_b @ sp[(-4)+-4]
 25176  0139AA  0EF8               	movlw	-8
 25177  0139AC  0060  F017  FFE3   	movff	btemp+4,plusw1
 25178  0139B2  0EF9               	movlw	-7
 25179  0139B4  0060  F01B  FFE3   	movff	btemp+5,plusw1
 25180  0139BA  0EFA               	movlw	-6
 25181  0139BC  0060  F01F  FFE3   	movff	btemp+6,plusw1
 25182  0139C2  0EFB               	movlw	-5
 25183  0139C4  0060  F023  FFE3   	movff	btemp+7,plusw1
 25184                           
 25185                           ;stkvar	_signs @ sp[(-4)+3]
 25186  0139CA  0EFF               	movlw	-1
 25187  0139CC  7EE3               	btg	plusw1,7,c
 25188                           
 25189                           ;stkvar	_grs @ sp[(-4)+0]
 25190  0139CE  0EFC               	movlw	-4
 25191  0139D0  50E3               	movf	plusw1,w,c
 25192  0139D2  0800               	sublw	0
 25193  0139D4  6E0C               	movwf	(btemp+11)^0,c
 25194                           
 25195                           ;stkvar	_grs @ sp[(-4)+0]
 25196  0139D6  0EFC               	movlw	-4
 25197  0139D8  0060  F033  FFE3   	movff	btemp+11,plusw1
 25198                           
 25199                           ;stkvar	_grs @ sp[(-4)+0]
 25200  0139DE  0EFC               	movlw	-4
 25201  0139E0  50E3               	movf	plusw1,w,c
 25202  0139E2  A4D8               	btfss	status,2,c
 25203  0139E4  D020               	goto	l7374
 25204                           
 25205                           ;stkvar	_b @ sp[(-4)+-4]
 25206  0139E6  50E1               	movf	fsr1l,w,c
 25207  0139E8  0FF8               	addlw	-8
 25208  0139EA  6ED9               	movwf	fsr2l,c
 25209  0139EC  50E2               	movf	fsr1h,w,c
 25210  0139EE  6EDA               	movwf	fsr2h,c
 25211  0139F0  0EFF               	movlw	255
 25212  0139F2  22DA               	addwfc	fsr2h,f,c
 25213  0139F4  2ADE               	incf	postinc2,f,c
 25214  0139F6  0E00               	movlw	0
 25215  0139F8  22DE               	addwfc	postinc2,f,c
 25216  0139FA  22DE               	addwfc	postinc2,f,c
 25217  0139FC  22DE               	addwfc	postinc2,f,c
 25218  0139FE  D013               	goto	l7374
 25219  013A00                     l7372:
 25220                           
 25221                           ;stkvar	_a @ sp[(-4)+-8]
 25222                           ;stkvar	_b @ sp[(-4)+-4]
 25223  013A00  50E1               	movf	fsr1l,w,c
 25224  013A02  0FF8               	addlw	-8
 25225  013A04  6ED9               	movwf	fsr2l,c
 25226  013A06  50E2               	movf	fsr1h,w,c
 25227  013A08  6EDA               	movwf	fsr2h,c
 25228  013A0A  0EFF               	movlw	255
 25229  013A0C  22DA               	addwfc	fsr2h,f,c
 25230  013A0E  0EF4               	movlw	-12
 25231  013A10  50E3               	movf	plusw1,w,c
 25232  013A12  5EDE               	subwf	postinc2,f,c
 25233  013A14  0EF5               	movlw	-11
 25234  013A16  50E3               	movf	plusw1,w,c
 25235  013A18  5ADE               	subwfb	postinc2,f,c
 25236  013A1A  0EF6               	movlw	-10
 25237  013A1C  50E3               	movf	plusw1,w,c
 25238  013A1E  5ADE               	subwfb	postinc2,f,c
 25239  013A20  0EF7               	movlw	-9
 25240  013A22  50E3               	movf	plusw1,w,c
 25241  013A24  5ADE               	subwfb	postinc2,f,c
 25242  013A26                     l7374:
 25243                           
 25244                           ;stkvar	_b @ sp[(-4)+-4]
 25245  013A26  0EF8               	movlw	-8
 25246  013A28  50E3               	movf	plusw1,w,c
 25247  013A2A  E145               	bnz	l7396
 25248  013A2C  0EF9               	movlw	-7
 25249  013A2E  50E3               	movf	plusw1,w,c
 25250  013A30  E142               	bnz	l7396
 25251  013A32  0EFA               	movlw	-6
 25252  013A34  50E3               	movf	plusw1,w,c
 25253  013A36  E13F               	bnz	l7396
 25254  013A38  0EFB               	movlw	-5
 25255  013A3A  50E3               	movf	plusw1,w,c
 25256  013A3C  A4D8               	btfss	status,2,c
 25257  013A3E  D03B               	goto	l7396
 25258                           
 25259                           ;stkvar	_grs @ sp[(-4)+0]
 25260  013A40  0EFC               	movlw	-4
 25261  013A42  50E3               	movf	plusw1,w,c
 25262  013A44  A4D8               	btfss	status,2,c
 25263  013A46  D037               	goto	l7396
 25264  013A48                     u5330:
 25265  013A48  0E00               	movlw	0
 25266  013A4A  6E01               	movwf	btemp^0,c
 25267  013A4C  0E00               	movlw	0
 25268  013A4E  6E02               	movwf	(btemp+1)^0,c
 25269  013A50  0E00               	movlw	0
 25270  013A52  6E03               	movwf	(btemp+2)^0,c
 25271  013A54  0E00               	movlw	0
 25272  013A56  6E04               	movwf	(btemp+3)^0,c
 25273  013A58  D0C6               	goto	l2854
 25274  013A5A                     l7382:
 25275                           
 25276                           ;stkvar	_b @ sp[(-4)+-4]
 25277  013A5A  90D8               	bcf	status,0,c
 25278  013A5C  0EF8               	movlw	-8
 25279  013A5E  36E3               	rlcf	plusw1,f,c
 25280  013A60  0EF9               	movlw	-7
 25281  013A62  36E3               	rlcf	plusw1,f,c
 25282  013A64  0EFA               	movlw	-6
 25283  013A66  36E3               	rlcf	plusw1,f,c
 25284  013A68  0EFB               	movlw	-5
 25285  013A6A  36E3               	rlcf	plusw1,f,c
 25286                           
 25287                           ;stkvar	_grs @ sp[(-4)+0]
 25288  013A6C  0EFC               	movlw	-4
 25289  013A6E  AEE3               	btfss	plusw1,7,c
 25290  013A70  D002               	goto	l2866
 25291                           
 25292                           ;stkvar	_b @ sp[(-4)+-4]
 25293  013A72  0EF8               	movlw	-8
 25294  013A74  80E3               	bsf	plusw1,0,c
 25295  013A76                     l2866:
 25296                           
 25297                           ;stkvar	_grs @ sp[(-4)+0]
 25298  013A76  0EFC               	movlw	-4
 25299  013A78  A0E3               	btfss	plusw1,0,c
 25300  013A7A  D00E               	goto	l7390
 25301                           
 25302                           ;stkvar	_grs @ sp[(-4)+0]
 25303  013A7C  0EFC               	movlw	-4
 25304  013A7E  006F FF8C  F00C    	movff	plusw1,btemp+11
 25305  013A84  90D8               	bcf	status,0,c
 25306  013A86  340C               	rlcf	(btemp+11)^0,w,c
 25307  013A88  6E0B               	movwf	(btemp+10)^0,c
 25308  013A8A  0E01               	movlw	1
 25309  013A8C  120B               	iorwf	(btemp+10)^0,f,c
 25310                           
 25311                           ;stkvar	_grs @ sp[(-4)+0]
 25312  013A8E  0EFC               	movlw	-4
 25313  013A90  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25314  013A96  D009               	goto	l7392
 25315  013A98                     l7390:
 25316                           
 25317                           ;stkvar	_grs @ sp[(-4)+0]
 25318  013A98  50E1               	movf	fsr1l,w,c
 25319  013A9A  0FFC               	addlw	-4
 25320  013A9C  6ED9               	movwf	fsr2l,c
 25321  013A9E  50E2               	movf	fsr1h,w,c
 25322  013AA0  6EDA               	movwf	fsr2h,c
 25323  013AA2  0EFF               	movlw	255
 25324  013AA4  22DA               	addwfc	fsr2h,f,c
 25325  013AA6  90D8               	bcf	status,0,c
 25326  013AA8  36DF               	rlcf	indf2,f,c
 25327  013AAA                     l7392:
 25328                           
 25329                           ;stkvar	_bexp @ sp[(-4)+1]
 25330  013AAA  0EFD               	movlw	-3
 25331  013AAC  50E3               	movf	plusw1,w,c
 25332  013AAE  B4D8               	btfsc	status,2,c
 25333  013AB0  D002               	goto	l7396
 25334                           
 25335                           ;stkvar	_bexp @ sp[(-4)+1]
 25336  013AB2  0EFD               	movlw	-3
 25337  013AB4  06E3               	decf	plusw1,f,c
 25338  013AB6                     l7396:
 25339                           
 25340                           ;stkvar	_b @ sp[(-4)+-4]
 25341  013AB6  0EFA               	movlw	-6
 25342  013AB8  AEE3               	btfss	plusw1,7,c
 25343  013ABA  D7CF               	goto	l7382
 25344  013ABC                     u5370:
 25345                           
 25346                           ;stkvar	_aexp @ sp[(-4)+2]
 25347  013ABC  0EFE               	movlw	-2
 25348  013ABE  6AE3               	clrf	plusw1,c
 25349                           
 25350                           ;stkvar	_grs @ sp[(-4)+0]
 25351  013AC0  0EFC               	movlw	-4
 25352  013AC2  AEE3               	btfss	plusw1,7,c
 25353  013AC4  D00F               	goto	l7410
 25354                           
 25355                           ;stkvar	_grs @ sp[(-4)+0]
 25356  013AC6  0EFC               	movlw	-4
 25357  013AC8  006F FF8C  F00C    	movff	plusw1,btemp+11
 25358  013ACE  0E7F               	movlw	127
 25359  013AD0  160C               	andwf	(btemp+11)^0,f,c
 25360  013AD2  B4D8               	btfsc	status,2,c
 25361  013AD4  D004               	goto	l7406
 25362  013AD6                     u5390:
 25363                           
 25364                           ;stkvar	_aexp @ sp[(-4)+2]
 25365  013AD6  0EFE               	movlw	-2
 25366  013AD8  6AE3               	clrf	plusw1,c
 25367  013ADA  2AE3               	incf	plusw1,f,c
 25368  013ADC  D003               	goto	l7410
 25369  013ADE                     l7406:
 25370                           
 25371                           ;stkvar	_b @ sp[(-4)+-4]
 25372  013ADE  0EF8               	movlw	-8
 25373  013AE0  B0E3               	btfsc	plusw1,0,c
 25374  013AE2  D7F9               	goto	u5390
 25375  013AE4                     l7410:
 25376                           
 25377                           ;stkvar	_aexp @ sp[(-4)+2]
 25378  013AE4  0EFE               	movlw	-2
 25379  013AE6  50E3               	movf	plusw1,w,c
 25380  013AE8  B4D8               	btfsc	status,2,c
 25381  013AEA  D02B               	goto	l7422
 25382                           
 25383                           ;stkvar	_b @ sp[(-4)+-4]
 25384  013AEC  50E1               	movf	fsr1l,w,c
 25385  013AEE  0FF8               	addlw	-8
 25386  013AF0  6ED9               	movwf	fsr2l,c
 25387  013AF2  50E2               	movf	fsr1h,w,c
 25388  013AF4  6EDA               	movwf	fsr2h,c
 25389  013AF6  0EFF               	movlw	255
 25390  013AF8  22DA               	addwfc	fsr2h,f,c
 25391  013AFA  2ADE               	incf	postinc2,f,c
 25392  013AFC  0E00               	movlw	0
 25393  013AFE  22DE               	addwfc	postinc2,f,c
 25394  013B00  22DE               	addwfc	postinc2,f,c
 25395  013B02  22DE               	addwfc	postinc2,f,c
 25396                           
 25397                           ;stkvar	_b @ sp[(-4)+-4]
 25398  013B04  0EFB               	movlw	-5
 25399  013B06  A0E3               	btfss	plusw1,0,c
 25400  013B08  D01C               	goto	l7422
 25401  013B0A  0E01               	movlw	1
 25402  013B0C  6E0C               	movwf	(btemp+11)^0,c
 25403                           
 25404                           ;stkvar	_b @ sp[(-4)+-4]
 25405  013B0E  50E1               	movf	fsr1l,w,c
 25406  013B10  0FF8               	addlw	-8
 25407  013B12  6ED9               	movwf	fsr2l,c
 25408  013B14  50E2               	movf	fsr1h,w,c
 25409  013B16  6EDA               	movwf	fsr2h,c
 25410  013B18  0EFF               	movlw	255
 25411  013B1A  22DA               	addwfc	fsr2h,f,c
 25412  013B1C  280C               	incf	(btemp+11)^0,w,c
 25413  013B1E  52DE               	movf	postinc2,f,c
 25414  013B20  D008               	goto	u5430
 25415  013B22                     u5435:
 25416  013B22  52DE               	movf	postinc2,f,c
 25417  013B24  90D8               	bcf	status,0,c
 25418  013B26  BEDC               	btfsc	preinc2,7,c
 25419  013B28  80D8               	bsf	status,0,c
 25420  013B2A  32DD               	rrcf	postdec2,f,c
 25421  013B2C  32DD               	rrcf	postdec2,f,c
 25422  013B2E  32DD               	rrcf	postdec2,f,c
 25423  013B30  32DE               	rrcf	postinc2,f,c
 25424  013B32                     u5430:
 25425  013B32  2EE8               	decfsz	wreg,f,c
 25426  013B34  D7F6               	goto	u5435
 25427                           
 25428                           ;stkvar	_bexp @ sp[(-4)+1]
 25429  013B36  0EFD               	movlw	-3
 25430  013B38  28E3               	incf	plusw1,w,c
 25431  013B3A  B4D8               	btfsc	status,2,c
 25432  013B3C  D002               	goto	l7422
 25433                           
 25434                           ;stkvar	_bexp @ sp[(-4)+1]
 25435  013B3E  0EFD               	movlw	-3
 25436  013B40  2AE3               	incf	plusw1,f,c
 25437  013B42                     l7422:
 25438                           
 25439                           ;stkvar	_bexp @ sp[(-4)+1]
 25440  013B42  0EFD               	movlw	-3
 25441  013B44  28E3               	incf	plusw1,w,c
 25442  013B46  B4D8               	btfsc	status,2,c
 25443  013B48  D004               	goto	u5460
 25444                           
 25445                           ;stkvar	_bexp @ sp[(-4)+1]
 25446  013B4A  0EFD               	movlw	-3
 25447  013B4C  50E3               	movf	plusw1,w,c
 25448  013B4E  A4D8               	btfss	status,2,c
 25449  013B50  D00E               	goto	l7432
 25450  013B52                     u5460:
 25451                           
 25452                           ;stkvar	_b @ sp[(-4)+-4]
 25453  013B52  0EF8               	movlw	-8
 25454  013B54  6AE3               	clrf	plusw1,c
 25455  013B56  0EF9               	movlw	-7
 25456  013B58  6AE3               	clrf	plusw1,c
 25457  013B5A  0EFA               	movlw	-6
 25458  013B5C  6AE3               	clrf	plusw1,c
 25459  013B5E  0EFB               	movlw	-5
 25460  013B60  6AE3               	clrf	plusw1,c
 25461                           
 25462                           ;stkvar	_bexp @ sp[(-4)+1]
 25463  013B62  0EFD               	movlw	-3
 25464  013B64  50E3               	movf	plusw1,w,c
 25465  013B66  A4D8               	btfss	status,2,c
 25466  013B68  D002               	goto	l7432
 25467                           
 25468                           ;stkvar	_signs @ sp[(-4)+3]
 25469  013B6A  0EFF               	movlw	-1
 25470  013B6C  6AE3               	clrf	plusw1,c
 25471  013B6E                     l7432:
 25472                           
 25473                           ;stkvar	_bexp @ sp[(-4)+1]
 25474  013B6E  0EFD               	movlw	-3
 25475  013B70  A0E3               	btfss	plusw1,0,c
 25476  013B72  D009               	goto	l7436
 25477                           
 25478                           ;stkvar	_b @ sp[(-4)+-4]
 25479  013B74  0EFA               	movlw	250
 25480  013B76  24E1               	addwf	fsr1l,w,c
 25481  013B78  6ED9               	movwf	fsr2l,c
 25482  013B7A  0EFF               	movlw	255
 25483  013B7C  20E2               	addwfc	fsr1h,w,c
 25484  013B7E  6EDA               	movwf	fsr2h,c
 25485  013B80  0E00               	movlw	0
 25486  013B82  8EDB               	bsf	plusw2,7,c
 25487  013B84  D008               	goto	l7438
 25488  013B86                     l7436:
 25489                           
 25490                           ;stkvar	_b @ sp[(-4)+-4]
 25491  013B86  0EFA               	movlw	250
 25492  013B88  24E1               	addwf	fsr1l,w,c
 25493  013B8A  6ED9               	movwf	fsr2l,c
 25494  013B8C  0EFF               	movlw	255
 25495  013B8E  20E2               	addwfc	fsr1h,w,c
 25496  013B90  6EDA               	movwf	fsr2h,c
 25497  013B92  0E7F               	movlw	127
 25498  013B94  16DF               	andwf	indf2,f,c
 25499  013B96                     l7438:
 25500                           
 25501                           ;stkvar	_b @ sp[(-4)+-4]
 25502  013B96  0EFB               	movlw	251
 25503  013B98  24E1               	addwf	fsr1l,w,c
 25504  013B9A  6ED9               	movwf	fsr2l,c
 25505  013B9C  0EFF               	movlw	255
 25506  013B9E  20E2               	addwfc	fsr1h,w,c
 25507  013BA0  6EDA               	movwf	fsr2h,c
 25508                           
 25509                           ;stkvar	_bexp @ sp[(-4)+1]
 25510  013BA2  0EFD               	movlw	-3
 25511  013BA4  006F FF8C  F00C    	movff	plusw1,btemp+11
 25512  013BAA  90D8               	bcf	status,0,c
 25513  013BAC  300C               	rrcf	(btemp+11)^0,w,c
 25514  013BAE  6EDF               	movwf	indf2,c
 25515                           
 25516                           ;stkvar	_signs @ sp[(-4)+3]
 25517  013BB0  0EFF               	movlw	-1
 25518  013BB2  AEE3               	btfss	plusw1,7,c
 25519  013BB4  D008               	goto	l7444
 25520                           
 25521                           ;stkvar	_b @ sp[(-4)+-4]
 25522  013BB6  0EFB               	movlw	251
 25523  013BB8  24E1               	addwf	fsr1l,w,c
 25524  013BBA  6ED9               	movwf	fsr2l,c
 25525  013BBC  0EFF               	movlw	255
 25526  013BBE  20E2               	addwfc	fsr1h,w,c
 25527  013BC0  6EDA               	movwf	fsr2h,c
 25528  013BC2  0E00               	movlw	0
 25529  013BC4  8EDB               	bsf	plusw2,7,c
 25530  013BC6                     l7444:
 25531                           
 25532                           ;stkvar	_b @ sp[(-4)+-4]
 25533  013BC6  0EF8               	movlw	-8
 25534  013BC8  006F FF8C  F001    	movff	plusw1,btemp
 25535  013BCE  0EF9               	movlw	-7
 25536  013BD0  006F FF8C  F002    	movff	plusw1,btemp+1
 25537  013BD6  0EFA               	movlw	-6
 25538  013BD8  006F FF8C  F003    	movff	plusw1,btemp+2
 25539  013BDE  0EFB               	movlw	-5
 25540  013BE0  006F FF8C  F004    	movff	plusw1,btemp+3
 25541  013BE6                     l2854:
 25542                           
 25543                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 25544  013BE6  0EF4               	movlw	244
 25545  013BE8  26E1               	addwf	fsr1l,f,c
 25546  013BEA  0EFF               	movlw	255
 25547  013BEC  22E2               	addwfc	fsr1h,f,c
 25548  013BEE  0012               	return		;funcret
 25549  013BF0                     __end_of___fladd:
 25550                           	opt callstack 0
 25551                           
 25552 ;; *************** function ___flmul *****************
 25553 ;; Defined at:
 25554 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 25555 ;; Parameters:    Size  Location     Type
 25556 ;;  b               4  [STACK] unsigned char 
 25557 ;;  a               4  [STACK] unsigned char 
 25558 ;; Auto vars:     Size  Location     Type
 25559 ;;  prod            4  [STACK] struct .
 25560 ;;  grs             4  [STACK] unsigned long 
 25561 ;;  temp            2  [STACK] struct .
 25562 ;;  bexp            1  [STACK] unsigned char 
 25563 ;;  aexp            1  [STACK] unsigned char 
 25564 ;;  sign            1  [STACK] unsigned char 
 25565 ;; Return value:  Size  Location     Type
 25566 ;;                  4  [STACK] unsigned char 
 25567 ;; Registers used:
 25568 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 25569 ;; Tracked objects:
 25570 ;;		On entry : 0/1
 25571 ;;		On exit  : 0/0
 25572 ;;		Unchanged: 0/0
 25573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25578 ;;Total ram usage:        0 bytes
 25579 ;; Hardware stack levels used:    1
 25580 ;; Hardware stack levels required when called:   15
 25581 ;; This function calls:
 25582 ;;		Nothing
 25583 ;; This function is called by:
 25584 ;;		_conv_raw_result
 25585 ;;		_lp_filter
 25586 ;;		_calc_model_data
 25587 ;;		_calc_bsoc
 25588 ;;		_init_bsoc
 25589 ;;		_efgtoa
 25590 ;; This function uses a reentrant model
 25591 ;;
 25592                           
 25593                           	psect	text103
 25594  012C0A                     __ptext103:
 25595                           	opt callstack 0
 25596  012C0A                     ___flmul:
 25597                           	opt callstack 0
 25598                           
 25599                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 25600  012C0A  0E0D               	movlw	13
 25601  012C0C  26E1               	addwf	fsr1l,f,c
 25602  012C0E  0E00               	movlw	0
 25603  012C10  22E2               	addwfc	fsr1h,f,c
 25604                           
 25605                           ;stkvar	_b @ sp[(-13)+-4]
 25606                           
 25607                           ;incstack = 0
 25608 ;; hardware stack exceeded
 25609  012C12  0EF2               	movlw	242
 25610  012C14  24E1               	addwf	fsr1l,w,c
 25611  012C16  6ED9               	movwf	fsr2l,c
 25612  012C18  0EFF               	movlw	255
 25613  012C1A  20E2               	addwfc	fsr1h,w,c
 25614  012C1C  6EDA               	movwf	fsr2h,c
 25615  012C1E  50DF               	movf	indf2,w,c
 25616  012C20  6E0C               	movwf	(btemp+11)^0,c
 25617  012C22  0E80               	movlw	128
 25618  012C24  160C               	andwf	(btemp+11)^0,f,c
 25619                           
 25620                           ;stkvar	_sign @ sp[(-13)+12]
 25621  012C26  0EFF               	movlw	-1
 25622  012C28  0060  F033  FFE3   	movff	btemp+11,plusw1
 25623                           
 25624                           ;stkvar	_b @ sp[(-13)+-4]
 25625  012C2E  0EF2               	movlw	242
 25626  012C30  24E1               	addwf	fsr1l,w,c
 25627  012C32  6ED9               	movwf	fsr2l,c
 25628  012C34  0EFF               	movlw	255
 25629  012C36  20E2               	addwfc	fsr1h,w,c
 25630  012C38  6EDA               	movwf	fsr2h,c
 25631  012C3A  50DF               	movf	indf2,w,c
 25632  012C3C  6E0C               	movwf	(btemp+11)^0,c
 25633  012C3E  90D8               	bcf	status,0,c
 25634  012C40  340C               	rlcf	(btemp+11)^0,w,c
 25635  012C42  6E0B               	movwf	(btemp+10)^0,c
 25636                           
 25637                           ;stkvar	_bexp @ sp[(-13)+10]
 25638  012C44  0EFD               	movlw	-3
 25639  012C46  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25640                           
 25641                           ;stkvar	_b @ sp[(-13)+-4]
 25642  012C4C  0EF1               	movlw	241
 25643  012C4E  24E1               	addwf	fsr1l,w,c
 25644  012C50  6ED9               	movwf	fsr2l,c
 25645  012C52  0EFF               	movlw	255
 25646  012C54  20E2               	addwfc	fsr1h,w,c
 25647  012C56  6EDA               	movwf	fsr2h,c
 25648  012C58  AEDF               	btfss	indf2,7,c
 25649  012C5A  D002               	goto	l7828
 25650                           
 25651                           ;stkvar	_bexp @ sp[(-13)+10]
 25652  012C5C  0EFD               	movlw	-3
 25653  012C5E  80E3               	bsf	plusw1,0,c
 25654  012C60                     l7828:
 25655                           
 25656                           ;stkvar	_bexp @ sp[(-13)+10]
 25657  012C60  0EFD               	movlw	-3
 25658  012C62  50E3               	movf	plusw1,w,c
 25659  012C64  B4D8               	btfsc	status,2,c
 25660  012C66  D01F               	goto	l7836
 25661                           
 25662                           ;stkvar	_bexp @ sp[(-13)+10]
 25663  012C68  0EFD               	movlw	-3
 25664  012C6A  28E3               	incf	plusw1,w,c
 25665  012C6C  A4D8               	btfss	status,2,c
 25666  012C6E  D018               	goto	l7834
 25667  012C70  0E00               	movlw	0
 25668  012C72  6E09               	movwf	(btemp+8)^0,c
 25669  012C74  0E00               	movlw	0
 25670  012C76  6E0A               	movwf	(btemp+9)^0,c
 25671  012C78  0E00               	movlw	0
 25672  012C7A  6E0B               	movwf	(btemp+10)^0,c
 25673  012C7C  0E00               	movlw	0
 25674  012C7E  6E0C               	movwf	(btemp+11)^0,c
 25675                           
 25676                           ;stkvar	_b @ sp[(-13)+-4]
 25677  012C80  0EEF               	movlw	-17
 25678  012C82  0060  F027  FFE3   	movff	btemp+8,plusw1
 25679  012C88  0EF0               	movlw	-16
 25680  012C8A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25681  012C90  0EF1               	movlw	-15
 25682  012C92  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25683  012C98  0EF2               	movlw	-14
 25684  012C9A  0060  F033  FFE3   	movff	btemp+11,plusw1
 25685  012CA0                     l7834:
 25686                           
 25687                           ;stkvar	_b @ sp[(-13)+-4]
 25688  012CA0  0EF1               	movlw	-15
 25689  012CA2  8EE3               	bsf	plusw1,7,c
 25690  012CA4  D018               	goto	l7838
 25691  012CA6                     l7836:
 25692  012CA6  0E00               	movlw	0
 25693  012CA8  6E09               	movwf	(btemp+8)^0,c
 25694  012CAA  0E00               	movlw	0
 25695  012CAC  6E0A               	movwf	(btemp+9)^0,c
 25696  012CAE  0E00               	movlw	0
 25697  012CB0  6E0B               	movwf	(btemp+10)^0,c
 25698  012CB2  0E00               	movlw	0
 25699  012CB4  6E0C               	movwf	(btemp+11)^0,c
 25700                           
 25701                           ;stkvar	_b @ sp[(-13)+-4]
 25702  012CB6  0EEF               	movlw	-17
 25703  012CB8  0060  F027  FFE3   	movff	btemp+8,plusw1
 25704  012CBE  0EF0               	movlw	-16
 25705  012CC0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25706  012CC6  0EF1               	movlw	-15
 25707  012CC8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25708  012CCE  0EF2               	movlw	-14
 25709  012CD0  0060  F033  FFE3   	movff	btemp+11,plusw1
 25710  012CD6                     l7838:
 25711                           
 25712                           ;stkvar	_a @ sp[(-13)+-8]
 25713  012CD6  0EEE               	movlw	238
 25714  012CD8  24E1               	addwf	fsr1l,w,c
 25715  012CDA  6ED9               	movwf	fsr2l,c
 25716  012CDC  0EFF               	movlw	255
 25717  012CDE  20E2               	addwfc	fsr1h,w,c
 25718  012CE0  6EDA               	movwf	fsr2h,c
 25719  012CE2  50DF               	movf	indf2,w,c
 25720  012CE4  6E0C               	movwf	(btemp+11)^0,c
 25721  012CE6  0E80               	movlw	128
 25722  012CE8  160C               	andwf	(btemp+11)^0,f,c
 25723                           
 25724                           ;stkvar	_sign @ sp[(-13)+12]
 25725  012CEA  50E1               	movf	fsr1l,w,c
 25726  012CEC  0FFF               	addlw	-1
 25727  012CEE  6ED9               	movwf	fsr2l,c
 25728  012CF0  50E2               	movf	fsr1h,w,c
 25729  012CF2  6EDA               	movwf	fsr2h,c
 25730  012CF4  0EFF               	movlw	255
 25731  012CF6  22DA               	addwfc	fsr2h,f,c
 25732  012CF8  500C               	movf	(btemp+11)^0,w,c
 25733  012CFA  1ADF               	xorwf	indf2,f,c
 25734                           
 25735                           ;stkvar	_a @ sp[(-13)+-8]
 25736  012CFC  0EEE               	movlw	238
 25737  012CFE  24E1               	addwf	fsr1l,w,c
 25738  012D00  6ED9               	movwf	fsr2l,c
 25739  012D02  0EFF               	movlw	255
 25740  012D04  20E2               	addwfc	fsr1h,w,c
 25741  012D06  6EDA               	movwf	fsr2h,c
 25742  012D08  50DF               	movf	indf2,w,c
 25743  012D0A  6E0C               	movwf	(btemp+11)^0,c
 25744  012D0C  90D8               	bcf	status,0,c
 25745  012D0E  340C               	rlcf	(btemp+11)^0,w,c
 25746  012D10  6E0B               	movwf	(btemp+10)^0,c
 25747                           
 25748                           ;stkvar	_aexp @ sp[(-13)+11]
 25749  012D12  0EFE               	movlw	-2
 25750  012D14  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25751                           
 25752                           ;stkvar	_a @ sp[(-13)+-8]
 25753  012D1A  0EED               	movlw	237
 25754  012D1C  24E1               	addwf	fsr1l,w,c
 25755  012D1E  6ED9               	movwf	fsr2l,c
 25756  012D20  0EFF               	movlw	255
 25757  012D22  20E2               	addwfc	fsr1h,w,c
 25758  012D24  6EDA               	movwf	fsr2h,c
 25759  012D26  AEDF               	btfss	indf2,7,c
 25760  012D28  D002               	goto	l7846
 25761                           
 25762                           ;stkvar	_aexp @ sp[(-13)+11]
 25763  012D2A  0EFE               	movlw	-2
 25764  012D2C  80E3               	bsf	plusw1,0,c
 25765  012D2E                     l7846:
 25766                           
 25767                           ;stkvar	_aexp @ sp[(-13)+11]
 25768  012D2E  0EFE               	movlw	-2
 25769  012D30  50E3               	movf	plusw1,w,c
 25770  012D32  B4D8               	btfsc	status,2,c
 25771  012D34  D01F               	goto	l7854
 25772                           
 25773                           ;stkvar	_aexp @ sp[(-13)+11]
 25774  012D36  0EFE               	movlw	-2
 25775  012D38  28E3               	incf	plusw1,w,c
 25776  012D3A  A4D8               	btfss	status,2,c
 25777  012D3C  D018               	goto	l7852
 25778  012D3E  0E00               	movlw	0
 25779  012D40  6E09               	movwf	(btemp+8)^0,c
 25780  012D42  0E00               	movlw	0
 25781  012D44  6E0A               	movwf	(btemp+9)^0,c
 25782  012D46  0E00               	movlw	0
 25783  012D48  6E0B               	movwf	(btemp+10)^0,c
 25784  012D4A  0E00               	movlw	0
 25785  012D4C  6E0C               	movwf	(btemp+11)^0,c
 25786                           
 25787                           ;stkvar	_a @ sp[(-13)+-8]
 25788  012D4E  0EEB               	movlw	-21
 25789  012D50  0060  F027  FFE3   	movff	btemp+8,plusw1
 25790  012D56  0EEC               	movlw	-20
 25791  012D58  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25792  012D5E  0EED               	movlw	-19
 25793  012D60  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25794  012D66  0EEE               	movlw	-18
 25795  012D68  0060  F033  FFE3   	movff	btemp+11,plusw1
 25796  012D6E                     l7852:
 25797                           
 25798                           ;stkvar	_a @ sp[(-13)+-8]
 25799  012D6E  0EED               	movlw	-19
 25800  012D70  8EE3               	bsf	plusw1,7,c
 25801  012D72  D018               	goto	l7856
 25802  012D74                     l7854:
 25803  012D74  0E00               	movlw	0
 25804  012D76  6E09               	movwf	(btemp+8)^0,c
 25805  012D78  0E00               	movlw	0
 25806  012D7A  6E0A               	movwf	(btemp+9)^0,c
 25807  012D7C  0E00               	movlw	0
 25808  012D7E  6E0B               	movwf	(btemp+10)^0,c
 25809  012D80  0E00               	movlw	0
 25810  012D82  6E0C               	movwf	(btemp+11)^0,c
 25811                           
 25812                           ;stkvar	_a @ sp[(-13)+-8]
 25813  012D84  0EEB               	movlw	-21
 25814  012D86  0060  F027  FFE3   	movff	btemp+8,plusw1
 25815  012D8C  0EEC               	movlw	-20
 25816  012D8E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25817  012D94  0EED               	movlw	-19
 25818  012D96  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25819  012D9C  0EEE               	movlw	-18
 25820  012D9E  0060  F033  FFE3   	movff	btemp+11,plusw1
 25821  012DA4                     l7856:
 25822                           
 25823                           ;stkvar	_aexp @ sp[(-13)+11]
 25824  012DA4  0EFE               	movlw	-2
 25825  012DA6  50E3               	movf	plusw1,w,c
 25826  012DA8  B4D8               	btfsc	status,2,c
 25827  012DAA  D004               	goto	u6400
 25828                           
 25829                           ;stkvar	_bexp @ sp[(-13)+10]
 25830  012DAC  0EFD               	movlw	-3
 25831  012DAE  50E3               	movf	plusw1,w,c
 25832  012DB0  A4D8               	btfss	status,2,c
 25833  012DB2  D009               	goto	l7864
 25834  012DB4                     u6400:
 25835  012DB4  0E00               	movlw	0
 25836  012DB6  6E01               	movwf	btemp^0,c
 25837  012DB8  0E00               	movlw	0
 25838  012DBA  6E02               	movwf	(btemp+1)^0,c
 25839  012DBC  0E00               	movlw	0
 25840  012DBE  6E03               	movwf	(btemp+2)^0,c
 25841  012DC0  0E00               	movlw	0
 25842  012DC2  6E04               	movwf	(btemp+3)^0,c
 25843  012DC4  D332               	goto	l2935
 25844  012DC6                     l7864:
 25845                           
 25846                           ;stkvar	_b @ sp[(-13)+-4]
 25847  012DC6  0EEF               	movlw	-17
 25848  012DC8  006F FF8C  F00C    	movff	plusw1,btemp+11
 25849                           
 25850                           ;stkvar	_a @ sp[(-13)+-8]
 25851  012DCE  0EED               	movlw	237
 25852  012DD0  24E1               	addwf	fsr1l,w,c
 25853  012DD2  6ED9               	movwf	fsr2l,c
 25854  012DD4  0EFF               	movlw	255
 25855  012DD6  20E2               	addwfc	fsr1h,w,c
 25856  012DD8  6EDA               	movwf	fsr2h,c
 25857  012DDA  50DF               	movf	indf2,w,c
 25858  012DDC  020C               	mulwf	(btemp+11)^0,c
 25859                           
 25860                           ;stkvar	_temp @ sp[(-13)+8]
 25861  012DDE  0EFB               	movlw	-5
 25862  012DE0  006F FFCF FFE3     	movff	prodl,plusw1
 25863  012DE6  0EFC               	movlw	-4
 25864  012DE8  006F FFD3 FFE3     	movff	prodh,plusw1
 25865                           
 25866                           ;stkvar	_temp @ sp[(-13)+8]
 25867  012DEE  0EFB               	movlw	-5
 25868  012DF0  006F FF8C  F00C    	movff	plusw1,btemp+11
 25869  012DF6  0060  F030  F005   	movff	btemp+11,btemp+4
 25870  012DFC  6A06               	clrf	(btemp+5)^0,c
 25871  012DFE  6A07               	clrf	(btemp+6)^0,c
 25872  012E00  6A08               	clrf	(btemp+7)^0,c
 25873                           
 25874                           ;stkvar	_grs @ sp[(-13)+4]
 25875  012E02  0EF7               	movlw	-9
 25876  012E04  0060  F017  FFE3   	movff	btemp+4,plusw1
 25877  012E0A  0EF8               	movlw	-8
 25878  012E0C  0060  F01B  FFE3   	movff	btemp+5,plusw1
 25879  012E12  0EF9               	movlw	-7
 25880  012E14  0060  F01F  FFE3   	movff	btemp+6,plusw1
 25881  012E1A  0EFA               	movlw	-6
 25882  012E1C  0060  F023  FFE3   	movff	btemp+7,plusw1
 25883                           
 25884                           ;stkvar	_temp @ sp[(-13)+8]
 25885  012E22  0EFC               	movlw	252
 25886  012E24  24E1               	addwf	fsr1l,w,c
 25887  012E26  6ED9               	movwf	fsr2l,c
 25888  012E28  0EFF               	movlw	255
 25889  012E2A  20E2               	addwfc	fsr1h,w,c
 25890  012E2C  6EDA               	movwf	fsr2h,c
 25891  012E2E  50DF               	movf	indf2,w,c
 25892  012E30  6E0C               	movwf	(btemp+11)^0,c
 25893  012E32  0060  F030  F005   	movff	btemp+11,btemp+4
 25894  012E38  6A06               	clrf	(btemp+5)^0,c
 25895  012E3A  6A07               	clrf	(btemp+6)^0,c
 25896  012E3C  6A08               	clrf	(btemp+7)^0,c
 25897                           
 25898                           ;stkvar	_prod @ sp[(-13)+0]
 25899  012E3E  0EF3               	movlw	-13
 25900  012E40  0060  F017  FFE3   	movff	btemp+4,plusw1
 25901  012E46  0EF4               	movlw	-12
 25902  012E48  0060  F01B  FFE3   	movff	btemp+5,plusw1
 25903  012E4E  0EF5               	movlw	-11
 25904  012E50  0060  F01F  FFE3   	movff	btemp+6,plusw1
 25905  012E56  0EF6               	movlw	-10
 25906  012E58  0060  F023  FFE3   	movff	btemp+7,plusw1
 25907                           
 25908                           ;stkvar	_b @ sp[(-13)+-4]
 25909  012E5E  0EF0               	movlw	240
 25910  012E60  24E1               	addwf	fsr1l,w,c
 25911  012E62  6ED9               	movwf	fsr2l,c
 25912  012E64  0EFF               	movlw	255
 25913  012E66  20E2               	addwfc	fsr1h,w,c
 25914  012E68  6EDA               	movwf	fsr2h,c
 25915  012E6A  50DF               	movf	indf2,w,c
 25916  012E6C  6E0C               	movwf	(btemp+11)^0,c
 25917                           
 25918                           ;stkvar	_a @ sp[(-13)+-8]
 25919  012E6E  0EEC               	movlw	236
 25920  012E70  24E1               	addwf	fsr1l,w,c
 25921  012E72  6ED9               	movwf	fsr2l,c
 25922  012E74  0EFF               	movlw	255
 25923  012E76  20E2               	addwfc	fsr1h,w,c
 25924  012E78  6EDA               	movwf	fsr2h,c
 25925  012E7A  50DF               	movf	indf2,w,c
 25926  012E7C  020C               	mulwf	(btemp+11)^0,c
 25927                           
 25928                           ;stkvar	_temp @ sp[(-13)+8]
 25929  012E7E  0EFB               	movlw	-5
 25930  012E80  006F FFCF FFE3     	movff	prodl,plusw1
 25931  012E86  0EFC               	movlw	-4
 25932  012E88  006F FFD3 FFE3     	movff	prodh,plusw1
 25933                           
 25934                           ;stkvar	_grs @ sp[(-13)+4]
 25935  012E8E  50E1               	movf	fsr1l,w,c
 25936  012E90  0FF7               	addlw	-9
 25937  012E92  6ED9               	movwf	fsr2l,c
 25938  012E94  50E2               	movf	fsr1h,w,c
 25939  012E96  6EDA               	movwf	fsr2h,c
 25940  012E98  0EFF               	movlw	255
 25941  012E9A  22DA               	addwfc	fsr2h,f,c
 25942                           
 25943                           ;stkvar	_temp @ sp[(-13)+8]
 25944  012E9C  0EFB               	movlw	-5
 25945  012E9E  50E3               	movf	plusw1,w,c
 25946  012EA0  26DE               	addwf	postinc2,f,c
 25947  012EA2  0E00               	movlw	0
 25948  012EA4  22DE               	addwfc	postinc2,f,c
 25949  012EA6  22DE               	addwfc	postinc2,f,c
 25950  012EA8  22DE               	addwfc	postinc2,f,c
 25951                           
 25952                           ;stkvar	_prod @ sp[(-13)+0]
 25953  012EAA  50E1               	movf	fsr1l,w,c
 25954  012EAC  0FF3               	addlw	-13
 25955  012EAE  6ED9               	movwf	fsr2l,c
 25956  012EB0  50E2               	movf	fsr1h,w,c
 25957  012EB2  6EDA               	movwf	fsr2h,c
 25958  012EB4  0EFF               	movlw	255
 25959  012EB6  22DA               	addwfc	fsr2h,f,c
 25960                           
 25961                           ;stkvar	_temp @ sp[(-13)+8]
 25962  012EB8  0EFC               	movlw	252
 25963  012EBA  24E1               	addwf	fsr1l,w,c
 25964  012EBC  6EE9               	movwf	fsr0l,c
 25965  012EBE  0EFF               	movlw	255
 25966  012EC0  20E2               	addwfc	fsr1h,w,c
 25967  012EC2  6EEA               	movwf	fsr0h,c
 25968  012EC4  50EF               	movf	indf0,w,c
 25969  012EC6  26DE               	addwf	postinc2,f,c
 25970  012EC8  0E00               	movlw	0
 25971  012ECA  22DE               	addwfc	postinc2,f,c
 25972  012ECC  22DE               	addwfc	postinc2,f,c
 25973  012ECE  22DE               	addwfc	postinc2,f,c
 25974                           
 25975                           ;stkvar	_b @ sp[(-13)+-4]
 25976  012ED0  0EF1               	movlw	241
 25977  012ED2  24E1               	addwf	fsr1l,w,c
 25978  012ED4  6ED9               	movwf	fsr2l,c
 25979  012ED6  0EFF               	movlw	255
 25980  012ED8  20E2               	addwfc	fsr1h,w,c
 25981  012EDA  6EDA               	movwf	fsr2h,c
 25982  012EDC  50DF               	movf	indf2,w,c
 25983  012EDE  6E0C               	movwf	(btemp+11)^0,c
 25984                           
 25985                           ;stkvar	_a @ sp[(-13)+-8]
 25986  012EE0  0EEB               	movlw	-21
 25987  012EE2  50E3               	movf	plusw1,w,c
 25988  012EE4  020C               	mulwf	(btemp+11)^0,c
 25989                           
 25990                           ;stkvar	_temp @ sp[(-13)+8]
 25991  012EE6  0EFB               	movlw	-5
 25992  012EE8  006F FFCF FFE3     	movff	prodl,plusw1
 25993  012EEE  0EFC               	movlw	-4
 25994  012EF0  006F FFD3 FFE3     	movff	prodh,plusw1
 25995                           
 25996                           ;stkvar	_grs @ sp[(-13)+4]
 25997  012EF6  50E1               	movf	fsr1l,w,c
 25998  012EF8  0FF7               	addlw	-9
 25999  012EFA  6ED9               	movwf	fsr2l,c
 26000  012EFC  50E2               	movf	fsr1h,w,c
 26001  012EFE  6EDA               	movwf	fsr2h,c
 26002  012F00  0EFF               	movlw	255
 26003  012F02  22DA               	addwfc	fsr2h,f,c
 26004                           
 26005                           ;stkvar	_temp @ sp[(-13)+8]
 26006  012F04  0EFB               	movlw	-5
 26007  012F06  50E3               	movf	plusw1,w,c
 26008  012F08  26DE               	addwf	postinc2,f,c
 26009  012F0A  0E00               	movlw	0
 26010  012F0C  22DE               	addwfc	postinc2,f,c
 26011  012F0E  22DE               	addwfc	postinc2,f,c
 26012  012F10  22DE               	addwfc	postinc2,f,c
 26013                           
 26014                           ;stkvar	_prod @ sp[(-13)+0]
 26015  012F12  50E1               	movf	fsr1l,w,c
 26016  012F14  0FF3               	addlw	-13
 26017  012F16  6ED9               	movwf	fsr2l,c
 26018  012F18  50E2               	movf	fsr1h,w,c
 26019  012F1A  6EDA               	movwf	fsr2h,c
 26020  012F1C  0EFF               	movlw	255
 26021  012F1E  22DA               	addwfc	fsr2h,f,c
 26022                           
 26023                           ;stkvar	_temp @ sp[(-13)+8]
 26024  012F20  0EFC               	movlw	252
 26025  012F22  24E1               	addwf	fsr1l,w,c
 26026  012F24  6EE9               	movwf	fsr0l,c
 26027  012F26  0EFF               	movlw	255
 26028  012F28  20E2               	addwfc	fsr1h,w,c
 26029  012F2A  6EEA               	movwf	fsr0h,c
 26030  012F2C  50EF               	movf	indf0,w,c
 26031  012F2E  26DE               	addwf	postinc2,f,c
 26032  012F30  0E00               	movlw	0
 26033  012F32  22DE               	addwfc	postinc2,f,c
 26034  012F34  22DE               	addwfc	postinc2,f,c
 26035  012F36  22DE               	addwfc	postinc2,f,c
 26036                           
 26037                           ;stkvar	_grs @ sp[(-13)+4]
 26038  012F38  50E1               	movf	fsr1l,w,c
 26039  012F3A  0FF7               	addlw	-9
 26040  012F3C  6ED9               	movwf	fsr2l,c
 26041  012F3E  50E2               	movf	fsr1h,w,c
 26042  012F40  6EDA               	movwf	fsr2h,c
 26043  012F42  0EFF               	movlw	255
 26044  012F44  22DA               	addwfc	fsr2h,f,c
 26045  012F46  0E08               	movlw	8
 26046  012F48                     u6415:
 26047  012F48  90D8               	bcf	status,0,c
 26048  012F4A  36DE               	rlcf	postinc2,f,c
 26049  012F4C  36DE               	rlcf	postinc2,f,c
 26050  012F4E  36DE               	rlcf	postinc2,f,c
 26051  012F50  36DD               	rlcf	postdec2,f,c
 26052  012F52  52DD               	movf	postdec2,f,c
 26053  012F54  52DD               	movf	postdec2,f,c
 26054  012F56  2EE8               	decfsz	wreg,f,c
 26055  012F58  D7F7               	goto	u6415
 26056                           
 26057                           ;stkvar	_b @ sp[(-13)+-4]
 26058  012F5A  0EF0               	movlw	240
 26059  012F5C  24E1               	addwf	fsr1l,w,c
 26060  012F5E  6ED9               	movwf	fsr2l,c
 26061  012F60  0EFF               	movlw	255
 26062  012F62  20E2               	addwfc	fsr1h,w,c
 26063  012F64  6EDA               	movwf	fsr2h,c
 26064  012F66  50DF               	movf	indf2,w,c
 26065  012F68  6E0C               	movwf	(btemp+11)^0,c
 26066                           
 26067                           ;stkvar	_a @ sp[(-13)+-8]
 26068  012F6A  0EEB               	movlw	-21
 26069  012F6C  50E3               	movf	plusw1,w,c
 26070  012F6E  020C               	mulwf	(btemp+11)^0,c
 26071                           
 26072                           ;stkvar	_temp @ sp[(-13)+8]
 26073  012F70  0EFB               	movlw	-5
 26074  012F72  006F FFCF FFE3     	movff	prodl,plusw1
 26075  012F78  0EFC               	movlw	-4
 26076  012F7A  006F FFD3 FFE3     	movff	prodh,plusw1
 26077                           
 26078                           ;stkvar	_temp @ sp[(-13)+8]
 26079  012F80  0EFB               	movlw	-5
 26080  012F82  006F FF8C  F00B    	movff	plusw1,btemp+10
 26081  012F88  0EFC               	movlw	-4
 26082  012F8A  006F FF8C  F00C    	movff	plusw1,btemp+11
 26083                           
 26084                           ;stkvar	_grs @ sp[(-13)+4]
 26085  012F90  50E1               	movf	fsr1l,w,c
 26086  012F92  0FF7               	addlw	-9
 26087  012F94  6ED9               	movwf	fsr2l,c
 26088  012F96  50E2               	movf	fsr1h,w,c
 26089  012F98  6EDA               	movwf	fsr2h,c
 26090  012F9A  0EFF               	movlw	255
 26091  012F9C  22DA               	addwfc	fsr2h,f,c
 26092  012F9E  500B               	movf	(btemp+10)^0,w,c
 26093  012FA0  26DE               	addwf	postinc2,f,c
 26094  012FA2  500C               	movf	(btemp+11)^0,w,c
 26095  012FA4  22DE               	addwfc	postinc2,f,c
 26096  012FA6  0E00               	movlw	0
 26097  012FA8  22DE               	addwfc	postinc2,f,c
 26098  012FAA  22DE               	addwfc	postinc2,f,c
 26099                           
 26100                           ;stkvar	_b @ sp[(-13)+-4]
 26101  012FAC  0EEF               	movlw	-17
 26102  012FAE  006F FF8C  F00C    	movff	plusw1,btemp+11
 26103                           
 26104                           ;stkvar	_a @ sp[(-13)+-8]
 26105  012FB4  0EEC               	movlw	236
 26106  012FB6  24E1               	addwf	fsr1l,w,c
 26107  012FB8  6ED9               	movwf	fsr2l,c
 26108  012FBA  0EFF               	movlw	255
 26109  012FBC  20E2               	addwfc	fsr1h,w,c
 26110  012FBE  6EDA               	movwf	fsr2h,c
 26111  012FC0  50DF               	movf	indf2,w,c
 26112  012FC2  020C               	mulwf	(btemp+11)^0,c
 26113                           
 26114                           ;stkvar	_temp @ sp[(-13)+8]
 26115  012FC4  0EFB               	movlw	-5
 26116  012FC6  006F FFCF FFE3     	movff	prodl,plusw1
 26117  012FCC  0EFC               	movlw	-4
 26118  012FCE  006F FFD3 FFE3     	movff	prodh,plusw1
 26119                           
 26120                           ;stkvar	_temp @ sp[(-13)+8]
 26121  012FD4  0EFB               	movlw	-5
 26122  012FD6  006F FF8C  F00B    	movff	plusw1,btemp+10
 26123  012FDC  0EFC               	movlw	-4
 26124  012FDE  006F FF8C  F00C    	movff	plusw1,btemp+11
 26125                           
 26126                           ;stkvar	_grs @ sp[(-13)+4]
 26127  012FE4  50E1               	movf	fsr1l,w,c
 26128  012FE6  0FF7               	addlw	-9
 26129  012FE8  6ED9               	movwf	fsr2l,c
 26130  012FEA  50E2               	movf	fsr1h,w,c
 26131  012FEC  6EDA               	movwf	fsr2h,c
 26132  012FEE  0EFF               	movlw	255
 26133  012FF0  22DA               	addwfc	fsr2h,f,c
 26134  012FF2  500B               	movf	(btemp+10)^0,w,c
 26135  012FF4  26DE               	addwf	postinc2,f,c
 26136  012FF6  500C               	movf	(btemp+11)^0,w,c
 26137  012FF8  22DE               	addwfc	postinc2,f,c
 26138  012FFA  0E00               	movlw	0
 26139  012FFC  22DE               	addwfc	postinc2,f,c
 26140  012FFE  22DE               	addwfc	postinc2,f,c
 26141                           
 26142                           ;stkvar	_grs @ sp[(-13)+4]
 26143  013000  50E1               	movf	fsr1l,w,c
 26144  013002  0FF7               	addlw	-9
 26145  013004  6ED9               	movwf	fsr2l,c
 26146  013006  50E2               	movf	fsr1h,w,c
 26147  013008  6EDA               	movwf	fsr2h,c
 26148  01300A  0EFF               	movlw	255
 26149  01300C  22DA               	addwfc	fsr2h,f,c
 26150  01300E  0E08               	movlw	8
 26151  013010                     u6425:
 26152  013010  90D8               	bcf	status,0,c
 26153  013012  36DE               	rlcf	postinc2,f,c
 26154  013014  36DE               	rlcf	postinc2,f,c
 26155  013016  36DE               	rlcf	postinc2,f,c
 26156  013018  36DD               	rlcf	postdec2,f,c
 26157  01301A  52DD               	movf	postdec2,f,c
 26158  01301C  52DD               	movf	postdec2,f,c
 26159  01301E  2EE8               	decfsz	wreg,f,c
 26160  013020  D7F7               	goto	u6425
 26161                           
 26162                           ;stkvar	_b @ sp[(-13)+-4]
 26163  013022  0EEF               	movlw	-17
 26164  013024  006F FF8C  F00C    	movff	plusw1,btemp+11
 26165                           
 26166                           ;stkvar	_a @ sp[(-13)+-8]
 26167  01302A  0EEB               	movlw	-21
 26168  01302C  50E3               	movf	plusw1,w,c
 26169  01302E  020C               	mulwf	(btemp+11)^0,c
 26170                           
 26171                           ;stkvar	_temp @ sp[(-13)+8]
 26172  013030  0EFB               	movlw	-5
 26173  013032  006F FFCF FFE3     	movff	prodl,plusw1
 26174  013038  0EFC               	movlw	-4
 26175  01303A  006F FFD3 FFE3     	movff	prodh,plusw1
 26176                           
 26177                           ;stkvar	_temp @ sp[(-13)+8]
 26178  013040  0EFB               	movlw	-5
 26179  013042  006F FF8C  F00B    	movff	plusw1,btemp+10
 26180  013048  0EFC               	movlw	-4
 26181  01304A  006F FF8C  F00C    	movff	plusw1,btemp+11
 26182                           
 26183                           ;stkvar	_grs @ sp[(-13)+4]
 26184  013050  50E1               	movf	fsr1l,w,c
 26185  013052  0FF7               	addlw	-9
 26186  013054  6ED9               	movwf	fsr2l,c
 26187  013056  50E2               	movf	fsr1h,w,c
 26188  013058  6EDA               	movwf	fsr2h,c
 26189  01305A  0EFF               	movlw	255
 26190  01305C  22DA               	addwfc	fsr2h,f,c
 26191  01305E  500B               	movf	(btemp+10)^0,w,c
 26192  013060  26DE               	addwf	postinc2,f,c
 26193  013062  500C               	movf	(btemp+11)^0,w,c
 26194  013064  22DE               	addwfc	postinc2,f,c
 26195  013066  0E00               	movlw	0
 26196  013068  22DE               	addwfc	postinc2,f,c
 26197  01306A  22DE               	addwfc	postinc2,f,c
 26198                           
 26199                           ;stkvar	_b @ sp[(-13)+-4]
 26200  01306C  0EF0               	movlw	240
 26201  01306E  24E1               	addwf	fsr1l,w,c
 26202  013070  6ED9               	movwf	fsr2l,c
 26203  013072  0EFF               	movlw	255
 26204  013074  20E2               	addwfc	fsr1h,w,c
 26205  013076  6EDA               	movwf	fsr2h,c
 26206  013078  50DF               	movf	indf2,w,c
 26207  01307A  6E0C               	movwf	(btemp+11)^0,c
 26208                           
 26209                           ;stkvar	_a @ sp[(-13)+-8]
 26210  01307C  0EED               	movlw	237
 26211  01307E  24E1               	addwf	fsr1l,w,c
 26212  013080  6ED9               	movwf	fsr2l,c
 26213  013082  0EFF               	movlw	255
 26214  013084  20E2               	addwfc	fsr1h,w,c
 26215  013086  6EDA               	movwf	fsr2h,c
 26216  013088  50DF               	movf	indf2,w,c
 26217  01308A  020C               	mulwf	(btemp+11)^0,c
 26218                           
 26219                           ;stkvar	_temp @ sp[(-13)+8]
 26220  01308C  0EFB               	movlw	-5
 26221  01308E  006F FFCF FFE3     	movff	prodl,plusw1
 26222  013094  0EFC               	movlw	-4
 26223  013096  006F FFD3 FFE3     	movff	prodh,plusw1
 26224                           
 26225                           ;stkvar	_temp @ sp[(-13)+8]
 26226  01309C  0EFB               	movlw	-5
 26227  01309E  006F FF8C  F00B    	movff	plusw1,btemp+10
 26228  0130A4  0EFC               	movlw	-4
 26229  0130A6  006F FF8C  F00C    	movff	plusw1,btemp+11
 26230                           
 26231                           ;stkvar	_prod @ sp[(-13)+0]
 26232  0130AC  50E1               	movf	fsr1l,w,c
 26233  0130AE  0FF3               	addlw	-13
 26234  0130B0  6ED9               	movwf	fsr2l,c
 26235  0130B2  50E2               	movf	fsr1h,w,c
 26236  0130B4  6EDA               	movwf	fsr2h,c
 26237  0130B6  0EFF               	movlw	255
 26238  0130B8  22DA               	addwfc	fsr2h,f,c
 26239  0130BA  500B               	movf	(btemp+10)^0,w,c
 26240  0130BC  26DE               	addwf	postinc2,f,c
 26241  0130BE  500C               	movf	(btemp+11)^0,w,c
 26242  0130C0  22DE               	addwfc	postinc2,f,c
 26243  0130C2  0E00               	movlw	0
 26244  0130C4  22DE               	addwfc	postinc2,f,c
 26245  0130C6  22DE               	addwfc	postinc2,f,c
 26246                           
 26247                           ;stkvar	_b @ sp[(-13)+-4]
 26248  0130C8  0EF1               	movlw	241
 26249  0130CA  24E1               	addwf	fsr1l,w,c
 26250  0130CC  6ED9               	movwf	fsr2l,c
 26251  0130CE  0EFF               	movlw	255
 26252  0130D0  20E2               	addwfc	fsr1h,w,c
 26253  0130D2  6EDA               	movwf	fsr2h,c
 26254  0130D4  50DF               	movf	indf2,w,c
 26255  0130D6  6E0C               	movwf	(btemp+11)^0,c
 26256                           
 26257                           ;stkvar	_a @ sp[(-13)+-8]
 26258  0130D8  0EEC               	movlw	236
 26259  0130DA  24E1               	addwf	fsr1l,w,c
 26260  0130DC  6ED9               	movwf	fsr2l,c
 26261  0130DE  0EFF               	movlw	255
 26262  0130E0  20E2               	addwfc	fsr1h,w,c
 26263  0130E2  6EDA               	movwf	fsr2h,c
 26264  0130E4  50DF               	movf	indf2,w,c
 26265  0130E6  020C               	mulwf	(btemp+11)^0,c
 26266                           
 26267                           ;stkvar	_temp @ sp[(-13)+8]
 26268  0130E8  0EFB               	movlw	-5
 26269  0130EA  006F FFCF FFE3     	movff	prodl,plusw1
 26270  0130F0  0EFC               	movlw	-4
 26271  0130F2  006F FFD3 FFE3     	movff	prodh,plusw1
 26272                           
 26273                           ;stkvar	_temp @ sp[(-13)+8]
 26274  0130F8  0EFB               	movlw	-5
 26275  0130FA  006F FF8C  F00B    	movff	plusw1,btemp+10
 26276  013100  0EFC               	movlw	-4
 26277  013102  006F FF8C  F00C    	movff	plusw1,btemp+11
 26278                           
 26279                           ;stkvar	_prod @ sp[(-13)+0]
 26280  013108  50E1               	movf	fsr1l,w,c
 26281  01310A  0FF3               	addlw	-13
 26282  01310C  6ED9               	movwf	fsr2l,c
 26283  01310E  50E2               	movf	fsr1h,w,c
 26284  013110  6EDA               	movwf	fsr2h,c
 26285  013112  0EFF               	movlw	255
 26286  013114  22DA               	addwfc	fsr2h,f,c
 26287  013116  500B               	movf	(btemp+10)^0,w,c
 26288  013118  26DE               	addwf	postinc2,f,c
 26289  01311A  500C               	movf	(btemp+11)^0,w,c
 26290  01311C  22DE               	addwfc	postinc2,f,c
 26291  01311E  0E00               	movlw	0
 26292  013120  22DE               	addwfc	postinc2,f,c
 26293  013122  22DE               	addwfc	postinc2,f,c
 26294                           
 26295                           ;stkvar	_b @ sp[(-13)+-4]
 26296  013124  0EF1               	movlw	241
 26297  013126  24E1               	addwf	fsr1l,w,c
 26298  013128  6ED9               	movwf	fsr2l,c
 26299  01312A  0EFF               	movlw	255
 26300  01312C  20E2               	addwfc	fsr1h,w,c
 26301  01312E  6EDA               	movwf	fsr2h,c
 26302  013130  50DF               	movf	indf2,w,c
 26303  013132  6E0C               	movwf	(btemp+11)^0,c
 26304                           
 26305                           ;stkvar	_a @ sp[(-13)+-8]
 26306  013134  0EED               	movlw	237
 26307  013136  24E1               	addwf	fsr1l,w,c
 26308  013138  6ED9               	movwf	fsr2l,c
 26309  01313A  0EFF               	movlw	255
 26310  01313C  20E2               	addwfc	fsr1h,w,c
 26311  01313E  6EDA               	movwf	fsr2h,c
 26312  013140  50DF               	movf	indf2,w,c
 26313  013142  020C               	mulwf	(btemp+11)^0,c
 26314                           
 26315                           ;stkvar	_temp @ sp[(-13)+8]
 26316  013144  0EFB               	movlw	-5
 26317  013146  006F FFCF FFE3     	movff	prodl,plusw1
 26318  01314C  0EFC               	movlw	-4
 26319  01314E  006F FFD3 FFE3     	movff	prodh,plusw1
 26320                           
 26321                           ;stkvar	_temp @ sp[(-13)+8]
 26322  013154  0EFB               	movlw	-5
 26323  013156  006F FF8C  F00B    	movff	plusw1,btemp+10
 26324  01315C  0EFC               	movlw	-4
 26325  01315E  006F FF8C  F00C    	movff	plusw1,btemp+11
 26326  013164  500B               	movf	(btemp+10)^0,w,c
 26327  013166  6E05               	movwf	(btemp+4)^0,c
 26328  013168  500C               	movf	(btemp+11)^0,w,c
 26329  01316A  6E06               	movwf	(btemp+5)^0,c
 26330  01316C  6A07               	clrf	(btemp+6)^0,c
 26331  01316E  6A08               	clrf	(btemp+7)^0,c
 26332  013170  0060  F01C  F008   	movff	btemp+6,btemp+7
 26333  013176  0060  F018  F007   	movff	btemp+5,btemp+6
 26334  01317C  0060  F014  F006   	movff	btemp+4,btemp+5
 26335  013182  6A05               	clrf	(btemp+4)^0,c
 26336                           
 26337                           ;stkvar	_prod @ sp[(-13)+0]
 26338  013184  50E1               	movf	fsr1l,w,c
 26339  013186  0FF3               	addlw	-13
 26340  013188  6ED9               	movwf	fsr2l,c
 26341  01318A  50E2               	movf	fsr1h,w,c
 26342  01318C  6EDA               	movwf	fsr2h,c
 26343  01318E  0EFF               	movlw	255
 26344  013190  22DA               	addwfc	fsr2h,f,c
 26345  013192  5005               	movf	(btemp+4)^0,w,c
 26346  013194  26DE               	addwf	postinc2,f,c
 26347  013196  5006               	movf	(btemp+5)^0,w,c
 26348  013198  22DE               	addwfc	postinc2,f,c
 26349  01319A  5007               	movf	(btemp+6)^0,w,c
 26350  01319C  22DE               	addwfc	postinc2,f,c
 26351  01319E  5008               	movf	(btemp+7)^0,w,c
 26352  0131A0  22DE               	addwfc	postinc2,f,c
 26353                           
 26354                           ;stkvar	_prod @ sp[(-13)+0]
 26355  0131A2  50E1               	movf	fsr1l,w,c
 26356  0131A4  0FF3               	addlw	-13
 26357  0131A6  6ED9               	movwf	fsr2l,c
 26358  0131A8  50E2               	movf	fsr1h,w,c
 26359  0131AA  6EDA               	movwf	fsr2h,c
 26360  0131AC  0EFF               	movlw	255
 26361  0131AE  22DA               	addwfc	fsr2h,f,c
 26362                           
 26363                           ;stkvar	_grs @ sp[(-13)+4]
 26364  0131B0  0EFA               	movlw	250
 26365  0131B2  24E1               	addwf	fsr1l,w,c
 26366  0131B4  6EE9               	movwf	fsr0l,c
 26367  0131B6  0EFF               	movlw	255
 26368  0131B8  20E2               	addwfc	fsr1h,w,c
 26369  0131BA  6EEA               	movwf	fsr0h,c
 26370  0131BC  50EF               	movf	indf0,w,c
 26371  0131BE  26DE               	addwf	postinc2,f,c
 26372  0131C0  0E00               	movlw	0
 26373  0131C2  22DE               	addwfc	postinc2,f,c
 26374  0131C4  22DE               	addwfc	postinc2,f,c
 26375  0131C6  22DE               	addwfc	postinc2,f,c
 26376                           
 26377                           ;stkvar	_grs @ sp[(-13)+4]
 26378  0131C8  50E1               	movf	fsr1l,w,c
 26379  0131CA  0FF7               	addlw	-9
 26380  0131CC  6ED9               	movwf	fsr2l,c
 26381  0131CE  50E2               	movf	fsr1h,w,c
 26382  0131D0  6EDA               	movwf	fsr2h,c
 26383  0131D2  0EFF               	movlw	255
 26384  0131D4  22DA               	addwfc	fsr2h,f,c
 26385  0131D6  0E08               	movlw	8
 26386  0131D8                     u6435:
 26387  0131D8  90D8               	bcf	status,0,c
 26388  0131DA  36DE               	rlcf	postinc2,f,c
 26389  0131DC  36DE               	rlcf	postinc2,f,c
 26390  0131DE  36DE               	rlcf	postinc2,f,c
 26391  0131E0  36DD               	rlcf	postdec2,f,c
 26392  0131E2  52DD               	movf	postdec2,f,c
 26393  0131E4  52DD               	movf	postdec2,f,c
 26394  0131E6  2EE8               	decfsz	wreg,f,c
 26395  0131E8  D7F7               	goto	u6435
 26396  0131EA  0E82               	movlw	130
 26397  0131EC  6E0B               	movwf	(btemp+10)^0,c
 26398  0131EE  0EFF               	movlw	255
 26399  0131F0  6E0C               	movwf	(btemp+11)^0,c
 26400                           
 26401                           ;stkvar	_bexp @ sp[(-13)+10]
 26402  0131F2  0EFD               	movlw	-3
 26403  0131F4  50E3               	movf	plusw1,w,c
 26404  0131F6  6E09               	movwf	(btemp+8)^0,c
 26405  0131F8  6A0A               	clrf	(btemp+9)^0,c
 26406                           
 26407                           ;stkvar	_aexp @ sp[(-13)+11]
 26408  0131FA  0EFE               	movlw	-2
 26409  0131FC  50E3               	movf	plusw1,w,c
 26410  0131FE  2609               	addwf	(btemp+8)^0,f,c
 26411  013200  0E00               	movlw	0
 26412  013202  220A               	addwfc	(btemp+9)^0,f,c
 26413  013204  500B               	movf	(btemp+10)^0,w,c
 26414  013206  2609               	addwf	(btemp+8)^0,f,c
 26415  013208  500C               	movf	(btemp+11)^0,w,c
 26416  01320A  220A               	addwfc	(btemp+9)^0,f,c
 26417                           
 26418                           ;stkvar	_temp @ sp[(-13)+8]
 26419  01320C  0EFB               	movlw	-5
 26420  01320E  0060  F027  FFE3   	movff	btemp+8,plusw1
 26421  013214  0EFC               	movlw	-4
 26422  013216  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26423  01321C  D021               	goto	l7926
 26424  01321E                     l7916:
 26425                           
 26426                           ;stkvar	_prod @ sp[(-13)+0]
 26427  01321E  90D8               	bcf	status,0,c
 26428  013220  0EF3               	movlw	-13
 26429  013222  36E3               	rlcf	plusw1,f,c
 26430  013224  0EF4               	movlw	-12
 26431  013226  36E3               	rlcf	plusw1,f,c
 26432  013228  0EF5               	movlw	-11
 26433  01322A  36E3               	rlcf	plusw1,f,c
 26434  01322C  0EF6               	movlw	-10
 26435  01322E  36E3               	rlcf	plusw1,f,c
 26436                           
 26437                           ;stkvar	_grs @ sp[(-13)+4]
 26438  013230  0EFA               	movlw	-6
 26439  013232  AEE3               	btfss	plusw1,7,c
 26440  013234  D002               	goto	l7922
 26441                           
 26442                           ;stkvar	_prod @ sp[(-13)+0]
 26443  013236  0EF3               	movlw	-13
 26444  013238  80E3               	bsf	plusw1,0,c
 26445  01323A                     l7922:
 26446                           
 26447                           ;stkvar	_grs @ sp[(-13)+4]
 26448  01323A  90D8               	bcf	status,0,c
 26449  01323C  0EF7               	movlw	-9
 26450  01323E  36E3               	rlcf	plusw1,f,c
 26451  013240  0EF8               	movlw	-8
 26452  013242  36E3               	rlcf	plusw1,f,c
 26453  013244  0EF9               	movlw	-7
 26454  013246  36E3               	rlcf	plusw1,f,c
 26455  013248  0EFA               	movlw	-6
 26456  01324A  36E3               	rlcf	plusw1,f,c
 26457                           
 26458                           ;stkvar	_temp @ sp[(-13)+8]
 26459  01324C  50E1               	movf	fsr1l,w,c
 26460  01324E  0FFB               	addlw	-5
 26461  013250  6ED9               	movwf	fsr2l,c
 26462  013252  50E2               	movf	fsr1h,w,c
 26463  013254  6EDA               	movwf	fsr2h,c
 26464  013256  0EFF               	movlw	255
 26465  013258  22DA               	addwfc	fsr2h,f,c
 26466  01325A  06DE               	decf	postinc2,f,c
 26467  01325C  0E00               	movlw	0
 26468  01325E  5ADD               	subwfb	postdec2,f,c
 26469  013260                     l7926:
 26470                           
 26471                           ;stkvar	_prod @ sp[(-13)+0]
 26472  013260  0EF5               	movlw	-11
 26473  013262  AEE3               	btfss	plusw1,7,c
 26474  013264  D7DC               	goto	l7916
 26475                           
 26476                           ;stkvar	_aexp @ sp[(-13)+11]
 26477  013266  0EFE               	movlw	-2
 26478  013268  6AE3               	clrf	plusw1,c
 26479                           
 26480                           ;stkvar	_grs @ sp[(-13)+4]
 26481  01326A  0EFA               	movlw	-6
 26482  01326C  AEE3               	btfss	plusw1,7,c
 26483  01326E  D020               	goto	l7940
 26484                           
 26485                           ;stkvar	_grs @ sp[(-13)+4]
 26486  013270  50E1               	movf	fsr1l,w,c
 26487  013272  0FF7               	addlw	-9
 26488  013274  6ED9               	movwf	fsr2l,c
 26489  013276  50E2               	movf	fsr1h,w,c
 26490  013278  6EDA               	movwf	fsr2h,c
 26491  01327A  0EFF               	movlw	255
 26492  01327C  22DA               	addwfc	fsr2h,f,c
 26493  01327E  0EFF               	movlw	255
 26494  013280  14DE               	andwf	postinc2,w,c
 26495  013282  6E09               	movwf	(btemp+8)^0,c
 26496  013284  0EFF               	movlw	255
 26497  013286  14DE               	andwf	postinc2,w,c
 26498  013288  6E0A               	movwf	(btemp+9)^0,c
 26499  01328A  0EFF               	movlw	255
 26500  01328C  14DE               	andwf	postinc2,w,c
 26501  01328E  6E0B               	movwf	(btemp+10)^0,c
 26502  013290  0E7F               	movlw	127
 26503  013292  14DE               	andwf	postinc2,w,c
 26504  013294  6E0C               	movwf	(btemp+11)^0,c
 26505  013296  5009               	movf	(btemp+8)^0,w,c
 26506  013298  100A               	iorwf	(btemp+9)^0,w,c
 26507  01329A  100B               	iorwf	(btemp+10)^0,w,c
 26508  01329C  100C               	iorwf	(btemp+11)^0,w,c
 26509  01329E  B4D8               	btfsc	status,2,c
 26510  0132A0  D004               	goto	l7936
 26511  0132A2                     u6470:
 26512                           
 26513                           ;stkvar	_aexp @ sp[(-13)+11]
 26514  0132A2  0EFE               	movlw	-2
 26515  0132A4  6AE3               	clrf	plusw1,c
 26516  0132A6  2AE3               	incf	plusw1,f,c
 26517  0132A8  D003               	goto	l7940
 26518  0132AA                     l7936:
 26519                           
 26520                           ;stkvar	_prod @ sp[(-13)+0]
 26521  0132AA  0EF3               	movlw	-13
 26522  0132AC  B0E3               	btfsc	plusw1,0,c
 26523  0132AE  D7F9               	goto	u6470
 26524  0132B0                     l7940:
 26525                           
 26526                           ;stkvar	_aexp @ sp[(-13)+11]
 26527  0132B0  0EFE               	movlw	-2
 26528  0132B2  50E3               	movf	plusw1,w,c
 26529  0132B4  B4D8               	btfsc	status,2,c
 26530  0132B6  D036               	goto	l7950
 26531                           
 26532                           ;stkvar	_prod @ sp[(-13)+0]
 26533  0132B8  50E1               	movf	fsr1l,w,c
 26534  0132BA  0FF3               	addlw	-13
 26535  0132BC  6ED9               	movwf	fsr2l,c
 26536  0132BE  50E2               	movf	fsr1h,w,c
 26537  0132C0  6EDA               	movwf	fsr2h,c
 26538  0132C2  0EFF               	movlw	255
 26539  0132C4  22DA               	addwfc	fsr2h,f,c
 26540  0132C6  2ADE               	incf	postinc2,f,c
 26541  0132C8  0E00               	movlw	0
 26542  0132CA  22DE               	addwfc	postinc2,f,c
 26543  0132CC  22DE               	addwfc	postinc2,f,c
 26544  0132CE  22DE               	addwfc	postinc2,f,c
 26545                           
 26546                           ;stkvar	_prod @ sp[(-13)+0]
 26547  0132D0  0EF6               	movlw	-10
 26548  0132D2  A0E3               	btfss	plusw1,0,c
 26549  0132D4  D027               	goto	l7950
 26550  0132D6  0E01               	movlw	1
 26551  0132D8  6E0C               	movwf	(btemp+11)^0,c
 26552                           
 26553                           ;stkvar	_prod @ sp[(-13)+0]
 26554  0132DA  50E1               	movf	fsr1l,w,c
 26555  0132DC  0FF3               	addlw	-13
 26556  0132DE  6ED9               	movwf	fsr2l,c
 26557  0132E0  50E2               	movf	fsr1h,w,c
 26558  0132E2  6EDA               	movwf	fsr2h,c
 26559  0132E4  0EFF               	movlw	255
 26560  0132E6  22DA               	addwfc	fsr2h,f,c
 26561  0132E8  280C               	incf	(btemp+11)^0,w,c
 26562  0132EA  52DE               	movf	postinc2,f,c
 26563  0132EC  D008               	goto	u6510
 26564  0132EE                     u6515:
 26565  0132EE  52DE               	movf	postinc2,f,c
 26566  0132F0  90D8               	bcf	status,0,c
 26567  0132F2  BEDC               	btfsc	preinc2,7,c
 26568  0132F4  80D8               	bsf	status,0,c
 26569  0132F6  32DD               	rrcf	postdec2,f,c
 26570  0132F8  32DD               	rrcf	postdec2,f,c
 26571  0132FA  32DD               	rrcf	postdec2,f,c
 26572  0132FC  32DE               	rrcf	postinc2,f,c
 26573  0132FE                     u6510:
 26574  0132FE  2EE8               	decfsz	wreg,f,c
 26575  013300  D7F6               	goto	u6515
 26576                           
 26577                           ;stkvar	_temp @ sp[(-13)+8]
 26578  013302  0EFB               	movlw	-5
 26579  013304  50E3               	movf	plusw1,w,c
 26580  013306  0F01               	addlw	1
 26581  013308  6E01               	movwf	btemp^0,c
 26582  01330A  0EFB               	movlw	-5
 26583  01330C  0060  F007  FFE3   	movff	btemp,plusw1
 26584  013312  6A01               	clrf	btemp^0,c
 26585  013314  0EFC               	movlw	-4
 26586  013316  50E3               	movf	plusw1,w,c
 26587  013318  2001               	addwfc	btemp^0,w,c
 26588  01331A  6E01               	movwf	btemp^0,c
 26589  01331C  0EFC               	movlw	-4
 26590  01331E  0060  F007  FFE3   	movff	btemp,plusw1
 26591  013324                     l7950:
 26592                           
 26593                           ;stkvar	_temp @ sp[(-13)+8]
 26594  013324  0EFC               	movlw	-4
 26595  013326  BEE3               	btfsc	plusw1,7,c
 26596  013328  D020               	goto	l7954
 26597  01332A  0EFC               	movlw	-4
 26598  01332C  50E3               	movf	plusw1,w,c
 26599  01332E  E104               	bnz	u6520
 26600  013330  0EFB               	movlw	-5
 26601  013332  28E3               	incf	plusw1,w,c
 26602  013334  A0D8               	btfss	status,0,c
 26603  013336  D019               	goto	l7954
 26604  013338                     u6520:
 26605  013338  0E00               	movlw	0
 26606  01333A  6E09               	movwf	(btemp+8)^0,c
 26607  01333C  0E00               	movlw	0
 26608  01333E  6E0A               	movwf	(btemp+9)^0,c
 26609  013340  0E80               	movlw	128
 26610  013342  6E0B               	movwf	(btemp+10)^0,c
 26611  013344  0E7F               	movlw	127
 26612  013346  6E0C               	movwf	(btemp+11)^0,c
 26613                           
 26614                           ;stkvar	_prod @ sp[(-13)+0]
 26615  013348  0EF3               	movlw	-13
 26616  01334A  0060  F027  FFE3   	movff	btemp+8,plusw1
 26617  013350  0EF4               	movlw	-12
 26618  013352  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26619  013358  0EF5               	movlw	-11
 26620  01335A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26621  013360  0EF6               	movlw	-10
 26622  013362  0060  F033  FFE3   	movff	btemp+11,plusw1
 26623  013368  D044               	goto	l7970
 26624  01336A                     l7954:
 26625                           
 26626                           ;stkvar	_temp @ sp[(-13)+8]
 26627  01336A  0EFC               	movlw	-4
 26628  01336C  BEE3               	btfsc	plusw1,7,c
 26629  01336E  D007               	goto	u6530
 26630  013370  0EFC               	movlw	-4
 26631  013372  50E3               	movf	plusw1,w,c
 26632  013374  E10F               	bnz	l7960
 26633  013376  0EFB               	movlw	-5
 26634  013378  04E3               	decf	plusw1,w,c
 26635  01337A  B0D8               	btfsc	status,0,c
 26636  01337C  D00B               	goto	l7960
 26637  01337E                     u6530:
 26638                           
 26639                           ;stkvar	_prod @ sp[(-13)+0]
 26640  01337E  0EF3               	movlw	-13
 26641  013380  6AE3               	clrf	plusw1,c
 26642  013382  0EF4               	movlw	-12
 26643  013384  6AE3               	clrf	plusw1,c
 26644  013386  0EF5               	movlw	-11
 26645  013388  6AE3               	clrf	plusw1,c
 26646  01338A  0EF6               	movlw	-10
 26647  01338C  6AE3               	clrf	plusw1,c
 26648                           
 26649                           ;stkvar	_sign @ sp[(-13)+12]
 26650  01338E  0EFF               	movlw	-1
 26651  013390  6AE3               	clrf	plusw1,c
 26652  013392  D02F               	goto	l7970
 26653  013394                     l7960:
 26654                           
 26655                           ;stkvar	_temp @ sp[(-13)+8]
 26656                           ;stkvar	_bexp @ sp[(-13)+10]
 26657  013394  0EFB               	movlw	-5
 26658  013396  006F FF8C  F001    	movff	plusw1,btemp
 26659  01339C  0EFD               	movlw	-3
 26660  01339E  0060  F007  FFE3   	movff	btemp,plusw1
 26661                           
 26662                           ;stkvar	_prod @ sp[(-13)+0]
 26663  0133A4  50E1               	movf	fsr1l,w,c
 26664  0133A6  0FF3               	addlw	-13
 26665  0133A8  6ED9               	movwf	fsr2l,c
 26666  0133AA  50E2               	movf	fsr1h,w,c
 26667  0133AC  6EDA               	movwf	fsr2h,c
 26668  0133AE  0EFF               	movlw	255
 26669  0133B0  22DA               	addwfc	fsr2h,f,c
 26670  0133B2  0EFF               	movlw	255
 26671  0133B4  16DE               	andwf	postinc2,f,c
 26672  0133B6  0EFF               	movlw	255
 26673  0133B8  16DE               	andwf	postinc2,f,c
 26674  0133BA  0E7F               	movlw	127
 26675  0133BC  16DE               	andwf	postinc2,f,c
 26676  0133BE  0E00               	movlw	0
 26677  0133C0  16DE               	andwf	postinc2,f,c
 26678                           
 26679                           ;stkvar	_bexp @ sp[(-13)+10]
 26680  0133C2  0EFD               	movlw	-3
 26681  0133C4  A0E3               	btfss	plusw1,0,c
 26682  0133C6  D008               	goto	l7968
 26683                           
 26684                           ;stkvar	_prod @ sp[(-13)+0]
 26685  0133C8  0EF5               	movlw	245
 26686  0133CA  24E1               	addwf	fsr1l,w,c
 26687  0133CC  6ED9               	movwf	fsr2l,c
 26688  0133CE  0EFF               	movlw	255
 26689  0133D0  20E2               	addwfc	fsr1h,w,c
 26690  0133D2  6EDA               	movwf	fsr2h,c
 26691  0133D4  0E00               	movlw	0
 26692  0133D6  8EDB               	bsf	plusw2,7,c
 26693  0133D8                     l7968:
 26694                           
 26695                           ;stkvar	_prod @ sp[(-13)+0]
 26696  0133D8  0EF6               	movlw	246
 26697  0133DA  24E1               	addwf	fsr1l,w,c
 26698  0133DC  6ED9               	movwf	fsr2l,c
 26699  0133DE  0EFF               	movlw	255
 26700  0133E0  20E2               	addwfc	fsr1h,w,c
 26701  0133E2  6EDA               	movwf	fsr2h,c
 26702                           
 26703                           ;stkvar	_bexp @ sp[(-13)+10]
 26704  0133E4  0EFD               	movlw	-3
 26705  0133E6  006F FF8C  F00C    	movff	plusw1,btemp+11
 26706  0133EC  90D8               	bcf	status,0,c
 26707  0133EE  300C               	rrcf	(btemp+11)^0,w,c
 26708  0133F0  6EDF               	movwf	indf2,c
 26709  0133F2                     l7970:
 26710                           
 26711                           ;stkvar	_sign @ sp[(-13)+12]
 26712  0133F2  0EFF               	movlw	-1
 26713  0133F4  006F FF8C  F00C    	movff	plusw1,btemp+11
 26714                           
 26715                           ;stkvar	_prod @ sp[(-13)+0]
 26716  0133FA  0EF6               	movlw	246
 26717  0133FC  24E1               	addwf	fsr1l,w,c
 26718  0133FE  6ED9               	movwf	fsr2l,c
 26719  013400  0EFF               	movlw	255
 26720  013402  20E2               	addwfc	fsr1h,w,c
 26721  013404  6EDA               	movwf	fsr2h,c
 26722  013406  500C               	movf	(btemp+11)^0,w,c
 26723  013408  12DF               	iorwf	indf2,f,c
 26724                           
 26725                           ;stkvar	_prod @ sp[(-13)+0]
 26726  01340A  0EF3               	movlw	-13
 26727  01340C  006F FF8C  F001    	movff	plusw1,btemp
 26728  013412  0EF4               	movlw	-12
 26729  013414  006F FF8C  F002    	movff	plusw1,btemp+1
 26730  01341A  0EF5               	movlw	-11
 26731  01341C  006F FF8C  F003    	movff	plusw1,btemp+2
 26732  013422  0EF6               	movlw	-10
 26733  013424  006F FF8C  F004    	movff	plusw1,btemp+3
 26734  01342A                     l2935:
 26735                           
 26736                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 26737  01342A  0EEB               	movlw	235
 26738  01342C  26E1               	addwf	fsr1l,f,c
 26739  01342E  0EFF               	movlw	255
 26740  013430  22E2               	addwfc	fsr1h,f,c
 26741  013432  0012               	return		;funcret
 26742  013434                     __end_of___flmul:
 26743                           	opt callstack 0
 26744                           
 26745 ;; *************** function _SYSTEM_Initialize *****************
 26746 ;; Defined at:
 26747 ;;		line 50 in file "mcc_generated_files/mcc.c"
 26748 ;; Parameters:    Size  Location     Type
 26749 ;;		None
 26750 ;; Auto vars:     Size  Location     Type
 26751 ;;		None
 26752 ;; Return value:  Size  Location     Type
 26753 ;;                  1  [STACK] void 
 26754 ;; Registers used:
 26755 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 26756 ;; Tracked objects:
 26757 ;;		On entry : 0/0
 26758 ;;		On exit  : 3F/3C
 26759 ;;		Unchanged: 0/0
 26760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26765 ;;Total ram usage:        0 bytes
 26766 ;; Hardware stack levels used:    1
 26767 ;; Hardware stack levels required when called:   17
 26768 ;; This function calls:
 26769 ;;		_ADCC_Initialize
 26770 ;;		_CLKREF_Initialize
 26771 ;;		_DMA1_Initialize
 26772 ;;		_DMA2_Initialize
 26773 ;;		_EXT_INT_Initialize
 26774 ;;		_FVR_Initialize
 26775 ;;		_INTERRUPT_Initialize
 26776 ;;		_OSCILLATOR_Initialize
 26777 ;;		_PIN_MANAGER_Initialize
 26778 ;;		_PMD_Initialize
 26779 ;;		_PWM8_Initialize
 26780 ;;		_SPI1_Initialize
 26781 ;;		_TMR2_Initialize
 26782 ;;		_TMR3_Initialize
 26783 ;;		_TMR5_Initialize
 26784 ;;		_TMR6_Initialize
 26785 ;;		_UART1_Initialize
 26786 ;;		_UART2_Initialize
 26787 ;; This function is called by:
 26788 ;;		_main
 26789 ;; This function uses a reentrant model
 26790 ;;
 26791                           
 26792                           	psect	text104
 26793  019F2E                     __ptext104:
 26794                           	opt callstack 0
 26795  019F2E                     _SYSTEM_Initialize:
 26796                           	opt callstack 13
 26797                           
 26798                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 26799                           
 26800                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26801                           ;incstack = 0
 26802  019F2E  EC77  F0CD         	call	_INTERRUPT_Initialize	;wreg free
 26803                           
 26804                           ; BSR set to: 57
 26805                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 26806  019F32  ECAA  F0D5         	call	_PMD_Initialize	;wreg free
 26807                           
 26808                           ; BSR set to: 57
 26809                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 26810  019F36  EC3F  F0CB         	call	_PIN_MANAGER_Initialize	;wreg free
 26811                           
 26812                           ; BSR set to: 58
 26813                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 26814  019F3A  EC9F  F0D5         	call	_OSCILLATOR_Initialize	;wreg free
 26815                           
 26816                           ; BSR set to: 57
 26817                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 26818  019F3E  EC1F  F0D6         	call	_FVR_Initialize	;wreg free
 26819                           
 26820                           ; BSR set to: 62
 26821                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 26822  019F42  EC0C  F0CD         	call	_ADCC_Initialize	;wreg free
 26823                           
 26824                           ;mcc_generated_files/mcc.c: 58:     PWM8_Initialize();
 26825  019F46  EC94  F0D5         	call	_PWM8_Initialize	;wreg free
 26826                           
 26827                           ; BSR set to: 63
 26828                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 26829  019F4A  EC7D  F0D5         	call	_TMR2_Initialize	;wreg free
 26830                           
 26831                           ; BSR set to: 57
 26832                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 26833  019F4E  ECF8  F0D1         	call	_EXT_INT_Initialize	;wreg free
 26834                           
 26835                           ; BSR set to: 57
 26836                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 26837  019F52  ECE6  F0D2         	call	_TMR6_Initialize	;wreg free
 26838                           
 26839                           ;mcc_generated_files/mcc.c: 62:     TMR3_Initialize();
 26840  019F56  EC6C  F0D0         	call	_TMR3_Initialize	;wreg free
 26841                           
 26842                           ;mcc_generated_files/mcc.c: 63:     TMR5_Initialize();
 26843  019F5A  EC49  F0D0         	call	_TMR5_Initialize	;wreg free
 26844                           
 26845                           ;mcc_generated_files/mcc.c: 64:     UART1_Initialize();
 26846  019F5E  EC26  F0D0         	call	_UART1_Initialize	;wreg free
 26847                           
 26848                           ; BSR set to: 57
 26849                           ;mcc_generated_files/mcc.c: 65:     UART2_Initialize();
 26850  019F62  EC3E  F0CE         	call	_UART2_Initialize	;wreg free
 26851                           
 26852                           ; BSR set to: 57
 26853                           ;mcc_generated_files/mcc.c: 66:     SPI1_Initialize();
 26854  019F66  EC89  F0D5         	call	_SPI1_Initialize	;wreg free
 26855                           
 26856                           ; BSR set to: 61
 26857                           ;mcc_generated_files/mcc.c: 67:     DMA2_Initialize();
 26858  019F6A  EC9A  F0CE         	call	_DMA2_Initialize	;wreg free
 26859                           
 26860                           ; BSR set to: 59
 26861                           ;mcc_generated_files/mcc.c: 68:     DMA1_Initialize();
 26862  019F6E  ECD7  F0CC         	call	_DMA1_Initialize	;wreg free
 26863                           
 26864                           ; BSR set to: 59
 26865                           ;mcc_generated_files/mcc.c: 69:     CLKREF_Initialize();
 26866  019F72  ECF3  F0D5         	call	_CLKREF_Initialize	;wreg free
 26867                           
 26868                           ; BSR set to: 60
 26869                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 26870  019F76  0012               	return		;funcret
 26871  019F78                     __end_of_SYSTEM_Initialize:
 26872                           	opt callstack 0
 26873                           
 26874 ;; *************** function _UART2_Initialize *****************
 26875 ;; Defined at:
 26876 ;;		line 78 in file "mcc_generated_files/uart2.c"
 26877 ;; Parameters:    Size  Location     Type
 26878 ;;		None
 26879 ;; Auto vars:     Size  Location     Type
 26880 ;;		None
 26881 ;; Return value:  Size  Location     Type
 26882 ;;                  1  [STACK] void 
 26883 ;; Registers used:
 26884 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 26885 ;; Tracked objects:
 26886 ;;		On entry : 3F/39
 26887 ;;		On exit  : 3F/39
 26888 ;;		Unchanged: 0/0
 26889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26894 ;;Total ram usage:        0 bytes
 26895 ;; Hardware stack levels used:    1
 26896 ;; Hardware stack levels required when called:   16
 26897 ;; This function calls:
 26898 ;;		_UART2_SetRxInterruptHandler
 26899 ;;		_UART2_SetTxInterruptHandler
 26900 ;; This function is called by:
 26901 ;;		_SYSTEM_Initialize
 26902 ;; This function uses a reentrant model
 26903 ;;
 26904                           
 26905                           	psect	text105
 26906  019C7C                     __ptext105:
 26907                           	opt callstack 0
 26908  019C7C                     _UART2_Initialize:
 26909                           	opt callstack 13
 26910                           
 26911                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 26912                           
 26913                           ; BSR set to: 60
 26914                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26915                           ;incstack = 0
 26916  019C7C  0139               	movlb	57	; () banked
 26917  019C7E  9596               	bcf	150,2,b	;volatile
 26918                           
 26919                           ; BSR set to: 57
 26920                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 26921  019C80  0E56               	movlw	low _UART2_Receive_ISR
 26922  019C82  6EE6               	movwf	postinc1,c
 26923  019C84  0EAA               	movlw	high _UART2_Receive_ISR
 26924  019C86  6EE6               	movwf	postinc1,c
 26925  019C88  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 26926  019C8A  6EE6               	movwf	postinc1,c
 26927  019C8C  EC5F  F0D3         	call	_UART2_SetRxInterruptHandler	;wreg free
 26928                           
 26929                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 26930  019C90  0139               	movlb	57	; () banked
 26931  019C92  9796               	bcf	150,3,b	;volatile
 26932                           
 26933                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 26934  019C94  0EA0               	movlw	low _UART2_Transmit_ISR
 26935  019C96  6EE6               	movwf	postinc1,c
 26936  019C98  0EA5               	movlw	high _UART2_Transmit_ISR
 26937  019C9A  6EE6               	movwf	postinc1,c
 26938  019C9C  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 26939  019C9E  6EE6               	movwf	postinc1,c
 26940  019CA0  EC4B  F0D3         	call	_UART2_SetTxInterruptHandler	;wreg free
 26941                           
 26942                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 26943  019CA4  013D               	movlb	61	; () banked
 26944  019CA6  6BD4               	clrf	212,b	;volatile
 26945                           
 26946                           ; BSR set to: 61
 26947                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 26948  019CA8  6BD6               	clrf	214,b	;volatile
 26949                           
 26950                           ; BSR set to: 61
 26951                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 26952  019CAA  6BD8               	clrf	216,b	;volatile
 26953                           
 26954                           ; BSR set to: 61
 26955                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 26956  019CAC  0EB0               	movlw	176
 26957  019CAE  6FDA               	movwf	218,b	;volatile
 26958                           
 26959                           ; BSR set to: 61
 26960                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 26961  019CB0  0E80               	movlw	128
 26962  019CB2  6FDB               	movwf	219,b	;volatile
 26963                           
 26964                           ; BSR set to: 61
 26965                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 26966  019CB4  6BDC               	clrf	220,b	;volatile
 26967                           
 26968                           ; BSR set to: 61
 26969                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 26970  019CB6  0E82               	movlw	130
 26971  019CB8  6FDD               	movwf	221,b	;volatile
 26972                           
 26973                           ; BSR set to: 61
 26974                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 26975  019CBA  0E06               	movlw	6
 26976  019CBC  6FDE               	movwf	222,b	;volatile
 26977                           
 26978                           ; BSR set to: 61
 26979                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 26980  019CBE  6BDF               	clrf	223,b	;volatile
 26981                           
 26982                           ; BSR set to: 61
 26983                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 26984  019CC0  6BE0               	clrf	224,b	;volatile
 26985                           
 26986                           ; BSR set to: 61
 26987                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 26988  019CC2  6BE1               	clrf	225,b	;volatile
 26989                           
 26990                           ; BSR set to: 61
 26991                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 26992  019CC4  6BE2               	clrf	226,b	;volatile
 26993                           
 26994                           ; BSR set to: 61
 26995                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 26996  019CC6  6A34               	clrf	_uart2TxHead^0,c	;volatile
 26997                           
 26998                           ; BSR set to: 61
 26999                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 27000  019CC8  6A33               	clrf	_uart2TxTail^0,c	;volatile
 27001                           
 27002                           ; BSR set to: 61
 27003                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 27004  019CCA  0E40               	movlw	64
 27005  019CCC  6E32               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 27006                           
 27007                           ; BSR set to: 61
 27008                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 27009  019CCE  6A31               	clrf	_uart2RxHead^0,c	;volatile
 27010                           
 27011                           ; BSR set to: 61
 27012                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 27013  019CD0  6A30               	clrf	_uart2RxTail^0,c	;volatile
 27014                           
 27015                           ; BSR set to: 61
 27016                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 27017  019CD2  6A2F               	clrf	_uart2RxCount^0,c	;volatile
 27018                           
 27019                           ; BSR set to: 61
 27020                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 27021  019CD4  0139               	movlb	57	; () banked
 27022  019CD6  8596               	bsf	150,2,b	;volatile
 27023                           
 27024                           ; BSR set to: 57
 27025                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 27026  019CD8  0012               	return		;funcret
 27027  019CDA                     __end_of_UART2_Initialize:
 27028                           	opt callstack 0
 27029                           
 27030 ;; *************** function _UART2_SetTxInterruptHandler *****************
 27031 ;; Defined at:
 27032 ;;		line 252 in file "mcc_generated_files/uart2.c"
 27033 ;; Parameters:    Size  Location     Type
 27034 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 27035 ;;		 -> UART2_Transmit_ISR(1), 
 27036 ;; Auto vars:     Size  Location     Type
 27037 ;;		None
 27038 ;; Return value:  Size  Location     Type
 27039 ;;                  1  [STACK] void 
 27040 ;; Registers used:
 27041 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 27042 ;; Tracked objects:
 27043 ;;		On entry : 3F/39
 27044 ;;		On exit  : 0/0
 27045 ;;		Unchanged: 0/0
 27046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27051 ;;Total ram usage:        0 bytes
 27052 ;; Hardware stack levels used:    1
 27053 ;; Hardware stack levels required when called:   15
 27054 ;; This function calls:
 27055 ;;		Nothing
 27056 ;; This function is called by:
 27057 ;;		_UART2_Initialize
 27058 ;; This function uses a reentrant model
 27059 ;;
 27060                           
 27061                           	psect	text106
 27062  01A696                     __ptext106:
 27063                           	opt callstack 0
 27064  01A696                     _UART2_SetTxInterruptHandler:
 27065                           	opt callstack 13
 27066                           
 27067                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 27068                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 27069                           
 27070                           ; BSR set to: 57
 27071                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27072                           ;incstack = 0
 27073  01A696  50E1               	movf	fsr1l,w,c
 27074  01A698  0FFD               	addlw	-3
 27075  01A69A  6ED9               	movwf	fsr2l,c
 27076  01A69C  50E2               	movf	fsr1h,w,c
 27077  01A69E  6EDA               	movwf	fsr2h,c
 27078  01A6A0  0EFF               	movlw	255
 27079  01A6A2  22DA               	addwfc	fsr2h,f,c
 27080  01A6A4  006F FF78  F0AE    	movff	postinc2,_UART2_TxInterruptHandler
 27081  01A6AA  006F FF78  F0AF    	movff	postinc2,_UART2_TxInterruptHandler+1
 27082  01A6B0  006F FF74  F0B0    	movff	postdec2,_UART2_TxInterruptHandler+2
 27083                           
 27084                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 27085  01A6B6  52E5               	movf	postdec1,f,c
 27086  01A6B8  52E5               	movf	postdec1,f,c
 27087  01A6BA  52E5               	movf	postdec1,f,c
 27088  01A6BC  0012               	return		;funcret
 27089  01A6BE                     __end_of_UART2_SetTxInterruptHandler:
 27090                           	opt callstack 0
 27091                           
 27092 ;; *************** function _UART2_SetRxInterruptHandler *****************
 27093 ;; Defined at:
 27094 ;;		line 248 in file "mcc_generated_files/uart2.c"
 27095 ;; Parameters:    Size  Location     Type
 27096 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 27097 ;;		 -> UART2_Receive_ISR(1), 
 27098 ;; Auto vars:     Size  Location     Type
 27099 ;;		None
 27100 ;; Return value:  Size  Location     Type
 27101 ;;                  1  [STACK] void 
 27102 ;; Registers used:
 27103 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 27104 ;; Tracked objects:
 27105 ;;		On entry : 3F/39
 27106 ;;		On exit  : 0/0
 27107 ;;		Unchanged: 0/0
 27108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27113 ;;Total ram usage:        0 bytes
 27114 ;; Hardware stack levels used:    1
 27115 ;; Hardware stack levels required when called:   15
 27116 ;; This function calls:
 27117 ;;		Nothing
 27118 ;; This function is called by:
 27119 ;;		_UART2_Initialize
 27120 ;; This function uses a reentrant model
 27121 ;;
 27122                           
 27123                           	psect	text107
 27124  01A6BE                     __ptext107:
 27125                           	opt callstack 0
 27126  01A6BE                     _UART2_SetRxInterruptHandler:
 27127                           	opt callstack 13
 27128                           
 27129                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 27130                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 27131                           
 27132                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27133                           ;incstack = 0
 27134  01A6BE  50E1               	movf	fsr1l,w,c
 27135  01A6C0  0FFD               	addlw	-3
 27136  01A6C2  6ED9               	movwf	fsr2l,c
 27137  01A6C4  50E2               	movf	fsr1h,w,c
 27138  01A6C6  6EDA               	movwf	fsr2h,c
 27139  01A6C8  0EFF               	movlw	255
 27140  01A6CA  22DA               	addwfc	fsr2h,f,c
 27141  01A6CC  006F FF78  F0B1    	movff	postinc2,_UART2_RxInterruptHandler
 27142  01A6D2  006F FF78  F0B2    	movff	postinc2,_UART2_RxInterruptHandler+1
 27143  01A6D8  006F FF74  F0B3    	movff	postdec2,_UART2_RxInterruptHandler+2
 27144                           
 27145                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 27146  01A6DE  52E5               	movf	postdec1,f,c
 27147  01A6E0  52E5               	movf	postdec1,f,c
 27148  01A6E2  52E5               	movf	postdec1,f,c
 27149  01A6E4  0012               	return		;funcret
 27150  01A6E6                     __end_of_UART2_SetRxInterruptHandler:
 27151                           	opt callstack 0
 27152                           
 27153 ;; *************** function _UART1_Initialize *****************
 27154 ;; Defined at:
 27155 ;;		line 75 in file "mcc_generated_files/uart1.c"
 27156 ;; Parameters:    Size  Location     Type
 27157 ;;		None
 27158 ;; Auto vars:     Size  Location     Type
 27159 ;;		None
 27160 ;; Return value:  Size  Location     Type
 27161 ;;                  1  [STACK] void 
 27162 ;; Registers used:
 27163 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 27164 ;; Tracked objects:
 27165 ;;		On entry : 0/39
 27166 ;;		On exit  : 3F/39
 27167 ;;		Unchanged: 0/0
 27168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27173 ;;Total ram usage:        0 bytes
 27174 ;; Hardware stack levels used:    1
 27175 ;; Hardware stack levels required when called:   16
 27176 ;; This function calls:
 27177 ;;		_UART1_SetRxInterruptHandler
 27178 ;; This function is called by:
 27179 ;;		_SYSTEM_Initialize
 27180 ;; This function uses a reentrant model
 27181 ;;
 27182                           
 27183                           	psect	text108
 27184  01A04C                     __ptext108:
 27185                           	opt callstack 0
 27186  01A04C                     _UART1_Initialize:
 27187                           	opt callstack 13
 27188                           
 27189                           ;mcc_generated_files/uart1.c: 78:  PIE3bits.U1RXIE = 0;
 27190                           
 27191                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27192                           ;incstack = 0
 27193  01A04C  0139               	movlb	57	; () banked
 27194  01A04E  9793               	bcf	147,3,b	;volatile
 27195                           
 27196                           ; BSR set to: 57
 27197                           ;mcc_generated_files/uart1.c: 79:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 27198  01A050  0E90               	movlw	low _UART1_Receive_ISR
 27199  01A052  6EE6               	movwf	postinc1,c
 27200  01A054  0EAA               	movlw	high _UART1_Receive_ISR
 27201  01A056  6EE6               	movwf	postinc1,c
 27202  01A058  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 27203  01A05A  6EE6               	movwf	postinc1,c
 27204  01A05C  EC73  F0D3         	call	_UART1_SetRxInterruptHandler	;wreg free
 27205                           
 27206                           ;mcc_generated_files/uart1.c: 84:  U1P1L = 0x00;
 27207  01A060  013D               	movlb	61	; () banked
 27208  01A062  6BEC               	clrf	236,b	;volatile
 27209                           
 27210                           ; BSR set to: 61
 27211                           ;mcc_generated_files/uart1.c: 87:  U1P1H = 0x00;
 27212  01A064  6BED               	clrf	237,b	;volatile
 27213                           
 27214                           ; BSR set to: 61
 27215                           ;mcc_generated_files/uart1.c: 90:  U1P2L = 0x00;
 27216  01A066  6BEE               	clrf	238,b	;volatile
 27217                           
 27218                           ; BSR set to: 61
 27219                           ;mcc_generated_files/uart1.c: 93:  U1P2H = 0x00;
 27220  01A068  6BEF               	clrf	239,b	;volatile
 27221                           
 27222                           ; BSR set to: 61
 27223                           ;mcc_generated_files/uart1.c: 96:  U1P3L = 0x00;
 27224  01A06A  6BF0               	clrf	240,b	;volatile
 27225                           
 27226                           ; BSR set to: 61
 27227                           ;mcc_generated_files/uart1.c: 99:  U1P3H = 0x00;
 27228  01A06C  6BF1               	clrf	241,b	;volatile
 27229                           
 27230                           ; BSR set to: 61
 27231                           ;mcc_generated_files/uart1.c: 102:  U1CON0 = 0xB0;
 27232  01A06E  0EB0               	movlw	176
 27233  01A070  6FF2               	movwf	242,b	;volatile
 27234                           
 27235                           ; BSR set to: 61
 27236                           ;mcc_generated_files/uart1.c: 105:  U1CON1 = 0x80;
 27237  01A072  0E80               	movlw	128
 27238  01A074  6FF3               	movwf	243,b	;volatile
 27239                           
 27240                           ; BSR set to: 61
 27241                           ;mcc_generated_files/uart1.c: 108:  U1CON2 = 0x00;
 27242  01A076  6BF4               	clrf	244,b	;volatile
 27243                           
 27244                           ; BSR set to: 61
 27245                           ;mcc_generated_files/uart1.c: 111:     U1BRGL = 0x8A;
 27246  01A078  0E8A               	movlw	138
 27247  01A07A  6FF5               	movwf	245,b	;volatile
 27248                           
 27249                           ; BSR set to: 61
 27250                           ;mcc_generated_files/uart1.c: 114:     U1BRGH = 0x00;
 27251  01A07C  6BF6               	clrf	246,b	;volatile
 27252                           
 27253                           ; BSR set to: 61
 27254                           ;mcc_generated_files/uart1.c: 117:  U1FIFO = 0x00;
 27255  01A07E  6BF7               	clrf	247,b	;volatile
 27256                           
 27257                           ; BSR set to: 61
 27258                           ;mcc_generated_files/uart1.c: 120:  U1UIR = 0x00;
 27259  01A080  6BF8               	clrf	248,b	;volatile
 27260                           
 27261                           ; BSR set to: 61
 27262                           ;mcc_generated_files/uart1.c: 123:  U1ERRIR = 0x00;
 27263  01A082  6BF9               	clrf	249,b	;volatile
 27264                           
 27265                           ; BSR set to: 61
 27266                           ;mcc_generated_files/uart1.c: 126:  U1ERRIE = 0x00;
 27267  01A084  6BFA               	clrf	250,b	;volatile
 27268                           
 27269                           ; BSR set to: 61
 27270                           ;mcc_generated_files/uart1.c: 129:  uart1RxHead = 0;
 27271  01A086  6A37               	clrf	_uart1RxHead^0,c	;volatile
 27272                           
 27273                           ; BSR set to: 61
 27274                           ;mcc_generated_files/uart1.c: 130:  uart1RxTail = 0;
 27275  01A088  6A36               	clrf	_uart1RxTail^0,c	;volatile
 27276                           
 27277                           ; BSR set to: 61
 27278                           ;mcc_generated_files/uart1.c: 131:  uart1RxCount = 0;
 27279  01A08A  6A35               	clrf	_uart1RxCount^0,c	;volatile
 27280                           
 27281                           ; BSR set to: 61
 27282                           ;mcc_generated_files/uart1.c: 134:  PIE3bits.U1RXIE = 1;
 27283  01A08C  0139               	movlb	57	; () banked
 27284  01A08E  8793               	bsf	147,3,b	;volatile
 27285                           
 27286                           ; BSR set to: 57
 27287                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 27288  01A090  0012               	return		;funcret
 27289  01A092                     __end_of_UART1_Initialize:
 27290                           	opt callstack 0
 27291                           
 27292 ;; *************** function _UART1_SetRxInterruptHandler *****************
 27293 ;; Defined at:
 27294 ;;		line 207 in file "mcc_generated_files/uart1.c"
 27295 ;; Parameters:    Size  Location     Type
 27296 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 27297 ;;		 -> UART1_Receive_ISR(1), 
 27298 ;; Auto vars:     Size  Location     Type
 27299 ;;		None
 27300 ;; Return value:  Size  Location     Type
 27301 ;;                  1  [STACK] void 
 27302 ;; Registers used:
 27303 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 27304 ;; Tracked objects:
 27305 ;;		On entry : 3F/39
 27306 ;;		On exit  : 0/0
 27307 ;;		Unchanged: 0/0
 27308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27313 ;;Total ram usage:        0 bytes
 27314 ;; Hardware stack levels used:    1
 27315 ;; Hardware stack levels required when called:   15
 27316 ;; This function calls:
 27317 ;;		Nothing
 27318 ;; This function is called by:
 27319 ;;		_UART1_Initialize
 27320 ;; This function uses a reentrant model
 27321 ;;
 27322                           
 27323                           	psect	text109
 27324  01A6E6                     __ptext109:
 27325                           	opt callstack 0
 27326  01A6E6                     _UART1_SetRxInterruptHandler:
 27327                           	opt callstack 13
 27328                           
 27329                           ;mcc_generated_files/uart1.c: 208:  UART1_RxInterruptHandler = InterruptHandler;
 27330                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 27331                           
 27332                           ; BSR set to: 57
 27333                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27334                           ;incstack = 0
 27335  01A6E6  50E1               	movf	fsr1l,w,c
 27336  01A6E8  0FFD               	addlw	-3
 27337  01A6EA  6ED9               	movwf	fsr2l,c
 27338  01A6EC  50E2               	movf	fsr1h,w,c
 27339  01A6EE  6EDA               	movwf	fsr2h,c
 27340  01A6F0  0EFF               	movlw	255
 27341  01A6F2  22DA               	addwfc	fsr2h,f,c
 27342  01A6F4  006F FF78  F0AB    	movff	postinc2,_UART1_RxInterruptHandler
 27343  01A6FA  006F FF78  F0AC    	movff	postinc2,_UART1_RxInterruptHandler+1
 27344  01A700  006F FF74  F0AD    	movff	postdec2,_UART1_RxInterruptHandler+2
 27345                           
 27346                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 27347  01A706  52E5               	movf	postdec1,f,c
 27348  01A708  52E5               	movf	postdec1,f,c
 27349  01A70A  52E5               	movf	postdec1,f,c
 27350  01A70C  0012               	return		;funcret
 27351  01A70E                     __end_of_UART1_SetRxInterruptHandler:
 27352                           	opt callstack 0
 27353                           
 27354 ;; *************** function _TMR6_Initialize *****************
 27355 ;; Defined at:
 27356 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 27357 ;; Parameters:    Size  Location     Type
 27358 ;;		None
 27359 ;; Auto vars:     Size  Location     Type
 27360 ;;		None
 27361 ;; Return value:  Size  Location     Type
 27362 ;;                  1  [STACK] void 
 27363 ;; Registers used:
 27364 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 27365 ;; Tracked objects:
 27366 ;;		On entry : 3F/39
 27367 ;;		On exit  : 0/0
 27368 ;;		Unchanged: 0/0
 27369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27373 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27374 ;;Total ram usage:        0 bytes
 27375 ;; Hardware stack levels used:    1
 27376 ;; Hardware stack levels required when called:   16
 27377 ;; This function calls:
 27378 ;;		_TMR6_SetInterruptHandler
 27379 ;; This function is called by:
 27380 ;;		_SYSTEM_Initialize
 27381 ;; This function uses a reentrant model
 27382 ;;
 27383                           
 27384                           	psect	text110
 27385  01A5CC                     __ptext110:
 27386                           	opt callstack 0
 27387  01A5CC                     _TMR6_Initialize:
 27388                           	opt callstack 13
 27389                           
 27390                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 27391                           
 27392                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27393                           ;incstack = 0
 27394  01A5CC  0E01               	movlw	1
 27395  01A5CE  6E96               	movwf	150,c	;volatile
 27396                           
 27397                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 27398  01A5D0  6A95               	clrf	149,c	;volatile
 27399                           
 27400                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 27401  01A5D2  6A97               	clrf	151,c	;volatile
 27402                           
 27403                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 27404  01A5D4  0E7C               	movlw	124
 27405  01A5D6  6E93               	movwf	147,c	;volatile
 27406                           
 27407                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 27408  01A5D8  6A92               	clrf	146,c	;volatile
 27409                           
 27410                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 27411  01A5DA  0139               	movlb	57	; () banked
 27412  01A5DC  91A9               	bcf	169,0,b	;volatile
 27413                           
 27414                           ; BSR set to: 57
 27415                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 27416  01A5DE  8199               	bsf	153,0,b	;volatile
 27417                           
 27418                           ; BSR set to: 57
 27419                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 27420  01A5E0  0EE0               	movlw	low _TMR6_DefaultInterruptHandler
 27421  01A5E2  6EE6               	movwf	postinc1,c
 27422  01A5E4  0E9E               	movlw	high _TMR6_DefaultInterruptHandler
 27423  01A5E6  6EE6               	movwf	postinc1,c
 27424  01A5E8  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 27425  01A5EA  6EE6               	movwf	postinc1,c
 27426  01A5EC  EC87  F0D3         	call	_TMR6_SetInterruptHandler	;wreg free
 27427                           
 27428                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 27429  01A5F0  0EE0               	movlw	224
 27430  01A5F2  6E94               	movwf	148,c	;volatile
 27431                           
 27432                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 27433  01A5F4  0012               	return		;funcret
 27434  01A5F6                     __end_of_TMR6_Initialize:
 27435                           	opt callstack 0
 27436                           
 27437 ;; *************** function _TMR6_SetInterruptHandler *****************
 27438 ;; Defined at:
 27439 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 27440 ;; Parameters:    Size  Location     Type
 27441 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 27442 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 27443 ;; Auto vars:     Size  Location     Type
 27444 ;;		None
 27445 ;; Return value:  Size  Location     Type
 27446 ;;                  1  [STACK] void 
 27447 ;; Registers used:
 27448 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 27449 ;; Tracked objects:
 27450 ;;		On entry : 3F/39
 27451 ;;		On exit  : 0/0
 27452 ;;		Unchanged: 0/0
 27453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27458 ;;Total ram usage:        0 bytes
 27459 ;; Hardware stack levels used:    1
 27460 ;; Hardware stack levels required when called:   15
 27461 ;; This function calls:
 27462 ;;		Nothing
 27463 ;; This function is called by:
 27464 ;;		_TMR6_Initialize
 27465 ;; This function uses a reentrant model
 27466 ;;
 27467                           
 27468                           	psect	text111
 27469  01A70E                     __ptext111:
 27470                           	opt callstack 0
 27471  01A70E                     _TMR6_SetInterruptHandler:
 27472                           	opt callstack 13
 27473                           
 27474                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 27475                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 27476                           
 27477                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27478                           ;incstack = 0
 27479  01A70E  50E1               	movf	fsr1l,w,c
 27480  01A710  0FFD               	addlw	-3
 27481  01A712  6ED9               	movwf	fsr2l,c
 27482  01A714  50E2               	movf	fsr1h,w,c
 27483  01A716  6EDA               	movwf	fsr2h,c
 27484  01A718  0EFF               	movlw	255
 27485  01A71A  22DA               	addwfc	fsr2h,f,c
 27486  01A71C  006F FF78  F0A2    	movff	postinc2,_TMR6_InterruptHandler
 27487  01A722  006F FF78  F0A3    	movff	postinc2,_TMR6_InterruptHandler+1
 27488  01A728  006F FF74  F0A4    	movff	postdec2,_TMR6_InterruptHandler+2
 27489                           
 27490                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 27491  01A72E  52E5               	movf	postdec1,f,c
 27492  01A730  52E5               	movf	postdec1,f,c
 27493  01A732  52E5               	movf	postdec1,f,c
 27494  01A734  0012               	return		;funcret
 27495  01A736                     __end_of_TMR6_SetInterruptHandler:
 27496                           	opt callstack 0
 27497                           
 27498 ;; *************** function _TMR5_Initialize *****************
 27499 ;; Defined at:
 27500 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 27501 ;; Parameters:    Size  Location     Type
 27502 ;;		None
 27503 ;; Auto vars:     Size  Location     Type
 27504 ;;		None
 27505 ;; Return value:  Size  Location     Type
 27506 ;;                  1  [STACK] void 
 27507 ;; Registers used:
 27508 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 27509 ;; Tracked objects:
 27510 ;;		On entry : 0/39
 27511 ;;		On exit  : 0/0
 27512 ;;		Unchanged: 0/0
 27513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27517 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27518 ;;Total ram usage:        0 bytes
 27519 ;; Hardware stack levels used:    1
 27520 ;; Hardware stack levels required when called:   16
 27521 ;; This function calls:
 27522 ;;		_TMR5_SetInterruptHandler
 27523 ;; This function is called by:
 27524 ;;		_SYSTEM_Initialize
 27525 ;; This function uses a reentrant model
 27526 ;;
 27527                           
 27528                           	psect	text112
 27529  01A092                     __ptext112:
 27530                           	opt callstack 0
 27531  01A092                     _TMR5_Initialize:
 27532                           	opt callstack 13
 27533                           
 27534                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 27535                           
 27536                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27537                           ;incstack = 0
 27538  01A092  6A9B               	clrf	155,c	;volatile
 27539                           
 27540                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 27541  01A094  6A9C               	clrf	156,c	;volatile
 27542                           
 27543                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 27544  01A096  0E01               	movlw	1
 27545  01A098  6E9D               	movwf	157,c	;volatile
 27546                           
 27547                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 27548  01A09A  0E63               	movlw	99
 27549  01A09C  6E99               	movwf	153,c	;volatile
 27550                           
 27551                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 27552  01A09E  0EC0               	movlw	192
 27553  01A0A0  6E98               	movwf	152,c	;volatile
 27554                           
 27555                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 27556  01A0A2  5098               	movf	152,w,c	;volatile
 27557  01A0A4  006F FE64  F001    	movff	16281,btemp	;volatile
 27558  01A0AA  6A02               	clrf	(btemp+1)^0,c
 27559  01A0AC  0060  F004  F002   	movff	btemp,btemp+1
 27560  01A0B2  6A01               	clrf	btemp^0,c
 27561  01A0B4  1001               	iorwf	btemp^0,w,c
 27562  01A0B6  6E2B               	movwf	_timer5ReloadVal^0,c	;volatile
 27563  01A0B8  5002               	movf	(btemp+1)^0,w,c
 27564  01A0BA  6E2C               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 27565                           
 27566                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 27567  01A0BC  0139               	movlb	57	; () banked
 27568  01A0BE  9DA8               	bcf	168,6,b	;volatile
 27569                           
 27570                           ; BSR set to: 57
 27571                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 27572  01A0C0  8D98               	bsf	152,6,b	;volatile
 27573                           
 27574                           ; BSR set to: 57
 27575                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 27576  01A0C2  0E24               	movlw	low _TMR5_DefaultInterruptHandler
 27577  01A0C4  6EE6               	movwf	postinc1,c
 27578  01A0C6  0EA4               	movlw	high _TMR5_DefaultInterruptHandler
 27579  01A0C8  6EE6               	movwf	postinc1,c
 27580  01A0CA  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 27581  01A0CC  6EE6               	movwf	postinc1,c
 27582  01A0CE  EC9B  F0D3         	call	_TMR5_SetInterruptHandler	;wreg free
 27583                           
 27584                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 27585  01A0D2  0E31               	movlw	49
 27586  01A0D4  6E9A               	movwf	154,c	;volatile
 27587                           
 27588                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 27589  01A0D6  0012               	return		;funcret
 27590  01A0D8                     __end_of_TMR5_Initialize:
 27591                           	opt callstack 0
 27592                           
 27593 ;; *************** function _TMR5_SetInterruptHandler *****************
 27594 ;; Defined at:
 27595 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 27596 ;; Parameters:    Size  Location     Type
 27597 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 27598 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 27599 ;; Auto vars:     Size  Location     Type
 27600 ;;		None
 27601 ;; Return value:  Size  Location     Type
 27602 ;;                  1  [STACK] void 
 27603 ;; Registers used:
 27604 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 27605 ;; Tracked objects:
 27606 ;;		On entry : 3F/39
 27607 ;;		On exit  : 0/0
 27608 ;;		Unchanged: 0/0
 27609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27614 ;;Total ram usage:        0 bytes
 27615 ;; Hardware stack levels used:    1
 27616 ;; Hardware stack levels required when called:   15
 27617 ;; This function calls:
 27618 ;;		Nothing
 27619 ;; This function is called by:
 27620 ;;		_TMR5_Initialize
 27621 ;; This function uses a reentrant model
 27622 ;;
 27623                           
 27624                           	psect	text113
 27625  01A736                     __ptext113:
 27626                           	opt callstack 0
 27627  01A736                     _TMR5_SetInterruptHandler:
 27628                           	opt callstack 13
 27629                           
 27630                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 27631                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 27632                           
 27633                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27634                           ;incstack = 0
 27635  01A736  50E1               	movf	fsr1l,w,c
 27636  01A738  0FFD               	addlw	-3
 27637  01A73A  6ED9               	movwf	fsr2l,c
 27638  01A73C  50E2               	movf	fsr1h,w,c
 27639  01A73E  6EDA               	movwf	fsr2h,c
 27640  01A740  0EFF               	movlw	255
 27641  01A742  22DA               	addwfc	fsr2h,f,c
 27642  01A744  006F FF78  F09F    	movff	postinc2,_TMR5_InterruptHandler
 27643  01A74A  006F FF78  F0A0    	movff	postinc2,_TMR5_InterruptHandler+1
 27644  01A750  006F FF74  F0A1    	movff	postdec2,_TMR5_InterruptHandler+2
 27645                           
 27646                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 27647  01A756  52E5               	movf	postdec1,f,c
 27648  01A758  52E5               	movf	postdec1,f,c
 27649  01A75A  52E5               	movf	postdec1,f,c
 27650  01A75C  0012               	return		;funcret
 27651  01A75E                     __end_of_TMR5_SetInterruptHandler:
 27652                           	opt callstack 0
 27653                           
 27654 ;; *************** function _TMR3_Initialize *****************
 27655 ;; Defined at:
 27656 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 27657 ;; Parameters:    Size  Location     Type
 27658 ;;		None
 27659 ;; Auto vars:     Size  Location     Type
 27660 ;;		None
 27661 ;; Return value:  Size  Location     Type
 27662 ;;                  1  [STACK] void 
 27663 ;; Registers used:
 27664 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 27665 ;; Tracked objects:
 27666 ;;		On entry : 0/39
 27667 ;;		On exit  : 0/0
 27668 ;;		Unchanged: 0/0
 27669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27674 ;;Total ram usage:        0 bytes
 27675 ;; Hardware stack levels used:    1
 27676 ;; Hardware stack levels required when called:   16
 27677 ;; This function calls:
 27678 ;;		_TMR3_SetInterruptHandler
 27679 ;; This function is called by:
 27680 ;;		_SYSTEM_Initialize
 27681 ;; This function uses a reentrant model
 27682 ;;
 27683                           
 27684                           	psect	text114
 27685  01A0D8                     __ptext114:
 27686                           	opt callstack 0
 27687  01A0D8                     _TMR3_Initialize:
 27688                           	opt callstack 13
 27689                           
 27690                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 27691                           
 27692                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27693                           ;incstack = 0
 27694  01A0D8  6AA7               	clrf	167,c	;volatile
 27695                           
 27696                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 27697  01A0DA  6AA8               	clrf	168,c	;volatile
 27698                           
 27699                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 27700  01A0DC  0E01               	movlw	1
 27701  01A0DE  6EA9               	movwf	169,c	;volatile
 27702                           
 27703                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 27704  01A0E0  0E3C               	movlw	60
 27705  01A0E2  6EA5               	movwf	165,c	;volatile
 27706                           
 27707                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 27708  01A0E4  0EB0               	movlw	176
 27709  01A0E6  6EA4               	movwf	164,c	;volatile
 27710                           
 27711                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 27712  01A0E8  50A4               	movf	164,w,c	;volatile
 27713  01A0EA  006F FE94  F001    	movff	16293,btemp	;volatile
 27714  01A0F0  6A02               	clrf	(btemp+1)^0,c
 27715  01A0F2  0060  F004  F002   	movff	btemp,btemp+1
 27716  01A0F8  6A01               	clrf	btemp^0,c
 27717  01A0FA  1001               	iorwf	btemp^0,w,c
 27718  01A0FC  6E27               	movwf	_timer3ReloadVal^0,c	;volatile
 27719  01A0FE  5002               	movf	(btemp+1)^0,w,c
 27720  01A100  6E28               	movwf	(_timer3ReloadVal+1)^0,c	;volatile
 27721                           
 27722                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 27723  01A102  0139               	movlb	57	; () banked
 27724  01A104  9DA6               	bcf	166,6,b	;volatile
 27725                           
 27726                           ; BSR set to: 57
 27727                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 27728  01A106  8D96               	bsf	150,6,b	;volatile
 27729                           
 27730                           ; BSR set to: 57
 27731                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 27732  01A108  0E68               	movlw	low _TMR3_DefaultInterruptHandler
 27733  01A10A  6EE6               	movwf	postinc1,c
 27734  01A10C  0EAC               	movlw	high _TMR3_DefaultInterruptHandler
 27735  01A10E  6EE6               	movwf	postinc1,c
 27736  01A110  0E01               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 27737  01A112  6EE6               	movwf	postinc1,c
 27738  01A114  ECAF  F0D3         	call	_TMR3_SetInterruptHandler	;wreg free
 27739                           
 27740                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 27741  01A118  0E31               	movlw	49
 27742  01A11A  6EA6               	movwf	166,c	;volatile
 27743                           
 27744                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 27745  01A11C  0012               	return		;funcret
 27746  01A11E                     __end_of_TMR3_Initialize:
 27747                           	opt callstack 0
 27748                           
 27749 ;; *************** function _TMR3_SetInterruptHandler *****************
 27750 ;; Defined at:
 27751 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 27752 ;; Parameters:    Size  Location     Type
 27753 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 27754 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 27755 ;; Auto vars:     Size  Location     Type
 27756 ;;		None
 27757 ;; Return value:  Size  Location     Type
 27758 ;;                  1  [STACK] void 
 27759 ;; Registers used:
 27760 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 27761 ;; Tracked objects:
 27762 ;;		On entry : 0/1
 27763 ;;		On exit  : 0/0
 27764 ;;		Unchanged: 0/0
 27765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27770 ;;Total ram usage:        0 bytes
 27771 ;; Hardware stack levels used:    1
 27772 ;; Hardware stack levels required when called:   15
 27773 ;; This function calls:
 27774 ;;		Nothing
 27775 ;; This function is called by:
 27776 ;;		_TMR3_Initialize
 27777 ;;		_init_bsoc
 27778 ;; This function uses a reentrant model
 27779 ;;
 27780                           
 27781                           	psect	text115
 27782  01A75E                     __ptext115:
 27783                           	opt callstack 0
 27784  01A75E                     _TMR3_SetInterruptHandler:
 27785                           	opt callstack 14
 27786                           
 27787                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 27788                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 27789                           
 27790                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27791                           ;incstack = 0
 27792  01A75E  50E1               	movf	fsr1l,w,c
 27793  01A760  0FFD               	addlw	-3
 27794  01A762  6ED9               	movwf	fsr2l,c
 27795  01A764  50E2               	movf	fsr1h,w,c
 27796  01A766  6EDA               	movwf	fsr2h,c
 27797  01A768  0EFF               	movlw	255
 27798  01A76A  22DA               	addwfc	fsr2h,f,c
 27799  01A76C  006F FF78  F09C    	movff	postinc2,_TMR3_InterruptHandler
 27800  01A772  006F FF78  F09D    	movff	postinc2,_TMR3_InterruptHandler+1
 27801  01A778  006F FF74  F09E    	movff	postdec2,_TMR3_InterruptHandler+2
 27802                           
 27803                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 27804  01A77E  52E5               	movf	postdec1,f,c
 27805  01A780  52E5               	movf	postdec1,f,c
 27806  01A782  52E5               	movf	postdec1,f,c
 27807  01A784  0012               	return		;funcret
 27808  01A786                     __end_of_TMR3_SetInterruptHandler:
 27809                           	opt callstack 0
 27810                           
 27811 ;; *************** function _TMR2_Initialize *****************
 27812 ;; Defined at:
 27813 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 27814 ;; Parameters:    Size  Location     Type
 27815 ;;		None
 27816 ;; Auto vars:     Size  Location     Type
 27817 ;;		None
 27818 ;; Return value:  Size  Location     Type
 27819 ;;                  1  [STACK] void 
 27820 ;; Registers used:
 27821 ;;		wreg, status,2
 27822 ;; Tracked objects:
 27823 ;;		On entry : 3F/3F
 27824 ;;		On exit  : 3F/39
 27825 ;;		Unchanged: 0/0
 27826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27831 ;;Total ram usage:        0 bytes
 27832 ;; Hardware stack levels used:    1
 27833 ;; Hardware stack levels required when called:   15
 27834 ;; This function calls:
 27835 ;;		Nothing
 27836 ;; This function is called by:
 27837 ;;		_SYSTEM_Initialize
 27838 ;; This function uses a reentrant model
 27839 ;;
 27840                           
 27841                           	psect	text116
 27842  01AAFA                     __ptext116:
 27843                           	opt callstack 0
 27844  01AAFA                     _TMR2_Initialize:
 27845                           	opt callstack 14
 27846                           
 27847                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 27848                           
 27849                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27850                           ;incstack = 0
 27851  01AAFA  0E01               	movlw	1
 27852  01AAFC  6EAE               	movwf	174,c	;volatile
 27853                           
 27854                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 27855  01AAFE  6AAD               	clrf	173,c	;volatile
 27856                           
 27857                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 27858  01AB00  6AAF               	clrf	175,c	;volatile
 27859                           
 27860                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 27861  01AB02  0E63               	movlw	99
 27862  01AB04  6EAB               	movwf	171,c	;volatile
 27863                           
 27864                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 27865  01AB06  6AAA               	clrf	170,c	;volatile
 27866                           
 27867                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 27868  01AB08  0139               	movlb	57	; () banked
 27869  01AB0A  95A4               	bcf	164,2,b	;volatile
 27870                           
 27871                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 27872  01AB0C  0EC0               	movlw	192
 27873  01AB0E  6EAC               	movwf	172,c	;volatile
 27874                           
 27875                           ; BSR set to: 57
 27876                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 27877  01AB10  0012               	return		;funcret
 27878  01AB12                     __end_of_TMR2_Initialize:
 27879                           	opt callstack 0
 27880                           
 27881 ;; *************** function _SPI1_Initialize *****************
 27882 ;; Defined at:
 27883 ;;		line 64 in file "mcc_generated_files/spi1.c"
 27884 ;; Parameters:    Size  Location     Type
 27885 ;;		None
 27886 ;; Auto vars:     Size  Location     Type
 27887 ;;		None
 27888 ;; Return value:  Size  Location     Type
 27889 ;;                  1  [STACK] void 
 27890 ;; Registers used:
 27891 ;;		wreg, status,2
 27892 ;; Tracked objects:
 27893 ;;		On entry : 3F/39
 27894 ;;		On exit  : 3F/3D
 27895 ;;		Unchanged: 0/0
 27896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27900 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27901 ;;Total ram usage:        0 bytes
 27902 ;; Hardware stack levels used:    1
 27903 ;; Hardware stack levels required when called:   15
 27904 ;; This function calls:
 27905 ;;		Nothing
 27906 ;; This function is called by:
 27907 ;;		_SYSTEM_Initialize
 27908 ;; This function uses a reentrant model
 27909 ;;
 27910                           
 27911                           	psect	text117
 27912  01AB12                     __ptext117:
 27913                           	opt callstack 0
 27914  01AB12                     _SPI1_Initialize:
 27915                           	opt callstack 14
 27916                           
 27917                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 27918                           
 27919                           ; BSR set to: 57
 27920                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27921                           ;incstack = 0
 27922  01AB12  0E40               	movlw	64
 27923  01AB14  013D               	movlb	61	; () banked
 27924  01AB16  6F15               	movwf	21,b	;volatile
 27925                           
 27926                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 27927  01AB18  0E03               	movlw	3
 27928  01AB1A  6F16               	movwf	22,b	;volatile
 27929                           
 27930                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 27931  01AB1C  0E4F               	movlw	79
 27932  01AB1E  6F19               	movwf	25,b	;volatile
 27933                           
 27934                           ; BSR set to: 61
 27935                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 27936  01AB20  6B1C               	clrf	28,b	;volatile
 27937                           
 27938                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 27939  01AB22  0E83               	movlw	131
 27940  01AB24  6F14               	movwf	20,b	;volatile
 27941                           
 27942                           ; BSR set to: 61
 27943                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 27944  01AB26  0012               	return		;funcret
 27945  01AB28                     __end_of_SPI1_Initialize:
 27946                           	opt callstack 0
 27947                           
 27948 ;; *************** function _PWM8_Initialize *****************
 27949 ;; Defined at:
 27950 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 27951 ;; Parameters:    Size  Location     Type
 27952 ;;		None
 27953 ;; Auto vars:     Size  Location     Type
 27954 ;;		None
 27955 ;; Return value:  Size  Location     Type
 27956 ;;                  1  [STACK] void 
 27957 ;; Registers used:
 27958 ;;		wreg, status,2
 27959 ;; Tracked objects:
 27960 ;;		On entry : 0/3E
 27961 ;;		On exit  : 3F/3F
 27962 ;;		Unchanged: 0/0
 27963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27968 ;;Total ram usage:        0 bytes
 27969 ;; Hardware stack levels used:    1
 27970 ;; Hardware stack levels required when called:   15
 27971 ;; This function calls:
 27972 ;;		Nothing
 27973 ;; This function is called by:
 27974 ;;		_SYSTEM_Initialize
 27975 ;; This function uses a reentrant model
 27976 ;;
 27977                           
 27978                           	psect	text118
 27979  01AB28                     __ptext118:
 27980                           	opt callstack 0
 27981  01AB28                     _PWM8_Initialize:
 27982                           	opt callstack 14
 27983                           
 27984                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 27985                           
 27986                           ; BSR set to: 61
 27987                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27988                           ;incstack = 0
 27989  01AB28  0E80               	movlw	128
 27990  01AB2A  6E62               	movwf	98,c	;volatile
 27991                           
 27992                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 27993  01AB2C  6A61               	clrf	97,c	;volatile
 27994                           
 27995                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 27996  01AB2E  0E40               	movlw	64
 27997  01AB30  6E60               	movwf	96,c	;volatile
 27998                           
 27999                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 28000  01AB32  013F               	movlb	63	; () banked
 28001  01AB34  515F               	movf	95,w,b	;volatile
 28002  01AB36  0B3F               	andlw	-193
 28003  01AB38  0940               	iorlw	64
 28004  01AB3A  6F5F               	movwf	95,b	;volatile
 28005                           
 28006                           ; BSR set to: 63
 28007                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 28008  01AB3C  0012               	return		;funcret
 28009  01AB3E                     __end_of_PWM8_Initialize:
 28010                           	opt callstack 0
 28011                           
 28012 ;; *************** function _PMD_Initialize *****************
 28013 ;; Defined at:
 28014 ;;		line 90 in file "mcc_generated_files/mcc.c"
 28015 ;; Parameters:    Size  Location     Type
 28016 ;;		None
 28017 ;; Auto vars:     Size  Location     Type
 28018 ;;		None
 28019 ;; Return value:  Size  Location     Type
 28020 ;;                  1  [STACK] void 
 28021 ;; Registers used:
 28022 ;;		None
 28023 ;; Tracked objects:
 28024 ;;		On entry : 3F/39
 28025 ;;		On exit  : 3F/39
 28026 ;;		Unchanged: 0/0
 28027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28032 ;;Total ram usage:        0 bytes
 28033 ;; Hardware stack levels used:    1
 28034 ;; Hardware stack levels required when called:   15
 28035 ;; This function calls:
 28036 ;;		Nothing
 28037 ;; This function is called by:
 28038 ;;		_SYSTEM_Initialize
 28039 ;; This function uses a reentrant model
 28040 ;;
 28041                           
 28042                           	psect	text119
 28043  01AB54                     __ptext119:
 28044                           	opt callstack 0
 28045  01AB54                     _PMD_Initialize:
 28046                           	opt callstack 14
 28047                           
 28048                           ;mcc_generated_files/mcc.c: 93:     PMD0 = 0x00;
 28049                           
 28050                           ; BSR set to: 63
 28051                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28052                           ;incstack = 0
 28053  01AB54  0139               	movlb	57	; () banked
 28054  01AB56  6BC0               	clrf	192,b	;volatile
 28055                           
 28056                           ;mcc_generated_files/mcc.c: 95:     PMD1 = 0x00;
 28057  01AB58  6BC1               	clrf	193,b	;volatile
 28058                           
 28059                           ;mcc_generated_files/mcc.c: 97:     PMD2 = 0x00;
 28060  01AB5A  6BC2               	clrf	194,b	;volatile
 28061                           
 28062                           ;mcc_generated_files/mcc.c: 99:     PMD3 = 0x00;
 28063  01AB5C  6BC3               	clrf	195,b	;volatile
 28064                           
 28065                           ;mcc_generated_files/mcc.c: 101:     PMD4 = 0x00;
 28066  01AB5E  6BC4               	clrf	196,b	;volatile
 28067                           
 28068                           ;mcc_generated_files/mcc.c: 103:     PMD5 = 0x00;
 28069  01AB60  6BC5               	clrf	197,b	;volatile
 28070                           
 28071                           ;mcc_generated_files/mcc.c: 105:     PMD6 = 0x00;
 28072  01AB62  6BC6               	clrf	198,b	;volatile
 28073                           
 28074                           ;mcc_generated_files/mcc.c: 107:     PMD7 = 0x00;
 28075  01AB64  6BC7               	clrf	199,b	;volatile
 28076                           
 28077                           ; BSR set to: 57
 28078                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 28079  01AB66  0012               	return		;funcret
 28080  01AB68                     __end_of_PMD_Initialize:
 28081                           	opt callstack 0
 28082                           
 28083 ;; *************** function _PIN_MANAGER_Initialize *****************
 28084 ;; Defined at:
 28085 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 28086 ;; Parameters:    Size  Location     Type
 28087 ;;		None
 28088 ;; Auto vars:     Size  Location     Type
 28089 ;;		None
 28090 ;; Return value:  Size  Location     Type
 28091 ;;                  1  [STACK] void 
 28092 ;; Registers used:
 28093 ;;		wreg, status,2
 28094 ;; Tracked objects:
 28095 ;;		On entry : 3F/39
 28096 ;;		On exit  : 3F/3A
 28097 ;;		Unchanged: 0/0
 28098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28103 ;;Total ram usage:        0 bytes
 28104 ;; Hardware stack levels used:    1
 28105 ;; Hardware stack levels required when called:   15
 28106 ;; This function calls:
 28107 ;;		Nothing
 28108 ;; This function is called by:
 28109 ;;		_SYSTEM_Initialize
 28110 ;; This function uses a reentrant model
 28111 ;;
 28112                           
 28113                           	psect	text120
 28114  01967E                     __ptext120:
 28115                           	opt callstack 0
 28116  01967E                     _PIN_MANAGER_Initialize:
 28117                           	opt callstack 14
 28118                           
 28119                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 28120                           
 28121                           ; BSR set to: 57
 28122                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28123                           ;incstack = 0
 28124  01967E  0E07               	movlw	7
 28125  019680  6EBE               	movwf	190,c	;volatile
 28126                           
 28127                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x80;
 28128  019682  0E80               	movlw	128
 28129  019684  6EBD               	movwf	189,c	;volatile
 28130                           
 28131                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 28132  019686  6ABA               	clrf	186,c	;volatile
 28133                           
 28134                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 28135  019688  6ABF               	clrf	191,c	;volatile
 28136                           
 28137                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 28138  01968A  6ABB               	clrf	187,c	;volatile
 28139                           
 28140                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 28141  01968C  0E07               	movlw	7
 28142  01968E  6EBC               	movwf	188,c	;volatile
 28143                           
 28144                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 28145  019690  6AC6               	clrf	198,c	;volatile
 28146                           
 28147                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 28148  019692  0E0F               	movlw	15
 28149  019694  6EC7               	movwf	199,c	;volatile
 28150                           
 28151                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 28152  019696  68C2               	setf	194,c	;volatile
 28153                           
 28154                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 28155  019698  0EBF               	movlw	191
 28156  01969A  6EC3               	movwf	195,c	;volatile
 28157                           
 28158                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 28159  01969C  0E90               	movlw	144
 28160  01969E  6EC4               	movwf	196,c	;volatile
 28161                           
 28162                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 28163  0196A0  0E0C               	movlw	12
 28164  0196A2  6EC5               	movwf	197,c	;volatile
 28165                           
 28166                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 28167  0196A4  013A               	movlb	58	; () banked
 28168  0196A6  6B70               	clrf	112,b	;volatile
 28169                           
 28170                           ; BSR set to: 58
 28171                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 28172  0196A8  6B60               	clrf	96,b	;volatile
 28173                           
 28174                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 28175  0196AA  0E3C               	movlw	60
 28176  0196AC  6F50               	movwf	80,b	;volatile
 28177                           
 28178                           ; BSR set to: 58
 28179                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 28180  0196AE  6B80               	clrf	128,b	;volatile
 28181                           
 28182                           ; BSR set to: 58
 28183                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 28184  0196B0  6B90               	clrf	144,b	;volatile
 28185                           
 28186                           ; BSR set to: 58
 28187                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 28188  0196B2  6940               	setf	64,b	;volatile
 28189                           
 28190                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 28191  0196B4  0E0C               	movlw	12
 28192  0196B6  6F71               	movwf	113,b	;volatile
 28193                           
 28194                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0F;
 28195  0196B8  0E0F               	movlw	15
 28196  0196BA  6F91               	movwf	145,b	;volatile
 28197                           
 28198                           ; BSR set to: 58
 28199                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 28200  0196BC  6B81               	clrf	129,b	;volatile
 28201                           
 28202                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 28203  0196BE  0E83               	movlw	131
 28204  0196C0  6F51               	movwf	81,b	;volatile
 28205                           
 28206                           ; BSR set to: 58
 28207                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 28208  0196C2  6B41               	clrf	65,b	;volatile
 28209                           
 28210                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 28211  0196C4  0E97               	movlw	151
 28212  0196C6  6F61               	movwf	97,b	;volatile
 28213                           
 28214                           ; BSR set to: 58
 28215                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 28216  0196C8  6B82               	clrf	130,b	;volatile
 28217                           
 28218                           ; BSR set to: 58
 28219                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 28220  0196CA  6B92               	clrf	146,b	;volatile
 28221                           
 28222                           ; BSR set to: 58
 28223                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 28224  0196CC  6B42               	clrf	66,b	;volatile
 28225                           
 28226                           ; BSR set to: 58
 28227                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 28228  0196CE  6B52               	clrf	82,b	;volatile
 28229                           
 28230                           ; BSR set to: 58
 28231                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 28232  0196D0  6B62               	clrf	98,b	;volatile
 28233                           
 28234                           ; BSR set to: 58
 28235                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 28236  0196D2  6B72               	clrf	114,b	;volatile
 28237                           
 28238                           ; BSR set to: 58
 28239                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 28240  0196D4  6943               	setf	67,b	;volatile
 28241                           
 28242                           ; BSR set to: 58
 28243                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 28244  0196D6  6953               	setf	83,b	;volatile
 28245                           
 28246                           ; BSR set to: 58
 28247                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 28248  0196D8  6963               	setf	99,b	;volatile
 28249                           
 28250                           ; BSR set to: 58
 28251                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 28252  0196DA  6973               	setf	115,b	;volatile
 28253                           
 28254                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 28255  0196DC  0E07               	movlw	7
 28256  0196DE  6F83               	movwf	131,b	;volatile
 28257                           
 28258                           ; BSR set to: 58
 28259                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 28260  0196E0  6993               	setf	147,b	;volatile
 28261                           
 28262                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 28263  0196E2  0E0F               	movlw	15
 28264  0196E4  6FE8               	movwf	232,b	;volatile
 28265                           
 28266                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 28267  0196E6  0E13               	movlw	19
 28268  0196E8  6FDE               	movwf	222,b	;volatile
 28269                           
 28270                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 28271  0196EA  0E16               	movlw	22
 28272  0196EC  6F0E               	movwf	14,b	;volatile
 28273                           
 28274                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 28275  0196EE  0E1E               	movlw	30
 28276  0196F0  6F13               	movwf	19,b	;volatile
 28277                           
 28278                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 28279  0196F2  0E08               	movlw	8
 28280  0196F4  6FC0               	movwf	192,b	;volatile
 28281                           
 28282                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 28283  0196F6  0E10               	movlw	16
 28284  0196F8  6F19               	movwf	25,b	;volatile
 28285                           
 28286                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 28287  0196FA  0E09               	movlw	9
 28288  0196FC  6FC1               	movwf	193,b	;volatile
 28289                           
 28290                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 28291  0196FE  0E1F               	movlw	31
 28292  019700  6F15               	movwf	21,b	;volatile
 28293                           
 28294                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 28295  019702  0E13               	movlw	19
 28296  019704  6F16               	movwf	22,b	;volatile
 28297                           
 28298                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 28299  019706  0E17               	movlw	23
 28300  019708  6FE5               	movwf	229,b	;volatile
 28301                           
 28302                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 28303  01970A  0E14               	movlw	20
 28304  01970C  6FDF               	movwf	223,b	;volatile
 28305                           
 28306                           ; BSR set to: 58
 28307                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 28308  01970E  0012               	return		;funcret
 28309  019710                     __end_of_PIN_MANAGER_Initialize:
 28310                           	opt callstack 0
 28311                           
 28312 ;; *************** function _OSCILLATOR_Initialize *****************
 28313 ;; Defined at:
 28314 ;;		line 72 in file "mcc_generated_files/mcc.c"
 28315 ;; Parameters:    Size  Location     Type
 28316 ;;		None
 28317 ;; Auto vars:     Size  Location     Type
 28318 ;;		None
 28319 ;; Return value:  Size  Location     Type
 28320 ;;                  1  [STACK] void 
 28321 ;; Registers used:
 28322 ;;		wreg, status,2
 28323 ;; Tracked objects:
 28324 ;;		On entry : 3F/3A
 28325 ;;		On exit  : 3F/39
 28326 ;;		Unchanged: 0/0
 28327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28332 ;;Total ram usage:        0 bytes
 28333 ;; Hardware stack levels used:    1
 28334 ;; Hardware stack levels required when called:   15
 28335 ;; This function calls:
 28336 ;;		Nothing
 28337 ;; This function is called by:
 28338 ;;		_SYSTEM_Initialize
 28339 ;; This function uses a reentrant model
 28340 ;;
 28341                           
 28342                           	psect	text121
 28343  01AB3E                     __ptext121:
 28344                           	opt callstack 0
 28345  01AB3E                     _OSCILLATOR_Initialize:
 28346                           	opt callstack 14
 28347                           
 28348                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x20;
 28349                           
 28350                           ; BSR set to: 58
 28351                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28352                           ;incstack = 0
 28353  01AB3E  0E20               	movlw	32
 28354  01AB40  0139               	movlb	57	; () banked
 28355  01AB42  6FD9               	movwf	217,b	;volatile
 28356                           
 28357                           ; BSR set to: 57
 28358                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 28359  01AB44  6BDB               	clrf	219,b	;volatile
 28360                           
 28361                           ; BSR set to: 57
 28362                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 28363  01AB46  6BDD               	clrf	221,b	;volatile
 28364                           
 28365                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x02;
 28366  01AB48  0E02               	movlw	2
 28367  01AB4A  6FDF               	movwf	223,b	;volatile
 28368                           
 28369                           ; BSR set to: 57
 28370                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 28371  01AB4C  6BDE               	clrf	222,b	;volatile
 28372  01AB4E                     l169:
 28373                           
 28374                           ; BSR set to: 57
 28375                           ;mcc_generated_files/mcc.c: 85:     while(PLLR == 0)
 28376  01AB4E  B1DC               	btfsc	220,0,b	;volatile
 28377  01AB50  0012               	return	
 28378  01AB52  D7FD               	goto	l169
 28379  01AB54                     __end_of_OSCILLATOR_Initialize:
 28380                           	opt callstack 0
 28381                           
 28382 ;; *************** function _INTERRUPT_Initialize *****************
 28383 ;; Defined at:
 28384 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 28385 ;; Parameters:    Size  Location     Type
 28386 ;;		None
 28387 ;; Auto vars:     Size  Location     Type
 28388 ;;  state           1  [STACK] _Bool 
 28389 ;; Return value:  Size  Location     Type
 28390 ;;                  1  [STACK] void 
 28391 ;; Registers used:
 28392 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 28393 ;; Tracked objects:
 28394 ;;		On entry : 0/0
 28395 ;;		On exit  : 3F/39
 28396 ;;		Unchanged: 0/0
 28397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28401 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28402 ;;Total ram usage:        0 bytes
 28403 ;; Hardware stack levels used:    1
 28404 ;; Hardware stack levels required when called:   15
 28405 ;; This function calls:
 28406 ;;		Nothing
 28407 ;; This function is called by:
 28408 ;;		_SYSTEM_Initialize
 28409 ;; This function uses a reentrant model
 28410 ;;
 28411                           
 28412                           	psect	text122
 28413  019AEE                     __ptext122:
 28414                           	opt callstack 0
 28415  019AEE                     _INTERRUPT_Initialize:
 28416                           	opt callstack 0
 28417                           
 28418                           ; BSR set to: 57
 28419                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28420  019AEE  52E6               	movf	postinc1,f,c
 28421                           
 28422                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 28423                           
 28424                           ;incstack = 0
 28425  019AF0  8AD2               	bsf	210,5,c	;volatile
 28426                           
 28427                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 28428  019AF2  AED2               	btfss	16338,7,c	;volatile
 28429  019AF4  D003               	goto	u8780
 28430  019AF6  6A0C               	clrf	(btemp+11)^0,c
 28431  019AF8  2A0C               	incf	(btemp+11)^0,f,c
 28432  019AFA  D001               	goto	u8798
 28433  019AFC                     u8780:
 28434  019AFC  6A0C               	clrf	(btemp+11)^0,c
 28435  019AFE                     u8798:
 28436                           
 28437                           ;stkvar	_state @ sp[(-1)+0]
 28438  019AFE  0EFF               	movlw	-1
 28439  019B00  0060  F033  FFE3   	movff	btemp+11,plusw1
 28440                           
 28441                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 28442  019B06  9ED2               	bcf	16338,7,c	;volatile
 28443                           
 28444                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 28445  019B08  0E55               	movlw	85
 28446  019B0A  6ED4               	movwf	212,c	;volatile
 28447                           
 28448                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 28449  019B0C  0EAA               	movlw	170
 28450  019B0E  6ED4               	movwf	212,c	;volatile
 28451                           
 28452                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 28453  019B10  90D4               	bcf	212,0,c	;volatile
 28454                           
 28455                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 28456  019B12  0138               	movlb	56	; () banked
 28457  019B14  6B9F               	clrf	159,b	;volatile
 28458                           
 28459                           ; BSR set to: 56
 28460                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 28461  019B16  6B9E               	clrf	158,b	;volatile
 28462                           
 28463                           ; BSR set to: 56
 28464                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 28465  019B18  0E08               	movlw	8
 28466  019B1A  6F9D               	movwf	157,b	;volatile
 28467                           
 28468                           ; BSR set to: 56
 28469                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 28470  019B1C  0E55               	movlw	85
 28471  019B1E  6ED4               	movwf	212,c	;volatile
 28472                           
 28473                           ; BSR set to: 56
 28474                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 28475  019B20  0EAA               	movlw	170
 28476  019B22  6ED4               	movwf	212,c	;volatile
 28477                           
 28478                           ; BSR set to: 56
 28479                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 28480  019B24  80D4               	bsf	212,0,c	;volatile
 28481                           
 28482                           ; BSR set to: 56
 28483                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 28484                           ;stkvar	_state @ sp[(-1)+0]
 28485  019B26  0EFF               	movlw	-1
 28486  019B28  B0E3               	btfsc	plusw1,0,c
 28487  019B2A  D002               	bra	u8805
 28488  019B2C  9ED2               	bcf	16338,7,c	;volatile
 28489  019B2E  D001               	bra	u8806
 28490  019B30                     u8805:
 28491  019B30  8ED2               	bsf	16338,7,c	;volatile
 28492  019B32                     u8806:
 28493                           
 28494                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 28495  019B32  0139               	movlb	57	; () banked
 28496  019B34  8782               	bsf	130,3,b	;volatile
 28497                           
 28498                           ; BSR set to: 57
 28499                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 28500  019B36  8382               	bsf	130,1,b	;volatile
 28501                           
 28502                           ; BSR set to: 57
 28503                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 28504  019B38  8182               	bsf	130,0,b	;volatile
 28505                           
 28506                           ; BSR set to: 57
 28507                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 28508  019B3A  8582               	bsf	130,2,b	;volatile
 28509                           
 28510                           ; BSR set to: 57
 28511                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 28512  019B3C  8786               	bsf	134,3,b	;volatile
 28513                           
 28514                           ; BSR set to: 57
 28515                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 28516  019B3E  8586               	bsf	134,2,b	;volatile
 28517                           
 28518                           ; BSR set to: 57
 28519                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1RXIP = 1;
 28520  019B40  8783               	bsf	131,3,b	;volatile
 28521                           
 28522                           ; BSR set to: 57
 28523                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR1bits.INT0IP = 1;
 28524  019B42  8181               	bsf	129,0,b	;volatile
 28525                           
 28526                           ; BSR set to: 57
 28527                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR5bits.INT1IP = 0;
 28528  019B44  9185               	bcf	133,0,b	;volatile
 28529                           
 28530                           ; BSR set to: 57
 28531                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR9bits.TMR6IP = 1;
 28532  019B46  8189               	bsf	137,0,b	;volatile
 28533                           
 28534                           ; BSR set to: 57
 28535                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR8bits.TMR5IP = 0;
 28536  019B48  9D88               	bcf	136,6,b	;volatile
 28537                           
 28538                           ; BSR set to: 57
 28539                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR6bits.TMR3IP = 0;
 28540  019B4A  9D86               	bcf	134,6,b	;volatile
 28541                           
 28542                           ; BSR set to: 57
 28543                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 28544  019B4C  8581               	bsf	129,2,b	;volatile
 28545                           
 28546                           ; BSR set to: 57
 28547                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 28548  019B4E  8781               	bsf	129,3,b	;volatile
 28549                           
 28550                           ; BSR set to: 57
 28551                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 28552  019B50  52E5               	movf	postdec1,f,c
 28553  019B52  0012               	return		;funcret
 28554  019B54                     __end_of_INTERRUPT_Initialize:
 28555                           	opt callstack 0
 28556                           
 28557 ;; *************** function _FVR_Initialize *****************
 28558 ;; Defined at:
 28559 ;;		line 58 in file "mcc_generated_files/fvr.c"
 28560 ;; Parameters:    Size  Location     Type
 28561 ;;		None
 28562 ;; Auto vars:     Size  Location     Type
 28563 ;;		None
 28564 ;; Return value:  Size  Location     Type
 28565 ;;                  1  [STACK] void 
 28566 ;; Registers used:
 28567 ;;		wreg, status,2
 28568 ;; Tracked objects:
 28569 ;;		On entry : 3F/39
 28570 ;;		On exit  : 3F/3E
 28571 ;;		Unchanged: 0/0
 28572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28576 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28577 ;;Total ram usage:        0 bytes
 28578 ;; Hardware stack levels used:    1
 28579 ;; Hardware stack levels required when called:   15
 28580 ;; This function calls:
 28581 ;;		Nothing
 28582 ;; This function is called by:
 28583 ;;		_SYSTEM_Initialize
 28584 ;; This function uses a reentrant model
 28585 ;;
 28586                           
 28587                           	psect	text123
 28588  01AC3E                     __ptext123:
 28589                           	opt callstack 0
 28590  01AC3E                     _FVR_Initialize:
 28591                           	opt callstack 14
 28592                           
 28593                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 28594                           
 28595                           ; BSR set to: 57
 28596                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28597                           ;incstack = 0
 28598  01AC3E  0EAF               	movlw	175
 28599  01AC40  013E               	movlb	62	; () banked
 28600  01AC42  6FC1               	movwf	193,b	;volatile
 28601                           
 28602                           ; BSR set to: 62
 28603                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 28604  01AC44  0012               	return		;funcret
 28605  01AC46                     __end_of_FVR_Initialize:
 28606                           	opt callstack 0
 28607                           
 28608 ;; *************** function _EXT_INT_Initialize *****************
 28609 ;; Defined at:
 28610 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 28611 ;; Parameters:    Size  Location     Type
 28612 ;;		None
 28613 ;; Auto vars:     Size  Location     Type
 28614 ;;		None
 28615 ;; Return value:  Size  Location     Type
 28616 ;;                  1  [STACK] void 
 28617 ;; Registers used:
 28618 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 28619 ;; Tracked objects:
 28620 ;;		On entry : 3F/39
 28621 ;;		On exit  : 3F/39
 28622 ;;		Unchanged: 0/0
 28623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28628 ;;Total ram usage:        0 bytes
 28629 ;; Hardware stack levels used:    1
 28630 ;; Hardware stack levels required when called:   16
 28631 ;; This function calls:
 28632 ;;		_INT0_SetInterruptHandler
 28633 ;;		_INT1_SetInterruptHandler
 28634 ;; This function is called by:
 28635 ;;		_SYSTEM_Initialize
 28636 ;; This function uses a reentrant model
 28637 ;;
 28638                           
 28639                           	psect	text124
 28640  01A3F0                     __ptext124:
 28641                           	opt callstack 0
 28642  01A3F0                     _EXT_INT_Initialize:
 28643                           	opt callstack 13
 28644                           
 28645                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 28646                           
 28647                           ; BSR set to: 62
 28648                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28649                           ;incstack = 0
 28650  01A3F0  0139               	movlb	57	; () banked
 28651  01A3F2  91A1               	bcf	161,0,b	;volatile
 28652                           
 28653                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 28654  01A3F4  90D2               	bcf	210,0,c	;volatile
 28655                           
 28656                           ; BSR set to: 57
 28657                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 28658  01A3F6  0E6A               	movlw	low _INT0_DefaultInterruptHandler
 28659  01A3F8  6EE6               	movwf	postinc1,c
 28660  01A3FA  0EAC               	movlw	high _INT0_DefaultInterruptHandler
 28661  01A3FC  6EE6               	movwf	postinc1,c
 28662  01A3FE  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 28663  01A400  6EE6               	movwf	postinc1,c
 28664  01A402  ECD7  F0D3         	call	_INT0_SetInterruptHandler	;wreg free
 28665                           
 28666                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 28667  01A406  0139               	movlb	57	; () banked
 28668  01A408  8191               	bsf	145,0,b	;volatile
 28669                           
 28670                           ; BSR set to: 57
 28671                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 28672  01A40A  91A5               	bcf	165,0,b	;volatile
 28673                           
 28674                           ; BSR set to: 57
 28675                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 28676  01A40C  92D2               	bcf	210,1,c	;volatile
 28677                           
 28678                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 28679  01A40E  0E66               	movlw	low _INT1_DefaultInterruptHandler
 28680  01A410  6EE6               	movwf	postinc1,c
 28681  01A412  0EAC               	movlw	high _INT1_DefaultInterruptHandler
 28682  01A414  6EE6               	movwf	postinc1,c
 28683  01A416  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 28684  01A418  6EE6               	movwf	postinc1,c
 28685  01A41A  ECC3  F0D3         	call	_INT1_SetInterruptHandler	;wreg free
 28686                           
 28687                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 28688  01A41E  0139               	movlb	57	; () banked
 28689  01A420  8195               	bsf	149,0,b	;volatile
 28690                           
 28691                           ; BSR set to: 57
 28692                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 28693  01A422  0012               	return		;funcret
 28694  01A424                     __end_of_EXT_INT_Initialize:
 28695                           	opt callstack 0
 28696                           
 28697 ;; *************** function _INT1_SetInterruptHandler *****************
 28698 ;; Defined at:
 28699 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 28700 ;; Parameters:    Size  Location     Type
 28701 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 28702 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 28703 ;; Auto vars:     Size  Location     Type
 28704 ;;		None
 28705 ;; Return value:  Size  Location     Type
 28706 ;;                  1  [STACK] void 
 28707 ;; Registers used:
 28708 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 28709 ;; Tracked objects:
 28710 ;;		On entry : 3F/39
 28711 ;;		On exit  : 0/0
 28712 ;;		Unchanged: 0/0
 28713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28718 ;;Total ram usage:        0 bytes
 28719 ;; Hardware stack levels used:    1
 28720 ;; Hardware stack levels required when called:   15
 28721 ;; This function calls:
 28722 ;;		Nothing
 28723 ;; This function is called by:
 28724 ;;		_EXT_INT_Initialize
 28725 ;;		_start_switch_handler
 28726 ;; This function uses a reentrant model
 28727 ;;
 28728                           
 28729                           	psect	text125
 28730  01A786                     __ptext125:
 28731                           	opt callstack 0
 28732  01A786                     _INT1_SetInterruptHandler:
 28733                           	opt callstack 14
 28734                           
 28735                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 28736                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 28737                           
 28738                           ; BSR set to: 57
 28739                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28740                           ;incstack = 0
 28741  01A786  50E1               	movf	fsr1l,w,c
 28742  01A788  0FFD               	addlw	-3
 28743  01A78A  6ED9               	movwf	fsr2l,c
 28744  01A78C  50E2               	movf	fsr1h,w,c
 28745  01A78E  6EDA               	movwf	fsr2h,c
 28746  01A790  0EFF               	movlw	255
 28747  01A792  22DA               	addwfc	fsr2h,f,c
 28748  01A794  006F FF78  F0B4    	movff	postinc2,_INT1_InterruptHandler
 28749  01A79A  006F FF78  F0B5    	movff	postinc2,_INT1_InterruptHandler+1
 28750  01A7A0  006F FF74  F0B6    	movff	postdec2,_INT1_InterruptHandler+2
 28751                           
 28752                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 28753  01A7A6  52E5               	movf	postdec1,f,c
 28754  01A7A8  52E5               	movf	postdec1,f,c
 28755  01A7AA  52E5               	movf	postdec1,f,c
 28756  01A7AC  0012               	return		;funcret
 28757  01A7AE                     __end_of_INT1_SetInterruptHandler:
 28758                           	opt callstack 0
 28759                           
 28760 ;; *************** function _INT0_SetInterruptHandler *****************
 28761 ;; Defined at:
 28762 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 28763 ;; Parameters:    Size  Location     Type
 28764 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 28765 ;;		 -> INT0_DefaultInterruptHandler(1), 
 28766 ;; Auto vars:     Size  Location     Type
 28767 ;;		None
 28768 ;; Return value:  Size  Location     Type
 28769 ;;                  1  [STACK] void 
 28770 ;; Registers used:
 28771 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 28772 ;; Tracked objects:
 28773 ;;		On entry : 3F/39
 28774 ;;		On exit  : 0/0
 28775 ;;		Unchanged: 0/0
 28776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28781 ;;Total ram usage:        0 bytes
 28782 ;; Hardware stack levels used:    1
 28783 ;; Hardware stack levels required when called:   15
 28784 ;; This function calls:
 28785 ;;		Nothing
 28786 ;; This function is called by:
 28787 ;;		_EXT_INT_Initialize
 28788 ;; This function uses a reentrant model
 28789 ;;
 28790                           
 28791                           	psect	text126
 28792  01A7AE                     __ptext126:
 28793                           	opt callstack 0
 28794  01A7AE                     _INT0_SetInterruptHandler:
 28795                           	opt callstack 13
 28796                           
 28797                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 28798                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 28799                           
 28800                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28801                           ;incstack = 0
 28802  01A7AE  50E1               	movf	fsr1l,w,c
 28803  01A7B0  0FFD               	addlw	-3
 28804  01A7B2  6ED9               	movwf	fsr2l,c
 28805  01A7B4  50E2               	movf	fsr1h,w,c
 28806  01A7B6  6EDA               	movwf	fsr2h,c
 28807  01A7B8  0EFF               	movlw	255
 28808  01A7BA  22DA               	addwfc	fsr2h,f,c
 28809  01A7BC  006F FF78  F0B7    	movff	postinc2,_INT0_InterruptHandler
 28810  01A7C2  006F FF78  F0B8    	movff	postinc2,_INT0_InterruptHandler+1
 28811  01A7C8  006F FF74  F0B9    	movff	postdec2,_INT0_InterruptHandler+2
 28812                           
 28813                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 28814  01A7CE  52E5               	movf	postdec1,f,c
 28815  01A7D0  52E5               	movf	postdec1,f,c
 28816  01A7D2  52E5               	movf	postdec1,f,c
 28817  01A7D4  0012               	return		;funcret
 28818  01A7D6                     __end_of_INT0_SetInterruptHandler:
 28819                           	opt callstack 0
 28820                           
 28821 ;; *************** function _DMA2_Initialize *****************
 28822 ;; Defined at:
 28823 ;;		line 61 in file "mcc_generated_files/dma2.c"
 28824 ;; Parameters:    Size  Location     Type
 28825 ;;		None
 28826 ;; Auto vars:     Size  Location     Type
 28827 ;;		None
 28828 ;; Return value:  Size  Location     Type
 28829 ;;                  1  [STACK] void 
 28830 ;; Registers used:
 28831 ;;		wreg, status,2
 28832 ;; Tracked objects:
 28833 ;;		On entry : 3F/3D
 28834 ;;		On exit  : 3F/3B
 28835 ;;		Unchanged: 0/0
 28836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28840 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28841 ;;Total ram usage:        0 bytes
 28842 ;; Hardware stack levels used:    1
 28843 ;; Hardware stack levels required when called:   15
 28844 ;; This function calls:
 28845 ;;		Nothing
 28846 ;; This function is called by:
 28847 ;;		_SYSTEM_Initialize
 28848 ;; This function uses a reentrant model
 28849 ;;
 28850                           
 28851                           	psect	text127
 28852  019D34                     __ptext127:
 28853                           	opt callstack 0
 28854  019D34                     _DMA2_Initialize:
 28855                           	opt callstack 14
 28856                           
 28857                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 28858                           
 28859                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28860                           ;incstack = 0
 28861  019D34  0E00               	movlw	0
 28862  019D36  013B               	movlb	59	; () banked
 28863  019D38  6FD9               	movwf	217,b	;volatile
 28864  019D3A  0E10               	movlw	16
 28865  019D3C  6FDA               	movwf	218,b	;volatile
 28866  019D3E  0E00               	movlw	0
 28867  019D40  6FDB               	movwf	219,b	;volatile
 28868                           
 28869                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 28870  019D42  0E3F               	movlw	63
 28871  019D44  6FD1               	movwf	209,b	;volatile
 28872  019D46  0EBB               	movlw	187
 28873  019D48  6FD0               	movwf	208,b	;volatile
 28874                           
 28875                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 28876  019D4A  0E03               	movlw	3
 28877  019D4C  6FDD               	movwf	221,b	;volatile
 28878                           
 28879                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 28880  019D4E  0E00               	movlw	0
 28881  019D50  6FD8               	movwf	216,b	;volatile
 28882  019D52  0E01               	movlw	1
 28883  019D54  6FD7               	movwf	215,b	;volatile
 28884                           
 28885                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 28886  019D56  0E00               	movlw	0
 28887  019D58  6FCF               	movwf	207,b	;volatile
 28888  019D5A  0E01               	movlw	1
 28889  019D5C  6FCE               	movwf	206,b	;volatile
 28890                           
 28891                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x1C;
 28892  019D5E  0E1C               	movlw	28
 28893  019D60  6FDF               	movwf	223,b	;volatile
 28894                           
 28895                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 28896  019D62  0E3D               	movlw	61
 28897  019D64  6FDE               	movwf	222,b	;volatile
 28898                           
 28899                           ; BSR set to: 59
 28900                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 28901  019D66  0139               	movlb	57	; () banked
 28902  019D68  97A5               	bcf	165,3,b	;volatile
 28903                           
 28904                           ; BSR set to: 57
 28905                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 28906  019D6A  95A5               	bcf	165,2,b	;volatile
 28907                           
 28908                           ; BSR set to: 57
 28909                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 28910  019D6C  9BA5               	bcf	165,5,b	;volatile
 28911                           
 28912                           ; BSR set to: 57
 28913                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 28914  019D6E  99A5               	bcf	165,4,b	;volatile
 28915                           
 28916                           ; BSR set to: 57
 28917                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 28918  019D70  9795               	bcf	149,3,b	;volatile
 28919                           
 28920                           ; BSR set to: 57
 28921                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 28922  019D72  9595               	bcf	149,2,b	;volatile
 28923                           
 28924                           ; BSR set to: 57
 28925                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 28926  019D74  9B95               	bcf	149,5,b	;volatile
 28927                           
 28928                           ; BSR set to: 57
 28929                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 28930  019D76  9995               	bcf	149,4,b	;volatile
 28931  019D78  9ED2               	bcf	16338,7,c	;# 
 28932  019D7A  0139               	banksel	14831	;# 
 28933  019D7C  0E55               	movlw	85	;# 
 28934  019D7E  6FEF               	movwf	14831,b	;# 
 28935  019D80  0EAA               	movlw	170	;# 
 28936  019D82  6FEF               	movwf	14831,b	;# 
 28937  019D84  81EF               	bsf	14831,0,b	;# 
 28938  019D86  8ED2               	bsf	16338,7,c	;# 
 28939                           
 28940                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 28941  019D88  013B               	movlb	59	; () banked
 28942  019D8A  6BDC               	clrf	220,b	;volatile
 28943                           
 28944                           ; BSR set to: 59
 28945                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 28946  019D8C  0012               	return		;funcret
 28947  019D8E                     __end_of_DMA2_Initialize:
 28948                           	opt callstack 0
 28949                           
 28950 ;; *************** function _DMA1_Initialize *****************
 28951 ;; Defined at:
 28952 ;;		line 86 in file "mcc_generated_files/dma1.c"
 28953 ;; Parameters:    Size  Location     Type
 28954 ;;		None
 28955 ;; Auto vars:     Size  Location     Type
 28956 ;;		None
 28957 ;; Return value:  Size  Location     Type
 28958 ;;                  1  [STACK] void 
 28959 ;; Registers used:
 28960 ;;		wreg, status,2
 28961 ;; Tracked objects:
 28962 ;;		On entry : 3F/3B
 28963 ;;		On exit  : 3F/3B
 28964 ;;		Unchanged: 0/0
 28965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28969 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28970 ;;Total ram usage:        0 bytes
 28971 ;; Hardware stack levels used:    1
 28972 ;; Hardware stack levels required when called:   15
 28973 ;; This function calls:
 28974 ;;		Nothing
 28975 ;; This function is called by:
 28976 ;;		_SYSTEM_Initialize
 28977 ;; This function uses a reentrant model
 28978 ;;
 28979                           
 28980                           	psect	text128
 28981  0199AE                     __ptext128:
 28982                           	opt callstack 0
 28983  0199AE                     _DMA1_Initialize:
 28984                           	opt callstack 14
 28985                           
 28986                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 28987                           
 28988                           ; BSR set to: 59
 28989                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28990                           ;incstack = 0
 28991  0199AE  0E00               	movlw	0
 28992  0199B0  013B               	movlb	59	; () banked
 28993  0199B2  6FF9               	movwf	249,b	;volatile
 28994  0199B4  0E10               	movlw	16
 28995  0199B6  6FFA               	movwf	250,b	;volatile
 28996  0199B8  0E00               	movlw	0
 28997  0199BA  6FFB               	movwf	251,b	;volatile
 28998                           
 28999                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 29000  0199BC  0E3D               	movlw	61
 29001  0199BE  6FF1               	movwf	241,b	;volatile
 29002  0199C0  0E11               	movlw	17
 29003  0199C2  6FF0               	movwf	240,b	;volatile
 29004                           
 29005                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 29006  0199C4  0E03               	movlw	3
 29007  0199C6  6FFD               	movwf	253,b	;volatile
 29008                           
 29009                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 29010  0199C8  0E00               	movlw	0
 29011  0199CA  6FF8               	movwf	248,b	;volatile
 29012  0199CC  0E01               	movlw	1
 29013  0199CE  6FF7               	movwf	247,b	;volatile
 29014                           
 29015                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 29016  0199D0  0E00               	movlw	0
 29017  0199D2  6FEF               	movwf	239,b	;volatile
 29018  0199D4  0E01               	movlw	1
 29019  0199D6  6FEE               	movwf	238,b	;volatile
 29020                           
 29021                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 29022  0199D8  0E15               	movlw	21
 29023  0199DA  6FFF               	movwf	255,b	;volatile
 29024                           
 29025                           ; BSR set to: 59
 29026                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 29027  0199DC  6BFE               	clrf	254,b	;volatile
 29028                           
 29029                           ; BSR set to: 59
 29030                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 29031  0199DE  0139               	movlb	57	; () banked
 29032  0199E0  93A2               	bcf	162,1,b	;volatile
 29033                           
 29034                           ; BSR set to: 57
 29035                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 29036  0199E2  91A2               	bcf	162,0,b	;volatile
 29037                           
 29038                           ; BSR set to: 57
 29039                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 29040  0199E4  97A2               	bcf	162,3,b	;volatile
 29041                           
 29042                           ; BSR set to: 57
 29043                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 29044  0199E6  95A2               	bcf	162,2,b	;volatile
 29045                           
 29046                           ; BSR set to: 57
 29047                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 29048  0199E8  8392               	bsf	146,1,b	;volatile
 29049                           
 29050                           ; BSR set to: 57
 29051                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 29052  0199EA  8192               	bsf	146,0,b	;volatile
 29053                           
 29054                           ; BSR set to: 57
 29055                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 29056  0199EC  8792               	bsf	146,3,b	;volatile
 29057                           
 29058                           ; BSR set to: 57
 29059                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 29060  0199EE  8592               	bsf	146,2,b	;volatile
 29061                           
 29062                           ; BSR set to: 57
 29063                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 29064  0199F0  6BF1               	clrf	241,b	;volatile
 29065                           
 29066                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 29067  0199F2  0E01               	movlw	1
 29068  0199F4  6FF2               	movwf	242,b	;volatile
 29069                           
 29070                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 29071  0199F6  0E04               	movlw	4
 29072  0199F8  6FF3               	movwf	243,b	;volatile
 29073                           
 29074                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 29075  0199FA  0E02               	movlw	2
 29076  0199FC  6FF4               	movwf	244,b	;volatile
 29077                           
 29078                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 29079  0199FE  0E03               	movlw	3
 29080  019A00  6FF7               	movwf	247,b	;volatile
 29081  019A02  9ED2               	bcf	16338,7,c	;# 
 29082  019A04  0139               	banksel	14831	;# 
 29083  019A06  0E55               	movlw	85	;# 
 29084  019A08  6FEF               	movwf	14831,b	;# 
 29085  019A0A  0EAA               	movlw	170	;# 
 29086  019A0C  6FEF               	movwf	14831,b	;# 
 29087  019A0E  81EF               	bsf	14831,0,b	;# 
 29088  019A10  8ED2               	bsf	16338,7,c	;# 
 29089                           
 29090                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 29091  019A12  013B               	movlb	59	; () banked
 29092  019A14  6BFC               	clrf	252,b	;volatile
 29093                           
 29094                           ; BSR set to: 59
 29095                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29096  019A16  0012               	return		;funcret
 29097  019A18                     __end_of_DMA1_Initialize:
 29098                           	opt callstack 0
 29099                           
 29100 ;; *************** function _CLKREF_Initialize *****************
 29101 ;; Defined at:
 29102 ;;		line 58 in file "mcc_generated_files/clkref.c"
 29103 ;; Parameters:    Size  Location     Type
 29104 ;;		None
 29105 ;; Auto vars:     Size  Location     Type
 29106 ;;		None
 29107 ;; Return value:  Size  Location     Type
 29108 ;;                  1  [STACK] void 
 29109 ;; Registers used:
 29110 ;;		wreg, status,2
 29111 ;; Tracked objects:
 29112 ;;		On entry : 3F/3B
 29113 ;;		On exit  : 3F/3C
 29114 ;;		Unchanged: 0/0
 29115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29119 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29120 ;;Total ram usage:        0 bytes
 29121 ;; Hardware stack levels used:    1
 29122 ;; Hardware stack levels required when called:   15
 29123 ;; This function calls:
 29124 ;;		Nothing
 29125 ;; This function is called by:
 29126 ;;		_SYSTEM_Initialize
 29127 ;; This function uses a reentrant model
 29128 ;;
 29129                           
 29130                           	psect	text129
 29131  01ABE6                     __ptext129:
 29132                           	opt callstack 0
 29133  01ABE6                     _CLKREF_Initialize:
 29134                           	opt callstack 14
 29135                           
 29136                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 29137                           
 29138                           ; BSR set to: 59
 29139                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29140                           ;incstack = 0
 29141  01ABE6  013C               	movlb	60	; () banked
 29142  01ABE8  6BE6               	clrf	230,b	;volatile
 29143                           
 29144                           ; BSR set to: 60
 29145                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 29146  01ABEA  0E94               	movlw	148
 29147  01ABEC  6FE5               	movwf	229,b	;volatile
 29148                           
 29149                           ; BSR set to: 60
 29150                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 29151  01ABEE  0012               	return		;funcret
 29152  01ABF0                     __end_of_CLKREF_Initialize:
 29153                           	opt callstack 0
 29154                           
 29155 ;; *************** function _ADCC_Initialize *****************
 29156 ;; Defined at:
 29157 ;;		line 65 in file "mcc_generated_files/adcc.c"
 29158 ;; Parameters:    Size  Location     Type
 29159 ;;		None
 29160 ;; Auto vars:     Size  Location     Type
 29161 ;;		None
 29162 ;; Return value:  Size  Location     Type
 29163 ;;                  1  [STACK] void 
 29164 ;; Registers used:
 29165 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 29166 ;; Tracked objects:
 29167 ;;		On entry : 3F/3E
 29168 ;;		On exit  : 0/0
 29169 ;;		Unchanged: 0/0
 29170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29174 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29175 ;;Total ram usage:        0 bytes
 29176 ;; Hardware stack levels used:    1
 29177 ;; Hardware stack levels required when called:   16
 29178 ;; This function calls:
 29179 ;;		_ADCC_SetADIInterruptHandler
 29180 ;;		_ADCC_SetADTIInterruptHandler
 29181 ;; This function is called by:
 29182 ;;		_SYSTEM_Initialize
 29183 ;; This function uses a reentrant model
 29184 ;;
 29185                           
 29186                           	psect	text130
 29187  019A18                     __ptext130:
 29188                           	opt callstack 0
 29189  019A18                     _ADCC_Initialize:
 29190                           	opt callstack 13
 29191                           
 29192                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 29193                           
 29194                           ; BSR set to: 60
 29195                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29196                           ;incstack = 0
 29197  019A18  013E               	movlb	62	; () banked
 29198  019A1A  6BDE               	clrf	222,b	;volatile
 29199                           
 29200                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 29201  019A1C  6BDF               	clrf	223,b	;volatile
 29202                           
 29203                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 29204  019A1E  6BE0               	clrf	224,b	;volatile
 29205                           
 29206                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 29207  019A20  6BE1               	clrf	225,b	;volatile
 29208                           
 29209                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 29210  019A22  6BE4               	clrf	228,b	;volatile
 29211                           
 29212                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 29213  019A24  6BE5               	clrf	229,b	;volatile
 29214                           
 29215                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 29216  019A26  6BEA               	clrf	234,b	;volatile
 29217                           
 29218                           ; BSR set to: 62
 29219                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 29220  019A28  0E40               	movlw	64
 29221  019A2A  6FEC               	movwf	236,b	;volatile
 29222                           
 29223                           ; BSR set to: 62
 29224                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 29225  019A2C  6BF1               	clrf	241,b	;volatile
 29226                           
 29227                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 29228  019A2E  0E20               	movlw	32
 29229  019A30  6FF3               	movwf	243,b	;volatile
 29230                           
 29231                           ; BSR set to: 62
 29232                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 29233  019A32  6BF4               	clrf	244,b	;volatile
 29234                           
 29235                           ; BSR set to: 62
 29236                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 29237  019A34  6BF5               	clrf	245,b	;volatile
 29238                           
 29239                           ; BSR set to: 62
 29240                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 29241  019A36  6BF6               	clrf	246,b	;volatile
 29242                           
 29243                           ; BSR set to: 62
 29244                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 29245  019A38  6BF7               	clrf	247,b	;volatile
 29246                           
 29247                           ; BSR set to: 62
 29248                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 29249  019A3A  6BF9               	clrf	249,b	;volatile
 29250                           
 29251                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 29252  019A3C  0E5B               	movlw	91
 29253  019A3E  6FFA               	movwf	250,b	;volatile
 29254                           
 29255                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 29256  019A40  0E27               	movlw	39
 29257  019A42  6FFB               	movwf	251,b	;volatile
 29258                           
 29259                           ; BSR set to: 62
 29260                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 29261  019A44  6BFC               	clrf	252,b	;volatile
 29262                           
 29263                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 29264  019A46  0E02               	movlw	2
 29265  019A48  6FFD               	movwf	253,b	;volatile
 29266                           
 29267                           ; BSR set to: 62
 29268                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 29269  019A4A  6BFE               	clrf	254,b	;volatile
 29270                           
 29271                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 29272  019A4C  0E07               	movlw	7
 29273  019A4E  6FFF               	movwf	255,b	;volatile
 29274                           
 29275                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 29276  019A50  0E84               	movlw	132
 29277  019A52  6FF8               	movwf	248,b	;volatile
 29278                           
 29279                           ; BSR set to: 62
 29280                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 29281  019A54  0139               	movlb	57	; () banked
 29282  019A56  95A1               	bcf	161,2,b	;volatile
 29283                           
 29284                           ; BSR set to: 57
 29285                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 29286  019A58  8591               	bsf	145,2,b	;volatile
 29287                           
 29288                           ; BSR set to: 57
 29289                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 29290  019A5A  0E6C               	movlw	low _ADCC_DefaultInterruptHandler
 29291  019A5C  6EE6               	movwf	postinc1,c
 29292  019A5E  0EAC               	movlw	high _ADCC_DefaultInterruptHandler
 29293  019A60  6EE6               	movwf	postinc1,c
 29294  019A62  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 29295  019A64  6EE6               	movwf	postinc1,c
 29296  019A66  ECFF  F0D3         	call	_ADCC_SetADIInterruptHandler	;wreg free
 29297                           
 29298                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 29299  019A6A  0139               	movlb	57	; () banked
 29300  019A6C  97A1               	bcf	161,3,b	;volatile
 29301                           
 29302                           ; BSR set to: 57
 29303                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 29304  019A6E  8791               	bsf	145,3,b	;volatile
 29305                           
 29306                           ; BSR set to: 57
 29307                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 29308  019A70  0E6C               	movlw	low _ADCC_DefaultInterruptHandler
 29309  019A72  6EE6               	movwf	postinc1,c
 29310  019A74  0EAC               	movlw	high _ADCC_DefaultInterruptHandler
 29311  019A76  6EE6               	movwf	postinc1,c
 29312  019A78  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 29313  019A7A  6EE6               	movwf	postinc1,c
 29314  019A7C  ECEB  F0D3         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 29315                           
 29316                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29317  019A80  0012               	return		;funcret
 29318  019A82                     __end_of_ADCC_Initialize:
 29319                           	opt callstack 0
 29320                           
 29321 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 29322 ;; Defined at:
 29323 ;;		line 336 in file "mcc_generated_files/adcc.c"
 29324 ;; Parameters:    Size  Location     Type
 29325 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29326 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 29327 ;; Auto vars:     Size  Location     Type
 29328 ;;		None
 29329 ;; Return value:  Size  Location     Type
 29330 ;;                  1  [STACK] void 
 29331 ;; Registers used:
 29332 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29333 ;; Tracked objects:
 29334 ;;		On entry : 0/0
 29335 ;;		On exit  : 0/0
 29336 ;;		Unchanged: 0/0
 29337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29342 ;;Total ram usage:        0 bytes
 29343 ;; Hardware stack levels used:    1
 29344 ;; Hardware stack levels required when called:   15
 29345 ;; This function calls:
 29346 ;;		Nothing
 29347 ;; This function is called by:
 29348 ;;		_ADCC_Initialize
 29349 ;;		_start_adc_scan
 29350 ;; This function uses a reentrant model
 29351 ;;
 29352                           
 29353                           	psect	text131
 29354  01A7D6                     __ptext131:
 29355                           	opt callstack 0
 29356  01A7D6                     _ADCC_SetADTIInterruptHandler:
 29357                           	opt callstack 14
 29358                           
 29359                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 29360                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29361                           
 29362                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29363                           ;incstack = 0
 29364  01A7D6  50E1               	movf	fsr1l,w,c
 29365  01A7D8  0FFD               	addlw	-3
 29366  01A7DA  6ED9               	movwf	fsr2l,c
 29367  01A7DC  50E2               	movf	fsr1h,w,c
 29368  01A7DE  6EDA               	movwf	fsr2h,c
 29369  01A7E0  0EFF               	movlw	255
 29370  01A7E2  22DA               	addwfc	fsr2h,f,c
 29371  01A7E4  006F FF78  F0A5    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 29372  01A7EA  006F FF78  F0A6    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 29373  01A7F0  006F FF74  F0A7    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 29374                           
 29375                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 29376  01A7F6  52E5               	movf	postdec1,f,c
 29377  01A7F8  52E5               	movf	postdec1,f,c
 29378  01A7FA  52E5               	movf	postdec1,f,c
 29379  01A7FC  0012               	return		;funcret
 29380  01A7FE                     __end_of_ADCC_SetADTIInterruptHandler:
 29381                           	opt callstack 0
 29382                           
 29383 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 29384 ;; Defined at:
 29385 ;;		line 323 in file "mcc_generated_files/adcc.c"
 29386 ;; Parameters:    Size  Location     Type
 29387 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29388 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 29389 ;; Auto vars:     Size  Location     Type
 29390 ;;		None
 29391 ;; Return value:  Size  Location     Type
 29392 ;;                  1  [STACK] void 
 29393 ;; Registers used:
 29394 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29395 ;; Tracked objects:
 29396 ;;		On entry : 6/0
 29397 ;;		On exit  : 0/0
 29398 ;;		Unchanged: 0/0
 29399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29404 ;;Total ram usage:        0 bytes
 29405 ;; Hardware stack levels used:    1
 29406 ;; Hardware stack levels required when called:   15
 29407 ;; This function calls:
 29408 ;;		Nothing
 29409 ;; This function is called by:
 29410 ;;		_ADCC_Initialize
 29411 ;;		_start_adc_scan
 29412 ;; This function uses a reentrant model
 29413 ;;
 29414                           
 29415                           	psect	text132
 29416  01A7FE                     __ptext132:
 29417                           	opt callstack 0
 29418  01A7FE                     _ADCC_SetADIInterruptHandler:
 29419                           	opt callstack 14
 29420                           
 29421                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 29422                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29423                           
 29424                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29425                           ;incstack = 0
 29426  01A7FE  50E1               	movf	fsr1l,w,c
 29427  01A800  0FFD               	addlw	-3
 29428  01A802  6ED9               	movwf	fsr2l,c
 29429  01A804  50E2               	movf	fsr1h,w,c
 29430  01A806  6EDA               	movwf	fsr2h,c
 29431  01A808  0EFF               	movlw	255
 29432  01A80A  22DA               	addwfc	fsr2h,f,c
 29433  01A80C  006F FF78  F0A8    	movff	postinc2,_ADCC_ADI_InterruptHandler
 29434  01A812  006F FF78  F0A9    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 29435  01A818  006F FF74  F0AA    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 29436                           
 29437                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 29438  01A81E  52E5               	movf	postdec1,f,c
 29439  01A820  52E5               	movf	postdec1,f,c
 29440  01A822  52E5               	movf	postdec1,f,c
 29441  01A824  0012               	return		;funcret
 29442  01A826                     __end_of_ADCC_SetADIInterruptHandler:
 29443                           	opt callstack 0
 29444                           
 29445 ;; *************** function _INT1_ISR *****************
 29446 ;; Defined at:
 29447 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 29448 ;; Parameters:    Size  Location     Type
 29449 ;;		None
 29450 ;; Auto vars:     Size  Location     Type
 29451 ;;		None
 29452 ;; Return value:  Size  Location     Type
 29453 ;;                  1    wreg      void 
 29454 ;; Registers used:
 29455 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 29456 ;; Tracked objects:
 29457 ;;		On entry : 0/0
 29458 ;;		On exit  : 0/0
 29459 ;;		Unchanged: 0/0
 29460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29463 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29464 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29465 ;;Total ram usage:        4 bytes
 29466 ;; Hardware stack levels used:    1
 29467 ;; Hardware stack levels required when called:    5
 29468 ;; This function calls:
 29469 ;;		_INT1_CallBack
 29470 ;; This function is called by:
 29471 ;;		Interrupt level 1
 29472 ;; This function uses a non-reentrant model
 29473 ;;
 29474                           
 29475                           	psect	text133
 29476  01A2A4                     __ptext133:
 29477                           	opt callstack 0
 29478  01A2A4                     _INT1_ISR:
 29479                           	opt callstack 12
 29480                           
 29481                           ;incstack = 0
 29482  01A2A4  006F FF60  F03E    	movff	status,??_INT1_ISR
 29483  01A2AA  0060  F004  F03F   	movff	btemp,??_INT1_ISR+1
 29484  01A2B0  0060  F02C  F040   	movff	btemp+10,??_INT1_ISR+2
 29485  01A2B6  0060  F030  F041   	movff	btemp+11,??_INT1_ISR+3
 29486  01A2BC  EE16  F061         	lfsr	1,___intlo_sp
 29487                           
 29488                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 29489  01A2C0  0139               	movlb	57	; () banked
 29490  01A2C2  91A5               	bcf	165,0,b	;volatile
 29491                           
 29492                           ; BSR set to: 57
 29493                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 29494  01A2C4  EC74  F0D4         	call	_INT1_CallBack	;wreg free
 29495  01A2C8  0060  F104  F00C   	movff	??_INT1_ISR+3,btemp+11
 29496  01A2CE  0060  F100  F00B   	movff	??_INT1_ISR+2,btemp+10
 29497  01A2D4  0060  F0FC  F001   	movff	??_INT1_ISR+1,btemp
 29498  01A2DA  0060  F0FB  FFD8   	movff	??_INT1_ISR,status
 29499  01A2E0  0011               	retfie		f
 29500  01A2E2                     __end_of_INT1_ISR:
 29501                           	opt callstack 0
 29502                           
 29503 ;; *************** function _INT1_CallBack *****************
 29504 ;; Defined at:
 29505 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 29506 ;; Parameters:    Size  Location     Type
 29507 ;;		None
 29508 ;; Auto vars:     Size  Location     Type
 29509 ;;		None
 29510 ;; Return value:  Size  Location     Type
 29511 ;;                  1  [STACK] void 
 29512 ;; Registers used:
 29513 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 29514 ;; Tracked objects:
 29515 ;;		On entry : 3F/39
 29516 ;;		On exit  : 0/0
 29517 ;;		Unchanged: 0/0
 29518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29522 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29523 ;;Total ram usage:        0 bytes
 29524 ;; Hardware stack levels used:    1
 29525 ;; Hardware stack levels required when called:    4
 29526 ;; This function calls:
 29527 ;;		Absolute function
 29528 ;;		_INT1_DefaultInterruptHandler
 29529 ;;		_switch_handler
 29530 ;; This function is called by:
 29531 ;;		_INT1_ISR
 29532 ;; This function uses a reentrant model
 29533 ;;
 29534                           
 29535                           	psect	text134
 29536  01A8E8                     __ptext134:
 29537                           	opt callstack 0
 29538  01A8E8                     _INT1_CallBack:
 29539                           	opt callstack 12
 29540                           
 29541                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 29542                           
 29543                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29544                           ;incstack = 0
 29545  01A8E8  0100               	movlb	0	; () banked
 29546  01A8EA  51B4               	movf	_INT1_InterruptHandler& (0+255),w,b
 29547  01A8EC  11B5               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 29548  01A8EE  11B6               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 29549  01A8F0  B4D8               	btfsc	status,2,c
 29550  01A8F2  0012               	return	
 29551                           
 29552                           ; BSR set to: 0
 29553                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 29554  01A8F4  D801               	call	u934_28
 29555  01A8F6  0012               	return	
 29556  01A8F8                     u934_28:
 29557  01A8F8  0005               	push	
 29558  01A8FA  6EFA               	movwf	pclath,c
 29559  01A8FC  51B4               	movf	_INT1_InterruptHandler& (0+255),w,b
 29560  01A8FE  6EFD               	movwf	tosl,c
 29561  01A900  51B5               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 29562  01A902  6EFE               	movwf	tosh,c
 29563  01A904  51B6               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 29564  01A906  6EFF               	movwf	tosu,c
 29565  01A908  50FA               	movf	pclath,w,c
 29566  01A90A  0012               	return		;indir
 29567  01A90C                     __end_of_INT1_CallBack:
 29568                           	opt callstack 0
 29569                           
 29570 ;; *************** function _INT1_DefaultInterruptHandler *****************
 29571 ;; Defined at:
 29572 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 29573 ;; Parameters:    Size  Location     Type
 29574 ;;		None
 29575 ;; Auto vars:     Size  Location     Type
 29576 ;;		None
 29577 ;; Return value:  Size  Location     Type
 29578 ;;                  1  [STACK] void 
 29579 ;; Registers used:
 29580 ;;		None
 29581 ;; Tracked objects:
 29582 ;;		On entry : 3F/0
 29583 ;;		On exit  : 0/0
 29584 ;;		Unchanged: 0/0
 29585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29589 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29590 ;;Total ram usage:        0 bytes
 29591 ;; Hardware stack levels used:    1
 29592 ;; Hardware stack levels required when called:    3
 29593 ;; This function calls:
 29594 ;;		Nothing
 29595 ;; This function is called by:
 29596 ;;		_EXT_INT_Initialize
 29597 ;;		_INT1_CallBack
 29598 ;; This function uses a reentrant model
 29599 ;;
 29600                           
 29601                           	psect	text135
 29602  01AC66                     __ptext135:
 29603                           	opt callstack 0
 29604  01AC66                     _INT1_DefaultInterruptHandler:
 29605                           	opt callstack 12
 29606                           
 29607                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 29608                           
 29609                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29610                           ;incstack = 0
 29611  01AC66  0012               	return		;funcret
 29612  01AC68                     __end_of_INT1_DefaultInterruptHandler:
 29613                           	opt callstack 0
 29614                           
 29615 ;; *************** function _switch_handler *****************
 29616 ;; Defined at:
 29617 ;;		line 58 in file "dio.c"
 29618 ;; Parameters:    Size  Location     Type
 29619 ;;		None
 29620 ;; Auto vars:     Size  Location     Type
 29621 ;;  i               1  [STACK] unsigned char 
 29622 ;;  sw_value        1  [STACK] unsigned char 
 29623 ;; Return value:  Size  Location     Type
 29624 ;;                  1  [STACK] void 
 29625 ;; Registers used:
 29626 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 29627 ;; Tracked objects:
 29628 ;;		On entry : 3F/0
 29629 ;;		On exit  : 0/0
 29630 ;;		Unchanged: 0/0
 29631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29636 ;;Total ram usage:        0 bytes
 29637 ;; Hardware stack levels used:    1
 29638 ;; Hardware stack levels required when called:    3
 29639 ;; This function calls:
 29640 ;;		Nothing
 29641 ;; This function is called by:
 29642 ;;		_start_switch_handler
 29643 ;;		_INT1_CallBack
 29644 ;; This function uses a reentrant model
 29645 ;;
 29646                           
 29647                           	psect	text136
 29648  0182B4                     __ptext136:
 29649                           	opt callstack 0
 29650  0182B4                     _switch_handler:
 29651                           	opt callstack 0
 29652                           
 29653                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29654  0182B4  52E6               	movf	postinc1,f,c
 29655  0182B6  52E6               	movf	postinc1,f,c
 29656                           
 29657                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 29658                           ;stkvar	_i @ sp[(-2)+0]
 29659                           
 29660                           ;incstack = 0
 29661  0182B8  0EFE               	movlw	-2
 29662  0182BA  6AE3               	clrf	plusw1,c
 29663  0182BC  9EBD               	bcf	189,7,c	;volatile
 29664                           
 29665                           ;dio.c: 72:  __nop();
 29666  0182BE  F000               	nop	
 29667                           
 29668                           ;dio.c: 73:  __nop();
 29669  0182C0  F000               	nop	
 29670                           
 29671                           ;dio.c: 74:  __nop();
 29672  0182C2  F000               	nop	
 29673  0182C4  D019               	goto	l9932
 29674  0182C6                     l9920:
 29675                           
 29676                           ;dio.c: 79:    sw_value = PORTFbits.RF3;
 29677  0182C6  A6CF               	btfss	207,3,c	;volatile
 29678  0182C8  D011               	goto	u910_20
 29679  0182CA  D00D               	goto	u910_21
 29680  0182CC                     u907_28:
 29681                           
 29682                           ;stkvar	_sw_value @ sp[(-2)+1]
 29683  0182CC  0EFF               	movlw	-1
 29684  0182CE  0060  F033  FFE3   	movff	btemp+11,plusw1
 29685                           
 29686                           ;dio.c: 80:    break;
 29687  0182D4  D027               	goto	l9934
 29688  0182D6                     l9922:
 29689                           
 29690                           ;dio.c: 82:    sw_value = PORTFbits.RF2;
 29691  0182D6  A4CF               	btfss	207,2,c	;volatile
 29692  0182D8  D009               	goto	u910_20
 29693  0182DA  D005               	goto	u910_21
 29694  0182DC                     l9924:
 29695                           
 29696                           ;dio.c: 85:    sw_value = PORTFbits.RF1;
 29697  0182DC  A2CF               	btfss	207,1,c	;volatile
 29698  0182DE  D006               	goto	u910_20
 29699  0182E0  D002               	goto	u910_21
 29700  0182E2                     l9926:
 29701                           
 29702                           ;dio.c: 88:    sw_value = PORTFbits.RF0;
 29703  0182E2  A0CF               	btfss	207,0,c	;volatile
 29704  0182E4  D003               	goto	u910_20
 29705  0182E6                     u910_21:
 29706  0182E6  6A0C               	clrf	(btemp+11)^0,c
 29707  0182E8  2A0C               	incf	(btemp+11)^0,f,c
 29708  0182EA  D7F0               	goto	u907_28
 29709  0182EC                     u910_20:
 29710  0182EC  6A0C               	clrf	(btemp+11)^0,c
 29711  0182EE  D7EE               	goto	u907_28
 29712  0182F0                     l9928:
 29713                           
 29714                           ;dio.c: 91:    sw_value = 1;
 29715                           ;stkvar	_sw_value @ sp[(-2)+1]
 29716  0182F0  0EFF               	movlw	-1
 29717  0182F2  6AE3               	clrf	plusw1,c
 29718  0182F4  2AE3               	incf	plusw1,f,c
 29719                           
 29720                           ;dio.c: 92:    break;
 29721  0182F6  D016               	goto	l9934
 29722  0182F8                     l9932:
 29723                           
 29724                           ;stkvar	_i @ sp[(-2)+0]
 29725  0182F8  0EFE               	movlw	-2
 29726  0182FA  50E3               	movf	plusw1,w,c
 29727  0182FC  6E0B               	movwf	(btemp+10)^0,c
 29728  0182FE  6A0C               	clrf	(btemp+11)^0,c
 29729                           
 29730                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 29731                           ; Switch size 1, requested type "simple"
 29732                           ; Number of cases is 1, Range of values is 0 to 0
 29733                           ; switch strategies available:
 29734                           ; Name         Instructions Cycles
 29735                           ; simple_byte            4     3 (average)
 29736                           ;	Chosen strategy is simple_byte
 29737  018300  500C               	movf	(btemp+11)^0,w,c
 29738  018302  0A00               	xorlw	0	; case 0
 29739  018304  A4D8               	btfss	status,2,c
 29740  018306  D7F4               	goto	l9928
 29741                           
 29742                           ; Switch size 1, requested type "simple"
 29743                           ; Number of cases is 4, Range of values is 0 to 3
 29744                           ; switch strategies available:
 29745                           ; Name         Instructions Cycles
 29746                           ; simple_byte           13     7 (average)
 29747                           ;	Chosen strategy is simple_byte
 29748  018308  500B               	movf	(btemp+10)^0,w,c
 29749  01830A  0A00               	xorlw	0	; case 0
 29750  01830C  B4D8               	btfsc	status,2,c
 29751  01830E  D7E9               	goto	l9926
 29752  018310  0A01               	xorlw	1	; case 1
 29753  018312  B4D8               	btfsc	status,2,c
 29754  018314  D7E3               	goto	l9924
 29755  018316  0A03               	xorlw	3	; case 2
 29756  018318  B4D8               	btfsc	status,2,c
 29757  01831A  D7DD               	goto	l9922
 29758  01831C  0A01               	xorlw	1	; case 3
 29759  01831E  B4D8               	btfsc	status,2,c
 29760  018320  D7D2               	goto	l9920
 29761  018322  D7E6               	goto	l9928
 29762  018324                     l9934:
 29763                           
 29764                           ;dio.c: 96:   if (sw_value) {
 29765                           ;stkvar	_sw_value @ sp[(-2)+1]
 29766  018324  0EFF               	movlw	-1
 29767  018326  50E3               	movf	plusw1,w,c
 29768  018328  B4D8               	btfsc	status,2,c
 29769  01832A  D018               	goto	l9940
 29770                           
 29771                           ;dio.c: 97:    if (S.button[i].sw == SW_ON) {
 29772                           ;stkvar	_i @ sp[(-2)+0]
 29773  01832C  0EFE               	movlw	-2
 29774  01832E  50E3               	movf	plusw1,w,c
 29775  018330  0D05               	mullw	5
 29776  018332  0EBC               	movlw	low _S
 29777  018334  24F3               	addwf	243,w,c
 29778  018336  6ED9               	movwf	fsr2l,c
 29779  018338  0E02               	movlw	high _S
 29780  01833A  20F4               	addwfc	prodh,w,c
 29781  01833C  6EDA               	movwf	fsr2h,c
 29782  01833E  04DE               	decf	postinc2,w,c
 29783  018340  A4D8               	btfss	status,2,c
 29784  018342  D049               	goto	l9948
 29785                           
 29786                           ;dio.c: 98:     S.button[i].sw = SW_OFF;
 29787                           ;stkvar	_i @ sp[(-2)+0]
 29788  018344  0EFE               	movlw	-2
 29789  018346  50E3               	movf	plusw1,w,c
 29790  018348  0D05               	mullw	5
 29791  01834A  0EBC               	movlw	low _S
 29792  01834C  24F3               	addwf	243,w,c
 29793  01834E  6ED9               	movwf	fsr2l,c
 29794  018350  0E02               	movlw	high _S
 29795  018352  20F4               	addwfc	prodh,w,c
 29796  018354  6EDA               	movwf	fsr2h,c
 29797  018356  0E00               	movlw	0
 29798  018358  6EDF               	movwf	indf2,c
 29799  01835A  D03D               	goto	l9948
 29800  01835C                     l9940:
 29801                           
 29802                           ;dio.c: 101:    if (S.button[i].sw == SW_OFF) {
 29803                           ;stkvar	_i @ sp[(-2)+0]
 29804  01835C  0EFE               	movlw	-2
 29805  01835E  50E3               	movf	plusw1,w,c
 29806  018360  0D05               	mullw	5
 29807  018362  0EBC               	movlw	low _S
 29808  018364  24F3               	addwf	243,w,c
 29809  018366  6ED9               	movwf	fsr2l,c
 29810  018368  0E02               	movlw	high _S
 29811  01836A  20F4               	addwfc	prodh,w,c
 29812  01836C  6EDA               	movwf	fsr2h,c
 29813  01836E  50DF               	movf	indf2,w,c
 29814  018370  A4D8               	btfss	status,2,c
 29815  018372  D031               	goto	l9948
 29816                           
 29817                           ;dio.c: 102:     S.button[i].sw = SW_ON;
 29818                           ;stkvar	_i @ sp[(-2)+0]
 29819  018374  0EFE               	movlw	-2
 29820  018376  50E3               	movf	plusw1,w,c
 29821  018378  0D05               	mullw	5
 29822  01837A  0EBC               	movlw	low _S
 29823  01837C  24F3               	addwf	243,w,c
 29824  01837E  6ED9               	movwf	fsr2l,c
 29825  018380  0E02               	movlw	high _S
 29826  018382  20F4               	addwfc	prodh,w,c
 29827  018384  6EDA               	movwf	fsr2h,c
 29828  018386  0E01               	movlw	1
 29829  018388  6EDF               	movwf	indf2,c
 29830                           
 29831                           ;dio.c: 103:     S.button[i].count = V.timerint_count;
 29832  01838A  EE20  F2B8         	lfsr	2,_V+184	;volatile
 29833                           
 29834                           ;stkvar	_i @ sp[(-2)+0]
 29835  01838E  0EFE               	movlw	-2
 29836  018390  50E3               	movf	plusw1,w,c
 29837  018392  0D05               	mullw	5
 29838  018394  0EBD               	movlw	low (_S+1)
 29839  018396  24F3               	addwf	243,w,c
 29840  018398  6EE9               	movwf	fsr0l,c
 29841  01839A  0E02               	movlw	high (_S+1)
 29842  01839C  20F4               	addwfc	prodh,w,c
 29843  01839E  6EEA               	movwf	fsr0h,c
 29844  0183A0  006F FF7B FFEE     	movff	postinc2,postinc0
 29845  0183A6  006F FF7B FFEE     	movff	postinc2,postinc0
 29846  0183AC  006F FF7B FFEE     	movff	postinc2,postinc0
 29847  0183B2  006F FF7B FFEE     	movff	postinc2,postinc0
 29848                           
 29849                           ;dio.c: 104:     S.sw_bitmap |= 1 << i;
 29850                           ;stkvar	_i @ sp[(-2)+0]
 29851  0183B8  0EFE               	movlw	-2
 29852  0183BA  006F FF8C  F00C    	movff	plusw1,btemp+11
 29853  0183C0  0E01               	movlw	1
 29854  0183C2  6E0B               	movwf	(btemp+10)^0,c
 29855  0183C4  2A0C               	incf	(btemp+11)^0,f,c
 29856  0183C6  D002               	goto	u914_24
 29857  0183C8                     u914_25:
 29858  0183C8  90D8               	bcf	status,0,c
 29859  0183CA  360B               	rlcf	(btemp+10)^0,f,c
 29860  0183CC                     u914_24:
 29861  0183CC  2E0C               	decfsz	(btemp+11)^0,f,c
 29862  0183CE  D7FC               	goto	u914_25
 29863  0183D0  500B               	movf	(btemp+10)^0,w,c
 29864  0183D2  0102               	movlb	2	; () banked
 29865  0183D4  13E4               	iorwf	(_S+40)& (0+255),f,b	;volatile
 29866  0183D6                     l9948:
 29867                           
 29868                           ;dio.c: 107:  } while (++i < 4);
 29869                           ;stkvar	_i @ sp[(-2)+0]
 29870  0183D6  0EFE               	movlw	-2
 29871  0183D8  2AE3               	incf	plusw1,f,c
 29872  0183DA  0EFE               	movlw	-2
 29873  0183DC  006F FF8C  F001    	movff	plusw1,btemp
 29874  0183E2  0E03               	movlw	3
 29875  0183E4  6401               	cpfsgt	btemp^0,c
 29876  0183E6  D788               	goto	l9932
 29877                           
 29878                           ;dio.c: 116:  do { LATDbits.LATD7 = 1; } while(0);
 29879  0183E8  8EBD               	bsf	189,7,c	;volatile
 29880                           
 29881                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 29882  0183EA  52E5               	movf	postdec1,f,c
 29883  0183EC  52E5               	movf	postdec1,f,c
 29884  0183EE  0012               	return		;funcret
 29885  0183F0                     __end_of_switch_handler:
 29886                           	opt callstack 0
 29887                           
 29888 ;; *************** function _TMR5_ISR *****************
 29889 ;; Defined at:
 29890 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 29891 ;; Parameters:    Size  Location     Type
 29892 ;;		None
 29893 ;; Auto vars:     Size  Location     Type
 29894 ;;		None
 29895 ;; Return value:  Size  Location     Type
 29896 ;;                  1    wreg      void 
 29897 ;; Registers used:
 29898 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 29899 ;; Tracked objects:
 29900 ;;		On entry : 0/0
 29901 ;;		On exit  : 0/0
 29902 ;;		Unchanged: 0/0
 29903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29906 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29907 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29908 ;;Total ram usage:        4 bytes
 29909 ;; Hardware stack levels used:    1
 29910 ;; Hardware stack levels required when called:    5
 29911 ;; This function calls:
 29912 ;;		_TMR5_CallBack
 29913 ;;		_TMR5_WriteTimer
 29914 ;; This function is called by:
 29915 ;;		Interrupt level 1
 29916 ;; This function uses a non-reentrant model
 29917 ;;
 29918                           
 29919                           	psect	text137
 29920  019D90                     __ptext137:
 29921                           	opt callstack 0
 29922  019D90                     _TMR5_ISR:
 29923                           	opt callstack 12
 29924                           
 29925                           ;incstack = 0
 29926  019D90  006F FF60  F044    	movff	status,??_TMR5_ISR+2
 29927  019D96  0060  F030  F045   	movff	btemp+11,??_TMR5_ISR+3
 29928  019D9C  EE16  F061         	lfsr	1,___intlo_sp
 29929                           
 29930                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 29931  019DA0  0139               	movlb	57	; () banked
 29932  019DA2  9DA8               	bcf	168,6,b	;volatile
 29933                           
 29934                           ; BSR set to: 57
 29935                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 29936  019DA4  0060  F0AF  FFE6   	movff	_timer5ReloadVal,postinc1
 29937  019DAA  0060  F0B3  FFE6   	movff	_timer5ReloadVal+1,postinc1
 29938  019DB0  EC12  F0D1         	call	_TMR5_WriteTimer	;wreg free
 29939                           
 29940                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 29941  019DB4  0102               	movlb	2	; () banked
 29942  019DB6  51A9               	movf	(_V+169)& (0+255),w,b	;volatile
 29943  019DB8  6E42               	movwf	??_TMR5_ISR^0,c
 29944  019DBA  6A43               	clrf	(??_TMR5_ISR+1)^0,c
 29945  019DBC  0E05               	movlw	5
 29946  019DBE  2642               	addwf	??_TMR5_ISR^0,f,c
 29947  019DC0  0E00               	movlw	0
 29948  019DC2  2243               	addwfc	(??_TMR5_ISR+1)^0,f,c
 29949  019DC4  4A29               	infsnz	TMR5_ISR@CountCallBack^0,f,c	;volatile
 29950  019DC6  2A2A               	incf	(TMR5_ISR@CountCallBack+1)^0,f,c	;volatile
 29951  019DC8  5042               	movf	??_TMR5_ISR^0,w,c
 29952  019DCA  5C29               	subwf	TMR5_ISR@CountCallBack^0,w,c	;volatile
 29953  019DCC  5043               	movf	(??_TMR5_ISR+1)^0,w,c
 29954  019DCE  582A               	subwfb	(TMR5_ISR@CountCallBack+1)^0,w,c	;volatile
 29955  019DD0  A0D8               	btfss	status,0,c
 29956  019DD2  D004               	goto	i1l1017
 29957                           
 29958                           ; BSR set to: 2
 29959                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 29960  019DD4  EC86  F0D4         	call	_TMR5_CallBack	;wreg free
 29961                           
 29962                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 29963  019DD8  6A29               	clrf	TMR5_ISR@CountCallBack^0,c	;volatile
 29964  019DDA  6A2A               	clrf	(TMR5_ISR@CountCallBack+1)^0,c	;volatile
 29965  019DDC                     i1l1017:
 29966  019DDC  0060  F114  F00C   	movff	??_TMR5_ISR+3,btemp+11
 29967  019DE2  0060  F113  FFD8   	movff	??_TMR5_ISR+2,status
 29968  019DE8  0011               	retfie		f
 29969  019DEA                     __end_of_TMR5_ISR:
 29970                           	opt callstack 0
 29971                           
 29972 ;; *************** function _TMR5_WriteTimer *****************
 29973 ;; Defined at:
 29974 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 29975 ;; Parameters:    Size  Location     Type
 29976 ;;  timerVal        2  [STACK] unsigned short 
 29977 ;; Auto vars:     Size  Location     Type
 29978 ;;		None
 29979 ;; Return value:  Size  Location     Type
 29980 ;;                  1  [STACK] void 
 29981 ;; Registers used:
 29982 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 29983 ;; Tracked objects:
 29984 ;;		On entry : 3F/39
 29985 ;;		On exit  : 0/0
 29986 ;;		Unchanged: 0/0
 29987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29991 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29992 ;;Total ram usage:        0 bytes
 29993 ;; Hardware stack levels used:    1
 29994 ;; Hardware stack levels required when called:    3
 29995 ;; This function calls:
 29996 ;;		Nothing
 29997 ;; This function is called by:
 29998 ;;		_TMR5_ISR
 29999 ;; This function uses a reentrant model
 30000 ;;
 30001                           
 30002                           	psect	text138
 30003  01A224                     __ptext138:
 30004                           	opt callstack 0
 30005  01A224                     _TMR5_WriteTimer:
 30006                           	opt callstack 13
 30007                           
 30008                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 30009                           
 30010                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30011                           ;incstack = 0
 30012  01A224  A49A               	btfss	154,2,c	;volatile
 30013  01A226  D00F               	goto	l10130
 30014                           
 30015                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 30016  01A228  909A               	bcf	154,0,c	;volatile
 30017                           
 30018                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 30019                           ;stkvar	_timerVal @ sp[(0)+-2]
 30020  01A22A  0EFF               	movlw	255
 30021  01A22C  24E1               	addwf	fsr1l,w,c
 30022  01A22E  6ED9               	movwf	fsr2l,c
 30023  01A230  0EFF               	movlw	255
 30024  01A232  20E2               	addwfc	fsr1h,w,c
 30025  01A234  6EDA               	movwf	fsr2h,c
 30026  01A236  50DF               	movf	indf2,w,c
 30027  01A238  6E99               	movwf	153,c	;volatile
 30028                           
 30029                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 30030                           ;stkvar	_timerVal @ sp[(0)+-2]
 30031  01A23A  0EFE               	movlw	-2
 30032  01A23C  006F FF8F FF98     	movff	plusw1,16280	;volatile
 30033                           
 30034                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 30035  01A242  809A               	bsf	154,0,c	;volatile
 30036                           
 30037                           ;mcc_generated_files/tmr5.c: 142:  } else {
 30038  01A244  D00C               	goto	l1000
 30039  01A246                     l10130:
 30040                           
 30041                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 30042                           ;stkvar	_timerVal @ sp[(0)+-2]
 30043  01A246  0EFF               	movlw	255
 30044  01A248  24E1               	addwf	fsr1l,w,c
 30045  01A24A  6ED9               	movwf	fsr2l,c
 30046  01A24C  0EFF               	movlw	255
 30047  01A24E  20E2               	addwfc	fsr1h,w,c
 30048  01A250  6EDA               	movwf	fsr2h,c
 30049  01A252  50DF               	movf	indf2,w,c
 30050  01A254  6E99               	movwf	153,c	;volatile
 30051                           
 30052                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 30053                           ;stkvar	_timerVal @ sp[(0)+-2]
 30054  01A256  0EFE               	movlw	-2
 30055  01A258  006F FF8F FF98     	movff	plusw1,16280	;volatile
 30056  01A25E                     l1000:
 30057                           
 30058                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 30059  01A25E  52E5               	movf	postdec1,f,c
 30060  01A260  52E5               	movf	postdec1,f,c
 30061  01A262  0012               	return		;funcret
 30062  01A264                     __end_of_TMR5_WriteTimer:
 30063                           	opt callstack 0
 30064                           
 30065 ;; *************** function _TMR5_CallBack *****************
 30066 ;; Defined at:
 30067 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 30068 ;; Parameters:    Size  Location     Type
 30069 ;;		None
 30070 ;; Auto vars:     Size  Location     Type
 30071 ;;		None
 30072 ;; Return value:  Size  Location     Type
 30073 ;;                  1  [STACK] void 
 30074 ;; Registers used:
 30075 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 30076 ;; Tracked objects:
 30077 ;;		On entry : 3F/2
 30078 ;;		On exit  : 0/0
 30079 ;;		Unchanged: 0/0
 30080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30085 ;;Total ram usage:        0 bytes
 30086 ;; Hardware stack levels used:    1
 30087 ;; Hardware stack levels required when called:    4
 30088 ;; This function calls:
 30089 ;;		Absolute function
 30090 ;;		_TMR5_DefaultInterruptHandler
 30091 ;; This function is called by:
 30092 ;;		_TMR5_ISR
 30093 ;; This function uses a reentrant model
 30094 ;;
 30095                           
 30096                           	psect	text139
 30097  01A90C                     __ptext139:
 30098                           	opt callstack 0
 30099  01A90C                     _TMR5_CallBack:
 30100                           	opt callstack 12
 30101                           
 30102                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 30103                           
 30104                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30105                           ;incstack = 0
 30106  01A90C  0100               	movlb	0	; () banked
 30107  01A90E  519F               	movf	_TMR5_InterruptHandler& (0+255),w,b
 30108  01A910  11A0               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 30109  01A912  11A1               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 30110  01A914  B4D8               	btfsc	status,2,c
 30111  01A916  0012               	return	
 30112                           
 30113                           ; BSR set to: 0
 30114                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 30115  01A918  D801               	call	u943_28
 30116  01A91A  0012               	return	
 30117  01A91C                     u943_28:
 30118  01A91C  0005               	push	
 30119  01A91E  6EFA               	movwf	pclath,c
 30120  01A920  519F               	movf	_TMR5_InterruptHandler& (0+255),w,b
 30121  01A922  6EFD               	movwf	tosl,c
 30122  01A924  51A0               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 30123  01A926  6EFE               	movwf	tosh,c
 30124  01A928  51A1               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 30125  01A92A  6EFF               	movwf	tosu,c
 30126  01A92C  50FA               	movf	pclath,w,c
 30127  01A92E  0012               	return		;indir
 30128  01A930                     __end_of_TMR5_CallBack:
 30129                           	opt callstack 0
 30130                           
 30131 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 30132 ;; Defined at:
 30133 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 30134 ;; Parameters:    Size  Location     Type
 30135 ;;		None
 30136 ;; Auto vars:     Size  Location     Type
 30137 ;;		None
 30138 ;; Return value:  Size  Location     Type
 30139 ;;                  1  [STACK] void 
 30140 ;; Registers used:
 30141 ;;		wreg, status,2, status,0, btemp+11
 30142 ;; Tracked objects:
 30143 ;;		On entry : 3F/0
 30144 ;;		On exit  : 3F/2
 30145 ;;		Unchanged: 0/0
 30146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30151 ;;Total ram usage:        0 bytes
 30152 ;; Hardware stack levels used:    1
 30153 ;; Hardware stack levels required when called:    3
 30154 ;; This function calls:
 30155 ;;		Nothing
 30156 ;; This function is called by:
 30157 ;;		_TMR5_Initialize
 30158 ;;		_TMR5_CallBack
 30159 ;; This function uses a reentrant model
 30160 ;;
 30161                           
 30162                           	psect	text140
 30163  01A424                     __ptext140:
 30164                           	opt callstack 0
 30165  01A424                     _TMR5_DefaultInterruptHandler:
 30166                           	opt callstack 12
 30167                           
 30168                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 30169                           
 30170                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30171                           ;incstack = 0
 30172  01A424  A0BE               	btfss	190,0,c	;volatile
 30173  01A426  D002               	goto	u884_20
 30174  01A428  0E01               	movlw	1
 30175  01A42A  D001               	goto	u884_26
 30176  01A42C                     u884_20:
 30177  01A42C  0E00               	movlw	0
 30178  01A42E                     u884_26:
 30179  01A42E  0AFF               	xorlw	255
 30180  01A430  6E0C               	movwf	(btemp+11)^0,c
 30181  01A432  50BE               	movf	190,w,c	;volatile
 30182  01A434  180C               	xorwf	(btemp+11)^0,w,c
 30183  01A436  0BFE               	andlw	-2
 30184  01A438  180C               	xorwf	(btemp+11)^0,w,c
 30185  01A43A  6EBE               	movwf	190,c	;volatile
 30186                           
 30187                           ;mcc_generated_files/tmr5.c: 200:  V.timerint_count++;
 30188  01A43C  0E01               	movlw	1
 30189  01A43E  0102               	movlb	2	; () banked
 30190  01A440  27B8               	addwf	(_V+184)& (0+255),f,b	;volatile
 30191  01A442  0E00               	movlw	0
 30192  01A444  23B9               	addwfc	(_V+185)& (0+255),f,b	;volatile
 30193  01A446  23BA               	addwfc	(_V+186)& (0+255),f,b	;volatile
 30194  01A448  23BB               	addwfc	(_V+187)& (0+255),f,b	;volatile
 30195                           
 30196                           ; BSR set to: 2
 30197                           ;mcc_generated_files/tmr5.c: 201:  V.ticks++;
 30198  01A44A  0E01               	movlw	1
 30199  01A44C  2781               	addwf	(_V+129)& (0+255),f,b	;volatile
 30200  01A44E  0E00               	movlw	0
 30201  01A450  2382               	addwfc	(_V+130)& (0+255),f,b	;volatile
 30202  01A452  2383               	addwfc	(_V+131)& (0+255),f,b	;volatile
 30203  01A454  2384               	addwfc	(_V+132)& (0+255),f,b	;volatile
 30204                           
 30205                           ; BSR set to: 2
 30206                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 30207  01A456  0012               	return		;funcret
 30208  01A458                     __end_of_TMR5_DefaultInterruptHandler:
 30209                           	opt callstack 0
 30210                           
 30211 ;; *************** function _TMR3_ISR *****************
 30212 ;; Defined at:
 30213 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 30214 ;; Parameters:    Size  Location     Type
 30215 ;;		None
 30216 ;; Auto vars:     Size  Location     Type
 30217 ;;		None
 30218 ;; Return value:  Size  Location     Type
 30219 ;;                  1    wreg      void 
 30220 ;; Registers used:
 30221 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 30222 ;; Tracked objects:
 30223 ;;		On entry : 0/0
 30224 ;;		On exit  : 3F/0
 30225 ;;		Unchanged: 0/0
 30226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30229 ;;      Temps:          0       0       0       0      25       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30230 ;;      Totals:         0       0       0       0      25       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30231 ;;Total ram usage:       25 bytes
 30232 ;; Hardware stack levels used:    1
 30233 ;; Hardware stack levels required when called:   14
 30234 ;; This function calls:
 30235 ;;		_TMR3_CallBack
 30236 ;;		_TMR3_WriteTimer
 30237 ;; This function is called by:
 30238 ;;		Interrupt level 1
 30239 ;; This function uses a non-reentrant model
 30240 ;;
 30241                           
 30242                           	psect	text141
 30243  017EC4                     __ptext141:
 30244                           	opt callstack 0
 30245  017EC4                     _TMR3_ISR:
 30246                           	opt callstack 3
 30247                           
 30248                           ; BSR set to: 2
 30249                           ;incstack = 0
 30250  017EC4  006F FF60  F3E4    	movff	status,??_TMR3_ISR
 30251  017ECA  006F FFD8  F3E5    	movff	tblptrl,??_TMR3_ISR+1
 30252  017ED0  006F FFDC  F3E6    	movff	tblptrh,??_TMR3_ISR+2
 30253  017ED6  006F FFE0  F3E7    	movff	tblptru,??_TMR3_ISR+3
 30254  017EDC  006F FFD4  F3E8    	movff	tablat,??_TMR3_ISR+4
 30255  017EE2  0060  F004  F3E9   	movff	btemp,??_TMR3_ISR+5
 30256  017EE8  0060  F008  F3EA   	movff	btemp+1,??_TMR3_ISR+6
 30257  017EEE  0060  F00C  F3EB   	movff	btemp+2,??_TMR3_ISR+7
 30258  017EF4  0060  F010  F3EC   	movff	btemp+3,??_TMR3_ISR+8
 30259  017EFA  0060  F014  F3ED   	movff	btemp+4,??_TMR3_ISR+9
 30260  017F00  0060  F018  F3EE   	movff	btemp+5,??_TMR3_ISR+10
 30261  017F06  0060  F01C  F3EF   	movff	btemp+6,??_TMR3_ISR+11
 30262  017F0C  0060  F020  F3F0   	movff	btemp+7,??_TMR3_ISR+12
 30263  017F12  0060  F024  F3F1   	movff	btemp+8,??_TMR3_ISR+13
 30264  017F18  0060  F028  F3F2   	movff	btemp+9,??_TMR3_ISR+14
 30265  017F1E  0060  F02C  F3F3   	movff	btemp+10,??_TMR3_ISR+15
 30266  017F24  0060  F030  F3F4   	movff	btemp+11,??_TMR3_ISR+16
 30267  017F2A  0060  F044  F3F5   	movff	btemp+16,??_TMR3_ISR+17
 30268  017F30  0060  F048  F3F6   	movff	btemp+17,??_TMR3_ISR+18
 30269  017F36  0060  F04C  F3F7   	movff	btemp+18,??_TMR3_ISR+19
 30270  017F3C  0060  F050  F3F8   	movff	btemp+19,??_TMR3_ISR+20
 30271  017F42  0060  F054  F3F9   	movff	btemp+20,??_TMR3_ISR+21
 30272  017F48  0060  F058  F3FA   	movff	btemp+21,??_TMR3_ISR+22
 30273  017F4E  0060  F05C  F3FB   	movff	btemp+22,??_TMR3_ISR+23
 30274  017F54  0060  F060  F3FC   	movff	btemp+23,??_TMR3_ISR+24
 30275  017F5A  EE16  F061         	lfsr	1,___intlo_sp
 30276                           
 30277                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 30278  017F5E  0139               	movlb	57	; () banked
 30279  017F60  9DA6               	bcf	166,6,b	;volatile
 30280                           
 30281                           ; BSR set to: 57
 30282                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 30283  017F62  0060  F09F  FFE6   	movff	_timer3ReloadVal,postinc1
 30284  017F68  0060  F0A3  FFE6   	movff	_timer3ReloadVal+1,postinc1
 30285  017F6E  EC32  F0D1         	call	_TMR3_WriteTimer	;wreg free
 30286                           
 30287                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 30288  017F72  0100               	movlb	0	; () banked
 30289  017F74  4BBC               	infsnz	TMR3_ISR@CountCallBack& (0+255),f,b	;volatile
 30290  017F76  2BBD               	incf	(TMR3_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 30291  017F78  51BD               	movf	(TMR3_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 30292  017F7A  E104               	bnz	i1u1171_20
 30293  017F7C  0E28               	movlw	40
 30294  017F7E  5DBC               	subwf	TMR3_ISR@CountCallBack& (0+255),w,b	;volatile
 30295  017F80  A0D8               	btfss	status,0,c
 30296  017F82  D005               	goto	i1l1205
 30297  017F84                     i1u1171_20:
 30298                           
 30299                           ; BSR set to: 0
 30300                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 30301  017F84  EC98  F0D4         	call	_TMR3_CallBack	;wreg free
 30302                           
 30303                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 30304  017F88  0100               	movlb	0	; () banked
 30305  017F8A  6BBC               	clrf	TMR3_ISR@CountCallBack& (0+255),b	;volatile
 30306  017F8C  6BBD               	clrf	(TMR3_ISR@CountCallBack+1)& (0+255),b	;volatile
 30307  017F8E                     i1l1205:
 30308                           
 30309                           ; BSR set to: 0
 30310  017F8E  0060  FFF0  F018   	movff	??_TMR3_ISR+24,btemp+23
 30311  017F94  0060  FFEC  F017   	movff	??_TMR3_ISR+23,btemp+22
 30312  017F9A  0060  FFE8  F016   	movff	??_TMR3_ISR+22,btemp+21
 30313  017FA0  0060  FFE4  F015   	movff	??_TMR3_ISR+21,btemp+20
 30314  017FA6  0060  FFE0  F014   	movff	??_TMR3_ISR+20,btemp+19
 30315  017FAC  0060  FFDC  F013   	movff	??_TMR3_ISR+19,btemp+18
 30316  017FB2  0060  FFD8  F012   	movff	??_TMR3_ISR+18,btemp+17
 30317  017FB8  0060  FFD4  F011   	movff	??_TMR3_ISR+17,btemp+16
 30318  017FBE  0060  FFD0  F00C   	movff	??_TMR3_ISR+16,btemp+11
 30319  017FC4  0060  FFCC  F00B   	movff	??_TMR3_ISR+15,btemp+10
 30320  017FCA  0060  FFC8  F00A   	movff	??_TMR3_ISR+14,btemp+9
 30321  017FD0  0060  FFC4  F009   	movff	??_TMR3_ISR+13,btemp+8
 30322  017FD6  0060  FFC0  F008   	movff	??_TMR3_ISR+12,btemp+7
 30323  017FDC  0060  FFBC  F007   	movff	??_TMR3_ISR+11,btemp+6
 30324  017FE2  0060  FFB8  F006   	movff	??_TMR3_ISR+10,btemp+5
 30325  017FE8  0060  FFB4  F005   	movff	??_TMR3_ISR+9,btemp+4
 30326  017FEE  0060  FFB0  F004   	movff	??_TMR3_ISR+8,btemp+3
 30327  017FF4  0060  FFAC  F003   	movff	??_TMR3_ISR+7,btemp+2
 30328  017FFA  0060  FFA8  F002   	movff	??_TMR3_ISR+6,btemp+1
 30329  018000  0060  FFA4  F001   	movff	??_TMR3_ISR+5,btemp
 30330  018006  0060  FFA3  FFF5   	movff	??_TMR3_ISR+4,tablat
 30331  01800C  0060  FF9F  FFF8   	movff	??_TMR3_ISR+3,tblptru
 30332  018012  0060  FF9B  FFF7   	movff	??_TMR3_ISR+2,tblptrh
 30333  018018  0060  FF97  FFF6   	movff	??_TMR3_ISR+1,tblptrl
 30334  01801E  0060  FF93  FFD8   	movff	??_TMR3_ISR,status
 30335  018024  0011               	retfie		f
 30336  018026                     __end_of_TMR3_ISR:
 30337                           	opt callstack 0
 30338                           
 30339 ;; *************** function _TMR3_WriteTimer *****************
 30340 ;; Defined at:
 30341 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 30342 ;; Parameters:    Size  Location     Type
 30343 ;;  timerVal        2  [STACK] unsigned short 
 30344 ;; Auto vars:     Size  Location     Type
 30345 ;;		None
 30346 ;; Return value:  Size  Location     Type
 30347 ;;                  1  [STACK] void 
 30348 ;; Registers used:
 30349 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 30350 ;; Tracked objects:
 30351 ;;		On entry : 3F/39
 30352 ;;		On exit  : 0/0
 30353 ;;		Unchanged: 0/0
 30354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30358 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30359 ;;Total ram usage:        0 bytes
 30360 ;; Hardware stack levels used:    1
 30361 ;; Hardware stack levels required when called:    3
 30362 ;; This function calls:
 30363 ;;		Nothing
 30364 ;; This function is called by:
 30365 ;;		_TMR3_ISR
 30366 ;; This function uses a reentrant model
 30367 ;;
 30368                           
 30369                           	psect	text142
 30370  01A264                     __ptext142:
 30371                           	opt callstack 0
 30372  01A264                     _TMR3_WriteTimer:
 30373                           	opt callstack 13
 30374                           
 30375                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 30376                           
 30377                           ; BSR set to: 0
 30378                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30379                           ;incstack = 0
 30380  01A264  A4A6               	btfss	166,2,c	;volatile
 30381  01A266  D00F               	goto	l10148
 30382                           
 30383                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 30384  01A268  90A6               	bcf	166,0,c	;volatile
 30385                           
 30386                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 30387                           ;stkvar	_timerVal @ sp[(0)+-2]
 30388  01A26A  0EFF               	movlw	255
 30389  01A26C  24E1               	addwf	fsr1l,w,c
 30390  01A26E  6ED9               	movwf	fsr2l,c
 30391  01A270  0EFF               	movlw	255
 30392  01A272  20E2               	addwfc	fsr1h,w,c
 30393  01A274  6EDA               	movwf	fsr2h,c
 30394  01A276  50DF               	movf	indf2,w,c
 30395  01A278  6EA5               	movwf	165,c	;volatile
 30396                           
 30397                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 30398                           ;stkvar	_timerVal @ sp[(0)+-2]
 30399  01A27A  0EFE               	movlw	-2
 30400  01A27C  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 30401                           
 30402                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 30403  01A282  80A6               	bsf	166,0,c	;volatile
 30404                           
 30405                           ;mcc_generated_files/tmr3.c: 141:     }
 30406  01A284  D00C               	goto	l1188
 30407  01A286                     l10148:
 30408                           
 30409                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 30410                           ;stkvar	_timerVal @ sp[(0)+-2]
 30411  01A286  0EFF               	movlw	255
 30412  01A288  24E1               	addwf	fsr1l,w,c
 30413  01A28A  6ED9               	movwf	fsr2l,c
 30414  01A28C  0EFF               	movlw	255
 30415  01A28E  20E2               	addwfc	fsr1h,w,c
 30416  01A290  6EDA               	movwf	fsr2h,c
 30417  01A292  50DF               	movf	indf2,w,c
 30418  01A294  6EA5               	movwf	165,c	;volatile
 30419                           
 30420                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 30421                           ;stkvar	_timerVal @ sp[(0)+-2]
 30422  01A296  0EFE               	movlw	-2
 30423  01A298  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 30424  01A29E                     l1188:
 30425                           
 30426                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 30427  01A29E  52E5               	movf	postdec1,f,c
 30428  01A2A0  52E5               	movf	postdec1,f,c
 30429  01A2A2  0012               	return		;funcret
 30430  01A2A4                     __end_of_TMR3_WriteTimer:
 30431                           	opt callstack 0
 30432                           
 30433 ;; *************** function _TMR3_CallBack *****************
 30434 ;; Defined at:
 30435 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 30436 ;; Parameters:    Size  Location     Type
 30437 ;;		None
 30438 ;; Auto vars:     Size  Location     Type
 30439 ;;		None
 30440 ;; Return value:  Size  Location     Type
 30441 ;;                  1  [STACK] void 
 30442 ;; Registers used:
 30443 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 30444 ;; Tracked objects:
 30445 ;;		On entry : 3F/0
 30446 ;;		On exit  : 0/0
 30447 ;;		Unchanged: 0/0
 30448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30453 ;;Total ram usage:        0 bytes
 30454 ;; Hardware stack levels used:    1
 30455 ;; Hardware stack levels required when called:   13
 30456 ;; This function calls:
 30457 ;;		Absolute function
 30458 ;;		_TMR3_DefaultInterruptHandler
 30459 ;;		_calc_bsoc
 30460 ;; This function is called by:
 30461 ;;		_TMR3_ISR
 30462 ;; This function uses a reentrant model
 30463 ;;
 30464                           
 30465                           	psect	text143
 30466  01A930                     __ptext143:
 30467                           	opt callstack 0
 30468  01A930                     _TMR3_CallBack:
 30469                           	opt callstack 3
 30470                           
 30471                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 30472                           
 30473                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30474                           ;incstack = 0
 30475  01A930  0100               	movlb	0	; () banked
 30476  01A932  519C               	movf	_TMR3_InterruptHandler& (0+255),w,b
 30477  01A934  119D               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 30478  01A936  119E               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 30479  01A938  B4D8               	btfsc	status,2,c
 30480  01A93A  0012               	return	
 30481                           
 30482                           ; BSR set to: 0
 30483                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 30484  01A93C  D801               	call	u1162_28
 30485  01A93E  0012               	return	
 30486  01A940                     u1162_28:
 30487  01A940  0005               	push	
 30488  01A942  6EFA               	movwf	pclath,c
 30489  01A944  519C               	movf	_TMR3_InterruptHandler& (0+255),w,b
 30490  01A946  6EFD               	movwf	tosl,c
 30491  01A948  519D               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 30492  01A94A  6EFE               	movwf	tosh,c
 30493  01A94C  519E               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 30494  01A94E  6EFF               	movwf	tosu,c
 30495  01A950  50FA               	movf	pclath,w,c
 30496  01A952  0012               	return		;indir
 30497  01A954                     __end_of_TMR3_CallBack:
 30498                           	opt callstack 0
 30499                           
 30500 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 30501 ;; Defined at:
 30502 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 30503 ;; Parameters:    Size  Location     Type
 30504 ;;		None
 30505 ;; Auto vars:     Size  Location     Type
 30506 ;;		None
 30507 ;; Return value:  Size  Location     Type
 30508 ;;                  1  [STACK] void 
 30509 ;; Registers used:
 30510 ;;		None
 30511 ;; Tracked objects:
 30512 ;;		On entry : 3F/0
 30513 ;;		On exit  : 0/0
 30514 ;;		Unchanged: 0/0
 30515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30519 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30520 ;;Total ram usage:        0 bytes
 30521 ;; Hardware stack levels used:    1
 30522 ;; Hardware stack levels required when called:    3
 30523 ;; This function calls:
 30524 ;;		Nothing
 30525 ;; This function is called by:
 30526 ;;		_TMR3_Initialize
 30527 ;;		_TMR3_CallBack
 30528 ;; This function uses a reentrant model
 30529 ;;
 30530                           
 30531                           	psect	text144
 30532  01AC68                     __ptext144:
 30533                           	opt callstack 0
 30534  01AC68                     _TMR3_DefaultInterruptHandler:
 30535                           	opt callstack 12
 30536                           
 30537                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 30538                           
 30539                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30540                           ;incstack = 0
 30541  01AC68  0012               	return		;funcret
 30542  01AC6A                     __end_of_TMR3_DefaultInterruptHandler:
 30543                           	opt callstack 0
 30544                           
 30545 ;; *************** function _calc_bsoc *****************
 30546 ;; Defined at:
 30547 ;;		line 39 in file "bsoc.c"
 30548 ;; Parameters:    Size  Location     Type
 30549 ;;		None
 30550 ;; Auto vars:     Size  Location     Type
 30551 ;;  log_ptr         2  [STACK] PTR unsigned char 
 30552 ;;		 -> port_data(512), 
 30553 ;; Return value:  Size  Location     Type
 30554 ;;                  1  [STACK] void 
 30555 ;; Registers used:
 30556 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 30557 ;; Tracked objects:
 30558 ;;		On entry : 3F/0
 30559 ;;		On exit  : 3F/1
 30560 ;;		Unchanged: 0/0
 30561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30566 ;;Total ram usage:        0 bytes
 30567 ;; Hardware stack levels used:    1
 30568 ;; Hardware stack levels required when called:   12
 30569 ;; This function calls:
 30570 ;;		_StartTimer
 30571 ;;		___fladd
 30572 ;;		___fldiv
 30573 ;;		___flge
 30574 ;;		___flmul
 30575 ;;		___flneg
 30576 ;;		___fltol
 30577 ;;		_port_data_dma_ptr
 30578 ;;		_send_port_data_dma
 30579 ;;		_sprintf
 30580 ;;		_strlen
 30581 ;; This function is called by:
 30582 ;;		_init_bsoc
 30583 ;;		_TMR3_CallBack
 30584 ;; This function uses a reentrant model
 30585 ;;
 30586                           
 30587                           	psect	text145
 30588  013BF0                     __ptext145:
 30589                           	opt callstack 0
 30590  013BF0                     _calc_bsoc:
 30591                           	opt callstack 0
 30592                           
 30593                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30594  013BF0  52E6               	movf	postinc1,f,c
 30595  013BF2  52E6               	movf	postinc1,f,c
 30596                           
 30597                           ;incstack = 0
 30598                           ;bsoc.c: 41:  uint8_t * log_ptr;;bsoc.c: 43:  do { LATEbits.LATE1 = 1; } while(0);
 30599  013BF4  82BE               	bsf	190,1,c	;volatile
 30600                           
 30601                           ;bsoc.c: 45:  C.dynamic_ah += (C.c_bat / 3600.0);
 30602  013BF6  0E00               	movlw	0
 30603  013BF8  6EE6               	movwf	postinc1,c
 30604  013BFA  0E00               	movlw	0
 30605  013BFC  6EE6               	movwf	postinc1,c
 30606  013BFE  0E61               	movlw	97
 30607  013C00  6EE6               	movwf	postinc1,c
 30608  013C02  0E45               	movlw	69
 30609  013C04  6EE6               	movwf	postinc1,c
 30610  013C06  0060  F513  FFE6   	movff	_C+68,postinc1
 30611  013C0C  0060  F517  FFE6   	movff	_C+69,postinc1
 30612  013C12  0060  F51B  FFE6   	movff	_C+70,postinc1
 30613  013C18  0060  F51F  FFE6   	movff	_C+71,postinc1
 30614  013C1E  EC3B  F0A1         	call	___fldiv	;wreg free
 30615  013C22  0060  F007  FFE6   	movff	btemp,postinc1
 30616  013C28  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30617  013C2E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30618  013C34  0060  F013  FFE6   	movff	btemp+3,postinc1
 30619  013C3A  0060  F633  FFE6   	movff	_C+140,postinc1
 30620  013C40  0060  F637  FFE6   	movff	_C+141,postinc1
 30621  013C46  0060  F63B  FFE6   	movff	_C+142,postinc1
 30622  013C4C  0060  F63F  FFE6   	movff	_C+143,postinc1
 30623  013C52  EC1A  F09A         	call	___fladd	;wreg free
 30624  013C56  0060  F004  F18C   	movff	btemp,_C+140	;volatile
 30625  013C5C  0060  F008  F18D   	movff	btemp+1,_C+141	;volatile
 30626  013C62  0060  F00C  F18E   	movff	btemp+2,_C+142	;volatile
 30627  013C68  0060  F010  F18F   	movff	btemp+3,_C+143	;volatile
 30628                           
 30629                           ;bsoc.c: 46:  if (C.dynamic_ah > (C.bank_ah))
 30630  013C6E  0060  F633  FFE6   	movff	_C+140,postinc1
 30631  013C74  0060  F637  FFE6   	movff	_C+141,postinc1
 30632  013C7A  0060  F63B  FFE6   	movff	_C+142,postinc1
 30633  013C80  0060  F63F  FFE6   	movff	_C+143,postinc1
 30634  013C86  0060  F623  FFE6   	movff	_C+136,postinc1
 30635  013C8C  0060  F627  FFE6   	movff	_C+137,postinc1
 30636  013C92  0060  F62B  FFE6   	movff	_C+138,postinc1
 30637  013C98  0060  F62F  FFE6   	movff	_C+139,postinc1
 30638  013C9E  ECB0  F0BE         	call	___flge	;wreg free
 30639  013CA2  B001               	btfsc	btemp& (0+255),0,c
 30640  013CA4  D008               	goto	l11922
 30641                           
 30642                           ;bsoc.c: 47:   C.dynamic_ah = C.bank_ah;
 30643  013CA6  C188  F18C         	movff	_C+136,_C+140	;volatile
 30644  013CAA  C189  F18D         	movff	_C+137,_C+141	;volatile
 30645  013CAE  C18A  F18E         	movff	_C+138,_C+142	;volatile
 30646  013CB2  C18B  F18F         	movff	_C+139,_C+143	;volatile
 30647  013CB6                     l11922:
 30648                           
 30649                           ;bsoc.c: 48:  if (C.dynamic_ah < 0.1)
 30650  013CB6  0ECD               	movlw	205
 30651  013CB8  6EE6               	movwf	postinc1,c
 30652  013CBA  0ECC               	movlw	204
 30653  013CBC  6EE6               	movwf	postinc1,c
 30654  013CBE  0ECC               	movlw	204
 30655  013CC0  6EE6               	movwf	postinc1,c
 30656  013CC2  0E3D               	movlw	61
 30657  013CC4  6EE6               	movwf	postinc1,c
 30658  013CC6  0060  F633  FFE6   	movff	_C+140,postinc1
 30659  013CCC  0060  F637  FFE6   	movff	_C+141,postinc1
 30660  013CD2  0060  F63B  FFE6   	movff	_C+142,postinc1
 30661  013CD8  0060  F63F  FFE6   	movff	_C+143,postinc1
 30662  013CDE  ECB0  F0BE         	call	___flge	;wreg free
 30663  013CE2  B001               	btfsc	btemp& (0+255),0,c
 30664  013CE4  D009               	goto	l11926
 30665                           
 30666                           ;bsoc.c: 49:   C.dynamic_ah = 0.1;
 30667  013CE6  0ECD               	movlw	205
 30668  013CE8  0101               	movlb	1	; () banked
 30669  013CEA  6F8C               	movwf	(_C+140)& (0+255),b	;volatile
 30670  013CEC  0ECC               	movlw	204
 30671  013CEE  6F8D               	movwf	(_C+141)& (0+255),b	;volatile
 30672  013CF0  0ECC               	movlw	204
 30673  013CF2  6F8E               	movwf	(_C+142)& (0+255),b	;volatile
 30674  013CF4  0E3D               	movlw	61
 30675  013CF6  6F8F               	movwf	(_C+143)& (0+255),b	;volatile
 30676  013CF8                     l11926:
 30677                           
 30678                           ;bsoc.c: 51:  C.pv_ah += (C.c_pv / 3600.0);
 30679  013CF8  0E00               	movlw	0
 30680  013CFA  6EE6               	movwf	postinc1,c
 30681  013CFC  0E00               	movlw	0
 30682  013CFE  6EE6               	movwf	postinc1,c
 30683  013D00  0E61               	movlw	97
 30684  013D02  6EE6               	movwf	postinc1,c
 30685  013D04  0E45               	movlw	69
 30686  013D06  6EE6               	movwf	postinc1,c
 30687  013D08  0060  F523  FFE6   	movff	_C+72,postinc1
 30688  013D0E  0060  F527  FFE6   	movff	_C+73,postinc1
 30689  013D14  0060  F52B  FFE6   	movff	_C+74,postinc1
 30690  013D1A  0060  F52F  FFE6   	movff	_C+75,postinc1
 30691  013D20  EC3B  F0A1         	call	___fldiv	;wreg free
 30692  013D24  0060  F007  FFE6   	movff	btemp,postinc1
 30693  013D2A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30694  013D30  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30695  013D36  0060  F013  FFE6   	movff	btemp+3,postinc1
 30696  013D3C  0060  F643  FFE6   	movff	_C+144,postinc1
 30697  013D42  0060  F647  FFE6   	movff	_C+145,postinc1
 30698  013D48  0060  F64B  FFE6   	movff	_C+146,postinc1
 30699  013D4E  0060  F64F  FFE6   	movff	_C+147,postinc1
 30700  013D54  EC1A  F09A         	call	___fladd	;wreg free
 30701  013D58  0060  F004  F190   	movff	btemp,_C+144	;volatile
 30702  013D5E  0060  F008  F191   	movff	btemp+1,_C+145	;volatile
 30703  013D64  0060  F00C  F192   	movff	btemp+2,_C+146	;volatile
 30704  013D6A  0060  F010  F193   	movff	btemp+3,_C+147	;volatile
 30705                           
 30706                           ;bsoc.c: 52:  C.pvkw += (C.p_pv / 3600.0);
 30707  013D70  0E00               	movlw	0
 30708  013D72  6EE6               	movwf	postinc1,c
 30709  013D74  0E00               	movlw	0
 30710  013D76  6EE6               	movwf	postinc1,c
 30711  013D78  0E61               	movlw	97
 30712  013D7A  6EE6               	movwf	postinc1,c
 30713  013D7C  0E45               	movlw	69
 30714  013D7E  6EE6               	movwf	postinc1,c
 30715  013D80  0060  F5E3  FFE6   	movff	_C+120,postinc1
 30716  013D86  0060  F5E7  FFE6   	movff	_C+121,postinc1
 30717  013D8C  0060  F5EB  FFE6   	movff	_C+122,postinc1
 30718  013D92  0060  F5EF  FFE6   	movff	_C+123,postinc1
 30719  013D98  EC3B  F0A1         	call	___fldiv	;wreg free
 30720  013D9C  0060  F007  FFE6   	movff	btemp,postinc1
 30721  013DA2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30722  013DA8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30723  013DAE  0060  F013  FFE6   	movff	btemp+3,postinc1
 30724  013DB4  0060  F683  FFE6   	movff	_C+160,postinc1
 30725  013DBA  0060  F687  FFE6   	movff	_C+161,postinc1
 30726  013DC0  0060  F68B  FFE6   	movff	_C+162,postinc1
 30727  013DC6  0060  F68F  FFE6   	movff	_C+163,postinc1
 30728  013DCC  EC1A  F09A         	call	___fladd	;wreg free
 30729  013DD0  0060  F004  F1A0   	movff	btemp,_C+160	;volatile
 30730  013DD6  0060  F008  F1A1   	movff	btemp+1,_C+161	;volatile
 30731  013DDC  0060  F00C  F1A2   	movff	btemp+2,_C+162	;volatile
 30732  013DE2  0060  F010  F1A3   	movff	btemp+3,_C+163	;volatile
 30733                           
 30734                           ;bsoc.c: 53:  C.invkw += (C.p_inverter / 3600.0);
 30735  013DE8  0E00               	movlw	0
 30736  013DEA  6EE6               	movwf	postinc1,c
 30737  013DEC  0E00               	movlw	0
 30738  013DEE  6EE6               	movwf	postinc1,c
 30739  013DF0  0E61               	movlw	97
 30740  013DF2  6EE6               	movwf	postinc1,c
 30741  013DF4  0E45               	movlw	69
 30742  013DF6  6EE6               	movwf	postinc1,c
 30743  013DF8  0060  F5D3  FFE6   	movff	_C+116,postinc1
 30744  013DFE  0060  F5D7  FFE6   	movff	_C+117,postinc1
 30745  013E04  0060  F5DB  FFE6   	movff	_C+118,postinc1
 30746  013E0A  0060  F5DF  FFE6   	movff	_C+119,postinc1
 30747  013E10  EC3B  F0A1         	call	___fldiv	;wreg free
 30748  013E14  0060  F007  FFE6   	movff	btemp,postinc1
 30749  013E1A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30750  013E20  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30751  013E26  0060  F013  FFE6   	movff	btemp+3,postinc1
 30752  013E2C  0060  F693  FFE6   	movff	_C+164,postinc1
 30753  013E32  0060  F697  FFE6   	movff	_C+165,postinc1
 30754  013E38  0060  F69B  FFE6   	movff	_C+166,postinc1
 30755  013E3E  0060  F69F  FFE6   	movff	_C+167,postinc1
 30756  013E44  EC1A  F09A         	call	___fladd	;wreg free
 30757  013E48  0060  F004  F1A4   	movff	btemp,_C+164	;volatile
 30758  013E4E  0060  F008  F1A5   	movff	btemp+1,_C+165	;volatile
 30759  013E54  0060  F00C  F1A6   	movff	btemp+2,_C+166	;volatile
 30760  013E5A  0060  F010  F1A7   	movff	btemp+3,_C+167	;volatile
 30761                           
 30762                           ;bsoc.c: 54:  if (C.p_bat > 0.0)
 30763  013E60  0060  F5F3  FFE6   	movff	_C+124,postinc1
 30764  013E66  0060  F5F7  FFE6   	movff	_C+125,postinc1
 30765  013E6C  0060  F5FB  FFE6   	movff	_C+126,postinc1
 30766  013E72  0060  F5FF  FFE6   	movff	_C+127,postinc1
 30767  013E78  0E00               	movlw	0
 30768  013E7A  6EE6               	movwf	postinc1,c
 30769  013E7C  0E00               	movlw	0
 30770  013E7E  6EE6               	movwf	postinc1,c
 30771  013E80  0E00               	movlw	0
 30772  013E82  6EE6               	movwf	postinc1,c
 30773  013E84  0E00               	movlw	0
 30774  013E86  6EE6               	movwf	postinc1,c
 30775  013E88  ECB0  F0BE         	call	___flge	;wreg free
 30776  013E8C  B001               	btfsc	btemp& (0+255),0,c
 30777  013E8E  D03C               	goto	l11936
 30778                           
 30779                           ;bsoc.c: 55:   C.bkwi += (C.p_bat / 3600.0);
 30780  013E90  0E00               	movlw	0
 30781  013E92  6EE6               	movwf	postinc1,c
 30782  013E94  0E00               	movlw	0
 30783  013E96  6EE6               	movwf	postinc1,c
 30784  013E98  0E61               	movlw	97
 30785  013E9A  6EE6               	movwf	postinc1,c
 30786  013E9C  0E45               	movlw	69
 30787  013E9E  6EE6               	movwf	postinc1,c
 30788  013EA0  0060  F5F3  FFE6   	movff	_C+124,postinc1
 30789  013EA6  0060  F5F7  FFE6   	movff	_C+125,postinc1
 30790  013EAC  0060  F5FB  FFE6   	movff	_C+126,postinc1
 30791  013EB2  0060  F5FF  FFE6   	movff	_C+127,postinc1
 30792  013EB8  EC3B  F0A1         	call	___fldiv	;wreg free
 30793  013EBC  0060  F007  FFE6   	movff	btemp,postinc1
 30794  013EC2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30795  013EC8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30796  013ECE  0060  F013  FFE6   	movff	btemp+3,postinc1
 30797  013ED4  0060  F663  FFE6   	movff	_C+152,postinc1
 30798  013EDA  0060  F667  FFE6   	movff	_C+153,postinc1
 30799  013EE0  0060  F66B  FFE6   	movff	_C+154,postinc1
 30800  013EE6  0060  F66F  FFE6   	movff	_C+155,postinc1
 30801  013EEC  EC1A  F09A         	call	___fladd	;wreg free
 30802  013EF0  0060  F004  F198   	movff	btemp,_C+152	;volatile
 30803  013EF6  0060  F008  F199   	movff	btemp+1,_C+153	;volatile
 30804  013EFC  0060  F00C  F19A   	movff	btemp+2,_C+154	;volatile
 30805  013F02  0060  F010  F19B   	movff	btemp+3,_C+155	;volatile
 30806  013F08                     l11936:
 30807                           
 30808                           ;bsoc.c: 56:  if (C.p_bat < 0.0)
 30809  013F08  0101               	movlb	1	; () banked
 30810  013F0A  AF7F               	btfss	(_C+127)& (0+255),7,b	;volatile
 30811  013F0C  D03C               	goto	l11940
 30812                           
 30813                           ; BSR set to: 1
 30814                           ;bsoc.c: 57:   C.bkwo += (C.p_bat / 3600.0);
 30815  013F0E  0E00               	movlw	0
 30816  013F10  6EE6               	movwf	postinc1,c
 30817  013F12  0E00               	movlw	0
 30818  013F14  6EE6               	movwf	postinc1,c
 30819  013F16  0E61               	movlw	97
 30820  013F18  6EE6               	movwf	postinc1,c
 30821  013F1A  0E45               	movlw	69
 30822  013F1C  6EE6               	movwf	postinc1,c
 30823  013F1E  0060  F5F3  FFE6   	movff	_C+124,postinc1
 30824  013F24  0060  F5F7  FFE6   	movff	_C+125,postinc1
 30825  013F2A  0060  F5FB  FFE6   	movff	_C+126,postinc1
 30826  013F30  0060  F5FF  FFE6   	movff	_C+127,postinc1
 30827  013F36  EC3B  F0A1         	call	___fldiv	;wreg free
 30828  013F3A  0060  F007  FFE6   	movff	btemp,postinc1
 30829  013F40  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30830  013F46  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30831  013F4C  0060  F013  FFE6   	movff	btemp+3,postinc1
 30832  013F52  0060  F673  FFE6   	movff	_C+156,postinc1
 30833  013F58  0060  F677  FFE6   	movff	_C+157,postinc1
 30834  013F5E  0060  F67B  FFE6   	movff	_C+158,postinc1
 30835  013F64  0060  F67F  FFE6   	movff	_C+159,postinc1
 30836  013F6A  EC1A  F09A         	call	___fladd	;wreg free
 30837  013F6E  0060  F004  F19C   	movff	btemp,_C+156	;volatile
 30838  013F74  0060  F008  F19D   	movff	btemp+1,_C+157	;volatile
 30839  013F7A  0060  F00C  F19E   	movff	btemp+2,_C+158	;volatile
 30840  013F80  0060  F010  F19F   	movff	btemp+3,_C+159	;volatile
 30841  013F86                     l11940:
 30842                           
 30843                           ;bsoc.c: 59:  C.soc = ((uint16_t) ((C.dynamic_ah / C.bank_ah)*100.0) + 1);
 30844  013F86  0E00               	movlw	0
 30845  013F88  6EE6               	movwf	postinc1,c
 30846  013F8A  0E00               	movlw	0
 30847  013F8C  6EE6               	movwf	postinc1,c
 30848  013F8E  0EC8               	movlw	200
 30849  013F90  6EE6               	movwf	postinc1,c
 30850  013F92  0E42               	movlw	66
 30851  013F94  6EE6               	movwf	postinc1,c
 30852  013F96  0060  F623  FFE6   	movff	_C+136,postinc1
 30853  013F9C  0060  F627  FFE6   	movff	_C+137,postinc1
 30854  013FA2  0060  F62B  FFE6   	movff	_C+138,postinc1
 30855  013FA8  0060  F62F  FFE6   	movff	_C+139,postinc1
 30856  013FAE  0060  F633  FFE6   	movff	_C+140,postinc1
 30857  013FB4  0060  F637  FFE6   	movff	_C+141,postinc1
 30858  013FBA  0060  F63B  FFE6   	movff	_C+142,postinc1
 30859  013FC0  0060  F63F  FFE6   	movff	_C+143,postinc1
 30860  013FC6  EC3B  F0A1         	call	___fldiv	;wreg free
 30861  013FCA  0060  F007  FFE6   	movff	btemp,postinc1
 30862  013FD0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30863  013FD6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30864  013FDC  0060  F013  FFE6   	movff	btemp+3,postinc1
 30865  013FE2  EC05  F096         	call	___flmul	;wreg free
 30866  013FE6  0060  F007  FFE6   	movff	btemp,postinc1
 30867  013FEC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30868  013FF2  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30869  013FF8  0060  F013  FFE6   	movff	btemp+3,postinc1
 30870  013FFE  EC3F  F0BD         	call	___fltol	;wreg free
 30871  014002  0060  F004  F00B   	movff	btemp,btemp+10
 30872  014008  0060  F008  F00C   	movff	btemp+1,btemp+11
 30873  01400E  0E01               	movlw	1
 30874  014010  240B               	addwf	(btemp+10)^0,w,c
 30875  014012  0101               	movlb	1	; () banked
 30876  014014  6FAA               	movwf	(_C+170)& (0+255),b	;volatile
 30877  014016  0E00               	movlw	0
 30878  014018  200C               	addwfc	(btemp+11)^0,w,c
 30879  01401A  6FAB               	movwf	(_C+171)& (0+255),b	;volatile
 30880                           
 30881                           ; BSR set to: 1
 30882                           ;bsoc.c: 60:  if (C.soc > 100)
 30883  01401C  51AB               	movf	(_C+171)& (0+255),w,b	;volatile
 30884  01401E  E104               	bnz	u1158_20
 30885  014020  0E65               	movlw	101
 30886  014022  5DAA               	subwf	(_C+170)& (0+255),w,b	;volatile
 30887  014024  A0D8               	btfss	status,0,c
 30888  014026  D004               	goto	l11946
 30889  014028                     u1158_20:
 30890                           
 30891                           ; BSR set to: 1
 30892                           ;bsoc.c: 61:   C.soc = 100;
 30893  014028  0E00               	movlw	0
 30894  01402A  6FAB               	movwf	(_C+171)& (0+255),b	;volatile
 30895  01402C  0E64               	movlw	100
 30896  01402E  6FAA               	movwf	(_C+170)& (0+255),b	;volatile
 30897  014030                     l11946:
 30898                           
 30899                           ; BSR set to: 1
 30900                           ;bsoc.c: 63:  if (C.c_bat < 0.0) {
 30901  014030  AF47               	btfss	(_C+71)& (0+255),7,b	;volatile
 30902  014032  D043               	goto	l11950
 30903                           
 30904                           ; BSR set to: 1
 30905                           ;bsoc.c: 64:   C.runtime = (uint16_t) (-(C.dynamic_ah / C.c_bat));
 30906  014034  0060  F513  FFE6   	movff	_C+68,postinc1
 30907  01403A  0060  F517  FFE6   	movff	_C+69,postinc1
 30908  014040  0060  F51B  FFE6   	movff	_C+70,postinc1
 30909  014046  0060  F51F  FFE6   	movff	_C+71,postinc1
 30910  01404C  0060  F633  FFE6   	movff	_C+140,postinc1
 30911  014052  0060  F637  FFE6   	movff	_C+141,postinc1
 30912  014058  0060  F63B  FFE6   	movff	_C+142,postinc1
 30913  01405E  0060  F63F  FFE6   	movff	_C+143,postinc1
 30914  014064  EC3B  F0A1         	call	___fldiv	;wreg free
 30915  014068  0060  F007  FFE6   	movff	btemp,postinc1
 30916  01406E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30917  014074  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30918  01407A  0060  F013  FFE6   	movff	btemp+3,postinc1
 30919  014080  ECBC  F0CF         	call	___flneg	;wreg free
 30920  014084  0060  F007  FFE6   	movff	btemp,postinc1
 30921  01408A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30922  014090  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30923  014096  0060  F013  FFE6   	movff	btemp+3,postinc1
 30924  01409C  EC3F  F0BD         	call	___fltol	;wreg free
 30925  0140A0  0060  F004  F00B   	movff	btemp,btemp+10
 30926  0140A6  0060  F008  F00C   	movff	btemp+1,btemp+11
 30927  0140AC  0060  F02C  F1A8   	movff	btemp+10,_C+168	;volatile
 30928  0140B2  0060  F030  F1A9   	movff	btemp+11,_C+169	;volatile
 30929                           
 30930                           ;bsoc.c: 65:  } else {
 30931  0140B8  D004               	goto	l11952
 30932  0140BA                     l11950:
 30933                           
 30934                           ; BSR set to: 1
 30935                           ;bsoc.c: 66:   C.runtime = 120;
 30936  0140BA  0E00               	movlw	0
 30937  0140BC  6FA9               	movwf	(_C+169)& (0+255),b	;volatile
 30938  0140BE  0E78               	movlw	120
 30939  0140C0  6FA8               	movwf	(_C+168)& (0+255),b	;volatile
 30940  0140C2                     l11952:
 30941                           
 30942                           ;bsoc.c: 68:  if (C.runtime > 120)
 30943  0140C2  0101               	movlb	1	; () banked
 30944  0140C4  51A9               	movf	(_C+169)& (0+255),w,b	;volatile
 30945  0140C6  E104               	bnz	u1160_20
 30946  0140C8  0E79               	movlw	121
 30947  0140CA  5DA8               	subwf	(_C+168)& (0+255),w,b	;volatile
 30948  0140CC  A0D8               	btfss	status,0,c
 30949  0140CE  D004               	goto	l11956
 30950  0140D0                     u1160_20:
 30951                           
 30952                           ; BSR set to: 1
 30953                           ;bsoc.c: 69:   C.runtime = 120;
 30954  0140D0  0E00               	movlw	0
 30955  0140D2  6FA9               	movwf	(_C+169)& (0+255),b	;volatile
 30956  0140D4  0E78               	movlw	120
 30957  0140D6  6FA8               	movwf	(_C+168)& (0+255),b	;volatile
 30958  0140D8                     l11956:
 30959                           
 30960                           ; BSR set to: 1
 30961                           ;bsoc.c: 71:  V.lowint_count++;
 30962  0140D8  0E01               	movlw	1
 30963  0140DA  0102               	movlb	2	; () banked
 30964  0140DC  27B0               	addwf	(_V+176)& (0+255),f,b	;volatile
 30965  0140DE  0E00               	movlw	0
 30966  0140E0  23B1               	addwfc	(_V+177)& (0+255),f,b	;volatile
 30967  0140E2  23B2               	addwfc	(_V+178)& (0+255),f,b	;volatile
 30968  0140E4  23B3               	addwfc	(_V+179)& (0+255),f,b	;volatile
 30969                           
 30970                           ; BSR set to: 2
 30971                           ;bsoc.c: 73:  log_ptr = port_data_dma_ptr();
 30972  0140E6  ECF8  F0D5         	call	_port_data_dma_ptr	;wreg free
 30973                           
 30974                           ;stkvar	_log_ptr @ sp[(-2)+0]
 30975  0140EA  0EFF               	movlw	-1
 30976  0140EC  0060  F00B  FFE3   	movff	btemp+1,plusw1
 30977  0140F2  0EFE               	movlw	-2
 30978  0140F4  0060  F007  FFE3   	movff	btemp,plusw1
 30979                           
 30980                           ;bsoc.c: 74:  sprintf((char*) log_ptr, " %lu,%4.4f,%4.4f,%4.4f,%4.4f,%4.3f,%4.3f,%4.3f,%
      +                          4.3f,%4.3f,%4.3f,%4.3d,%4.3d\r\n",
 30981  0140FA  0060  F6A3  FFE6   	movff	_C+168,postinc1
 30982  014100  0060  F6A7  FFE6   	movff	_C+169,postinc1
 30983  014106  0060  F6AB  FFE6   	movff	_C+170,postinc1
 30984  01410C  0060  F6AF  FFE6   	movff	_C+171,postinc1
 30985  014112  0060  F643  FFE6   	movff	_C+144,postinc1
 30986  014118  0060  F647  FFE6   	movff	_C+145,postinc1
 30987  01411E  0060  F64B  FFE6   	movff	_C+146,postinc1
 30988  014124  0060  F64F  FFE6   	movff	_C+147,postinc1
 30989  01412A  0060  F633  FFE6   	movff	_C+140,postinc1
 30990  014130  0060  F637  FFE6   	movff	_C+141,postinc1
 30991  014136  0060  F63B  FFE6   	movff	_C+142,postinc1
 30992  01413C  0060  F63F  FFE6   	movff	_C+143,postinc1
 30993  014142  0060  F5D3  FFE6   	movff	_C+116,postinc1
 30994  014148  0060  F5D7  FFE6   	movff	_C+117,postinc1
 30995  01414E  0060  F5DB  FFE6   	movff	_C+118,postinc1
 30996  014154  0060  F5DF  FFE6   	movff	_C+119,postinc1
 30997  01415A  0060  F5C3  FFE6   	movff	_C+112,postinc1
 30998  014160  0060  F5C7  FFE6   	movff	_C+113,postinc1
 30999  014166  0060  F5CB  FFE6   	movff	_C+114,postinc1
 31000  01416C  0060  F5CF  FFE6   	movff	_C+115,postinc1
 31001  014172  0060  F5E3  FFE6   	movff	_C+120,postinc1
 31002  014178  0060  F5E7  FFE6   	movff	_C+121,postinc1
 31003  01417E  0060  F5EB  FFE6   	movff	_C+122,postinc1
 31004  014184  0060  F5EF  FFE6   	movff	_C+123,postinc1
 31005  01418A  0060  F5F3  FFE6   	movff	_C+124,postinc1
 31006  014190  0060  F5F7  FFE6   	movff	_C+125,postinc1
 31007  014196  0060  F5FB  FFE6   	movff	_C+126,postinc1
 31008  01419C  0060  F5FF  FFE6   	movff	_C+127,postinc1
 31009  0141A2  0060  F593  FFE6   	movff	_C+100,postinc1
 31010  0141A8  0060  F597  FFE6   	movff	_C+101,postinc1
 31011  0141AE  0060  F59B  FFE6   	movff	_C+102,postinc1
 31012  0141B4  0060  F59F  FFE6   	movff	_C+103,postinc1
 31013  0141BA  0060  F533  FFE6   	movff	_C+76,postinc1
 31014  0141C0  0060  F537  FFE6   	movff	_C+77,postinc1
 31015  0141C6  0060  F53B  FFE6   	movff	_C+78,postinc1
 31016  0141CC  0060  F53F  FFE6   	movff	_C+79,postinc1
 31017  0141D2  0060  F543  FFE6   	movff	_C+80,postinc1
 31018  0141D8  0060  F547  FFE6   	movff	_C+81,postinc1
 31019  0141DE  0060  F54B  FFE6   	movff	_C+82,postinc1
 31020  0141E4  0060  F54F  FFE6   	movff	_C+83,postinc1
 31021  0141EA  0060  F553  FFE6   	movff	_C+84,postinc1
 31022  0141F0  0060  F557  FFE6   	movff	_C+85,postinc1
 31023  0141F6  0060  F55B  FFE6   	movff	_C+86,postinc1
 31024  0141FC  0060  F55F  FFE6   	movff	_C+87,postinc1
 31025  014202  0060  FA07  FFE6   	movff	_V+129,postinc1
 31026  014208  0060  FA0B  FFE6   	movff	_V+130,postinc1
 31027  01420E  0060  FA0F  FFE6   	movff	_V+131,postinc1
 31028  014214  0060  FA13  FFE6   	movff	_V+132,postinc1
 31029  01421A  0EC3               	movlw	low STR_48
 31030  01421C  6EE6               	movwf	postinc1,c
 31031  01421E  0EFD               	movlw	high STR_48
 31032  014220  6EE6               	movwf	postinc1,c
 31033                           
 31034                           ;stkvar	_log_ptr @ sp[(-52)+0]
 31035  014222  0ECC               	movlw	-52
 31036  014224  006F FF8F FFE6     	movff	plusw1,postinc1
 31037  01422A  006F FF8F FFE6     	movff	plusw1,postinc1
 31038  014230  0E34               	movlw	52
 31039  014232  6EE6               	movwf	postinc1,c
 31040  014234  ECBF  F0C4         	call	_sprintf	;wreg free
 31041                           
 31042                           ; BSR set to: 0
 31043                           ;bsoc.c: 79:  StartTimer(TMR_DISPLAY, 125);
 31044  014238  0E7D               	movlw	125
 31045  01423A  6EE6               	movwf	postinc1,c
 31046  01423C  0E00               	movlw	0
 31047  01423E  6EE6               	movwf	postinc1,c
 31048  014240  0E0A               	movlw	10
 31049  014242  6EE6               	movwf	postinc1,c
 31050  014244  ECD2  F0D0         	call	_StartTimer	;wreg free
 31051                           
 31052                           ;bsoc.c: 80:  send_port_data_dma(strlen((char*) log_ptr));
 31053                           ;stkvar	_log_ptr @ sp[(-2)+0]
 31054  014248  0EFE               	movlw	-2
 31055  01424A  006F FF8F FFE6     	movff	plusw1,postinc1
 31056  014250  006F FF8F FFE6     	movff	plusw1,postinc1
 31057  014256  EC10  F0CA         	call	_strlen	;wreg free
 31058  01425A  0060  F007  FFE6   	movff	btemp,postinc1
 31059  014260  0060  F00B  FFE6   	movff	btemp+1,postinc1
 31060  014266  EC47  F0CF         	call	_send_port_data_dma	;wreg free
 31061                           
 31062                           ; BSR set to: 59
 31063                           ;bsoc.c: 81:  C.update = 0;
 31064  01426A  0101               	movlb	1	; () banked
 31065  01426C  6BAC               	clrf	(_C+172)& (0+255),b	;volatile
 31066                           
 31067                           ; BSR set to: 1
 31068  01426E  92BE               	bcf	190,1,c	;volatile
 31069                           
 31070                           ; BSR set to: 1
 31071                           ; _calc_bsoc: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 31072  014270  52E5               	movf	postdec1,f,c
 31073  014272  52E5               	movf	postdec1,f,c
 31074  014274  0012               	return		;funcret
 31075  014276                     __end_of_calc_bsoc:
 31076                           	opt callstack 0
 31077                           
 31078 ;; *************** function _send_port_data_dma *****************
 31079 ;; Defined at:
 31080 ;;		line 258 in file "eadog.c"
 31081 ;; Parameters:    Size  Location     Type
 31082 ;;  dsize           2  [STACK] unsigned short 
 31083 ;; Auto vars:     Size  Location     Type
 31084 ;;		None
 31085 ;; Return value:  Size  Location     Type
 31086 ;;                  1  [STACK] void 
 31087 ;; Registers used:
 31088 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 31089 ;; Tracked objects:
 31090 ;;		On entry : 0/0
 31091 ;;		On exit  : 3F/3B
 31092 ;;		Unchanged: 0/0
 31093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31098 ;;Total ram usage:        0 bytes
 31099 ;; Hardware stack levels used:    1
 31100 ;; Hardware stack levels required when called:    3
 31101 ;; This function calls:
 31102 ;;		Nothing
 31103 ;; This function is called by:
 31104 ;;		_calc_bsoc
 31105 ;; This function uses a reentrant model
 31106 ;;
 31107                           
 31108                           	psect	text146
 31109  019E8E                     __ptext146:
 31110                           	opt callstack 0
 31111  019E8E                     _send_port_data_dma:
 31112                           	opt callstack 11
 31113                           
 31114                           ;eadog.c: 258: void send_port_data_dma(uint16_t dsize);eadog.c: 259: {;eadog.c: 260:  if
      +                           (dsize > 512)
 31115                           ;stkvar	_dsize @ sp[(0)+-2]
 31116                           
 31117                           ; BSR set to: 1
 31118                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31119                           ;incstack = 0
 31120  019E8E  0EFE               	movlw	-2
 31121  019E90  04E3               	decf	plusw1,w,c
 31122  019E92  0EFF               	movlw	-1
 31123  019E94  006F FF8C  F001    	movff	plusw1,btemp
 31124  019E9A  0E02               	movlw	2
 31125  019E9C  5A01               	subwfb	btemp^0,f,c
 31126  019E9E  A0D8               	btfss	status,0,c
 31127  019EA0  D00C               	goto	l9250
 31128                           
 31129                           ;eadog.c: 261:   dsize = 512;
 31130  019EA2  0E00               	movlw	0
 31131  019EA4  6E0B               	movwf	(btemp+10)^0,c
 31132  019EA6  0E02               	movlw	2
 31133  019EA8  6E0C               	movwf	(btemp+11)^0,c
 31134                           
 31135                           ;stkvar	_dsize @ sp[(0)+-2]
 31136  019EAA  0EFE               	movlw	-2
 31137  019EAC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 31138  019EB2  0EFF               	movlw	-1
 31139  019EB4  0060  F033  FFE3   	movff	btemp+11,plusw1
 31140  019EBA                     l9250:
 31141                           
 31142                           ;eadog.c: 263:  DMA2CON0bits.EN = 0;
 31143  019EBA  013B               	movlb	59	; () banked
 31144  019EBC  9FDC               	bcf	220,7,b	;volatile
 31145                           
 31146                           ; BSR set to: 59
 31147                           ;eadog.c: 264:  DMA2SSZ = dsize;
 31148                           ;stkvar	_dsize @ sp[(0)+-2]
 31149  019EBE  0EFE               	movlw	-2
 31150  019EC0  006F FF8F FBD7     	movff	plusw1,15319	;volatile
 31151  019EC6  0EFF               	movlw	-1
 31152  019EC8  006F FF8F FBD8     	movff	plusw1,15320	;volatile
 31153                           
 31154                           ; BSR set to: 59
 31155                           ;eadog.c: 265:  DMA2DSZ = 1;
 31156  019ECE  0E00               	movlw	0
 31157  019ED0  6FCF               	movwf	207,b	;volatile
 31158  019ED2  0E01               	movlw	1
 31159  019ED4  6FCE               	movwf	206,b	;volatile
 31160                           
 31161                           ; BSR set to: 59
 31162                           ;eadog.c: 266:  DMA2CON0bits.EN = 1;
 31163  019ED6  8FDC               	bsf	220,7,b	;volatile
 31164                           
 31165                           ; BSR set to: 59
 31166                           ;eadog.c: 267:  DMA2CON0bits.DMA2SIRQEN = 1;
 31167  019ED8  8DDC               	bsf	220,6,b	;volatile
 31168                           
 31169                           ; BSR set to: 59
 31170                           ; _send_port_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 31171  019EDA  52E5               	movf	postdec1,f,c
 31172  019EDC  52E5               	movf	postdec1,f,c
 31173  019EDE  0012               	return		;funcret
 31174  019EE0                     __end_of_send_port_data_dma:
 31175                           	opt callstack 0
 31176                           
 31177 ;; *************** function _port_data_dma_ptr *****************
 31178 ;; Defined at:
 31179 ;;		line 273 in file "eadog.c"
 31180 ;; Parameters:    Size  Location     Type
 31181 ;;		None
 31182 ;; Auto vars:     Size  Location     Type
 31183 ;;		None
 31184 ;; Return value:  Size  Location     Type
 31185 ;;                  2  [STACK] PTR unsigned char 
 31186 ;; Registers used:
 31187 ;;		wreg, status,2, status,0, btemp, btemp+1
 31188 ;; Tracked objects:
 31189 ;;		On entry : 3F/2
 31190 ;;		On exit  : 0/0
 31191 ;;		Unchanged: 0/0
 31192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31196 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31197 ;;Total ram usage:        0 bytes
 31198 ;; Hardware stack levels used:    1
 31199 ;; Hardware stack levels required when called:    3
 31200 ;; This function calls:
 31201 ;;		Nothing
 31202 ;; This function is called by:
 31203 ;;		_calc_bsoc
 31204 ;; This function uses a reentrant model
 31205 ;;
 31206                           
 31207                           	psect	text147
 31208  01ABF0                     __ptext147:
 31209                           	opt callstack 0
 31210  01ABF0                     _port_data_dma_ptr:
 31211                           	opt callstack 11
 31212                           
 31213                           ;eadog.c: 275:  return port_data;
 31214                           
 31215                           ; BSR set to: 59
 31216                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31217                           ;incstack = 0
 31218  01ABF0  0EFF               	movlw	low _port_data
 31219  01ABF2  6E01               	movwf	btemp^0,c
 31220  01ABF4  0E05               	movlw	high _port_data
 31221  01ABF6  6E02               	movwf	(btemp+1)^0,c
 31222                           
 31223                           ; _port_data_dma_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 31224  01ABF8  0012               	return		;funcret
 31225  01ABFA                     __end_of_port_data_dma_ptr:
 31226                           	opt callstack 0
 31227                           
 31228 ;; *************** function _INT0_ISR *****************
 31229 ;; Defined at:
 31230 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 31231 ;; Parameters:    Size  Location     Type
 31232 ;;		None
 31233 ;; Auto vars:     Size  Location     Type
 31234 ;;		None
 31235 ;; Return value:  Size  Location     Type
 31236 ;;                  1    wreg      void 
 31237 ;; Registers used:
 31238 ;;		wreg, status,2, status,0, pclath, tosl
 31239 ;; Tracked objects:
 31240 ;;		On entry : 0/0
 31241 ;;		On exit  : 0/0
 31242 ;;		Unchanged: 0/0
 31243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31248 ;;Total ram usage:        0 bytes
 31249 ;; Hardware stack levels used:    1
 31250 ;; Hardware stack levels required when called:    2
 31251 ;; This function calls:
 31252 ;;		_INT0_CallBack
 31253 ;; This function is called by:
 31254 ;;		Interrupt level 2
 31255 ;; This function uses a non-reentrant model
 31256 ;;
 31257                           
 31258                           	psect	text148
 31259  01ABC8                     __ptext148:
 31260                           	opt callstack 0
 31261  01ABC8                     _INT0_ISR:
 31262                           	opt callstack 3
 31263                           
 31264                           ;incstack = 0
 31265  01ABC8  EE14  F0C2         	lfsr	1,___inthi_sp
 31266                           
 31267                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 31268  01ABCC  0139               	movlb	57	; () banked
 31269  01ABCE  91A1               	bcf	161,0,b	;volatile
 31270                           
 31271                           ; BSR set to: 57
 31272                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 31273  01ABD0  ECAA  F0D4         	call	_INT0_CallBack	;wreg free
 31274  01ABD4  0011               	retfie		f
 31275  01ABD6                     __end_of_INT0_ISR:
 31276                           	opt callstack 0
 31277                           
 31278 ;; *************** function _INT0_CallBack *****************
 31279 ;; Defined at:
 31280 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 31281 ;; Parameters:    Size  Location     Type
 31282 ;;		None
 31283 ;; Auto vars:     Size  Location     Type
 31284 ;;		None
 31285 ;; Return value:  Size  Location     Type
 31286 ;;                  1  [STACK] void 
 31287 ;; Registers used:
 31288 ;;		wreg, status,2, status,0, pclath, tosl
 31289 ;; Tracked objects:
 31290 ;;		On entry : 3F/39
 31291 ;;		On exit  : 0/0
 31292 ;;		Unchanged: 0/0
 31293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31298 ;;Total ram usage:        0 bytes
 31299 ;; Hardware stack levels used:    1
 31300 ;; Hardware stack levels required when called:    1
 31301 ;; This function calls:
 31302 ;;		Absolute function
 31303 ;;		_INT0_DefaultInterruptHandler
 31304 ;; This function is called by:
 31305 ;;		_INT0_ISR
 31306 ;; This function uses a reentrant model
 31307 ;;
 31308                           
 31309                           	psect	text149
 31310  01A954                     __ptext149:
 31311                           	opt callstack 0
 31312  01A954                     _INT0_CallBack:
 31313                           	opt callstack 3
 31314                           
 31315                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 31316                           
 31317                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31318                           ;incstack = 0
 31319  01A954  0100               	movlb	0	; () banked
 31320  01A956  51B7               	movf	_INT0_InterruptHandler& (0+255),w,b
 31321  01A958  11B8               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 31322  01A95A  11B9               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 31323  01A95C  B4D8               	btfsc	status,2,c
 31324  01A95E  0012               	return	
 31325                           
 31326                           ; BSR set to: 0
 31327                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 31328  01A960  D801               	call	u932_48
 31329  01A962  0012               	return	
 31330  01A964                     u932_48:
 31331  01A964  0005               	push	
 31332  01A966  6EFA               	movwf	pclath,c
 31333  01A968  51B7               	movf	_INT0_InterruptHandler& (0+255),w,b
 31334  01A96A  6EFD               	movwf	tosl,c
 31335  01A96C  51B8               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 31336  01A96E  6EFE               	movwf	tosh,c
 31337  01A970  51B9               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 31338  01A972  6EFF               	movwf	tosu,c
 31339  01A974  50FA               	movf	pclath,w,c
 31340  01A976  0012               	return		;indir
 31341  01A978                     __end_of_INT0_CallBack:
 31342                           	opt callstack 0
 31343                           
 31344 ;; *************** function _INT0_DefaultInterruptHandler *****************
 31345 ;; Defined at:
 31346 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 31347 ;; Parameters:    Size  Location     Type
 31348 ;;		None
 31349 ;; Auto vars:     Size  Location     Type
 31350 ;;		None
 31351 ;; Return value:  Size  Location     Type
 31352 ;;                  1  [STACK] void 
 31353 ;; Registers used:
 31354 ;;		None
 31355 ;; Tracked objects:
 31356 ;;		On entry : 3F/0
 31357 ;;		On exit  : 0/0
 31358 ;;		Unchanged: 0/0
 31359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31363 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31364 ;;Total ram usage:        0 bytes
 31365 ;; Hardware stack levels used:    1
 31366 ;; This function calls:
 31367 ;;		Nothing
 31368 ;; This function is called by:
 31369 ;;		_EXT_INT_Initialize
 31370 ;;		_INT0_CallBack
 31371 ;; This function uses a reentrant model
 31372 ;;
 31373                           
 31374                           	psect	text150
 31375  01AC6A                     __ptext150:
 31376                           	opt callstack 0
 31377  01AC6A                     _INT0_DefaultInterruptHandler:
 31378                           	opt callstack 3
 31379                           
 31380                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 31381                           
 31382                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31383                           ;incstack = 0
 31384  01AC6A  0012               	return		;funcret
 31385  01AC6C                     __end_of_INT0_DefaultInterruptHandler:
 31386                           	opt callstack 0
 31387                           
 31388 ;; *************** function _Default_ISR *****************
 31389 ;; Defined at:
 31390 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 31391 ;; Parameters:    Size  Location     Type
 31392 ;;		None
 31393 ;; Auto vars:     Size  Location     Type
 31394 ;;		None
 31395 ;; Return value:  Size  Location     Type
 31396 ;;                  1    wreg      void 
 31397 ;; Registers used:
 31398 ;;		None
 31399 ;; Tracked objects:
 31400 ;;		On entry : 0/0
 31401 ;;		On exit  : 0/0
 31402 ;;		Unchanged: 0/0
 31403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31407 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31408 ;;Total ram usage:        0 bytes
 31409 ;; Hardware stack levels used:    1
 31410 ;; This function calls:
 31411 ;;		Nothing
 31412 ;; This function is called by:
 31413 ;;		Interrupt level 2
 31414 ;; This function uses a non-reentrant model
 31415 ;;
 31416                           
 31417                           	psect	text151
 31418  01AC60                     __ptext151:
 31419                           	opt callstack 0
 31420  01AC60                     _Default_ISR:
 31421                           	opt callstack 5
 31422                           
 31423                           ;incstack = 0
 31424  01AC60  EE14  F0C2         	lfsr	1,___inthi_sp
 31425  01AC64  0011               	retfie		f
 31426  01AC66                     __end_of_Default_ISR:
 31427                           	opt callstack 0
 31428                           
 31429 ;; *************** function _ADCC_ISR *****************
 31430 ;; Defined at:
 31431 ;;		line 314 in file "mcc_generated_files/adcc.c"
 31432 ;; Parameters:    Size  Location     Type
 31433 ;;		None
 31434 ;; Auto vars:     Size  Location     Type
 31435 ;;		None
 31436 ;; Return value:  Size  Location     Type
 31437 ;;                  1    wreg      void 
 31438 ;; Registers used:
 31439 ;;		wreg, status,2, status,0, pclath, tosl
 31440 ;; Tracked objects:
 31441 ;;		On entry : 0/0
 31442 ;;		On exit  : 0/0
 31443 ;;		Unchanged: 0/0
 31444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31449 ;;Total ram usage:        0 bytes
 31450 ;; Hardware stack levels used:    1
 31451 ;; Hardware stack levels required when called:    1
 31452 ;; This function calls:
 31453 ;;		Absolute function
 31454 ;;		_ADCC_DefaultInterruptHandler
 31455 ;;		_adc_int_handler
 31456 ;; This function is called by:
 31457 ;;		Interrupt level 2
 31458 ;; This function uses a non-reentrant model
 31459 ;;
 31460                           
 31461                           	psect	text152
 31462  01A574                     __ptext152:
 31463                           	opt callstack 0
 31464  01A574                     _ADCC_ISR:
 31465                           	opt callstack 4
 31466                           
 31467                           ;incstack = 0
 31468  01A574  EE14  F0C2         	lfsr	1,___inthi_sp
 31469                           
 31470                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 31471  01A578  0139               	movlb	57	; () banked
 31472  01A57A  95A1               	bcf	161,2,b	;volatile
 31473                           
 31474                           ; BSR set to: 57
 31475                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 31476  01A57C  0100               	movlb	0	; () banked
 31477  01A57E  51A8               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 31478  01A580  11A9               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 31479  01A582  11AA               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 31480  01A584  B4D8               	btfsc	status,2,c
 31481  01A586  0011               	retfie		f
 31482                           
 31483                           ; BSR set to: 0
 31484                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 31485  01A588  D801               	call	i2u971_48
 31486  01A58A  0011               	retfie		f
 31487  01A58C                     i2u971_48:
 31488  01A58C  0005               	push	
 31489  01A58E  6EFA               	movwf	pclath,c
 31490  01A590  51A8               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 31491  01A592  6EFD               	movwf	tosl,c
 31492  01A594  51A9               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 31493  01A596  6EFE               	movwf	tosh,c
 31494  01A598  51AA               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 31495  01A59A  6EFF               	movwf	tosu,c
 31496  01A59C  50FA               	movf	pclath,w,c
 31497  01A59E  0012               	return		;indir
 31498  01A5A0                     __end_of_ADCC_ISR:
 31499                           	opt callstack 0
 31500                           
 31501 ;; *************** function _adc_int_t_handler *****************
 31502 ;; Defined at:
 31503 ;;		line 143 in file "daq.c"
 31504 ;; Parameters:    Size  Location     Type
 31505 ;;		None
 31506 ;; Auto vars:     Size  Location     Type
 31507 ;;		None
 31508 ;; Return value:  Size  Location     Type
 31509 ;;                  1  [STACK] void 
 31510 ;; Registers used:
 31511 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 31512 ;; Tracked objects:
 31513 ;;		On entry : 3F/0
 31514 ;;		On exit  : 1/0
 31515 ;;		Unchanged: 0/0
 31516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31521 ;;Total ram usage:        0 bytes
 31522 ;; Hardware stack levels used:    1
 31523 ;; Hardware stack levels required when called:    1
 31524 ;; This function calls:
 31525 ;;		_ADCC_DischargeSampleCapacitor
 31526 ;;		_ADCC_StartConversion
 31527 ;; This function is called by:
 31528 ;;		_start_adc_scan
 31529 ;;		_ADCC_ThresholdISR
 31530 ;; This function uses a reentrant model
 31531 ;;
 31532                           
 31533                           	psect	text153
 31534  019930                     __ptext153:
 31535                           	opt callstack 0
 31536  019930                     _adc_int_t_handler:
 31537                           	opt callstack 3
 31538                           
 31539                           ;daq.c: 148:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 31540                           
 31541                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31542                           ;incstack = 0
 31543  019930  013E               	movlb	62	; () banked
 31544  019932  51E6               	movf	230,w,b	;volatile
 31545  019934  006F FB9C  F001    	movff	16103,btemp	;volatile
 31546  01993A  6A02               	clrf	(btemp+1)^0,c
 31547  01993C  0060  F004  F002   	movff	btemp,btemp+1
 31548  019942  6A01               	clrf	btemp^0,c
 31549  019944  2601               	addwf	btemp^0,f,c
 31550  019946  0E00               	movlw	0
 31551  019948  2202               	addwfc	(btemp+1)^0,f,c
 31552  01994A  0100               	movlb	0	; () banked
 31553  01994C  51EA               	movf	(_R+36)& (0+255),w,b	;volatile
 31554  01994E  0D02               	mullw	2
 31555  019950  50F3               	movf	243,w,c
 31556  019952  0FC6               	addlw	low _R
 31557  019954  6ED9               	movwf	fsr2l,c
 31558  019956  6ADA               	clrf	fsr2h,c
 31559  019958  0060  F007  FFDE   	movff	btemp,postinc2
 31560  01995E  0060  F00B  FFDD   	movff	btemp+1,postdec2
 31561  019964                     l10434:
 31562                           
 31563                           ;daq.c: 150:   if (++R.scan_index > 0XD) {
 31564  019964  0100               	movlb	0	; () banked
 31565  019966  2BEA               	incf	(_R+36)& (0+255),f,b	;volatile
 31566  019968  0E0D               	movlw	13
 31567  01996A  65EA               	cpfsgt	(_R+36)& (0+255),b	;volatile
 31568  01996C  D003               	goto	l10440
 31569                           
 31570                           ; BSR set to: 0
 31571                           ;daq.c: 151:    R.done = 1;
 31572  01996E  0E01               	movlw	1
 31573  019970  6FED               	movwf	(_R+39)& (0+255),b	;volatile
 31574  019972  0012               	return	
 31575  019974                     l10440:
 31576                           
 31577                           ; BSR set to: 0
 31578                           ;daq.c: 157:  } while (!((R.scan_select >> R.scan_index) &0x1));
 31579  019974  0060  F3A8  F00C   	movff	_R+36,btemp+11	;volatile
 31580  01997A  EE20  F0EB         	lfsr	2,_R+37	;volatile
 31581  01997E  006F FF78  F009    	movff	postinc2,btemp+8
 31582  019984  006F FF74  F00A    	movff	postdec2,btemp+9
 31583  01998A  2A0C               	incf	(btemp+11)^0,f,c
 31584  01998C  D003               	goto	u968_44
 31585  01998E                     u968_45:
 31586  01998E  90D8               	bcf	status,0,c
 31587  019990  320A               	rrcf	(btemp+9)^0,f,c
 31588  019992  3209               	rrcf	(btemp+8)^0,f,c
 31589  019994                     u968_44:
 31590  019994  2E0C               	decfsz	(btemp+11)^0,f,c
 31591  019996  D7FB               	goto	u968_45
 31592  019998  A009               	btfss	(btemp+8)^0,0,c
 31593  01999A  D7E4               	goto	l10434
 31594                           
 31595                           ;daq.c: 158:  ADCC_DischargeSampleCapacitor();
 31596  01999C  EC0F  F0D6         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 31597                           
 31598                           ; BSR set to: 62
 31599                           ;daq.c: 159:  ADCC_StartConversion(R.scan_index & 0xf);
 31600  0199A0  0100               	movlb	0	; () banked
 31601  0199A2  51EA               	movf	(_R+36)& (0+255),w,b	;volatile
 31602  0199A4  0B0F               	andlw	15
 31603  0199A6  6EE6               	movwf	postinc1,c
 31604  0199A8  ECB4  F0D5         	call	_ADCC_StartConversion	;wreg free
 31605                           
 31606                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 31607  0199AC  0012               	return		;funcret
 31608  0199AE                     __end_of_adc_int_t_handler:
 31609                           	opt callstack 0
 31610                           
 31611 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 31612 ;; Defined at:
 31613 ;;		line 339 in file "mcc_generated_files/adcc.c"
 31614 ;; Parameters:    Size  Location     Type
 31615 ;;		None
 31616 ;; Auto vars:     Size  Location     Type
 31617 ;;		None
 31618 ;; Return value:  Size  Location     Type
 31619 ;;                  1  [STACK] void 
 31620 ;; Registers used:
 31621 ;;		None
 31622 ;; Tracked objects:
 31623 ;;		On entry : 3F/0
 31624 ;;		On exit  : 0/0
 31625 ;;		Unchanged: 0/0
 31626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31630 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31631 ;;Total ram usage:        0 bytes
 31632 ;; Hardware stack levels used:    1
 31633 ;; This function calls:
 31634 ;;		Nothing
 31635 ;; This function is called by:
 31636 ;;		_ADCC_Initialize
 31637 ;;		_ADCC_ISR
 31638 ;;		_ADCC_ThresholdISR
 31639 ;; This function uses a reentrant model
 31640 ;;
 31641                           
 31642                           	psect	text154
 31643  01AC6C                     __ptext154:
 31644                           	opt callstack 0
 31645  01AC6C                     _ADCC_DefaultInterruptHandler:
 31646                           	opt callstack 4
 31647                           
 31648                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 31649                           
 31650                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31651                           ;incstack = 0
 31652  01AC6C  0012               	return		;funcret
 31653  01AC6E                     __end_of_ADCC_DefaultInterruptHandler:
 31654                           	opt callstack 0
 31655                           
 31656 ;; *************** function _adc_int_handler *****************
 31657 ;; Defined at:
 31658 ;;		line 133 in file "daq.c"
 31659 ;; Parameters:    Size  Location     Type
 31660 ;;		None
 31661 ;; Auto vars:     Size  Location     Type
 31662 ;;		None
 31663 ;; Return value:  Size  Location     Type
 31664 ;;                  1  [STACK] void 
 31665 ;; Registers used:
 31666 ;;		None
 31667 ;; Tracked objects:
 31668 ;;		On entry : 3F/0
 31669 ;;		On exit  : 0/0
 31670 ;;		Unchanged: 0/0
 31671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31676 ;;Total ram usage:        0 bytes
 31677 ;; Hardware stack levels used:    1
 31678 ;; This function calls:
 31679 ;;		Nothing
 31680 ;; This function is called by:
 31681 ;;		_start_adc_scan
 31682 ;;		_ADCC_ISR
 31683 ;; This function uses a reentrant model
 31684 ;;
 31685                           
 31686                           	psect	text155
 31687  01AC6E                     __ptext155:
 31688                           	opt callstack 0
 31689  01AC6E                     _adc_int_handler:
 31690                           	opt callstack 4
 31691                           
 31692                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31693                           
 31694                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31695                           ;incstack = 0
 31696  01AC6E  0012               	return		;funcret
 31697  01AC70                     __end_of_adc_int_handler:
 31698                           	opt callstack 0
 31699                           
 31700 ;; *************** function _ADCC_ThresholdISR *****************
 31701 ;; Defined at:
 31702 ;;		line 327 in file "mcc_generated_files/adcc.c"
 31703 ;; Parameters:    Size  Location     Type
 31704 ;;		None
 31705 ;; Auto vars:     Size  Location     Type
 31706 ;;		None
 31707 ;; Return value:  Size  Location     Type
 31708 ;;                  1    wreg      void 
 31709 ;; Registers used:
 31710 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 31711 ;; Tracked objects:
 31712 ;;		On entry : 0/0
 31713 ;;		On exit  : 0/0
 31714 ;;		Unchanged: 0/0
 31715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31718 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31719 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31720 ;;Total ram usage:        5 bytes
 31721 ;; Hardware stack levels used:    1
 31722 ;; Hardware stack levels required when called:    2
 31723 ;; This function calls:
 31724 ;;		Absolute function
 31725 ;;		_ADCC_DefaultInterruptHandler
 31726 ;;		_adc_int_t_handler
 31727 ;; This function is called by:
 31728 ;;		Interrupt level 2
 31729 ;; This function uses a non-reentrant model
 31730 ;;
 31731                           
 31732                           	psect	text156
 31733  019A84                     __ptext156:
 31734                           	opt callstack 0
 31735  019A84                     _ADCC_ThresholdISR:
 31736                           	opt callstack 3
 31737                           
 31738                           ;incstack = 0
 31739  019A84  0060  F004  F038   	movff	btemp,??_ADCC_ThresholdISR
 31740  019A8A  0060  F008  F039   	movff	btemp+1,??_ADCC_ThresholdISR+1
 31741  019A90  0060  F024  F03A   	movff	btemp+8,??_ADCC_ThresholdISR+2
 31742  019A96  0060  F028  F03B   	movff	btemp+9,??_ADCC_ThresholdISR+3
 31743  019A9C  0060  F030  F03C   	movff	btemp+11,??_ADCC_ThresholdISR+4
 31744  019AA2  EE14  F0C2         	lfsr	1,___inthi_sp
 31745                           
 31746                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 31747  019AA6  0139               	movlb	57	; () banked
 31748  019AA8  97A1               	bcf	161,3,b	;volatile
 31749                           
 31750                           ; BSR set to: 57
 31751                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 31752  019AAA  0100               	movlb	0	; () banked
 31753  019AAC  51A5               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 31754  019AAE  11A6               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 31755  019AB0  11A7               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 31756  019AB2  B4D8               	btfsc	status,2,c
 31757  019AB4  D00C               	goto	i2u973_49
 31758                           
 31759                           ; BSR set to: 0
 31760                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 31761  019AB6  D801               	call	i2u973_48
 31762  019AB8  D00A               	goto	i2u973_49
 31763  019ABA                     i2u973_48:
 31764  019ABA  0005               	push	
 31765  019ABC  6EFA               	movwf	pclath,c
 31766  019ABE  51A5               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 31767  019AC0  6EFD               	movwf	tosl,c
 31768  019AC2  51A6               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 31769  019AC4  6EFE               	movwf	tosh,c
 31770  019AC6  51A7               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 31771  019AC8  6EFF               	movwf	tosu,c
 31772  019ACA  50FA               	movf	pclath,w,c
 31773  019ACC  0012               	return		;indir
 31774  019ACE                     i2u973_49:
 31775  019ACE  0060  F0F0  F00C   	movff	??_ADCC_ThresholdISR+4,btemp+11
 31776  019AD4  0060  F0EC  F00A   	movff	??_ADCC_ThresholdISR+3,btemp+9
 31777  019ADA  0060  F0E8  F009   	movff	??_ADCC_ThresholdISR+2,btemp+8
 31778  019AE0  0060  F0E4  F002   	movff	??_ADCC_ThresholdISR+1,btemp+1
 31779  019AE6  0060  F0E0  F001   	movff	??_ADCC_ThresholdISR,btemp
 31780  019AEC  0011               	retfie		f
 31781  019AEE                     __end_of_ADCC_ThresholdISR:
 31782                           	opt callstack 0
 31783                           
 31784 ;; *************** function _UART1_rx_vect_isr *****************
 31785 ;; Defined at:
 31786 ;;		line 181 in file "mcc_generated_files/uart1.c"
 31787 ;; Parameters:    Size  Location     Type
 31788 ;;		None
 31789 ;; Auto vars:     Size  Location     Type
 31790 ;;		None
 31791 ;; Return value:  Size  Location     Type
 31792 ;;                  1    wreg      void 
 31793 ;; Registers used:
 31794 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 31795 ;; Tracked objects:
 31796 ;;		On entry : 0/0
 31797 ;;		On exit  : 0/0
 31798 ;;		Unchanged: 0/0
 31799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31804 ;;Total ram usage:        0 bytes
 31805 ;; Hardware stack levels used:    1
 31806 ;; Hardware stack levels required when called:    1
 31807 ;; This function calls:
 31808 ;;		Absolute function
 31809 ;;		_UART1_Receive_ISR
 31810 ;; This function is called by:
 31811 ;;		Interrupt level 2
 31812 ;; This function uses a non-reentrant model
 31813 ;;
 31814                           
 31815                           	psect	text157
 31816  01A828                     __ptext157:
 31817                           	opt callstack 0
 31818  01A828                     _UART1_rx_vect_isr:
 31819                           	opt callstack 4
 31820                           
 31821                           ;incstack = 0
 31822  01A828  EE14  F0C2         	lfsr	1,___inthi_sp
 31823                           
 31824                           ;mcc_generated_files/uart1.c: 183:     if(UART1_RxInterruptHandler)
 31825  01A82C  0100               	movlb	0	; () banked
 31826  01A82E  51AB               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 31827  01A830  11AC               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 31828  01A832  11AD               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 31829  01A834  B4D8               	btfsc	status,2,c
 31830  01A836  0011               	retfie		f
 31831                           
 31832                           ; BSR set to: 0
 31833                           ;mcc_generated_files/uart1.c: 184: {;mcc_generated_files/uart1.c: 185:   UART1_RxInterru
      +                          ptHandler();
 31834  01A838  D801               	call	i2u975_48
 31835  01A83A  0011               	retfie		f
 31836  01A83C                     i2u975_48:
 31837  01A83C  0005               	push	
 31838  01A83E  6EFA               	movwf	pclath,c
 31839  01A840  51AB               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 31840  01A842  6EFD               	movwf	tosl,c
 31841  01A844  51AC               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 31842  01A846  6EFE               	movwf	tosh,c
 31843  01A848  51AD               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 31844  01A84A  6EFF               	movwf	tosu,c
 31845  01A84C  50FA               	movf	pclath,w,c
 31846  01A84E  0012               	return		;indir
 31847  01A850                     __end_of_UART1_rx_vect_isr:
 31848                           	opt callstack 0
 31849                           
 31850 ;; *************** function _UART1_Receive_ISR *****************
 31851 ;; Defined at:
 31852 ;;		line 192 in file "mcc_generated_files/uart1.c"
 31853 ;; Parameters:    Size  Location     Type
 31854 ;;		None
 31855 ;; Auto vars:     Size  Location     Type
 31856 ;;		None
 31857 ;; Return value:  Size  Location     Type
 31858 ;;                  1  [STACK] void 
 31859 ;; Registers used:
 31860 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 31861 ;; Tracked objects:
 31862 ;;		On entry : 3F/0
 31863 ;;		On exit  : 0/0
 31864 ;;		Unchanged: 0/0
 31865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31870 ;;Total ram usage:        0 bytes
 31871 ;; Hardware stack levels used:    1
 31872 ;; This function calls:
 31873 ;;		Nothing
 31874 ;; This function is called by:
 31875 ;;		_UART1_Initialize
 31876 ;;		_UART1_rx_vect_isr
 31877 ;; This function uses a reentrant model
 31878 ;;
 31879                           
 31880                           	psect	text158
 31881  01AA90                     __ptext158:
 31882                           	opt callstack 0
 31883  01AA90                     _UART1_Receive_ISR:
 31884                           	opt callstack 4
 31885                           
 31886                           ;mcc_generated_files/uart1.c: 195:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 31887                           
 31888                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31889                           ;incstack = 0
 31890  01AA90  5037               	movf	_uart1RxHead^0,w,c
 31891  01AA92  0F6C               	addlw	low _uart1RxBuffer
 31892  01AA94  6ED9               	movwf	fsr2l,c
 31893  01AA96  6ADA               	clrf	fsr2h,c
 31894  01AA98  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 31895  01AA9E  2A37               	incf	_uart1RxHead^0,f,c	;volatile
 31896                           
 31897                           ;mcc_generated_files/uart1.c: 196:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 31898  01AAA0  0E07               	movlw	7
 31899  01AAA2  6437               	cpfsgt	_uart1RxHead^0,c
 31900  01AAA4  D001               	goto	l10092
 31901                           
 31902                           ;mcc_generated_files/uart1.c: 197:     {;mcc_generated_files/uart1.c: 198:   uart1RxHead
      +                           = 0;
 31903  01AAA6  6A37               	clrf	_uart1RxHead^0,c	;volatile
 31904  01AAA8                     l10092:
 31905                           
 31906                           ;mcc_generated_files/uart1.c: 200:  uart1RxCount++;
 31907  01AAA8  2A35               	incf	_uart1RxCount^0,f,c	;volatile
 31908                           
 31909                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 31910  01AAAA  0012               	return		;funcret
 31911  01AAAC                     __end_of_UART1_Receive_ISR:
 31912                           	opt callstack 0
 31913                           
 31914 ;; *************** function _UART2_tx_vect_isr *****************
 31915 ;; Defined at:
 31916 ;;		line 195 in file "mcc_generated_files/uart2.c"
 31917 ;; Parameters:    Size  Location     Type
 31918 ;;		None
 31919 ;; Auto vars:     Size  Location     Type
 31920 ;;		None
 31921 ;; Return value:  Size  Location     Type
 31922 ;;                  1    wreg      void 
 31923 ;; Registers used:
 31924 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 31925 ;; Tracked objects:
 31926 ;;		On entry : 0/0
 31927 ;;		On exit  : 0/0
 31928 ;;		Unchanged: 0/0
 31929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31933 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31934 ;;Total ram usage:        0 bytes
 31935 ;; Hardware stack levels used:    1
 31936 ;; Hardware stack levels required when called:    1
 31937 ;; This function calls:
 31938 ;;		Absolute function
 31939 ;;		_UART2_Transmit_ISR
 31940 ;; This function is called by:
 31941 ;;		Interrupt level 2
 31942 ;; This function uses a non-reentrant model
 31943 ;;
 31944                           
 31945                           	psect	text159
 31946  01A850                     __ptext159:
 31947                           	opt callstack 0
 31948  01A850                     _UART2_tx_vect_isr:
 31949                           	opt callstack 4
 31950                           
 31951                           ;incstack = 0
 31952  01A850  EE14  F0C2         	lfsr	1,___inthi_sp
 31953                           
 31954                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 31955  01A854  0100               	movlb	0	; () banked
 31956  01A856  51AE               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 31957  01A858  11AF               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 31958  01A85A  11B0               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 31959  01A85C  B4D8               	btfsc	status,2,c
 31960  01A85E  0011               	retfie		f
 31961                           
 31962                           ; BSR set to: 0
 31963                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 31964  01A860  D801               	call	i2u977_48
 31965  01A862  0011               	retfie		f
 31966  01A864                     i2u977_48:
 31967  01A864  0005               	push	
 31968  01A866  6EFA               	movwf	pclath,c
 31969  01A868  51AE               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 31970  01A86A  6EFD               	movwf	tosl,c
 31971  01A86C  51AF               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 31972  01A86E  6EFE               	movwf	tosh,c
 31973  01A870  51B0               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 31974  01A872  6EFF               	movwf	tosu,c
 31975  01A874  50FA               	movf	pclath,w,c
 31976  01A876  0012               	return		;indir
 31977  01A878                     __end_of_UART2_tx_vect_isr:
 31978                           	opt callstack 0
 31979                           
 31980 ;; *************** function _UART2_Transmit_ISR *****************
 31981 ;; Defined at:
 31982 ;;		line 213 in file "mcc_generated_files/uart2.c"
 31983 ;; Parameters:    Size  Location     Type
 31984 ;;		None
 31985 ;; Auto vars:     Size  Location     Type
 31986 ;;		None
 31987 ;; Return value:  Size  Location     Type
 31988 ;;                  1  [STACK] void 
 31989 ;; Registers used:
 31990 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 31991 ;; Tracked objects:
 31992 ;;		On entry : 3F/0
 31993 ;;		On exit  : 3B/39
 31994 ;;		Unchanged: 0/0
 31995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31999 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32000 ;;Total ram usage:        0 bytes
 32001 ;; Hardware stack levels used:    1
 32002 ;; This function calls:
 32003 ;;		Nothing
 32004 ;; This function is called by:
 32005 ;;		_UART2_Initialize
 32006 ;;		_UART2_tx_vect_isr
 32007 ;; This function uses a reentrant model
 32008 ;;
 32009                           
 32010                           	psect	text160
 32011  01A5A0                     __ptext160:
 32012                           	opt callstack 0
 32013  01A5A0                     _UART2_Transmit_ISR:
 32014                           	opt callstack 4
 32015                           
 32016                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 32017                           
 32018                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32019                           ;incstack = 0
 32020  01A5A0  0E40               	movlw	64
 32021  01A5A2  6032               	cpfslt	_uart2TxBufferRemaining^0,c
 32022  01A5A4  D010               	goto	l673
 32023                           
 32024                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 32025  01A5A6  0E54               	movlw	low _uart2TxBuffer
 32026  01A5A8  2433               	addwf	_uart2TxTail^0,w,c	;volatile
 32027  01A5AA  6ED9               	movwf	fsr2l,c
 32028  01A5AC  6ADA               	clrf	fsr2h,c
 32029  01A5AE  0E03               	movlw	high _uart2TxBuffer
 32030  01A5B0  22DA               	addwfc	fsr2h,f,c
 32031  01A5B2  50DF               	movf	indf2,w,c
 32032  01A5B4  013D               	movlb	61	; () banked
 32033  01A5B6  6FD2               	movwf	210,b	;volatile
 32034                           
 32035                           ; BSR set to: 61
 32036  01A5B8  2A33               	incf	_uart2TxTail^0,f,c	;volatile
 32037                           
 32038                           ; BSR set to: 61
 32039                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 32040  01A5BA  0E3F               	movlw	63
 32041  01A5BC  6433               	cpfsgt	_uart2TxTail^0,c
 32042  01A5BE  D001               	goto	l10104
 32043                           
 32044                           ; BSR set to: 61
 32045                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 32046  01A5C0  6A33               	clrf	_uart2TxTail^0,c	;volatile
 32047  01A5C2                     l10104:
 32048                           
 32049                           ; BSR set to: 61
 32050                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 32051  01A5C2  2A32               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 32052                           
 32053                           ;mcc_generated_files/uart2.c: 224:     }
 32054  01A5C4  0012               	return	
 32055  01A5C6                     l673:
 32056                           
 32057                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 32058  01A5C6  0139               	movlb	57	; () banked
 32059  01A5C8  9796               	bcf	150,3,b	;volatile
 32060                           
 32061                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 32062  01A5CA  0012               	return		;funcret
 32063  01A5CC                     __end_of_UART2_Transmit_ISR:
 32064                           	opt callstack 0
 32065                           
 32066 ;; *************** function _UART2_rx_vect_isr *****************
 32067 ;; Defined at:
 32068 ;;		line 203 in file "mcc_generated_files/uart2.c"
 32069 ;; Parameters:    Size  Location     Type
 32070 ;;		None
 32071 ;; Auto vars:     Size  Location     Type
 32072 ;;		None
 32073 ;; Return value:  Size  Location     Type
 32074 ;;                  1    wreg      void 
 32075 ;; Registers used:
 32076 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 32077 ;; Tracked objects:
 32078 ;;		On entry : 0/0
 32079 ;;		On exit  : 0/0
 32080 ;;		Unchanged: 0/0
 32081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32086 ;;Total ram usage:        0 bytes
 32087 ;; Hardware stack levels used:    1
 32088 ;; Hardware stack levels required when called:    1
 32089 ;; This function calls:
 32090 ;;		Absolute function
 32091 ;;		_UART2_Receive_ISR
 32092 ;; This function is called by:
 32093 ;;		Interrupt level 2
 32094 ;; This function uses a non-reentrant model
 32095 ;;
 32096                           
 32097                           	psect	text161
 32098  01A878                     __ptext161:
 32099                           	opt callstack 0
 32100  01A878                     _UART2_rx_vect_isr:
 32101                           	opt callstack 4
 32102                           
 32103                           ;incstack = 0
 32104  01A878  EE14  F0C2         	lfsr	1,___inthi_sp
 32105                           
 32106                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 32107  01A87C  0100               	movlb	0	; () banked
 32108  01A87E  51B1               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 32109  01A880  11B2               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 32110  01A882  11B3               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 32111  01A884  B4D8               	btfsc	status,2,c
 32112  01A886  0011               	retfie		f
 32113                           
 32114                           ; BSR set to: 0
 32115                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 32116  01A888  D801               	call	i2u979_48
 32117  01A88A  0011               	retfie		f
 32118  01A88C                     i2u979_48:
 32119  01A88C  0005               	push	
 32120  01A88E  6EFA               	movwf	pclath,c
 32121  01A890  51B1               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 32122  01A892  6EFD               	movwf	tosl,c
 32123  01A894  51B2               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 32124  01A896  6EFE               	movwf	tosh,c
 32125  01A898  51B3               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 32126  01A89A  6EFF               	movwf	tosu,c
 32127  01A89C  50FA               	movf	pclath,w,c
 32128  01A89E  0012               	return		;indir
 32129  01A8A0                     __end_of_UART2_rx_vect_isr:
 32130                           	opt callstack 0
 32131                           
 32132 ;; *************** function _UART2_Receive_ISR *****************
 32133 ;; Defined at:
 32134 ;;		line 233 in file "mcc_generated_files/uart2.c"
 32135 ;; Parameters:    Size  Location     Type
 32136 ;;		None
 32137 ;; Auto vars:     Size  Location     Type
 32138 ;;		None
 32139 ;; Return value:  Size  Location     Type
 32140 ;;                  1  [STACK] void 
 32141 ;; Registers used:
 32142 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 32143 ;; Tracked objects:
 32144 ;;		On entry : 3F/0
 32145 ;;		On exit  : 0/0
 32146 ;;		Unchanged: 0/0
 32147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32151 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32152 ;;Total ram usage:        0 bytes
 32153 ;; Hardware stack levels used:    1
 32154 ;; This function calls:
 32155 ;;		Nothing
 32156 ;; This function is called by:
 32157 ;;		_UART2_Initialize
 32158 ;;		_UART2_rx_vect_isr
 32159 ;; This function uses a reentrant model
 32160 ;;
 32161                           
 32162                           	psect	text162
 32163  01AA56                     __ptext162:
 32164                           	opt callstack 0
 32165  01AA56                     _UART2_Receive_ISR:
 32166                           	opt callstack 4
 32167                           
 32168                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 32169                           
 32170                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32171                           ;incstack = 0
 32172  01AA56  0E00               	movlw	low _uart2RxBuffer
 32173  01AA58  2431               	addwf	_uart2RxHead^0,w,c	;volatile
 32174  01AA5A  6ED9               	movwf	fsr2l,c
 32175  01AA5C  6ADA               	clrf	fsr2h,c
 32176  01AA5E  0E05               	movlw	high _uart2RxBuffer
 32177  01AA60  22DA               	addwfc	fsr2h,f,c
 32178  01AA62  006F F743 FFDF     	movff	15824,indf2	;volatile
 32179  01AA68  2A31               	incf	_uart2RxHead^0,f,c	;volatile
 32180                           
 32181                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 32182  01AA6A  2831               	incf	_uart2RxHead^0,w,c
 32183  01AA6C  B4D8               	btfsc	status,2,c
 32184                           
 32185                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 32186  01AA6E  6A31               	clrf	_uart2RxHead^0,c	;volatile
 32187                           
 32188                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 32189  01AA70  2A2F               	incf	_uart2RxCount^0,f,c	;volatile
 32190                           
 32191                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 32192  01AA72  0012               	return		;funcret
 32193  01AA74                     __end_of_UART2_Receive_ISR:
 32194                           	opt callstack 0
 32195                           
 32196 ;; *************** function _TMR6_ISR *****************
 32197 ;; Defined at:
 32198 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 32199 ;; Parameters:    Size  Location     Type
 32200 ;;		None
 32201 ;; Auto vars:     Size  Location     Type
 32202 ;;		None
 32203 ;; Return value:  Size  Location     Type
 32204 ;;                  1    wreg      void 
 32205 ;; Registers used:
 32206 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 32207 ;; Tracked objects:
 32208 ;;		On entry : 0/0
 32209 ;;		On exit  : 0/0
 32210 ;;		Unchanged: 0/0
 32211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32214 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32215 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32216 ;;Total ram usage:        1 bytes
 32217 ;; Hardware stack levels used:    1
 32218 ;; Hardware stack levels required when called:    2
 32219 ;; This function calls:
 32220 ;;		_TMR6_CallBack
 32221 ;; This function is called by:
 32222 ;;		Interrupt level 2
 32223 ;; This function uses a non-reentrant model
 32224 ;;
 32225                           
 32226                           	psect	text163
 32227  01AAC8                     __ptext163:
 32228                           	opt callstack 0
 32229  01AAC8                     _TMR6_ISR:
 32230                           	opt callstack 3
 32231                           
 32232                           ;incstack = 0
 32233  01AAC8  0060  F004  F03D   	movff	btemp,??_TMR6_ISR
 32234  01AACE  EE14  F0C2         	lfsr	1,___inthi_sp
 32235                           
 32236                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 32237  01AAD2  0139               	movlb	57	; () banked
 32238  01AAD4  91A9               	bcf	169,0,b	;volatile
 32239                           
 32240                           ; BSR set to: 57
 32241                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 32242  01AAD6  ECBC  F0D4         	call	_TMR6_CallBack	;wreg free
 32243  01AADA  0060  F0F4  F001   	movff	??_TMR6_ISR,btemp
 32244  01AAE0  0011               	retfie		f
 32245  01AAE2                     __end_of_TMR6_ISR:
 32246                           	opt callstack 0
 32247                           
 32248 ;; *************** function _TMR6_CallBack *****************
 32249 ;; Defined at:
 32250 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 32251 ;; Parameters:    Size  Location     Type
 32252 ;;		None
 32253 ;; Auto vars:     Size  Location     Type
 32254 ;;		None
 32255 ;; Return value:  Size  Location     Type
 32256 ;;                  1  [STACK] void 
 32257 ;; Registers used:
 32258 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 32259 ;; Tracked objects:
 32260 ;;		On entry : 3F/39
 32261 ;;		On exit  : 0/0
 32262 ;;		Unchanged: 0/0
 32263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32267 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32268 ;;Total ram usage:        0 bytes
 32269 ;; Hardware stack levels used:    1
 32270 ;; Hardware stack levels required when called:    1
 32271 ;; This function calls:
 32272 ;;		Absolute function
 32273 ;;		_TMR6_DefaultInterruptHandler
 32274 ;; This function is called by:
 32275 ;;		_TMR6_ISR
 32276 ;; This function uses a reentrant model
 32277 ;;
 32278                           
 32279                           	psect	text164
 32280  01A978                     __ptext164:
 32281                           	opt callstack 0
 32282  01A978                     _TMR6_CallBack:
 32283                           	opt callstack 3
 32284                           
 32285                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 32286                           
 32287                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32288                           ;incstack = 0
 32289  01A978  0100               	movlb	0	; () banked
 32290  01A97A  51A2               	movf	_TMR6_InterruptHandler& (0+255),w,b
 32291  01A97C  11A3               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 32292  01A97E  11A4               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 32293  01A980  B4D8               	btfsc	status,2,c
 32294  01A982  0012               	return	
 32295                           
 32296                           ; BSR set to: 0
 32297                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 32298  01A984  D801               	call	u940_48
 32299  01A986  0012               	return	
 32300  01A988                     u940_48:
 32301  01A988  0005               	push	
 32302  01A98A  6EFA               	movwf	pclath,c
 32303  01A98C  51A2               	movf	_TMR6_InterruptHandler& (0+255),w,b
 32304  01A98E  6EFD               	movwf	tosl,c
 32305  01A990  51A3               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 32306  01A992  6EFE               	movwf	tosh,c
 32307  01A994  51A4               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 32308  01A996  6EFF               	movwf	tosu,c
 32309  01A998  50FA               	movf	pclath,w,c
 32310  01A99A  0012               	return		;indir
 32311  01A99C                     __end_of_TMR6_CallBack:
 32312                           	opt callstack 0
 32313                           
 32314 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 32315 ;; Defined at:
 32316 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 32317 ;; Parameters:    Size  Location     Type
 32318 ;;		None
 32319 ;; Auto vars:     Size  Location     Type
 32320 ;;  i               1  [STACK] unsigned char 
 32321 ;; Return value:  Size  Location     Type
 32322 ;;                  1  [STACK] void 
 32323 ;; Registers used:
 32324 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 32325 ;; Tracked objects:
 32326 ;;		On entry : 3F/0
 32327 ;;		On exit  : 0/0
 32328 ;;		Unchanged: 0/0
 32329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32334 ;;Total ram usage:        0 bytes
 32335 ;; Hardware stack levels used:    1
 32336 ;; This function calls:
 32337 ;;		Nothing
 32338 ;; This function is called by:
 32339 ;;		_TMR6_Initialize
 32340 ;;		_TMR6_CallBack
 32341 ;; This function uses a reentrant model
 32342 ;;
 32343                           
 32344                           	psect	text165
 32345  019EE0                     __ptext165:
 32346                           	opt callstack 0
 32347  019EE0                     _TMR6_DefaultInterruptHandler:
 32348                           	opt callstack 0
 32349                           
 32350                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32351  019EE0  52E6               	movf	postinc1,f,c
 32352                           
 32353                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 32354                           ;stkvar	_i @ sp[(-1)+0]
 32355                           
 32356                           ;incstack = 0
 32357  019EE2  0EFF               	movlw	-1
 32358  019EE4  6AE3               	clrf	plusw1,c
 32359  019EE6                     l9692:
 32360                           
 32361                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 32362                           ;stkvar	_i @ sp[(-1)+0]
 32363  019EE6  0EFF               	movlw	-1
 32364  019EE8  50E3               	movf	plusw1,w,c
 32365  019EEA  0D02               	mullw	2
 32366  019EEC  0EE5               	movlw	low _tickCount
 32367  019EEE  24F3               	addwf	243,w,c
 32368  019EF0  6ED9               	movwf	fsr2l,c
 32369  019EF2  0E02               	movlw	high _tickCount
 32370  019EF4  20F4               	addwfc	prodh,w,c
 32371  019EF6  6EDA               	movwf	fsr2h,c
 32372  019EF8  50DE               	movf	postinc2,w,c
 32373  019EFA  10DE               	iorwf	postinc2,w,c
 32374  019EFC  B4D8               	btfsc	status,2,c
 32375  019EFE  D00C               	goto	l9696
 32376                           
 32377                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 32378                           ;stkvar	_i @ sp[(-1)+0]
 32379  019F00  0EFF               	movlw	-1
 32380  019F02  50E3               	movf	plusw1,w,c
 32381  019F04  0D02               	mullw	2
 32382  019F06  0EE5               	movlw	low _tickCount
 32383  019F08  24F3               	addwf	243,w,c
 32384  019F0A  6ED9               	movwf	fsr2l,c
 32385  019F0C  0E02               	movlw	high _tickCount
 32386  019F0E  20F4               	addwfc	prodh,w,c
 32387  019F10  6EDA               	movwf	fsr2h,c
 32388  019F12  06DE               	decf	postinc2,f,c
 32389  019F14  0E00               	movlw	0
 32390  019F16  5ADD               	subwfb	postdec2,f,c
 32391  019F18                     l9696:
 32392                           
 32393                           ;mcc_generated_files/tmr6.c: 207:  }
 32394                           ;stkvar	_i @ sp[(-1)+0]
 32395  019F18  0EFF               	movlw	-1
 32396  019F1A  2AE3               	incf	plusw1,f,c
 32397                           
 32398                           ;stkvar	_i @ sp[(-1)+0]
 32399  019F1C  0EFF               	movlw	-1
 32400  019F1E  006F FF8C  F001    	movff	plusw1,btemp
 32401  019F24  0E0B               	movlw	11
 32402  019F26  6401               	cpfsgt	btemp^0,c
 32403  019F28  D7DE               	goto	l9692
 32404                           
 32405                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 32406  019F2A  52E5               	movf	postdec1,f,c
 32407  019F2C  0012               	return		;funcret
 32408  019F2E                     __end_of_TMR6_DefaultInterruptHandler:
 32409                           	opt callstack 0
 32410                           
 32411 ;; *************** function _DMA1_DMASCNT_ISR *****************
 32412 ;; Defined at:
 32413 ;;		line 126 in file "mcc_generated_files/dma1.c"
 32414 ;; Parameters:    Size  Location     Type
 32415 ;;		None
 32416 ;; Auto vars:     Size  Location     Type
 32417 ;;		None
 32418 ;; Return value:  Size  Location     Type
 32419 ;;                  1    wreg      void 
 32420 ;; Registers used:
 32421 ;;		None
 32422 ;; Tracked objects:
 32423 ;;		On entry : 0/0
 32424 ;;		On exit  : 3F/0
 32425 ;;		Unchanged: 0/0
 32426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32430 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32431 ;;Total ram usage:        0 bytes
 32432 ;; Hardware stack levels used:    1
 32433 ;; This function calls:
 32434 ;;		Nothing
 32435 ;; This function is called by:
 32436 ;;		Interrupt level 2
 32437 ;; This function uses a non-reentrant model
 32438 ;;
 32439                           
 32440                           	psect	text166
 32441  01ABD8                     __ptext166:
 32442                           	opt callstack 0
 32443  01ABD8                     _DMA1_DMASCNT_ISR:
 32444                           	opt callstack 5
 32445                           
 32446                           ;incstack = 0
 32447  01ABD8  EE14  F0C2         	lfsr	1,___inthi_sp
 32448                           
 32449                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 32450  01ABDC  0139               	movlb	57	; () banked
 32451  01ABDE  91A2               	bcf	162,0,b	;volatile
 32452                           
 32453                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 32454  01ABE0  0100               	movlb	0	; () banked
 32455  01ABE2  9760               	bcf	_spi_link& (0+255),3,b	;volatile
 32456                           
 32457                           ; BSR set to: 0
 32458  01ABE4  0011               	retfie		f
 32459  01ABE6                     __end_of_DMA1_DMASCNT_ISR:
 32460                           	opt callstack 0
 32461                           
 32462 ;; *************** function _DMA1_DMADCNT_ISR *****************
 32463 ;; Defined at:
 32464 ;;		line 134 in file "mcc_generated_files/dma1.c"
 32465 ;; Parameters:    Size  Location     Type
 32466 ;;		None
 32467 ;; Auto vars:     Size  Location     Type
 32468 ;;		None
 32469 ;; Return value:  Size  Location     Type
 32470 ;;                  1    wreg      void 
 32471 ;; Registers used:
 32472 ;;		None
 32473 ;; Tracked objects:
 32474 ;;		On entry : 0/0
 32475 ;;		On exit  : 3F/39
 32476 ;;		Unchanged: 0/0
 32477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32481 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32482 ;;Total ram usage:        0 bytes
 32483 ;; Hardware stack levels used:    1
 32484 ;; This function calls:
 32485 ;;		Nothing
 32486 ;; This function is called by:
 32487 ;;		Interrupt level 2
 32488 ;; This function uses a non-reentrant model
 32489 ;;
 32490                           
 32491                           	psect	text167
 32492  01ABFC                     __ptext167:
 32493                           	opt callstack 0
 32494  01ABFC                     _DMA1_DMADCNT_ISR:
 32495                           	opt callstack 5
 32496                           
 32497                           ; BSR set to: 0
 32498                           ;incstack = 0
 32499  01ABFC  EE14  F0C2         	lfsr	1,___inthi_sp
 32500                           
 32501                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 32502  01AC00  0139               	movlb	57	; () banked
 32503  01AC02  93A2               	bcf	162,1,b	;volatile
 32504                           
 32505                           ; BSR set to: 57
 32506  01AC04  0011               	retfie		f
 32507  01AC06                     __end_of_DMA1_DMADCNT_ISR:
 32508                           	opt callstack 0
 32509                           
 32510 ;; *************** function _DMA1_DMAA_ISR *****************
 32511 ;; Defined at:
 32512 ;;		line 144 in file "mcc_generated_files/dma1.c"
 32513 ;; Parameters:    Size  Location     Type
 32514 ;;		None
 32515 ;; Auto vars:     Size  Location     Type
 32516 ;;		None
 32517 ;; Return value:  Size  Location     Type
 32518 ;;                  1    wreg      void 
 32519 ;; Registers used:
 32520 ;;		None
 32521 ;; Tracked objects:
 32522 ;;		On entry : 0/0
 32523 ;;		On exit  : 3F/39
 32524 ;;		Unchanged: 0/0
 32525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32530 ;;Total ram usage:        0 bytes
 32531 ;; Hardware stack levels used:    1
 32532 ;; This function calls:
 32533 ;;		Nothing
 32534 ;; This function is called by:
 32535 ;;		Interrupt level 2
 32536 ;; This function uses a non-reentrant model
 32537 ;;
 32538                           
 32539                           	psect	text168
 32540  01AC08                     __ptext168:
 32541                           	opt callstack 0
 32542  01AC08                     _DMA1_DMAA_ISR:
 32543                           	opt callstack 5
 32544                           
 32545                           ; BSR set to: 57
 32546                           ;incstack = 0
 32547  01AC08  EE14  F0C2         	lfsr	1,___inthi_sp
 32548                           
 32549                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 32550  01AC0C  0139               	movlb	57	; () banked
 32551  01AC0E  97A2               	bcf	162,3,b	;volatile
 32552                           
 32553                           ; BSR set to: 57
 32554  01AC10  0011               	retfie		f
 32555  01AC12                     __end_of_DMA1_DMAA_ISR:
 32556                           	opt callstack 0
 32557                           
 32558 ;; *************** function _DMA1_DMAOR_ISR *****************
 32559 ;; Defined at:
 32560 ;;		line 155 in file "mcc_generated_files/dma1.c"
 32561 ;; Parameters:    Size  Location     Type
 32562 ;;		None
 32563 ;; Auto vars:     Size  Location     Type
 32564 ;;		None
 32565 ;; Return value:  Size  Location     Type
 32566 ;;                  1    wreg      void 
 32567 ;; Registers used:
 32568 ;;		None
 32569 ;; Tracked objects:
 32570 ;;		On entry : 0/0
 32571 ;;		On exit  : 3F/39
 32572 ;;		Unchanged: 0/0
 32573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32578 ;;Total ram usage:        0 bytes
 32579 ;; Hardware stack levels used:    1
 32580 ;; This function calls:
 32581 ;;		Nothing
 32582 ;; This function is called by:
 32583 ;;		Interrupt level 2
 32584 ;; This function uses a non-reentrant model
 32585 ;;
 32586                           
 32587                           	psect	text169
 32588  01AC14                     __ptext169:
 32589                           	opt callstack 0
 32590  01AC14                     _DMA1_DMAOR_ISR:
 32591                           	opt callstack 5
 32592                           
 32593                           ; BSR set to: 57
 32594                           ;incstack = 0
 32595  01AC14  EE14  F0C2         	lfsr	1,___inthi_sp
 32596                           
 32597                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 32598  01AC18  0139               	movlb	57	; () banked
 32599  01AC1A  95A2               	bcf	162,2,b	;volatile
 32600                           
 32601                           ; BSR set to: 57
 32602  01AC1C  0011               	retfie		f
 32603  01AC1E                     __end_of_DMA1_DMAOR_ISR:
 32604                           	opt callstack 0
 32605                           
 32606                           ;
 32607                           ; Interrupt Vector Table @ 0x8
 32608                           ;
 32609                           
 32610                           	psect	ivt0x8
 32611  000008                     __pivt0x8:
 32612                           	opt callstack 0
 32613  000008                     ivt0x8_base:
 32614                           	opt callstack 0
 32615                           
 32616                           ; Vector 0 : SWINT
 32617  000008  6B18               	dw	_Default_ISR shr (0+2)
 32618                           
 32619                           ; Vector 1 : HLVD
 32620  00000A  6B18               	dw	_Default_ISR shr (0+2)
 32621                           
 32622                           ; Vector 2 : OSF
 32623  00000C  6B18               	dw	_Default_ISR shr (0+2)
 32624                           
 32625                           ; Vector 3 : CSW
 32626  00000E  6B18               	dw	_Default_ISR shr (0+2)
 32627                           
 32628                           ; Vector 4 : NVM
 32629  000010  6B18               	dw	_Default_ISR shr (0+2)
 32630                           
 32631                           ; Vector 5 : SCAN
 32632  000012  6B18               	dw	_Default_ISR shr (0+2)
 32633                           
 32634                           ; Vector 6 : CRC
 32635  000014  6B18               	dw	_Default_ISR shr (0+2)
 32636                           
 32637                           ; Vector 7 : IOC
 32638  000016  6B18               	dw	_Default_ISR shr (0+2)
 32639                           
 32640                           ; Vector 8 : INT0
 32641  000018  6AF2               	dw	_INT0_ISR shr (0+2)
 32642                           
 32643                           ; Vector 9 : ZCD
 32644  00001A  6B18               	dw	_Default_ISR shr (0+2)
 32645                           
 32646                           ; Vector 10 : AD
 32647  00001C  695D               	dw	_ADCC_ISR shr (0+2)
 32648                           
 32649                           ; Vector 11 : ADT
 32650  00001E  66A1               	dw	_ADCC_ThresholdISR shr (0+2)
 32651                           
 32652                           ; Vector 12 : CMP1
 32653  000020  6B18               	dw	_Default_ISR shr (0+2)
 32654                           
 32655                           ; Vector 13 : SMT1
 32656  000022  6B18               	dw	_Default_ISR shr (0+2)
 32657                           
 32658                           ; Vector 14 : SMT1PRA
 32659  000024  6B18               	dw	_Default_ISR shr (0+2)
 32660                           
 32661                           ; Vector 15 : SMT1PRW
 32662  000026  6B18               	dw	_Default_ISR shr (0+2)
 32663                           
 32664                           ; Vector 16 : DMA1SCNT
 32665  000028  6AF6               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 32666                           
 32667                           ; Vector 17 : DMA1DCNT
 32668  00002A  6AFF               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 32669                           
 32670                           ; Vector 18 : DMA1OR
 32671  00002C  6B05               	dw	_DMA1_DMAOR_ISR shr (0+2)
 32672                           
 32673                           ; Vector 19 : DMA1A
 32674  00002E  6B02               	dw	_DMA1_DMAA_ISR shr (0+2)
 32675                           
 32676                           ; Vector 20 : SPI1RX
 32677  000030  6B18               	dw	_Default_ISR shr (0+2)
 32678                           
 32679                           ; Vector 21 : SPI1TX
 32680  000032  6B18               	dw	_Default_ISR shr (0+2)
 32681                           
 32682                           ; Vector 22 : SPI1
 32683  000034  6B18               	dw	_Default_ISR shr (0+2)
 32684                           
 32685                           ; Vector 23 : I2C1RX
 32686  000036  6B18               	dw	_Default_ISR shr (0+2)
 32687                           
 32688                           ; Vector 24 : I2C1TX
 32689  000038  6B18               	dw	_Default_ISR shr (0+2)
 32690                           
 32691                           ; Vector 25 : I2C1
 32692  00003A  6B18               	dw	_Default_ISR shr (0+2)
 32693                           
 32694                           ; Vector 26 : I2C1E
 32695  00003C  6B18               	dw	_Default_ISR shr (0+2)
 32696                           
 32697                           ; Vector 27 : U1RX
 32698  00003E  6A0A               	dw	_UART1_rx_vect_isr shr (0+2)
 32699                           
 32700                           ; Vector 28 : U1TX
 32701  000040  6B18               	dw	_Default_ISR shr (0+2)
 32702                           
 32703                           ; Vector 29 : U1E
 32704  000042  6B18               	dw	_Default_ISR shr (0+2)
 32705                           
 32706                           ; Vector 30 : U1
 32707  000044  6B18               	dw	_Default_ISR shr (0+2)
 32708                           
 32709                           ; Vector 31 : TMR0
 32710  000046  6B18               	dw	_Default_ISR shr (0+2)
 32711                           
 32712                           ; Vector 32 : TMR1
 32713  000048  6B18               	dw	_Default_ISR shr (0+2)
 32714                           
 32715                           ; Vector 33 : TMR1G
 32716  00004A  6B18               	dw	_Default_ISR shr (0+2)
 32717                           
 32718                           ; Vector 34 : TMR2
 32719  00004C  6B18               	dw	_Default_ISR shr (0+2)
 32720                           
 32721                           ; Vector 35 : CCP1
 32722  00004E  6B18               	dw	_Default_ISR shr (0+2)
 32723                           
 32724                           ; Vector 36 : Undefined
 32725  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 32726                           
 32727                           ; Vector 37 : NCO1
 32728  000052  6B18               	dw	_Default_ISR shr (0+2)
 32729                           
 32730                           ; Vector 38 : CWG1
 32731  000054  6B18               	dw	_Default_ISR shr (0+2)
 32732                           
 32733                           ; Vector 39 : CLC1
 32734  000056  6B18               	dw	_Default_ISR shr (0+2)
 32735                           
 32736                           ; Vector 40 : INT1
 32737  000058  68A9               	dw	_INT1_ISR shr (0+2)
 32738                           
 32739                           ; Vector 41 : CMP2
 32740  00005A  6B18               	dw	_Default_ISR shr (0+2)
 32741                           
 32742                           ; Vector 42 : DMA2SCNT
 32743  00005C  6B18               	dw	_Default_ISR shr (0+2)
 32744                           
 32745                           ; Vector 43 : DMA2DCNT
 32746  00005E  6B18               	dw	_Default_ISR shr (0+2)
 32747                           
 32748                           ; Vector 44 : DMA2OR
 32749  000060  6B18               	dw	_Default_ISR shr (0+2)
 32750                           
 32751                           ; Vector 45 : DMA2A
 32752  000062  6B18               	dw	_Default_ISR shr (0+2)
 32753                           
 32754                           ; Vector 46 : I2C2RX
 32755  000064  6B18               	dw	_Default_ISR shr (0+2)
 32756                           
 32757                           ; Vector 47 : I2C2TX
 32758  000066  6B18               	dw	_Default_ISR shr (0+2)
 32759                           
 32760                           ; Vector 48 : I2C2
 32761  000068  6B18               	dw	_Default_ISR shr (0+2)
 32762                           
 32763                           ; Vector 49 : I2C2E
 32764  00006A  6B18               	dw	_Default_ISR shr (0+2)
 32765                           
 32766                           ; Vector 50 : U2RX
 32767  00006C  6A1E               	dw	_UART2_rx_vect_isr shr (0+2)
 32768                           
 32769                           ; Vector 51 : U2TX
 32770  00006E  6A14               	dw	_UART2_tx_vect_isr shr (0+2)
 32771                           
 32772                           ; Vector 52 : U2E
 32773  000070  6B18               	dw	_Default_ISR shr (0+2)
 32774                           
 32775                           ; Vector 53 : U2
 32776  000072  6B18               	dw	_Default_ISR shr (0+2)
 32777                           
 32778                           ; Vector 54 : TMR3
 32779  000074  5FB1               	dw	_TMR3_ISR shr (0+2)
 32780                           
 32781                           ; Vector 55 : TMR3G
 32782  000076  6B18               	dw	_Default_ISR shr (0+2)
 32783                           
 32784                           ; Vector 56 : TMR4
 32785  000078  6B18               	dw	_Default_ISR shr (0+2)
 32786                           
 32787                           ; Vector 57 : CCP2
 32788  00007A  6B18               	dw	_Default_ISR shr (0+2)
 32789                           
 32790                           ; Vector 58 : Undefined
 32791  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 32792                           
 32793                           ; Vector 59 : CWG2
 32794  00007E  6B18               	dw	_Default_ISR shr (0+2)
 32795                           
 32796                           ; Vector 60 : CLC2
 32797  000080  6B18               	dw	_Default_ISR shr (0+2)
 32798                           
 32799                           ; Vector 61 : INT2
 32800  000082  6B18               	dw	_Default_ISR shr (0+2)
 32801                           
 32802                           ; Vector 62 : Undefined
 32803  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 32804                           
 32805                           ; Vector 63 : Undefined
 32806  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 32807                           
 32808                           ; Vector 64 : Undefined
 32809  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 32810                           
 32811                           ; Vector 65 : Undefined
 32812  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 32813                           
 32814                           ; Vector 66 : Undefined
 32815  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 32816                           
 32817                           ; Vector 67 : Undefined
 32818  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 32819                           
 32820                           ; Vector 68 : Undefined
 32821  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 32822                           
 32823                           ; Vector 69 : Undefined
 32824  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 32825                           
 32826                           ; Vector 70 : TMR5
 32827  000094  6764               	dw	_TMR5_ISR shr (0+2)
 32828                           
 32829                           ; Vector 71 : TMR5G
 32830  000096  6B18               	dw	_Default_ISR shr (0+2)
 32831                           
 32832                           ; Vector 72 : TMR6
 32833  000098  6AB2               	dw	_TMR6_ISR shr (0+2)
 32834                           
 32835                           ; Vector 73 : CCP3
 32836  00009A  6B18               	dw	_Default_ISR shr (0+2)
 32837                           
 32838                           ; Vector 74 : CWG3
 32839  00009C  6B18               	dw	_Default_ISR shr (0+2)
 32840                           
 32841                           ; Vector 75 : CLC3
 32842  00009E  6B18               	dw	_Default_ISR shr (0+2)
 32843                           
 32844                           ; Vector 76 : Undefined
 32845  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 32846                           
 32847                           ; Vector 77 : Undefined
 32848  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 32849                           
 32850                           ; Vector 78 : Undefined
 32851  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 32852                           
 32853                           ; Vector 79 : Undefined
 32854  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 32855                           
 32856                           ; Vector 80 : CCP4
 32857  0000A8  6B18               	dw	_Default_ISR shr (0+2)
 32858                           
 32859                           ; Vector 81 : CLC4
 32860  0000AA  6B18               	dw	_Default_ISR shr (0+2)
 32861  0000AC                     ivt0x8_undefint:
 32862                           	opt callstack 0
 32863  0000AC  00FF               	reset	
 32864                           
 32865                           	psect	text170
 32866  000000                     __ptext170:
 32867                           	opt callstack 0
 32868                           
 32869                           	psect	rparam
 32870  0000                     
 32871                           	psect	temp
 32872  000001                     btemp:
 32873                           	opt callstack 0
 32874  000001                     	ds	32
 32875  0000                     wtemp0	set	btemp
 32876  0000                     wtemp1	set	btemp+2
 32877  0000                     wtemp2	set	btemp+4
 32878  0000                     wtemp3	set	btemp+6
 32879  0000                     wtemp4	set	btemp+8
 32880  0000                     wtemp5	set	btemp+10
 32881  0000                     wtemp8	set	btemp+1
 32882  0000                     ttemp0	set	btemp
 32883  0000                     ttemp1	set	btemp+3
 32884  0000                     ttemp2	set	btemp+6
 32885  0000                     ttemp3	set	btemp+9
 32886  0000                     ttemp5	set	btemp+1
 32887  0000                     ttemp6	set	btemp+4
 32888  0000                     ttemp7	set	btemp+8
 32889  0000                     ltemp0	set	btemp
 32890  0000                     ltemp1	set	btemp+4
 32891  0000                     ltemp2	set	btemp+8
 32892  0000                     lltemp0	set	btemp
 32893  0000                     lltemp1	set	btemp+8
 32894  0000                     lltemp2	set	btemp+16
 32895  0000                     lltemp3	set	btemp+24
 32896                           tosu	equ	0x3FFF
 32897                           tosh	equ	0x3FFE
 32898                           tosl	equ	0x3FFD
 32899                           stkptr	equ	0x3FFC
 32900                           pclatu	equ	0x3FFB
 32901                           pclath	equ	0x3FFA
 32902                           pcl	equ	0x3FF9
 32903                           tblptru	equ	0x3FF8
 32904                           tblptrh	equ	0x3FF7
 32905                           tblptrl	equ	0x3FF6
 32906                           tablat	equ	0x3FF5
 32907                           prodh	equ	0x3FF4
 32908                           prodl	equ	0x3FF3
 32909                           indf0	equ	0x3FEF
 32910                           postinc0	equ	0x3FEE
 32911                           postdec0	equ	0x3FED
 32912                           preinc0	equ	0x3FEC
 32913                           plusw0	equ	0x3FEB
 32914                           fsr0h	equ	0x3FEA
 32915                           fsr0l	equ	0x3FE9
 32916                           wreg	equ	0x3FE8
 32917                           indf1	equ	0x3FE7
 32918                           postinc1	equ	0x3FE6
 32919                           postdec1	equ	0x3FE5
 32920                           preinc1	equ	0x3FE4
 32921                           plusw1	equ	0x3FE3
 32922                           fsr1h	equ	0x3FE2
 32923                           fsr1l	equ	0x3FE1
 32924                           bsr	equ	0x3FE0
 32925                           indf2	equ	0x3FDF
 32926                           postinc2	equ	0x3FDE
 32927                           postdec2	equ	0x3FDD
 32928                           preinc2	equ	0x3FDC
 32929                           plusw2	equ	0x3FDB
 32930                           fsr2h	equ	0x3FDA
 32931                           fsr2l	equ	0x3FD9
 32932                           status	equ	0x3FD8


Data Sizes:
    Strings     572
    Constant    372
    Data        997
    BSS         1097
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     14      37
    BANK0           160      0     156
    BANK1           256      0     243
    BANK2           256      0     253
    BANK3           256     25     253
    BANK4           256      0     134
    BANK5           256      0     255
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_85(CODE[1]), STR_47(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_82(CODE[3]), STR_78(CODE[3]), STR_73(CODE[3]), STR_68(CODE[3]), 
		 -> STR_63(CODE[3]), STR_59(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_82(CODE[3]), STR_78(CODE[3]), STR_73(CODE[3]), STR_68(CODE[3]), 
		 -> STR_63(CODE[3]), STR_59(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 79
		 -> ct(STACK[3]), STR_48(CODE[79]), STR_46(CODE[3]), STR_45(CODE[3]), 
		 -> STR_44(CODE[19]), STR_43(CODE[19]), STR_42(CODE[19]), STR_41(CODE[19]), 
		 -> STR_40(CODE[19]), STR_39(CODE[19]), STR_38(CODE[24]), STR_37(CODE[15]), 
		 -> STR_36(CODE[15]), STR_35(CODE[15]), STR_34(CODE[10]), STR_33(CODE[10]), 
		 -> STR_32(CODE[19]), STR_31(CODE[19]), STR_28(CODE[3]), STR_27(CODE[3]), 
		 -> STR_26(CODE[3]), STR_25(CODE[17]), STR_24(CODE[16]), STR_23(CODE[16]), 
		 -> STR_22(CODE[19]), STR_21(CODE[20]), STR_20(CODE[19]), STR_19(CODE[19]), 
		 -> STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), STR_15(CODE[19]), 
		 -> STR_14(CODE[19]), STR_13(CODE[17]), STR_12(CODE[16]), STR_11(CODE[16]), 
		 -> STR_10(CODE[22]), STR_9(CODE[22]), STR_8(CODE[22]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    l	PTR const unsigned char  size(2) Largest target is 79
		 -> ct(STACK[3]), STR_48(CODE[79]), STR_46(CODE[3]), STR_45(CODE[3]), 
		 -> STR_44(CODE[19]), STR_43(CODE[19]), STR_42(CODE[19]), STR_41(CODE[19]), 
		 -> STR_40(CODE[19]), STR_39(CODE[19]), STR_38(CODE[24]), STR_37(CODE[15]), 
		 -> STR_36(CODE[15]), STR_35(CODE[15]), STR_34(CODE[10]), STR_33(CODE[10]), 
		 -> STR_32(CODE[19]), STR_31(CODE[19]), STR_28(CODE[3]), STR_27(CODE[3]), 
		 -> STR_26(CODE[3]), STR_25(CODE[17]), STR_24(CODE[16]), STR_23(CODE[16]), 
		 -> STR_22(CODE[19]), STR_21(CODE[20]), STR_20(CODE[19]), STR_19(CODE[19]), 
		 -> STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), STR_15(CODE[19]), 
		 -> STR_14(CODE[19]), STR_13(CODE[17]), STR_12(CODE[16]), STR_11(CODE[16]), 
		 -> STR_10(CODE[22]), STR_9(CODE[22]), STR_8(CODE[22]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    s	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK3[80]), 
		 -> STR_30(CODE[9]), STR_29(CODE[12]), D.lcd(BIGRAM[288]), D(BIGRAM[290]), 
		 -> T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[6]), V(BANK2[188]), 

    a	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK3[80]), 
		 -> STR_30(CODE[9]), STR_29(CODE[12]), D.lcd(BIGRAM[288]), D(BIGRAM[290]), 
		 -> T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[6]), V(BANK2[188]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_54(CODE[4]), STR_53(CODE[4]), STR_50(CODE[4]), STR_49(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_54(CODE[4]), STR_53(CODE[4]), STR_50(CODE[4]), STR_49(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_28(CODE[3]), STR_27(CODE[3]), STR_26(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 79
		 -> STR_48(CODE[79]), STR_46(CODE[3]), STR_45(CODE[3]), STR_44(CODE[19]), 
		 -> STR_43(CODE[19]), STR_42(CODE[19]), STR_41(CODE[19]), STR_40(CODE[19]), 
		 -> STR_39(CODE[19]), STR_38(CODE[24]), STR_37(CODE[15]), STR_36(CODE[15]), 
		 -> STR_35(CODE[15]), STR_34(CODE[10]), STR_33(CODE[10]), STR_32(CODE[19]), 
		 -> STR_31(CODE[19]), STR_25(CODE[17]), STR_24(CODE[16]), STR_23(CODE[16]), 
		 -> STR_22(CODE[19]), STR_21(CODE[20]), STR_20(CODE[19]), STR_19(CODE[19]), 
		 -> STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), STR_15(CODE[19]), 
		 -> STR_14(CODE[19]), STR_13(CODE[17]), STR_12(CODE[16]), STR_11(CODE[16]), 
		 -> STR_10(CODE[22]), STR_9(CODE[22]), STR_8(CODE[22]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    s	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), port_data(BIGRAM[512]), V(BANK2[188]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), port_data(BIGRAM[512]), V(BANK2[188]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S5904_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[290]), port_data(BIGRAM[512]), V(BANK2[188]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[290]), port_data(BIGRAM[512]), V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR const unsigned char  size(2) Largest target is 79
		 -> STR_48(CODE[79]), STR_46(CODE[3]), STR_45(CODE[3]), STR_44(CODE[19]), 
		 -> STR_43(CODE[19]), STR_42(CODE[19]), STR_41(CODE[19]), STR_40(CODE[19]), 
		 -> STR_39(CODE[19]), STR_38(CODE[24]), STR_37(CODE[15]), STR_36(CODE[15]), 
		 -> STR_35(CODE[15]), STR_34(CODE[10]), STR_33(CODE[10]), STR_32(CODE[19]), 
		 -> STR_31(CODE[19]), STR_28(CODE[3]), STR_27(CODE[3]), STR_26(CODE[3]), 
		 -> STR_25(CODE[17]), STR_24(CODE[16]), STR_23(CODE[16]), STR_22(CODE[19]), 
		 -> STR_21(CODE[20]), STR_20(CODE[19]), STR_19(CODE[19]), STR_18(CODE[19]), 
		 -> STR_17(CODE[19]), STR_16(CODE[19]), STR_15(CODE[19]), STR_14(CODE[19]), 
		 -> STR_13(CODE[17]), STR_12(CODE[16]), STR_11(CODE[16]), STR_10(CODE[22]), 
		 -> STR_9(CODE[22]), STR_8(CODE[22]), STR_7(CODE[17]), STR_6(CODE[17]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 79
		 -> STR_48(CODE[79]), STR_46(CODE[3]), STR_45(CODE[3]), STR_44(CODE[19]), 
		 -> STR_43(CODE[19]), STR_42(CODE[19]), STR_41(CODE[19]), STR_40(CODE[19]), 
		 -> STR_39(CODE[19]), STR_38(CODE[24]), STR_37(CODE[15]), STR_36(CODE[15]), 
		 -> STR_35(CODE[15]), STR_34(CODE[10]), STR_33(CODE[10]), STR_32(CODE[19]), 
		 -> STR_31(CODE[19]), STR_28(CODE[3]), STR_27(CODE[3]), STR_26(CODE[3]), 
		 -> STR_25(CODE[17]), STR_24(CODE[16]), STR_23(CODE[16]), STR_22(CODE[19]), 
		 -> STR_21(CODE[20]), STR_20(CODE[19]), STR_19(CODE[19]), STR_18(CODE[19]), 
		 -> STR_17(CODE[19]), STR_16(CODE[19]), STR_15(CODE[19]), STR_14(CODE[19]), 
		 -> STR_13(CODE[17]), STR_12(CODE[16]), STR_11(CODE[16]), STR_10(CODE[22]), 
		 -> STR_9(CODE[22]), STR_8(CODE[22]), STR_7(CODE[17]), STR_6(CODE[17]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(2) Largest target is 79
		 -> STR_48(CODE[79]), STR_46(CODE[3]), STR_45(CODE[3]), STR_44(CODE[19]), 
		 -> STR_43(CODE[19]), STR_42(CODE[19]), STR_41(CODE[19]), STR_40(CODE[19]), 
		 -> STR_39(CODE[19]), STR_38(CODE[24]), STR_37(CODE[15]), STR_36(CODE[15]), 
		 -> STR_35(CODE[15]), STR_34(CODE[10]), STR_33(CODE[10]), STR_32(CODE[19]), 
		 -> STR_31(CODE[19]), STR_28(CODE[3]), STR_27(CODE[3]), STR_26(CODE[3]), 
		 -> STR_25(CODE[17]), STR_24(CODE[16]), STR_23(CODE[16]), STR_22(CODE[19]), 
		 -> STR_21(CODE[20]), STR_20(CODE[19]), STR_19(CODE[19]), STR_18(CODE[19]), 
		 -> STR_17(CODE[19]), STR_16(CODE[19]), STR_15(CODE[19]), STR_14(CODE[19]), 
		 -> STR_13(CODE[17]), STR_12(CODE[16]), STR_11(CODE[16]), STR_10(CODE[22]), 
		 -> STR_9(CODE[22]), STR_8(CODE[22]), STR_7(CODE[17]), STR_6(CODE[17]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_30(CODE[9]), STR_29(CODE[12]), 
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), T(CODE[144]), STR_3(CODE[6]), 
		 -> V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_30(CODE[9]), STR_29(CODE[12]), 
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), T(CODE[144]), STR_3(CODE[6]), 
		 -> V(BANK2[188]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_30(CODE[9]), 
		 -> STR_29(CODE[12]), D.lcd(BIGRAM[288]), D(BIGRAM[290]), T(CODE[144]), 
		 -> STR_3(CODE[6]), V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    log_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__hid_input	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    S4431tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_30(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_29(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), V(BANK2[188]), 

    sp__port_data_dma_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    strPtr	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), V(BANK2[188]), 

    sp__hid_display	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1994spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    S1994spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0  357440
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                             ___flge
                    _calc_model_data
                      _calc_ror_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                   _convert_adc_data
                _eaDogM_WriteCommand
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                      _init_port_dma
                          _lp_filter
                      _mode_lamp_dim
                   _set_display_info
                 _set_load_relay_one
                 _set_load_relay_two
                          _set_vterm
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_two                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_one                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _init_port_dma                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1268
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0    8321
           _TMR3_SetInterruptHandler
                       _Volts_to_SOC
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _conv_raw_result
 ---------------------------------------------------------------------------------
 (2) _Volts_to_SOC                                         4     0      4      22
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          1     0      1     474
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            1     0      1     138
                         _get_switch
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   31190
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10995
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  186232
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   92863
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (17) _sprintf                                            62    10     52   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   62814
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     0      4   62550
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   31159
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   31298
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   29912
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (21) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (21) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (17) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   1     0      1      66
 ---------------------------------------------------------------------------------
 (1) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calc_ror_data                                        0     0      0    7418
                             ___flge
                            ___flsub
                    _conv_raw_result
                              _fabsf
 ---------------------------------------------------------------------------------
 (2) _fabsf                                                8     4      4      47
 ---------------------------------------------------------------------------------
 (2) _conv_raw_result                                      2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (3) _nanf                                                 6     4      2      23
 ---------------------------------------------------------------------------------
 (3) _get_raw_result                                       1     0      1      22
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            10     5      5     322
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      22
        _UART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            4     4      0     204
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0     204
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (16) _switch_handler                                      2     2      0     204
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            4     4      0      90
                                             10 COMRAM     4     4      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR3_ISR                                           25    25      0   35433
                                              0 BANK3     25    25      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR3_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR3_CallBack                                       0     0      0   35343
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (16) _calc_bsoc                                           2     2      0   35343
                         _StartTimer
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                  _port_data_dma_ptr
                 _send_port_data_dma
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _sprintf                                            62    10     52   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (21) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (21) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (17) _send_port_data_dma                                  2     0      2      45
 ---------------------------------------------------------------------------------
 (17) _port_data_dma_ptr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (16) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (27) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (27) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 26
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   ___flge
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _calc_ror_data
     ___flge
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
     _Volts_to_SOC
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _init_port_dma
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_display_info
     _TimerDone
   _set_load_relay_one
   _set_load_relay_two
   _set_vterm
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _wait_lcd_done
       _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       _StartTimer
       ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___fltol
       _port_data_dma_ptr
       _send_port_data_dma
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _strlen
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     322      69        9.8%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      FF      15       99.6%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      86      13       52.3%
BITBANK3           100      0       0      10        0.0%
BANK3              100     19      FD      11       98.8%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      FD       9       98.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      F3       7       94.9%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      9C       5       97.5%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      E      25       1       58.7%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     533      58        0.0%
DATA                 0      0     855       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Dec 12 15:44:10 2019

                     _SPI1_Exchange8bit A9DE                __end_of_set_display_info AA38  
                                     _C 0100                                       _D 07FF  
                                     _H 00F5                                       _P 0098  
                                     _R 00C6                                       _S 02BC  
                                     _T FD1F                                       _V 0200  
      __end_of_TMR5_SetInterruptHandler A75E            __end_of_start_switch_handler A9DE  
                           __CFG_CP$OFF 000000                 __size_of_ringBufS_flush 0092  
                                    _bp FDAF                  __end_of_FVR_Initialize AC46  
                           __CFG_LVP$ON 000000                                     l169 AB4E  
                                   l807 A9EC                                     l673 A5C6  
                                   _GIE 01FE97                                     _abs 9FC0  
                                   _pad 875A                 __size_of_PMD_Initialize 0014  
                       _TMR2_Initialize AAFA                                     prod 003FF3  
                                   tosl 003FFD                                     wreg 003FE8  
                         _INT0_CallBack A954                           __CFG_BBEN$OFF 000000  
                 __size_of_Volts_to_SOC 0092                           _INT1_CallBack A8E8  
                          __CFG_ZCD$OFF 000000                                    l1000 A25E  
                                  l1314 224E                                    l2060 87B6  
                                  l2116 123A                                    l3006 A000  
                                  l1326 257A                                    l1343 2BCE  
                                  l2080 4D7A                                    l2160 0B1A  
                                  l1424 9CE4                                    l1336 2618  
                                  l1328 2580                                    l2145 066A  
                                  l3106 8638                                    l2234 5160  
                                  l1338 26DE                                    l2219 5C28  
                                  l1339 27EC                         _timer3ReloadVal 0027  
                                  l1188 A29E                                    l3037 69B8  
                                  l3401 98A2                                    l1642 A2FE  
                                  l1651 6ED4                                    l1564 9372  
                                  l2284 21E6                                    l1652 7030  
                                  l2614 7BE6                                    l2198 62FA  
                                  l1583 A368                                    l1903 979C  
                                  l1808 75EA                                    l1568 9676  
                                  l1912 8C88                                    l1761 4C96  
                                  l1659 897A                                    l2580 7DE4  
                                  l3373 6E18                    _ADCC_StartConversion AB68  
                                  l2576 8FF8                                    l2587 7EB8  
                                  l1699 AA34                                    l3388 9926  
                                  l2854 3BE6                                    l2935 342A  
                                  l2866 3A76                                    l7210 9468  
                                  l8002 8080                                    l2975 722E  
                                  l8104 7EB6                                    l7208 9446  
                                  l8024 815A                                    l8016 8126  
                                  l8040 8674                                    l8112 9F96  
                                  l7410 3AE4                                    l7322 37F2  
                                  l7242 34CA                                    l8210 9E7E  
                                  l8122 7AD0                                    l2899 47E6  
                                  l7324 3804                                    l7332 383E  
                                  l7308 3760                                    l7260 357A  
                                  l7236 348A                                    l8044 868C  
                                  l8036 8662                                    l8140 7B6E  
                                  l7422 3B42                                    l7406 3ADE  
                                  l7350 38DA                                    l7318 37D2  
                                  l7270 35D0                                    l7254 3548  
                                  l7246 34E0                                    l8062 8740  
                                  l8054 870C                                    l8070 8F80  
                                  l7502 7778                                    l2998 7780  
                                  l7432 3B6E                                    l7352 38EC  
                                  l7360 3928                                    l7328 380E  
                                  l7272 3600                                    l7248 3510  
                                  l7520 9916                                    l7266 35BA  
                                  l8074 8FC2                                    l8146 7B7E  
                                  l8138 7B52                                    l8162 77D8  
                                  l9210 A372                                    l7444 3BC6  
                                  l7436 3B86                                    l7372 3A00  
                                  l7356 38F6                                    l8092 7E32  
                                  l9300 7178                                    l7604 65CA  
                                  l8148 7B94                                    l7438 3B96  
                                  l7390 3A98                                    l7382 3A5A  
                                  l7374 3A26                                    l7278 3622  
                                  l8086 7DA2                                    l7710 446E  
                                  l7702 4400                                    l9310 71AC  
                                  l9302 718E                                    l9118 A68E  
                                  l8078 8FF6                                    l7550 5B04  
                                  l7534 5996                                    l8174 78AA  
                                  l7392 3AAA                                    l8096 7E80  
                                  l7704 4430                                    l9320 720E  
                                  l7616 669C                                    l9250 9EBA  
                                  l7810 47BA                                    l7554 5B4C  
                                  l8194 825A                                    l8186 81AE  
                                  l9242 A558                                    l7396 3AB6  
                                  l7812 47CA                                    l7804 4792  
                                  l7724 44C2                                    l7716 44A8  
                                  l7652 6B54                                    l7644 6AA8  
                                  l7636 6A20                                    l7492 771E  
                                  l7548 5AB4                                    l7750 45EE  
                                  l7742 4588                                    l7734 4552  
                                  l7478 9FF0                                    l7558 5BBA  
                                  l7744 459A                                    l7752 45F2  
                                  l7672 42CC                                    l7592 6530  
                                  l7496 7722                                    l7576 9892  
                                  l7922 323A                                    l7834 2CA0  
                                  l7682 4322                                    l9290 710E  
                                  l7940 32B0                                    l7916 321E  
                                  l7852 2D6E                                    l7836 2CA6  
                                  l7828 2C60                                    l7764 463C  
                                  l7692 43AA                                    l7684 4352  
                                  l9292 712C                                    l7950 3324  
                                  l7926 3260                                    l7854 2D74  
                                  l7846 2D2E                                    l7838 2CD6  
                                  l7782 46B2                                    l7758 4620  
                                  l7678 430C                                    l9286 70EA  
                                  l9278 707E                                    l7598 6584  
                                  l7960 3394                                    l7936 32AA  
                                  l7864 2DC6                                    l7856 2DA4  
                                  l7792 4726                                    l7768 4662  
                                  l9288 70F8                                    l8832 682A  
                                  l8816 6768                                    l7970 33F2  
                                  l7954 336A                                    l7778 46AC  
                                  l7698 43EA                                    l9298 715A  
                                  l8842 690C                                    l8834 6842  
                                  l8826 67FE                                    l8818 678A  
                                  l8852 69A8                                    l8836 6866  
                                  l9750 7470                                    l7798 4762  
                                  l8838 68A4                                    l7990 804A  
                                  l8870 6CF6                                    l9920 82C6  
                                  l7968 33D8                                    l9832 47F2  
                                  l9922 82D6                                    l9762 74B0  
                                  l9692 9EE6                                    l9940 835C  
                                  l9924 82DC                                    l9932 82F8  
                                  l9860 4A4C                                    l9852 4A1A  
                                  l7996 8060                                    l8868 6C8A  
                                  l9926 82E2                                    l9934 8324  
                                  l9758 749C                                    l9838 4822  
                                  STR_1 FF62                                    l9696 9F18  
                                  l9928 82F0                                    l9872 4BC8  
                                  l9864 4AE8                                    l9848 4940  
                                  l9960 9756                                    STR_2 FFA3  
                                  STR_3 FFD1                                    STR_4 FF51  
                                  STR_5 FE82                                    l9948 83D6  
                                  l9796 A314                                    STR_6 FE82  
                                  STR_7 FE82                                    l9878 4C64  
                                  l9886 4C76                                    STR_8 FE40  
                                  STR_9 FE2A                                    _LATA 003FBA  
                                  _LATB 003FBB                                    _LATC 003FBC  
                                  _LATD 003FBD                                    _LATE 003FBE  
                                  _LATF 003FBF                                    _T2PR 003FAB  
                                  u5030 9496                                    u6010 6A70  
                                  u5220 3836                                    u6020 6AA2  
                                  u5060 A4DC                                    u5037 9488  
                                  u5230 3856                                    u6030 6AD4  
                                  u5070 A4DE                                    u7000 9E7A  
                                  u5225 3826                                    u5330 3A48  
                                  u5170 3786                                    u6210 461A  
                                  u6050 6B8C                                    _T6PR 003F93  
                                  u5180 37A6                                    u6300 473A  
                                  u5500 A4AC                                    _PMD0 0039C0  
                                  u5181 37A0                                    _PMD1 0039C1  
                                  u5430 3B32                                    u6310 4776  
                                  u6070 6BDE                                    u5510 A4AE  
                                  _PMD2 0039C2                                    _PMD3 0039C3  
                                  u6400 2DB4                                    _PMD4 0039C4  
                                  _PMD5 0039C5                                    u5370 3ABC  
                                  u5290 391E                                    u6250 46A4  
                                  _PMD6 0039C6                                    u5435 3B22  
                                  _PMD7 0039C7                                    u5460 3B52  
                                  u5620 7770                                    u5700 597A  
                                  u6510 32FE                                    u5390 3AD6  
                                  u5198 37A8                                    u5630 7772  
                                  u6415 2F48                                    u5295 390E  
                                  u5615 7752                                    u6520 3338  
                                  u5560 9FD4                                    u6600 8146  
                                  u5800 A158                                    u6425 3010  
                                  u6530 337E                                    u6290 4700  
                                  u5570 76A2                                    u8210 6D24  
                                  u5810 9850                                    u6515 32EE  
                                  u6435 31D8                                    u9004 4A34  
                                  u8140 67FA                                    u5740 5A5A  
                                  u5660 98D4                                    u5820 9852  
                                  u9005 4A2E                                    u5901 658A  
                                  u5725 59B4                                    u6470 32A2  
                                  u5910 65C4                                    u6710 8FF2  
                                  u5726 59BA                                    u5670 98D6  
                                  u6295 46F0                                    u5575 7698  
                                  u5727 59C8                                    u9024 4B02  
                                  u5840 A50C                                    u8160 6952  
                                  u5920 65F6                                    u6800 7AFE  
                                  u5760 5B32                                    u9200 9788  
                                  u9025 4AFC                                    u5745 5A50  
                                  u8217 6D16                                    u9050 4B2C  
                                  u5850 A50E                                    u8170 6954  
                                  u6650 86B8                                    u5690 592E  
                                  u8250 6DBE                                    u9060 A9A8  
                                  u9044 4B24                                    u5940 66D4  
                                  u6580 80AC                                    u8260 6DEC  
                                  u6900 7804                                    u9045 4B1E  
                                  u6805 7AF4                                    u5765 5B28  
                                  u5870 652A                                    u6670 872C  
                                  u5790 A156                                    u5695 5924  
                                  u8255 6DB8                                    u5960 6726  
                                  u6920 78E2                                    u8257 6DAA  
                                  u9066 A9AA                                    u5890 6580  
                                  u6770 9F92                                    u6850 7B9C  
                                  u9218 978A                                    u9170 9742  
                                  u8267 6DDE                                    u6780 7AB0  
                                  u6940 81A8                                    u5990 6A1A  
                                  u6870 7BC6                                    u6790 7AC4  
                                  u6950 81DA                                    u6785 7AA6  
                                  u6881 7798                                    u6890 77D2  
                                  u6970 8292                                    u8740 71A2  
                                  u9188 9744                                    u8805 9B30  
                                  u8645 A192                                    u8806 9B32  
                                  u6990 9E5A                                    _PLLR 01CEE0  
                                  u9475 AB94                                    u8780 9AFC  
                                  u9476 AB96                                    u9485 AB84  
                                  u9486 AB86                                    u8880 744E  
                                  u8944 480C                                    u8945 4806  
                                  u8964 483C                                    u8965 4836  
                                  u8798 9AFE                                    u8984 485E  
                                  u8985 4858                                    u9970 8542  
                                  u9990 85BE                                    _WPUA 003A41  
                                  _WPUB 003A51                                    _WPUC 003A61  
                                  _WPUD 003A71                                    _WPUE 003A81  
                                  _WPUF 003A91                        __end_of_ADCC_ISR A5A0  
                         __CFG_FCMEN$ON 000000                                    _dbuf 0394  
                                  _cp_h FDBF                                    _cp_l FDBB  
                                  _atoi 674E                                    _ctoa 97A0  
                                  _main 21F0                                    _dtoa 4C9C  
                                  _nanf 9C1A                                    _seed 00BE  
                                  _prec 0023                                    _nout 00BA  
                                  fsr0h 003FEA                                    fsr1h 003FE2  
                                  indf0 003FEF                                    fsr2h 003FDA  
                                  fsr0l 003FE9                                    indf1 003FE7  
                                  indf2 003FDF                                    fsr1l 003FE1  
                                  fsr2l 003FD9                                    _stoa 6210  
                                  btemp 0001                                    _utoa 5BE4  
                                  _xtoa 511C                  __end_of_check_adc_scan AC3E  
                         ___fpclassifyf 75F4                                    prodh 003FF4  
                                  prodl 003FF3                                    start 00AE  
                       _timer5ReloadVal 002B               __end_of_SPI1_Exchange8bit A9FC  
             __size_of_clear_hid_pflags 0024                         _TMR3_Initialize A0D8  
           __size_of_set_load_relay_one 0010             __size_of_set_load_relay_two 0010  
                         __CFG_CSWEN$ON 000000                       _UART1_rx_vect_isr A828  
                          ___param_bank 000000                      ?_UART1_rx_vect_isr 0038  
                      __end_of_INT0_ISR ABD6                        __end_of_INT1_ISR A2E2  
        __size_of_OSCILLATOR_Initialize 0016                __end_of_ringBufS_put_dma 937A  
         __end_of_OSCILLATOR_Initialize AB54                                   l10104 A5C2  
                                 l10032 95CA                                   l10130 A246  
                                 l11020 60E4                                   l10028 9562  
                                 l11014 607A                                   l11040 97BE  
                                 l11112 50D2                                   l11200 04D2  
                                 l11008 5FBC                                   l11042 97EA  
                                 l10092 AAA8                                   l10148 A286  
                                 l11108 5096                                   l11212 0554  
                                 l11028 6192                                   l11126 00AC  
                                 l10334 8B96                                   l10440 9974  
                                 l10328 586C                                   l10264 7A58  
                                 l11320 0CBA                                   l11232 05F6  
                                 l11224 0594                                   l11216 057C  
                                 l11160 022C                                   l10434 9964  
                                 l11074 4DB4                                   l11066 4D6A  
                                 l11250 06B8                                   l11234 0602  
                                 l11218 058E                                   l11138 00F0  
                                 l11146 0146                                   l10346 8BF2  
                                 l10428 A21C                                   l11308 0C32  
                                 l11260 077A                                   l11156 01EA  
                                 l11164 0258                                   l10284 90C4  
                                 l10356 8C62                                   l12300 2B7E  
                                 l12220 2584                                   l12132 2256  
                                 l11078 4DD2                                   l11270 0926  
                                 l11254 06F0                                   l11190 0396  
                                 l11174 02FC                                   l11182 032A  
                                 l11158 0216                                   l12222 25B2  
                                 l12134 2268                                   l12126 2230  
                                 l11088 4FE4                                   l11408 119A  
                                 l11328 0D24                                   l11336 0D90  
                                 l11344 0EA2                                   l11520 5150  
                                 l12064 6EA4                                   l10288 9102  
                                 l12304 2BA4                                   l12128 2238  
                                 l11370 0FD6                                   l11194 0406  
                                 l12314 2BF8                                   l12242 260A  
                                 l12234 25E6                                   l11372 0FF0  
                                 l11356 0F3A                                   l11292 0B12  
                                 l11284 0A48                                   l11196 0470  
                                 l11452 639C                                   l11444 6330  
                                 l11428 627C                                   l11540 5226  
                                 l11532 51C6                                   l11382 1092  
                                 l11294 0B34                                   l11462 6452  
                                 l11526 518A                                   l11702 1A7A  
                                 l11614 1326                                   l12078 6FCC  
                                 l12254 28CA                                   l12270 2AD2  
                                 l11392 10E2                                   l11448 636C  
                                 l11480 5C18                                   l11640 14F8  
                                 l11616 1360                                   l12184 241A  
                                 l11466 648E                                   l11458 6426  
                                 l11722 1BDA                                   l11618 1376  
                                 l12258 292C                                   l11580 548C  
                                 l11556 531C                                   l11564 53A2  
                                 l11732 1C88                                   l11636 14A8  
                                 l12292 2B48                                   l12268 2AA8  
                                 l12276 2AF2                                   PRLOCK 0039EF  
                                 l10950 854E                                   l11742 1DAA  
                                 l11638 14E2                                   l12294 2B60  
                                 l12286 2B36                                   l11488 5C74  
                                 l11752 1E60                                   l11656 165C  
                                 l11922 3CB6                                   l10962 94D2  
                                 l11498 5E6A                                   l11690 198E  
                                 l11674 17E0                                   l11666 16F4  
                                 l11850 9250                                   l11940 3F86  
                                 l10972 8786                                   l11780 2114  
                                 l11852 9292                                   l11836 93D2  
                                 l11950 40BA                                   l11926 3CF8  
                                 l10966 9510                                   l10982 87FC  
                                 l11790 2172                                   l11766 1FDC  
                                 l11678 1834                                   l11952 40C2  
                                 l11936 3F08                                   l10976 87AE  
                                 l10992 8EB2                                   l11946 4030  
                                 l10986 8846                                   l10978 87C0  
                                 l11786 216E                                   l11698 1A46  
                                 l11882 8892                                   l11956 40D8  
                                 l11796 2192                         __end_of___aodiv 674E  
                          _Volts_to_SOC 955A                                   _ADCAP 003EF5  
                                 _ADACT 003EFE                         __end_of___fladd 3BF0  
                                 _ADCLK 003EFF                         __end_of___aomod 6C02  
                                 _ADPCH 003EF1                         __end_of___fldiv 47F0  
                                 _ADREF 003EFD                         __end_of___awdiv 8174  
                       __end_of___flneg 9FC0                                   STR_10 FE56  
                                 STR_11 FF84                                   STR_20 FF05  
                                 STR_13 FF73                                   STR_21 FE6C  
                                 STR_30 FFC8                                   STR_14 FECC  
                                 STR_22 FEB9                                   STR_23 FF84  
                                 STR_15 FEF2                                   STR_31 FE93  
                                 STR_32 FE93                                   STR_24 FF84  
                                 STR_16 FEDF                                   STR_40 FEA6  
                                 STR_25 FF73                                   STR_33 FFBE  
                                 STR_17 FF3E                                   STR_41 FE80  
                         __CFG_WDTE$OFF 000000                                   STR_34 FFBE  
                                 STR_26 FFFC                                   STR_50 FFDF  
                                 STR_18 FF18                                   STR_27 FFF9  
                                 STR_35 FF94                                   STR_19 FF2B  
                                 STR_36 FF94                         __end_of___awmod 875A  
                                 STR_37 FF94                                   STR_61 FFF0  
                                 STR_53 FFDB                                   STR_29 FFB2  
                                 STR_54 FFE3                                   STR_38 FE12  
                                 STR_47 FE11                                   STR_63 FFF0  
                                 STR_71 FFF3                                   STR_80 FFE7  
                                 STR_48 FDC3                                   _ADRPT 003EEC  
                                 STR_73 FFF3                                   STR_57 FFEA  
                                 STR_49 FFD7                                   STR_82 FFE7  
                                 STR_66 FFED                                   STR_59 FFEA  
                                 STR_68 FFED                                   STR_76 FFF6  
                                 STR_78 FFF6                         __end_of___flmul 3434  
                       __end_of___flsub A04C                         __end_of___fltol 7BF0  
                                 u10110 6206                                   u10210 4DA0  
                                 u10050 8F2C                                   u11010 5136  
                                 u10220 4FF8                                   u10140 4CCC  
                                 u10150 4CCE                                   u11110 539E  
                                 u10231 5028                                   u10240 503E  
                                 u10400 02A8                                   u10320 00DA  
                                 u11120 53BE                                   u11040 521E  
                                 u10241 503C                                   u10057 8F1E  
                                 u10250 5052                                   u10170 4D3E  
                                 u11050 5272                                   u11131 53EE  
                                 u11115 5380                                   u10260 5056  
                                 u10500 05C6                                   u11140 5404  
                                 u11060 5274                                   u11220 13BE  
                                 u11141 5402                                   u10190 4D50  
                                 u10350 0194                                   u11150 5418  
                                 u11230 13C0                                   u10280 506C  
                                 u10440 050E                                   u10360 0196  
                                 u11160 541C                                   u11080 52D2  
                                 u11400 1B36                                   u11240 13E6  
                                 u10610 0A18                                   u11090 52D4  
                       __end_of___lodiv 790A                                   u10540 0648  
                                 u11340 1748                                   u11500 93B2  
                                 u10710 0EE4                                   u10470 0562  
                                 u10390 02A6                                   u11270 1540  
                                 u10800 1170                                   u11360 18BC  
                                 u11280 1542                                   u11290 1568  
                                 _U1P1H 003DED                                   u11460 1EB4  
                                 u11700 701E                                   _U1P2H 003DEF  
                                 u10910 64B4                                   u11390 1B34  
                                 _U1P1L 003DEC                                   _U1P3H 003DF1  
                                 _T3CLK 003FA9                                   u11480 2064  
                                 _T2CON 003FAC                                   _U1P2L 003DEE  
                                 u10770 10B8                                   u10930 5BFE  
                                 _U1P3L 003DF0                                   u10790 116E  
                                 u10870 6392                                   u11750 24D8  
                                 _U2P1L 003DD4                                   u10880 63D8  
                                 _T3CON 003FA6                                   _U2P2L 003DD6  
                                 u10961 5EAC                                   u10970 5EC2  
                                 u11690 701C                                   _U2P3L 003DD8  
                                 u10971 5EC0                                   u10980 5ED6  
                                 u10990 5EDA                                   u10887 63CA  
                                 _T5CLK 003F9D                         __end_of___lomod 82B4  
                                 _T2HLT 003FAD                                   _T5CON 003F9A  
                                 _T6CON 003F94                          __CFG_DEBUG$OFF 000000  
                                 _T6HLT 003F95              _ADCC_ADTI_InterruptHandler 00A5  
                                 _T2TMR 003FAA                                   _U1UIR 003DF8  
                                 _T2RST 003FAF                                   _U1RXB 003DE8  
                                 _U2UIR 003DE0                                   _U2RXB 003DD0  
                                 _U2TXB 003DD2                                   _T6TMR 003F92  
                                 _T6RST 003F97                     ??_UART1_rx_vect_isr 003D  
                                 _ISRPR 0039F1                                   _OSCEN 0039DD  
                                 _TMR3H 003FA5                                   _TMR5H 003F99  
                                 _TMR3L 003FA4                                   _TMR5L 003F98  
                                 _TRISA 003FC2                                   _TRISB 003FC3  
                                 _TRISC 003FC4                                   _TRISD 003FC5  
                                 _TRISE 003FC6                                   _TRISF 003FC7  
                           _Default_ISR AC60                 __size_of_clear_adc_scan 0006  
     __size_of_TMR3_SetInterruptHandler 0028       __size_of_TMR6_SetInterruptHandler 0028  
                         __CFG_WRTB$OFF 000000                        __end_of_TMR3_ISR 8026  
                         __CFG_WRTC$OFF 000000                           __CFG_WRTD$OFF 000000  
                      __end_of_TMR5_ISR 9DEA                            _DMA1CON0bits 003BFC  
                      __end_of_TMR6_ISR AAE2                            _DMA1CON1bits 003BFD  
                                 _fabsf 9176                                   _flags 0025  
              __size_of_calc_model_data 03A2                            _DMA2CON0bits 003BDC  
                          _DMA2CON1bits 003BDD                                   _fputc 851E  
            __size_of_send_lcd_cmd_long 0028                         __end_of_isalpha A162  
                                 _fputs 94C2                         __end_of_isdigit A518  
                       __end_of_ivln2_h FDBB                      __CFG_MCLRE$EXTMCLR 000000  
                                 _srand A3BC                                   _width 0021  
                                 _putch AAAC                         __end_of_islower A4B8  
                       __end_of_isspace 9E8E                _INT1_SetInterruptHandler A786  
                       __end_of_isupper A4E8                                   pclath 003FFA  
                                 tablat 003FF5                                   ltemp0 0001  
                                 ltemp1 0005                                   ltemp2 0009  
              __size_of_DMA1_Initialize 006A                                   plusw1 003FE3  
                                 plusw2 003FDB                                   ttemp0 0001  
                                 ttemp1 0004                                   ttemp2 0007  
                                 ttemp3 000A                                   ttemp5 0002  
                                 ttemp6 0005                                   ttemp7 0009  
                                 status 003FD8     __end_of_UART1_SetRxInterruptHandler A70E  
           _UART1_SetRxInterruptHandler A6E6                                   wtemp0 0001  
                                 wtemp1 0003                                   wtemp2 0005  
                                 wtemp3 0007                                   wtemp4 0009  
                                 wtemp5 000B                                   wtemp8 0002  
                       __end_of_sprintf 8A88                         __end_of_tolower 9930  
                       __end_of_strncmp 6E22                         __end_of_toupper 98AC  
             __size_of_DMA1_DMADCNT_ISR 000A               __end_of_UART1_rx_vect_isr A850  
              __size_of_SPI1_Initialize 0016                         _TMR5_Initialize A092  
                 __end_of_ringBufS_init A66E                         __initialization 8A88  
                     _UART2_rx_vect_isr A878                            __end_of_cp_h FDC3  
                          __end_of_cp_l FDBF                            __end_of_atoi 69C2  
                          __end_of_ctoa 9828                            __end_of_main 2C0A  
                          __end_of_dtoa 511C                            __end_of_nanf 9C7C  
                          __end_of_stoa 64CE                            __end_of_utoa 5F24  
                          __end_of_xtoa 54D6                          __CFG_SAFEN$OFF 000000  
                    ?_UART2_rx_vect_isr 0038                 __end_of_TMR2_Initialize AB12  
              __size_of_DMA2_Initialize 005A              __end_of_check_enter_button A224  
              _TMR5_SetInterruptHandler A736                           __activetblptr 000003  
             __size_of_DMA1_DMASCNT_ISR 000E                   _TMR3_InterruptHandler 009C  
                     _port_data_dma_ptr ABF0                     ??_UART2_rx_vect_isr 003D  
                                INTCON0 003FD2    __size_of_UART2_SetRxInterruptHandler 0028  
                        __CFG_MVECEN$ON 000000                         _TMR6_Initialize A5CC  
                       _PWM8_Initialize AB28                        _UART1_Initialize A04C  
                     _UART2_tx_vect_isr A850                      _UART2_Transmit_ISR A5A0  
                                _ADACCU 003EEA                                  _ADACQH 003EF4  
                                _ADACQL 003EF3                                  _ADCON0 003EF8  
                                _ADCON1 003EF9                                  _ADCON2 003EFA  
                                _ADCON3 003EFB                          _start_adc_scan 9B54  
                                _ADLTHH 003EDF                                  _ADLTHL 003EDE  
                                _ADPREH 003EF7                                  _ADPREL 003EF6  
                                _DMA1PR 0039F3                                  _DMA2PR 0039F4  
                                _ADSTAT 003EFC                                  _ADUTHH 003EE1  
                                _ADUTHL 003EE0                      _PWM8_LoadDutyValue A162  
                                _ANSELA 003A40                                  _ANSELB 003A50  
                                _ANSELC 003A60                                  _ANSELD 003A70  
                                _ANSELE 003A80                                  _ANSELF 003A90  
                    ?_UART2_tx_vect_isr 0038                                  _U1CON0 003DF2  
                                _U1CON1 003DF3                                  _U1CON2 003DF4  
                                _T3GATE 003FA8                                  _U1BRGH 003DF6  
                                _U1FIFO 003DF7                                  _T3GCON 003FA7  
                                _U2CON0 003DDA                                  _U2CON1 003DDB  
                                _U1BRGL 003DF5                                  _U2CON2 003DDC  
                                _U2BRGH 003DDE                                  _U2FIFO 003DDF  
                                _U2BRGL 003DDD                                  _T5GATE 003F9C  
                                _T5GCON 003F9B                                  _MAINPR 0039F2  
                                _RC3PPS 003A13                                  _RD1PPS 003A19  
                                i1l1017 9DDC                                  _RB6PPS 003A0E  
                                i1l1205 7F8E                    _start_switch_handler A9BE  
                                _RC5PPS 003A15                                  _ODCONA 003A42  
                                _ODCONB 003A52                                  _ODCONC 003A62  
                                _RC6PPS 003A16                                  _ODCOND 003A72  
                                _ODCONE 003A82                                  _ODCONF 003A92  
               __end_of_TMR3_Initialize A11E                          __CFG_WDTCCS$SC 000000  
                                _FVRCON 003EC1                        _mode_lamp_bright ABB8  
                                _SCANPR 0039F7                                  _IVTADH 00389E  
                                _IVTADL 00389D                                  _IVTADU 00389F  
          __size_of_eaDogM_WriteCommand 000E                                  _OSCFRQ 0039DF  
                                u910_20 82EC                                  u910_21 82E6  
                                u914_24 83CC                                  u914_25 83C8  
                                u907_28 82CC                                  u940_48 A988  
                                u932_48 A964                                  u934_28 A8F8  
                                u943_28 A91C                                  u884_20 A42C  
                  __size_of_hid_display 0102                                  u884_26 A42E  
                                u968_44 9994                                  u968_45 998E  
                      __end_of___xxtofl 7238   __end_of_ADCC_DischargeSampleCapacitor AC26  
__size_of_ADCC_DischargeSampleCapacitor 0008           _ADCC_DischargeSampleCapacitor AC1E  
              __end_of_send_lcd_cmd_dma 9E3C                         _TMR3_WriteTimer A264  
                   ??_UART2_tx_vect_isr 003D               __end_of_UART2_rx_vect_isr A8A0  
            __size_of_SPI1_Exchange8bit 001E                  __size_of_DMA1_DMAA_ISR 000A  
                        __CFG_XINST$OFF 000000                       _CLKREF_Initialize ABE6  
                      _UART2_Initialize 9C7C                                  _WaitMs A350  
                       _conv_raw_result 47F0                            _CCPTMRS1bits 003F5F  
  __size_of_ADCC_SetADIInterruptHandler 0028                                  ___flge 7D60  
                                ___fleq 8F3E                       _ADCC_ThresholdISR 9A84  
                        __CFG_STVREN$ON 000000                          _ringBufS_flush 95EC  
                                _efgtoa 0000                                  _floorf 5878  
                    ?_ADCC_ThresholdISR 0038                                  _memset 5F24  
                  __size_of_help_button 0038                                  clear_0 8B1C  
                                clear_1 8B30                                  clear_2 8B42  
                                clear_3 8B4E                                  clear_4 8B5A  
                                clear_5 8B66                                  clear_6 8B72  
             __end_of_port_data_dma_ptr ABFA                                  _printf 9BB8  
                    _eaDogM_WriteString 937A                                  _strcpy 8E6A  
                             ?_ADCC_ISR 0038                                  _strlen 9420  
                    __size_of_TimerDone 0028                            __pdataBIGRAM 05FF  
                       _ADCC_Initialize 9A18                          _PMD_Initialize AB54  
             __end_of_UART2_tx_vect_isr A878                                  lltemp0 0001  
                                lltemp1 0009                                  lltemp2 0011  
                                lltemp3 0019                     ??_ADCC_ThresholdISR 0038  
                __end_of_start_adc_scan 9BB8                            __mediumconst FC4E  
                                preinc2 003FDC                  __size_of_init_port_dma 0030  
                                tblptrh 003FF7                                  tblptrl 003FF6  
                                tblptru 003FF8                        __end_of_wdtdelay 9D34  
                      __end_of_vfprintf 92D0                              _StartTimer A1A4  
         __size_of_INTERRUPT_Initialize 0066                 __end_of_TMR5_Initialize A0D8  
                     _SYSTEM_Initialize 9F2E                              __accesstop 0060  
               __end_of__initialization 8B84                               ?_INT0_ISR 0038  
                             ?_INT1_ISR 0038                    __end_of_display_help AC36  
                  __end_of_display_info AC2E               __end_of_CLKREF_Initialize ABF0  
                         ___rparam_used 000001              __size_of_UART1_rx_vect_isr 0028  
                       _TMR5_WriteTimer A224                   _set_temp_display_help AB9A  
                      _clear_hid_pflags A8C4                   __end_of_TMR3_CallBack A954  
             __end_of_ADCC_ThresholdISR 9AEE                      __size_of_calc_bsoc 0686  
                __end_of_ringBufS_flush 967E                          __pcstackCOMRAM 0038  
                            ___inthi_sp 10C2                              ___intlo_sp 1861  
                          __pidataBANK0 A31A                            __pidataBANK1 8C8C  
                          __pidataBANK2 9002             __size_of_send_port_data_dma 0052  
                         __end_of_fabsf 9224                               ?_TMR3_ISR 0038  
                             ?_TMR5_ISR 0038                               ?_TMR6_ISR 0038  
                        ivt0x8_undefint 00AC                           __end_of_fputc 8642  
                         __end_of_fputs 955A                           __end_of_srand A3F0  
                 __end_of_TMR5_CallBack A930                           __end_of_putch AAC6  
               __end_of_PWM8_Initialize AB3E                 __end_of_TMR6_Initialize A5F6  
                     _adc_int_t_handler 9930                  __end_of_PMD_Initialize AB68  
                            __end_of_bp FDB7                              ??_ADCC_ISR 0038  
                 __end_of_TMR6_CallBack A99C             __size_of_EXT_INT_Initialize 0034  
                __size_of_calc_ror_data 0174                           _DMA1_DMAA_ISR AC08  
                 TMR3_ISR@CountCallBack 00BC                          _clear_adc_scan AC46  
                    __size_of_hid_input 0090                  __size_of_mode_lamp_dim 0018  
              _UART2_RxInterruptHandler 00B1               __end_of_SYSTEM_Initialize 9F78  
                       __CFG_PR1WAY$OFF 000000                         __CFG_IVT1WAY$ON 000000  
               __end_of_TMR3_WriteTimer A2A4                              __pbssBANK0 0060  
                            __pbssBANK2 02BC                              __pbssBANK3 0300  
                            __pbssBANK4 0400                              __pbssBANK5 0500  
                            _check_help 6E22                 __end_of_conv_raw_result 4C9C  
                 _INT0_InterruptHandler 00B7                              ??_INT0_ISR 0038  
                            ??_INT1_ISR 003E                       __end_of_TimerDone A696  
                      _DMA1_DMADCNT_ISR ABFC                      __size_of_init_bsoc 0170  
            __size_of_UART2_rx_vect_isr 0028                                 IVTBASEH 003FD6  
                               IVTBASEL 003FD5                                 IVTBASEU 003FD7  
                    __size_of_lp_filter 01BC                           _init_port_dma A458  
                 __end_of_wait_lcd_done AA90        __end_of_TMR3_SetInterruptHandler A786  
                       __CFG_PPS1WAY$ON 000000        __end_of_TMR6_SetInterruptHandler A736  
                            ??_TMR3_ISR 03E4                 __end_of_ADCC_Initialize 9A82  
                            ??_TMR5_ISR 0042               __end_of_adc_int_t_handler 99AE  
                            ??_TMR6_ISR 003D                                 _ADFLTRH 003EE7  
                               _ADFLTRL 003EE6                                 _DMA1DSA 003BF0  
                               _DMA2DSA 003BD0                                 _DMA1DSZ 003BEE  
                               _DMA2DSZ 003BCE                                 _DMA1SSA 003BF9  
                               _DMA2SSA 003BD9    __end_of_ADCC_SetADTIInterruptHandler A7FE  
 __size_of_ADCC_SetADTIInterruptHandler 0028            _ADCC_SetADTIInterruptHandler A7D6  
                               _DMA1SSZ 003BF7                                 _DMA2SSZ 003BD7  
            __size_of_port_data_dma_ptr 000A                                 _ADSTPTH 003EE5  
                               _ADSTPTL 003EE4                       _UART1_Receive_ISR AA90  
                               _CLKRCLK 003CE6                                 _CLKRCON 003CE5  
                __end_of_clear_adc_scan AC4C                          ?_DMA1_DMAA_ISR 0038  
                      _DMA1_DMASCNT_ISR ABD8                                 u1160_20 40D0  
                               _U1ERRIE 003DFA                      __size_of_set_vterm 001E  
                               u1162_28 A940                                 _U1ERRIR 003DF9  
                               _U2ERRIE 003DE2                                 u1158_20 4028  
                               _U2ERRIR 003DE1                                 _INT0PPS 003AC0  
                   __CFG_PWRTS$PWRT_OFF 000000                                 _INT1PPS 003AC1  
                          ?_Default_ISR 0038              __size_of_UART2_tx_vect_isr 0028  
                               _U1RXPPS 003AE5                                 _U2RXPPS 003AE8  
                               _OSCCON1 0039D9                                 _OSCCON3 0039DB  
                               _IVTLOCK 003FD4                      __size_of_vfpfcnvrt 0FAC  
                               _SPI1CLK 003D1C                                 _SPI1RXB 003D10  
                     __end_of_calc_bsoc 4276                                 _SPI1TXB 003D11  
                               _OSCTUNE 0039DE                                 _PWM8DCH 003F61  
                               _PWM8DCL 003F60                                 _PWM8CON 003F62  
                               _SLRCONA 003A43                                 _SLRCONB 003A53  
                               _SLRCONC 003A63                                 _SLRCOND 003A73  
                               _SLRCONE 003A83                                 _SLRCONF 003A93  
                            _get_switch A546                      __size_of_start_lcd 0006  
               __end_of_TMR5_WriteTimer A264                 __size_of_switch_handler 013C  
                    __size_of_stop_bsoc 0006              __end_of_set_load_relay_one AB9A  
            __end_of_set_load_relay_two AB8A       __size_of_INT0_SetInterruptHandler 0028  
            __size_of_CLKREF_Initialize 000A                           _calc_ror_data 790A  
               __size_of_DMA1_DMAOR_ISR 000A                                 __Hparam 0000  
            __size_of_ADCC_ThresholdISR 006A                           _mode_lamp_dim AAE2  
                               __Lparam 0000                __end_of_UART1_Initialize A092  
                     __end_of_hid_input 97A0                         __size_of_WaitMs 0036  
                       __size_of___flge 0162                         __size_of___fleq 00C4  
                               ___aodiv 64CE                                 ___fladd 3434  
                               ___aomod 69C2                                 ___fldiv 4276  
                               ___awdiv 8026                                 ___flneg 9F78  
                               ___awmod 8642                                 ___flmul 2C0A  
                               ___flsub A006                                 ___fltol 7A7E  
                               ___lodiv 778A                                 ___lomod 8174  
             __end_of_UART1_Receive_ISR AAAC                         __size_of_efgtoa 1244  
                       __size_of_floorf 036C                    __end_of_init_display 8E6A  
                               __pcinit 8A88                __end_of_mode_lamp_bright ABC6  
                       __size_of_memset 02EC                __size_of_adc_int_handler 0002  
                   _eaDogM_WriteCommand ABAA                                 __ramtop 2000  
                               __ptext0 21F0                                 __ptext1 A8A0  
                               __ptext2 A9BE                                 __ptext3 9B54  
                               __ptext4 AB68                                 __ptext5 AC1E  
                               __ptext6 A3BC                                 __ptext7 AB7A  
                               __ptext8 AB8A                                 __ptext9 A458  
                     _UART2_Receive_ISR AA56                         __size_of_printf 0062  
                       __CFG_WRTAPP$OFF 000000                         __size_of_strcpy 00D4  
                       __size_of_strlen 00A2                   _OSCILLATOR_Initialize AB3E  
                          __size_of_abs 0046                                 us608999 6BF0  
                          __size_of_pad 0114                       __end_of_init_bsoc 7D60  
                               _isalpha A11E                                 _isdigit A4E8  
                               _ivln2_h FDB7                                 us597999 6738  
                               us693999 78F4                               _T3CONbits 003FA6  
                               us698999 82A4                                 _mode_sw 002E  
                     __end_of_lp_filter 75F4                                 _islower A488  
                               _isspace 9E3C                         __CFG_WRTSAF$OFF 000000  
                             _T5CONbits 003F9A                __end_of_UART2_Initialize 9CDA  
                               _isupper A4B8              __size_of_SYSTEM_Initialize 004A  
                               _sprintf 897E                                 _tolower 98AC  
                 __size_of_display_help 0008                                 _utctime 0090  
                 __size_of_display_info 0008                                 _strncmp 6C02  
                               _toupper 9828                    end_of_initialization 8B84  
             __size_of_convert_adc_data 00B8                      _check_enter_button A1E4  
                             i1u1171_20 7F84     __end_of_UART2_SetRxInterruptHandler A6E6  
           _UART2_SetRxInterruptHandler A6BE                       __end_of_set_vterm AA1A  
                     __end_of_vfpfcnvrt 21F0                               _SPI1TCNTL 003D12  
                               postdec0 003FED                                 postdec1 003FE5  
                               postdec2 003FDD                                 postinc0 003FEE  
                               postinc1 003FE6                                 postinc2 003FDE  
            __size_of_adc_int_t_handler 007E                     __size_of_StartTimer 0040  
                     __end_of_start_lcd AC58               __end_of_UART2_Receive_ISR AA74  
                        wdtdelay@dcount 0094                   __CFG_WDTCPS$WDTCPS_31 000000  
                       ??_DMA1_DMAA_ISR 003E                   _INT1_InterruptHandler 00B4  
                             _PORTBbits 003FCB                       __end_of_stop_bsoc AC5E  
              _TMR3_SetInterruptHandler A75E                               _PORTFbits 003FCF  
              _TMR6_SetInterruptHandler A70E                            _display_help AC2E  
                 _TMR5_InterruptHandler 009F                            _display_info AC26  
  __size_of_UART2_SetTxInterruptHandler 0028                __end_of_clear_hid_pflags A8E8  
                     __size_of_ADCC_ISR 002C     __end_of_ADCC_SetADIInterruptHandler A826  
           _ADCC_SetADIInterruptHandler A7FE                              _update_lcd 886E  
                       _calc_model_data 54D6                  __size_of_ringBufS_init 0028  
                      __CFG_FEXTOSC$ECH 000000                              _static_soc A8A0  
                       _DMA1_Initialize 99AE                              _start_bsoc A99C  
                       _SPI1_Initialize AB12                   __end_of_get_vterm_ptr A546  
                     __size_of_INT0_ISR 000E                       __size_of_INT1_ISR 003E  
                        __end_of_WaitMs A386            __end_of_INTERRUPT_Initialize 9B54  
                            _vterm_dump 83F0                          __end_of___flge 7EC2  
                        __end_of___fleq 9002    __end_of_INT0_DefaultInterruptHandler AC6C  
 __size_of_INT0_DefaultInterruptHandler 0002            _INT0_DefaultInterruptHandler AC6A  
            __size_of_UART1_Receive_ISR 001C                         _DMA2_Initialize 9D34  
                         __pidataBIGRAM 7238                          __end_of_efgtoa 1244  
                     __size_of_TMR3_ISR 0162                       __size_of_TMR5_ISR 005A  
                     __size_of_TMR6_ISR 001A                     __size_of_check_help 0212  
                        __end_of_floorf 5BE4             __size_of_UART2_Transmit_ISR 002C  
                            floorf@F524 0074                          __end_of_memset 6210  
                        __end_of_printf 9C1A                __end_of_DMA1_DMADCNT_ISR AC06  
           __size_of_PWM8_LoadDutyValue 0042                   __end_of_INT0_CallBack A978  
                        __end_of_strcpy 8F3E                          __end_of_strlen 94C2  
                   start_initialization 8A88    __end_of_TMR5_DefaultInterruptHandler A458  
 __size_of_TMR5_DefaultInterruptHandler 0034            _TMR5_DefaultInterruptHandler A424  
       __size_of_PIN_MANAGER_Initialize 0092                             __end_of_abs A006  
                 __end_of_INT1_CallBack A90C               __size_of_set_display_info 001E  
                           __end_of_pad 886E                    __size_of_Default_ISR 0006  
                  __end_of_send_lcd_cmd A646                          _switch_handler 82B4  
         __size_of_ADCC_StartConversion 0012                              ivt0x8_base 0008  
                         _uart1RxBuffer 006C                   __end_of___fpclassifyf 778A  
                         _uart2RxBuffer 0500                __end_of_DMA1_DMASCNT_ISR ABE6  
                         _uart2TxBuffer 0354                          _DMA1_DMAOR_ISR AC14  
                   __end_of_hid_display 8C8C              __end_of_send_port_data_dma 9EE0  
                      __CFG_LPBOREN$OFF 000000                   __size_of_init_display 00EA  
           __size_of_eaDogM_WriteString 00A6                               _TimerDone A66E  
                         _ringBufS_init A646                             __pdataBANK0 00C6  
                           __pdataBANK1 0100                             __pdataBANK2 0200  
            __size_of_UART2_Receive_ISR 001E                     __size_of_get_switch 002C  
            __end_of_EXT_INT_Initialize A424                 __end_of_calc_model_data 5878  
                   __end_of_help_button A31A         __end_of_eaDogM_WriteStringAtPos A3BC  
                   __end_of_BVSOC_TABLE FD1F                    calc_model_data@bcror 0088  
                           __pbssBIGRAM 07FF                 __end_of_DMA1_Initialize 9A18  
                  calc_model_data@bvror 008C                             __pbssCOMRAM 0021  
      __end_of_INT0_SetInterruptHandler A7D6                           __pcstackBANK3 03E4  
              __size_of_TMR2_Initialize 0018                  __size_of_TMR3_CallBack 0024  
                __end_of_switch_handler 83F0                       __size_of___xxtofl 0204  
               __end_of_SPI1_Initialize AB28                _UART1_RxInterruptHandler 00AB  
              _UART2_TxInterruptHandler 00AE                               __end_of_T FDAF  
                      _convert_adc_data 90BE                               _calc_bsoc 3BF0  
             __size_of_ringBufS_put_dma 00AA                            _init_display 8D80  
                __end_of_DMA1_DMAOR_ISR AC1E                  __size_of_TMR5_CallBack 0024  
                 _TMR6_InterruptHandler 00A2                      calc_ror_data@bcror 0080  
                __size_of_TMR6_CallBack 0024                 __end_of_DMA2_Initialize 9D8E  
                    calc_ror_data@bvror 0084                  _PIN_MANAGER_Initialize 967E  
              __size_of_TMR3_Initialize 0046                    __end_of_wait_lcd_set AC52  
                         __pmediumconst FC4E                               __ptext100 7438  
                             __ptext101 A006                               __ptext110 A5CC  
                             __ptext102 3434                               __ptext111 A70E  
                             __ptext103 2C0A                               __ptext120 967E  
                             __ptext112 A092                               __ptext104 9F2E  
                             __ptext121 AB3E                               __ptext113 A736  
                             __ptext105 9C7C                               __ptext130 9A18  
                             __ptext122 9AEE                               __ptext114 A0D8  
                             __ptext106 A696                               __ptext131 A7D6  
                             __ptext123 AC3E                               __ptext115 A75E  
                             __ptext107 A6BE                               __ptext140 A424  
                             __ptext132 A7FE                               __ptext124 A3F0  
                             __ptext116 AAFA                               __ptext108 A04C  
                             __ptext141 7EC4                               __ptext133 A2A4  
                             __ptext125 A786                               __ptext117 AB12  
                             __ptext109 A6E6                               __ptext150 AC6A  
                             __ptext142 A264                               __ptext134 A8E8  
                             __ptext126 A7AE                               __ptext118 AB28  
                             __ptext151 AC60                               __ptext143 A930  
                             __ptext135 AC66                               __ptext127 9D34  
                             __ptext119 AB54                               __ptext160 A5A0  
                             __ptext152 A574                               __ptext144 AC68  
                             __ptext136 82B4                               __ptext128 99AE  
                             __ptext161 A878                               __ptext153 9930  
                             __ptext145 3BF0                               __ptext137 9D90  
                             __ptext129 ABE6                               __ptext170 0000  
                             __ptext162 AA56                               __ptext154 AC6C  
                             __ptext146 9E8E                               __ptext138 A224  
                             __ptext163 AAC8                               __ptext155 AC6E  
                             __ptext147 ABF0                               __ptext139 A90C  
                             __ptext164 A978                               __ptext156 9A84  
                             __ptext148 ABC8                               __ptext165 9EE0  
                             __ptext157 A828                               __ptext149 A954  
                             __ptext166 ABD8                               __ptext158 AA90  
                             __ptext167 ABFC                               __ptext159 A850  
                             __ptext168 AC08                               __ptext169 AC14  
                             _hid_input 9710                      __end_of_StartTimer A1E4  
                    _set_load_relay_one AB8A                      _set_load_relay_two AB7A  
                     __size_of_wdtdelay 005A                       __size_of_vfprintf 00AC  
                              _ADCC_ISR A574                  __CFG_BBSIZE$BBSIZE_512 000000  
                             fabsf@F463 0078                                _DMA1CON0 003BFC  
                              _DMA1CON1 003BFD                                _DMA1AIRQ 003BFE  
                              _DMA2CON0 003BDC                                _DMA2CON1 003BDD  
                              _DMA2AIRQ 003BDE                                _DMA1SIRQ 003BFF  
                              _DMA2SIRQ 003BDF                 __size_of_get_raw_result 001E  
                        __size_of_fabsf 00AE                               _init_bsoc 7BF0  
                __size_of_wait_lcd_done 001C                          __size_of_fputc 0124  
                              _T2CLKCON 003FAE                          __size_of_fputs 0098  
                             _lp_filter 7438                             _hid_display 8B8A  
                        __size_of_srand 0034                          __size_of_putch 001A  
                  _INTERRUPT_Initialize 9AEE                                _T6CLKCON 003F96  
         __size_of_start_switch_handler 0020                         ?_DMA1_DMAOR_ISR 0038  
                              _INT0_ISR ABC8                                _INT1_ISR A2A4  
                              _LATCbits 003FBC                                _LATDbits 003FBD  
                              _LATEbits 003FBE       __size_of_INT1_SetInterruptHandler 0028  
                              _IPR1bits 003981                                _IPR2bits 003982  
                              _PIE1bits 003991                                _IPR3bits 003983  
                              _PIE2bits 003992                                _IPR5bits 003985  
                              _PIE3bits 003993                               _tickCount 02E5  
                              _IPR6bits 003986                                _PIE5bits 003995  
                              _IPR8bits 003988                                _PIE6bits 003996  
                              _IPR9bits 003989                                _PIE8bits 003998  
                   __CFG_BORV$VBOR_2P45 000000                                _PIE9bits 003999  
                             _ring_buf1 0443                               _ring_buf2 0400  
                              _PIR1bits 0039A1                                _PIR2bits 0039A2  
                              _SPI1BAUD 003D19                                _PIR4bits 0039A4  
                              _SPI1CON0 003D14                                _SPI1CON1 003D15  
                              _SPI1CON2 003D16                           _TMR3_CallBack A930  
                              _PIR5bits 0039A5                                _PIR6bits 0039A6  
                              _PIR8bits 0039A8                                _PIR9bits 0039A9  
                              i2u971_48 A58C                __size_of_TMR5_Initialize 0046  
                              i2u973_48 9ABA                                i2u973_49 9ACE  
                              i2u975_48 A83C                                i2u977_48 A864  
                              i2u979_48 A88C                               _set_vterm A9FC  
                   __size_of_update_lcd 0110                             _help_button A2E2  
                              _TMR3_ISR 7EC4                             _BVSOC_TABLE FC4F  
                              _TMR5_ISR 9D90                                _TMR6_ISR AAC8  
                             _port_data 05FF                     __size_of_static_soc 0024  
                             _vfpfcnvrt 1244                            _SPI1INTFbits 003D1A  
                   __size_of_start_bsoc 0022                           _TMR5_CallBack A90C  
                            _ADCON0bits 003EF8                      __end_of_check_help 7034  
                             _start_lcd AC52                 __size_of_FVR_Initialize 0008  
             __size_of_send_lcd_cmd_dma 0052                           _TMR6_CallBack A978  
                 __size_of_send_lcd_cmd 0028       __size_of_TMR5_SetInterruptHandler 0028  
                             _stop_bsoc AC58                        _set_display_info AA1A  
              __size_of_PWM8_Initialize 0016                __size_of_TMR6_Initialize 002A  
                           _INTCON0bits 003FD2                               copy_data0 8A9C  
                             copy_data1 8AC2                               copy_data2 8AE4  
                             copy_data3 8B06                _INT0_SetInterruptHandler A7AE  
                   __size_of_vterm_dump 012E     __end_of_UART2_SetTxInterruptHandler A6BE  
           _UART2_SetTxInterruptHandler A696                            _uart1RxCount 0035  
                          _uart2RxCount 002F                                __Hrparam 0000  
      __size_of_eaDogM_WriteStringAtPos 0036                 __CFG_RSTOSC$EXTOSC_4PLL 000000  
              __size_of_TMR3_WriteTimer 0040                                __Lrparam 0000  
               __size_of_check_adc_scan 0008                      __CFG_BOREN$SBORDIS 000000  
              __size_of_conv_raw_result 04AC                           _wait_lcd_done AA74  
                          _send_lcd_cmd A61E                        __size_of___aodiv 0280  
                      __size_of___fladd 07BC                        __size_of___aomod 0240  
                       _adc_int_handler AC6E                        __size_of___fldiv 057A  
                      __size_of___awdiv 014E                        __size_of___flneg 0048  
                      __size_of___awmod 0118                        __size_of___flmul 082A  
                      __size_of___flsub 0046                        __size_of___fltol 0172  
                      __size_of___lodiv 0180                        __size_of___lomod 0140  
                    __end_of_get_switch A572                   __end_of_DMA1_DMAA_ISR AC12  
                    ___fpclassifyf@F463 007C    __size_of_UART1_SetRxInterruptHandler 0028  
                       lp_filter@smooth 0300                                ___xxtofl 7034  
                     ?_DMA1_DMADCNT_ISR 0038             __size_of_check_enter_button 0040  
              __size_of_ADCC_Initialize 006A             __end_of_eaDogM_WriteCommand ABB8  
                      __size_of_isalpha 0044                        __size_of_isdigit 0030  
                              __pivt0x8 0008                        __size_of_islower 0030  
                      __size_of_isspace 0052                      ??_DMA1_DMADCNT_ISR 003E  
                              __ptext10 8D80                                __ptext11 A5F6  
                              __ptext20 ABAA                                __ptext12 A61E  
                              __ptext21 90BE                                __ptext13 A9DE  
                              __ptext30 A386                                __ptext22 A8C4  
                              __ptext14 A646                                __ptext31 9DEA  
                              __ptext23 AC46                                __ptext15 7BF0  
                              __ptext40 9224                                __ptext32 AA74  
                              __ptext24 6E22                                __ptext16 955A  
                              __ptext41 1244                                __ptext33 9CDA  
                              __ptext25 83F0                                __ptext17 8B8A  
                              __ptext50 6210                                __ptext42 511C  
                              __ptext34 937A                                __ptext26 897E  
                              __ptext18 9710                                __ptext51 0000  
                              __ptext43 9828                                __ptext35 AC4C  
                              __ptext27 A518                                __ptext19 A546  
                              __ptext60 8642                                __ptext52 98AC  
                              __ptext44 A488                                __ptext36 AC52  
                              __ptext28 A350                                __ptext61 8026  
                              __ptext53 A4B8                                __ptext45 A11E  
                              __ptext37 95EC                                __ptext29 886E  
                              __ptext70 851E                                __ptext62 4C9C  
                              __ptext54 8E6A                                __ptext46 5BE4  
                              __ptext38 5F24                                __ptext71 AAAC  
                              __ptext63 9FC0                                __ptext55 5878  
                              __ptext47 8174                                __ptext39 9BB8  
                              __ptext80 ABB8                                __ptext72 92D0  
                              __ptext64 69C2                                __ptext56 75F4  
                              __ptext48 778A                                __ptext81 A162  
                              __ptext73 674E                                __ptext65 64CE  
                              __ptext57 7A7E                                __ptext49 6C02  
                              __ptext90 9176                                __ptext82 A2E2  
                              __ptext74 9E3C                                __ptext66 97A0  
                              __ptext58 9F78                                __ptext91 47F0  
                              __ptext83 A66E                                __ptext75 A4E8  
                              __ptext67 875A                                __ptext59 8F3E  
                              __ptext92 9C1A                                __ptext84 A1A4  
                              __ptext76 A9FC                                __ptext68 9420  
                              __ptext93 AA38                                __ptext85 AC26  
                              __ptext77 AB9A                                __ptext69 94C2  
                              __ptext94 7034                                __ptext86 AC2E  
                              __ptext78 AA1A                                __ptext95 4276  
                              __ptext87 A1E4                                __ptext79 AAE2  
                              __ptext96 7D60                                __ptext88 AC36  
                              __ptext97 54D6                                __ptext89 790A  
                              __ptext98 AC58                                __ptext99 A99C  
                      __size_of_isupper 0030                                us1013999 4CB6  
                              us1103999 519C                        __size_of_sprintf 010A  
                      __size_of_tolower 0084                                us1082999 6222  
                              us1094999 5C4A                        __size_of_strncmp 0220  
                      __size_of_toupper 0084                        _ringBufS_put_dma 92D0  
                  __end_of_Volts_to_SOC 95EC                           __size_of_atoi 0274  
                         __size_of_ctoa 0088                           __size_of_main 0A1A  
                         __size_of_dtoa 0480                           __size_of_nanf 0062  
                 __size_of_wait_lcd_set 0006                           __size_of_stoa 02BE  
                         __size_of_utoa 0340                           __size_of_xtoa 03BA  
                  __CFG_WDTCWS$WDTCWS_7 000000                       ?_DMA1_DMASCNT_ISR 0038  
                 __end_of_init_port_dma A488                             _IVTLOCKbits 003FD4  
              __size_of_TMR5_WriteTimer 0040               _ADCC_ADI_InterruptHandler 00A8  
                             stoa@F1166 00EE                      ??_DMA1_DMASCNT_ISR 003E  
          __end_of_ADCC_StartConversion AB7A                                _spi_link 0060  
                              _wdtdelay 9CDA              __end_of_UART2_Transmit_ISR A5CC  
                              _vfprintf 9224                __end_of_convert_adc_data 9176  
            __end_of_PWM8_LoadDutyValue A1A4    __end_of_TMR3_DefaultInterruptHandler AC6A  
 __size_of_TMR3_DefaultInterruptHandler 0002            _TMR3_DefaultInterruptHandler AC68  
  __end_of_INT1_DefaultInterruptHandler AC68   __size_of_INT1_DefaultInterruptHandler 0002  
          _INT1_DefaultInterruptHandler AC66                      _send_port_data_dma 9E8E  
                         ??_Default_ISR 0038                             _uart1RxHead 0037  
                __size_of_get_vterm_ptr 002E                             _uart2RxHead 0031  
                           _uart1RxTail 0036                          _get_raw_result AA38  
                           _uart2TxHead 0034                             _uart2RxTail 0030  
                           _uart2TxTail 0033                            _wait_lcd_set AC4C  
                      Volts_to_SOC@slot 002D                      _EXT_INT_Initialize A3F0  
  __end_of_TMR6_DefaultInterruptHandler 9F2E   __size_of_TMR6_DefaultInterruptHandler 004E  
          _TMR6_DefaultInterruptHandler 9EE0    __end_of_ADCC_DefaultInterruptHandler AC6E  
 __size_of_ADCC_DefaultInterruptHandler 0002            _ADCC_DefaultInterruptHandler AC6C  
                              intlevel1 0000                                intlevel2 0000  
                     _send_lcd_cmd_long A5F6          __size_of_set_temp_display_help 0010  
         __end_of_set_temp_display_help ABAA                   __end_of_calc_ror_data 7A7E  
                     __CFG_CLKOUTEN$OFF 000000              __end_of_eaDogM_WriteString 9420  
                 __end_of_mode_lamp_dim AAFA                 __end_of_adc_int_handler AC70  
                __size_of_INT0_CallBack 0024                              _SPI1SCKPPS 003ADE  
                            _SPI1SDIPPS 003ADF                  __size_of_INT1_CallBack 0024  
                    __end_of_update_lcd 897E                  _uart2TxBufferRemaining 0032  
                    __end_of_static_soc A8C4                      __end_of_start_bsoc A9BE  
                        _FVR_Initialize AC3E                  __end_of_get_raw_result AA56  
                      _send_lcd_cmd_dma 9DEA                  __size_of___fpclassifyf 0196  
                 TMR5_ISR@CountCallBack 0029        __end_of_INT1_SetInterruptHandler A7AE  
             __size_of_UART1_Initialize 0046                        ??_DMA1_DMAOR_ISR 003E  
             __end_of_send_lcd_cmd_long A61E                 __size_of_start_adc_scan 0064  
                   __end_of_Default_ISR AC66          __end_of_PIN_MANAGER_Initialize 9710  
             __size_of_mode_lamp_bright 000E                      __end_of_vterm_dump 851E  
               _eaDogM_WriteStringAtPos A386                           _get_vterm_ptr A518  
                        _check_adc_scan AC36               __size_of_UART2_Initialize 005E  
