

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Dec 18 21:12:58 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     9                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    22                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    23                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	text0,global,reloc=2,class=CODE,delta=1
    25                           	psect	text1,global,reloc=2,class=CODE,delta=1
    26                           	psect	text2,global,reloc=2,class=CODE,delta=1
    27                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text4,global,reloc=2,class=CODE,delta=1
    29                           	psect	text5,global,reloc=2,class=CODE,delta=1
    30                           	psect	text6,global,reloc=2,class=CODE,delta=1
    31                           	psect	text7,global,reloc=2,class=CODE,delta=1
    32                           	psect	text8,global,reloc=2,class=CODE,delta=1
    33                           	psect	text9,global,reloc=2,class=CODE,delta=1
    34                           	psect	text10,global,reloc=2,class=CODE,delta=1
    35                           	psect	text11,global,reloc=2,class=CODE,delta=1
    36                           	psect	text12,global,reloc=2,class=CODE,delta=1
    37                           	psect	text13,global,reloc=2,class=CODE,delta=1
    38                           	psect	text14,global,reloc=2,class=CODE,delta=1
    39                           	psect	text15,global,reloc=2,class=CODE,delta=1
    40                           	psect	text16,global,reloc=2,class=CODE,delta=1
    41                           	psect	text17,global,reloc=2,class=CODE,delta=1
    42                           	psect	text18,global,reloc=2,class=CODE,delta=1
    43                           	psect	text19,global,reloc=2,class=CODE,delta=1
    44                           	psect	text20,global,reloc=2,class=CODE,delta=1
    45                           	psect	text21,global,reloc=2,class=CODE,delta=1
    46                           	psect	text22,global,reloc=2,class=CODE,delta=1
    47                           	psect	text23,global,reloc=2,class=CODE,delta=1
    48                           	psect	text24,global,reloc=2,class=CODE,delta=1
    49                           	psect	text25,global,reloc=2,class=CODE,delta=1
    50                           	psect	text26,global,reloc=2,class=CODE,delta=1
    51                           	psect	text27,global,reloc=2,class=CODE,delta=1
    52                           	psect	text28,global,reloc=2,class=CODE,delta=1
    53                           	psect	text29,global,reloc=2,class=CODE,delta=1
    54                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text31,global,reloc=2,class=CODE,delta=1
    56                           	psect	text32,global,reloc=2,class=CODE,delta=1
    57                           	psect	text33,global,reloc=2,class=CODE,delta=1
    58                           	psect	text34,global,reloc=2,class=CODE,delta=1
    59                           	psect	text35,global,reloc=2,class=CODE,delta=1
    60                           	psect	text36,global,reloc=2,class=CODE,delta=1
    61                           	psect	text37,global,reloc=2,class=CODE,delta=1
    62                           	psect	text38,global,reloc=2,class=CODE,delta=1
    63                           	psect	text39,global,reloc=2,class=CODE,delta=1
    64                           	psect	text40,global,reloc=2,class=CODE,delta=1
    65                           	psect	text41,global,reloc=2,class=CODE,delta=1
    66                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text44,global,reloc=2,class=CODE,delta=1
    69                           	psect	text45,global,reloc=2,class=CODE,delta=1
    70                           	psect	text46,global,reloc=2,class=CODE,delta=1
    71                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text50,global,reloc=2,class=CODE,delta=1
    75                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text54,global,reloc=2,class=CODE,delta=1
    79                           	psect	text55,global,reloc=2,class=CODE,delta=1
    80                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    82                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    86                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    87                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    88                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    89                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
    90                           	psect	text66,global,reloc=2,class=CODE,delta=1
    91                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=1
    93                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
    94                           	psect	text70,global,reloc=2,class=CODE,delta=1
    95                           	psect	text71,global,reloc=2,class=CODE,delta=1
    96                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    99                           	psect	text75,global,reloc=2,class=CODE,delta=1
   100                           	psect	text76,global,reloc=2,class=CODE,delta=1
   101                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
   102                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=2
   103                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=2
   104                           	psect	text80,global,reloc=2,class=CODE,delta=1
   105                           	psect	text81,global,reloc=2,class=CODE,delta=1
   106                           	psect	text82,global,reloc=2,class=CODE,delta=1
   107                           	psect	text83,global,reloc=2,class=CODE,delta=1
   108                           	psect	text84,global,reloc=2,class=CODE,delta=1
   109                           	psect	text85,global,reloc=2,class=CODE,delta=1
   110                           	psect	text86,global,reloc=2,class=CODE,delta=1
   111                           	psect	text87,global,reloc=2,class=CODE,delta=1
   112                           	psect	text88,global,reloc=2,class=CODE,delta=1
   113                           	psect	text89,global,reloc=2,class=CODE,delta=1,inline
   114                           	psect	text90,global,reloc=2,class=CODE,delta=1,inline
   115                           	psect	text91,global,reloc=2,class=CODE,delta=1
   116                           	psect	text92,global,reloc=2,class=CODE,delta=1
   117                           	psect	text93,global,reloc=2,class=CODE,delta=1,group=2
   118                           	psect	text94,global,reloc=2,class=CODE,delta=1
   119                           	psect	text95,global,reloc=2,class=CODE,delta=1,group=2
   120                           	psect	text96,global,reloc=2,class=CODE,delta=1
   121                           	psect	text97,global,reloc=2,class=CODE,delta=1,group=1
   122                           	psect	text98,global,reloc=2,class=CODE,delta=1,group=1
   123                           	psect	text99,global,reloc=2,class=CODE,delta=1,group=1
   124                           	psect	text100,global,reloc=2,class=CODE,delta=1
   125                           	psect	text101,global,reloc=2,class=CODE,delta=1
   126                           	psect	text102,global,reloc=2,class=CODE,delta=1
   127                           	psect	text103,global,reloc=2,class=CODE,delta=1
   128                           	psect	text104,global,reloc=2,class=CODE,delta=1,group=1
   129                           	psect	text105,global,reloc=2,class=CODE,delta=1,group=1
   130                           	psect	text106,global,reloc=2,class=CODE,delta=1,group=1
   131                           	psect	text107,global,reloc=2,class=CODE,delta=1
   132                           	psect	text108,global,reloc=2,class=CODE,delta=1
   133                           	psect	text109,global,reloc=2,class=CODE,delta=1
   134                           	psect	text110,global,reloc=2,class=CODE,delta=1
   135                           	psect	text111,global,reloc=2,class=CODE,delta=1
   136                           	psect	text112,global,reloc=2,class=CODE,delta=1
   137                           	psect	text113,global,reloc=2,class=CODE,delta=1
   138                           	psect	text114,global,reloc=2,class=CODE,delta=1
   139                           	psect	text115,global,reloc=2,class=CODE,delta=1
   140                           	psect	text116,global,reloc=2,class=CODE,delta=1
   141                           	psect	text117,global,reloc=2,class=CODE,delta=1
   142                           	psect	text118,global,reloc=2,class=CODE,delta=1
   143                           	psect	text119,global,reloc=2,class=CODE,delta=1
   144                           	psect	text120,global,reloc=2,class=CODE,delta=1
   145                           	psect	text121,global,reloc=2,class=CODE,delta=1
   146                           	psect	text122,global,reloc=2,class=CODE,delta=1
   147                           	psect	text123,global,reloc=2,class=CODE,delta=1
   148                           	psect	text124,global,reloc=2,class=CODE,delta=1
   149                           	psect	text125,global,reloc=2,class=CODE,delta=1
   150                           	psect	text126,global,reloc=2,class=CODE,delta=1
   151                           	psect	text127,global,reloc=2,class=CODE,delta=1
   152                           	psect	text128,global,reloc=2,class=CODE,delta=1
   153                           	psect	text129,global,reloc=2,class=CODE,delta=1
   154                           	psect	text130,global,reloc=2,class=CODE,delta=1
   155                           	psect	text131,global,reloc=2,class=CODE,delta=1
   156                           	psect	text132,global,reloc=2,class=CODE,delta=1
   157                           	psect	text133,global,reloc=2,class=CODE,delta=1
   158                           	psect	text134,global,reloc=2,class=CODE,delta=1
   159                           	psect	text135,global,reloc=2,class=CODE,delta=1
   160                           	psect	text136,global,reloc=4,class=CODE,delta=1
   161                           	psect	text137,global,reloc=2,class=CODE,delta=1
   162                           	psect	text138,global,reloc=2,class=CODE,delta=1
   163                           	psect	text139,global,reloc=2,class=CODE,delta=1
   164                           	psect	text140,global,reloc=4,class=CODE,delta=1
   165                           	psect	text141,global,reloc=2,class=CODE,delta=1
   166                           	psect	text142,global,reloc=2,class=CODE,delta=1
   167                           	psect	text143,global,reloc=2,class=CODE,delta=1
   168                           	psect	text144,global,reloc=4,class=CODE,delta=1
   169                           	psect	text145,global,reloc=2,class=CODE,delta=1
   170                           	psect	text146,global,reloc=2,class=CODE,delta=1
   171                           	psect	text147,global,reloc=2,class=CODE,delta=1
   172                           	psect	text148,global,reloc=2,class=CODE,delta=1
   173                           	psect	text149,global,reloc=2,class=CODE,delta=1
   174                           	psect	text150,global,reloc=2,class=CODE,delta=1
   175                           	psect	text151,global,reloc=4,class=CODE,delta=1
   176                           	psect	text152,global,reloc=2,class=CODE,delta=1
   177                           	psect	text153,global,reloc=2,class=CODE,delta=1
   178                           	psect	text154,global,reloc=4,class=CODE,delta=1
   179                           	psect	text155,global,reloc=4,class=CODE,delta=1
   180                           	psect	text156,global,reloc=2,class=CODE,delta=1
   181                           	psect	text157,global,reloc=2,class=CODE,delta=1
   182                           	psect	text158,global,reloc=2,class=CODE,delta=1
   183                           	psect	text159,global,reloc=4,class=CODE,delta=1
   184                           	psect	text160,global,reloc=4,class=CODE,delta=1
   185                           	psect	text161,global,reloc=2,class=CODE,delta=1
   186                           	psect	text162,global,reloc=4,class=CODE,delta=1
   187                           	psect	text163,global,reloc=2,class=CODE,delta=1
   188                           	psect	text164,global,reloc=4,class=CODE,delta=1
   189                           	psect	text165,global,reloc=2,class=CODE,delta=1
   190                           	psect	text166,global,reloc=4,class=CODE,delta=1
   191                           	psect	text167,global,reloc=2,class=CODE,delta=1
   192                           	psect	text168,global,reloc=2,class=CODE,delta=1
   193                           	psect	text169,global,reloc=4,class=CODE,delta=1
   194                           	psect	text170,global,reloc=4,class=CODE,delta=1
   195                           	psect	text171,global,reloc=4,class=CODE,delta=1
   196                           	psect	text172,global,reloc=4,class=CODE,delta=1
   197                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   198                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   199                           	psect	text173,global,reloc=4,class=CODE,delta=1
   200                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   201                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   202  0000                     
   203                           ; Version 2.10
   204                           ; Generated 31/07/2019 GMT
   205                           ; 
   206                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   207                           ; All rights reserved.
   208                           ; 
   209                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   210                           ; 
   211                           ; Redistribution and use in source and binary forms, with or without modification, are
   212                           ; permitted provided that the following conditions are met:
   213                           ; 
   214                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   215                           ;        conditions and the following disclaimer.
   216                           ; 
   217                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   218                           ;        of conditions and the following disclaimer in the documentation and/or other
   219                           ;        materials provided with the distribution.
   220                           ; 
   221                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   222                           ;        software without specific prior written permission.
   223                           ; 
   224                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   225                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   226                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   227                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   228                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   229                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   230                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   231                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   232                           ; 
   233                           ; 
   234                           ; Code-generator required, PIC18F57K42 Definitions
   235                           ; 
   236                           ; SFR Addresses
   237  0000                     
   238 ;;_esr_temp	offset	0
   239 ;;_i_esr	offset	4
   240 ;;_shape	offset	6
   241 ;;_k	offset	7
   242 ;;_j	offset	8
   243 ;;_i	offset	9
   244 ;;_inp_index	offset	10
   245 ;;_mode	offset	11
   246 ;;_i_ror	offset	12
   247 ;;_s	offset=-2 (param)
   248 ;;_c	offset	0
   249 ;;_shape	offset=-1 (param)
   250 ;;_reset	offset=-2 (param)
   251 ;;_cmd	offset=-1 (param)
   252 ;;_cmd	offset=-1 (param)
   253 ;;_data	offset=-1 (param)
   254 ;;__this	offset=-2 (param)
   255 ;;_cvoltage	offset=-4 (param)
   256 ;;_h	offset=-1 (param)
   257 ;;_h	offset=-1 (param)
   258 ;;_i	offset=-1 (param)
   259 ;;_fsm	offset=-1 (param)
   260 ;;_channel	offset=-1 (param)
   261 ;;_mode	offset=-1 (param)
   262 ;;_mode	offset=-1 (param)
   263 ;;_cmd	offset=-1 (param)
   264 ;;_i	offset	0
   265 ;;_h	offset=-1 (param)
   266 ;;_flipper	offset=-1 (param)
   267 ;;_f	offset	0
   268 ;;_ap	offset	6
   269 ;;_s	offset=-3 (param)
   270 ;;_fmt	offset=-5 (param)
   271 ;;_line	offset=-1 (param)
   272 ;;_vterm	offset=-2 (param)
   273 ;;_numMilliseconds	offset=-2 (param)
   274 ;;_vterm	offset=-1 (param)
   275 ;;_r	offset=-1 (param)
   276 ;;_c	offset=-2 (param)
   277 ;;_strPtr	offset=-4 (param)
   278 ;;_strPtr	offset=-1 (param)
   279 ;;_delay	offset=-4 (param)
   280 ;;_strPtr	offset=-2 (param)
   281 ;;__this	offset=-2 (param)
   282 ;;_clearBuffer	offset=-3 (param)
   283 ;;_s	offset	0
   284 ;;_k	offset	2
   285 ;;_dest	offset=-2 (param)
   286 ;;_c	offset=-4 (param)
   287 ;;_n	offset=-6 (param)
   288 ;;_ap	offset	0
   289 ;;_fmt	offset=-3 (param)
   290 ;;_cfmt	offset	0
   291 ;;_fp	offset=-2 (param)
   292 ;;_fmt	offset=-4 (param)
   293 ;;_ap	offset=-6 (param)
   294 ;;_vfpfcnvrt$5435	offset	0
   295 ;;_vfpfcnvrt$5446	offset	2
   296 ;;_vfpfcnvrt$5434	offset	4
   297 ;;_llu	offset	6
   298 ;;_ll	offset	14
   299 ;;_f	offset	22
   300 ;;_ct	offset	26
   301 ;;_cp	offset	29
   302 ;;_c	offset	31
   303 ;;_fp	offset=-2 (param)
   304 ;;_fmt	offset=-4 (param)
   305 ;;_ap	offset=-6 (param)
   306 ;;_xtoa$5420	offset	0
   307 ;;_xtoa$5419	offset	2
   308 ;;_n	offset	4
   309 ;;_c	offset	12
   310 ;;_i	offset	14
   311 ;;_w	offset	16
   312 ;;_p	offset	18
   313 ;;_fp	offset=-2 (param)
   314 ;;_d	offset=-10 (param)
   315 ;;_x	offset=-11 (param)
   316 ;;_toupper$6226	offset	0
   317 ;;_c	offset=-2 (param)
   318 ;;_c	offset=-2 (param)
   319 ;;_c	offset=-2 (param)
   320 ;;_n	offset	0
   321 ;;_i	offset	8
   322 ;;_w	offset	10
   323 ;;_p	offset	12
   324 ;;_fp	offset=-2 (param)
   325 ;;_d	offset=-10 (param)
   326 ;;_counter	offset	0
   327 ;;_dividend	offset=-8 (param)
   328 ;;_divisor	offset=-16 (param)
   329 ;;_quotient	offset	0
   330 ;;_counter	offset	8
   331 ;;_dividend	offset=-8 (param)
   332 ;;_divisor	offset=-16 (param)
   333 ;;_r	offset	0
   334 ;;_l	offset	2
   335 ;;__l	offset=-2 (param)
   336 ;;__r	offset=-4 (param)
   337 ;;_n	offset=-6 (param)
   338 ;;_nuls	offset	0
   339 ;;_l	offset	7
   340 ;;_p	offset	9
   341 ;;_cp	offset	11
   342 ;;_w	offset	13
   343 ;;_i	offset	15
   344 ;;_fp	offset=-2 (param)
   345 ;;_s	offset=-4 (param)
   346 ;;_efgtoa$5392	offset	0
   347 ;;_efgtoa$5391	offset	2
   348 ;;_efgtoa$5390	offset	4
   349 ;;_efgtoa$5386	offset	6
   350 ;;_efgtoa$5382	offset	8
   351 ;;_efgtoa$5381	offset	10
   352 ;;_u	offset	12
   353 ;;_g	offset	16
   354 ;;_l	offset	20
   355 ;;_h	offset	24
   356 ;;_ou	offset	28
   357 ;;_n	offset	32
   358 ;;_e	offset	34
   359 ;;_i	offset	36
   360 ;;_w	offset	38
   361 ;;_p	offset	40
   362 ;;_sign	offset	42
   363 ;;_d	offset	44
   364 ;;_ne	offset	46
   365 ;;_m	offset	48
   366 ;;_pp	offset	50
   367 ;;_t	offset	52
   368 ;;_mode	offset	54
   369 ;;_nmode	offset	55
   370 ;;_fp	offset=-2 (param)
   371 ;;_f	offset=-6 (param)
   372 ;;_c	offset=-7 (param)
   373 ;;_tolower$6211	offset	0
   374 ;;_c	offset=-2 (param)
   375 ;;_c	offset=-2 (param)
   376 ;;_d	offset	0
   377 ;;_s	offset	2
   378 ;;_dest	offset=-2 (param)
   379 ;;_src	offset=-4 (param)
   380 ;;_u	offset	0
   381 ;;_m	offset	4
   382 ;;_e	offset	8
   383 ;;_x	offset=-4 (param)
   384 ;;_u	offset	0
   385 ;;_e	offset	4
   386 ;;_x	offset=-4 (param)
   387 ;;_exp1	offset	0
   388 ;;_sign1	offset	1
   389 ;;_f1	offset=-4 (param)
   390 ;;_f1	offset=-4 (param)
   391 ;;_ff1	offset=-4 (param)
   392 ;;_ff2	offset=-8 (param)
   393 ;;_sign	offset	0
   394 ;;_counter	offset	1
   395 ;;_dividend	offset=-2 (param)
   396 ;;_divisor	offset=-4 (param)
   397 ;;_quotient	offset	0
   398 ;;_sign	offset	2
   399 ;;_counter	offset	3
   400 ;;_dividend	offset=-2 (param)
   401 ;;_divisor	offset=-4 (param)
   402 ;;_dtoa$5358	offset	0
   403 ;;_n	offset	2
   404 ;;_i	offset	10
   405 ;;_s	offset	12
   406 ;;_w	offset	14
   407 ;;_p	offset	16
   408 ;;_fp	offset=-2 (param)
   409 ;;_d	offset=-10 (param)
   410 ;;_a	offset=-2 (param)
   411 ;;_sign	offset	0
   412 ;;_counter	offset	1
   413 ;;_dividend	offset=-8 (param)
   414 ;;_divisor	offset=-16 (param)
   415 ;;_quotient	offset	0
   416 ;;_sign	offset	8
   417 ;;_counter	offset	9
   418 ;;_dividend	offset=-8 (param)
   419 ;;_divisor	offset=-16 (param)
   420 ;;_w	offset	0
   421 ;;_fp	offset=-2 (param)
   422 ;;_c	offset=-3 (param)
   423 ;;_w	offset	0
   424 ;;_i	offset	2
   425 ;;_fp	offset=-2 (param)
   426 ;;_buf	offset=-4 (param)
   427 ;;_p	offset=-6 (param)
   428 ;;_a	offset	0
   429 ;;_s	offset=-2 (param)
   430 ;;_i	offset	0
   431 ;;_c	offset	2
   432 ;;_s	offset=-2 (param)
   433 ;;_fp	offset=-4 (param)
   434 ;;_c	offset=-2 (param)
   435 ;;_fp	offset=-4 (param)
   436 ;;_c	offset=-1 (param)
   437 ;;__this	offset=-2 (param)
   438 ;;_c	offset=-3 (param)
   439 ;;_atoi$5942	offset	0
   440 ;;_atoi$5940	offset	2
   441 ;;_atoi$5941	offset	4
   442 ;;_n	offset	5
   443 ;;_neg	offset	7
   444 ;;_s	offset=-2 (param)
   445 ;;_isspace$5991	offset	0
   446 ;;_c	offset=-2 (param)
   447 ;;_c	offset=-2 (param)
   448 ;;_vterm	offset=-1 (param)
   449 ;;_new_response_info	offset=-1 (param)
   450 ;;_new_response_info	offset=-1 (param)
   451 ;;_level	offset=-2 (param)
   452 ;;_dutyValue	offset=-2 (param)
   453 ;;_timer	offset=-1 (param)
   454 ;;_timer	offset=-1 (param)
   455 ;;_count	offset=-3 (param)
   456 ;;_h	offset=-1 (param)
   457 ;;_u	offset	0
   458 ;;_x	offset=-4 (param)
   459 ;;_chan	offset=-1 (param)
   460 ;;_to_what	offset=-2 (param)
   461 ;;_u	offset	0
   462 ;;_s	offset=-2 (param)
   463 ;;_index	offset=-1 (param)
   464 ;;_arg	offset	0
   465 ;;_exp	offset	4
   466 ;;_sign	offset=-1 (param)
   467 ;;_val	offset=-5 (param)
   468 ;;_grs	offset	0
   469 ;;_rem	offset	4
   470 ;;_new_exp	offset	8
   471 ;;_aexp	offset	10
   472 ;;_bexp	offset	11
   473 ;;_sign	offset	12
   474 ;;_b	offset=-4 (param)
   475 ;;_a	offset=-8 (param)
   476 ;;_ff1	offset=-4 (param)
   477 ;;_ff2	offset=-8 (param)
   478 ;;_lp_speed	offset	0
   479 ;;_new	offset=-4 (param)
   480 ;;_bn	offset=-5 (param)
   481 ;;_slow	offset=-6 (param)
   482 ;;_b	offset=-4 (param)
   483 ;;_a	offset=-8 (param)
   484 ;;_grs	offset	0
   485 ;;_bexp	offset	1
   486 ;;_aexp	offset	2
   487 ;;_signs	offset	3
   488 ;;_b	offset=-4 (param)
   489 ;;_a	offset=-8 (param)
   490 ;;_prod	offset	0
   491 ;;_grs	offset	4
   492 ;;_temp	offset	8
   493 ;;_bexp	offset	10
   494 ;;_aexp	offset	11
   495 ;;_sign	offset	12
   496 ;;_b	offset=-4 (param)
   497 ;;_a	offset=-8 (param)
   498 ;;_InterruptHandler	offset=-3 (param)
   499 ;;_InterruptHandler	offset=-3 (param)
   500 ;;_InterruptHandler	offset=-3 (param)
   501 ;;_InterruptHandler	offset=-3 (param)
   502 ;;_InterruptHandler	offset=-3 (param)
   503 ;;_InterruptHandler	offset=-3 (param)
   504 ;;_state	offset	0
   505 ;;_InterruptHandler	offset=-3 (param)
   506 ;;_InterruptHandler	offset=-3 (param)
   507 ;;_InterruptHandler	offset=-3 (param)
   508 ;;_InterruptHandler	offset=-3 (param)
   509 ;;_i	offset	0
   510 ;;_sw_value	offset	1
   511 ;;_timerVal	offset=-2 (param)
   512 ;;_timerVal	offset=-2 (param)
   513 ;;_log_ptr	offset	0
   514 ;;_f	offset	0
   515 ;;_ap	offset	6
   516 ;;_s	offset=-3 (param)
   517 ;;_fmt	offset=-5 (param)
   518 ;;_cfmt	offset	0
   519 ;;_fp	offset=-2 (param)
   520 ;;_fmt	offset=-4 (param)
   521 ;;_ap	offset=-6 (param)
   522 ;;_vfpfcnvrt$5435	offset	0
   523 ;;_vfpfcnvrt$5446	offset	2
   524 ;;_vfpfcnvrt$5434	offset	4
   525 ;;_llu	offset	6
   526 ;;_ll	offset	14
   527 ;;_f	offset	22
   528 ;;_ct	offset	26
   529 ;;_cp	offset	29
   530 ;;_c	offset	31
   531 ;;_fp	offset=-2 (param)
   532 ;;_fmt	offset=-4 (param)
   533 ;;_ap	offset=-6 (param)
   534 ;;_xtoa$5420	offset	0
   535 ;;_xtoa$5419	offset	2
   536 ;;_n	offset	4
   537 ;;_c	offset	12
   538 ;;_i	offset	14
   539 ;;_w	offset	16
   540 ;;_p	offset	18
   541 ;;_fp	offset=-2 (param)
   542 ;;_d	offset=-10 (param)
   543 ;;_x	offset=-11 (param)
   544 ;;_toupper$6226	offset	0
   545 ;;_c	offset=-2 (param)
   546 ;;_c	offset=-2 (param)
   547 ;;_c	offset=-2 (param)
   548 ;;_n	offset	0
   549 ;;_i	offset	8
   550 ;;_w	offset	10
   551 ;;_p	offset	12
   552 ;;_fp	offset=-2 (param)
   553 ;;_d	offset=-10 (param)
   554 ;;_counter	offset	0
   555 ;;_dividend	offset=-8 (param)
   556 ;;_divisor	offset=-16 (param)
   557 ;;_quotient	offset	0
   558 ;;_counter	offset	8
   559 ;;_dividend	offset=-8 (param)
   560 ;;_divisor	offset=-16 (param)
   561 ;;_r	offset	0
   562 ;;_l	offset	2
   563 ;;__l	offset=-2 (param)
   564 ;;__r	offset=-4 (param)
   565 ;;_n	offset=-6 (param)
   566 ;;_nuls	offset	0
   567 ;;_l	offset	7
   568 ;;_p	offset	9
   569 ;;_cp	offset	11
   570 ;;_w	offset	13
   571 ;;_i	offset	15
   572 ;;_fp	offset=-2 (param)
   573 ;;_s	offset=-4 (param)
   574 ;;_efgtoa$5392	offset	0
   575 ;;_efgtoa$5391	offset	2
   576 ;;_efgtoa$5390	offset	4
   577 ;;_efgtoa$5386	offset	6
   578 ;;_efgtoa$5382	offset	8
   579 ;;_efgtoa$5381	offset	10
   580 ;;_u	offset	12
   581 ;;_g	offset	16
   582 ;;_l	offset	20
   583 ;;_h	offset	24
   584 ;;_ou	offset	28
   585 ;;_n	offset	32
   586 ;;_e	offset	34
   587 ;;_i	offset	36
   588 ;;_w	offset	38
   589 ;;_p	offset	40
   590 ;;_sign	offset	42
   591 ;;_d	offset	44
   592 ;;_ne	offset	46
   593 ;;_m	offset	48
   594 ;;_pp	offset	50
   595 ;;_t	offset	52
   596 ;;_mode	offset	54
   597 ;;_nmode	offset	55
   598 ;;_fp	offset=-2 (param)
   599 ;;_f	offset=-6 (param)
   600 ;;_c	offset=-7 (param)
   601 ;;_tolower$6211	offset	0
   602 ;;_c	offset=-2 (param)
   603 ;;_c	offset=-2 (param)
   604 ;;_d	offset	0
   605 ;;_s	offset	2
   606 ;;_dest	offset=-2 (param)
   607 ;;_src	offset=-4 (param)
   608 ;;_u	offset	0
   609 ;;_m	offset	4
   610 ;;_e	offset	8
   611 ;;_x	offset=-4 (param)
   612 ;;_u	offset	0
   613 ;;_e	offset	4
   614 ;;_x	offset=-4 (param)
   615 ;;_exp1	offset	0
   616 ;;_sign1	offset	1
   617 ;;_f1	offset=-4 (param)
   618 ;;_b	offset=-4 (param)
   619 ;;_a	offset=-8 (param)
   620 ;;_grs	offset	0
   621 ;;_bexp	offset	1
   622 ;;_aexp	offset	2
   623 ;;_signs	offset	3
   624 ;;_b	offset=-4 (param)
   625 ;;_a	offset=-8 (param)
   626 ;;_f1	offset=-4 (param)
   627 ;;_prod	offset	0
   628 ;;_grs	offset	4
   629 ;;_temp	offset	8
   630 ;;_bexp	offset	10
   631 ;;_aexp	offset	11
   632 ;;_sign	offset	12
   633 ;;_b	offset=-4 (param)
   634 ;;_a	offset=-8 (param)
   635 ;;_ff1	offset=-4 (param)
   636 ;;_ff2	offset=-8 (param)
   637 ;;_ff1	offset=-4 (param)
   638 ;;_ff2	offset=-8 (param)
   639 ;;_grs	offset	0
   640 ;;_rem	offset	4
   641 ;;_new_exp	offset	8
   642 ;;_aexp	offset	10
   643 ;;_bexp	offset	11
   644 ;;_sign	offset	12
   645 ;;_b	offset=-4 (param)
   646 ;;_a	offset=-8 (param)
   647 ;;_sign	offset	0
   648 ;;_counter	offset	1
   649 ;;_dividend	offset=-2 (param)
   650 ;;_divisor	offset=-4 (param)
   651 ;;_quotient	offset	0
   652 ;;_sign	offset	2
   653 ;;_counter	offset	3
   654 ;;_dividend	offset=-2 (param)
   655 ;;_divisor	offset=-4 (param)
   656 ;;_dtoa$5358	offset	0
   657 ;;_n	offset	2
   658 ;;_i	offset	10
   659 ;;_s	offset	12
   660 ;;_w	offset	14
   661 ;;_p	offset	16
   662 ;;_fp	offset=-2 (param)
   663 ;;_d	offset=-10 (param)
   664 ;;_a	offset=-2 (param)
   665 ;;_sign	offset	0
   666 ;;_counter	offset	1
   667 ;;_dividend	offset=-8 (param)
   668 ;;_divisor	offset=-16 (param)
   669 ;;_quotient	offset	0
   670 ;;_sign	offset	8
   671 ;;_counter	offset	9
   672 ;;_dividend	offset=-8 (param)
   673 ;;_divisor	offset=-16 (param)
   674 ;;_w	offset	0
   675 ;;_fp	offset=-2 (param)
   676 ;;_c	offset=-3 (param)
   677 ;;_w	offset	0
   678 ;;_i	offset	2
   679 ;;_fp	offset=-2 (param)
   680 ;;_buf	offset=-4 (param)
   681 ;;_p	offset=-6 (param)
   682 ;;_a	offset	0
   683 ;;_s	offset=-2 (param)
   684 ;;_i	offset	0
   685 ;;_c	offset	2
   686 ;;_s	offset=-2 (param)
   687 ;;_fp	offset=-4 (param)
   688 ;;_c	offset=-2 (param)
   689 ;;_fp	offset=-4 (param)
   690 ;;_c	offset=-1 (param)
   691 ;;__this	offset=-2 (param)
   692 ;;_c	offset=-3 (param)
   693 ;;_atoi$5942	offset	0
   694 ;;_atoi$5940	offset	2
   695 ;;_atoi$5941	offset	4
   696 ;;_n	offset	5
   697 ;;_neg	offset	7
   698 ;;_s	offset=-2 (param)
   699 ;;_isspace$5991	offset	0
   700 ;;_c	offset=-2 (param)
   701 ;;_c	offset=-2 (param)
   702 ;;_dsize	offset=-2 (param)
   703 ;;_u	offset	0
   704 ;;_x	offset=-4 (param)
   705 ;;_timer	offset=-1 (param)
   706 ;;_count	offset=-3 (param)
   707 ;;_channel	offset=-1 (param)
   708 ;;_i	offset	0
   709                           
   710                           	psect	idataBIGRAM
   711  017BB8                     __pidataBIGRAM:
   712                           	opt callstack 0
   713                           
   714                           ;initializer for _port_data
   715  017BB8  FF                 	db	255
   716  017BB9  00                 	db	0
   717  017BBA  FF                 	db	255
   718  017BBB  00                 	db	0
   719  017BBC  FF                 	db	255
   720  017BBD  00                 	db	0
   721  017BBE  FF                 	db	255
   722  017BBF  00                 	db	0
   723  017BC0  FF                 	db	255
   724  017BC1  00                 	db	0
   725  017BC2  FF                 	db	255
   726  017BC3  00                 	db	0
   727  017BC4  FF                 	db	255
   728  017BC5  00                 	db	0
   729  017BC6  FF                 	db	255
   730  017BC7  00                 	db	0
   731  017BC8  00                 	db	0
   732  017BC9  00                 	db	0
   733  017BCA  00                 	db	0
   734  017BCB  00                 	db	0
   735  017BCC  00                 	db	0
   736  017BCD  00                 	db	0
   737  017BCE  00                 	db	0
   738  017BCF  00                 	db	0
   739  017BD0  00                 	db	0
   740  017BD1  00                 	db	0
   741  017BD2  00                 	db	0
   742  017BD3  00                 	db	0
   743  017BD4  00                 	db	0
   744  017BD5  00                 	db	0
   745  017BD6  00                 	db	0
   746  017BD7  00                 	db	0
   747  017BD8  00                 	db	0
   748  017BD9  00                 	db	0
   749  017BDA  00                 	db	0
   750  017BDB  00                 	db	0
   751  017BDC  00                 	db	0
   752  017BDD  00                 	db	0
   753  017BDE  00                 	db	0
   754  017BDF  00                 	db	0
   755  017BE0  00                 	db	0
   756  017BE1  00                 	db	0
   757  017BE2  00                 	db	0
   758  017BE3  00                 	db	0
   759  017BE4  00                 	db	0
   760  017BE5  00                 	db	0
   761  017BE6  00                 	db	0
   762  017BE7  00                 	db	0
   763  017BE8  00                 	db	0
   764  017BE9  00                 	db	0
   765  017BEA  00                 	db	0
   766  017BEB  00                 	db	0
   767  017BEC  00                 	db	0
   768  017BED  00                 	db	0
   769  017BEE  00                 	db	0
   770  017BEF  00                 	db	0
   771  017BF0  00                 	db	0
   772  017BF1  00                 	db	0
   773  017BF2  00                 	db	0
   774  017BF3  00                 	db	0
   775  017BF4  00                 	db	0
   776  017BF5  00                 	db	0
   777  017BF6  00                 	db	0
   778  017BF7  00                 	db	0
   779  017BF8  00                 	db	0
   780  017BF9  00                 	db	0
   781  017BFA  00                 	db	0
   782  017BFB  00                 	db	0
   783  017BFC  00                 	db	0
   784  017BFD  00                 	db	0
   785  017BFE  00                 	db	0
   786  017BFF  00                 	db	0
   787  017C00  00                 	db	0
   788  017C01  00                 	db	0
   789  017C02  00                 	db	0
   790  017C03  00                 	db	0
   791  017C04  00                 	db	0
   792  017C05  00                 	db	0
   793  017C06  00                 	db	0
   794  017C07  00                 	db	0
   795  017C08  00                 	db	0
   796  017C09  00                 	db	0
   797  017C0A  00                 	db	0
   798  017C0B  00                 	db	0
   799  017C0C  00                 	db	0
   800  017C0D  00                 	db	0
   801  017C0E  00                 	db	0
   802  017C0F  00                 	db	0
   803  017C10  00                 	db	0
   804  017C11  00                 	db	0
   805  017C12  00                 	db	0
   806  017C13  00                 	db	0
   807  017C14  00                 	db	0
   808  017C15  00                 	db	0
   809  017C16  00                 	db	0
   810  017C17  00                 	db	0
   811  017C18  00                 	db	0
   812  017C19  00                 	db	0
   813  017C1A  00                 	db	0
   814  017C1B  00                 	db	0
   815  017C1C  00                 	db	0
   816  017C1D  00                 	db	0
   817  017C1E  00                 	db	0
   818  017C1F  00                 	db	0
   819  017C20  00                 	db	0
   820  017C21  00                 	db	0
   821  017C22  00                 	db	0
   822  017C23  00                 	db	0
   823  017C24  00                 	db	0
   824  017C25  00                 	db	0
   825  017C26  00                 	db	0
   826  017C27  00                 	db	0
   827  017C28  00                 	db	0
   828  017C29  00                 	db	0
   829  017C2A  00                 	db	0
   830  017C2B  00                 	db	0
   831  017C2C  00                 	db	0
   832  017C2D  00                 	db	0
   833  017C2E  00                 	db	0
   834  017C2F  00                 	db	0
   835  017C30  00                 	db	0
   836  017C31  00                 	db	0
   837  017C32  00                 	db	0
   838  017C33  00                 	db	0
   839  017C34  00                 	db	0
   840  017C35  00                 	db	0
   841  017C36  00                 	db	0
   842  017C37  00                 	db	0
   843  017C38  00                 	db	0
   844  017C39  00                 	db	0
   845  017C3A  00                 	db	0
   846  017C3B  00                 	db	0
   847  017C3C  00                 	db	0
   848  017C3D  00                 	db	0
   849  017C3E  00                 	db	0
   850  017C3F  00                 	db	0
   851  017C40  00                 	db	0
   852  017C41  00                 	db	0
   853  017C42  00                 	db	0
   854  017C43  00                 	db	0
   855  017C44  00                 	db	0
   856  017C45  00                 	db	0
   857  017C46  00                 	db	0
   858  017C47  00                 	db	0
   859  017C48  00                 	db	0
   860  017C49  00                 	db	0
   861  017C4A  00                 	db	0
   862  017C4B  00                 	db	0
   863  017C4C  00                 	db	0
   864  017C4D  00                 	db	0
   865  017C4E  00                 	db	0
   866  017C4F  00                 	db	0
   867  017C50  00                 	db	0
   868  017C51  00                 	db	0
   869  017C52  00                 	db	0
   870  017C53  00                 	db	0
   871  017C54  00                 	db	0
   872  017C55  00                 	db	0
   873  017C56  00                 	db	0
   874  017C57  00                 	db	0
   875  017C58  00                 	db	0
   876  017C59  00                 	db	0
   877  017C5A  00                 	db	0
   878  017C5B  00                 	db	0
   879  017C5C  00                 	db	0
   880  017C5D  00                 	db	0
   881  017C5E  00                 	db	0
   882  017C5F  00                 	db	0
   883  017C60  00                 	db	0
   884  017C61  00                 	db	0
   885  017C62  00                 	db	0
   886  017C63  00                 	db	0
   887  017C64  00                 	db	0
   888  017C65  00                 	db	0
   889  017C66  00                 	db	0
   890  017C67  00                 	db	0
   891  017C68  00                 	db	0
   892  017C69  00                 	db	0
   893  017C6A  00                 	db	0
   894  017C6B  00                 	db	0
   895  017C6C  00                 	db	0
   896  017C6D  00                 	db	0
   897  017C6E  00                 	db	0
   898  017C6F  00                 	db	0
   899  017C70  00                 	db	0
   900  017C71  00                 	db	0
   901  017C72  00                 	db	0
   902  017C73  00                 	db	0
   903  017C74  00                 	db	0
   904  017C75  00                 	db	0
   905  017C76  00                 	db	0
   906  017C77  00                 	db	0
   907  017C78  00                 	db	0
   908  017C79  00                 	db	0
   909  017C7A  00                 	db	0
   910  017C7B  00                 	db	0
   911  017C7C  00                 	db	0
   912  017C7D  00                 	db	0
   913  017C7E  00                 	db	0
   914  017C7F  00                 	db	0
   915  017C80  00                 	db	0
   916  017C81  00                 	db	0
   917  017C82  00                 	db	0
   918  017C83  00                 	db	0
   919  017C84  00                 	db	0
   920  017C85  00                 	db	0
   921  017C86  00                 	db	0
   922  017C87  00                 	db	0
   923  017C88  00                 	db	0
   924  017C89  00                 	db	0
   925  017C8A  00                 	db	0
   926  017C8B  00                 	db	0
   927  017C8C  00                 	db	0
   928  017C8D  00                 	db	0
   929  017C8E  00                 	db	0
   930  017C8F  00                 	db	0
   931  017C90  00                 	db	0
   932  017C91  00                 	db	0
   933  017C92  00                 	db	0
   934  017C93  00                 	db	0
   935  017C94  00                 	db	0
   936  017C95  00                 	db	0
   937  017C96  00                 	db	0
   938  017C97  00                 	db	0
   939  017C98  00                 	db	0
   940  017C99  00                 	db	0
   941  017C9A  00                 	db	0
   942  017C9B  00                 	db	0
   943  017C9C  00                 	db	0
   944  017C9D  00                 	db	0
   945  017C9E  00                 	db	0
   946  017C9F  00                 	db	0
   947  017CA0  00                 	db	0
   948  017CA1  00                 	db	0
   949  017CA2  00                 	db	0
   950  017CA3  00                 	db	0
   951  017CA4  00                 	db	0
   952  017CA5  00                 	db	0
   953  017CA6  00                 	db	0
   954  017CA7  00                 	db	0
   955  017CA8  00                 	db	0
   956  017CA9  00                 	db	0
   957  017CAA  00                 	db	0
   958  017CAB  00                 	db	0
   959  017CAC  00                 	db	0
   960  017CAD  00                 	db	0
   961  017CAE  00                 	db	0
   962  017CAF  00                 	db	0
   963  017CB0  00                 	db	0
   964  017CB1  00                 	db	0
   965  017CB2  00                 	db	0
   966  017CB3  00                 	db	0
   967  017CB4  00                 	db	0
   968  017CB5  00                 	db	0
   969  017CB6  00                 	db	0
   970  017CB7  00                 	db	0
   971  017CB8  00                 	db	0
   972  017CB9  00                 	db	0
   973  017CBA  00                 	db	0
   974  017CBB  00                 	db	0
   975  017CBC  00                 	db	0
   976  017CBD  00                 	db	0
   977  017CBE  00                 	db	0
   978  017CBF  00                 	db	0
   979  017CC0  00                 	db	0
   980  017CC1  00                 	db	0
   981  017CC2  00                 	db	0
   982  017CC3  00                 	db	0
   983  017CC4  00                 	db	0
   984  017CC5  00                 	db	0
   985  017CC6  00                 	db	0
   986  017CC7  00                 	db	0
   987  017CC8  00                 	db	0
   988  017CC9  00                 	db	0
   989  017CCA  00                 	db	0
   990  017CCB  00                 	db	0
   991  017CCC  00                 	db	0
   992  017CCD  00                 	db	0
   993  017CCE  00                 	db	0
   994  017CCF  00                 	db	0
   995  017CD0  00                 	db	0
   996  017CD1  00                 	db	0
   997  017CD2  00                 	db	0
   998  017CD3  00                 	db	0
   999  017CD4  00                 	db	0
  1000  017CD5  00                 	db	0
  1001  017CD6  00                 	db	0
  1002  017CD7  00                 	db	0
  1003  017CD8  00                 	db	0
  1004  017CD9  00                 	db	0
  1005  017CDA  00                 	db	0
  1006  017CDB  00                 	db	0
  1007  017CDC  00                 	db	0
  1008  017CDD  00                 	db	0
  1009  017CDE  00                 	db	0
  1010  017CDF  00                 	db	0
  1011  017CE0  00                 	db	0
  1012  017CE1  00                 	db	0
  1013  017CE2  00                 	db	0
  1014  017CE3  00                 	db	0
  1015  017CE4  00                 	db	0
  1016  017CE5  00                 	db	0
  1017  017CE6  00                 	db	0
  1018  017CE7  00                 	db	0
  1019  017CE8  00                 	db	0
  1020  017CE9  00                 	db	0
  1021  017CEA  00                 	db	0
  1022  017CEB  00                 	db	0
  1023  017CEC  00                 	db	0
  1024  017CED  00                 	db	0
  1025  017CEE  00                 	db	0
  1026  017CEF  00                 	db	0
  1027  017CF0  00                 	db	0
  1028  017CF1  00                 	db	0
  1029  017CF2  00                 	db	0
  1030  017CF3  00                 	db	0
  1031  017CF4  00                 	db	0
  1032  017CF5  00                 	db	0
  1033  017CF6  00                 	db	0
  1034  017CF7  00                 	db	0
  1035  017CF8  00                 	db	0
  1036  017CF9  00                 	db	0
  1037  017CFA  00                 	db	0
  1038  017CFB  00                 	db	0
  1039  017CFC  00                 	db	0
  1040  017CFD  00                 	db	0
  1041  017CFE  00                 	db	0
  1042  017CFF  00                 	db	0
  1043  017D00  00                 	db	0
  1044  017D01  00                 	db	0
  1045  017D02  00                 	db	0
  1046  017D03  00                 	db	0
  1047  017D04  00                 	db	0
  1048  017D05  00                 	db	0
  1049  017D06  00                 	db	0
  1050  017D07  00                 	db	0
  1051  017D08  00                 	db	0
  1052  017D09  00                 	db	0
  1053  017D0A  00                 	db	0
  1054  017D0B  00                 	db	0
  1055  017D0C  00                 	db	0
  1056  017D0D  00                 	db	0
  1057  017D0E  00                 	db	0
  1058  017D0F  00                 	db	0
  1059  017D10  00                 	db	0
  1060  017D11  00                 	db	0
  1061  017D12  00                 	db	0
  1062  017D13  00                 	db	0
  1063  017D14  00                 	db	0
  1064  017D15  00                 	db	0
  1065  017D16  00                 	db	0
  1066  017D17  00                 	db	0
  1067  017D18  00                 	db	0
  1068  017D19  00                 	db	0
  1069  017D1A  00                 	db	0
  1070  017D1B  00                 	db	0
  1071  017D1C  00                 	db	0
  1072  017D1D  00                 	db	0
  1073  017D1E  00                 	db	0
  1074  017D1F  00                 	db	0
  1075  017D20  00                 	db	0
  1076  017D21  00                 	db	0
  1077  017D22  00                 	db	0
  1078  017D23  00                 	db	0
  1079  017D24  00                 	db	0
  1080  017D25  00                 	db	0
  1081  017D26  00                 	db	0
  1082  017D27  00                 	db	0
  1083  017D28  00                 	db	0
  1084  017D29  00                 	db	0
  1085  017D2A  00                 	db	0
  1086  017D2B  00                 	db	0
  1087  017D2C  00                 	db	0
  1088  017D2D  00                 	db	0
  1089  017D2E  00                 	db	0
  1090  017D2F  00                 	db	0
  1091  017D30  00                 	db	0
  1092  017D31  00                 	db	0
  1093  017D32  00                 	db	0
  1094  017D33  00                 	db	0
  1095  017D34  00                 	db	0
  1096  017D35  00                 	db	0
  1097  017D36  00                 	db	0
  1098  017D37  00                 	db	0
  1099  017D38  00                 	db	0
  1100  017D39  00                 	db	0
  1101  017D3A  00                 	db	0
  1102  017D3B  00                 	db	0
  1103  017D3C  00                 	db	0
  1104  017D3D  00                 	db	0
  1105  017D3E  00                 	db	0
  1106  017D3F  00                 	db	0
  1107  017D40  00                 	db	0
  1108  017D41  00                 	db	0
  1109  017D42  00                 	db	0
  1110  017D43  00                 	db	0
  1111  017D44  00                 	db	0
  1112  017D45  00                 	db	0
  1113  017D46  00                 	db	0
  1114  017D47  00                 	db	0
  1115  017D48  00                 	db	0
  1116  017D49  00                 	db	0
  1117  017D4A  00                 	db	0
  1118  017D4B  00                 	db	0
  1119  017D4C  00                 	db	0
  1120  017D4D  00                 	db	0
  1121  017D4E  00                 	db	0
  1122  017D4F  00                 	db	0
  1123  017D50  00                 	db	0
  1124  017D51  00                 	db	0
  1125  017D52  00                 	db	0
  1126  017D53  00                 	db	0
  1127  017D54  00                 	db	0
  1128  017D55  00                 	db	0
  1129  017D56  00                 	db	0
  1130  017D57  00                 	db	0
  1131  017D58  00                 	db	0
  1132  017D59  00                 	db	0
  1133  017D5A  00                 	db	0
  1134  017D5B  00                 	db	0
  1135  017D5C  00                 	db	0
  1136  017D5D  00                 	db	0
  1137  017D5E  00                 	db	0
  1138  017D5F  00                 	db	0
  1139  017D60  00                 	db	0
  1140  017D61  00                 	db	0
  1141  017D62  00                 	db	0
  1142  017D63  00                 	db	0
  1143  017D64  00                 	db	0
  1144  017D65  00                 	db	0
  1145  017D66  00                 	db	0
  1146  017D67  00                 	db	0
  1147  017D68  00                 	db	0
  1148  017D69  00                 	db	0
  1149  017D6A  00                 	db	0
  1150  017D6B  00                 	db	0
  1151  017D6C  00                 	db	0
  1152  017D6D  00                 	db	0
  1153  017D6E  00                 	db	0
  1154  017D6F  00                 	db	0
  1155  017D70  00                 	db	0
  1156  017D71  00                 	db	0
  1157  017D72  00                 	db	0
  1158  017D73  00                 	db	0
  1159  017D74  00                 	db	0
  1160  017D75  00                 	db	0
  1161  017D76  00                 	db	0
  1162  017D77  00                 	db	0
  1163  017D78  00                 	db	0
  1164  017D79  00                 	db	0
  1165  017D7A  00                 	db	0
  1166  017D7B  00                 	db	0
  1167  017D7C  00                 	db	0
  1168  017D7D  00                 	db	0
  1169  017D7E  00                 	db	0
  1170  017D7F  00                 	db	0
  1171  017D80  00                 	db	0
  1172  017D81  00                 	db	0
  1173  017D82  00                 	db	0
  1174  017D83  00                 	db	0
  1175  017D84  00                 	db	0
  1176  017D85  00                 	db	0
  1177  017D86  00                 	db	0
  1178  017D87  00                 	db	0
  1179  017D88  00                 	db	0
  1180  017D89  00                 	db	0
  1181  017D8A  00                 	db	0
  1182  017D8B  00                 	db	0
  1183  017D8C  00                 	db	0
  1184  017D8D  00                 	db	0
  1185  017D8E  00                 	db	0
  1186  017D8F  00                 	db	0
  1187  017D90  00                 	db	0
  1188  017D91  00                 	db	0
  1189  017D92  00                 	db	0
  1190  017D93  00                 	db	0
  1191  017D94  00                 	db	0
  1192  017D95  00                 	db	0
  1193  017D96  00                 	db	0
  1194  017D97  00                 	db	0
  1195  017D98  00                 	db	0
  1196  017D99  00                 	db	0
  1197  017D9A  00                 	db	0
  1198  017D9B  00                 	db	0
  1199  017D9C  00                 	db	0
  1200  017D9D  00                 	db	0
  1201  017D9E  00                 	db	0
  1202  017D9F  00                 	db	0
  1203  017DA0  00                 	db	0
  1204  017DA1  00                 	db	0
  1205  017DA2  00                 	db	0
  1206  017DA3  00                 	db	0
  1207  017DA4  00                 	db	0
  1208  017DA5  00                 	db	0
  1209  017DA6  00                 	db	0
  1210  017DA7  00                 	db	0
  1211  017DA8  00                 	db	0
  1212  017DA9  00                 	db	0
  1213  017DAA  00                 	db	0
  1214  017DAB  00                 	db	0
  1215  017DAC  00                 	db	0
  1216  017DAD  00                 	db	0
  1217  017DAE  00                 	db	0
  1218  017DAF  00                 	db	0
  1219  017DB0  00                 	db	0
  1220  017DB1  00                 	db	0
  1221  017DB2  00                 	db	0
  1222  017DB3  00                 	db	0
  1223  017DB4  00                 	db	0
  1224  017DB5  00                 	db	0
  1225  017DB6  00                 	db	0
  1226  017DB7  00                 	db	0
  1227                           
  1228                           	psect	idataBANK0
  1229  01ADD0                     __pidataBANK0:
  1230                           	opt callstack 0
  1231                           
  1232                           ;initializer for _R
  1233  01ADD0  0000               	dw	0
  1234  01ADD2  0000               	dw	0
  1235  01ADD4  0000               	dw	0
  1236  01ADD6  0000               	dw	0
  1237  01ADD8  0000               	dw	0
  1238  01ADDA  0000               	dw	0
  1239  01ADDC  0000               	dw	0
  1240  01ADDE  0000               	dw	0
  1241  01ADE0  0000               	dw	0
  1242  01ADE2  0000               	dw	0
  1243  01ADE4  0000               	dw	0
  1244  01ADE6  0000               	dw	0
  1245  01ADE8  0000               	dw	0
  1246  01ADEA  0000               	dw	0
  1247  01ADEC  0000               	dw	0
  1248  01ADEE  0000               	dw	0
  1249  01ADF0  0F67               	dw	3943
  1250  01ADF2  0F8F               	dw	3983
  1251  01ADF4  00                 	db	0
  1252  01ADF5  0000               	dw	0
  1253  01ADF7  00                 	db	0
  1254                           
  1255                           ;initializer for stoa@F1166
  1256  01ADF8  28                 	db	40
  1257  01ADF9  6E                 	db	110
  1258  01ADFA  75                 	db	117
  1259  01ADFB  6C                 	db	108
  1260  01ADFC  6C                 	db	108
  1261  01ADFD  29                 	db	41
  1262  01ADFE  00                 	db	0
  1263                           
  1264                           ;initializer for _H
  1265  01ADFF  00                 	db	0
  1266  01AE00  00                 	db	0
  1267  01AE01  01                 	db	1
  1268  01AE02  00                 	db	0
  1269  01AE03  01                 	db	1
  1270  01AE04  00                 	db	0
  1271  01AE05  00                 	db	0
  1272                           
  1273                           	psect	idataBANK1
  1274  01961C                     __pidataBANK1:
  1275                           	opt callstack 0
  1276                           
  1277                           ;initializer for _C
  1278  01961C  0000               	dw	0
  1279  01961E  0000               	dw	0
  1280  019620  0000               	dw	0
  1281  019622  0000               	dw	0
  1282  019624  0000               	dw	0
  1283  019626  0000               	dw	0
  1284  019628  0000               	dw	0
  1285  01962A  0000               	dw	0
  1286  01962C  0000               	dw	0
  1287  01962E  0000               	dw	0
  1288  019630  0000               	dw	0
  1289  019632  0000               	dw	0
  1290  019634  0000               	dw	0
  1291  019636  0000               	dw	0
  1292  019638  0000               	dw	0
  1293  01963A  0000               	dw	0
  1294  01963C  0000               	dw	0
  1295  01963E  0000               	dw	0
  1296  019640  0000               	dw	0
  1297  019642  0000               	dw	0
  1298  019644  0000               	dw	0
  1299  019646  0000               	dw	0
  1300  019648  0000               	dw	0
  1301  01964A  0000               	dw	0
  1302  01964C  0000               	dw	0
  1303  01964E  0000               	dw	0
  1304  019650  0000               	dw	0
  1305  019652  0000               	dw	0
  1306  019654  0000               	dw	0
  1307  019656  0000               	dw	0
  1308  019658  0000               	dw	0
  1309  01965A  0000               	dw	0
  1310  01965C  0000               	dw	0
  1311  01965E  0000               	dw	0
  1312  019660  0000               	dw	0
  1313  019662  0000               	dw	0
  1314  019664  0000               	dw	0
  1315  019666  0000               	dw	0
  1316  019668  0000               	dw	0
  1317  01966A  0000               	dw	0
  1318  01966C  0000               	dw	0
  1319  01966E  0000               	dw	0
  1320  019670  0000               	dw	0
  1321  019672  0000               	dw	0
  1322  019674  0000               	dw	0
  1323  019676  0000               	dw	0
  1324  019678  0000               	dw	0
  1325  01967A  0000               	dw	0
  1326  01967C  0000               	dw	0
  1327  01967E  0000               	dw	0
  1328  019680  0000               	dw	0
  1329  019682  0000               	dw	0
  1330  019684  0000               	dw	0
  1331  019686  0000               	dw	0
  1332  019688  0000               	dw	0
  1333  01968A  0000               	dw	0
  1334  01968C  0000               	dw	0
  1335  01968E  0000               	dw	0
  1336  019690  0000               	dw	0
  1337  019692  0000               	dw	0
  1338  019694  0000               	dw	0
  1339  019696  0000               	dw	0
  1340  019698  0000               	dw	0
  1341  01969A  0000               	dw	0
  1342  01969C  0000               	dw	0
  1343  01969E  0000               	dw	0
  1344  0196A0  0000               	dw	0
  1345  0196A2  0000               	dw	0
  1346  0196A4  0000               	dw	0
  1347  0196A6  42FA               	dw	17146
  1348  0196A8  00                 	db	0
  1349  0196A9  00                 	db	0
  1350  0196AA  00                 	db	0
  1351  0196AB  00                 	db	0
  1352  0196AC  00                 	db	0
  1353  0196AD  00                 	db	0
  1354  0196AE  00                 	db	0
  1355  0196AF  00                 	db	0
  1356  0196B0  00                 	db	0
  1357  0196B1  00                 	db	0
  1358  0196B2  00                 	db	0
  1359  0196B3  00                 	db	0
  1360  0196B4  00                 	db	0
  1361  0196B5  00                 	db	0
  1362  0196B6  00                 	db	0
  1363  0196B7  00                 	db	0
  1364  0196B8  00                 	db	0
  1365  0196B9  00                 	db	0
  1366  0196BA  00                 	db	0
  1367  0196BB  00                 	db	0
  1368  0196BC  00                 	db	0
  1369  0196BD  00                 	db	0
  1370  0196BE  00                 	db	0
  1371  0196BF  00                 	db	0
  1372  0196C0  00                 	db	0
  1373  0196C1  00                 	db	0
  1374  0196C2  00                 	db	0
  1375  0196C3  00                 	db	0
  1376  0196C4  00                 	db	0
  1377  0196C5  00                 	db	0
  1378  0196C6  00                 	db	0
  1379  0196C7  00                 	db	0
  1380  0196C8  00                 	db	0
  1381  0196C9  00                 	db	0
  1382  0196CA  00                 	db	0
  1383  0196CB  00                 	db	0
  1384  0196CC  00                 	db	0
  1385  0196CD  00                 	db	0
  1386  0196CE  00                 	db	0
  1387  0196CF  00                 	db	0
  1388  0196D0  00                 	db	0
  1389  0196D1  00                 	db	0
  1390  0196D2  00                 	db	0
  1391  0196D3  00                 	db	0
  1392  0196D4  00                 	db	0
  1393  0196D5  00                 	db	0
  1394  0196D6  00                 	db	0
  1395  0196D7  00                 	db	0
  1396  0196D8  00                 	db	0
  1397  0196D9  00                 	db	0
  1398  0196DA  00                 	db	0
  1399  0196DB  00                 	db	0
  1400  0196DC  00                 	db	0
  1401  0196DD  00                 	db	0
  1402  0196DE  00                 	db	0
  1403  0196DF  00                 	db	0
  1404  0196E0  00                 	db	0
  1405  0196E1  00                 	db	0
  1406  0196E2  00                 	db	0
  1407  0196E3  00                 	db	0
  1408  0196E4  00                 	db	0
  1409  0196E5  00                 	db	0
  1410  0196E6  00                 	db	0
  1411  0196E7  00                 	db	0
  1412  0196E8  00                 	db	0
  1413  0196E9  00                 	db	0
  1414  0196EA  00                 	db	0
  1415  0196EB  00                 	db	0
  1416  0196EC  00                 	db	0
  1417  0196ED  00                 	db	0
  1418  0196EE  00                 	db	0
  1419  0196EF  00                 	db	0
  1420  0196F0  00                 	db	0
  1421  0196F1  00                 	db	0
  1422  0196F2  00                 	db	0
  1423  0196F3  00                 	db	0
  1424  0196F4  00                 	db	0
  1425  0196F5  00                 	db	0
  1426  0196F6  00                 	db	0
  1427  0196F7  00                 	db	0
  1428  0196F8  00                 	db	0
  1429  0196F9  00                 	db	0
  1430  0196FA  00                 	db	0
  1431  0196FB  00                 	db	0
  1432  0196FC  00                 	db	0
  1433  0196FD  00                 	db	0
  1434  0196FE  00                 	db	0
  1435  0196FF  00                 	db	0
  1436  019700  00                 	db	0
  1437  019701  00                 	db	0
  1438  019702  00                 	db	0
  1439  019703  00                 	db	0
  1440  019704  00                 	db	0
  1441  019705  00                 	db	0
  1442  019706  00                 	db	0
  1443  019707  00                 	db	0
  1444  019708  00                 	db	0
  1445  019709  00                 	db	0
  1446  01970A  00                 	db	0
  1447  01970B  00                 	db	0
  1448  01970C  00                 	db	0
  1449  01970D  00                 	db	0
  1450  01970E  00                 	db	0
  1451  01970F  00                 	db	0
  1452  019710  00                 	db	0
  1453  019711  00                 	db	0
  1454  019712  00                 	db	0
  1455                           
  1456                           	psect	idataBANK2
  1457  019A7C                     __pidataBANK2:
  1458                           	opt callstack 0
  1459                           
  1460                           ;initializer for _V
  1461  019A7C  00                 	db	0
  1462  019A7D  00                 	db	0
  1463  019A7E  00                 	db	0
  1464  019A7F  00                 	db	0
  1465  019A80  00                 	db	0
  1466  019A81  00                 	db	0
  1467  019A82  00                 	db	0
  1468  019A83  00                 	db	0
  1469  019A84  00                 	db	0
  1470  019A85  00                 	db	0
  1471  019A86  00                 	db	0
  1472  019A87  00                 	db	0
  1473  019A88  00                 	db	0
  1474  019A89  00                 	db	0
  1475  019A8A  00                 	db	0
  1476  019A8B  00                 	db	0
  1477  019A8C  00                 	db	0
  1478  019A8D  00                 	db	0
  1479  019A8E  00                 	db	0
  1480  019A8F  00                 	db	0
  1481  019A90  00                 	db	0
  1482  019A91  00                 	db	0
  1483  019A92  00                 	db	0
  1484  019A93  00                 	db	0
  1485  019A94  00                 	db	0
  1486  019A95  00                 	db	0
  1487  019A96  00                 	db	0
  1488  019A97  00                 	db	0
  1489  019A98  00                 	db	0
  1490  019A99  00                 	db	0
  1491  019A9A  00                 	db	0
  1492  019A9B  00                 	db	0
  1493  019A9C  00                 	db	0
  1494  019A9D  00                 	db	0
  1495  019A9E  00                 	db	0
  1496  019A9F  00                 	db	0
  1497  019AA0  00                 	db	0
  1498  019AA1  00                 	db	0
  1499  019AA2  00                 	db	0
  1500  019AA3  00                 	db	0
  1501  019AA4  00                 	db	0
  1502  019AA5  00                 	db	0
  1503  019AA6  00                 	db	0
  1504  019AA7  00                 	db	0
  1505  019AA8  00                 	db	0
  1506  019AA9  00                 	db	0
  1507  019AAA  00                 	db	0
  1508  019AAB  00                 	db	0
  1509  019AAC  00                 	db	0
  1510  019AAD  00                 	db	0
  1511  019AAE  00                 	db	0
  1512  019AAF  00                 	db	0
  1513  019AB0  00                 	db	0
  1514  019AB1  00                 	db	0
  1515  019AB2  00                 	db	0
  1516  019AB3  00                 	db	0
  1517  019AB4  00                 	db	0
  1518  019AB5  00                 	db	0
  1519  019AB6  00                 	db	0
  1520  019AB7  00                 	db	0
  1521  019AB8  00                 	db	0
  1522  019AB9  00                 	db	0
  1523  019ABA  00                 	db	0
  1524  019ABB  00                 	db	0
  1525  019ABC  00                 	db	0
  1526  019ABD  00                 	db	0
  1527  019ABE  00                 	db	0
  1528  019ABF  00                 	db	0
  1529  019AC0  00                 	db	0
  1530  019AC1  00                 	db	0
  1531  019AC2  00                 	db	0
  1532  019AC3  00                 	db	0
  1533  019AC4  00                 	db	0
  1534  019AC5  00                 	db	0
  1535  019AC6  00                 	db	0
  1536  019AC7  00                 	db	0
  1537  019AC8  00                 	db	0
  1538  019AC9  00                 	db	0
  1539  019ACA  00                 	db	0
  1540  019ACB  00                 	db	0
  1541  019ACC  00                 	db	0
  1542  019ACD  00                 	db	0
  1543  019ACE  00                 	db	0
  1544  019ACF  00                 	db	0
  1545  019AD0  00                 	db	0
  1546  019AD1  00                 	db	0
  1547  019AD2  00                 	db	0
  1548  019AD3  00                 	db	0
  1549  019AD4  00                 	db	0
  1550  019AD5  00                 	db	0
  1551  019AD6  00                 	db	0
  1552  019AD7  00                 	db	0
  1553  019AD8  00                 	db	0
  1554  019AD9  00                 	db	0
  1555  019ADA  00                 	db	0
  1556  019ADB  00                 	db	0
  1557  019ADC  00                 	db	0
  1558  019ADD  00                 	db	0
  1559  019ADE  00                 	db	0
  1560  019ADF  00                 	db	0
  1561  019AE0  00                 	db	0
  1562  019AE1  00                 	db	0
  1563  019AE2  00                 	db	0
  1564  019AE3  00                 	db	0
  1565  019AE4  00                 	db	0
  1566  019AE5  00                 	db	0
  1567  019AE6  00                 	db	0
  1568  019AE7  00                 	db	0
  1569  019AE8  00                 	db	0
  1570  019AE9  00                 	db	0
  1571  019AEA  00                 	db	0
  1572  019AEB  00                 	db	0
  1573  019AEC  00                 	db	0
  1574  019AED  00                 	db	0
  1575  019AEE  00                 	db	0
  1576  019AEF  00                 	db	0
  1577  019AF0  00                 	db	0
  1578  019AF1  00                 	db	0
  1579  019AF2  00                 	db	0
  1580  019AF3  00                 	db	0
  1581  019AF4  00                 	db	0
  1582  019AF5  00                 	db	0
  1583  019AF6  00                 	db	0
  1584  019AF7  00                 	db	0
  1585  019AF8  00                 	db	0
  1586  019AF9  00                 	db	0
  1587  019AFA  00                 	db	0
  1588  019AFB  00                 	db	0
  1589  019AFC  00                 	db	0
  1590  019AFD  0000               	dw	0
  1591  019AFF  0000               	dw	0
  1592  019B01  0000               	dw	0
  1593  019B03  0000               	dw	0
  1594  019B05  00                 	db	0
  1595  019B06  00                 	db	0
  1596  019B07  00                 	db	0
  1597  019B08  00                 	db	0
  1598  019B09  00                 	db	0
  1599  019B0A  00                 	db	0
  1600  019B0B  0000               	dw	0
  1601  019B0D  0000               	dw	0
  1602  019B0F  0000               	dw	0
  1603  019B11  0000               	dw	0
  1604  019B13  0000               	dw	0
  1605  019B15  0000               	dw	0
  1606  019B17  00                 	db	0
  1607  019B18  00                 	db	0
  1608  019B19  00                 	db	0
  1609  019B1A  00                 	db	0
  1610  019B1B  00                 	db	0
  1611  019B1C  00                 	db	0
  1612  019B1D  00                 	db	0
  1613  019B1E  00                 	db	0
  1614  019B1F  00                 	db	0
  1615  019B20  00                 	db	0
  1616  019B21  00                 	db	0
  1617  019B22  0000               	dw	0
  1618  019B24  0000               	dw	0
  1619  019B26  2D                 	db	45
  1620  019B27  00                 	db	0
  1621  019B28  00                 	db	0
  1622  019B29  0000               	dw	0
  1623  019B2B  0000               	dw	0
  1624  019B2D  0000               	dw	0
  1625  019B2F  0000               	dw	0
  1626  019B31  0000               	dw	0
  1627  019B33  0000               	dw	0
  1628  019B35  0000               	dw	0
  1629  019B37  0000               	dw	0
  1630                           
  1631                           	psect	mediumconst
  1632  00FA7A                     __pmediumconst:
  1633                           	opt callstack 0
  1634  00FA7A  00                 	db	0
  1635  00FA7B                     _BVSOC_TABLE:
  1636                           	opt callstack 0
  1637  00FA7B  59D8               	dw	23000
  1638  00FA7D  0000               	dw	0
  1639  00FA7F  0005               	dw	5
  1640  00FA81  0000               	dw	0
  1641  00FA83  5B68               	dw	23400
  1642  00FA85  0000               	dw	0
  1643  00FA87  000A               	dw	10
  1644  00FA89  0000               	dw	0
  1645  00FA8B  5C30               	dw	23600
  1646  00FA8D  0000               	dw	0
  1647  00FA8F  0014               	dw	20
  1648  00FA91  0000               	dw	0
  1649  00FA93  5E38               	dw	24120
  1650  00FA95  0000               	dw	0
  1651  00FA97  0019               	dw	25
  1652  00FA99  0000               	dw	0
  1653  00FA9B  5E88               	dw	24200
  1654  00FA9D  0000               	dw	0
  1655  00FA9F  001E               	dw	30
  1656  00FAA1  0000               	dw	0
  1657  00FAA3  5F78               	dw	24440
  1658  00FAA5  0000               	dw	0
  1659  00FAA7  0028               	dw	40
  1660  00FAA9  0000               	dw	0
  1661  00FAAB  5FDC               	dw	24540
  1662  00FAAD  0000               	dw	0
  1663  00FAAF  002D               	dw	45
  1664  00FAB1  0000               	dw	0
  1665  00FAB3  6018               	dw	24600
  1666  00FAB5  0000               	dw	0
  1667  00FAB7  0032               	dw	50
  1668  00FAB9  0000               	dw	0
  1669  00FABB  6046               	dw	24646
  1670  00FABD  0000               	dw	0
  1671  00FABF  0035               	dw	53
  1672  00FAC1  0000               	dw	0
  1673  00FAC3  607C               	dw	24700
  1674  00FAC5  0000               	dw	0
  1675  00FAC7  0037               	dw	55
  1676  00FAC9  0000               	dw	0
  1677  00FACB  60AE               	dw	24750
  1678  00FACD  0000               	dw	0
  1679  00FACF  0039               	dw	57
  1680  00FAD1  0000               	dw	0
  1681  00FAD3  60E0               	dw	24800
  1682  00FAD5  0000               	dw	0
  1683  00FAD7  003C               	dw	60
  1684  00FAD9  0000               	dw	0
  1685  00FADB  6112               	dw	24850
  1686  00FADD  0000               	dw	0
  1687  00FADF  003F               	dw	63
  1688  00FAE1  0000               	dw	0
  1689  00FAE3  615D               	dw	24925
  1690  00FAE5  0000               	dw	0
  1691  00FAE7  0043               	dw	67
  1692  00FAE9  0000               	dw	0
  1693  00FAEB  61A8               	dw	25000
  1694  00FAED  0000               	dw	0
  1695  00FAEF  0046               	dw	70
  1696  00FAF1  0000               	dw	0
  1697  00FAF3  61BC               	dw	25020
  1698  00FAF5  0000               	dw	0
  1699  00FAF7  0048               	dw	72
  1700  00FAF9  0000               	dw	0
  1701  00FAFB  61D0               	dw	25040
  1702  00FAFD  0000               	dw	0
  1703  00FAFF  004B               	dw	75
  1704  00FB01  0000               	dw	0
  1705  00FB03  61DA               	dw	25050
  1706  00FB05  0000               	dw	0
  1707  00FB07  0050               	dw	80
  1708  00FB09  0000               	dw	0
  1709  00FB0B  61E4               	dw	25060
  1710  00FB0D  0000               	dw	0
  1711  00FB0F  0055               	dw	85
  1712  00FB11  0000               	dw	0
  1713  00FB13  61F8               	dw	25080
  1714  00FB15  0000               	dw	0
  1715  00FB17  005A               	dw	90
  1716  00FB19  0000               	dw	0
  1717  00FB1B  6208               	dw	25096
  1718  00FB1D  0000               	dw	0
  1719  00FB1F  005C               	dw	92
  1720  00FB21  0000               	dw	0
  1721  00FB23  6222               	dw	25122
  1722  00FB25  0000               	dw	0
  1723  00FB27  005D               	dw	93
  1724  00FB29  0000               	dw	0
  1725  00FB2B  6234               	dw	25140
  1726  00FB2D  0000               	dw	0
  1727  00FB2F  005F               	dw	95
  1728  00FB31  0000               	dw	0
  1729  00FB33  6248               	dw	25160
  1730  00FB35  0000               	dw	0
  1731  00FB37  0061               	dw	97
  1732  00FB39  0000               	dw	0
  1733  00FB3B  625C               	dw	25180
  1734  00FB3D  0000               	dw	0
  1735  00FB3F  0064               	dw	100
  1736  00FB41  0000               	dw	0
  1737  00FB43  6784               	dw	26500
  1738  00FB45  0000               	dw	0
  1739  00FB47  0062               	dw	98
  1740  00FB49  0000               	dw	0
  1741  00FB4B                     __end_of_BVSOC_TABLE:
  1742                           	opt callstack 0
  1743  00FB4B                     _T:
  1744                           	opt callstack 0
  1745  00FB4B  63                 	db	99
  1746  00FB4C  6F                 	db	111
  1747  00FB4D  6D                 	db	109
  1748  00FB4E  6D                 	db	109
  1749  00FB4F  61                 	db	97
  1750  00FB50  6E                 	db	110
  1751  00FB51  64                 	db	100
  1752  00FB52  73                 	db	115
  1753  00FB53  20                 	db	32
  1754  00FB54  31                 	db	49
  1755  00FB55  00                 	db	0
  1756  00FB56  00                 	db	0
  1757  00FB57  00                 	db	0
  1758  00FB58  00                 	db	0
  1759  00FB59  00                 	db	0
  1760  00FB5A  00                 	db	0
  1761  00FB5B  00                 	db	0
  1762  00FB5C  00                 	db	0
  1763  00FB5D  64                 	db	100
  1764  00FB5E  69                 	db	105
  1765  00FB5F  73                 	db	115
  1766  00FB60  70                 	db	112
  1767  00FB61  6C                 	db	108
  1768  00FB62  61                 	db	97
  1769  00FB63  79                 	db	121
  1770  00FB64  73                 	db	115
  1771  00FB65  20                 	db	32
  1772  00FB66  31                 	db	49
  1773  00FB67  00                 	db	0
  1774  00FB68  00                 	db	0
  1775  00FB69  00                 	db	0
  1776  00FB6A  00                 	db	0
  1777  00FB6B  00                 	db	0
  1778  00FB6C  00                 	db	0
  1779  00FB6D  00                 	db	0
  1780  00FB6E  00                 	db	0
  1781  00FB6F  63                 	db	99
  1782  00FB70  6F                 	db	111
  1783  00FB71  6D                 	db	109
  1784  00FB72  6D                 	db	109
  1785  00FB73  61                 	db	97
  1786  00FB74  6E                 	db	110
  1787  00FB75  64                 	db	100
  1788  00FB76  73                 	db	115
  1789  00FB77  20                 	db	32
  1790  00FB78  32                 	db	50
  1791  00FB79  00                 	db	0
  1792  00FB7A  00                 	db	0
  1793  00FB7B  00                 	db	0
  1794  00FB7C  00                 	db	0
  1795  00FB7D  00                 	db	0
  1796  00FB7E  00                 	db	0
  1797  00FB7F  00                 	db	0
  1798  00FB80  00                 	db	0
  1799  00FB81  64                 	db	100
  1800  00FB82  69                 	db	105
  1801  00FB83  73                 	db	115
  1802  00FB84  70                 	db	112
  1803  00FB85  6C                 	db	108
  1804  00FB86  61                 	db	97
  1805  00FB87  79                 	db	121
  1806  00FB88  73                 	db	115
  1807  00FB89  20                 	db	32
  1808  00FB8A  32                 	db	50
  1809  00FB8B  00                 	db	0
  1810  00FB8C  00                 	db	0
  1811  00FB8D  00                 	db	0
  1812  00FB8E  00                 	db	0
  1813  00FB8F  00                 	db	0
  1814  00FB90  00                 	db	0
  1815  00FB91  00                 	db	0
  1816  00FB92  00                 	db	0
  1817  00FB93  63                 	db	99
  1818  00FB94  6F                 	db	111
  1819  00FB95  6D                 	db	109
  1820  00FB96  6D                 	db	109
  1821  00FB97  61                 	db	97
  1822  00FB98  6E                 	db	110
  1823  00FB99  64                 	db	100
  1824  00FB9A  73                 	db	115
  1825  00FB9B  20                 	db	32
  1826  00FB9C  33                 	db	51
  1827  00FB9D  00                 	db	0
  1828  00FB9E  00                 	db	0
  1829  00FB9F  00                 	db	0
  1830  00FBA0  00                 	db	0
  1831  00FBA1  00                 	db	0
  1832  00FBA2  00                 	db	0
  1833  00FBA3  00                 	db	0
  1834  00FBA4  00                 	db	0
  1835  00FBA5  64                 	db	100
  1836  00FBA6  69                 	db	105
  1837  00FBA7  73                 	db	115
  1838  00FBA8  70                 	db	112
  1839  00FBA9  6C                 	db	108
  1840  00FBAA  61                 	db	97
  1841  00FBAB  79                 	db	121
  1842  00FBAC  73                 	db	115
  1843  00FBAD  20                 	db	32
  1844  00FBAE  33                 	db	51
  1845  00FBAF  00                 	db	0
  1846  00FBB0  00                 	db	0
  1847  00FBB1  00                 	db	0
  1848  00FBB2  00                 	db	0
  1849  00FBB3  00                 	db	0
  1850  00FBB4  00                 	db	0
  1851  00FBB5  00                 	db	0
  1852  00FBB6  00                 	db	0
  1853  00FBB7  63                 	db	99
  1854  00FBB8  6F                 	db	111
  1855  00FBB9  6D                 	db	109
  1856  00FBBA  6D                 	db	109
  1857  00FBBB  61                 	db	97
  1858  00FBBC  6E                 	db	110
  1859  00FBBD  64                 	db	100
  1860  00FBBE  73                 	db	115
  1861  00FBBF  20                 	db	32
  1862  00FBC0  34                 	db	52
  1863  00FBC1  00                 	db	0
  1864  00FBC2  00                 	db	0
  1865  00FBC3  00                 	db	0
  1866  00FBC4  00                 	db	0
  1867  00FBC5  00                 	db	0
  1868  00FBC6  00                 	db	0
  1869  00FBC7  00                 	db	0
  1870  00FBC8  00                 	db	0
  1871  00FBC9  64                 	db	100
  1872  00FBCA  69                 	db	105
  1873  00FBCB  73                 	db	115
  1874  00FBCC  70                 	db	112
  1875  00FBCD  6C                 	db	108
  1876  00FBCE  61                 	db	97
  1877  00FBCF  79                 	db	121
  1878  00FBD0  73                 	db	115
  1879  00FBD1  20                 	db	32
  1880  00FBD2  34                 	db	52
  1881  00FBD3  00                 	db	0
  1882  00FBD4  00                 	db	0
  1883  00FBD5  00                 	db	0
  1884  00FBD6  00                 	db	0
  1885  00FBD7  00                 	db	0
  1886  00FBD8  00                 	db	0
  1887  00FBD9  00                 	db	0
  1888  00FBDA  00                 	db	0
  1889  00FBDB                     __end_of_T:
  1890                           	opt callstack 0
  1891  00FBDB                     _spin:
  1892                           	opt callstack 0
  1893  00FBDB  7C                 	db	124
  1894  00FBDC  7C                 	db	124
  1895  00FBDD  2F                 	db	47
  1896  00FBDE  2F                 	db	47
  1897  00FBDF  2D                 	db	45
  1898  00FBE0  2D                 	db	45
  1899  00FBE1  00                 	db	0
  1900  00FBE2  00                 	db	0
  1901  00FBE3  00                 	db	0
  1902  00FBE4  00                 	db	0
  1903  00FBE5  00                 	db	0
  1904  00FBE6  00                 	db	0
  1905  00FBE7  00                 	db	0
  1906  00FBE8  00                 	db	0
  1907  00FBE9  00                 	db	0
  1908  00FBEA  00                 	db	0
  1909  00FBEB  00                 	db	0
  1910  00FBEC  00                 	db	0
  1911  00FBED  00                 	db	0
  1912  00FBEE  00                 	db	0
  1913  00FBEF  7C                 	db	124
  1914  00FBF0  7C                 	db	124
  1915  00FBF1  2F                 	db	47
  1916  00FBF2  2F                 	db	47
  1917  00FBF3  2D                 	db	45
  1918  00FBF4  2D                 	db	45
  1919  00FBF5  5C                 	db	92
  1920  00FBF6  5C                 	db	92
  1921  00FBF7  00                 	db	0
  1922  00FBF8  00                 	db	0
  1923  00FBF9  00                 	db	0
  1924  00FBFA  00                 	db	0
  1925  00FBFB  00                 	db	0
  1926  00FBFC  00                 	db	0
  1927  00FBFD  00                 	db	0
  1928  00FBFE  00                 	db	0
  1929  00FBFF  00                 	db	0
  1930  00FC00  00                 	db	0
  1931  00FC01  00                 	db	0
  1932  00FC02  00                 	db	0
  1933  00FC03  4F                 	db	79
  1934  00FC04  4F                 	db	79
  1935  00FC05  4F                 	db	79
  1936  00FC06  4F                 	db	79
  1937  00FC07  4F                 	db	79
  1938  00FC08  4F                 	db	79
  1939  00FC09  2D                 	db	45
  1940  00FC0A  2D                 	db	45
  1941  00FC0B  5F                 	db	95
  1942  00FC0C  5F                 	db	95
  1943  00FC0D  2D                 	db	45
  1944  00FC0E  00                 	db	0
  1945  00FC0F  00                 	db	0
  1946  00FC10  00                 	db	0
  1947  00FC11  00                 	db	0
  1948  00FC12  00                 	db	0
  1949  00FC13  00                 	db	0
  1950  00FC14  00                 	db	0
  1951  00FC15  00                 	db	0
  1952  00FC16  00                 	db	0
  1953  00FC17  76                 	db	118
  1954  00FC18  76                 	db	118
  1955  00FC19  3C                 	db	60
  1956  00FC1A  3C                 	db	60
  1957  00FC1B  5E                 	db	94
  1958  00FC1C  5E                 	db	94
  1959  00FC1D  3E                 	db	62
  1960  00FC1E  3E                 	db	62
  1961  00FC1F  00                 	db	0
  1962  00FC20  00                 	db	0
  1963  00FC21  00                 	db	0
  1964  00FC22  00                 	db	0
  1965  00FC23  00                 	db	0
  1966  00FC24  00                 	db	0
  1967  00FC25  00                 	db	0
  1968  00FC26  00                 	db	0
  1969  00FC27  00                 	db	0
  1970  00FC28  00                 	db	0
  1971  00FC29  00                 	db	0
  1972  00FC2A  00                 	db	0
  1973  00FC2B  2E                 	db	46
  1974  00FC2C  2E                 	db	46
  1975  00FC2D  2A                 	db	42
  1976  00FC2E  2A                 	db	42
  1977  00FC2F  78                 	db	120
  1978  00FC30  23                 	db	35
  1979  00FC31  78                 	db	120
  1980  00FC32  23                 	db	35
  1981  00FC33  58                 	db	88
  1982  00FC34  58                 	db	88
  1983  00FC35  7C                 	db	124
  1984  00FC36  7C                 	db	124
  1985  00FC37  2D                 	db	45
  1986  00FC38  2D                 	db	45
  1987  00FC39  00                 	db	0
  1988  00FC3A  00                 	db	0
  1989  00FC3B  00                 	db	0
  1990  00FC3C  00                 	db	0
  1991  00FC3D  00                 	db	0
  1992  00FC3E  00                 	db	0
  1993  00FC3F  2E                 	db	46
  1994  00FC40  2E                 	db	46
  1995  00FC41  6F                 	db	111
  1996  00FC42  6F                 	db	111
  1997  00FC43  4F                 	db	79
  1998  00FC44  4F                 	db	79
  1999  00FC45  6F                 	db	111
  2000  00FC46  6F                 	db	111
  2001  00FC47  00                 	db	0
  2002  00FC48  00                 	db	0
  2003  00FC49  00                 	db	0
  2004  00FC4A  00                 	db	0
  2005  00FC4B  00                 	db	0
  2006  00FC4C  00                 	db	0
  2007  00FC4D  00                 	db	0
  2008  00FC4E  00                 	db	0
  2009  00FC4F  00                 	db	0
  2010  00FC50  00                 	db	0
  2011  00FC51  00                 	db	0
  2012  00FC52  00                 	db	0
  2013  00FC53                     __end_of_spin:
  2014                           	opt callstack 0
  2015  00FC53  0000               	dw	0
  2016  00FC55  3F80               	dw	16256
  2017  00FC57  0000               	dw	0
  2018  00FC59  3FC0               	dw	16320
  2019  00FC5B                     __end_of_bp:
  2020                           	opt callstack 0
  2021  00FC5B  AA00               	dw	43520
  2022  00FC5D  3FB8               	dw	16312
  2023  00FC5F                     __end_of_ivln2_h:
  2024                           	opt callstack 0
  2025  00FC5F  23C6               	dw	9158
  2026  00FC61  B8F6               	dw	47350
  2027  00FC63                     __end_of_cp_l:
  2028                           	opt callstack 0
  2029  00FC63  4000               	dw	16384
  2030  00FC65  3F76               	dw	16246
  2031  00FC67                     __end_of_cp_h:
  2032                           	opt callstack 0
  2033  0000                     _IVTADL	set	14493
  2034  0000                     _IVTADH	set	14494
  2035  0000                     _IVTADU	set	14495
  2036  0000                     _PIR6bits	set	14758
  2037  0000                     _PIR4bits	set	14756
  2038  0000                     _PIE8bits	set	14744
  2039  0000                     _PIR8bits	set	14760
  2040  0000                     _SCANPR	set	14839
  2041  0000                     _DMA2PR	set	14836
  2042  0000                     _DMA1PR	set	14835
  2043  0000                     _MAINPR	set	14834
  2044  0000                     _ISRPR	set	14833
  2045  0000                     _PIE2bits	set	14738
  2046  0000                     _PIR2bits	set	14754
  2047  0000                     _PIE9bits	set	14745
  2048  0000                     _PIR9bits	set	14761
  2049  0000                     _PIE6bits	set	14742
  2050  0000                     _PIE3bits	set	14739
  2051  0000                     _PMD7	set	14791
  2052  0000                     _PMD6	set	14790
  2053  0000                     _PMD5	set	14789
  2054  0000                     _PMD4	set	14788
  2055  0000                     _PMD3	set	14787
  2056  0000                     _PMD2	set	14786
  2057  0000                     _PMD1	set	14785
  2058  0000                     _PMD0	set	14784
  2059  0000                     _OSCTUNE	set	14814
  2060  0000                     _OSCFRQ	set	14815
  2061  0000                     _OSCEN	set	14813
  2062  0000                     _OSCCON3	set	14811
  2063  0000                     _OSCCON1	set	14809
  2064  0000                     _IPR8bits	set	14728
  2065  0000                     _IPR9bits	set	14729
  2066  0000                     _IPR5bits	set	14725
  2067  0000                     _IPR1bits	set	14721
  2068  0000                     _IPR3bits	set	14723
  2069  0000                     _IPR6bits	set	14726
  2070  0000                     _IPR2bits	set	14722
  2071  0000                     _PIE5bits	set	14741
  2072  0000                     _PIE1bits	set	14737
  2073  0000                     _PIR5bits	set	14757
  2074  0000                     _PIR1bits	set	14753
  2075  0000                     _PLLR	set	118496
  2076  0000                     _SPI1SDIPPS	set	15071
  2077  0000                     _U1RXPPS	set	15077
  2078  0000                     _RC6PPS	set	14870
  2079  0000                     _RC5PPS	set	14869
  2080  0000                     _INT1PPS	set	15041
  2081  0000                     _RD1PPS	set	14873
  2082  0000                     _INT0PPS	set	15040
  2083  0000                     _RC3PPS	set	14867
  2084  0000                     _RB6PPS	set	14862
  2085  0000                     _SPI1SCKPPS	set	15070
  2086  0000                     _U2RXPPS	set	15080
  2087  0000                     _SLRCONF	set	14995
  2088  0000                     _SLRCONE	set	14979
  2089  0000                     _SLRCOND	set	14963
  2090  0000                     _SLRCONC	set	14947
  2091  0000                     _SLRCONB	set	14931
  2092  0000                     _SLRCONA	set	14915
  2093  0000                     _ODCOND	set	14962
  2094  0000                     _ODCONC	set	14946
  2095  0000                     _ODCONB	set	14930
  2096  0000                     _ODCONA	set	14914
  2097  0000                     _ODCONF	set	14994
  2098  0000                     _ODCONE	set	14978
  2099  0000                     _WPUC	set	14945
  2100  0000                     _WPUA	set	14913
  2101  0000                     _WPUB	set	14929
  2102  0000                     _WPUE	set	14977
  2103  0000                     _WPUF	set	14993
  2104  0000                     _WPUD	set	14961
  2105  0000                     _ANSELA	set	14912
  2106  0000                     _ANSELF	set	14992
  2107  0000                     _ANSELE	set	14976
  2108  0000                     _ANSELB	set	14928
  2109  0000                     _ANSELC	set	14944
  2110  0000                     _ANSELD	set	14960
  2111  0000                     _DMA2SSA	set	15321
  2112  0000                     _DMA1SSA	set	15353
  2113  0000                     _DMA2DSZ	set	15310
  2114  0000                     _DMA2SSZ	set	15319
  2115  0000                     _DMA2DSA	set	15312
  2116  0000                     _DMA1DSZ	set	15342
  2117  0000                     _DMA1SSZ	set	15351
  2118  0000                     _DMA1DSA	set	15344
  2119  0000                     _DMA2CON0bits	set	15324
  2120  0000                     _DMA2CON1bits	set	15325
  2121  0000                     _DMA1CON0bits	set	15356
  2122  0000                     _DMA1CON1bits	set	15357
  2123  0000                     _DMA2CON0	set	15324
  2124  0000                     _DMA2AIRQ	set	15326
  2125  0000                     _DMA2SIRQ	set	15327
  2126  0000                     _DMA2CON1	set	15325
  2127  0000                     _DMA1CON0	set	15356
  2128  0000                     _DMA1AIRQ	set	15358
  2129  0000                     _DMA1SIRQ	set	15359
  2130  0000                     _DMA1CON1	set	15357
  2131  0000                     _CLKRCON	set	15589
  2132  0000                     _CLKRCLK	set	15590
  2133  0000                     _SPI1INTFbits	set	15642
  2134  0000                     _SPI1RXB	set	15632
  2135  0000                     _SPI1TXB	set	15633
  2136  0000                     _SPI1TCNTL	set	15634
  2137  0000                     _SPI1CON0	set	15636
  2138  0000                     _SPI1CLK	set	15644
  2139  0000                     _SPI1BAUD	set	15641
  2140  0000                     _SPI1CON2	set	15638
  2141  0000                     _SPI1CON1	set	15637
  2142  0000                     _U2RXB	set	15824
  2143  0000                     _U2TXB	set	15826
  2144  0000                     _U2ERRIE	set	15842
  2145  0000                     _U2ERRIR	set	15841
  2146  0000                     _U2UIR	set	15840
  2147  0000                     _U2FIFO	set	15839
  2148  0000                     _U2BRGH	set	15838
  2149  0000                     _U2BRGL	set	15837
  2150  0000                     _U2CON2	set	15836
  2151  0000                     _U2CON1	set	15835
  2152  0000                     _U2CON0	set	15834
  2153  0000                     _U2P3L	set	15832
  2154  0000                     _U2P2L	set	15830
  2155  0000                     _U2P1L	set	15828
  2156  0000                     _U1RXB	set	15848
  2157  0000                     _U1ERRIE	set	15866
  2158  0000                     _U1ERRIR	set	15865
  2159  0000                     _U1UIR	set	15864
  2160  0000                     _U1FIFO	set	15863
  2161  0000                     _U1BRGH	set	15862
  2162  0000                     _U1BRGL	set	15861
  2163  0000                     _U1CON2	set	15860
  2164  0000                     _U1CON1	set	15859
  2165  0000                     _U1CON0	set	15858
  2166  0000                     _U1P3H	set	15857
  2167  0000                     _U1P3L	set	15856
  2168  0000                     _U1P2H	set	15855
  2169  0000                     _U1P2L	set	15854
  2170  0000                     _U1P1H	set	15853
  2171  0000                     _U1P1L	set	15852
  2172  0000                     _FVRCON	set	16065
  2173  0000                     _ADFLTRL	set	16102
  2174  0000                     _ADFLTRH	set	16103
  2175  0000                     _ADCON0bits	set	16120
  2176  0000                     _ADCON0	set	16120
  2177  0000                     _ADCLK	set	16127
  2178  0000                     _ADACT	set	16126
  2179  0000                     _ADREF	set	16125
  2180  0000                     _ADSTAT	set	16124
  2181  0000                     _ADCON3	set	16123
  2182  0000                     _ADCON2	set	16122
  2183  0000                     _ADCON1	set	16121
  2184  0000                     _ADPREH	set	16119
  2185  0000                     _ADPREL	set	16118
  2186  0000                     _ADCAP	set	16117
  2187  0000                     _ADACQH	set	16116
  2188  0000                     _ADACQL	set	16115
  2189  0000                     _ADPCH	set	16113
  2190  0000                     _ADRPT	set	16108
  2191  0000                     _ADACCU	set	16106
  2192  0000                     _ADSTPTH	set	16101
  2193  0000                     _ADSTPTL	set	16100
  2194  0000                     _ADUTHH	set	16097
  2195  0000                     _ADUTHL	set	16096
  2196  0000                     _ADLTHH	set	16095
  2197  0000                     _ADLTHL	set	16094
  2198  0000                     _CCPTMRS1bits	set	16223
  2199  0000                     _PORTFbits	set	16335
  2200  0000                     _LATFbits	set	16319
  2201  0000                     _LATCbits	set	16316
  2202  0000                     _LATDbits	set	16317
  2203  0000                     _PORTBbits	set	16331
  2204  0000                     _T3CONbits	set	16294
  2205  0000                     _T3CON	set	16294
  2206  0000                     _TMR3L	set	16292
  2207  0000                     _TMR3H	set	16293
  2208  0000                     _T3CLK	set	16297
  2209  0000                     _T3GATE	set	16296
  2210  0000                     _T3GCON	set	16295
  2211  0000                     _T2CON	set	16300
  2212  0000                     _T2TMR	set	16298
  2213  0000                     _T2PR	set	16299
  2214  0000                     _T2RST	set	16303
  2215  0000                     _T2HLT	set	16301
  2216  0000                     _T2CLKCON	set	16302
  2217  0000                     _PWM8DCL	set	16224
  2218  0000                     _PWM8DCH	set	16225
  2219  0000                     _PWM8CON	set	16226
  2220  0000                     _LATEbits	set	16318
  2221  0000                     _T5CONbits	set	16282
  2222  0000                     _T5CON	set	16282
  2223  0000                     _TMR5L	set	16280
  2224  0000                     _TMR5H	set	16281
  2225  0000                     _T5CLK	set	16285
  2226  0000                     _T5GATE	set	16284
  2227  0000                     _T5GCON	set	16283
  2228  0000                     _T6CON	set	16276
  2229  0000                     _T6TMR	set	16274
  2230  0000                     _T6PR	set	16275
  2231  0000                     _T6RST	set	16279
  2232  0000                     _T6HLT	set	16277
  2233  0000                     _T6CLKCON	set	16278
  2234  0000                     _TRISD	set	16325
  2235  0000                     _TRISC	set	16324
  2236  0000                     _TRISB	set	16323
  2237  0000                     _TRISA	set	16322
  2238  0000                     _TRISF	set	16327
  2239  0000                     _TRISE	set	16326
  2240  0000                     _LATC	set	16316
  2241  0000                     _LATB	set	16315
  2242  0000                     _LATF	set	16319
  2243  0000                     _LATA	set	16314
  2244  0000                     _LATD	set	16317
  2245  0000                     _LATE	set	16318
  2246  0000                     _IVTLOCKbits	set	16340
  2247  0000                     _IVTLOCK	set	16340
  2248  0000                     _INTCON0bits	set	16338
  2249  0000                     _GIE	set	130711
  2250  00FC67                     STR_65:
  2251                           
  2252                           ; BSR set to: 57
  2253  00FC67  20                 	db	32
  2254  00FC68  25                 	db	37
  2255  00FC69  6C                 	db	108	;'l'
  2256  00FC6A  75                 	db	117	;'u'
  2257  00FC6B  2C                 	db	44
  2258  00FC6C  25                 	db	37
  2259  00FC6D  34                 	db	52	;'4'
  2260  00FC6E  2E                 	db	46
  2261  00FC6F  34                 	db	52	;'4'
  2262  00FC70  66                 	db	102	;'f'
  2263  00FC71  2C                 	db	44
  2264  00FC72  25                 	db	37
  2265  00FC73  34                 	db	52	;'4'
  2266  00FC74  2E                 	db	46
  2267  00FC75  34                 	db	52	;'4'
  2268  00FC76  66                 	db	102	;'f'
  2269  00FC77  2C                 	db	44
  2270  00FC78  25                 	db	37
  2271  00FC79  34                 	db	52	;'4'
  2272  00FC7A  2E                 	db	46
  2273  00FC7B  34                 	db	52	;'4'
  2274  00FC7C  66                 	db	102	;'f'
  2275  00FC7D  2C                 	db	44
  2276  00FC7E  25                 	db	37
  2277  00FC7F  34                 	db	52	;'4'
  2278  00FC80  2E                 	db	46
  2279  00FC81  34                 	db	52	;'4'
  2280  00FC82  66                 	db	102	;'f'
  2281  00FC83  2C                 	db	44
  2282  00FC84  25                 	db	37
  2283  00FC85  34                 	db	52	;'4'
  2284  00FC86  2E                 	db	46
  2285  00FC87  33                 	db	51	;'3'
  2286  00FC88  66                 	db	102	;'f'
  2287  00FC89  2C                 	db	44
  2288  00FC8A  25                 	db	37
  2289  00FC8B  34                 	db	52	;'4'
  2290  00FC8C  2E                 	db	46
  2291  00FC8D  33                 	db	51	;'3'
  2292  00FC8E  66                 	db	102	;'f'
  2293  00FC8F  2C                 	db	44
  2294  00FC90  25                 	db	37
  2295  00FC91  34                 	db	52	;'4'
  2296  00FC92  2E                 	db	46
  2297  00FC93  33                 	db	51	;'3'
  2298  00FC94  66                 	db	102	;'f'
  2299  00FC95  2C                 	db	44
  2300  00FC96  25                 	db	37
  2301  00FC97  34                 	db	52	;'4'
  2302  00FC98  2E                 	db	46
  2303  00FC99  33                 	db	51	;'3'
  2304  00FC9A  66                 	db	102	;'f'
  2305  00FC9B  2C                 	db	44
  2306  00FC9C  25                 	db	37
  2307  00FC9D  34                 	db	52	;'4'
  2308  00FC9E  2E                 	db	46
  2309  00FC9F  33                 	db	51	;'3'
  2310  00FCA0  66                 	db	102	;'f'
  2311  00FCA1  2C                 	db	44
  2312  00FCA2  25                 	db	37
  2313  00FCA3  34                 	db	52	;'4'
  2314  00FCA4  2E                 	db	46
  2315  00FCA5  33                 	db	51	;'3'
  2316  00FCA6  66                 	db	102	;'f'
  2317  00FCA7  2C                 	db	44
  2318  00FCA8  25                 	db	37
  2319  00FCA9  34                 	db	52	;'4'
  2320  00FCAA  2E                 	db	46
  2321  00FCAB  33                 	db	51	;'3'
  2322  00FCAC  64                 	db	100	;'d'
  2323  00FCAD  2C                 	db	44
  2324  00FCAE  25                 	db	37
  2325  00FCAF  34                 	db	52	;'4'
  2326  00FCB0  2E                 	db	46
  2327  00FCB1  33                 	db	51	;'3'
  2328  00FCB2  64                 	db	100	;'d'
  2329  00FCB3  2C                 	db	44
  2330  00FCB4  25                 	db	37
  2331  00FCB5  32                 	db	50	;'2'
  2332  00FCB6  2E                 	db	46
  2333  00FCB7  36                 	db	54	;'6'
  2334  00FCB8  66                 	db	102	;'f'
  2335  00FCB9  0D                 	db	13
  2336  00FCBA  0A                 	db	10
  2337  00FCBB  00                 	db	0
  2338  00FCBC                     STR_17:
  2339                           
  2340                           ; BSR set to: 57
  2341  00FCBC  52                 	db	82	;'R'
  2342  00FCBD  31                 	db	49	;'1'
  2343  00FCBE  20                 	db	32
  2344  00FCBF  25                 	db	37
  2345  00FCC0  32                 	db	50	;'2'
  2346  00FCC1  2E                 	db	46
  2347  00FCC2  33                 	db	51	;'3'
  2348  00FCC3  66                 	db	102	;'f'
  2349  00FCC4  20                 	db	32
  2350  00FCC5  25                 	db	37
  2351  00FCC6  33                 	db	51	;'3'
  2352  00FCC7  2E                 	db	46
  2353  00FCC8  34                 	db	52	;'4'
  2354  00FCC9  66                 	db	102	;'f'
  2355  00FCCA  20                 	db	32
  2356  00FCCB  20                 	db	32
  2357  00FCCC  20                 	db	32
  2358  00FCCD  20                 	db	32
  2359  00FCCE  20                 	db	32
  2360  00FCCF  20                 	db	32
  2361  00FCD0  20                 	db	32
  2362  00FCD1  20                 	db	32
  2363  00FCD2  20                 	db	32
  2364  00FCD3  20                 	db	32
  2365  00FCD4  20                 	db	32
  2366  00FCD5  00                 	db	0
  2367  00FCD6                     STR_18:
  2368                           
  2369                           ; BSR set to: 57
  2370  00FCD6  52                 	db	82	;'R'
  2371  00FCD7  32                 	db	50	;'2'
  2372  00FCD8  20                 	db	32
  2373  00FCD9  25                 	db	37
  2374  00FCDA  32                 	db	50	;'2'
  2375  00FCDB  2E                 	db	46
  2376  00FCDC  33                 	db	51	;'3'
  2377  00FCDD  66                 	db	102	;'f'
  2378  00FCDE  20                 	db	32
  2379  00FCDF  25                 	db	37
  2380  00FCE0  33                 	db	51	;'3'
  2381  00FCE1  2E                 	db	46
  2382  00FCE2  34                 	db	52	;'4'
  2383  00FCE3  66                 	db	102	;'f'
  2384  00FCE4  20                 	db	32
  2385  00FCE5  20                 	db	32
  2386  00FCE6  20                 	db	32
  2387  00FCE7  20                 	db	32
  2388  00FCE8  20                 	db	32
  2389  00FCE9  20                 	db	32
  2390  00FCEA  20                 	db	32
  2391  00FCEB  20                 	db	32
  2392  00FCEC  20                 	db	32
  2393  00FCED  20                 	db	32
  2394  00FCEE  20                 	db	32
  2395  00FCEF  00                 	db	0
  2396  00FCF0                     
  2397                           ; BSR set to: 57
  2398  00FCF0  20                 	db	32
  2399  00FCF1  4D                 	db	77	;'M'
  2400  00FCF2  65                 	db	101	;'e'
  2401  00FCF3  73                 	db	115	;'s'
  2402  00FCF4  67                 	db	103	;'g'
  2403  00FCF5  20                 	db	32
  2404  00FCF6  25                 	db	37
  2405  00FCF7  64                 	db	100	;'d'
  2406  00FCF8  20                 	db	32
  2407  00FCF9  53                 	db	83	;'S'
  2408  00FCFA  74                 	db	116	;'t'
  2409  00FCFB  61                 	db	97	;'a'
  2410  00FCFC  63                 	db	99	;'c'
  2411  00FCFD  6B                 	db	107	;'k'
  2412  00FCFE  20                 	db	32
  2413  00FCFF  25                 	db	37
  2414  00FD00  64                 	db	100	;'d'
  2415  00FD01  20                 	db	32
  2416  00FD02  20                 	db	32
  2417  00FD03  20                 	db	32
  2418  00FD04  20                 	db	32
  2419  00FD05  20                 	db	32
  2420  00FD06  20                 	db	32
  2421  00FD07  00                 	db	0
  2422  00FD08                     STR_9:
  2423                           
  2424                           ; BSR set to: 57
  2425  00FD08  53                 	db	83	;'S'
  2426  00FD09  20                 	db	32
  2427  00FD0A  53                 	db	83	;'S'
  2428  00FD0B  25                 	db	37
  2429  00FD0C  63                 	db	99	;'c'
  2430  00FD0D  43                 	db	67	;'C'
  2431  00FD0E  20                 	db	32
  2432  00FD0F  25                 	db	37
  2433  00FD10  64                 	db	100	;'d'
  2434  00FD11  20                 	db	32
  2435  00FD12  25                 	db	37
  2436  00FD13  32                 	db	50	;'2'
  2437  00FD14  2E                 	db	46
  2438  00FD15  34                 	db	52	;'4'
  2439  00FD16  66                 	db	102	;'f'
  2440  00FD17  20                 	db	32
  2441  00FD18  20                 	db	32
  2442  00FD19  20                 	db	32
  2443  00FD1A  20                 	db	32
  2444  00FD1B  20                 	db	32
  2445  00FD1C  20                 	db	32
  2446  00FD1D  20                 	db	32
  2447  00FD1E  00                 	db	0
  2448  00FD1F                     STR_16:
  2449                           
  2450                           ; BSR set to: 57
  2451  00FD1F  45                 	db	69	;'E'
  2452  00FD20  53                 	db	83	;'S'
  2453  00FD21  52                 	db	82	;'R'
  2454  00FD22  20                 	db	32
  2455  00FD23  20                 	db	32
  2456  00FD24  25                 	db	37
  2457  00FD25  32                 	db	50	;'2'
  2458  00FD26  2E                 	db	46
  2459  00FD27  36                 	db	54	;'6'
  2460  00FD28  66                 	db	102	;'f'
  2461  00FD29  20                 	db	32
  2462  00FD2A  20                 	db	32
  2463  00FD2B  20                 	db	32
  2464  00FD2C  20                 	db	32
  2465  00FD2D  20                 	db	32
  2466  00FD2E  20                 	db	32
  2467  00FD2F  20                 	db	32
  2468  00FD30  20                 	db	32
  2469  00FD31  20                 	db	32
  2470  00FD32  20                 	db	32
  2471  00FD33  20                 	db	32
  2472  00FD34  00                 	db	0
  2473  00FD35                     STR_10:
  2474                           
  2475                           ; BSR set to: 57
  2476  00FD35  53                 	db	83	;'S'
  2477  00FD36  74                 	db	116	;'t'
  2478  00FD37  61                 	db	97	;'a'
  2479  00FD38  74                 	db	116	;'t'
  2480  00FD39  69                 	db	105	;'i'
  2481  00FD3A  63                 	db	99	;'c'
  2482  00FD3B  20                 	db	32
  2483  00FD3C  53                 	db	83	;'S'
  2484  00FD3D  4F                 	db	79	;'O'
  2485  00FD3E  43                 	db	67	;'C'
  2486  00FD3F  20                 	db	32
  2487  00FD40  25                 	db	37
  2488  00FD41  64                 	db	100	;'d'
  2489  00FD42  20                 	db	32
  2490  00FD43  20                 	db	32
  2491  00FD44  20                 	db	32
  2492  00FD45  20                 	db	32
  2493  00FD46  20                 	db	32
  2494  00FD47  20                 	db	32
  2495  00FD48  20                 	db	32
  2496  00FD49  20                 	db	32
  2497  00FD4A  00                 	db	0
  2498  00FD4B                     STR_11:
  2499                           
  2500                           ; BSR set to: 57
  2501  00FD4B  42                 	db	66	;'B'
  2502  00FD4C  61                 	db	97	;'a'
  2503  00FD4D  74                 	db	116	;'t'
  2504  00FD4E  74                 	db	116	;'t'
  2505  00FD4F  65                 	db	101	;'e'
  2506  00FD50  72                 	db	114	;'r'
  2507  00FD51  79                 	db	121	;'y'
  2508  00FD52  20                 	db	32
  2509  00FD53  41                 	db	65	;'A'
  2510  00FD54  68                 	db	104	;'h'
  2511  00FD55  20                 	db	32
  2512  00FD56  25                 	db	37
  2513  00FD57  33                 	db	51	;'3'
  2514  00FD58  2E                 	db	46
  2515  00FD59  32                 	db	50	;'2'
  2516  00FD5A  66                 	db	102	;'f'
  2517  00FD5B  20                 	db	32
  2518  00FD5C  20                 	db	32
  2519  00FD5D  20                 	db	32
  2520  00FD5E  20                 	db	32
  2521  00FD5F  20                 	db	32
  2522  00FD60  00                 	db	0
  2523  00FD61                     STR_15:
  2524                           
  2525                           ; BSR set to: 57
  2526  00FD61  43                 	db	67	;'C'
  2527  00FD62  68                 	db	104	;'h'
  2528  00FD63  65                 	db	101	;'e'
  2529  00FD64  63                 	db	99	;'c'
  2530  00FD65  6B                 	db	107	;'k'
  2531  00FD66  69                 	db	105	;'i'
  2532  00FD67  6E                 	db	110	;'n'
  2533  00FD68  67                 	db	103	;'g'
  2534  00FD69  20                 	db	32
  2535  00FD6A  25                 	db	37
  2536  00FD6B  63                 	db	99	;'c'
  2537  00FD6C  20                 	db	32
  2538  00FD6D  25                 	db	37
  2539  00FD6E  63                 	db	99	;'c'
  2540  00FD6F  20                 	db	32
  2541  00FD70  20                 	db	32
  2542  00FD71  20                 	db	32
  2543  00FD72  20                 	db	32
  2544  00FD73  20                 	db	32
  2545  00FD74  20                 	db	32
  2546  00FD75  00                 	db	0
  2547  00FD76                     STR_37:
  2548                           
  2549                           ; BSR set to: 57
  2550  00FD76  45                 	db	69	;'E'
  2551  00FD77  53                 	db	83	;'S'
  2552  00FD78  52                 	db	82	;'R'
  2553  00FD79  20                 	db	32
  2554  00FD7A  20                 	db	32
  2555  00FD7B  25                 	db	37
  2556  00FD7C  32                 	db	50	;'2'
  2557  00FD7D  2E                 	db	46
  2558  00FD7E  36                 	db	54	;'6'
  2559  00FD7F  66                 	db	102	;'f'
  2560  00FD80  20                 	db	32
  2561  00FD81  20                 	db	32
  2562  00FD82  20                 	db	32
  2563  00FD83  20                 	db	32
  2564  00FD84  20                 	db	32
  2565  00FD85  20                 	db	32
  2566  00FD86  20                 	db	32
  2567  00FD87  20                 	db	32
  2568  00FD88  20                 	db	32
  2569  00FD89  00                 	db	0
  2570  00FD8A                     STR_36:
  2571                           
  2572                           ; BSR set to: 57
  2573  00FD8A  53                 	db	83	;'S'
  2574  00FD8B  25                 	db	37
  2575  00FD8C  63                 	db	99	;'c'
  2576  00FD8D  43                 	db	67	;'C'
  2577  00FD8E  20                 	db	32
  2578  00FD8F  25                 	db	37
  2579  00FD90  64                 	db	100	;'d'
  2580  00FD91  20                 	db	32
  2581  00FD92  52                 	db	82	;'R'
  2582  00FD93  55                 	db	85	;'U'
  2583  00FD94  4E                 	db	78	;'N'
  2584  00FD95  20                 	db	32
  2585  00FD96  25                 	db	37
  2586  00FD97  64                 	db	100	;'d'
  2587  00FD98  20                 	db	32
  2588  00FD99  20                 	db	32
  2589  00FD9A  20                 	db	32
  2590  00FD9B  20                 	db	32
  2591  00FD9C  20                 	db	32
  2592  00FD9D  00                 	db	0
  2593  00FD9E                     STR_34:
  2594                           
  2595                           ; BSR set to: 57
  2596  00FD9E  42                 	db	66	;'B'
  2597  00FD9F  41                 	db	65	;'A'
  2598  00FDA0  54                 	db	84	;'T'
  2599  00FDA1  54                 	db	84	;'T'
  2600  00FDA2  20                 	db	32
  2601  00FDA3  50                 	db	80	;'P'
  2602  00FDA4  57                 	db	87	;'W'
  2603  00FDA5  52                 	db	82	;'R'
  2604  00FDA6  20                 	db	32
  2605  00FDA7  25                 	db	37
  2606  00FDA8  33                 	db	51	;'3'
  2607  00FDA9  2E                 	db	46
  2608  00FDAA  32                 	db	50	;'2'
  2609  00FDAB  66                 	db	102	;'f'
  2610  00FDAC  20                 	db	32
  2611  00FDAD  20                 	db	32
  2612  00FDAE  20                 	db	32
  2613  00FDAF  20                 	db	32
  2614  00FDB0  20                 	db	32
  2615  00FDB1  00                 	db	0
  2616  00FDB2                     STR_38:
  2617                           
  2618                           ; BSR set to: 57
  2619  00FDB2  52                 	db	82	;'R'
  2620  00FDB3  31                 	db	49	;'1'
  2621  00FDB4  20                 	db	32
  2622  00FDB5  25                 	db	37
  2623  00FDB6  32                 	db	50	;'2'
  2624  00FDB7  2E                 	db	46
  2625  00FDB8  33                 	db	51	;'3'
  2626  00FDB9  66                 	db	102	;'f'
  2627  00FDBA  20                 	db	32
  2628  00FDBB  25                 	db	37
  2629  00FDBC  33                 	db	51	;'3'
  2630  00FDBD  2E                 	db	46
  2631  00FDBE  34                 	db	52	;'4'
  2632  00FDBF  66                 	db	102	;'f'
  2633  00FDC0  20                 	db	32
  2634  00FDC1  20                 	db	32
  2635  00FDC2  20                 	db	32
  2636  00FDC3  20                 	db	32
  2637  00FDC4  20                 	db	32
  2638  00FDC5  00                 	db	0
  2639  00FDC6                     STR_39:
  2640                           
  2641                           ; BSR set to: 57
  2642  00FDC6  52                 	db	82	;'R'
  2643  00FDC7  32                 	db	50	;'2'
  2644  00FDC8  20                 	db	32
  2645  00FDC9  25                 	db	37
  2646  00FDCA  32                 	db	50	;'2'
  2647  00FDCB  2E                 	db	46
  2648  00FDCC  33                 	db	51	;'3'
  2649  00FDCD  66                 	db	102	;'f'
  2650  00FDCE  20                 	db	32
  2651  00FDCF  25                 	db	37
  2652  00FDD0  33                 	db	51	;'3'
  2653  00FDD1  2E                 	db	46
  2654  00FDD2  34                 	db	52	;'4'
  2655  00FDD3  66                 	db	102	;'f'
  2656  00FDD4  20                 	db	32
  2657  00FDD5  20                 	db	32
  2658  00FDD6  20                 	db	32
  2659  00FDD7  20                 	db	32
  2660  00FDD8  20                 	db	32
  2661  00FDD9  00                 	db	0
  2662  00FDDA                     STR_35:
  2663                           
  2664                           ; BSR set to: 57
  2665  00FDDA  42                 	db	66	;'B'
  2666  00FDDB  41                 	db	65	;'A'
  2667  00FDDC  48                 	db	72	;'H'
  2668  00FDDD  20                 	db	32
  2669  00FDDE  25                 	db	37
  2670  00FDDF  33                 	db	51	;'3'
  2671  00FDE0  2E                 	db	46
  2672  00FDE1  32                 	db	50	;'2'
  2673  00FDE2  66                 	db	102	;'f'
  2674  00FDE3  20                 	db	32
  2675  00FDE4  50                 	db	80	;'P'
  2676  00FDE5  25                 	db	37
  2677  00FDE6  33                 	db	51	;'3'
  2678  00FDE7  2E                 	db	46
  2679  00FDE8  32                 	db	50	;'2'
  2680  00FDE9  66                 	db	102	;'f'
  2681  00FDEA  20                 	db	32
  2682  00FDEB  20                 	db	32
  2683  00FDEC  20                 	db	32
  2684  00FDED  00                 	db	0
  2685  00FDEE                     STR_58:
  2686                           
  2687                           ; BSR set to: 57
  2688  00FDEE  20                 	db	32
  2689  00FDEF  20                 	db	32
  2690  00FDF0  20                 	db	32
  2691  00FDF1  20                 	db	32
  2692  00FDF2  20                 	db	32
  2693  00FDF3  20                 	db	32
  2694  00FDF4  20                 	db	32
  2695  00FDF5  20                 	db	32
  2696  00FDF6  20                 	db	32
  2697  00FDF7  20                 	db	32
  2698  00FDF8  20                 	db	32
  2699  00FDF9  20                 	db	32
  2700  00FDFA  20                 	db	32
  2701  00FDFB  20                 	db	32
  2702  00FDFC  20                 	db	32
  2703  00FDFD  20                 	db	32
  2704  00FDFE  20                 	db	32
  2705  00FDFF  20                 	db	32
  2706  00FE00  00                 	db	0
  2707  00FE01                     STR_48:
  2708                           
  2709                           ; BSR set to: 57
  2710  00FE01  48                 	db	72	;'H'
  2711  00FE02  45                 	db	69	;'E'
  2712  00FE03  4C                 	db	76	;'L'
  2713  00FE04  50                 	db	80	;'P'
  2714  00FE05  20                 	db	32
  2715  00FE06  25                 	db	37
  2716  00FE07  73                 	db	115	;'s'
  2717  00FE08  20                 	db	32
  2718  00FE09  20                 	db	32
  2719  00FE0A  20                 	db	32
  2720  00FE0B  20                 	db	32
  2721  00FE0C  20                 	db	32
  2722  00FE0D  20                 	db	32
  2723  00FE0E  20                 	db	32
  2724  00FE0F  20                 	db	32
  2725  00FE10  20                 	db	32
  2726  00FE11  20                 	db	32
  2727  00FE12  20                 	db	32
  2728  00FE13  00                 	db	0
  2729  00FE14                     
  2730                           ; BSR set to: 57
  2731  00FE14  44                 	db	68	;'D'
  2732  00FE15  49                 	db	73	;'I'
  2733  00FE16  53                 	db	83	;'S'
  2734  00FE17  50                 	db	80	;'P'
  2735  00FE18  4C                 	db	76	;'L'
  2736  00FE19  41                 	db	65	;'A'
  2737  00FE1A  59                 	db	89	;'Y'
  2738  00FE1B  20                 	db	32
  2739  00FE1C  25                 	db	37
  2740  00FE1D  73                 	db	115	;'s'
  2741  00FE1E  20                 	db	32
  2742  00FE1F  20                 	db	32
  2743  00FE20  20                 	db	32
  2744  00FE21  20                 	db	32
  2745  00FE22  20                 	db	32
  2746  00FE23  20                 	db	32
  2747  00FE24  20                 	db	32
  2748  00FE25  20                 	db	32
  2749  00FE26  00                 	db	0
  2750  00FE27                     STR_31:
  2751                           
  2752                           ; BSR set to: 57
  2753  00FE27  42                 	db	66	;'B'
  2754  00FE28  41                 	db	65	;'A'
  2755  00FE29  54                 	db	84	;'T'
  2756  00FE2A  20                 	db	32
  2757  00FE2B  49                 	db	73	;'I'
  2758  00FE2C  57                 	db	87	;'W'
  2759  00FE2D  48                 	db	72	;'H'
  2760  00FE2E  20                 	db	32
  2761  00FE2F  25                 	db	37
  2762  00FE30  34                 	db	52	;'4'
  2763  00FE31  2E                 	db	46
  2764  00FE32  31                 	db	49	;'1'
  2765  00FE33  66                 	db	102	;'f'
  2766  00FE34  20                 	db	32
  2767  00FE35  20                 	db	32
  2768  00FE36  20                 	db	32
  2769  00FE37  20                 	db	32
  2770  00FE38  20                 	db	32
  2771  00FE39  00                 	db	0
  2772  00FE3A                     STR_32:
  2773                           
  2774                           ; BSR set to: 57
  2775  00FE3A  42                 	db	66	;'B'
  2776  00FE3B  41                 	db	65	;'A'
  2777  00FE3C  54                 	db	84	;'T'
  2778  00FE3D  20                 	db	32
  2779  00FE3E  4F                 	db	79	;'O'
  2780  00FE3F  57                 	db	87	;'W'
  2781  00FE40  48                 	db	72	;'H'
  2782  00FE41  20                 	db	32
  2783  00FE42  25                 	db	37
  2784  00FE43  34                 	db	52	;'4'
  2785  00FE44  2E                 	db	46
  2786  00FE45  31                 	db	49	;'1'
  2787  00FE46  66                 	db	102	;'f'
  2788  00FE47  20                 	db	32
  2789  00FE48  20                 	db	32
  2790  00FE49  20                 	db	32
  2791  00FE4A  20                 	db	32
  2792  00FE4B  20                 	db	32
  2793  00FE4C  00                 	db	0
  2794  00FE4D                     STR_33:
  2795                           
  2796                           ; BSR set to: 57
  2797  00FE4D  42                 	db	66	;'B'
  2798  00FE4E  41                 	db	65	;'A'
  2799  00FE4F  54                 	db	84	;'T'
  2800  00FE50  20                 	db	32
  2801  00FE51  54                 	db	84	;'T'
  2802  00FE52  57                 	db	87	;'W'
  2803  00FE53  48                 	db	72	;'H'
  2804  00FE54  20                 	db	32
  2805  00FE55  25                 	db	37
  2806  00FE56  34                 	db	52	;'4'
  2807  00FE57  2E                 	db	46
  2808  00FE58  31                 	db	49	;'1'
  2809  00FE59  66                 	db	102	;'f'
  2810  00FE5A  20                 	db	32
  2811  00FE5B  20                 	db	32
  2812  00FE5C  20                 	db	32
  2813  00FE5D  20                 	db	32
  2814  00FE5E  20                 	db	32
  2815  00FE5F  00                 	db	0
  2816  00FE60                     STR_25:
  2817                           
  2818                           ; BSR set to: 57
  2819  00FE60  50                 	db	80	;'P'
  2820  00FE61  56                 	db	86	;'V'
  2821  00FE62  20                 	db	32
  2822  00FE63  20                 	db	32
  2823  00FE64  20                 	db	32
  2824  00FE65  57                 	db	87	;'W'
  2825  00FE66  48                 	db	72	;'H'
  2826  00FE67  20                 	db	32
  2827  00FE68  25                 	db	37
  2828  00FE69  33                 	db	51	;'3'
  2829  00FE6A  2E                 	db	46
  2830  00FE6B  32                 	db	50	;'2'
  2831  00FE6C  66                 	db	102	;'f'
  2832  00FE6D  20                 	db	32
  2833  00FE6E  20                 	db	32
  2834  00FE6F  20                 	db	32
  2835  00FE70  20                 	db	32
  2836  00FE71  20                 	db	32
  2837  00FE72  00                 	db	0
  2838  00FE73                     STR_27:
  2839                           
  2840                           ; BSR set to: 57
  2841  00FE73  49                 	db	73	;'I'
  2842  00FE74  4E                 	db	78	;'N'
  2843  00FE75  56                 	db	86	;'V'
  2844  00FE76  20                 	db	32
  2845  00FE77  20                 	db	32
  2846  00FE78  57                 	db	87	;'W'
  2847  00FE79  48                 	db	72	;'H'
  2848  00FE7A  20                 	db	32
  2849  00FE7B  25                 	db	37
  2850  00FE7C  33                 	db	51	;'3'
  2851  00FE7D  2E                 	db	46
  2852  00FE7E  32                 	db	50	;'2'
  2853  00FE7F  66                 	db	102	;'f'
  2854  00FE80  20                 	db	32
  2855  00FE81  20                 	db	32
  2856  00FE82  20                 	db	32
  2857  00FE83  20                 	db	32
  2858  00FE84  20                 	db	32
  2859  00FE85  00                 	db	0
  2860  00FE86                     STR_26:
  2861                           
  2862                           ; BSR set to: 57
  2863  00FE86  4C                 	db	76	;'L'
  2864  00FE87  4F                 	db	79	;'O'
  2865  00FE88  41                 	db	65	;'A'
  2866  00FE89  44                 	db	68	;'D'
  2867  00FE8A  20                 	db	32
  2868  00FE8B  57                 	db	87	;'W'
  2869  00FE8C  48                 	db	72	;'H'
  2870  00FE8D  20                 	db	32
  2871  00FE8E  25                 	db	37
  2872  00FE8F  33                 	db	51	;'3'
  2873  00FE90  2E                 	db	46
  2874  00FE91  32                 	db	50	;'2'
  2875  00FE92  66                 	db	102	;'f'
  2876  00FE93  20                 	db	32
  2877  00FE94  20                 	db	32
  2878  00FE95  20                 	db	32
  2879  00FE96  20                 	db	32
  2880  00FE97  20                 	db	32
  2881  00FE98  00                 	db	0
  2882  00FE99                     STR_22:
  2883                           
  2884                           ; BSR set to: 57
  2885  00FE99  50                 	db	80	;'P'
  2886  00FE9A  56                 	db	86	;'V'
  2887  00FE9B  20                 	db	32
  2888  00FE9C  20                 	db	32
  2889  00FE9D  20                 	db	32
  2890  00FE9E  50                 	db	80	;'P'
  2891  00FE9F  57                 	db	87	;'W'
  2892  00FEA0  52                 	db	82	;'R'
  2893  00FEA1  20                 	db	32
  2894  00FEA2  25                 	db	37
  2895  00FEA3  33                 	db	51	;'3'
  2896  00FEA4  2E                 	db	46
  2897  00FEA5  32                 	db	50	;'2'
  2898  00FEA6  66                 	db	102	;'f'
  2899  00FEA7  20                 	db	32
  2900  00FEA8  20                 	db	32
  2901  00FEA9  20                 	db	32
  2902  00FEAA  20                 	db	32
  2903  00FEAB  00                 	db	0
  2904  00FEAC                     STR_24:
  2905                           
  2906                           ; BSR set to: 57
  2907  00FEAC  49                 	db	73	;'I'
  2908  00FEAD  4E                 	db	78	;'N'
  2909  00FEAE  56                 	db	86	;'V'
  2910  00FEAF  20                 	db	32
  2911  00FEB0  20                 	db	32
  2912  00FEB1  50                 	db	80	;'P'
  2913  00FEB2  57                 	db	87	;'W'
  2914  00FEB3  52                 	db	82	;'R'
  2915  00FEB4  20                 	db	32
  2916  00FEB5  25                 	db	37
  2917  00FEB6  33                 	db	51	;'3'
  2918  00FEB7  2E                 	db	46
  2919  00FEB8  32                 	db	50	;'2'
  2920  00FEB9  66                 	db	102	;'f'
  2921  00FEBA  20                 	db	32
  2922  00FEBB  20                 	db	32
  2923  00FEBC  20                 	db	32
  2924  00FEBD  20                 	db	32
  2925  00FEBE  00                 	db	0
  2926  00FEBF                     STR_23:
  2927                           
  2928                           ; BSR set to: 57
  2929  00FEBF  4C                 	db	76	;'L'
  2930  00FEC0  4F                 	db	79	;'O'
  2931  00FEC1  41                 	db	65	;'A'
  2932  00FEC2  44                 	db	68	;'D'
  2933  00FEC3  20                 	db	32
  2934  00FEC4  50                 	db	80	;'P'
  2935  00FEC5  57                 	db	87	;'W'
  2936  00FEC6  52                 	db	82	;'R'
  2937  00FEC7  20                 	db	32
  2938  00FEC8  25                 	db	37
  2939  00FEC9  33                 	db	51	;'3'
  2940  00FECA  2E                 	db	46
  2941  00FECB  32                 	db	50	;'2'
  2942  00FECC  66                 	db	102	;'f'
  2943  00FECD  20                 	db	32
  2944  00FECE  20                 	db	32
  2945  00FECF  20                 	db	32
  2946  00FED0  20                 	db	32
  2947  00FED1  00                 	db	0
  2948  00FED2                     STR_29:
  2949                           
  2950                           ; BSR set to: 57
  2951  00FED2  42                 	db	66	;'B'
  2952  00FED3  56                 	db	86	;'V'
  2953  00FED4  20                 	db	32
  2954  00FED5  25                 	db	37
  2955  00FED6  32                 	db	50	;'2'
  2956  00FED7  2E                 	db	46
  2957  00FED8  32                 	db	50	;'2'
  2958  00FED9  66                 	db	102	;'f'
  2959  00FEDA  20                 	db	32
  2960  00FEDB  42                 	db	66	;'B'
  2961  00FEDC  41                 	db	65	;'A'
  2962  00FEDD  20                 	db	32
  2963  00FEDE  25                 	db	37
  2964  00FEDF  32                 	db	50	;'2'
  2965  00FEE0  2E                 	db	46
  2966  00FEE1  32                 	db	50	;'2'
  2967  00FEE2  66                 	db	102	;'f'
  2968  00FEE3  20                 	db	32
  2969  00FEE4  00                 	db	0
  2970  00FEE5                     STR_30:
  2971                           
  2972                           ; BSR set to: 57
  2973  00FEE5  43                 	db	67	;'C'
  2974  00FEE6  56                 	db	86	;'V'
  2975  00FEE7  20                 	db	32
  2976  00FEE8  25                 	db	37
  2977  00FEE9  32                 	db	50	;'2'
  2978  00FEEA  2E                 	db	46
  2979  00FEEB  32                 	db	50	;'2'
  2980  00FEEC  66                 	db	102	;'f'
  2981  00FEED  20                 	db	32
  2982  00FEEE  4C                 	db	76	;'L'
  2983  00FEEF  41                 	db	65	;'A'
  2984  00FEF0  20                 	db	32
  2985  00FEF1  25                 	db	37
  2986  00FEF2  32                 	db	50	;'2'
  2987  00FEF3  2E                 	db	46
  2988  00FEF4  32                 	db	50	;'2'
  2989  00FEF5  66                 	db	102	;'f'
  2990  00FEF6  20                 	db	32
  2991  00FEF7  00                 	db	0
  2992  00FEF8                     STR_28:
  2993                           
  2994                           ; BSR set to: 57
  2995  00FEF8  50                 	db	80	;'P'
  2996  00FEF9  56                 	db	86	;'V'
  2997  00FEFA  20                 	db	32
  2998  00FEFB  25                 	db	37
  2999  00FEFC  32                 	db	50	;'2'
  3000  00FEFD  2E                 	db	46
  3001  00FEFE  32                 	db	50	;'2'
  3002  00FEFF  66                 	db	102	;'f'
  3003  00FF00  20                 	db	32
  3004  00FF01  50                 	db	80	;'P'
  3005  00FF02  41                 	db	65	;'A'
  3006  00FF03  20                 	db	32
  3007  00FF04  25                 	db	37
  3008  00FF05  32                 	db	50	;'2'
  3009  00FF06  2E                 	db	46
  3010  00FF07  32                 	db	50	;'2'
  3011  00FF08  66                 	db	102	;'f'
  3012  00FF09  20                 	db	32
  3013  00FF0A  00                 	db	0
  3014  00FF0B                     STR_8:
  3015                           
  3016                           ; BSR set to: 57
  3017  00FF0B  42                 	db	66	;'B'
  3018  00FF0C  56                 	db	86	;'V'
  3019  00FF0D  20                 	db	32
  3020  00FF0E  25                 	db	37
  3021  00FF0F  32                 	db	50	;'2'
  3022  00FF10  2E                 	db	46
  3023  00FF11  34                 	db	52	;'4'
  3024  00FF12  66                 	db	102	;'f'
  3025  00FF13  20                 	db	32
  3026  00FF14  20                 	db	32
  3027  00FF15  20                 	db	32
  3028  00FF16  20                 	db	32
  3029  00FF17  20                 	db	32
  3030  00FF18  20                 	db	32
  3031  00FF19  20                 	db	32
  3032  00FF1A  20                 	db	32
  3033  00FF1B  20                 	db	32
  3034  00FF1C  00                 	db	0
  3035  00FF1D                     STR_4:
  3036                           
  3037                           ; BSR set to: 57
  3038  00FF1D  20                 	db	32
  3039  00FF1E  4E                 	db	78	;'N'
  3040  00FF1F  53                 	db	83	;'S'
  3041  00FF20  41                 	db	65	;'A'
  3042  00FF21  53                 	db	83	;'S'
  3043  00FF22  50                 	db	80	;'P'
  3044  00FF23  4F                 	db	79	;'O'
  3045  00FF24  4F                 	db	79	;'O'
  3046  00FF25  4B                 	db	75	;'K'
  3047  00FF26  20                 	db	32
  3048  00FF27  20                 	db	32
  3049  00FF28  20                 	db	32
  3050  00FF29  20                 	db	32
  3051  00FF2A  20                 	db	32
  3052  00FF2B  20                 	db	32
  3053  00FF2C  20                 	db	32
  3054  00FF2D  00                 	db	0
  3055  00FF2E                     STR_12:
  3056                           
  3057                           ; BSR set to: 57
  3058  00FF2E  42                 	db	66	;'B'
  3059  00FF2F  61                 	db	97	;'a'
  3060  00FF30  74                 	db	116	;'t'
  3061  00FF31  74                 	db	116	;'t'
  3062  00FF32  65                 	db	101	;'e'
  3063  00FF33  72                 	db	114	;'r'
  3064  00FF34  79                 	db	121	;'y'
  3065  00FF35  20                 	db	32
  3066  00FF36  45                 	db	69	;'E'
  3067  00FF37  53                 	db	83	;'S'
  3068  00FF38  52                 	db	82	;'R'
  3069  00FF39  20                 	db	32
  3070  00FF3A  20                 	db	32
  3071  00FF3B  20                 	db	32
  3072  00FF3C  20                 	db	32
  3073  00FF3D  20                 	db	32
  3074  00FF3E  00                 	db	0
  3075  00FF3F                     STR_13:
  3076                           
  3077                           ; BSR set to: 57
  3078  00FF3F  43                 	db	67	;'C'
  3079  00FF40  61                 	db	97	;'a'
  3080  00FF41  6C                 	db	108	;'l'
  3081  00FF42  63                 	db	99	;'c'
  3082  00FF43  75                 	db	117	;'u'
  3083  00FF44  6C                 	db	108	;'l'
  3084  00FF45  61                 	db	97	;'a'
  3085  00FF46  74                 	db	116	;'t'
  3086  00FF47  69                 	db	105	;'i'
  3087  00FF48  6F                 	db	111	;'o'
  3088  00FF49  6E                 	db	110	;'n'
  3089  00FF4A  20                 	db	32
  3090  00FF4B  20                 	db	32
  3091  00FF4C  20                 	db	32
  3092  00FF4D  20                 	db	32
  3093  00FF4E  20                 	db	32
  3094  00FF4F  00                 	db	0
  3095  00FF50                     STR_1:
  3096                           
  3097                           ; BSR set to: 57
  3098  00FF50  20                 	db	32
  3099  00FF51  4D                 	db	77	;'M'
  3100  00FF52  42                 	db	66	;'B'
  3101  00FF53  4D                 	db	77	;'M'
  3102  00FF54  43                 	db	67	;'C'
  3103  00FF55  20                 	db	32
  3104  00FF56  53                 	db	83	;'S'
  3105  00FF57  4F                 	db	79	;'O'
  3106  00FF58  4C                 	db	76	;'L'
  3107  00FF59  41                 	db	65	;'A'
  3108  00FF5A  52                 	db	82	;'R'
  3109  00FF5B  4D                 	db	77	;'M'
  3110  00FF5C  4F                 	db	79	;'O'
  3111  00FF5D  4E                 	db	78	;'N'
  3112  00FF5E  20                 	db	32
  3113  00FF5F  20                 	db	32
  3114  00FF60  00                 	db	0
  3115  00FF61                     STR_21:
  3116                           
  3117                           ; BSR set to: 57
  3118  00FF61  25                 	db	37
  3119  00FF62  64                 	db	100	;'d'
  3120  00FF63  20                 	db	32
  3121  00FF64  25                 	db	37
  3122  00FF65  32                 	db	50	;'2'
  3123  00FF66  2E                 	db	46
  3124  00FF67  34                 	db	52	;'4'
  3125  00FF68  66                 	db	102	;'f'
  3126  00FF69  2C                 	db	44
  3127  00FF6A  20                 	db	32
  3128  00FF6B  25                 	db	37
  3129  00FF6C  64                 	db	100	;'d'
  3130  00FF6D  20                 	db	32
  3131  00FF6E  20                 	db	32
  3132  00FF6F  20                 	db	32
  3133  00FF70  23                 	db	35
  3134  00FF71  00                 	db	0
  3135  00FF72                     STR_14:
  3136                           
  3137                           ; BSR set to: 57
  3138  00FF72  43                 	db	67	;'C'
  3139  00FF73  68                 	db	104	;'h'
  3140  00FF74  65                 	db	101	;'e'
  3141  00FF75  63                 	db	99	;'c'
  3142  00FF76  6B                 	db	107	;'k'
  3143  00FF77  20                 	db	32
  3144  00FF78  33                 	db	51	;'3'
  3145  00FF79  30                 	db	48	;'0'
  3146  00FF7A  20                 	db	32
  3147  00FF7B  73                 	db	115	;'s'
  3148  00FF7C  65                 	db	101	;'e'
  3149  00FF7D  63                 	db	99	;'c'
  3150  00FF7E  6F                 	db	111	;'o'
  3151  00FF7F  6E                 	db	110	;'n'
  3152  00FF80  64                 	db	100	;'d'
  3153  00FF81  73                 	db	115	;'s'
  3154  00FF82  00                 	db	0
  3155  00FF83                     STR_19:
  3156                           
  3157                           ; BSR set to: 57
  3158  00FF83  25                 	db	37
  3159  00FF84  64                 	db	100	;'d'
  3160  00FF85  20                 	db	32
  3161  00FF86  25                 	db	37
  3162  00FF87  32                 	db	50	;'2'
  3163  00FF88  2E                 	db	46
  3164  00FF89  34                 	db	52	;'4'
  3165  00FF8A  66                 	db	102	;'f'
  3166  00FF8B  20                 	db	32
  3167  00FF8C  20                 	db	32
  3168  00FF8D  20                 	db	32
  3169  00FF8E  25                 	db	37
  3170  00FF8F  64                 	db	100	;'d'
  3171  00FF90  20                 	db	32
  3172  00FF91  20                 	db	32
  3173  00FF92  00                 	db	0
  3174  00FF93                     STR_52:
  3175                           
  3176                           ; BSR set to: 57
  3177  00FF93  76                 	db	118	;'v'
  3178  00FF94  74                 	db	116	;'t'
  3179  00FF95  65                 	db	101	;'e'
  3180  00FF96  72                 	db	114	;'r'
  3181  00FF97  6D                 	db	109	;'m'
  3182  00FF98  20                 	db	32
  3183  00FF99  25                 	db	37
  3184  00FF9A  78                 	db	120	;'x'
  3185  00FF9B  3A                 	db	58	;':'
  3186  00FF9C  25                 	db	37
  3187  00FF9D  78                 	db	120	;'x'
  3188  00FF9E  20                 	db	32
  3189  00FF9F  20                 	db	32
  3190  00FFA0  20                 	db	32
  3191  00FFA1  00                 	db	0
  3192  00FFA2                     STR_2:
  3193                           
  3194                           ; BSR set to: 57
  3195  00FFA2  20                 	db	32
  3196  00FFA3  56                 	db	86	;'V'
  3197  00FFA4  65                 	db	101	;'e'
  3198  00FFA5  72                 	db	114	;'r'
  3199  00FFA6  73                 	db	115	;'s'
  3200  00FFA7  69                 	db	105	;'i'
  3201  00FFA8  6F                 	db	111	;'o'
  3202  00FFA9  6E                 	db	110	;'n'
  3203  00FFAA  20                 	db	32
  3204  00FFAB  25                 	db	37
  3205  00FFAC  73                 	db	115	;'s'
  3206  00FFAD  20                 	db	32
  3207  00FFAE  20                 	db	32
  3208  00FFAF  20                 	db	32
  3209  00FFB0  00                 	db	0
  3210  00FFB1                     STR_46:
  3211                           
  3212                           ; BSR set to: 57
  3213  00FFB1  44                 	db	68	;'D'
  3214  00FFB2  65                 	db	101	;'e'
  3215  00FFB3  63                 	db	99	;'c'
  3216  00FFB4  20                 	db	32
  3217  00FFB5  31                 	db	49	;'1'
  3218  00FFB6  38                 	db	56	;'8'
  3219  00FFB7  20                 	db	32
  3220  00FFB8  32                 	db	50	;'2'
  3221  00FFB9  30                 	db	48	;'0'
  3222  00FFBA  31                 	db	49	;'1'
  3223  00FFBB  39                 	db	57	;'9'
  3224  00FFBC  00                 	db	0
  3225  00FFBD                     STR_50:
  3226                           
  3227                           ; BSR set to: 57
  3228  00FFBD  25                 	db	37
  3229  00FFBE  73                 	db	115	;'s'
  3230  00FFBF  20                 	db	32
  3231  00FFC0  20                 	db	32
  3232  00FFC1  20                 	db	32
  3233  00FFC2  20                 	db	32
  3234  00FFC3  20                 	db	32
  3235  00FFC4  20                 	db	32
  3236  00FFC5  20                 	db	32
  3237  00FFC6  00                 	db	0
  3238  00FFC7                     STR_47:
  3239                           
  3240                           ; BSR set to: 57
  3241  00FFC7  31                 	db	49	;'1'
  3242  00FFC8  33                 	db	51	;'3'
  3243  00FFC9  3A                 	db	58	;':'
  3244  00FFCA  30                 	db	48	;'0'
  3245  00FFCB  39                 	db	57	;'9'
  3246  00FFCC  3A                 	db	58	;':'
  3247  00FFCD  31                 	db	49	;'1'
  3248  00FFCE  32                 	db	50	;'2'
  3249  00FFCF  00                 	db	0
  3250  00FFD0                     STR_3:
  3251                           
  3252                           ; BSR set to: 57
  3253  00FFD0  31                 	db	49	;'1'
  3254  00FFD1  2E                 	db	46
  3255  00FFD2  30                 	db	48	;'0'
  3256  00FFD3  30                 	db	48	;'0'
  3257  00FFD4  36                 	db	54	;'6'
  3258  00FFD5  00                 	db	0
  3259  00FFD6                     STR_66:
  3260                           
  3261                           ; BSR set to: 57
  3262  00FFD6  49                 	db	73	;'I'
  3263  00FFD7  4E                 	db	78	;'N'
  3264  00FFD8  46                 	db	70	;'F'
  3265  00FFD9  00                 	db	0
  3266  00FFDA                     STR_70:
  3267                           
  3268                           ; BSR set to: 57
  3269  00FFDA  4E                 	db	78	;'N'
  3270  00FFDB  41                 	db	65	;'A'
  3271  00FFDC  4E                 	db	78	;'N'
  3272  00FFDD  00                 	db	0
  3273  00FFDE                     STR_67:
  3274                           
  3275                           ; BSR set to: 57
  3276  00FFDE  69                 	db	105	;'i'
  3277  00FFDF  6E                 	db	110	;'n'
  3278  00FFE0  66                 	db	102	;'f'
  3279  00FFE1  00                 	db	0
  3280  00FFE2                     STR_71:
  3281                           
  3282                           ; BSR set to: 57
  3283  00FFE2  6E                 	db	110	;'n'
  3284  00FFE3  61                 	db	97	;'a'
  3285  00FFE4  6E                 	db	110	;'n'
  3286  00FFE5  00                 	db	0
  3287  00FFE6                     STR_97:
  3288                           
  3289                           ; BSR set to: 57
  3290  00FFE6  6C                 	db	108	;'l'
  3291  00FFE7  58                 	db	88	;'X'
  3292  00FFE8  00                 	db	0
  3293  00FFE9                     STR_74:
  3294                           
  3295                           ; BSR set to: 57
  3296  00FFE9  6C                 	db	108	;'l'
  3297  00FFEA  64                 	db	100	;'d'
  3298  00FFEB  00                 	db	0
  3299  00FFEC                     STR_83:
  3300                           
  3301                           ; BSR set to: 57
  3302  00FFEC  6C                 	db	108	;'l'
  3303  00FFED  66                 	db	102	;'f'
  3304  00FFEE  00                 	db	0
  3305  00FFEF                     STR_78:
  3306                           
  3307                           ; BSR set to: 57
  3308  00FFEF  6C                 	db	108	;'l'
  3309  00FFF0  69                 	db	105	;'i'
  3310  00FFF1  00                 	db	0
  3311  00FFF2                     STR_88:
  3312                           
  3313                           ; BSR set to: 57
  3314  00FFF2  6C                 	db	108	;'l'
  3315  00FFF3  75                 	db	117	;'u'
  3316  00FFF4  00                 	db	0
  3317  00FFF5                     STR_93:
  3318                           
  3319                           ; BSR set to: 57
  3320  00FFF5  6C                 	db	108	;'l'
  3321  00FFF6  78                 	db	120	;'x'
  3322  00FFF7  00                 	db	0
  3323  00FFF8                     STR_44:
  3324                           
  3325                           ; BSR set to: 57
  3326  00FFF8  25                 	db	37
  3327  00FFF9  63                 	db	99	;'c'
  3328  00FFFA  00                 	db	0
  3329  00FFFB                     STR_43:
  3330                           
  3331                           ; BSR set to: 57
  3332  00FFFB  25                 	db	37
  3333  00FFFC  73                 	db	115	;'s'
  3334  00FFFD  00                 	db	0
  3335  0000                     
  3336                           ; #config settings
  3337  00FFFE  00                 	db	0	; dummy byte at the end
  3338  0000                     
  3339                           	psect	cinit
  3340  019302                     __pcinit:
  3341                           	opt callstack 0
  3342  019302                     start_initialization:
  3343                           	opt callstack 0
  3344  019302                     __initialization:
  3345                           	opt callstack 0
  3346                           
  3347                           ; Initialize objects allocated to BIGRAM (512 bytes)
  3348                           ; load TBLPTR registers with __pidataBIGRAM
  3349  019302  0EB8               	movlw	low __pidataBIGRAM
  3350  019304  6EF6               	movwf	tblptrl,c
  3351  019306  0E7B               	movlw	high __pidataBIGRAM
  3352  019308  6EF7               	movwf	tblptrh,c
  3353  01930A  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  3354  01930C  6EF8               	movwf	tblptru,c
  3355  01930E  EE01  F1FF         	lfsr	0,__pdataBIGRAM
  3356  019312  EE20 F200          	lfsr	2,512
  3357  019316                     copy_data0:
  3358  019316  0009               	tblrd		*+
  3359  019318  006F FFD7 FFEE     	movff	tablat,postinc0
  3360  01931E  50DD               	movf	postdec2,w,c
  3361  019320  50D9               	movf	fsr2l,w,c
  3362  019322  E1F9               	bnz	copy_data0
  3363  019324  50DA               	movf	fsr2h,w,c
  3364  019326  E1F7               	bnz	copy_data0
  3365                           
  3366                           ; Initialize objects allocated to BANK2 (189 bytes)
  3367                           ; load TBLPTR registers with __pidataBANK2
  3368  019328  0E7C               	movlw	low __pidataBANK2
  3369  01932A  6EF6               	movwf	tblptrl,c
  3370  01932C  0E9A               	movlw	high __pidataBANK2
  3371  01932E  6EF7               	movwf	tblptrh,c
  3372  019330  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  3373  019332  6EF8               	movwf	tblptru,c
  3374  019334  EE00  F200         	lfsr	0,__pdataBANK2
  3375  019338  EE20 F0BD          	lfsr	2,189
  3376  01933C                     copy_data1:
  3377  01933C  0009               	tblrd		*+
  3378  01933E  006F FFD7 FFEE     	movff	tablat,postinc0
  3379  019344  50DD               	movf	postdec2,w,c
  3380  019346  50D9               	movf	fsr2l,w,c
  3381  019348  E1F9               	bnz	copy_data1
  3382                           
  3383                           ; Initialize objects allocated to BANK1 (247 bytes)
  3384                           ; load TBLPTR registers with __pidataBANK1
  3385  01934A  0E1C               	movlw	low __pidataBANK1
  3386  01934C  6EF6               	movwf	tblptrl,c
  3387  01934E  0E96               	movlw	high __pidataBANK1
  3388  019350  6EF7               	movwf	tblptrh,c
  3389  019352  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  3390  019354  6EF8               	movwf	tblptru,c
  3391  019356  EE00  F100         	lfsr	0,__pdataBANK1
  3392  01935A  EE20 F0F7          	lfsr	2,247
  3393  01935E                     copy_data2:
  3394  01935E  0009               	tblrd		*+
  3395  019360  006F FFD7 FFEE     	movff	tablat,postinc0
  3396  019366  50DD               	movf	postdec2,w,c
  3397  019368  50D9               	movf	fsr2l,w,c
  3398  01936A  E1F9               	bnz	copy_data2
  3399                           
  3400                           ; Initialize objects allocated to BANK0 (54 bytes)
  3401                           ; load TBLPTR registers with __pidataBANK0
  3402  01936C  0ED0               	movlw	low __pidataBANK0
  3403  01936E  6EF6               	movwf	tblptrl,c
  3404  019370  0EAD               	movlw	high __pidataBANK0
  3405  019372  6EF7               	movwf	tblptrh,c
  3406  019374  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  3407  019376  6EF8               	movwf	tblptru,c
  3408  019378  EE00  F0C4         	lfsr	0,__pdataBANK0
  3409  01937C  EE20 F036          	lfsr	2,54
  3410  019380                     copy_data3:
  3411  019380  0009               	tblrd		*+
  3412  019382  006F FFD7 FFEE     	movff	tablat,postinc0
  3413  019388  50DD               	movf	postdec2,w,c
  3414  01938A  50D9               	movf	fsr2l,w,c
  3415  01938C  E1F9               	bnz	copy_data3
  3416                           
  3417                           ; Clear objects allocated to BIGRAM (482 bytes)
  3418  01938E  EE01  F3FF         	lfsr	0,__pbssBIGRAM
  3419  019392  EE20 F1E2          	lfsr	2,482
  3420  019396                     clear_0:
  3421  019396  6AEE               	clrf	postinc0,c
  3422  019398  50DD               	movf	postdec2,w,c
  3423  01939A  50D9               	movf	fsr2l,w,c
  3424  01939C  E1FC               	bnz	clear_0
  3425  01939E  50DA               	movf	fsr2h,w,c
  3426  0193A0  E1FA               	bnz	clear_0
  3427                           
  3428                           ; Clear objects allocated to BANK5 (255 bytes)
  3429  0193A2  EE01  F100         	lfsr	0,__pbssBANK5
  3430  0193A6  EE20 F0FF          	lfsr	2,255
  3431  0193AA                     clear_1:
  3432  0193AA  6AEE               	clrf	postinc0,c
  3433  0193AC  50DD               	movf	postdec2,w,c
  3434  0193AE  50D9               	movf	fsr2l,w,c
  3435  0193B0  E1FC               	bnz	clear_1
  3436  0193B2  50DA               	movf	fsr2h,w,c
  3437  0193B4  E1FA               	bnz	clear_1
  3438                           
  3439                           ; Clear objects allocated to BANK4 (134 bytes)
  3440  0193B6  EE01  F000         	lfsr	0,__pbssBANK4
  3441  0193BA  0E86               	movlw	134
  3442  0193BC                     clear_2:
  3443  0193BC  6AEE               	clrf	postinc0,c
  3444  0193BE  06E8               	decf	wreg,f,c
  3445  0193C0  E1FD               	bnz	clear_2
  3446                           
  3447                           ; Clear objects allocated to BANK3 (228 bytes)
  3448  0193C2  EE00  F300         	lfsr	0,__pbssBANK3
  3449  0193C6  0EE4               	movlw	228
  3450  0193C8                     clear_3:
  3451  0193C8  6AEE               	clrf	postinc0,c
  3452  0193CA  06E8               	decf	wreg,f,c
  3453  0193CC  E1FD               	bnz	clear_3
  3454                           
  3455                           ; Clear objects allocated to BANK2 (67 bytes)
  3456  0193CE  EE00  F2BD         	lfsr	0,__pbssBANK2
  3457  0193D2  0E43               	movlw	67
  3458  0193D4                     clear_4:
  3459  0193D4  6AEE               	clrf	postinc0,c
  3460  0193D6  06E8               	decf	wreg,f,c
  3461  0193D8  E1FD               	bnz	clear_4
  3462                           
  3463                           ; Clear objects allocated to BANK1 (8 bytes)
  3464  0193DA  EE00  F1F7         	lfsr	0,__pbssBANK1
  3465  0193DE  0E08               	movlw	8
  3466  0193E0                     clear_5:
  3467  0193E0  6AEE               	clrf	postinc0,c
  3468  0193E2  06E8               	decf	wreg,f,c
  3469  0193E4  E1FD               	bnz	clear_5
  3470                           
  3471                           ; Clear objects allocated to BANK0 (100 bytes)
  3472  0193E6  EE00  F060         	lfsr	0,__pbssBANK0
  3473  0193EA  0E64               	movlw	100
  3474  0193EC                     clear_6:
  3475  0193EC  6AEE               	clrf	postinc0,c
  3476  0193EE  06E8               	decf	wreg,f,c
  3477  0193F0  E1FD               	bnz	clear_6
  3478                           
  3479                           ; Clear objects allocated to COMRAM (24 bytes)
  3480  0193F2  EE00  F048         	lfsr	0,__pbssCOMRAM
  3481  0193F6  0E18               	movlw	24
  3482  0193F8                     clear_7:
  3483  0193F8  6AEE               	clrf	postinc0,c
  3484  0193FA  06E8               	decf	wreg,f,c
  3485  0193FC  E1FD               	bnz	clear_7
  3486                           
  3487                           ;
  3488                           ; Setup IVTBASE
  3489                           ;
  3490  0193FE  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  3491  019400  6ED5               	movwf	213,c
  3492  019402  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  3493  019404  6ED6               	movwf	214,c
  3494  019406  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  3495  019408  6ED7               	movwf	215,c
  3496  01940A                     end_of_initialization:
  3497                           	opt callstack 0
  3498  01940A                     __end_of__initialization:
  3499                           	opt callstack 0
  3500  01940A  0100               	movlb	0
  3501  01940C  EF22  F089         	goto	_main	;jump to C main() function
  3502                           
  3503                           	psect	bssCOMRAM
  3504  000048                     __pbssCOMRAM:
  3505                           	opt callstack 0
  3506  000048                     _width:
  3507                           	opt callstack 0
  3508  000048                     	ds	2
  3509  00004A                     _prec:
  3510                           	opt callstack 0
  3511  00004A                     	ds	2
  3512  00004C                     _flags:
  3513                           	opt callstack 0
  3514  00004C                     	ds	2
  3515  00004E                     _timer3ReloadVal:
  3516                           	opt callstack 0
  3517  00004E                     	ds	2
  3518  000050                     TMR5_ISR@CountCallBack:
  3519                           	opt callstack 0
  3520  000050                     	ds	2
  3521  000052                     _timer5ReloadVal:
  3522                           	opt callstack 0
  3523  000052                     	ds	2
  3524  000054                     esr_check@esr_state:
  3525                           	opt callstack 0
  3526  000054                     	ds	1
  3527  000055                     Volts_to_SOC@slot:
  3528                           	opt callstack 0
  3529  000055                     	ds	1
  3530  000056                     _mode_sw:
  3531                           	opt callstack 0
  3532  000056                     	ds	1
  3533  000057                     _uart2RxCount:
  3534                           	opt callstack 0
  3535  000057                     	ds	1
  3536  000058                     _uart2RxTail:
  3537                           	opt callstack 0
  3538  000058                     	ds	1
  3539  000059                     _uart2RxHead:
  3540                           	opt callstack 0
  3541  000059                     	ds	1
  3542  00005A                     _uart2TxBufferRemaining:
  3543                           	opt callstack 0
  3544  00005A                     	ds	1
  3545  00005B                     _uart2TxTail:
  3546                           	opt callstack 0
  3547  00005B                     	ds	1
  3548  00005C                     _uart2TxHead:
  3549                           	opt callstack 0
  3550  00005C                     	ds	1
  3551  00005D                     _uart1RxCount:
  3552                           	opt callstack 0
  3553  00005D                     	ds	1
  3554  00005E                     _uart1RxTail:
  3555                           	opt callstack 0
  3556  00005E                     	ds	1
  3557  00005F                     _uart1RxHead:
  3558                           	opt callstack 0
  3559  00005F                     	ds	1
  3560                           
  3561                           	psect	bssBANK0
  3562  000060                     __pbssBANK0:
  3563                           	opt callstack 0
  3564  000060                     _spi_link:
  3565                           	opt callstack 0
  3566  000060                     	ds	12
  3567  00006C                     _uart1RxBuffer:
  3568                           	opt callstack 0
  3569  00006C                     	ds	8
  3570  000074                     spinners@s:
  3571                           	opt callstack 0
  3572  000074                     	ds	6
  3573  00007A                     floorf@F524:
  3574                           	opt callstack 0
  3575  00007A                     	ds	4
  3576  00007E                     fabsf@F463:
  3577                           	opt callstack 0
  3578  00007E                     	ds	4
  3579  000082                     ___fpclassifyf@F463:
  3580                           	opt callstack 0
  3581  000082                     	ds	4
  3582  000086                     calc_ror_data@bcror:
  3583                           	opt callstack 0
  3584  000086                     	ds	4
  3585  00008A                     calc_ror_data@bvror:
  3586                           	opt callstack 0
  3587  00008A                     	ds	4
  3588  00008E                     calc_model_data@bcror:
  3589                           	opt callstack 0
  3590  00008E                     	ds	4
  3591  000092                     calc_model_data@bvror:
  3592                           	opt callstack 0
  3593  000092                     	ds	4
  3594  000096                     _utctime:
  3595                           	opt callstack 0
  3596  000096                     	ds	4
  3597  00009A                     wdtdelay@dcount:
  3598                           	opt callstack 0
  3599  00009A                     	ds	4
  3600  00009E                     _P:
  3601                           	opt callstack 0
  3602  00009E                     	ds	4
  3603  0000A2                     _TMR3_InterruptHandler:
  3604                           	opt callstack 0
  3605  0000A2                     	ds	3
  3606  0000A5                     _TMR5_InterruptHandler:
  3607                           	opt callstack 0
  3608  0000A5                     	ds	3
  3609  0000A8                     _TMR6_InterruptHandler:
  3610                           	opt callstack 0
  3611  0000A8                     	ds	3
  3612  0000AB                     _ADCC_ADTI_InterruptHandler:
  3613                           	opt callstack 0
  3614  0000AB                     	ds	3
  3615  0000AE                     _ADCC_ADI_InterruptHandler:
  3616                           	opt callstack 0
  3617  0000AE                     	ds	3
  3618  0000B1                     _UART1_RxInterruptHandler:
  3619                           	opt callstack 0
  3620  0000B1                     	ds	3
  3621  0000B4                     _UART2_TxInterruptHandler:
  3622                           	opt callstack 0
  3623  0000B4                     	ds	3
  3624  0000B7                     _UART2_RxInterruptHandler:
  3625                           	opt callstack 0
  3626  0000B7                     	ds	3
  3627  0000BA                     _INT1_InterruptHandler:
  3628                           	opt callstack 0
  3629  0000BA                     	ds	3
  3630  0000BD                     _INT0_InterruptHandler:
  3631                           	opt callstack 0
  3632  0000BD                     	ds	3
  3633  0000C0                     _nout:
  3634                           	opt callstack 0
  3635  0000C0                     	ds	2
  3636  0000C2                     TMR3_ISR@CountCallBack:
  3637                           	opt callstack 0
  3638  0000C2                     	ds	2
  3639                           
  3640                           	psect	dataBANK0
  3641  0000C4                     __pdataBANK0:
  3642                           	opt callstack 0
  3643  0000C4                     _R:
  3644                           	opt callstack 0
  3645  0000C4                     	ds	40
  3646  0000EC                     stoa@F1166:
  3647                           	opt callstack 0
  3648  0000EC                     	ds	7
  3649  0000F3                     _H:
  3650                           	opt callstack 0
  3651  0000F3                     	ds	7
  3652                           
  3653                           	psect	bssBANK1
  3654  0001F7                     __pbssBANK1:
  3655                           	opt callstack 0
  3656  0001F7                     _seed:
  3657                           	opt callstack 0
  3658  0001F7                     	ds	8
  3659                           
  3660                           	psect	dataBANK1
  3661  000100                     __pdataBANK1:
  3662                           	opt callstack 0
  3663  000100                     _C:
  3664                           	opt callstack 0
  3665  000100                     	ds	247
  3666                           
  3667                           	psect	bssBANK2
  3668  0002BD                     __pbssBANK2:
  3669                           	opt callstack 0
  3670  0002BD                     _S:
  3671                           	opt callstack 0
  3672  0002BD                     	ds	41
  3673  0002E6                     _tickCount:
  3674                           	opt callstack 0
  3675  0002E6                     	ds	26
  3676                           
  3677                           	psect	dataBANK2
  3678  000200                     __pdataBANK2:
  3679                           	opt callstack 0
  3680  000200                     _V:
  3681                           	opt callstack 0
  3682  000200                     	ds	189
  3683                           
  3684                           	psect	bssBANK3
  3685  000300                     __pbssBANK3:
  3686                           	opt callstack 0
  3687  000300                     lp_filter@smooth:
  3688                           	opt callstack 0
  3689  000300                     	ds	84
  3690  000354                     _uart2TxBuffer:
  3691                           	opt callstack 0
  3692  000354                     	ds	64
  3693  000394                     _dbuf:
  3694                           	opt callstack 0
  3695  000394                     	ds	80
  3696                           
  3697                           	psect	bssBANK4
  3698  000400                     __pbssBANK4:
  3699                           	opt callstack 0
  3700  000400                     _ring_buf2:
  3701                           	opt callstack 0
  3702  000400                     	ds	67
  3703  000443                     _ring_buf1:
  3704                           	opt callstack 0
  3705  000443                     	ds	67
  3706                           
  3707                           	psect	bssBANK5
  3708  000500                     __pbssBANK5:
  3709                           	opt callstack 0
  3710  000500                     _uart2RxBuffer:
  3711                           	opt callstack 0
  3712  000500                     	ds	255
  3713                           
  3714                           	psect	bssBIGRAM
  3715  0007FF                     __pbssBIGRAM:
  3716                           	opt callstack 0
  3717  0007FF                     _D:
  3718                           	opt callstack 0
  3719  0007FF                     	ds	482
  3720                           
  3721                           	psect	dataBIGRAM
  3722  0005FF                     __pdataBIGRAM:
  3723                           	opt callstack 0
  3724  0005FF                     _port_data:
  3725                           	opt callstack 0
  3726  0005FF                     	ds	512
  3727                           
  3728                           	psect	cstackCOMRAM
  3729  000001                     __pcstackCOMRAM:
  3730                           	opt callstack 0
  3731  000001                     ??_ADCC_ThresholdISR:
  3732  000001                     
  3733                           ; 1 bytes @ 0x0
  3734  000001                     	ds	5
  3735  000006                     ??_TMR6_ISR:
  3736                           
  3737                           ; 1 bytes @ 0x5
  3738  000006                     	ds	1
  3739  000007                     ??_INT1_ISR:
  3740  000007                     
  3741                           ; 1 bytes @ 0x6
  3742  000007                     	ds	4
  3743  00000B                     ??_TMR5_ISR:
  3744                           
  3745                           ; 1 bytes @ 0xA
  3746  00000B                     	ds	4
  3747  00000F                     ??_TMR3_ISR:
  3748                           
  3749                           ; 1 bytes @ 0xE
  3750  00000F                     	ds	25
  3751                           
  3752 ;;
  3753 ;;Main: autosize = 13, tempsize = 0, incstack = 0, save=0
  3754 ;;
  3755 ;; *************** function _main *****************
  3756 ;; Defined at:
  3757 ;;		line 175 in file "main.c"
  3758 ;; Parameters:    Size  Location     Type
  3759 ;;		None
  3760 ;; Auto vars:     Size  Location     Type
  3761 ;;  esr_temp        4  [STACK] float 
  3762 ;;  i_esr           2  [STACK] unsigned short 
  3763 ;;  shape           1  [STACK] unsigned char 
  3764 ;;  k               1  [STACK] unsigned char 
  3765 ;;  j               1  [STACK] unsigned char 
  3766 ;;  i               1  [STACK] unsigned char 
  3767 ;;  inp_index       1  [STACK] unsigned char 
  3768 ;;  mode            1  [STACK] enum E17013
  3769 ;;  i_ror           1  [STACK] unsigned char 
  3770 ;; Return value:  Size  Location     Type
  3771 ;;                  1  [STACK] void 
  3772 ;; Registers used:
  3773 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  3774 ;; Tracked objects:
  3775 ;;		On entry : 0/0
  3776 ;;		On exit  : 0/0
  3777 ;;		Unchanged: 0/0
  3778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3783 ;;Total ram usage:        0 bytes
  3784 ;; Hardware stack levels required when called:   28
  3785 ;; This function calls:
  3786 ;;		_SYSTEM_Initialize
  3787 ;;		_StartTimer
  3788 ;;		_TimerDone
  3789 ;;		_WaitMs
  3790 ;;		___fladd
  3791 ;;		___flge
  3792 ;;		___fltol
  3793 ;;		_calc_model_data
  3794 ;;		_calc_ror_data
  3795 ;;		_check_adc_scan
  3796 ;;		_check_enter_button
  3797 ;;		_check_help
  3798 ;;		_clear_adc_scan
  3799 ;;		_clear_hid_pflags
  3800 ;;		_conv_raw_result
  3801 ;;		_convert_adc_data
  3802 ;;		_eaDogM_WriteCommand
  3803 ;;		_esr_check
  3804 ;;		_fabsf
  3805 ;;		_get_raw_result
  3806 ;;		_get_switch
  3807 ;;		_get_vterm_ptr
  3808 ;;		_hid_display
  3809 ;;		_init_bsoc
  3810 ;;		_init_display
  3811 ;;		_init_port_dma
  3812 ;;		_lp_filter
  3813 ;;		_mode_lamp_dim
  3814 ;;		_set_display_info
  3815 ;;		_set_load_relay_one
  3816 ;;		_set_load_relay_two
  3817 ;;		_set_vterm
  3818 ;;		_spinners
  3819 ;;		_sprintf
  3820 ;;		_srand
  3821 ;;		_start_adc_scan
  3822 ;;		_start_switch_handler
  3823 ;;		_static_soc
  3824 ;;		_update_lcd
  3825 ;; This function is called by:
  3826 ;;		Startup code after reset
  3827 ;; This function uses a reentrant model
  3828 ;;
  3829                           
  3830                           	psect	text0
  3831  011244                     __ptext0:
  3832                           	opt callstack 0
  3833  011244                     _main:
  3834                           	opt callstack 0
  3835                           
  3836                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  3837  011244  0E0D               	movlw	13
  3838  011246  26E1               	addwf	fsr1l,f,c
  3839  011248  0E00               	movlw	0
  3840  01124A  22E2               	addwfc	fsr1h,f,c
  3841                           
  3842                           ;main.c: 177:  UI_STATES mode;;main.c: 178:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC, i_ror;
  3843                           ;stkvar	_inp_index @ sp[(-13)+10]
  3844                           
  3845                           ;incstack = 0
  3846  01124C  0EFD               	movlw	-3
  3847  01124E  6AE3               	clrf	plusw1,c
  3848                           
  3849                           ;stkvar	_i @ sp[(-13)+9]
  3850  011250  0EFC               	movlw	-4
  3851  011252  6AE3               	clrf	plusw1,c
  3852                           
  3853                           ;stkvar	_j @ sp[(-13)+8]
  3854  011254  0EFB               	movlw	-5
  3855  011256  6AE3               	clrf	plusw1,c
  3856  011258  2AE3               	incf	plusw1,f,c
  3857                           
  3858                           ;stkvar	_k @ sp[(-13)+7]
  3859  01125A  0EFA               	movlw	-6
  3860  01125C  6AE3               	clrf	plusw1,c
  3861  01125E  82E3               	bsf	plusw1,1,c
  3862                           
  3863                           ;main.c: 181:  SYSTEM_Initialize();
  3864  011260  ECD5  F0D4         	call	_SYSTEM_Initialize	;wreg free
  3865                           
  3866                           ; BSR set to: 60
  3867                           ;main.c: 184:  (INTCON0bits.GIEH = 1);
  3868  011264  8ED2               	bsf	210,7,c	;volatile
  3869                           
  3870                           ; BSR set to: 60
  3871                           ;main.c: 187:  (INTCON0bits.GIEL = 1);
  3872  011266  8CD2               	bsf	210,6,c	;volatile
  3873                           
  3874                           ; BSR set to: 60
  3875                           ;main.c: 189:  V.ui_state = UI_STATE_INIT;
  3876  011268  0102               	movlb	2	; () banked
  3877  01126A  6B00               	clrf	_V& (0+255),b	;volatile
  3878                           
  3879                           ; BSR set to: 2
  3880                           ;main.c: 194:  WaitMs(300);
  3881  01126C  0E2C               	movlw	44
  3882  01126E  6EE6               	movwf	postinc1,c
  3883  011270  0E01               	movlw	1
  3884  011272  6EE6               	movwf	postinc1,c
  3885  011274  EC03  F0D7         	call	_WaitMs	;wreg free
  3886                           
  3887                           ;main.c: 195:  if (PORTBbits.RB0) {
  3888  011278  A0CB               	btfss	203,0,c	;volatile
  3889  01127A  D004               	goto	l12570
  3890                           
  3891                           ;main.c: 196:   mode = UI_STATE_HOST;
  3892                           ;stkvar	_mode @ sp[(-13)+11]
  3893  01127C  0EFE               	movlw	-2
  3894  01127E  6AE3               	clrf	plusw1,c
  3895  011280  2AE3               	incf	plusw1,f,c
  3896                           
  3897                           ;main.c: 197:  } else {
  3898  011282  D004               	goto	l12572
  3899  011284                     l12570:
  3900                           
  3901                           ;main.c: 198:   mode = UI_STATE_LOG;
  3902                           ;stkvar	_mode @ sp[(-13)+11]
  3903  011284  0EFE               	movlw	-2
  3904  011286  6AE3               	clrf	plusw1,c
  3905  011288  80E3               	bsf	plusw1,0,c
  3906  01128A  82E3               	bsf	plusw1,1,c	;indir
  3907  01128C                     l12572:
  3908                           
  3909                           ;main.c: 201:  if (mode == UI_STATE_HOST) {
  3910                           ;stkvar	_mode @ sp[(-13)+11]
  3911  01128C  0EFE               	movlw	-2
  3912  01128E  04E3               	decf	plusw1,w,c
  3913  011290  A4D8               	btfss	status,2,c
  3914  011292  D007               	goto	l1322
  3915                           
  3916                           ;main.c: 202:   do { LATDbits.LATD0 = 1; } while(0);
  3917  011294  80BD               	bsf	189,0,c	;volatile
  3918                           
  3919                           ;main.c: 203:   V.mode_pwm = 70;
  3920  011296  0E00               	movlw	0
  3921  011298  0102               	movlb	2	; () banked
  3922  01129A  6F96               	movwf	(_V+150)& (0+255),b	;volatile
  3923  01129C  0E46               	movlw	70
  3924  01129E  6F95               	movwf	(_V+149)& (0+255),b	;volatile
  3925                           
  3926                           ;main.c: 204:  } else {
  3927  0112A0  D004               	goto	l12576
  3928  0112A2                     l1322:
  3929  0112A2  90BD               	bcf	189,0,c	;volatile
  3930                           
  3931                           ;main.c: 206:   V.mode_pwm = 0;
  3932  0112A4  0102               	movlb	2	; () banked
  3933  0112A6  6B95               	clrf	(_V+149)& (0+255),b	;volatile
  3934  0112A8  6B96               	clrf	(_V+150)& (0+255),b	;volatile
  3935  0112AA                     l12576:
  3936                           
  3937                           ; BSR set to: 2
  3938                           ;main.c: 208:  mode_lamp_dim(V.mode_pwm);
  3939  0112AA  0060  FA57  FFE6   	movff	_V+149,postinc1
  3940  0112B0  0060  FA5B  FFE6   	movff	_V+150,postinc1
  3941  0112B6  ECCB  F0DA         	call	_mode_lamp_dim	;wreg free
  3942  0112BA  D311               	goto	l12696
  3943  0112BC                     l12578:
  3944                           
  3945                           ; BSR set to: 2
  3946                           ;main.c: 216:    init_port_dma();
  3947  0112BC  EC87  F0D7         	call	_init_port_dma	;wreg free
  3948                           
  3949                           ; BSR set to: 59
  3950                           ;main.c: 218:    init_display();
  3951  0112C0  EC8A  F0CB         	call	_init_display	;wreg free
  3952                           
  3953                           ; BSR set to: 61
  3954                           ;main.c: 219:    eaDogM_WriteCommand(0b00001100);
  3955  0112C4  0E0C               	movlw	12
  3956  0112C6  6EE6               	movwf	postinc1,c
  3957  0112C8  EC2F  F0DB         	call	_eaDogM_WriteCommand	;wreg free
  3958                           
  3959                           ; BSR set to: 0
  3960                           ;main.c: 223:    set_load_relay_one(1);
  3961  0112CC  0E01               	movlw	1
  3962  0112CE  6EE6               	movwf	postinc1,c
  3963  0112D0  EC1F  F0DB         	call	_set_load_relay_one	;wreg free
  3964                           
  3965                           ;main.c: 224:    set_load_relay_two(1);
  3966  0112D4  0E01               	movlw	1
  3967  0112D6  6EE6               	movwf	postinc1,c
  3968  0112D8  EC17  F0DB         	call	_set_load_relay_two	;wreg free
  3969                           
  3970                           ;main.c: 226:    V.ui_state = mode;
  3971                           ;stkvar	_mode @ sp[(-13)+11]
  3972  0112DC  0EFE               	movlw	-2
  3973  0112DE  006F FF8C  F200    	movff	plusw1,_V	;volatile
  3974                           
  3975                           ;main.c: 227:    srand(1957);
  3976  0112E4  0EA5               	movlw	165
  3977  0112E6  6EE6               	movwf	postinc1,c
  3978  0112E8  0E07               	movlw	7
  3979  0112EA  6EE6               	movwf	postinc1,c
  3980  0112EC  EC39  F0D7         	call	_srand	;wreg free
  3981                           
  3982                           ; BSR set to: 1
  3983                           ;main.c: 228:    set_vterm(0);
  3984  0112F0  0E00               	movlw	0
  3985  0112F2  6EE6               	movwf	postinc1,c
  3986  0112F4  EC58  F0DA         	call	_set_vterm	;wreg free
  3987                           
  3988                           ;main.c: 229:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON  ");
  3989  0112F8  0E50               	movlw	low STR_1
  3990  0112FA  6EE6               	movwf	postinc1,c
  3991  0112FC  0EFF               	movlw	high STR_1
  3992  0112FE  6EE6               	movwf	postinc1,c
  3993  011300  0E00               	movlw	0
  3994  011302  6EE6               	movwf	postinc1,c
  3995  011304  0E00               	movlw	0
  3996  011306  6EE6               	movwf	postinc1,c
  3997  011308  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  3998  01130C  0060  F0A3  FFE6   	movff	btemp,postinc1
  3999  011312  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4000  011318  0E04               	movlw	4
  4001  01131A  6EE6               	movwf	postinc1,c
  4002  01131C  EC08  F0CA         	call	_sprintf	;wreg free
  4003                           
  4004                           ; BSR set to: 0
  4005                           ;main.c: 230:    sprintf(get_vterm_ptr(1, 0), " Version %s   ", "1.006");
  4006  011320  0ED0               	movlw	low STR_3
  4007  011322  6EE6               	movwf	postinc1,c
  4008  011324  0EFF               	movlw	high STR_3
  4009  011326  6EE6               	movwf	postinc1,c
  4010  011328  0EA2               	movlw	low STR_2
  4011  01132A  6EE6               	movwf	postinc1,c
  4012  01132C  0EFF               	movlw	high STR_2
  4013  01132E  6EE6               	movwf	postinc1,c
  4014  011330  0E00               	movlw	0
  4015  011332  6EE6               	movwf	postinc1,c
  4016  011334  0E01               	movlw	1
  4017  011336  6EE6               	movwf	postinc1,c
  4018  011338  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  4019  01133C  0060  F0A3  FFE6   	movff	btemp,postinc1
  4020  011342  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4021  011348  0E06               	movlw	6
  4022  01134A  6EE6               	movwf	postinc1,c
  4023  01134C  EC08  F0CA         	call	_sprintf	;wreg free
  4024                           
  4025                           ; BSR set to: 0
  4026                           ;main.c: 231:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK       ");
  4027  011350  0E1D               	movlw	low STR_4
  4028  011352  6EE6               	movwf	postinc1,c
  4029  011354  0EFF               	movlw	high STR_4
  4030  011356  6EE6               	movwf	postinc1,c
  4031  011358  0E00               	movlw	0
  4032  01135A  6EE6               	movwf	postinc1,c
  4033  01135C  0E02               	movlw	2
  4034  01135E  6EE6               	movwf	postinc1,c
  4035  011360  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  4036  011364  0060  F0A3  FFE6   	movff	btemp,postinc1
  4037  01136A  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4038  011370  0E04               	movlw	4
  4039  011372  6EE6               	movwf	postinc1,c
  4040  011374  EC08  F0CA         	call	_sprintf	;wreg free
  4041                           
  4042                           ; BSR set to: 0
  4043                           ;main.c: 232:    sprintf(get_vterm_ptr(0, 2), "                ");
  4044  011378  0EF0               	movlw	low (STR_58+2)
  4045  01137A  6EE6               	movwf	postinc1,c
  4046  01137C  0EFD               	movlw	high (STR_58+2)
  4047  01137E  6EE6               	movwf	postinc1,c
  4048  011380  0E02               	movlw	2
  4049  011382  6EE6               	movwf	postinc1,c
  4050  011384  0E00               	movlw	0
  4051  011386  6EE6               	movwf	postinc1,c
  4052  011388  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  4053  01138C  0060  F0A3  FFE6   	movff	btemp,postinc1
  4054  011392  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4055  011398  0E04               	movlw	4
  4056  01139A  6EE6               	movwf	postinc1,c
  4057  01139C  EC08  F0CA         	call	_sprintf	;wreg free
  4058                           
  4059                           ; BSR set to: 0
  4060                           ;main.c: 233:    sprintf(get_vterm_ptr(1, 2), "                ");
  4061  0113A0  0EF0               	movlw	low (STR_58+2)
  4062  0113A2  6EE6               	movwf	postinc1,c
  4063  0113A4  0EFD               	movlw	high (STR_58+2)
  4064  0113A6  6EE6               	movwf	postinc1,c
  4065  0113A8  0E02               	movlw	2
  4066  0113AA  6EE6               	movwf	postinc1,c
  4067  0113AC  0E01               	movlw	1
  4068  0113AE  6EE6               	movwf	postinc1,c
  4069  0113B0  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  4070  0113B4  0060  F0A3  FFE6   	movff	btemp,postinc1
  4071  0113BA  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4072  0113C0  0E04               	movlw	4
  4073  0113C2  6EE6               	movwf	postinc1,c
  4074  0113C4  EC08  F0CA         	call	_sprintf	;wreg free
  4075                           
  4076                           ; BSR set to: 0
  4077                           ;main.c: 234:    sprintf(get_vterm_ptr(2, 2), "                ");
  4078  0113C8  0EF0               	movlw	low (STR_58+2)
  4079  0113CA  6EE6               	movwf	postinc1,c
  4080  0113CC  0EFD               	movlw	high (STR_58+2)
  4081  0113CE  6EE6               	movwf	postinc1,c
  4082  0113D0  0E02               	movlw	2
  4083  0113D2  6EE6               	movwf	postinc1,c
  4084  0113D4  0E02               	movlw	2
  4085  0113D6  6EE6               	movwf	postinc1,c
  4086  0113D8  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  4087  0113DC  0060  F0A3  FFE6   	movff	btemp,postinc1
  4088  0113E2  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4089  0113E8  0E04               	movlw	4
  4090  0113EA  6EE6               	movwf	postinc1,c
  4091  0113EC  EC08  F0CA         	call	_sprintf	;wreg free
  4092                           
  4093                           ; BSR set to: 0
  4094                           ;main.c: 235:    update_lcd(0);
  4095  0113F0  0E00               	movlw	0
  4096  0113F2  6EE6               	movwf	postinc1,c
  4097  0113F4  ECF9  F0C8         	call	_update_lcd	;wreg free
  4098                           
  4099                           ;main.c: 236:    WaitMs(1000);
  4100  0113F8  0EE8               	movlw	232
  4101  0113FA  6EE6               	movwf	postinc1,c
  4102  0113FC  0E03               	movlw	3
  4103  0113FE  6EE6               	movwf	postinc1,c
  4104  011400  EC03  F0D7         	call	_WaitMs	;wreg free
  4105                           
  4106                           ;main.c: 237:    StartTimer(TMR_DISPLAY, 250);
  4107  011404  0EFA               	movlw	250
  4108  011406  6EE6               	movwf	postinc1,c
  4109  011408  0E00               	movlw	0
  4110  01140A  6EE6               	movwf	postinc1,c
  4111  01140C  0E0A               	movlw	10
  4112  01140E  6EE6               	movwf	postinc1,c
  4113  011410  EC10  F0D6         	call	_StartTimer	;wreg free
  4114                           
  4115                           ;main.c: 238:    StartTimer(TMR_ADC, 200);
  4116  011414  0EC8               	movlw	200
  4117  011416  6EE6               	movwf	postinc1,c
  4118  011418  0E00               	movlw	0
  4119  01141A  6EE6               	movwf	postinc1,c
  4120  01141C  0E01               	movlw	1
  4121  01141E  6EE6               	movwf	postinc1,c
  4122  011420  EC10  F0D6         	call	_StartTimer	;wreg free
  4123                           
  4124                           ;main.c: 239:    StartTimer(TMR_INFO, 3000);
  4125  011424  0EB8               	movlw	184
  4126  011426  6EE6               	movwf	postinc1,c
  4127  011428  0E0B               	movlw	11
  4128  01142A  6EE6               	movwf	postinc1,c
  4129  01142C  0E07               	movlw	7
  4130  01142E  6EE6               	movwf	postinc1,c
  4131  011430  EC10  F0D6         	call	_StartTimer	;wreg free
  4132                           
  4133                           ;main.c: 240:    StartTimer(TMR_FLIPPER, 1500);
  4134  011434  0EDC               	movlw	220
  4135  011436  6EE6               	movwf	postinc1,c
  4136  011438  0E05               	movlw	5
  4137  01143A  6EE6               	movwf	postinc1,c
  4138  01143C  0E0B               	movlw	11
  4139  01143E  6EE6               	movwf	postinc1,c
  4140  011440  EC10  F0D6         	call	_StartTimer	;wreg free
  4141                           
  4142                           ;main.c: 241:    StartTimer(TMR_HELPDIS, 3000);
  4143  011444  0EB8               	movlw	184
  4144  011446  6EE6               	movwf	postinc1,c
  4145  011448  0E0B               	movlw	11
  4146  01144A  6EE6               	movwf	postinc1,c
  4147  01144C  0E09               	movlw	9
  4148  01144E  6EE6               	movwf	postinc1,c
  4149  011450  EC10  F0D6         	call	_StartTimer	;wreg free
  4150                           
  4151                           ;main.c: 243:    start_adc_scan();
  4152  011454  ECE8  F0D2         	call	_start_adc_scan	;wreg free
  4153                           
  4154                           ;main.c: 244:    start_switch_handler();
  4155  011458  EC39  F0DA         	call	_start_switch_handler	;wreg free
  4156                           
  4157                           ; BSR set to: 57
  4158                           ;main.c: 245:    WaitMs(1000);
  4159  01145C  0EE8               	movlw	232
  4160  01145E  6EE6               	movwf	postinc1,c
  4161  011460  0E03               	movlw	3
  4162  011462  6EE6               	movwf	postinc1,c
  4163  011464  EC03  F0D7         	call	_WaitMs	;wreg free
  4164                           
  4165                           ;main.c: 250:    i_ror = 1;
  4166                           ;stkvar	_i_ror @ sp[(-13)+12]
  4167  011468  0EFF               	movlw	-1
  4168  01146A  6AE3               	clrf	plusw1,c
  4169  01146C  2AE3               	incf	plusw1,f,c
  4170  01146E                     l12628:
  4171                           
  4172                           ;main.c: 252:     calc_ror_data();
  4173  01146E  EC45  F0C1         	call	_calc_ror_data	;wreg free
  4174                           
  4175                           ;main.c: 253:     sprintf(get_vterm_ptr(1, 0), "BV %2.4f         ", conv_raw_result(V_BA
      +                          T, CONV));
  4176  011472  0E00               	movlw	0
  4177  011474  6EE6               	movwf	postinc1,c
  4178  011476  0E04               	movlw	4
  4179  011478  6EE6               	movwf	postinc1,c
  4180  01147A  EC58  F0A7         	call	_conv_raw_result	;wreg free
  4181  01147E  0060  F0A3  FFE6   	movff	btemp,postinc1
  4182  011484  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4183  01148A  0060  F0AB  FFE6   	movff	btemp+2,postinc1
  4184  011490  0060  F0AF  FFE6   	movff	btemp+3,postinc1
  4185  011496  0E0B               	movlw	low STR_8
  4186  011498  6EE6               	movwf	postinc1,c
  4187  01149A  0EFF               	movlw	high STR_8
  4188  01149C  6EE6               	movwf	postinc1,c
  4189  01149E  0E00               	movlw	0
  4190  0114A0  6EE6               	movwf	postinc1,c
  4191  0114A2  0E01               	movlw	1
  4192  0114A4  6EE6               	movwf	postinc1,c
  4193  0114A6  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  4194  0114AA  0060  F0A3  FFE6   	movff	btemp,postinc1
  4195  0114B0  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4196  0114B6  0E08               	movlw	8
  4197  0114B8  6EE6               	movwf	postinc1,c
  4198  0114BA  EC08  F0CA         	call	_sprintf	;wreg free
  4199                           
  4200                           ; BSR set to: 0
  4201                           ;main.c: 254:     sprintf(get_vterm_ptr(2, 0), "S S%cC %d %2.4f       ", spinners(5, 0),
      +                           i_ror, C.bv_ror);
  4202  0114BE  0060  F5A3  FFE6   	movff	_C+104,postinc1
  4203  0114C4  0060  F5A7  FFE6   	movff	_C+105,postinc1
  4204  0114CA  0060  F5AB  FFE6   	movff	_C+106,postinc1
  4205  0114D0  0060  F5AF  FFE6   	movff	_C+107,postinc1
  4206                           
  4207                           ;stkvar	_i_ror @ sp[(-17)+12]
  4208  0114D6  0EFB               	movlw	-5
  4209  0114D8  50E3               	movf	plusw1,w,c
  4210  0114DA  6EE6               	movwf	postinc1,c
  4211  0114DC  0E00               	movlw	0
  4212  0114DE  6EE6               	movwf	postinc1,c
  4213  0114E0  0E00               	movlw	0
  4214  0114E2  6EE6               	movwf	postinc1,c
  4215  0114E4  0E05               	movlw	5
  4216  0114E6  6EE6               	movwf	postinc1,c
  4217  0114E8  ECFF  F0CB         	call	_spinners	;wreg free
  4218  0114EC  5028               	movf	btemp^0,w,c
  4219  0114EE  6EE6               	movwf	postinc1,c
  4220  0114F0  0E00               	movlw	0
  4221  0114F2  6EE6               	movwf	postinc1,c
  4222  0114F4  0E08               	movlw	low STR_9
  4223  0114F6  6EE6               	movwf	postinc1,c
  4224  0114F8  0EFD               	movlw	high STR_9
  4225  0114FA  6EE6               	movwf	postinc1,c
  4226  0114FC  0E00               	movlw	0
  4227  0114FE  6EE6               	movwf	postinc1,c
  4228  011500  0E02               	movlw	2
  4229  011502  6EE6               	movwf	postinc1,c
  4230  011504  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  4231  011508  0060  F0A3  FFE6   	movff	btemp,postinc1
  4232  01150E  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4233  011514  0E0C               	movlw	12
  4234  011516  6EE6               	movwf	postinc1,c
  4235  011518  EC08  F0CA         	call	_sprintf	;wreg free
  4236                           
  4237                           ; BSR set to: 0
  4238                           ;main.c: 255:     update_lcd(0);
  4239  01151C  0E00               	movlw	0
  4240  01151E  6EE6               	movwf	postinc1,c
  4241  011520  ECF9  F0C8         	call	_update_lcd	;wreg free
  4242                           
  4243                           ;main.c: 256:     WaitMs(2000);
  4244  011524  0ED0               	movlw	208
  4245  011526  6EE6               	movwf	postinc1,c
  4246  011528  0E07               	movlw	7
  4247  01152A  6EE6               	movwf	postinc1,c
  4248  01152C  EC03  F0D7         	call	_WaitMs	;wreg free
  4249                           
  4250                           ;main.c: 257:     clear_adc_scan();
  4251  011530  EC7D  F0DB         	call	_clear_adc_scan	;wreg free
  4252                           
  4253                           ; BSR set to: 0
  4254                           ;main.c: 258:     start_adc_scan();
  4255  011534  ECE8  F0D2         	call	_start_adc_scan	;wreg free
  4256                           
  4257                           ;main.c: 259:     WaitMs(500);
  4258  011538  0EF4               	movlw	244
  4259  01153A  6EE6               	movwf	postinc1,c
  4260  01153C  0E01               	movlw	1
  4261  01153E  6EE6               	movwf	postinc1,c
  4262  011540  EC03  F0D7         	call	_WaitMs	;wreg free
  4263                           
  4264                           ;main.c: 260:    } while ((i_ror++ < 30) && (C.bv_ror > 0.0140));
  4265                           ;stkvar	_i_ror @ sp[(-13)+12]
  4266  011544  0EFF               	movlw	-1
  4267  011546  006F FF8C  F033    	movff	plusw1,btemp+11
  4268  01154C  2A33               	incf	(btemp+11)^0,f,c
  4269  01154E  0060  F0CF  FFE3   	movff	btemp+11,plusw1
  4270  011554  0633               	decf	(btemp+11)^0,f,c
  4271  011556  0E1E               	movlw	30
  4272  011558  6033               	cpfslt	(btemp+11)^0,c
  4273  01155A  D018               	goto	u12090
  4274  01155C  0060  F5A3  FFE6   	movff	_C+104,postinc1
  4275  011562  0060  F5A7  FFE6   	movff	_C+105,postinc1
  4276  011568  0060  F5AB  FFE6   	movff	_C+106,postinc1
  4277  01156E  0060  F5AF  FFE6   	movff	_C+107,postinc1
  4278  011574  0E42               	movlw	66
  4279  011576  6EE6               	movwf	postinc1,c
  4280  011578  0E60               	movlw	96
  4281  01157A  6EE6               	movwf	postinc1,c
  4282  01157C  0E65               	movlw	101
  4283  01157E  6EE6               	movwf	postinc1,c
  4284  011580  0E3C               	movlw	60
  4285  011582  6EE6               	movwf	postinc1,c
  4286  011584  EC70  F0C3         	call	___flge	;wreg free
  4287  011588  A028               	btfss	btemp& (0+255),0,c
  4288  01158A  D771               	goto	l12628
  4289  01158C                     u12090:
  4290                           
  4291                           ;main.c: 262:    static_soc();
  4292  01158C  ECAA  F0D9         	call	_static_soc	;wreg free
  4293                           
  4294                           ; BSR set to: 1
  4295                           ;main.c: 263:    init_bsoc();
  4296  011590  ECB8  F0C2         	call	_init_bsoc	;wreg free
  4297                           
  4298                           ;main.c: 264:    set_load_relay_one(0);
  4299  011594  0E00               	movlw	0
  4300  011596  6EE6               	movwf	postinc1,c
  4301  011598  EC1F  F0DB         	call	_set_load_relay_one	;wreg free
  4302                           
  4303                           ;main.c: 265:    set_load_relay_two(0);
  4304  01159C  0E00               	movlw	0
  4305  01159E  6EE6               	movwf	postinc1,c
  4306  0115A0  EC17  F0DB         	call	_set_load_relay_two	;wreg free
  4307                           
  4308                           ;main.c: 266:    sprintf(get_vterm_ptr(0, 0), "Static SOC %d        ", C.soc);
  4309  0115A4  0060  F6BB  FFE6   	movff	_C+174,postinc1
  4310  0115AA  0060  F6BF  FFE6   	movff	_C+175,postinc1
  4311  0115B0  0E35               	movlw	low STR_10
  4312  0115B2  6EE6               	movwf	postinc1,c
  4313  0115B4  0EFD               	movlw	high STR_10
  4314  0115B6  6EE6               	movwf	postinc1,c
  4315  0115B8  0E00               	movlw	0
  4316  0115BA  6EE6               	movwf	postinc1,c
  4317  0115BC  0E00               	movlw	0
  4318  0115BE  6EE6               	movwf	postinc1,c
  4319  0115C0  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  4320  0115C4  0060  F0A3  FFE6   	movff	btemp,postinc1
  4321  0115CA  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4322  0115D0  0E06               	movlw	6
  4323  0115D2  6EE6               	movwf	postinc1,c
  4324  0115D4  EC08  F0CA         	call	_sprintf	;wreg free
  4325                           
  4326                           ; BSR set to: 0
  4327                           ;main.c: 267:    sprintf(get_vterm_ptr(1, 0), "Battery Ah %3.2f     ", C.dynamic_ah);
  4328  0115D8  0060  F633  FFE6   	movff	_C+140,postinc1
  4329  0115DE  0060  F637  FFE6   	movff	_C+141,postinc1
  4330  0115E4  0060  F63B  FFE6   	movff	_C+142,postinc1
  4331  0115EA  0060  F63F  FFE6   	movff	_C+143,postinc1
  4332  0115F0  0E4B               	movlw	low STR_11
  4333  0115F2  6EE6               	movwf	postinc1,c
  4334  0115F4  0EFD               	movlw	high STR_11
  4335  0115F6  6EE6               	movwf	postinc1,c
  4336  0115F8  0E00               	movlw	0
  4337  0115FA  6EE6               	movwf	postinc1,c
  4338  0115FC  0E01               	movlw	1
  4339  0115FE  6EE6               	movwf	postinc1,c
  4340  011600  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  4341  011604  0060  F0A3  FFE6   	movff	btemp,postinc1
  4342  01160A  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4343  011610  0E08               	movlw	8
  4344  011612  6EE6               	movwf	postinc1,c
  4345  011614  EC08  F0CA         	call	_sprintf	;wreg free
  4346                           
  4347                           ; BSR set to: 0
  4348                           ;main.c: 268:    update_lcd(0);
  4349  011618  0E00               	movlw	0
  4350  01161A  6EE6               	movwf	postinc1,c
  4351  01161C  ECF9  F0C8         	call	_update_lcd	;wreg free
  4352                           
  4353                           ;main.c: 269:    WaitMs(2000);
  4354  011620  0ED0               	movlw	208
  4355  011622  6EE6               	movwf	postinc1,c
  4356  011624  0E07               	movlw	7
  4357  011626  6EE6               	movwf	postinc1,c
  4358  011628  EC03  F0D7         	call	_WaitMs	;wreg free
  4359                           
  4360                           ;main.c: 270:    sprintf(get_vterm_ptr(0, 0), "Battery ESR     ");
  4361  01162C  0E2E               	movlw	low STR_12
  4362  01162E  6EE6               	movwf	postinc1,c
  4363  011630  0EFF               	movlw	high STR_12
  4364  011632  6EE6               	movwf	postinc1,c
  4365  011634  0E00               	movlw	0
  4366  011636  6EE6               	movwf	postinc1,c
  4367  011638  0E00               	movlw	0
  4368  01163A  6EE6               	movwf	postinc1,c
  4369  01163C  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  4370  011640  0060  F0A3  FFE6   	movff	btemp,postinc1
  4371  011646  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4372  01164C  0E04               	movlw	4
  4373  01164E  6EE6               	movwf	postinc1,c
  4374  011650  EC08  F0CA         	call	_sprintf	;wreg free
  4375                           
  4376                           ; BSR set to: 0
  4377                           ;main.c: 271:    sprintf(get_vterm_ptr(1, 0), "Calculation     ");
  4378  011654  0E3F               	movlw	low STR_13
  4379  011656  6EE6               	movwf	postinc1,c
  4380  011658  0EFF               	movlw	high STR_13
  4381  01165A  6EE6               	movwf	postinc1,c
  4382  01165C  0E00               	movlw	0
  4383  01165E  6EE6               	movwf	postinc1,c
  4384  011660  0E01               	movlw	1
  4385  011662  6EE6               	movwf	postinc1,c
  4386  011664  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  4387  011668  0060  F0A3  FFE6   	movff	btemp,postinc1
  4388  01166E  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4389  011674  0E04               	movlw	4
  4390  011676  6EE6               	movwf	postinc1,c
  4391  011678  EC08  F0CA         	call	_sprintf	;wreg free
  4392                           
  4393                           ; BSR set to: 0
  4394                           ;main.c: 272:    sprintf(get_vterm_ptr(2, 0), "Check 30 seconds");
  4395  01167C  0E72               	movlw	low STR_14
  4396  01167E  6EE6               	movwf	postinc1,c
  4397  011680  0EFF               	movlw	high STR_14
  4398  011682  6EE6               	movwf	postinc1,c
  4399  011684  0E00               	movlw	0
  4400  011686  6EE6               	movwf	postinc1,c
  4401  011688  0E02               	movlw	2
  4402  01168A  6EE6               	movwf	postinc1,c
  4403  01168C  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  4404  011690  0060  F0A3  FFE6   	movff	btemp,postinc1
  4405  011696  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4406  01169C  0E04               	movlw	4
  4407  01169E  6EE6               	movwf	postinc1,c
  4408  0116A0  EC08  F0CA         	call	_sprintf	;wreg free
  4409                           
  4410                           ; BSR set to: 0
  4411                           ;main.c: 273:    update_lcd(0);
  4412  0116A4  0E00               	movlw	0
  4413  0116A6  6EE6               	movwf	postinc1,c
  4414  0116A8  ECF9  F0C8         	call	_update_lcd	;wreg free
  4415                           
  4416                           ;main.c: 274:    uint16_t i_esr = 1;
  4417  0116AC  0E01               	movlw	1
  4418  0116AE  6E32               	movwf	(btemp+10)^0,c
  4419  0116B0  0E00               	movlw	0
  4420  0116B2  6E33               	movwf	(btemp+11)^0,c
  4421                           
  4422                           ;stkvar	_i_esr @ sp[(-13)+4]
  4423  0116B4  0EF7               	movlw	-9
  4424  0116B6  0060  F0CB  FFE3   	movff	btemp+10,plusw1
  4425  0116BC  0EF8               	movlw	-8
  4426  0116BE  0060  F0CF  FFE3   	movff	btemp+11,plusw1
  4427                           
  4428                           ;main.c: 276:    float esr_temp;;main.c: 277:    while ((esr_temp = esr_check(0)) < 0.0)
      +                           {
  4429  0116C4  D06D               	goto	l12688
  4430  0116C6                     l12676:
  4431                           
  4432                           ;main.c: 278:     WaitMs(110);
  4433  0116C6  0E6E               	movlw	110
  4434  0116C8  6EE6               	movwf	postinc1,c
  4435  0116CA  0E00               	movlw	0
  4436  0116CC  6EE6               	movwf	postinc1,c
  4437  0116CE  EC03  F0D7         	call	_WaitMs	;wreg free
  4438                           
  4439                           ;main.c: 279:     shape = (uint8_t) fabsf(esr_temp);
  4440                           ;stkvar	_esr_temp @ sp[(-13)+0]
  4441  0116D2  0EF3               	movlw	-13
  4442  0116D4  006F FF8F FFE6     	movff	plusw1,postinc1
  4443  0116DA  006F FF8F FFE6     	movff	plusw1,postinc1
  4444  0116E0  006F FF8F FFE6     	movff	plusw1,postinc1
  4445  0116E6  006F FF8F FFE6     	movff	plusw1,postinc1
  4446  0116EC  ECF9  F0CD         	call	_fabsf	;wreg free
  4447  0116F0  0060  F0A3  FFE6   	movff	btemp,postinc1
  4448  0116F6  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4449  0116FC  0060  F0AB  FFE6   	movff	btemp+2,postinc1
  4450  011702  0060  F0AF  FFE6   	movff	btemp+3,postinc1
  4451  011708  ECFF  F0C1         	call	___fltol	;wreg free
  4452  01170C  0060  F0A0  F033   	movff	btemp,btemp+11
  4453                           
  4454                           ;stkvar	_shape @ sp[(-13)+6]
  4455  011712  0EF9               	movlw	-7
  4456  011714  0060  F0CF  FFE3   	movff	btemp+11,plusw1
  4457                           
  4458                           ;main.c: 280:     sprintf(get_vterm_ptr(2, 0), "Checking %c %c      ", spinners(0, 0), s
      +                          pinners(shape, 0));
  4459  01171A  0E00               	movlw	0
  4460  01171C  6EE6               	movwf	postinc1,c
  4461                           
  4462                           ;stkvar	_shape @ sp[(-14)+6]
  4463  01171E  0EF8               	movlw	-8
  4464  011720  50E3               	movf	plusw1,w,c
  4465  011722  6EE6               	movwf	postinc1,c
  4466  011724  ECFF  F0CB         	call	_spinners	;wreg free
  4467  011728  5028               	movf	btemp^0,w,c
  4468  01172A  6EE6               	movwf	postinc1,c
  4469  01172C  0E00               	movlw	0
  4470  01172E  6EE6               	movwf	postinc1,c
  4471  011730  0E00               	movlw	0
  4472  011732  6EE6               	movwf	postinc1,c
  4473  011734  0E00               	movlw	0
  4474  011736  6EE6               	movwf	postinc1,c
  4475  011738  ECFF  F0CB         	call	_spinners	;wreg free
  4476  01173C  5028               	movf	btemp^0,w,c
  4477  01173E  6EE6               	movwf	postinc1,c
  4478  011740  0E00               	movlw	0
  4479  011742  6EE6               	movwf	postinc1,c
  4480  011744  0E61               	movlw	low STR_15
  4481  011746  6EE6               	movwf	postinc1,c
  4482  011748  0EFD               	movlw	high STR_15
  4483  01174A  6EE6               	movwf	postinc1,c
  4484  01174C  0E00               	movlw	0
  4485  01174E  6EE6               	movwf	postinc1,c
  4486  011750  0E02               	movlw	2
  4487  011752  6EE6               	movwf	postinc1,c
  4488  011754  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  4489  011758  0060  F0A3  FFE6   	movff	btemp,postinc1
  4490  01175E  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4491  011764  0E08               	movlw	8
  4492  011766  6EE6               	movwf	postinc1,c
  4493  011768  EC08  F0CA         	call	_sprintf	;wreg free
  4494                           
  4495                           ; BSR set to: 0
  4496                           ;main.c: 281:     update_lcd(0);
  4497  01176C  0E00               	movlw	0
  4498  01176E  6EE6               	movwf	postinc1,c
  4499  011770  ECF9  F0C8         	call	_update_lcd	;wreg free
  4500                           
  4501                           ;main.c: 283:     if (i_esr++ > 512)
  4502                           ;stkvar	_i_esr @ sp[(-13)+4]
  4503  011774  50E1               	movf	fsr1l,w,c
  4504  011776  0FF7               	addlw	-9
  4505  011778  6ED9               	movwf	fsr2l,c
  4506  01177A  50E2               	movf	fsr1h,w,c
  4507  01177C  6EDA               	movwf	fsr2h,c
  4508  01177E  0EFF               	movlw	255
  4509  011780  22DA               	addwfc	fsr2h,f,c
  4510  011782  006F FF7C  F032    	movff	indf2,btemp+10
  4511  011788  0E01               	movlw	1
  4512  01178A  26DE               	addwf	postinc2,f,c
  4513  01178C  006F FF7C  F033    	movff	indf2,btemp+11
  4514  011792  0E00               	movlw	0
  4515  011794  22DD               	addwfc	postdec2,f,c
  4516  011796  0432               	decf	(btemp+10)^0,w,c
  4517  011798  0E02               	movlw	2
  4518  01179A  5833               	subwfb	(btemp+11)^0,w,c
  4519  01179C  B0D8               	btfsc	status,0,c
  4520  01179E  D017               	goto	u12110
  4521  0117A0                     l12688:
  4522                           
  4523                           ;main.c: 277:    while ((esr_temp = esr_check(0)) < 0.0) {
  4524  0117A0  0E00               	movlw	0
  4525  0117A2  6EE6               	movwf	postinc1,c
  4526  0117A4  EC68  F0B4         	call	_esr_check	;wreg free
  4527                           
  4528                           ;stkvar	_esr_temp @ sp[(-13)+0]
  4529  0117A8  0EF3               	movlw	-13
  4530  0117AA  0060  F0A3  FFE3   	movff	btemp,plusw1
  4531  0117B0  0EF4               	movlw	-12
  4532  0117B2  0060  F0A7  FFE3   	movff	btemp+1,plusw1
  4533  0117B8  0EF5               	movlw	-11
  4534  0117BA  0060  F0AB  FFE3   	movff	btemp+2,plusw1
  4535  0117C0  0EF6               	movlw	-10
  4536  0117C2  0060  F0AF  FFE3   	movff	btemp+3,plusw1
  4537  0117C8  0EF6               	movlw	-10
  4538  0117CA  BEE3               	btfsc	plusw1,7,c
  4539  0117CC  D77C               	goto	l12676
  4540  0117CE                     u12110:
  4541                           
  4542                           ;main.c: 286:    sprintf(get_vterm_ptr(0, 0), "ESR  %2.6f           ", C.esr);
  4543  0117CE  0060  F613  FFE6   	movff	_C+132,postinc1
  4544  0117D4  0060  F617  FFE6   	movff	_C+133,postinc1
  4545  0117DA  0060  F61B  FFE6   	movff	_C+134,postinc1
  4546  0117E0  0060  F61F  FFE6   	movff	_C+135,postinc1
  4547  0117E6  0E1F               	movlw	low STR_16
  4548  0117E8  6EE6               	movwf	postinc1,c
  4549  0117EA  0EFD               	movlw	high STR_16
  4550  0117EC  6EE6               	movwf	postinc1,c
  4551  0117EE  0E00               	movlw	0
  4552  0117F0  6EE6               	movwf	postinc1,c
  4553  0117F2  0E00               	movlw	0
  4554  0117F4  6EE6               	movwf	postinc1,c
  4555  0117F6  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  4556  0117FA  0060  F0A3  FFE6   	movff	btemp,postinc1
  4557  011800  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4558  011806  0E08               	movlw	8
  4559  011808  6EE6               	movwf	postinc1,c
  4560  01180A  EC08  F0CA         	call	_sprintf	;wreg free
  4561                           
  4562                           ;main.c: 287:    sprintf(get_vterm_ptr(1, 0), "R1 %2.3f %3.4f           ", C.bv_one_load
      +                          , C.load_i1);
  4563  01180E  0060  F78F  FFE6   	movff	_C+227,postinc1
  4564  011814  0060  F793  FFE6   	movff	_C+228,postinc1
  4565  01181A  0060  F797  FFE6   	movff	_C+229,postinc1
  4566  011820  0060  F79B  FFE6   	movff	_C+230,postinc1
  4567  011826  0060  F7BF  FFE6   	movff	_C+239,postinc1
  4568  01182C  0060  F7C3  FFE6   	movff	_C+240,postinc1
  4569  011832  0060  F7C7  FFE6   	movff	_C+241,postinc1
  4570  011838  0060  F7CB  FFE6   	movff	_C+242,postinc1
  4571  01183E  0EBC               	movlw	low STR_17
  4572  011840  6EE6               	movwf	postinc1,c
  4573  011842  0EFC               	movlw	high STR_17
  4574  011844  6EE6               	movwf	postinc1,c
  4575  011846  0E00               	movlw	0
  4576  011848  6EE6               	movwf	postinc1,c
  4577  01184A  0E01               	movlw	1
  4578  01184C  6EE6               	movwf	postinc1,c
  4579  01184E  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  4580  011852  0060  F0A3  FFE6   	movff	btemp,postinc1
  4581  011858  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4582  01185E  0E0C               	movlw	12
  4583  011860  6EE6               	movwf	postinc1,c
  4584  011862  EC08  F0CA         	call	_sprintf	;wreg free
  4585                           
  4586                           ;main.c: 288:    sprintf(get_vterm_ptr(2, 0), "R2 %2.3f %3.4f           ", C.bv_full_loa
      +                          d, C.load_i2);
  4587  011866  0060  F79F  FFE6   	movff	_C+231,postinc1
  4588  01186C  0060  F7A3  FFE6   	movff	_C+232,postinc1
  4589  011872  0060  F7A7  FFE6   	movff	_C+233,postinc1
  4590  011878  0060  F7AB  FFE6   	movff	_C+234,postinc1
  4591  01187E  0060  F7CF  FFE6   	movff	_C+243,postinc1
  4592  011884  0060  F7D3  FFE6   	movff	_C+244,postinc1
  4593  01188A  0060  F7D7  FFE6   	movff	_C+245,postinc1
  4594  011890  0060  F7DB  FFE6   	movff	_C+246,postinc1
  4595  011896  0ED6               	movlw	low STR_18
  4596  011898  6EE6               	movwf	postinc1,c
  4597  01189A  0EFC               	movlw	high STR_18
  4598  01189C  6EE6               	movwf	postinc1,c
  4599  01189E  0E00               	movlw	0
  4600  0118A0  6EE6               	movwf	postinc1,c
  4601  0118A2  0E02               	movlw	2
  4602  0118A4  6EE6               	movwf	postinc1,c
  4603  0118A6  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  4604  0118AA  0060  F0A3  FFE6   	movff	btemp,postinc1
  4605  0118B0  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4606  0118B6  0E0C               	movlw	12
  4607  0118B8  6EE6               	movwf	postinc1,c
  4608  0118BA  EC08  F0CA         	call	_sprintf	;wreg free
  4609                           
  4610                           ;main.c: 289:    update_lcd(0);
  4611  0118BE  0E00               	movlw	0
  4612  0118C0  6EE6               	movwf	postinc1,c
  4613  0118C2  ECF9  F0C8         	call	_update_lcd	;wreg free
  4614                           
  4615                           ;main.c: 290:    WaitMs(5000);
  4616  0118C6  0E88               	movlw	136
  4617  0118C8  6EE6               	movwf	postinc1,c
  4618  0118CA  0E13               	movlw	19
  4619  0118CC  6EE6               	movwf	postinc1,c
  4620  0118CE  EC03  F0D7         	call	_WaitMs	;wreg free
  4621                           
  4622                           ;main.c: 291:    break;
  4623  0118D2  D01C               	goto	l12698
  4624  0118D4                     l1338:
  4625                           
  4626                           ; BSR set to: 2
  4627                           ;main.c: 297:    P.SYSTEM_STABLE = 1;
  4628  0118D4  0100               	movlb	0	; () banked
  4629  0118D6  819F               	bsf	(_P+1)& (0+255),0,b	;volatile
  4630                           
  4631                           ;main.c: 298:    break;
  4632  0118D8  D019               	goto	l12698
  4633  0118DA                     l1340:
  4634                           
  4635                           ; BSR set to: 2
  4636                           ;main.c: 301:    V.ui_state = UI_STATE_INIT;
  4637  0118DA  6B00               	clrf	_V& (0+255),b	;volatile
  4638                           
  4639                           ;main.c: 302:    break;
  4640  0118DC  D017               	goto	l12698
  4641  0118DE                     l12696:
  4642  0118DE  0102               	movlb	2	; () banked
  4643  0118E0  5100               	movf	_V& (0+255),w,b	;volatile
  4644  0118E2  6E32               	movwf	(btemp+10)^0,c
  4645  0118E4  6A33               	clrf	(btemp+11)^0,c
  4646                           
  4647                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4648                           ; Switch size 1, requested type "simple"
  4649                           ; Number of cases is 1, Range of values is 0 to 0
  4650                           ; switch strategies available:
  4651                           ; Name         Instructions Cycles
  4652                           ; simple_byte            4     3 (average)
  4653                           ;	Chosen strategy is simple_byte
  4654  0118E6  5033               	movf	(btemp+11)^0,w,c
  4655  0118E8  0A00               	xorlw	0	; case 0
  4656  0118EA  A4D8               	btfss	status,2,c
  4657  0118EC  D7F6               	goto	l1340
  4658                           
  4659                           ; BSR set to: 2
  4660                           ; Switch size 1, requested type "simple"
  4661                           ; Number of cases is 5, Range of values is 0 to 5
  4662                           ; switch strategies available:
  4663                           ; Name         Instructions Cycles
  4664                           ; simple_byte           16     9 (average)
  4665                           ;	Chosen strategy is simple_byte
  4666  0118EE  5032               	movf	(btemp+10)^0,w,c
  4667  0118F0  0A00               	xorlw	0	; case 0
  4668  0118F2  B4D8               	btfsc	status,2,c
  4669  0118F4  D4E3               	goto	l12578
  4670  0118F6  0A01               	xorlw	1	; case 1
  4671  0118F8  B4D8               	btfsc	status,2,c
  4672  0118FA  D008               	goto	l12698
  4673  0118FC  0A02               	xorlw	2	; case 3
  4674  0118FE  B4D8               	btfsc	status,2,c
  4675  011900  D005               	goto	l12698
  4676  011902  0A07               	xorlw	7	; case 4
  4677  011904  B4D8               	btfsc	status,2,c
  4678  011906  D7E6               	goto	l1338
  4679  011908  0A01               	xorlw	1	; case 5
  4680  01190A  D7E7               	goto	l1340
  4681  01190C                     l12698:
  4682                           
  4683                           ;main.c: 305:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  4684  01190C  0E01               	movlw	1
  4685  01190E  6EE6               	movwf	postinc1,c
  4686  011910  EC91  F0D8         	call	_TimerDone	;wreg free
  4687  011914  5028               	movf	btemp^0,w,c
  4688  011916  B4D8               	btfsc	status,2,c
  4689  011918  D013               	goto	l12710
  4690  01191A  EC6D  F0DB         	call	_check_adc_scan	;wreg free
  4691  01191E  5028               	movf	btemp^0,w,c
  4692  011920  B4D8               	btfsc	status,2,c
  4693  011922  D00E               	goto	l12710
  4694                           
  4695                           ;main.c: 309:    convert_adc_data();
  4696  011924  EC9D  F0CD         	call	_convert_adc_data	;wreg free
  4697                           
  4698                           ;main.c: 313:    clear_adc_scan();
  4699  011928  EC7D  F0DB         	call	_clear_adc_scan	;wreg free
  4700                           
  4701                           ; BSR set to: 0
  4702                           ;main.c: 314:    start_adc_scan();
  4703  01192C  ECE8  F0D2         	call	_start_adc_scan	;wreg free
  4704                           
  4705                           ;main.c: 315:    StartTimer(TMR_ADC, 200);
  4706  011930  0EC8               	movlw	200
  4707  011932  6EE6               	movwf	postinc1,c
  4708  011934  0E00               	movlw	0
  4709  011936  6EE6               	movwf	postinc1,c
  4710  011938  0E01               	movlw	1
  4711  01193A  6EE6               	movwf	postinc1,c
  4712  01193C  EC10  F0D6         	call	_StartTimer	;wreg free
  4713  011940                     l12710:
  4714                           
  4715                           ;main.c: 322:   if (TimerDone(TMR_DISPLAY)) {
  4716                           
  4717                           ;main.c: 318:   if (V.ticks) {
  4718  011940  0E0A               	movlw	10
  4719  011942  6EE6               	movwf	postinc1,c
  4720  011944  EC91  F0D8         	call	_TimerDone	;wreg free
  4721  011948  5028               	movf	btemp^0,w,c
  4722  01194A  B4D8               	btfsc	status,2,c
  4723  01194C  EFAA  F090         	goto	l12760
  4724                           
  4725                           ;main.c: 323:    if (TimerDone(TMR_HELPDIS)) {
  4726  011950  0E09               	movlw	9
  4727  011952  6EE6               	movwf	postinc1,c
  4728  011954  EC91  F0D8         	call	_TimerDone	;wreg free
  4729  011958  5028               	movf	btemp^0,w,c
  4730  01195A  B4D8               	btfsc	status,2,c
  4731  01195C  D004               	goto	l12718
  4732                           
  4733                           ;main.c: 324:     set_display_info(DIS_STR);
  4734  01195E  0E00               	movlw	0
  4735  011960  6EE6               	movwf	postinc1,c
  4736  011962  EC67  F0DA         	call	_set_display_info	;wreg free
  4737  011966                     l12718:
  4738                           
  4739                           ;main.c: 326:    calc_model_data();
  4740  011966  ECCB  F0AD         	call	_calc_model_data	;wreg free
  4741                           
  4742                           ; BSR set to: 1
  4743                           ;main.c: 333:     hid_display(&H);
  4744                           
  4745                           ;main.c: 328:    if (0) {
  4746  01196A  0EF3               	movlw	_H& (0+255)
  4747  01196C  6EE6               	movwf	postinc1,c
  4748  01196E  EC8D  F0CA         	call	_hid_display	;wreg free
  4749                           
  4750                           ;main.c: 334:     switch (H.hid_display) {
  4751  011972  D3A4               	goto	l12744
  4752  011974                     l1348:
  4753                           
  4754                           ; BSR set to: 0
  4755                           ;main.c: 336:      V.calib = 0;
  4756  011974  0102               	movlb	2	; () banked
  4757  011976  6BAC               	clrf	(_V+172)& (0+255),b	;volatile
  4758                           
  4759                           ; BSR set to: 2
  4760                           ;main.c: 337:      sprintf(get_vterm_ptr(0, 0), "PV   PWR %3.2f    ", C.p_pv);
  4761  011978  0060  F5E3  FFE6   	movff	_C+120,postinc1
  4762  01197E  0060  F5E7  FFE6   	movff	_C+121,postinc1
  4763  011984  0060  F5EB  FFE6   	movff	_C+122,postinc1
  4764  01198A  0060  F5EF  FFE6   	movff	_C+123,postinc1
  4765  011990  0E99               	movlw	low STR_22
  4766  011992  6EE6               	movwf	postinc1,c
  4767  011994  0EFE               	movlw	high STR_22
  4768  011996  6EE6               	movwf	postinc1,c
  4769  011998  0E00               	movlw	0
  4770  01199A  6EE6               	movwf	postinc1,c
  4771  01199C  0E00               	movlw	0
  4772  01199E  6EE6               	movwf	postinc1,c
  4773  0119A0  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  4774  0119A4  0060  F0A3  FFE6   	movff	btemp,postinc1
  4775  0119AA  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4776  0119B0  0E08               	movlw	8
  4777  0119B2  6EE6               	movwf	postinc1,c
  4778  0119B4  EC08  F0CA         	call	_sprintf	;wreg free
  4779                           
  4780                           ;main.c: 338:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f    ", C.p_load);
  4781  0119B8  0060  F5C3  FFE6   	movff	_C+112,postinc1
  4782  0119BE  0060  F5C7  FFE6   	movff	_C+113,postinc1
  4783  0119C4  0060  F5CB  FFE6   	movff	_C+114,postinc1
  4784  0119CA  0060  F5CF  FFE6   	movff	_C+115,postinc1
  4785  0119D0  0EBF               	movlw	low STR_23
  4786  0119D2  6EE6               	movwf	postinc1,c
  4787  0119D4  0EFE               	movlw	high STR_23
  4788  0119D6  6EE6               	movwf	postinc1,c
  4789  0119D8  0E00               	movlw	0
  4790  0119DA  6EE6               	movwf	postinc1,c
  4791  0119DC  0E01               	movlw	1
  4792  0119DE  6EE6               	movwf	postinc1,c
  4793  0119E0  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  4794  0119E4  0060  F0A3  FFE6   	movff	btemp,postinc1
  4795  0119EA  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4796  0119F0  0E08               	movlw	8
  4797  0119F2  6EE6               	movwf	postinc1,c
  4798  0119F4  EC08  F0CA         	call	_sprintf	;wreg free
  4799                           
  4800                           ;main.c: 339:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f    ", C.p_inverter);
  4801  0119F8  0060  F5D3  FFE6   	movff	_C+116,postinc1
  4802  0119FE  0060  F5D7  FFE6   	movff	_C+117,postinc1
  4803  011A04  0060  F5DB  FFE6   	movff	_C+118,postinc1
  4804  011A0A  0060  F5DF  FFE6   	movff	_C+119,postinc1
  4805  011A10  0EAC               	movlw	low STR_24
  4806  011A12  6EE6               	movwf	postinc1,c
  4807  011A14  0EFE               	movlw	high STR_24
  4808  011A16  6EE6               	movwf	postinc1,c
  4809  011A18  0E00               	movlw	0
  4810  011A1A  6EE6               	movwf	postinc1,c
  4811  011A1C  0E02               	movlw	2
  4812  011A1E  6EE6               	movwf	postinc1,c
  4813  011A20  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  4814  011A24  0060  F0A3  FFE6   	movff	btemp,postinc1
  4815  011A2A  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4816  011A30  0E08               	movlw	8
  4817  011A32  6EE6               	movwf	postinc1,c
  4818  011A34  EC08  F0CA         	call	_sprintf	;wreg free
  4819                           
  4820                           ;main.c: 341:      sprintf(get_vterm_ptr(0, 1), "PV   WH %3.2f     ", C.pvkw);
  4821  011A38  0060  F683  FFE6   	movff	_C+160,postinc1
  4822  011A3E  0060  F687  FFE6   	movff	_C+161,postinc1
  4823  011A44  0060  F68B  FFE6   	movff	_C+162,postinc1
  4824  011A4A  0060  F68F  FFE6   	movff	_C+163,postinc1
  4825  011A50  0E60               	movlw	low STR_25
  4826  011A52  6EE6               	movwf	postinc1,c
  4827  011A54  0EFE               	movlw	high STR_25
  4828  011A56  6EE6               	movwf	postinc1,c
  4829  011A58  0E01               	movlw	1
  4830  011A5A  6EE6               	movwf	postinc1,c
  4831  011A5C  0E00               	movlw	0
  4832  011A5E  6EE6               	movwf	postinc1,c
  4833  011A60  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  4834  011A64  0060  F0A3  FFE6   	movff	btemp,postinc1
  4835  011A6A  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4836  011A70  0E08               	movlw	8
  4837  011A72  6EE6               	movwf	postinc1,c
  4838  011A74  EC08  F0CA         	call	_sprintf	;wreg free
  4839                           
  4840                           ;main.c: 342:      sprintf(get_vterm_ptr(1, 1), "LOAD WH %3.2f     ", C.loadkw);
  4841  011A78  0060  F6A3  FFE6   	movff	_C+168,postinc1
  4842  011A7E  0060  F6A7  FFE6   	movff	_C+169,postinc1
  4843  011A84  0060  F6AB  FFE6   	movff	_C+170,postinc1
  4844  011A8A  0060  F6AF  FFE6   	movff	_C+171,postinc1
  4845  011A90  0E86               	movlw	low STR_26
  4846  011A92  6EE6               	movwf	postinc1,c
  4847  011A94  0EFE               	movlw	high STR_26
  4848  011A96  6EE6               	movwf	postinc1,c
  4849  011A98  0E01               	movlw	1
  4850  011A9A  6EE6               	movwf	postinc1,c
  4851  011A9C  0E01               	movlw	1
  4852  011A9E  6EE6               	movwf	postinc1,c
  4853  011AA0  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  4854  011AA4  0060  F0A3  FFE6   	movff	btemp,postinc1
  4855  011AAA  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4856  011AB0  0E08               	movlw	8
  4857  011AB2  6EE6               	movwf	postinc1,c
  4858  011AB4  EC08  F0CA         	call	_sprintf	;wreg free
  4859                           
  4860                           ;main.c: 343:      sprintf(get_vterm_ptr(2, 1), "INV  WH %3.2f     ", C.invkw);
  4861  011AB8  0060  F693  FFE6   	movff	_C+164,postinc1
  4862  011ABE  0060  F697  FFE6   	movff	_C+165,postinc1
  4863  011AC4  0060  F69B  FFE6   	movff	_C+166,postinc1
  4864  011ACA  0060  F69F  FFE6   	movff	_C+167,postinc1
  4865  011AD0  0E73               	movlw	low STR_27
  4866  011AD2  6EE6               	movwf	postinc1,c
  4867  011AD4  0EFE               	movlw	high STR_27
  4868  011AD6  6EE6               	movwf	postinc1,c
  4869  011AD8  0E01               	movlw	1
  4870  011ADA  6EE6               	movwf	postinc1,c
  4871  011ADC  0E02               	movlw	2
  4872  011ADE  6EE6               	movwf	postinc1,c
  4873  011AE0  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  4874  011AE4  0060  F0A3  FFE6   	movff	btemp,postinc1
  4875  011AEA  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4876  011AF0  0E08               	movlw	8
  4877  011AF2  6EE6               	movwf	postinc1,c
  4878  011AF4  EC08  F0CA         	call	_sprintf	;wreg free
  4879                           
  4880                           ;main.c: 344:      break;
  4881  011AF8  D2F6               	goto	l12746
  4882  011AFA                     l1350:
  4883                           
  4884                           ; BSR set to: 0
  4885                           ;main.c: 346:      V.calib = 0;
  4886  011AFA  0102               	movlb	2	; () banked
  4887  011AFC  6BAC               	clrf	(_V+172)& (0+255),b	;volatile
  4888                           
  4889                           ; BSR set to: 2
  4890                           ;main.c: 347:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f ", C.calc[V_PV], C.ca
      +                          lc[C_PV]);
  4891  011AFE  0060  F413  FFE6   	movff	_C+4,postinc1
  4892  011B04  0060  F417  FFE6   	movff	_C+5,postinc1
  4893  011B0A  0060  F41B  FFE6   	movff	_C+6,postinc1
  4894  011B10  0060  F41F  FFE6   	movff	_C+7,postinc1
  4895  011B16  0060  F453  FFE6   	movff	_C+20,postinc1
  4896  011B1C  0060  F457  FFE6   	movff	_C+21,postinc1
  4897  011B22  0060  F45B  FFE6   	movff	_C+22,postinc1
  4898  011B28  0060  F45F  FFE6   	movff	_C+23,postinc1
  4899  011B2E  0EF8               	movlw	low STR_28
  4900  011B30  6EE6               	movwf	postinc1,c
  4901  011B32  0EFE               	movlw	high STR_28
  4902  011B34  6EE6               	movwf	postinc1,c
  4903  011B36  0E00               	movlw	0
  4904  011B38  6EE6               	movwf	postinc1,c
  4905  011B3A  0E00               	movlw	0
  4906  011B3C  6EE6               	movwf	postinc1,c
  4907  011B3E  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  4908  011B42  0060  F0A3  FFE6   	movff	btemp,postinc1
  4909  011B48  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4910  011B4E  0E0C               	movlw	12
  4911  011B50  6EE6               	movwf	postinc1,c
  4912  011B52  EC08  F0CA         	call	_sprintf	;wreg free
  4913                           
  4914                           ;main.c: 348:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f ", C.calc[V_BAT], C.c
      +                          alc[C_BATT]);
  4915  011B56  0060  F403  FFE6   	movff	_C,postinc1
  4916  011B5C  0060  F407  FFE6   	movff	_C+1,postinc1
  4917  011B62  0060  F40B  FFE6   	movff	_C+2,postinc1
  4918  011B68  0060  F40F  FFE6   	movff	_C+3,postinc1
  4919  011B6E  0060  F443  FFE6   	movff	_C+16,postinc1
  4920  011B74  0060  F447  FFE6   	movff	_C+17,postinc1
  4921  011B7A  0060  F44B  FFE6   	movff	_C+18,postinc1
  4922  011B80  0060  F44F  FFE6   	movff	_C+19,postinc1
  4923  011B86  0ED2               	movlw	low STR_29
  4924  011B88  6EE6               	movwf	postinc1,c
  4925  011B8A  0EFE               	movlw	high STR_29
  4926  011B8C  6EE6               	movwf	postinc1,c
  4927  011B8E  0E00               	movlw	0
  4928  011B90  6EE6               	movwf	postinc1,c
  4929  011B92  0E01               	movlw	1
  4930  011B94  6EE6               	movwf	postinc1,c
  4931  011B96  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  4932  011B9A  0060  F0A3  FFE6   	movff	btemp,postinc1
  4933  011BA0  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4934  011BA6  0E0C               	movlw	12
  4935  011BA8  6EE6               	movwf	postinc1,c
  4936  011BAA  EC08  F0CA         	call	_sprintf	;wreg free
  4937                           
  4938                           ;main.c: 349:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f ", C.calc[V_CC], C.c_
      +                          load);
  4939  011BAE  0060  F503  FFE6   	movff	_C+64,postinc1
  4940  011BB4  0060  F507  FFE6   	movff	_C+65,postinc1
  4941  011BBA  0060  F50B  FFE6   	movff	_C+66,postinc1
  4942  011BC0  0060  F50F  FFE6   	movff	_C+67,postinc1
  4943  011BC6  0060  F423  FFE6   	movff	_C+8,postinc1
  4944  011BCC  0060  F427  FFE6   	movff	_C+9,postinc1
  4945  011BD2  0060  F42B  FFE6   	movff	_C+10,postinc1
  4946  011BD8  0060  F42F  FFE6   	movff	_C+11,postinc1
  4947  011BDE  0EE5               	movlw	low STR_30
  4948  011BE0  6EE6               	movwf	postinc1,c
  4949  011BE2  0EFE               	movlw	high STR_30
  4950  011BE4  6EE6               	movwf	postinc1,c
  4951  011BE6  0E00               	movlw	0
  4952  011BE8  6EE6               	movwf	postinc1,c
  4953  011BEA  0E02               	movlw	2
  4954  011BEC  6EE6               	movwf	postinc1,c
  4955  011BEE  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  4956  011BF2  0060  F0A3  FFE6   	movff	btemp,postinc1
  4957  011BF8  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4958  011BFE  0E0C               	movlw	12
  4959  011C00  6EE6               	movwf	postinc1,c
  4960  011C02  EC08  F0CA         	call	_sprintf	;wreg free
  4961                           
  4962                           ;main.c: 351:      sprintf(get_vterm_ptr(0, 1), "BAT IWH %4.1f     ", C.bkwi);
  4963  011C06  0060  F663  FFE6   	movff	_C+152,postinc1
  4964  011C0C  0060  F667  FFE6   	movff	_C+153,postinc1
  4965  011C12  0060  F66B  FFE6   	movff	_C+154,postinc1
  4966  011C18  0060  F66F  FFE6   	movff	_C+155,postinc1
  4967  011C1E  0E27               	movlw	low STR_31
  4968  011C20  6EE6               	movwf	postinc1,c
  4969  011C22  0EFE               	movlw	high STR_31
  4970  011C24  6EE6               	movwf	postinc1,c
  4971  011C26  0E01               	movlw	1
  4972  011C28  6EE6               	movwf	postinc1,c
  4973  011C2A  0E00               	movlw	0
  4974  011C2C  6EE6               	movwf	postinc1,c
  4975  011C2E  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  4976  011C32  0060  F0A3  FFE6   	movff	btemp,postinc1
  4977  011C38  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4978  011C3E  0E08               	movlw	8
  4979  011C40  6EE6               	movwf	postinc1,c
  4980  011C42  EC08  F0CA         	call	_sprintf	;wreg free
  4981                           
  4982                           ;main.c: 352:      sprintf(get_vterm_ptr(1, 1), "BAT OWH %4.1f     ", C.bkwo);
  4983  011C46  0060  F673  FFE6   	movff	_C+156,postinc1
  4984  011C4C  0060  F677  FFE6   	movff	_C+157,postinc1
  4985  011C52  0060  F67B  FFE6   	movff	_C+158,postinc1
  4986  011C58  0060  F67F  FFE6   	movff	_C+159,postinc1
  4987  011C5E  0E3A               	movlw	low STR_32
  4988  011C60  6EE6               	movwf	postinc1,c
  4989  011C62  0EFE               	movlw	high STR_32
  4990  011C64  6EE6               	movwf	postinc1,c
  4991  011C66  0E01               	movlw	1
  4992  011C68  6EE6               	movwf	postinc1,c
  4993  011C6A  0E01               	movlw	1
  4994  011C6C  6EE6               	movwf	postinc1,c
  4995  011C6E  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  4996  011C72  0060  F0A3  FFE6   	movff	btemp,postinc1
  4997  011C78  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4998  011C7E  0E08               	movlw	8
  4999  011C80  6EE6               	movwf	postinc1,c
  5000  011C82  EC08  F0CA         	call	_sprintf	;wreg free
  5001                           
  5002                           ;main.c: 353:      sprintf(get_vterm_ptr(2, 1), "BAT TWH %4.1f     ", C.bkwi + C.bkwo);
  5003  011C86  0060  F673  FFE6   	movff	_C+156,postinc1
  5004  011C8C  0060  F677  FFE6   	movff	_C+157,postinc1
  5005  011C92  0060  F67B  FFE6   	movff	_C+158,postinc1
  5006  011C98  0060  F67F  FFE6   	movff	_C+159,postinc1
  5007  011C9E  0060  F663  FFE6   	movff	_C+152,postinc1
  5008  011CA4  0060  F667  FFE6   	movff	_C+153,postinc1
  5009  011CAA  0060  F66B  FFE6   	movff	_C+154,postinc1
  5010  011CB0  0060  F66F  FFE6   	movff	_C+155,postinc1
  5011  011CB6  EC24  F09D         	call	___fladd	;wreg free
  5012  011CBA  0060  F0A3  FFE6   	movff	btemp,postinc1
  5013  011CC0  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  5014  011CC6  0060  F0AB  FFE6   	movff	btemp+2,postinc1
  5015  011CCC  0060  F0AF  FFE6   	movff	btemp+3,postinc1
  5016  011CD2  0E4D               	movlw	low STR_33
  5017  011CD4  6EE6               	movwf	postinc1,c
  5018  011CD6  0EFE               	movlw	high STR_33
  5019  011CD8  6EE6               	movwf	postinc1,c
  5020  011CDA  0E01               	movlw	1
  5021  011CDC  6EE6               	movwf	postinc1,c
  5022  011CDE  0E02               	movlw	2
  5023  011CE0  6EE6               	movwf	postinc1,c
  5024  011CE2  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  5025  011CE6  0060  F0A3  FFE6   	movff	btemp,postinc1
  5026  011CEC  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  5027  011CF2  0E08               	movlw	8
  5028  011CF4  6EE6               	movwf	postinc1,c
  5029  011CF6  EC08  F0CA         	call	_sprintf	;wreg free
  5030                           
  5031                           ;main.c: 354:      break;
  5032  011CFA  D1F5               	goto	l12746
  5033  011CFC                     l1351:
  5034                           
  5035                           ; BSR set to: 0
  5036                           ;main.c: 356:      V.calib = 0;
  5037  011CFC  0102               	movlb	2	; () banked
  5038  011CFE  6BAC               	clrf	(_V+172)& (0+255),b	;volatile
  5039                           
  5040                           ; BSR set to: 2
  5041                           ;main.c: 357:      sprintf(get_vterm_ptr(0, 0), "BATT PWR %3.2f     ", C.p_bat);
  5042  011D00  0060  F5F3  FFE6   	movff	_C+124,postinc1
  5043  011D06  0060  F5F7  FFE6   	movff	_C+125,postinc1
  5044  011D0C  0060  F5FB  FFE6   	movff	_C+126,postinc1
  5045  011D12  0060  F5FF  FFE6   	movff	_C+127,postinc1
  5046  011D18  0E9E               	movlw	low STR_34
  5047  011D1A  6EE6               	movwf	postinc1,c
  5048  011D1C  0EFD               	movlw	high STR_34
  5049  011D1E  6EE6               	movwf	postinc1,c
  5050  011D20  0E00               	movlw	0
  5051  011D22  6EE6               	movwf	postinc1,c
  5052  011D24  0E00               	movlw	0
  5053  011D26  6EE6               	movwf	postinc1,c
  5054  011D28  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  5055  011D2C  0060  F0A3  FFE6   	movff	btemp,postinc1
  5056  011D32  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  5057  011D38  0E08               	movlw	8
  5058  011D3A  6EE6               	movwf	postinc1,c
  5059  011D3C  EC08  F0CA         	call	_sprintf	;wreg free
  5060                           
  5061                           ;main.c: 358:      sprintf(get_vterm_ptr(1, 0), "BAH %3.2f P%3.2f   ", C.dynamic_ah, C.p
      +                          v_ah);
  5062  011D40  0060  F643  FFE6   	movff	_C+144,postinc1
  5063  011D46  0060  F647  FFE6   	movff	_C+145,postinc1
  5064  011D4C  0060  F64B  FFE6   	movff	_C+146,postinc1
  5065  011D52  0060  F64F  FFE6   	movff	_C+147,postinc1
  5066  011D58  0060  F633  FFE6   	movff	_C+140,postinc1
  5067  011D5E  0060  F637  FFE6   	movff	_C+141,postinc1
  5068  011D64  0060  F63B  FFE6   	movff	_C+142,postinc1
  5069  011D6A  0060  F63F  FFE6   	movff	_C+143,postinc1
  5070  011D70  0EDA               	movlw	low STR_35
  5071  011D72  6EE6               	movwf	postinc1,c
  5072  011D74  0EFD               	movlw	high STR_35
  5073  011D76  6EE6               	movwf	postinc1,c
  5074  011D78  0E00               	movlw	0
  5075  011D7A  6EE6               	movwf	postinc1,c
  5076  011D7C  0E01               	movlw	1
  5077  011D7E  6EE6               	movwf	postinc1,c
  5078  011D80  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  5079  011D84  0060  F0A3  FFE6   	movff	btemp,postinc1
  5080  011D8A  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  5081  011D90  0E0C               	movlw	12
  5082  011D92  6EE6               	movwf	postinc1,c
  5083  011D94  EC08  F0CA         	call	_sprintf	;wreg free
  5084                           
  5085                           ;main.c: 359:      sprintf(get_vterm_ptr(2, 0), "S%cC %d RUN %d     ", spinners(5, 0), C
      +                          .soc, C.runtime);
  5086  011D98  0060  F6B3  FFE6   	movff	_C+172,postinc1
  5087  011D9E  0060  F6B7  FFE6   	movff	_C+173,postinc1
  5088  011DA4  0060  F6BB  FFE6   	movff	_C+174,postinc1
  5089  011DAA  0060  F6BF  FFE6   	movff	_C+175,postinc1
  5090  011DB0  0E00               	movlw	0
  5091  011DB2  6EE6               	movwf	postinc1,c
  5092  011DB4  0E05               	movlw	5
  5093  011DB6  6EE6               	movwf	postinc1,c
  5094  011DB8  ECFF  F0CB         	call	_spinners	;wreg free
  5095  011DBC  5028               	movf	btemp^0,w,c
  5096  011DBE  6EE6               	movwf	postinc1,c
  5097  011DC0  0E00               	movlw	0
  5098  011DC2  6EE6               	movwf	postinc1,c
  5099  011DC4  0E8A               	movlw	low STR_36
  5100  011DC6  6EE6               	movwf	postinc1,c
  5101  011DC8  0EFD               	movlw	high STR_36
  5102  011DCA  6EE6               	movwf	postinc1,c
  5103  011DCC  0E00               	movlw	0
  5104  011DCE  6EE6               	movwf	postinc1,c
  5105  011DD0  0E02               	movlw	2
  5106  011DD2  6EE6               	movwf	postinc1,c
  5107  011DD4  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  5108  011DD8  0060  F0A3  FFE6   	movff	btemp,postinc1
  5109  011DDE  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  5110  011DE4  0E0A               	movlw	10
  5111  011DE6  6EE6               	movwf	postinc1,c
  5112  011DE8  EC08  F0CA         	call	_sprintf	;wreg free
  5113                           
  5114                           ;main.c: 361:      sprintf(get_vterm_ptr(0, 1), "ESR  %2.6f         ", C.esr);
  5115  011DEC  0060  F613  FFE6   	movff	_C+132,postinc1
  5116  011DF2  0060  F617  FFE6   	movff	_C+133,postinc1
  5117  011DF8  0060  F61B  FFE6   	movff	_C+134,postinc1
  5118  011DFE  0060  F61F  FFE6   	movff	_C+135,postinc1
  5119  011E04  0E76               	movlw	low STR_37
  5120  011E06  6EE6               	movwf	postinc1,c
  5121  011E08  0EFD               	movlw	high STR_37
  5122  011E0A  6EE6               	movwf	postinc1,c
  5123  011E0C  0E01               	movlw	1
  5124  011E0E  6EE6               	movwf	postinc1,c
  5125  011E10  0E00               	movlw	0
  5126  011E12  6EE6               	movwf	postinc1,c
  5127  011E14  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  5128  011E18  0060  F0A3  FFE6   	movff	btemp,postinc1
  5129  011E1E  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  5130  011E24  0E08               	movlw	8
  5131  011E26  6EE6               	movwf	postinc1,c
  5132  011E28  EC08  F0CA         	call	_sprintf	;wreg free
  5133                           
  5134                           ;main.c: 362:      sprintf(get_vterm_ptr(1, 1), "R1 %2.3f %3.4f     ", C.bv_one_load, C.
      +                          load_i1);
  5135  011E2C  0060  F78F  FFE6   	movff	_C+227,postinc1
  5136  011E32  0060  F793  FFE6   	movff	_C+228,postinc1
  5137  011E38  0060  F797  FFE6   	movff	_C+229,postinc1
  5138  011E3E  0060  F79B  FFE6   	movff	_C+230,postinc1
  5139  011E44  0060  F7BF  FFE6   	movff	_C+239,postinc1
  5140  011E4A  0060  F7C3  FFE6   	movff	_C+240,postinc1
  5141  011E50  0060  F7C7  FFE6   	movff	_C+241,postinc1
  5142  011E56  0060  F7CB  FFE6   	movff	_C+242,postinc1
  5143  011E5C  0EB2               	movlw	low STR_38
  5144  011E5E  6EE6               	movwf	postinc1,c
  5145  011E60  0EFD               	movlw	high STR_38
  5146  011E62  6EE6               	movwf	postinc1,c
  5147  011E64  0E01               	movlw	1
  5148  011E66  6EE6               	movwf	postinc1,c
  5149  011E68  0E01               	movlw	1
  5150  011E6A  6EE6               	movwf	postinc1,c
  5151  011E6C  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  5152  011E70  0060  F0A3  FFE6   	movff	btemp,postinc1
  5153  011E76  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  5154  011E7C  0E0C               	movlw	12
  5155  011E7E  6EE6               	movwf	postinc1,c
  5156  011E80  EC08  F0CA         	call	_sprintf	;wreg free
  5157                           
  5158                           ;main.c: 363:      sprintf(get_vterm_ptr(2, 1), "R2 %2.3f %3.4f     ", C.bv_full_load, C
      +                          .load_i2);
  5159  011E84  0060  F79F  FFE6   	movff	_C+231,postinc1
  5160  011E8A  0060  F7A3  FFE6   	movff	_C+232,postinc1
  5161  011E90  0060  F7A7  FFE6   	movff	_C+233,postinc1
  5162  011E96  0060  F7AB  FFE6   	movff	_C+234,postinc1
  5163  011E9C  0060  F7CF  FFE6   	movff	_C+243,postinc1
  5164  011EA2  0060  F7D3  FFE6   	movff	_C+244,postinc1
  5165  011EA8  0060  F7D7  FFE6   	movff	_C+245,postinc1
  5166  011EAE  0060  F7DB  FFE6   	movff	_C+246,postinc1
  5167  011EB4  0EC6               	movlw	low STR_39
  5168  011EB6  6EE6               	movwf	postinc1,c
  5169  011EB8  0EFD               	movlw	high STR_39
  5170  011EBA  6EE6               	movwf	postinc1,c
  5171  011EBC  0E01               	movlw	1
  5172  011EBE  6EE6               	movwf	postinc1,c
  5173  011EC0  0E02               	movlw	2
  5174  011EC2  6EE6               	movwf	postinc1,c
  5175  011EC4  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  5176  011EC8  0060  F0A3  FFE6   	movff	btemp,postinc1
  5177  011ECE  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  5178  011ED4  0E0C               	movlw	12
  5179  011ED6  6EE6               	movwf	postinc1,c
  5180  011ED8  EC08  F0CA         	call	_sprintf	;wreg free
  5181                           
  5182                           ;main.c: 364:      break;
  5183  011EDC  D104               	goto	l12746
  5184  011EDE                     l12730:
  5185                           
  5186                           ; BSR set to: 0
  5187                           ;main.c: 366:      if (!V.calib) {
  5188  011EDE  0102               	movlb	2	; () banked
  5189  011EE0  51AC               	movf	(_V+172)& (0+255),w,b	;volatile
  5190  011EE2  A4D8               	btfss	status,2,c
  5191  011EE4  D02D               	goto	l12734
  5192                           
  5193                           ; BSR set to: 2
  5194                           ;main.c: 367:       lp_filter(0.0, i, -1);
  5195  011EE6  0EFF               	movlw	255
  5196  011EE8  6EE6               	movwf	postinc1,c
  5197                           
  5198                           ;stkvar	_i @ sp[(-14)+9]
  5199  011EEA  0EFB               	movlw	-5
  5200  011EEC  50E3               	movf	plusw1,w,c
  5201  011EEE  6EE6               	movwf	postinc1,c
  5202  011EF0  0E00               	movlw	0
  5203  011EF2  6EE6               	movwf	postinc1,c
  5204  011EF4  0E00               	movlw	0
  5205  011EF6  6EE6               	movwf	postinc1,c
  5206  011EF8  0E00               	movlw	0
  5207  011EFA  6EE6               	movwf	postinc1,c
  5208  011EFC  0E00               	movlw	0
  5209  011EFE  6EE6               	movwf	postinc1,c
  5210  011F00  ECDC  F0BE         	call	_lp_filter	;wreg free
  5211                           
  5212                           ;main.c: 368:       lp_filter(0.0, j, -1);
  5213  011F04  0EFF               	movlw	255
  5214  011F06  6EE6               	movwf	postinc1,c
  5215                           
  5216                           ;stkvar	_j @ sp[(-14)+8]
  5217  011F08  0EFA               	movlw	-6
  5218  011F0A  50E3               	movf	plusw1,w,c
  5219  011F0C  6EE6               	movwf	postinc1,c
  5220  011F0E  0E00               	movlw	0
  5221  011F10  6EE6               	movwf	postinc1,c
  5222  011F12  0E00               	movlw	0
  5223  011F14  6EE6               	movwf	postinc1,c
  5224  011F16  0E00               	movlw	0
  5225  011F18  6EE6               	movwf	postinc1,c
  5226  011F1A  0E00               	movlw	0
  5227  011F1C  6EE6               	movwf	postinc1,c
  5228  011F1E  ECDC  F0BE         	call	_lp_filter	;wreg free
  5229                           
  5230                           ;main.c: 369:       lp_filter(0.0, k, -1);
  5231  011F22  0EFF               	movlw	255
  5232  011F24  6EE6               	movwf	postinc1,c
  5233                           
  5234                           ;stkvar	_k @ sp[(-14)+7]
  5235  011F26  0EF9               	movlw	-7
  5236  011F28  50E3               	movf	plusw1,w,c
  5237  011F2A  6EE6               	movwf	postinc1,c
  5238  011F2C  0E00               	movlw	0
  5239  011F2E  6EE6               	movwf	postinc1,c
  5240  011F30  0E00               	movlw	0
  5241  011F32  6EE6               	movwf	postinc1,c
  5242  011F34  0E00               	movlw	0
  5243  011F36  6EE6               	movwf	postinc1,c
  5244  011F38  0E00               	movlw	0
  5245  011F3A  6EE6               	movwf	postinc1,c
  5246  011F3C  ECDC  F0BE         	call	_lp_filter	;wreg free
  5247  011F40                     l12734:
  5248                           
  5249                           ;main.c: 371:      V.calib = 1;
  5250  011F40  0E01               	movlw	1
  5251  011F42  0102               	movlb	2	; () banked
  5252  011F44  6FAC               	movwf	(_V+172)& (0+255),b	;volatile
  5253                           
  5254                           ; BSR set to: 2
  5255                           ;main.c: 372:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f   %d  ", get_raw_result(i), C.
      +                          calc[i], get_switch(SSELECT));
  5256  011F46  0E02               	movlw	2
  5257  011F48  6EE6               	movwf	postinc1,c
  5258  011F4A  ECFE  F0D7         	call	_get_switch	;wreg free
  5259  011F4E  5028               	movf	btemp^0,w,c
  5260  011F50  6EE6               	movwf	postinc1,c
  5261  011F52  0E00               	movlw	0
  5262  011F54  6EE6               	movwf	postinc1,c
  5263                           
  5264                           ;stkvar	_i @ sp[(-15)+9]
  5265  011F56  0EFA               	movlw	-6
  5266  011F58  50E3               	movf	plusw1,w,c
  5267  011F5A  0D04               	mullw	4
  5268  011F5C  0E00               	movlw	low _C
  5269  011F5E  24F3               	addwf	243,w,c
  5270  011F60  6ED9               	movwf	fsr2l,c
  5271  011F62  0E01               	movlw	high _C
  5272  011F64  20F4               	addwfc	prodh,w,c
  5273  011F66  6EDA               	movwf	fsr2h,c
  5274  011F68  006F FF7B FFE6     	movff	postinc2,postinc1
  5275  011F6E  006F FF7B FFE6     	movff	postinc2,postinc1
  5276  011F74  006F FF7B FFE6     	movff	postinc2,postinc1
  5277  011F7A  006F FF7B FFE6     	movff	postinc2,postinc1
  5278                           
  5279                           ;stkvar	_i @ sp[(-19)+9]
  5280  011F80  0EF6               	movlw	-10
  5281  011F82  50E3               	movf	plusw1,w,c
  5282  011F84  6EE6               	movwf	postinc1,c
  5283  011F86  EC76  F0DA         	call	_get_raw_result	;wreg free
  5284  011F8A  0060  F0A3  FFE6   	movff	btemp,postinc1
  5285  011F90  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  5286  011F96  0E83               	movlw	low STR_19
  5287  011F98  6EE6               	movwf	postinc1,c
  5288  011F9A  0EFF               	movlw	high STR_19
  5289  011F9C  6EE6               	movwf	postinc1,c
  5290  011F9E  0E00               	movlw	0
  5291  011FA0  6EE6               	movwf	postinc1,c
  5292  011FA2  0E00               	movlw	0
  5293  011FA4  6EE6               	movwf	postinc1,c
  5294  011FA6  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  5295  011FAA  0060  F0A3  FFE6   	movff	btemp,postinc1
  5296  011FB0  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  5297  011FB6  0E0C               	movlw	12
  5298  011FB8  6EE6               	movwf	postinc1,c
  5299  011FBA  EC08  F0CA         	call	_sprintf	;wreg free
  5300                           
  5301                           ; BSR set to: 0
  5302                           ;main.c: 373:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f   %d  ", get_raw_result(j), C.
      +                          calc[j], get_switch(SENTER));
  5303  011FBE  0E03               	movlw	3
  5304  011FC0  6EE6               	movwf	postinc1,c
  5305  011FC2  ECFE  F0D7         	call	_get_switch	;wreg free
  5306  011FC6  5028               	movf	btemp^0,w,c
  5307  011FC8  6EE6               	movwf	postinc1,c
  5308  011FCA  0E00               	movlw	0
  5309  011FCC  6EE6               	movwf	postinc1,c
  5310                           
  5311                           ;stkvar	_j @ sp[(-15)+8]
  5312  011FCE  0EF9               	movlw	-7
  5313  011FD0  50E3               	movf	plusw1,w,c
  5314  011FD2  0D04               	mullw	4
  5315  011FD4  0E00               	movlw	low _C
  5316  011FD6  24F3               	addwf	243,w,c
  5317  011FD8  6ED9               	movwf	fsr2l,c
  5318  011FDA  0E01               	movlw	high _C
  5319  011FDC  20F4               	addwfc	prodh,w,c
  5320  011FDE  6EDA               	movwf	fsr2h,c
  5321  011FE0  006F FF7B FFE6     	movff	postinc2,postinc1
  5322  011FE6  006F FF7B FFE6     	movff	postinc2,postinc1
  5323  011FEC  006F FF7B FFE6     	movff	postinc2,postinc1
  5324  011FF2  006F FF7B FFE6     	movff	postinc2,postinc1
  5325                           
  5326                           ;stkvar	_j @ sp[(-19)+8]
  5327  011FF8  0EF5               	movlw	-11
  5328  011FFA  50E3               	movf	plusw1,w,c
  5329  011FFC  6EE6               	movwf	postinc1,c
  5330  011FFE  EC76  F0DA         	call	_get_raw_result	;wreg free
  5331  012002  0060  F0A3  FFE6   	movff	btemp,postinc1
  5332  012008  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  5333  01200E  0E83               	movlw	low STR_19
  5334  012010  6EE6               	movwf	postinc1,c
  5335  012012  0EFF               	movlw	high STR_19
  5336  012014  6EE6               	movwf	postinc1,c
  5337  012016  0E00               	movlw	0
  5338  012018  6EE6               	movwf	postinc1,c
  5339  01201A  0E01               	movlw	1
  5340  01201C  6EE6               	movwf	postinc1,c
  5341  01201E  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  5342  012022  0060  F0A3  FFE6   	movff	btemp,postinc1
  5343  012028  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  5344  01202E  0E0C               	movlw	12
  5345  012030  6EE6               	movwf	postinc1,c
  5346  012032  EC08  F0CA         	call	_sprintf	;wreg free
  5347                           
  5348                           ; BSR set to: 0
  5349                           ;main.c: 374:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d   #", get_raw_result(k), C
      +                          .calc[k], inp_index + 1);
  5350                           ;stkvar	_inp_index @ sp[(-13)+10]
  5351  012036  0EFD               	movlw	-3
  5352  012038  50E3               	movf	plusw1,w,c
  5353  01203A  6E32               	movwf	(btemp+10)^0,c
  5354  01203C  6A33               	clrf	(btemp+11)^0,c
  5355  01203E  0E01               	movlw	1
  5356  012040  2632               	addwf	(btemp+10)^0,f,c
  5357  012042  0E00               	movlw	0
  5358  012044  2233               	addwfc	(btemp+11)^0,f,c
  5359  012046  0060  F0CB  FFE6   	movff	btemp+10,postinc1
  5360  01204C  0060  F0CF  FFE6   	movff	btemp+11,postinc1
  5361                           
  5362                           ;stkvar	_k @ sp[(-15)+7]
  5363  012052  0EF8               	movlw	-8
  5364  012054  50E3               	movf	plusw1,w,c
  5365  012056  0D04               	mullw	4
  5366  012058  0E00               	movlw	low _C
  5367  01205A  24F3               	addwf	243,w,c
  5368  01205C  6ED9               	movwf	fsr2l,c
  5369  01205E  0E01               	movlw	high _C
  5370  012060  20F4               	addwfc	prodh,w,c
  5371  012062  6EDA               	movwf	fsr2h,c
  5372  012064  006F FF7B FFE6     	movff	postinc2,postinc1
  5373  01206A  006F FF7B FFE6     	movff	postinc2,postinc1
  5374  012070  006F FF7B FFE6     	movff	postinc2,postinc1
  5375  012076  006F FF7B FFE6     	movff	postinc2,postinc1
  5376                           
  5377                           ;stkvar	_k @ sp[(-19)+7]
  5378  01207C  0EF4               	movlw	-12
  5379  01207E  50E3               	movf	plusw1,w,c
  5380  012080  6EE6               	movwf	postinc1,c
  5381  012082  EC76  F0DA         	call	_get_raw_result	;wreg free
  5382  012086  0060  F0A3  FFE6   	movff	btemp,postinc1
  5383  01208C  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  5384  012092  0E61               	movlw	low STR_21
  5385  012094  6EE6               	movwf	postinc1,c
  5386  012096  0EFF               	movlw	high STR_21
  5387  012098  6EE6               	movwf	postinc1,c
  5388  01209A  0E00               	movlw	0
  5389  01209C  6EE6               	movwf	postinc1,c
  5390  01209E  0E02               	movlw	2
  5391  0120A0  6EE6               	movwf	postinc1,c
  5392  0120A2  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  5393  0120A6  0060  F0A3  FFE6   	movff	btemp,postinc1
  5394  0120AC  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  5395  0120B2  0E0C               	movlw	12
  5396  0120B4  6EE6               	movwf	postinc1,c
  5397  0120B6  EC08  F0CA         	call	_sprintf	;wreg free
  5398                           
  5399                           ;main.c: 375:      break;
  5400  0120BA  D015               	goto	l12746
  5401  0120BC                     l12744:
  5402  0120BC  0100               	movlb	0	; () banked
  5403  0120BE  51F3               	movf	_H& (0+255),w,b
  5404  0120C0  6E32               	movwf	(btemp+10)^0,c
  5405  0120C2  6A33               	clrf	(btemp+11)^0,c
  5406                           
  5407                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5408                           ; Switch size 1, requested type "simple"
  5409                           ; Number of cases is 1, Range of values is 0 to 0
  5410                           ; switch strategies available:
  5411                           ; Name         Instructions Cycles
  5412                           ; simple_byte            4     3 (average)
  5413                           ;	Chosen strategy is simple_byte
  5414  0120C4  5033               	movf	(btemp+11)^0,w,c
  5415  0120C6  0A00               	xorlw	0	; case 0
  5416  0120C8  A4D8               	btfss	status,2,c
  5417  0120CA  D00D               	goto	l12746
  5418                           
  5419                           ; BSR set to: 0
  5420                           ; Switch size 1, requested type "simple"
  5421                           ; Number of cases is 4, Range of values is 0 to 3
  5422                           ; switch strategies available:
  5423                           ; Name         Instructions Cycles
  5424                           ; simple_byte           13     7 (average)
  5425                           ;	Chosen strategy is simple_byte
  5426  0120CC  5032               	movf	(btemp+10)^0,w,c
  5427  0120CE  0A00               	xorlw	0	; case 0
  5428  0120D0  B4D8               	btfsc	status,2,c
  5429  0120D2  D513               	goto	l1350
  5430  0120D4  0A01               	xorlw	1	; case 1
  5431  0120D6  B4D8               	btfsc	status,2,c
  5432  0120D8  D44D               	goto	l1348
  5433  0120DA  0A03               	xorlw	3	; case 2
  5434  0120DC  B4D8               	btfsc	status,2,c
  5435  0120DE  D60E               	goto	l1351
  5436  0120E0  0A01               	xorlw	1	; case 3
  5437  0120E2  B4D8               	btfsc	status,2,c
  5438  0120E4  D6FC               	goto	l12730
  5439  0120E6                     l12746:
  5440                           
  5441                           ; BSR set to: 0
  5442                           ;main.c: 379:     clear_hid_pflags(&H);
  5443  0120E6  0EF3               	movlw	_H& (0+255)
  5444  0120E8  6EE6               	movwf	postinc1,c
  5445  0120EA  ECBC  F0D9         	call	_clear_hid_pflags	;wreg free
  5446                           
  5447                           ;main.c: 381:    StartTimer(TMR_DISPLAY, 250);
  5448  0120EE  0EFA               	movlw	250
  5449  0120F0  6EE6               	movwf	postinc1,c
  5450  0120F2  0E00               	movlw	0
  5451  0120F4  6EE6               	movwf	postinc1,c
  5452  0120F6  0E0A               	movlw	10
  5453  0120F8  6EE6               	movwf	postinc1,c
  5454  0120FA  EC10  F0D6         	call	_StartTimer	;wreg free
  5455                           
  5456                           ;main.c: 382:    if (check_enter_button(&H) && (H.hid_display != HID_AUX)) {
  5457  0120FE  0EF3               	movlw	_H& (0+255)
  5458  012100  6EE6               	movwf	postinc1,c
  5459  012102  EC30  F0D6         	call	_check_enter_button	;wreg free
  5460  012106  5028               	movf	btemp^0,w,c
  5461  012108  B4D8               	btfsc	status,2,c
  5462  01210A  D012               	goto	l12756
  5463  01210C  0E03               	movlw	3
  5464  01210E  0100               	movlb	0	; () banked
  5465  012110  19F3               	xorwf	_H& (0+255),w,b
  5466  012112  B4D8               	btfsc	status,2,c
  5467  012114  D00D               	goto	l12756
  5468                           
  5469                           ; BSR set to: 0
  5470                           ;main.c: 383:     V.screen = ~V.screen;
  5471  012116  0102               	movlb	2	; () banked
  5472  012118  A19C               	btfss	(_V+156)& (0+255),0,b	;volatile
  5473  01211A  D002               	goto	u12190
  5474  01211C  0E01               	movlw	1
  5475  01211E  D001               	goto	u12196
  5476  012120                     u12190:
  5477  012120  0E00               	movlw	0
  5478  012122                     u12196:
  5479  012122  0AFF               	xorlw	255
  5480  012124  6E33               	movwf	(btemp+11)^0,c
  5481  012126  519C               	movf	(_V+156)& (0+255),w,b	;volatile
  5482  012128  1833               	xorwf	(btemp+11)^0,w,c
  5483  01212A  0BFE               	andlw	-2
  5484  01212C  1833               	xorwf	(btemp+11)^0,w,c
  5485  01212E  6F9C               	movwf	(_V+156)& (0+255),b	;volatile
  5486  012130                     l12756:
  5487                           
  5488                           ;main.c: 385:    set_vterm(V.screen);
  5489  012130  0102               	movlb	2	; () banked
  5490  012132  A19C               	btfss	(_V+156)& (0+255),0,b	;volatile
  5491  012134  D002               	goto	u12200
  5492  012136  0E01               	movlw	1
  5493  012138  D001               	goto	u12206
  5494  01213A                     u12200:
  5495  01213A  0E00               	movlw	0
  5496  01213C                     u12206:
  5497  01213C  6EE6               	movwf	postinc1,c
  5498  01213E  EC58  F0DA         	call	_set_vterm	;wreg free
  5499                           
  5500                           ;main.c: 386:    update_lcd(V.screen);
  5501  012142  0102               	movlb	2	; () banked
  5502  012144  A19C               	btfss	(_V+156)& (0+255),0,b	;volatile
  5503  012146  D002               	goto	u12210
  5504  012148  0E01               	movlw	1
  5505  01214A  D001               	goto	u12216
  5506  01214C                     u12210:
  5507  01214C  0E00               	movlw	0
  5508  01214E                     u12216:
  5509  01214E  6EE6               	movwf	postinc1,c
  5510  012150  ECF9  F0C8         	call	_update_lcd	;wreg free
  5511  012154                     l12760:
  5512                           
  5513                           ;main.c: 392:   check_help(V.flipper);
  5514  012154  0102               	movlb	2	; () banked
  5515  012156  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
  5516  012158  6EE6               	movwf	postinc1,c
  5517  01215A  ECD1  F0BB         	call	_check_help	;wreg free
  5518                           
  5519                           ;main.c: 394:   if (check_enter_button(&H)) {
  5520  01215E  0EF3               	movlw	_H& (0+255)
  5521  012160  6EE6               	movwf	postinc1,c
  5522  012162  EC30  F0D6         	call	_check_enter_button	;wreg free
  5523  012166  5028               	movf	btemp^0,w,c
  5524  012168  B4D8               	btfsc	status,2,c
  5525  01216A  D062               	goto	l1356
  5526                           
  5527                           ;main.c: 395:    V.calib = 0;
  5528  01216C  0102               	movlb	2	; () banked
  5529  01216E  6BAC               	clrf	(_V+172)& (0+255),b	;volatile
  5530                           
  5531                           ; BSR set to: 2
  5532                           ;main.c: 396:    inp_index += 3;
  5533                           ;stkvar	_inp_index @ sp[(-13)+10]
  5534  012170  0EFD               	movlw	-3
  5535  012172  006F FF8C  F028    	movff	plusw1,btemp
  5536  012178  0E03               	movlw	3
  5537  01217A  2628               	addwf	btemp^0,f,c
  5538  01217C  0EFD               	movlw	-3
  5539  01217E  0060  F0A3  FFE3   	movff	btemp,plusw1
  5540                           
  5541                           ;main.c: 397:    if (inp_index > 9)
  5542                           ;stkvar	_inp_index @ sp[(-13)+10]
  5543  012184  0EFD               	movlw	-3
  5544  012186  006F FF8C  F028    	movff	plusw1,btemp
  5545  01218C  0E09               	movlw	9
  5546  01218E  6428               	cpfsgt	btemp^0,c
  5547  012190  D03A               	goto	l12788
  5548                           
  5549                           ; BSR set to: 2
  5550                           ;main.c: 398:     inp_index = 0;
  5551                           ;stkvar	_inp_index @ sp[(-13)+10]
  5552  012192  0EFD               	movlw	-3
  5553  012194  6AE3               	clrf	plusw1,c
  5554  012196  D037               	goto	l12788
  5555  012198                     l12770:
  5556                           
  5557                           ; BSR set to: 2
  5558                           ;main.c: 401:     i = C_BATT;
  5559                           ;stkvar	_i @ sp[(-13)+9]
  5560  012198  0EFC               	movlw	-4
  5561  01219A  6AE3               	clrf	plusw1,c
  5562                           
  5563                           ; BSR set to: 2
  5564                           ;main.c: 402:     j = C_PV;
  5565                           ;stkvar	_j @ sp[(-13)+8]
  5566  01219C  0EFB               	movlw	-5
  5567  01219E  6AE3               	clrf	plusw1,c
  5568  0121A0  2AE3               	incf	plusw1,f,c
  5569                           
  5570                           ; BSR set to: 2
  5571                           ;main.c: 403:     k = V_CC;
  5572                           ;stkvar	_k @ sp[(-13)+7]
  5573  0121A2  0EFA               	movlw	-6
  5574  0121A4  6AE3               	clrf	plusw1,c
  5575  0121A6  82E3               	bsf	plusw1,1,c
  5576                           
  5577                           ;main.c: 404:     break;
  5578  0121A8  D043               	goto	l1356
  5579  0121AA                     l12776:
  5580                           
  5581                           ; BSR set to: 2
  5582                           ;main.c: 406:     i = V_BAT;
  5583                           ;stkvar	_i @ sp[(-13)+9]
  5584  0121AA  0EFC               	movlw	-4
  5585  0121AC  6AE3               	clrf	plusw1,c
  5586  0121AE  84E3               	bsf	plusw1,2,c
  5587                           
  5588                           ;main.c: 407:     j = V_PV;
  5589                           ;stkvar	_j @ sp[(-13)+8]
  5590  0121B0  0EFB               	movlw	-5
  5591  0121B2  6AE3               	clrf	plusw1,c
  5592  0121B4  80E3               	bsf	plusw1,0,c
  5593  0121B6  84E3               	bsf	plusw1,2,c	;indir
  5594                           
  5595                           ;main.c: 408:     k = V_CBUS;
  5596                           ;stkvar	_k @ sp[(-13)+7]
  5597  0121B8  0EFA               	movlw	-6
  5598  0121BA  6AE3               	clrf	plusw1,c
  5599  0121BC  82E3               	bsf	plusw1,1,c
  5600  0121BE  84E3               	bsf	plusw1,2,c	;indir
  5601                           
  5602                           ;main.c: 409:     break;
  5603  0121C0  D037               	goto	l1356
  5604  0121C2                     l12778:
  5605                           
  5606                           ; BSR set to: 2
  5607                           ;main.c: 411:     i = V_BBAT;
  5608                           ;stkvar	_i @ sp[(-13)+9]
  5609  0121C2  0EFC               	movlw	-4
  5610  0121C4  6AE3               	clrf	plusw1,c
  5611  0121C6  82E3               	bsf	plusw1,1,c
  5612  0121C8  86E3               	bsf	plusw1,3,c	;indir
  5613                           
  5614                           ; BSR set to: 2
  5615                           ;main.c: 412:     j = V_TEMP;
  5616  0121CA  0E0B               	movlw	11
  5617  0121CC  6E33               	movwf	(btemp+11)^0,c
  5618                           
  5619                           ;stkvar	_j @ sp[(-13)+8]
  5620  0121CE  0EFB               	movlw	-5
  5621  0121D0  0060  F0CF  FFE3   	movff	btemp+11,plusw1
  5622                           
  5623                           ; BSR set to: 2
  5624                           ;main.c: 413:     k = V_INVERTER;
  5625                           ;stkvar	_k @ sp[(-13)+7]
  5626  0121D6  0EFA               	movlw	-6
  5627  0121D8  6AE3               	clrf	plusw1,c
  5628  0121DA  84E3               	bsf	plusw1,2,c
  5629  0121DC  86E3               	bsf	plusw1,3,c	;indir
  5630                           
  5631                           ;main.c: 414:     break;
  5632  0121DE  D028               	goto	l1356
  5633  0121E0                     l12784:
  5634                           
  5635                           ; BSR set to: 2
  5636                           ;main.c: 416:     i = channel_ANB5;
  5637  0121E0  0E0D               	movlw	13
  5638  0121E2  6E33               	movwf	(btemp+11)^0,c
  5639                           
  5640                           ;stkvar	_i @ sp[(-13)+9]
  5641  0121E4  0EFC               	movlw	-4
  5642  0121E6  0060  F0CF  FFE3   	movff	btemp+11,plusw1
  5643                           
  5644                           ;main.c: 417:     j = channel_ANB5;
  5645  0121EC  0E0D               	movlw	13
  5646  0121EE  6E33               	movwf	(btemp+11)^0,c
  5647                           
  5648                           ;stkvar	_j @ sp[(-13)+8]
  5649  0121F0  0EFB               	movlw	-5
  5650  0121F2  0060  F0CF  FFE3   	movff	btemp+11,plusw1
  5651                           
  5652                           ;main.c: 418:     k = channel_ANB5;
  5653  0121F8  0E0D               	movlw	13
  5654  0121FA  6E33               	movwf	(btemp+11)^0,c
  5655                           
  5656                           ;stkvar	_k @ sp[(-13)+7]
  5657  0121FC  0EFA               	movlw	-6
  5658  0121FE  0060  F0CF  FFE3   	movff	btemp+11,plusw1
  5659                           
  5660                           ;main.c: 419:     break;
  5661  012204  D015               	goto	l1356
  5662  012206                     l12788:
  5663                           
  5664                           ; BSR set to: 2
  5665                           ;stkvar	_inp_index @ sp[(-13)+10]
  5666  012206  0EFD               	movlw	-3
  5667  012208  50E3               	movf	plusw1,w,c
  5668  01220A  6E32               	movwf	(btemp+10)^0,c
  5669  01220C  6A33               	clrf	(btemp+11)^0,c
  5670                           
  5671                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5672                           ; Switch size 1, requested type "simple"
  5673                           ; Number of cases is 1, Range of values is 0 to 0
  5674                           ; switch strategies available:
  5675                           ; Name         Instructions Cycles
  5676                           ; simple_byte            4     3 (average)
  5677                           ;	Chosen strategy is simple_byte
  5678  01220E  5033               	movf	(btemp+11)^0,w,c
  5679  012210  0A00               	xorlw	0	; case 0
  5680  012212  A4D8               	btfss	status,2,c
  5681  012214  D00D               	goto	l1356
  5682                           
  5683                           ; BSR set to: 2
  5684                           ; Switch size 1, requested type "simple"
  5685                           ; Number of cases is 4, Range of values is 0 to 9
  5686                           ; switch strategies available:
  5687                           ; Name         Instructions Cycles
  5688                           ; simple_byte           13     7 (average)
  5689                           ;	Chosen strategy is simple_byte
  5690  012216  5032               	movf	(btemp+10)^0,w,c
  5691  012218  0A00               	xorlw	0	; case 0
  5692  01221A  B4D8               	btfsc	status,2,c
  5693  01221C  D7BD               	goto	l12770
  5694  01221E  0A03               	xorlw	3	; case 3
  5695  012220  B4D8               	btfsc	status,2,c
  5696  012222  D7C3               	goto	l12776
  5697  012224  0A05               	xorlw	5	; case 6
  5698  012226  B4D8               	btfsc	status,2,c
  5699  012228  D7CC               	goto	l12778
  5700  01222A  0A0F               	xorlw	15	; case 9
  5701  01222C  B4D8               	btfsc	status,2,c
  5702  01222E  D7D8               	goto	l12784
  5703  012230                     l1356:
  5704                           
  5705                           ;main.c: 428:   if (V.set_sequ) {
  5706  012230  0102               	movlb	2	; () banked
  5707  012232  A19B               	btfss	(_V+155)& (0+255),0,b	;volatile
  5708  012234  EF6F  F08C         	goto	l12696
  5709                           
  5710                           ; BSR set to: 2
  5711                           ;main.c: 429:    if (TimerDone(TMR_INFO)) {
  5712  012238  0E07               	movlw	7
  5713  01223A  6EE6               	movwf	postinc1,c
  5714  01223C  EC91  F0D8         	call	_TimerDone	;wreg free
  5715  012240  5028               	movf	btemp^0,w,c
  5716  012242  B4D8               	btfsc	status,2,c
  5717  012244  D00C               	goto	l12798
  5718                           
  5719                           ;main.c: 430:     V.set_sequ = 0;
  5720  012246  0102               	movlb	2	; () banked
  5721  012248  919B               	bcf	(_V+155)& (0+255),0,b	;volatile
  5722                           
  5723                           ; BSR set to: 2
  5724                           ;main.c: 431:     set_vterm(0);
  5725  01224A  0E00               	movlw	0
  5726  01224C  6EE6               	movwf	postinc1,c
  5727  01224E  EC58  F0DA         	call	_set_vterm	;wreg free
  5728                           
  5729                           ;main.c: 432:     update_lcd(0);
  5730  012252  0E00               	movlw	0
  5731  012254  6EE6               	movwf	postinc1,c
  5732  012256  ECF9  F0C8         	call	_update_lcd	;wreg free
  5733                           
  5734                           ;main.c: 433:    } else {
  5735  01225A  EF6F  F08C         	goto	l12696
  5736  01225E                     l12798:
  5737                           
  5738                           ;main.c: 434:     set_vterm(2);
  5739  01225E  0E02               	movlw	2
  5740  012260  6EE6               	movwf	postinc1,c
  5741  012262  EC58  F0DA         	call	_set_vterm	;wreg free
  5742                           
  5743                           ;main.c: 435:     update_lcd(2);
  5744  012266  0E02               	movlw	2
  5745  012268  6EE6               	movwf	postinc1,c
  5746  01226A  ECF9  F0C8         	call	_update_lcd	;wreg free
  5747  01226E  EF6F  F08C         	goto	l12696
  5748  012272                     __end_of_main:
  5749                           	opt callstack 0
  5750                           
  5751 ;; *************** function _static_soc *****************
  5752 ;; Defined at:
  5753 ;;		line 116 in file "mbmc.c"
  5754 ;; Parameters:    Size  Location     Type
  5755 ;;		None
  5756 ;; Auto vars:     Size  Location     Type
  5757 ;;		None
  5758 ;; Return value:  Size  Location     Type
  5759 ;;                  1  [STACK] void 
  5760 ;; Registers used:
  5761 ;;		wreg, status,2
  5762 ;; Tracked objects:
  5763 ;;		On entry : 0/0
  5764 ;;		On exit  : 3F/1
  5765 ;;		Unchanged: 0/0
  5766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5770 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5771 ;;Total ram usage:        0 bytes
  5772 ;; Hardware stack levels used:    1
  5773 ;; Hardware stack levels required when called:   15
  5774 ;; This function calls:
  5775 ;;		Nothing
  5776 ;; This function is called by:
  5777 ;;		_main
  5778 ;; This function uses a reentrant model
  5779 ;;
  5780                           
  5781                           	psect	text1
  5782  01B354                     __ptext1:
  5783                           	opt callstack 0
  5784  01B354                     _static_soc:
  5785                           	opt callstack 15
  5786                           
  5787                           ;mbmc.c: 118:  C.runtime = 120;
  5788                           
  5789                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5790                           ;incstack = 0
  5791  01B354  0E00               	movlw	0
  5792  01B356  0101               	movlb	1	; () banked
  5793  01B358  6FAD               	movwf	(_C+173)& (0+255),b	;volatile
  5794  01B35A  0E78               	movlw	120
  5795  01B35C  6FAC               	movwf	(_C+172)& (0+255),b	;volatile
  5796                           
  5797                           ;mbmc.c: 119:  C.soc = 100;
  5798  01B35E  0E00               	movlw	0
  5799  01B360  6FAF               	movwf	(_C+175)& (0+255),b	;volatile
  5800  01B362  0E64               	movlw	100
  5801  01B364  6FAE               	movwf	(_C+174)& (0+255),b	;volatile
  5802                           
  5803                           ; BSR set to: 1
  5804                           ;mbmc.c: 120:  C.dynamic_ah = C.bank_ah;
  5805  01B366  C188  F18C         	movff	_C+136,_C+140	;volatile
  5806  01B36A  C189  F18D         	movff	_C+137,_C+141	;volatile
  5807  01B36E  C18A  F18E         	movff	_C+138,_C+142	;volatile
  5808  01B372  C18B  F18F         	movff	_C+139,_C+143	;volatile
  5809                           
  5810                           ; BSR set to: 1
  5811                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  5812  01B376  0012               	return		;funcret
  5813  01B378                     __end_of_static_soc:
  5814                           	opt callstack 0
  5815                           
  5816 ;; *************** function _start_switch_handler *****************
  5817 ;; Defined at:
  5818 ;;		line 121 in file "dio.c"
  5819 ;; Parameters:    Size  Location     Type
  5820 ;;		None
  5821 ;; Auto vars:     Size  Location     Type
  5822 ;;		None
  5823 ;; Return value:  Size  Location     Type
  5824 ;;                  1  [STACK] void 
  5825 ;; Registers used:
  5826 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  5827 ;; Tracked objects:
  5828 ;;		On entry : 1/0
  5829 ;;		On exit  : 3F/39
  5830 ;;		Unchanged: 0/0
  5831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5835 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5836 ;;Total ram usage:        0 bytes
  5837 ;; Hardware stack levels used:    1
  5838 ;; Hardware stack levels required when called:   16
  5839 ;; This function calls:
  5840 ;;		_INT1_SetInterruptHandler
  5841 ;; This function is called by:
  5842 ;;		_main
  5843 ;; This function uses a reentrant model
  5844 ;;
  5845                           
  5846                           	psect	text2
  5847  01B472                     __ptext2:
  5848                           	opt callstack 0
  5849  01B472                     _start_switch_handler:
  5850                           	opt callstack 14
  5851                           
  5852                           ;dio.c: 123:  (PIE5bits.INT1IE = 0);
  5853                           
  5854                           ; BSR set to: 1
  5855                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5856                           ;incstack = 0
  5857  01B472  0139               	movlb	57	; () banked
  5858  01B474  9195               	bcf	149,0,b	;volatile
  5859                           
  5860                           ; BSR set to: 57
  5861                           ;dio.c: 124:  INT1_SetInterruptHandler(switch_handler);
  5862  01B476  0E34               	movlw	low _switch_handler
  5863  01B478  6EE6               	movwf	postinc1,c
  5864  01B47A  0E8C               	movlw	high _switch_handler
  5865  01B47C  6EE6               	movwf	postinc1,c
  5866  01B47E  0E01               	movlw	low (_switch_handler shr (0+16))
  5867  01B480  6EE6               	movwf	postinc1,c
  5868  01B482  EC1D  F0D9         	call	_INT1_SetInterruptHandler	;wreg free
  5869                           
  5870                           ;dio.c: 125:  S.button[SNULL].sw = SW_INVALID;
  5871  01B486  0E02               	movlw	2
  5872  01B488  0102               	movlb	2	; () banked
  5873  01B48A  6FE0               	movwf	(_S+35)& (0+255),b	;volatile
  5874                           
  5875                           ; BSR set to: 2
  5876                           ;dio.c: 126:  (PIE5bits.INT1IE = 1);
  5877  01B48C  0139               	movlb	57	; () banked
  5878  01B48E  8195               	bsf	149,0,b	;volatile
  5879                           
  5880                           ; BSR set to: 57
  5881                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  5882  01B490  0012               	return		;funcret
  5883  01B492                     __end_of_start_switch_handler:
  5884                           	opt callstack 0
  5885                           
  5886 ;; *************** function _srand *****************
  5887 ;; Defined at:
  5888 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  5889 ;; Parameters:    Size  Location     Type
  5890 ;;  s               2  [STACK] unsigned int 
  5891 ;; Auto vars:     Size  Location     Type
  5892 ;;		None
  5893 ;; Return value:  Size  Location     Type
  5894 ;;                  1  [STACK] void 
  5895 ;; Registers used:
  5896 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  5897 ;; Tracked objects:
  5898 ;;		On entry : 0/0
  5899 ;;		On exit  : 3F/1
  5900 ;;		Unchanged: 0/0
  5901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5905 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5906 ;;Total ram usage:        0 bytes
  5907 ;; Hardware stack levels used:    1
  5908 ;; Hardware stack levels required when called:   15
  5909 ;; This function calls:
  5910 ;;		Nothing
  5911 ;; This function is called by:
  5912 ;;		_main
  5913 ;; This function uses a reentrant model
  5914 ;;
  5915                           
  5916                           	psect	text3
  5917  01AE72                     __ptext3:
  5918                           	opt callstack 0
  5919  01AE72                     _srand:
  5920                           	opt callstack 15
  5921                           
  5922                           ;stkvar	_s @ sp[(0)+-2]
  5923                           
  5924                           ; BSR set to: 57
  5925                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5926                           ;incstack = 0
  5927  01AE72  0EFE               	movlw	-2
  5928  01AE74  50E3               	movf	plusw1,w,c
  5929  01AE76  0FFF               	addlw	255
  5930  01AE78  6E32               	movwf	(btemp+10)^0,c
  5931  01AE7A  0EFF               	movlw	-1
  5932  01AE7C  006F FF8C  F033    	movff	plusw1,btemp+11
  5933  01AE82  0EFF               	movlw	255
  5934  01AE84  2233               	addwfc	(btemp+11)^0,f,c
  5935  01AE86  0060  F0C8  F1F7   	movff	btemp+10,_seed
  5936  01AE8C  0060  F0CC  F1F8   	movff	btemp+11,_seed+1
  5937  01AE92  0101               	movlb	1	; () banked
  5938  01AE94  6BF9               	clrf	(_seed+2)& (0+255),b
  5939  01AE96  6BFA               	clrf	(_seed+3)& (0+255),b
  5940  01AE98  6BFB               	clrf	(_seed+4)& (0+255),b
  5941  01AE9A  6BFC               	clrf	(_seed+5)& (0+255),b
  5942  01AE9C  6BFD               	clrf	(_seed+6)& (0+255),b
  5943  01AE9E  6BFE               	clrf	(_seed+7)& (0+255),b
  5944                           
  5945                           ; BSR set to: 1
  5946                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  5947  01AEA0  52E5               	movf	postdec1,f,c
  5948  01AEA2  52E5               	movf	postdec1,f,c
  5949  01AEA4  0012               	return		;funcret
  5950  01AEA6                     __end_of_srand:
  5951                           	opt callstack 0
  5952                           
  5953 ;; *************** function _spinners *****************
  5954 ;; Defined at:
  5955 ;;		line 134 in file "mbmc.c"
  5956 ;; Parameters:    Size  Location     Type
  5957 ;;  shape           1  [STACK] unsigned char 
  5958 ;;  reset           1  [STACK] unsigned char 
  5959 ;; Auto vars:     Size  Location     Type
  5960 ;;  c               1  [STACK] unsigned char 
  5961 ;; Return value:  Size  Location     Type
  5962 ;;                  1  [STACK] unsigned char 
  5963 ;; Registers used:
  5964 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+9, btemp+10, btemp+11, tbl
      +ptrl, tblptrh, tblptru, prodl, prodh
  5965 ;; Tracked objects:
  5966 ;;		On entry : 0/0
  5967 ;;		On exit  : 0/0
  5968 ;;		Unchanged: 0/0
  5969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5973 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5974 ;;Total ram usage:        0 bytes
  5975 ;; Hardware stack levels used:    1
  5976 ;; Hardware stack levels required when called:   16
  5977 ;; This function calls:
  5978 ;;		_strlen
  5979 ;; This function is called by:
  5980 ;;		_main
  5981 ;; This function uses a reentrant model
  5982 ;;
  5983                           
  5984                           	psect	text4
  5985  0197FE                     __ptext4:
  5986                           	opt callstack 0
  5987  0197FE                     _spinners:
  5988                           	opt callstack 0
  5989                           
  5990                           ; BSR set to: 1
  5991                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5992  0197FE  52E6               	movf	postinc1,f,c
  5993                           
  5994                           ;mbmc.c: 134: char spinners(uint8_t shape, uint8_t reset);mbmc.c: 135: {;mbmc.c: 136:  s
      +                          tatic uint8_t s[6];;mbmc.c: 137:  char c;;mbmc.c: 139:  if (shape > (6 - 1))
  5995                           ;stkvar	_shape @ sp[(-1)+-1]
  5996                           
  5997                           ;incstack = 0
  5998  019800  0EFE               	movlw	-2
  5999  019802  006F FF8C  F028    	movff	plusw1,btemp
  6000  019808  0E05               	movlw	5
  6001  01980A  6428               	cpfsgt	btemp^0,c
  6002  01980C  D002               	goto	l1866
  6003                           
  6004                           ;mbmc.c: 140:   shape = 0;
  6005                           ;stkvar	_shape @ sp[(-1)+-1]
  6006  01980E  0EFE               	movlw	-2
  6007  019810  6AE3               	clrf	plusw1,c
  6008  019812                     l1866:
  6009                           
  6010                           ;mbmc.c: 141:  if (reset)
  6011                           ;stkvar	_reset @ sp[(-1)+-2]
  6012  019812  0EFD               	movlw	-3
  6013  019814  50E3               	movf	plusw1,w,c
  6014  019816  B4D8               	btfsc	status,2,c
  6015  019818  D00A               	goto	l10556
  6016                           
  6017                           ;mbmc.c: 142:   s[shape] = 0;
  6018                           ;stkvar	_shape @ sp[(-1)+-1]
  6019  01981A  0EFE               	movlw	-2
  6020  01981C  006F FF8C  F033    	movff	plusw1,btemp+11
  6021  019822  5033               	movf	(btemp+11)^0,w,c
  6022  019824  0F74               	addlw	low spinners@s
  6023  019826  6ED9               	movwf	fsr2l,c
  6024  019828  6ADA               	clrf	fsr2h,c
  6025  01982A  0E00               	movlw	0
  6026  01982C  6EDF               	movwf	indf2,c
  6027  01982E                     l10556:
  6028                           
  6029                           ;mbmc.c: 143:  c = spin[shape][s[shape]];
  6030                           ;stkvar	_shape @ sp[(-1)+-1]
  6031  01982E  0EFE               	movlw	-2
  6032  019830  50E3               	movf	plusw1,w,c
  6033  019832  0D14               	mullw	20
  6034  019834  0EDB               	movlw	low _spin
  6035  019836  6E32               	movwf	(btemp+10)^0,c
  6036  019838  0EFB               	movlw	high _spin
  6037  01983A  6E33               	movwf	(btemp+11)^0,c
  6038  01983C  50F3               	movf	243,w,c
  6039  01983E  2632               	addwf	(btemp+10)^0,f,c
  6040  019840  50F4               	movf	244,w,c
  6041  019842  2233               	addwfc	(btemp+11)^0,f,c
  6042                           
  6043                           ;stkvar	_shape @ sp[(-1)+-1]
  6044  019844  0EFE               	movlw	-2
  6045  019846  006F FF8C  F031    	movff	plusw1,btemp+9
  6046  01984C  5031               	movf	(btemp+9)^0,w,c
  6047  01984E  0F74               	addlw	low spinners@s
  6048  019850  6ED9               	movwf	fsr2l,c
  6049  019852  6ADA               	clrf	fsr2h,c
  6050  019854  50DF               	movf	indf2,w,c
  6051  019856  2632               	addwf	(btemp+10)^0,f,c
  6052  019858  0E00               	movlw	0
  6053  01985A  2233               	addwfc	(btemp+11)^0,f,c
  6054  01985C  0060  F0CB  FFF6   	movff	btemp+10,tblptrl
  6055  019862  0060  F0CF  FFF7   	movff	btemp+11,tblptrh
  6056  019868                     	if	0	;tblptru may be non-zero
  6057  019868                     	endif
  6058  019868                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6059  019868  0E00               	movlw	low (__mediumconst shr (0+16))
  6060  01986A  6EF8               	movwf	tblptru,c
  6061  01986C                     	endif
  6062                           
  6063                           ;stkvar	_c @ sp[(-1)+0]
  6064  01986C  0008               	tblrd		*
  6065  01986E  0EFF               	movlw	-1
  6066  019870  006F FFD7 FFE3     	movff	tablat,plusw1
  6067                           
  6068                           ;mbmc.c: 144:  if (++s[shape] >= strlen(spin[shape]))
  6069                           ;stkvar	_shape @ sp[(-1)+-1]
  6070  019876  0EFE               	movlw	-2
  6071  019878  50E3               	movf	plusw1,w,c
  6072  01987A  0D14               	mullw	20
  6073  01987C  0EDB               	movlw	low _spin
  6074  01987E  6E32               	movwf	(btemp+10)^0,c
  6075  019880  0EFB               	movlw	high _spin
  6076  019882  6E33               	movwf	(btemp+11)^0,c
  6077  019884  50F3               	movf	243,w,c
  6078  019886  2632               	addwf	(btemp+10)^0,f,c
  6079  019888  50F4               	movf	244,w,c
  6080  01988A  2233               	addwfc	(btemp+11)^0,f,c
  6081  01988C  0060  F0CB  FFE6   	movff	btemp+10,postinc1
  6082  019892  0060  F0CF  FFE6   	movff	btemp+11,postinc1
  6083  019898  EC4E  F0CF         	call	_strlen	;wreg free
  6084                           
  6085                           ;stkvar	_shape @ sp[(-1)+-1]
  6086  01989C  0EFE               	movlw	-2
  6087  01989E  006F FF8C  F033    	movff	plusw1,btemp+11
  6088  0198A4  5033               	movf	(btemp+11)^0,w,c
  6089  0198A6  0F74               	addlw	low spinners@s
  6090  0198A8  6ED9               	movwf	fsr2l,c
  6091  0198AA  6ADA               	clrf	fsr2h,c
  6092  0198AC  2ADF               	incf	indf2,f,c
  6093  0198AE  50DF               	movf	indf2,w,c
  6094  0198B0  6E32               	movwf	(btemp+10)^0,c
  6095  0198B2  6A33               	clrf	(btemp+11)^0,c
  6096  0198B4  5028               	movf	btemp^0,w,c
  6097  0198B6  5C32               	subwf	(btemp+10)^0,w,c
  6098  0198B8  5029               	movf	(btemp+1)^0,w,c
  6099  0198BA  5833               	subwfb	(btemp+11)^0,w,c
  6100  0198BC  A0D8               	btfss	status,0,c
  6101  0198BE  D00A               	goto	l10562
  6102                           
  6103                           ;mbmc.c: 145:   s[shape] = 0;
  6104                           ;stkvar	_shape @ sp[(-1)+-1]
  6105  0198C0  0EFE               	movlw	-2
  6106  0198C2  006F FF8C  F033    	movff	plusw1,btemp+11
  6107  0198C8  5033               	movf	(btemp+11)^0,w,c
  6108  0198CA  0F74               	addlw	low spinners@s
  6109  0198CC  6ED9               	movwf	fsr2l,c
  6110  0198CE  6ADA               	clrf	fsr2h,c
  6111  0198D0  0E00               	movlw	0
  6112  0198D2  6EDF               	movwf	indf2,c
  6113  0198D4                     l10562:
  6114                           
  6115                           ;mbmc.c: 146:  return c;
  6116                           ;stkvar	_c @ sp[(-1)+0]
  6117  0198D4  0EFF               	movlw	-1
  6118  0198D6  006F FF8C  F028    	movff	plusw1,btemp
  6119                           
  6120                           ; _spinners: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
  6121  0198DC  52E5               	movf	postdec1,f,c
  6122  0198DE  52E5               	movf	postdec1,f,c
  6123  0198E0  52E5               	movf	postdec1,f,c
  6124  0198E2  0012               	return		;funcret
  6125  0198E4                     __end_of_spinners:
  6126                           	opt callstack 0
  6127                           
  6128 ;; *************** function _init_port_dma *****************
  6129 ;; Defined at:
  6130 ;;		line 90 in file "eadog.c"
  6131 ;; Parameters:    Size  Location     Type
  6132 ;;		None
  6133 ;; Auto vars:     Size  Location     Type
  6134 ;;		None
  6135 ;; Return value:  Size  Location     Type
  6136 ;;                  1  [STACK] void 
  6137 ;; Registers used:
  6138 ;;		wreg, status,2
  6139 ;; Tracked objects:
  6140 ;;		On entry : 0/2
  6141 ;;		On exit  : 3F/3B
  6142 ;;		Unchanged: 0/0
  6143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6148 ;;Total ram usage:        0 bytes
  6149 ;; Hardware stack levels used:    1
  6150 ;; Hardware stack levels required when called:   15
  6151 ;; This function calls:
  6152 ;;		Nothing
  6153 ;; This function is called by:
  6154 ;;		_main
  6155 ;; This function uses a reentrant model
  6156 ;;
  6157                           
  6158                           	psect	text5
  6159  01AF0E                     __ptext5:
  6160                           	opt callstack 0
  6161  01AF0E                     _init_port_dma:
  6162                           	opt callstack 15
  6163                           
  6164                           ;eadog.c: 92:  DMA2CON1bits.DMODE = 0;
  6165                           
  6166                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6167                           ;incstack = 0
  6168  01AF0E  0E3F               	movlw	-193
  6169  01AF10  013B               	movlb	59	; () banked
  6170  01AF12  17DD               	andwf	221,f,b	;volatile
  6171                           
  6172                           ; BSR set to: 59
  6173                           ;eadog.c: 93:  DMA2CON1bits.DSTP = 0;
  6174  01AF14  9BDD               	bcf	221,5,b	;volatile
  6175                           
  6176                           ;eadog.c: 94:  DMA2CON1bits.SMODE = 1;
  6177  01AF16  51DD               	movf	221,w,b	;volatile
  6178  01AF18  0BF9               	andlw	-7
  6179  01AF1A  0902               	iorlw	2
  6180  01AF1C  6FDD               	movwf	221,b	;volatile
  6181                           
  6182                           ;eadog.c: 95:  DMA2CON1bits.SMR = 0;
  6183  01AF1E  0EE7               	movlw	-25
  6184  01AF20  17DD               	andwf	221,f,b	;volatile
  6185                           
  6186                           ; BSR set to: 59
  6187                           ;eadog.c: 96:  DMA2CON1bits.SSTP = 1;
  6188  01AF22  81DD               	bsf	221,0,b	;volatile
  6189                           
  6190                           ; BSR set to: 59
  6191                           ;eadog.c: 97:  DMA2CON0bits.SIRQEN = 0;
  6192  01AF24  9DDC               	bcf	220,6,b	;volatile
  6193                           
  6194                           ;eadog.c: 98:  DMA2DSA = 0x3DEA;
  6195  01AF26  0E3D               	movlw	61
  6196  01AF28  6FD1               	movwf	209,b	;volatile
  6197  01AF2A  0EEA               	movlw	234
  6198  01AF2C  6FD0               	movwf	208,b	;volatile
  6199                           
  6200                           ;eadog.c: 99:  DMA2SSA = (uint32_t) port_data;
  6201  01AF2E  0EFF               	movlw	low _port_data
  6202  01AF30  6FD9               	movwf	217,b	;volatile
  6203  01AF32  0E05               	movlw	high _port_data
  6204  01AF34  6FDA               	movwf	218,b	;volatile
  6205  01AF36  0E00               	movlw	low (_port_data shr (0+16))
  6206  01AF38  6FDB               	movwf	219,b	;volatile
  6207                           
  6208                           ; BSR set to: 59
  6209                           ;eadog.c: 100:  DMA2CON0bits.DGO = 0;
  6210  01AF3A  9BDC               	bcf	220,5,b	;volatile
  6211                           
  6212                           ; BSR set to: 59
  6213                           ; _init_port_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  6214  01AF3C  0012               	return		;funcret
  6215  01AF3E                     __end_of_init_port_dma:
  6216                           	opt callstack 0
  6217                           
  6218 ;; *************** function _init_display *****************
  6219 ;; Defined at:
  6220 ;;		line 38 in file "eadog.c"
  6221 ;; Parameters:    Size  Location     Type
  6222 ;;		None
  6223 ;; Auto vars:     Size  Location     Type
  6224 ;;		None
  6225 ;; Return value:  Size  Location     Type
  6226 ;;                  1  [STACK] void 
  6227 ;; Registers used:
  6228 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6229 ;; Tracked objects:
  6230 ;;		On entry : 3F/3B
  6231 ;;		On exit  : 3F/3D
  6232 ;;		Unchanged: 0/0
  6233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6237 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6238 ;;Total ram usage:        0 bytes
  6239 ;; Hardware stack levels used:    1
  6240 ;; Hardware stack levels required when called:   17
  6241 ;; This function calls:
  6242 ;;		_ringBufS_init
  6243 ;;		_send_lcd_cmd
  6244 ;;		_send_lcd_cmd_long
  6245 ;;		_wdtdelay
  6246 ;; This function is called by:
  6247 ;;		_main
  6248 ;; This function uses a reentrant model
  6249 ;;
  6250                           
  6251                           	psect	text6
  6252  019714                     __ptext6:
  6253                           	opt callstack 0
  6254  019714                     _init_display:
  6255                           	opt callstack 13
  6256                           
  6257                           ;eadog.c: 40:  spi_link.tx1a = &ring_buf1;
  6258                           
  6259                           ; BSR set to: 59
  6260                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6261                           ;incstack = 0
  6262  019714  0E43               	movlw	low _ring_buf1
  6263  019716  0100               	movlb	0	; () banked
  6264  019718  6F66               	movwf	(_spi_link+6)& (0+255),b	;volatile
  6265  01971A  0E04               	movlw	high _ring_buf1
  6266  01971C  6F67               	movwf	(_spi_link+7)& (0+255),b	;volatile
  6267                           
  6268                           ;eadog.c: 41:  spi_link.tx1b = &ring_buf2;
  6269  01971E  0E00               	movlw	low _ring_buf2
  6270  019720  6F64               	movwf	(_spi_link+4)& (0+255),b	;volatile
  6271  019722  0E04               	movlw	high _ring_buf2
  6272  019724  6F65               	movwf	(_spi_link+5)& (0+255),b	;volatile
  6273                           
  6274                           ; BSR set to: 0
  6275                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1a);
  6276  019726  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
  6277  01972C  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
  6278  019732  EC7D  F0D8         	call	_ringBufS_init	;wreg free
  6279                           
  6280                           ;eadog.c: 43:  ringBufS_init(spi_link.tx1b);
  6281  019736  0060  F193  FFE6   	movff	_spi_link+4,postinc1
  6282  01973C  0060  F197  FFE6   	movff	_spi_link+5,postinc1
  6283  019742  EC7D  F0D8         	call	_ringBufS_init	;wreg free
  6284                           
  6285                           ;eadog.c: 45:  LATEbits.LATE2 = 1;
  6286  019746  84BE               	bsf	190,2,c	;volatile
  6287  019748  84BC               	bsf	188,2,c	;volatile
  6288                           
  6289                           ;eadog.c: 59:  wdtdelay(350000);
  6290  01974A  0E30               	movlw	48
  6291  01974C  6EE6               	movwf	postinc1,c
  6292  01974E  0E57               	movlw	87
  6293  019750  6EE6               	movwf	postinc1,c
  6294  019752  0E05               	movlw	5
  6295  019754  6EE6               	movwf	postinc1,c
  6296  019756  0E00               	movlw	0
  6297  019758  6EE6               	movwf	postinc1,c
  6298  01975A  ECAB  F0D3         	call	_wdtdelay	;wreg free
  6299                           
  6300                           ; BSR set to: 0
  6301                           ;eadog.c: 60:  send_lcd_cmd(0x39);
  6302  01975E  0E39               	movlw	57
  6303  019760  6EE6               	movwf	postinc1,c
  6304  019762  EC69  F0D8         	call	_send_lcd_cmd	;wreg free
  6305                           
  6306                           ; BSR set to: 0
  6307                           ;eadog.c: 61:  send_lcd_cmd(0x1d);
  6308  019766  0E1D               	movlw	29
  6309  019768  6EE6               	movwf	postinc1,c
  6310  01976A  EC69  F0D8         	call	_send_lcd_cmd	;wreg free
  6311                           
  6312                           ; BSR set to: 0
  6313                           ;eadog.c: 62:  send_lcd_cmd(0x50);
  6314  01976E  0E50               	movlw	80
  6315  019770  6EE6               	movwf	postinc1,c
  6316  019772  EC69  F0D8         	call	_send_lcd_cmd	;wreg free
  6317                           
  6318                           ; BSR set to: 0
  6319                           ;eadog.c: 63:  send_lcd_cmd(0x6c);
  6320  019776  0E6C               	movlw	108
  6321  019778  6EE6               	movwf	postinc1,c
  6322  01977A  EC69  F0D8         	call	_send_lcd_cmd	;wreg free
  6323                           
  6324                           ; BSR set to: 0
  6325                           ;eadog.c: 64:  send_lcd_cmd(0x76);
  6326  01977E  0E76               	movlw	118
  6327  019780  6EE6               	movwf	postinc1,c
  6328  019782  EC69  F0D8         	call	_send_lcd_cmd	;wreg free
  6329                           
  6330                           ; BSR set to: 0
  6331                           ;eadog.c: 65:  send_lcd_cmd_long(0x38);
  6332  019786  0E38               	movlw	56
  6333  019788  6EE6               	movwf	postinc1,c
  6334  01978A  EC55  F0D8         	call	_send_lcd_cmd_long	;wreg free
  6335                           
  6336                           ; BSR set to: 0
  6337                           ;eadog.c: 66:  send_lcd_cmd(0x0f);
  6338  01978E  0E0F               	movlw	15
  6339  019790  6EE6               	movwf	postinc1,c
  6340  019792  EC69  F0D8         	call	_send_lcd_cmd	;wreg free
  6341                           
  6342                           ; BSR set to: 0
  6343                           ;eadog.c: 67:  send_lcd_cmd_long(0x01);
  6344  019796  0E01               	movlw	1
  6345  019798  6EE6               	movwf	postinc1,c
  6346  01979A  EC55  F0D8         	call	_send_lcd_cmd_long	;wreg free
  6347                           
  6348                           ; BSR set to: 0
  6349                           ;eadog.c: 68:  send_lcd_cmd(0x02);
  6350  01979E  0E02               	movlw	2
  6351  0197A0  6EE6               	movwf	postinc1,c
  6352  0197A2  EC69  F0D8         	call	_send_lcd_cmd	;wreg free
  6353                           
  6354                           ; BSR set to: 0
  6355                           ;eadog.c: 69:  send_lcd_cmd(0x06);
  6356  0197A6  0E06               	movlw	6
  6357  0197A8  6EE6               	movwf	postinc1,c
  6358  0197AA  EC69  F0D8         	call	_send_lcd_cmd	;wreg free
  6359                           
  6360                           ; BSR set to: 0
  6361                           ;eadog.c: 70:  wdtdelay(30);
  6362  0197AE  0E1E               	movlw	30
  6363  0197B0  6EE6               	movwf	postinc1,c
  6364  0197B2  0E00               	movlw	0
  6365  0197B4  6EE6               	movwf	postinc1,c
  6366  0197B6  0E00               	movlw	0
  6367  0197B8  6EE6               	movwf	postinc1,c
  6368  0197BA  0E00               	movlw	0
  6369  0197BC  6EE6               	movwf	postinc1,c
  6370  0197BE  ECAB  F0D3         	call	_wdtdelay	;wreg free
  6371                           
  6372                           ; BSR set to: 0
  6373                           ;eadog.c: 71:  SPI1CON2 = 0x02;
  6374  0197C2  0E02               	movlw	2
  6375  0197C4  013D               	movlb	61	; () banked
  6376  0197C6  6F16               	movwf	22,b	;volatile
  6377                           
  6378                           ; BSR set to: 61
  6379                           ;eadog.c: 72:  SPI1CON1 = 0x40;
  6380  0197C8  0E40               	movlw	64
  6381  0197CA  6F15               	movwf	21,b	;volatile
  6382                           
  6383                           ; BSR set to: 61
  6384                           ;eadog.c: 73:  SPI1CON0 = 0x83;
  6385  0197CC  0E83               	movlw	131
  6386  0197CE  6F14               	movwf	20,b	;volatile
  6387                           
  6388                           ; BSR set to: 61
  6389                           ;eadog.c: 75:  SPI1INTFbits.SPI1TXUIF = 0;
  6390  0197D0  931A               	bcf	26,1,b	;volatile
  6391                           
  6392                           ; BSR set to: 61
  6393                           ;eadog.c: 76:  DMA1CON1bits.DMODE = 0;
  6394  0197D2  0E3F               	movlw	-193
  6395  0197D4  013B               	movlb	59	; () banked
  6396  0197D6  17FD               	andwf	253,f,b	;volatile
  6397                           
  6398                           ; BSR set to: 59
  6399                           ;eadog.c: 77:  DMA1CON1bits.DSTP = 0;
  6400  0197D8  9BFD               	bcf	253,5,b	;volatile
  6401                           
  6402                           ; BSR set to: 59
  6403                           ;eadog.c: 78:  DMA1CON1bits.SMODE = 1;
  6404  0197DA  51FD               	movf	253,w,b	;volatile
  6405  0197DC  0BF9               	andlw	-7
  6406  0197DE  0902               	iorlw	2
  6407  0197E0  6FFD               	movwf	253,b	;volatile
  6408                           
  6409                           ; BSR set to: 59
  6410                           ;eadog.c: 79:  DMA1CON1bits.SMR = 0;
  6411  0197E2  0EE7               	movlw	-25
  6412  0197E4  17FD               	andwf	253,f,b	;volatile
  6413                           
  6414                           ; BSR set to: 59
  6415                           ;eadog.c: 80:  DMA1CON1bits.SSTP = 1;
  6416  0197E6  81FD               	bsf	253,0,b	;volatile
  6417                           
  6418                           ; BSR set to: 59
  6419                           ;eadog.c: 81:  DMA1SSA = (uint32_t) & ring_buf1;
  6420  0197E8  0E43               	movlw	low _ring_buf1
  6421  0197EA  6FF9               	movwf	249,b	;volatile
  6422  0197EC  0E04               	movlw	high _ring_buf1
  6423  0197EE  6FFA               	movwf	250,b	;volatile
  6424  0197F0  0E00               	movlw	low (_ring_buf1 shr (0+16))
  6425  0197F2  6FFB               	movwf	251,b	;volatile
  6426                           
  6427                           ; BSR set to: 59
  6428                           ;eadog.c: 82:  DMA1CON0bits.DGO = 0;
  6429  0197F4  9BFC               	bcf	252,5,b	;volatile
  6430                           
  6431                           ; BSR set to: 59
  6432                           ;eadog.c: 83:  SPI1INTFbits.SPI1TXUIF = 1;
  6433  0197F6  013D               	movlb	61	; () banked
  6434  0197F8  831A               	bsf	26,1,b	;volatile
  6435                           
  6436                           ; BSR set to: 61
  6437                           ;eadog.c: 84:  LATEbits.LATE2 = 0;
  6438  0197FA  94BE               	bcf	190,2,c	;volatile
  6439                           
  6440                           ; BSR set to: 61
  6441                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  6442  0197FC  0012               	return		;funcret
  6443  0197FE                     __end_of_init_display:
  6444                           	opt callstack 0
  6445                           
  6446 ;; *************** function _send_lcd_cmd_long *****************
  6447 ;; Defined at:
  6448 ;;		line 129 in file "eadog.c"
  6449 ;; Parameters:    Size  Location     Type
  6450 ;;  cmd             1  [STACK] const unsigned char 
  6451 ;; Auto vars:     Size  Location     Type
  6452 ;;		None
  6453 ;; Return value:  Size  Location     Type
  6454 ;;                  1  [STACK] void 
  6455 ;; Registers used:
  6456 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6457 ;; Tracked objects:
  6458 ;;		On entry : 3F/0
  6459 ;;		On exit  : 3F/0
  6460 ;;		Unchanged: 0/0
  6461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6466 ;;Total ram usage:        0 bytes
  6467 ;; Hardware stack levels used:    1
  6468 ;; Hardware stack levels required when called:   16
  6469 ;; This function calls:
  6470 ;;		_SPI1_Exchange8bit
  6471 ;;		_wdtdelay
  6472 ;; This function is called by:
  6473 ;;		_init_display
  6474 ;; This function uses a reentrant model
  6475 ;;
  6476                           
  6477                           	psect	text7
  6478  01B0AA                     __ptext7:
  6479                           	opt callstack 0
  6480  01B0AA                     _send_lcd_cmd_long:
  6481                           	opt callstack 13
  6482                           
  6483                           ; BSR set to: 61
  6484                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6485                           ;incstack = 0
  6486                           ;eadog.c: 129: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 130: {;eadog.c:
      +                           131:  do { LATCbits.LATC1 = 0; } while(0);
  6487  01B0AA  92BC               	bcf	188,1,c	;volatile
  6488                           
  6489                           ;eadog.c: 132:  do { LATCbits.LATC2 = 0; } while(0);
  6490  01B0AC  94BC               	bcf	188,2,c	;volatile
  6491                           
  6492                           ;eadog.c: 133:  SPI1_Exchange8bit(cmd);
  6493                           ;stkvar	_cmd @ sp[(0)+-1]
  6494  01B0AE  0EFF               	movlw	-1
  6495  01B0B0  50E3               	movf	plusw1,w,c
  6496  01B0B2  6EE6               	movwf	postinc1,c
  6497  01B0B4  EC49  F0DA         	call	_SPI1_Exchange8bit	;wreg free
  6498                           
  6499                           ; BSR set to: 57
  6500                           ;eadog.c: 134:  wdtdelay(800);
  6501  01B0B8  0E20               	movlw	32
  6502  01B0BA  6EE6               	movwf	postinc1,c
  6503  01B0BC  0E03               	movlw	3
  6504  01B0BE  6EE6               	movwf	postinc1,c
  6505  01B0C0  0E00               	movlw	0
  6506  01B0C2  6EE6               	movwf	postinc1,c
  6507  01B0C4  0E00               	movlw	0
  6508  01B0C6  6EE6               	movwf	postinc1,c
  6509  01B0C8  ECAB  F0D3         	call	_wdtdelay	;wreg free
  6510                           
  6511                           ; BSR set to: 0
  6512  01B0CC  82BC               	bsf	188,1,c	;volatile
  6513                           
  6514                           ; BSR set to: 0
  6515                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  6516  01B0CE  52E5               	movf	postdec1,f,c
  6517  01B0D0  0012               	return		;funcret
  6518  01B0D2                     __end_of_send_lcd_cmd_long:
  6519                           	opt callstack 0
  6520                           
  6521 ;; *************** function _send_lcd_cmd *****************
  6522 ;; Defined at:
  6523 ;;		line 117 in file "eadog.c"
  6524 ;; Parameters:    Size  Location     Type
  6525 ;;  cmd             1  [STACK] const unsigned char 
  6526 ;; Auto vars:     Size  Location     Type
  6527 ;;		None
  6528 ;; Return value:  Size  Location     Type
  6529 ;;                  1  [STACK] void 
  6530 ;; Registers used:
  6531 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6532 ;; Tracked objects:
  6533 ;;		On entry : 3F/0
  6534 ;;		On exit  : 3F/0
  6535 ;;		Unchanged: 0/0
  6536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6540 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6541 ;;Total ram usage:        0 bytes
  6542 ;; Hardware stack levels used:    1
  6543 ;; Hardware stack levels required when called:   16
  6544 ;; This function calls:
  6545 ;;		_SPI1_Exchange8bit
  6546 ;;		_wdtdelay
  6547 ;; This function is called by:
  6548 ;;		_init_display
  6549 ;; This function uses a reentrant model
  6550 ;;
  6551                           
  6552                           	psect	text8
  6553  01B0D2                     __ptext8:
  6554                           	opt callstack 0
  6555  01B0D2                     _send_lcd_cmd:
  6556                           	opt callstack 13
  6557                           
  6558                           ; BSR set to: 0
  6559                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6560                           ;incstack = 0
  6561                           ;eadog.c: 117: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 118: {;eadog.c: 119:
      +                            do { LATCbits.LATC1 = 0; } while(0);
  6562  01B0D2  92BC               	bcf	188,1,c	;volatile
  6563                           
  6564                           ;eadog.c: 120:  do { LATCbits.LATC2 = 0; } while(0);
  6565  01B0D4  94BC               	bcf	188,2,c	;volatile
  6566                           
  6567                           ;eadog.c: 121:  SPI1_Exchange8bit(cmd);
  6568                           ;stkvar	_cmd @ sp[(0)+-1]
  6569  01B0D6  0EFF               	movlw	-1
  6570  01B0D8  50E3               	movf	plusw1,w,c
  6571  01B0DA  6EE6               	movwf	postinc1,c
  6572  01B0DC  EC49  F0DA         	call	_SPI1_Exchange8bit	;wreg free
  6573                           
  6574                           ; BSR set to: 57
  6575                           ;eadog.c: 122:  wdtdelay(30);
  6576  01B0E0  0E1E               	movlw	30
  6577  01B0E2  6EE6               	movwf	postinc1,c
  6578  01B0E4  0E00               	movlw	0
  6579  01B0E6  6EE6               	movwf	postinc1,c
  6580  01B0E8  0E00               	movlw	0
  6581  01B0EA  6EE6               	movwf	postinc1,c
  6582  01B0EC  0E00               	movlw	0
  6583  01B0EE  6EE6               	movwf	postinc1,c
  6584  01B0F0  ECAB  F0D3         	call	_wdtdelay	;wreg free
  6585                           
  6586                           ; BSR set to: 0
  6587  01B0F4  82BC               	bsf	188,1,c	;volatile
  6588                           
  6589                           ; BSR set to: 0
  6590                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  6591  01B0F6  52E5               	movf	postdec1,f,c
  6592  01B0F8  0012               	return		;funcret
  6593  01B0FA                     __end_of_send_lcd_cmd:
  6594                           	opt callstack 0
  6595                           
  6596 ;; *************** function _SPI1_Exchange8bit *****************
  6597 ;; Defined at:
  6598 ;;		line 79 in file "mcc_generated_files/spi1.c"
  6599 ;; Parameters:    Size  Location     Type
  6600 ;;  data            1  [STACK] unsigned char 
  6601 ;; Auto vars:     Size  Location     Type
  6602 ;;		None
  6603 ;; Return value:  Size  Location     Type
  6604 ;;                  1  [STACK] unsigned char 
  6605 ;; Registers used:
  6606 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  6607 ;; Tracked objects:
  6608 ;;		On entry : 0/0
  6609 ;;		On exit  : 3F/39
  6610 ;;		Unchanged: 0/0
  6611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6616 ;;Total ram usage:        0 bytes
  6617 ;; Hardware stack levels used:    1
  6618 ;; Hardware stack levels required when called:   15
  6619 ;; This function calls:
  6620 ;;		Nothing
  6621 ;; This function is called by:
  6622 ;;		_send_lcd_cmd
  6623 ;;		_send_lcd_cmd_long
  6624 ;; This function uses a reentrant model
  6625 ;;
  6626                           
  6627                           	psect	text9
  6628  01B492                     __ptext9:
  6629                           	opt callstack 0
  6630  01B492                     _SPI1_Exchange8bit:
  6631                           	opt callstack 13
  6632                           
  6633                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  6634                           
  6635                           ; BSR set to: 0
  6636                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6637                           ;incstack = 0
  6638  01B492  0E01               	movlw	1
  6639  01B494  013D               	movlb	61	; () banked
  6640  01B496  6F12               	movwf	18,b	;volatile
  6641                           
  6642                           ; BSR set to: 61
  6643                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  6644                           ;stkvar	_data @ sp[(0)+-1]
  6645  01B498  0EFF               	movlw	-1
  6646  01B49A  006F FF8F FD11     	movff	plusw1,15633	;volatile
  6647  01B4A0                     l807:
  6648                           
  6649                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  6650  01B4A0  0139               	movlb	57	; () banked
  6651  01B4A2  A9A2               	btfss	162,4,b	;volatile
  6652  01B4A4  D7FD               	goto	l807
  6653                           
  6654                           ; BSR set to: 57
  6655                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  6656  01B4A6  006F F440  F028    	movff	15632,btemp	;volatile
  6657                           
  6658                           ; BSR set to: 57
  6659                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  6660  01B4AC  52E5               	movf	postdec1,f,c
  6661  01B4AE  0012               	return		;funcret
  6662  01B4B0                     __end_of_SPI1_Exchange8bit:
  6663                           	opt callstack 0
  6664                           
  6665 ;; *************** function _ringBufS_init *****************
  6666 ;; Defined at:
  6667 ;;		line 22 in file "ringbufs.c"
  6668 ;; Parameters:    Size  Location     Type
  6669 ;;  _this           2  [STACK] PTR volatile struct ring
  6670 ;;		 -> ring_buf2(67), ring_buf1(67), 
  6671 ;; Auto vars:     Size  Location     Type
  6672 ;;		None
  6673 ;; Return value:  Size  Location     Type
  6674 ;;                  1  [STACK] void 
  6675 ;; Registers used:
  6676 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6677 ;; Tracked objects:
  6678 ;;		On entry : 0/0
  6679 ;;		On exit  : 0/0
  6680 ;;		Unchanged: 0/0
  6681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6686 ;;Total ram usage:        0 bytes
  6687 ;; Hardware stack levels used:    1
  6688 ;; Hardware stack levels required when called:   16
  6689 ;; This function calls:
  6690 ;;		_memset
  6691 ;; This function is called by:
  6692 ;;		_init_display
  6693 ;; This function uses a reentrant model
  6694 ;;
  6695                           
  6696                           	psect	text10
  6697  01B0FA                     __ptext10:
  6698                           	opt callstack 0
  6699  01B0FA                     _ringBufS_init:
  6700                           	opt callstack 13
  6701                           
  6702                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  6703                           
  6704                           ; BSR set to: 57
  6705                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6706                           ;incstack = 0
  6707  01B0FA  0E43               	movlw	67
  6708  01B0FC  6EE6               	movwf	postinc1,c
  6709  01B0FE  0E00               	movlw	0
  6710  01B100  6EE6               	movwf	postinc1,c
  6711  01B102  0E00               	movlw	0
  6712  01B104  6EE6               	movwf	postinc1,c
  6713  01B106  0E00               	movlw	0
  6714  01B108  6EE6               	movwf	postinc1,c
  6715                           
  6716                           ;stkvar	__this @ sp[(-4)+-2]
  6717  01B10A  0EFA               	movlw	-6
  6718  01B10C  006F FF8F FFE6     	movff	plusw1,postinc1
  6719  01B112  006F FF8F FFE6     	movff	plusw1,postinc1
  6720  01B118  ECF2  F0B2         	call	_memset	;wreg free
  6721                           
  6722                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  6723  01B11C  52E5               	movf	postdec1,f,c
  6724  01B11E  52E5               	movf	postdec1,f,c
  6725  01B120  0012               	return		;funcret
  6726  01B122                     __end_of_ringBufS_init:
  6727                           	opt callstack 0
  6728                           
  6729 ;; *************** function _init_bsoc *****************
  6730 ;; Defined at:
  6731 ;;		line 89 in file "bsoc.c"
  6732 ;; Parameters:    Size  Location     Type
  6733 ;;		None
  6734 ;; Auto vars:     Size  Location     Type
  6735 ;;		None
  6736 ;; Return value:  Size  Location     Type
  6737 ;;                  1  [STACK] void 
  6738 ;; Registers used:
  6739 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  6740 ;; Tracked objects:
  6741 ;;		On entry : 3F/1
  6742 ;;		On exit  : 0/0
  6743 ;;		Unchanged: 0/0
  6744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6749 ;;Total ram usage:        0 bytes
  6750 ;; Hardware stack levels used:    1
  6751 ;; Hardware stack levels required when called:   18
  6752 ;; This function calls:
  6753 ;;		_TMR3_SetInterruptHandler
  6754 ;;		_Volts_to_SOC
  6755 ;;		___fldiv
  6756 ;;		___flmul
  6757 ;;		___fltol
  6758 ;;		___xxtofl
  6759 ;;		_conv_raw_result
  6760 ;; This function is called by:
  6761 ;;		_main
  6762 ;; This function uses a reentrant model
  6763 ;;
  6764                           
  6765                           	psect	text11
  6766  018570                     __ptext11:
  6767                           	opt callstack 0
  6768  018570                     _init_bsoc:
  6769                           	opt callstack 12
  6770                           
  6771                           ;bsoc.c: 94:  C.soc = Volts_to_SOC((uint32_t) conv_raw_result(V_BAT, CONV) * 1000.0);
  6772                           
  6773                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6774                           ;incstack = 0
  6775  018570  0E00               	movlw	0
  6776  018572  6EE6               	movwf	postinc1,c
  6777  018574  0E00               	movlw	0
  6778  018576  6EE6               	movwf	postinc1,c
  6779  018578  0E7A               	movlw	122
  6780  01857A  6EE6               	movwf	postinc1,c
  6781  01857C  0E44               	movlw	68
  6782  01857E  6EE6               	movwf	postinc1,c
  6783  018580  0E00               	movlw	0
  6784  018582  6EE6               	movwf	postinc1,c
  6785  018584  0E04               	movlw	4
  6786  018586  6EE6               	movwf	postinc1,c
  6787  018588  EC58  F0A7         	call	_conv_raw_result	;wreg free
  6788  01858C  0060  F0A3  FFE6   	movff	btemp,postinc1
  6789  018592  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  6790  018598  0060  F0AB  FFE6   	movff	btemp+2,postinc1
  6791  01859E  0060  F0AF  FFE6   	movff	btemp+3,postinc1
  6792  0185A4  ECFF  F0C1         	call	___fltol	;wreg free
  6793  0185A8  0060  F0A3  FFE6   	movff	btemp,postinc1
  6794  0185AE  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  6795  0185B4  0060  F0AB  FFE6   	movff	btemp+2,postinc1
  6796  0185BA  0060  F0AF  FFE6   	movff	btemp+3,postinc1
  6797  0185C0  0E00               	movlw	0
  6798  0185C2  6EE6               	movwf	postinc1,c
  6799  0185C4  ECDA  F0BC         	call	___xxtofl	;wreg free
  6800  0185C8  0060  F0A3  FFE6   	movff	btemp,postinc1
  6801  0185CE  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  6802  0185D4  0060  F0AB  FFE6   	movff	btemp+2,postinc1
  6803  0185DA  0060  F0AF  FFE6   	movff	btemp+3,postinc1
  6804  0185E0  EC0F  F099         	call	___flmul	;wreg free
  6805  0185E4  0060  F0A3  FFE6   	movff	btemp,postinc1
  6806  0185EA  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  6807  0185F0  0060  F0AB  FFE6   	movff	btemp+2,postinc1
  6808  0185F6  0060  F0AF  FFE6   	movff	btemp+3,postinc1
  6809  0185FC  ECFF  F0C1         	call	___fltol	;wreg free
  6810  018600  0060  F0A3  FFE6   	movff	btemp,postinc1
  6811  018606  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  6812  01860C  0060  F0AB  FFE6   	movff	btemp+2,postinc1
  6813  018612  0060  F0AF  FFE6   	movff	btemp+3,postinc1
  6814  018618  EC35  F0D0         	call	_Volts_to_SOC	;wreg free
  6815  01861C  0060  F0A0  F1AE   	movff	btemp,_C+174	;volatile
  6816  018622  0060  F0A4  F1AF   	movff	btemp+1,_C+175	;volatile
  6817                           
  6818                           ;bsoc.c: 95:  C.dynamic_ah = C.bank_ah * (C.soc / 100.0);
  6819  018628  0060  F623  FFE6   	movff	_C+136,postinc1
  6820  01862E  0060  F627  FFE6   	movff	_C+137,postinc1
  6821  018634  0060  F62B  FFE6   	movff	_C+138,postinc1
  6822  01863A  0060  F62F  FFE6   	movff	_C+139,postinc1
  6823  018640  0E00               	movlw	0
  6824  018642  6EE6               	movwf	postinc1,c
  6825  018644  0E00               	movlw	0
  6826  018646  6EE6               	movwf	postinc1,c
  6827  018648  0EC8               	movlw	200
  6828  01864A  6EE6               	movwf	postinc1,c
  6829  01864C  0E42               	movlw	66
  6830  01864E  6EE6               	movwf	postinc1,c
  6831  018650  0101               	movlb	1	; () banked
  6832  018652  51AE               	movf	(_C+174)& (0+255),w,b	;volatile
  6833  018654  6E30               	movwf	(btemp+8)^0,c
  6834  018656  51AF               	movf	(_C+175)& (0+255),w,b	;volatile
  6835  018658  6E31               	movwf	(btemp+9)^0,c
  6836  01865A  6A32               	clrf	(btemp+10)^0,c
  6837  01865C  6A33               	clrf	(btemp+11)^0,c
  6838  01865E  0060  F0C3  FFE6   	movff	btemp+8,postinc1
  6839  018664  0060  F0C7  FFE6   	movff	btemp+9,postinc1
  6840  01866A  0060  F0CB  FFE6   	movff	btemp+10,postinc1
  6841  018670  0060  F0CF  FFE6   	movff	btemp+11,postinc1
  6842  018676  0E00               	movlw	0
  6843  018678  6EE6               	movwf	postinc1,c
  6844  01867A  ECDA  F0BC         	call	___xxtofl	;wreg free
  6845  01867E  0060  F0A3  FFE6   	movff	btemp,postinc1
  6846  018684  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  6847  01868A  0060  F0AB  FFE6   	movff	btemp+2,postinc1
  6848  018690  0060  F0AF  FFE6   	movff	btemp+3,postinc1
  6849  018696  EC9B  F0A4         	call	___fldiv	;wreg free
  6850  01869A  0060  F0A3  FFE6   	movff	btemp,postinc1
  6851  0186A0  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  6852  0186A6  0060  F0AB  FFE6   	movff	btemp+2,postinc1
  6853  0186AC  0060  F0AF  FFE6   	movff	btemp+3,postinc1
  6854  0186B2  EC0F  F099         	call	___flmul	;wreg free
  6855  0186B6  0060  F0A0  F18C   	movff	btemp,_C+140	;volatile
  6856  0186BC  0060  F0A4  F18D   	movff	btemp+1,_C+141	;volatile
  6857  0186C2  0060  F0A8  F18E   	movff	btemp+2,_C+142	;volatile
  6858  0186C8  0060  F0AC  F18F   	movff	btemp+3,_C+143	;volatile
  6859                           
  6860                           ;bsoc.c: 96:  TMR3_SetInterruptHandler(calc_bsoc);
  6861  0186CE  0E04               	movlw	low _calc_bsoc
  6862  0186D0  6EE6               	movwf	postinc1,c
  6863  0186D2  0E42               	movlw	high _calc_bsoc
  6864  0186D4  6EE6               	movwf	postinc1,c
  6865  0186D6  0E01               	movlw	low (_calc_bsoc shr (0+16))
  6866  0186D8  6EE6               	movwf	postinc1,c
  6867  0186DA  EC09  F0D9         	call	_TMR3_SetInterruptHandler	;wreg free
  6868                           
  6869                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  6870  0186DE  0012               	return		;funcret
  6871  0186E0                     __end_of_init_bsoc:
  6872                           	opt callstack 0
  6873                           
  6874 ;; *************** function _Volts_to_SOC *****************
  6875 ;; Defined at:
  6876 ;;		line 153 in file "bsoc.c"
  6877 ;; Parameters:    Size  Location     Type
  6878 ;;  cvoltage        4  [STACK] unsigned long 
  6879 ;; Auto vars:     Size  Location     Type
  6880 ;;		None
  6881 ;; Return value:  Size  Location     Type
  6882 ;;                  2  [STACK] unsigned short 
  6883 ;; Registers used:
  6884 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, tblptrl, tblptrh, tblptru, prodl, prodh
  6885 ;; Tracked objects:
  6886 ;;		On entry : 0/1
  6887 ;;		On exit  : 0/0
  6888 ;;		Unchanged: 0/0
  6889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6894 ;;Total ram usage:        0 bytes
  6895 ;; Hardware stack levels used:    1
  6896 ;; Hardware stack levels required when called:   15
  6897 ;; This function calls:
  6898 ;;		Nothing
  6899 ;; This function is called by:
  6900 ;;		_init_bsoc
  6901 ;; This function uses a reentrant model
  6902 ;;
  6903                           
  6904                           	psect	text12
  6905  01A06A                     __ptext12:
  6906                           	opt callstack 0
  6907  01A06A                     _Volts_to_SOC:
  6908                           	opt callstack 14
  6909                           
  6910                           ;bsoc.c: 153: uint16_t Volts_to_SOC(uint32_t cvoltage);bsoc.c: 154: {;bsoc.c: 155:  stat
      +                          ic uint8_t slot;;bsoc.c: 157:  C.soc = 0;
  6911                           
  6912                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6913                           ;incstack = 0
  6914  01A06A  0101               	movlb	1	; () banked
  6915  01A06C  6BAE               	clrf	(_C+174)& (0+255),b	;volatile
  6916  01A06E  6BAF               	clrf	(_C+175)& (0+255),b	;volatile
  6917                           
  6918                           ;bsoc.c: 158:  for (slot = 0; slot < 26; slot++) {
  6919  01A070  6A55               	clrf	Volts_to_SOC@slot^0,c
  6920  01A072                     l10332:
  6921                           
  6922                           ;bsoc.c: 159:   if (cvoltage > BVSOC_TABLE[slot][0]) {
  6923                           ;stkvar	_cvoltage @ sp[(0)+-4]
  6924  01A072  5055               	movf	Volts_to_SOC@slot^0,w,c
  6925  01A074  0D08               	mullw	8
  6926  01A076  0E7B               	movlw	low _BVSOC_TABLE
  6927  01A078  24F3               	addwf	243,w,c
  6928  01A07A  6EF6               	movwf	tblptrl,c
  6929  01A07C  0EFA               	movlw	high _BVSOC_TABLE
  6930  01A07E  20F4               	addwfc	244,w,c
  6931  01A080  6EF7               	movwf	tblptrh,c
  6932  01A082                     	if	1	;There are 3 active tblptr bytes
  6933  01A082  6AF8               	clrf	tblptru,c
  6934  01A084  0E00               	movlw	low (__mediumconst shr (0+16))
  6935  01A086  22F8               	addwfc	tblptru,f,c
  6936  01A088                     	endif
  6937  01A088  0EFC               	movlw	-4
  6938  01A08A  50E3               	movf	plusw1,w,c
  6939  01A08C  0009               	tblrd		*+
  6940  01A08E  5CF5               	subwf	tablat,w,c
  6941  01A090  0EFD               	movlw	-3
  6942  01A092  50E3               	movf	plusw1,w,c
  6943  01A094  0009               	tblrd		*+
  6944  01A096  58F5               	subwfb	tablat,w,c
  6945  01A098  0EFE               	movlw	-2
  6946  01A09A  50E3               	movf	plusw1,w,c
  6947  01A09C  0009               	tblrd		*+
  6948  01A09E  58F5               	subwfb	tablat,w,c
  6949  01A0A0  0EFF               	movlw	-1
  6950  01A0A2  50E3               	movf	plusw1,w,c
  6951  01A0A4  0009               	tblrd		*+
  6952  01A0A6  58F5               	subwfb	tablat,w,c
  6953  01A0A8  B0D8               	btfsc	status,0,c
  6954  01A0AA  D017               	goto	l10336
  6955                           
  6956                           ;bsoc.c: 160:    C.soc = BVSOC_TABLE[slot][1];
  6957  01A0AC  5055               	movf	Volts_to_SOC@slot^0,w,c
  6958  01A0AE  0D08               	mullw	8
  6959  01A0B0  0E04               	movlw	4
  6960  01A0B2  26F3               	addwf	243,f,c
  6961  01A0B4  0E00               	movlw	0
  6962  01A0B6  22F4               	addwfc	244,f,c
  6963  01A0B8  0E7B               	movlw	low _BVSOC_TABLE
  6964  01A0BA  24F3               	addwf	243,w,c
  6965  01A0BC  6EF6               	movwf	tblptrl,c
  6966  01A0BE  0EFA               	movlw	high _BVSOC_TABLE
  6967  01A0C0  20F4               	addwfc	244,w,c
  6968  01A0C2  6EF7               	movwf	tblptrh,c
  6969  01A0C4                     	if	1	;There are 3 active tblptr bytes
  6970  01A0C4  6AF8               	clrf	tblptru,c
  6971  01A0C6  0E00               	movlw	low (__mediumconst shr (0+16))
  6972  01A0C8  22F8               	addwfc	tblptru,f,c
  6973  01A0CA                     	endif
  6974  01A0CA  0009               	tblrd		*+
  6975  01A0CC  006F FFD4  F1AE    	movff	tablat,_C+174	;volatile
  6976  01A0D2  000A               	tblrd		*-
  6977  01A0D4  006F FFD4  F1AF    	movff	tablat,_C+175	;volatile
  6978  01A0DA                     l10336:
  6979                           
  6980                           ;bsoc.c: 162:  }
  6981  01A0DA  2A55               	incf	Volts_to_SOC@slot^0,f,c
  6982  01A0DC  0E19               	movlw	25
  6983  01A0DE  6455               	cpfsgt	Volts_to_SOC@slot^0,c
  6984  01A0E0  D7C8               	goto	l10332
  6985                           
  6986                           ;bsoc.c: 164:  return C.soc;
  6987  01A0E2  EE20  F1AE         	lfsr	2,_C+174	;volatile
  6988  01A0E6  006F FF78  F028    	movff	postinc2,btemp
  6989  01A0EC  006F FF74  F029    	movff	postdec2,btemp+1
  6990                           
  6991                           ; _Volts_to_SOC: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, 
      +                          argsize = 4, vargsize = 0
  6992  01A0F2  52E5               	movf	postdec1,f,c
  6993  01A0F4  52E5               	movf	postdec1,f,c
  6994  01A0F6  52E5               	movf	postdec1,f,c
  6995  01A0F8  52E5               	movf	postdec1,f,c
  6996  01A0FA  0012               	return		;funcret
  6997  01A0FC                     __end_of_Volts_to_SOC:
  6998                           	opt callstack 0
  6999                           
  7000 ;; *************** function _hid_display *****************
  7001 ;; Defined at:
  7002 ;;		line 17 in file "hid.c"
  7003 ;; Parameters:    Size  Location     Type
  7004 ;;  h               1  [STACK] PTR struct H_data
  7005 ;;		 -> H(7), 
  7006 ;; Auto vars:     Size  Location     Type
  7007 ;;		None
  7008 ;; Return value:  Size  Location     Type
  7009 ;;                  1  [STACK] PTR struct H_data
  7010 ;; Registers used:
  7011 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
  7012 ;; Tracked objects:
  7013 ;;		On entry : 3F/1
  7014 ;;		On exit  : 0/0
  7015 ;;		Unchanged: 0/0
  7016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7021 ;;Total ram usage:        0 bytes
  7022 ;; Hardware stack levels used:    1
  7023 ;; Hardware stack levels required when called:   17
  7024 ;; This function calls:
  7025 ;;		_hid_input
  7026 ;; This function is called by:
  7027 ;;		_main
  7028 ;; This function uses a reentrant model
  7029 ;;
  7030                           
  7031                           	psect	text13
  7032  01951A                     __ptext13:
  7033                           	opt callstack 0
  7034  01951A                     _hid_display:
  7035                           	opt callstack 13
  7036                           
  7037                           ;hid.c: 17: H_data* hid_display(H_data* h);hid.c: 18: {;hid.c: 19:  hid_input(h);
  7038                           ;stkvar	_h @ sp[(0)+-1]
  7039                           
  7040                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7041                           ;incstack = 0
  7042  01951A  0EFF               	movlw	-1
  7043  01951C  50E3               	movf	plusw1,w,c
  7044  01951E  6EE6               	movwf	postinc1,c
  7045  019520  ECC7  F0D0         	call	_hid_input	;wreg free
  7046                           
  7047                           ;hid.c: 21:  switch (h->h_state) {
  7048  019524  D066               	goto	l10736
  7049  019526                     l10714:
  7050                           
  7051                           ;hid.c: 23:   h->h_state = H_STATE_DISPLAY;
  7052                           ;stkvar	_h @ sp[(0)+-1]
  7053  019526  0EFF               	movlw	-1
  7054  019528  50E3               	movf	plusw1,w,c
  7055  01952A  6ED9               	movwf	fsr2l,c
  7056  01952C  6ADA               	clrf	fsr2h,c
  7057  01952E  0E01               	movlw	1
  7058  019530  26D9               	addwf	fsr2l,f,c
  7059  019532  0E01               	movlw	1
  7060  019534  6EDF               	movwf	indf2,c
  7061                           
  7062                           ;hid.c: 24:   h->hid_display = HID_MAIN;
  7063                           ;stkvar	_h @ sp[(0)+-1]
  7064  019536  0EFF               	movlw	-1
  7065  019538  50E3               	movf	plusw1,w,c
  7066  01953A  6ED9               	movwf	fsr2l,c
  7067  01953C  6ADA               	clrf	fsr2h,c
  7068  01953E  0E00               	movlw	0
  7069  019540  6EDF               	movwf	indf2,c
  7070                           
  7071                           ;hid.c: 25:   h->wait_enter = 1;
  7072                           ;stkvar	_h @ sp[(0)+-1]
  7073  019542  0EFF               	movlw	-1
  7074  019544  50E3               	movf	plusw1,w,c
  7075  019546  6ED9               	movwf	fsr2l,c
  7076  019548  6ADA               	clrf	fsr2h,c
  7077  01954A  0E04               	movlw	4
  7078  01954C  26D9               	addwf	fsr2l,f,c
  7079  01954E  0E01               	movlw	1
  7080  019550  6EDF               	movwf	indf2,c
  7081                           
  7082                           ;hid.c: 26:   h->wait_select = 1;
  7083                           ;stkvar	_h @ sp[(0)+-1]
  7084  019552  0EFF               	movlw	-1
  7085  019554  50E3               	movf	plusw1,w,c
  7086  019556  6ED9               	movwf	fsr2l,c
  7087  019558  6ADA               	clrf	fsr2h,c
  7088  01955A  0E02               	movlw	2
  7089  01955C  26D9               	addwf	fsr2l,f,c
  7090  01955E  0E01               	movlw	1
  7091  019560  6EDF               	movwf	indf2,c
  7092                           
  7093                           ;hid.c: 27:   h->select_p = SW_OFF;
  7094                           ;stkvar	_h @ sp[(0)+-1]
  7095  019562  0EFF               	movlw	-1
  7096  019564  50E3               	movf	plusw1,w,c
  7097  019566  6ED9               	movwf	fsr2l,c
  7098  019568  6ADA               	clrf	fsr2h,c
  7099  01956A  0E03               	movlw	3
  7100  01956C  26D9               	addwf	fsr2l,f,c
  7101  01956E  0E00               	movlw	0
  7102  019570  6EDF               	movwf	indf2,c
  7103                           
  7104                           ;hid.c: 28:   h->enter_p = SW_OFF;
  7105                           ;stkvar	_h @ sp[(0)+-1]
  7106  019572  0EFF               	movlw	-1
  7107  019574  50E3               	movf	plusw1,w,c
  7108  019576  6ED9               	movwf	fsr2l,c
  7109  019578  6ADA               	clrf	fsr2h,c
  7110  01957A  0E05               	movlw	5
  7111  01957C  26D9               	addwf	fsr2l,f,c
  7112  01957E  0E00               	movlw	0
  7113  019580  D036               	goto	L1
  7114  019582                     l10726:
  7115                           
  7116                           ;hid.c: 32:   if (!h->wait_select && (h->select_p == SW_OFF)) {
  7117                           ;stkvar	_h @ sp[(0)+-1]
  7118  019582  0EFF               	movlw	-1
  7119  019584  50E3               	movf	plusw1,w,c
  7120  019586  6ED9               	movwf	fsr2l,c
  7121  019588  6ADA               	clrf	fsr2h,c
  7122  01958A  0E02               	movlw	2
  7123  01958C  26D9               	addwf	fsr2l,f,c
  7124  01958E  50DF               	movf	indf2,w,c
  7125  019590  A4D8               	btfss	status,2,c
  7126  019592  D042               	goto	l1943
  7127                           
  7128                           ;stkvar	_h @ sp[(0)+-1]
  7129  019594  0EFF               	movlw	-1
  7130  019596  50E3               	movf	plusw1,w,c
  7131  019598  6ED9               	movwf	fsr2l,c
  7132  01959A  6ADA               	clrf	fsr2h,c
  7133  01959C  0E03               	movlw	3
  7134  01959E  26D9               	addwf	fsr2l,f,c
  7135  0195A0  50DF               	movf	indf2,w,c
  7136  0195A2  A4D8               	btfss	status,2,c
  7137  0195A4  D039               	goto	l1943
  7138                           
  7139                           ;hid.c: 33:    h->sequence = ++h->sequence & 0x3;
  7140                           ;stkvar	_h @ sp[(0)+-1]
  7141  0195A6  0EFF               	movlw	-1
  7142  0195A8  50E3               	movf	plusw1,w,c
  7143  0195AA  6ED9               	movwf	fsr2l,c
  7144  0195AC  6ADA               	clrf	fsr2h,c
  7145  0195AE  0E06               	movlw	6
  7146  0195B0  26D9               	addwf	fsr2l,f,c
  7147                           
  7148                           ;stkvar	_h @ sp[(0)+-1]
  7149  0195B2  0EFF               	movlw	-1
  7150  0195B4  50E3               	movf	plusw1,w,c
  7151  0195B6  6EE9               	movwf	fsr0l,c
  7152  0195B8  6AEA               	clrf	fsr0h,c
  7153  0195BA  0E06               	movlw	6
  7154  0195BC  26E9               	addwf	fsr0l,f,c
  7155  0195BE  2AEF               	incf	indf0,f,c
  7156  0195C0  50EF               	movf	indf0,w,c
  7157  0195C2  0B03               	andlw	3
  7158  0195C4  6EDF               	movwf	indf2,c
  7159                           
  7160                           ;hid.c: 34:    h->hid_display = h->sequence;
  7161                           ;stkvar	_h @ sp[(0)+-1]
  7162  0195C6  0EFF               	movlw	-1
  7163  0195C8  50E3               	movf	plusw1,w,c
  7164  0195CA  6ED9               	movwf	fsr2l,c
  7165  0195CC  6ADA               	clrf	fsr2h,c
  7166  0195CE  0E06               	movlw	6
  7167  0195D0  26D9               	addwf	fsr2l,f,c
  7168                           
  7169                           ;stkvar	_h @ sp[(0)+-1]
  7170  0195D2  0EFF               	movlw	-1
  7171  0195D4  50E3               	movf	plusw1,w,c
  7172  0195D6  6EE9               	movwf	fsr0l,c
  7173  0195D8  6AEA               	clrf	fsr0h,c
  7174  0195DA  006F FF7F FFEF     	movff	indf2,indf0
  7175                           
  7176                           ;hid.c: 35:    h->wait_select = 1;
  7177                           ;stkvar	_h @ sp[(0)+-1]
  7178  0195E0  0EFF               	movlw	-1
  7179  0195E2  50E3               	movf	plusw1,w,c
  7180  0195E4  6ED9               	movwf	fsr2l,c
  7181  0195E6  6ADA               	clrf	fsr2h,c
  7182  0195E8  0E02               	movlw	2
  7183  0195EA  26D9               	addwf	fsr2l,f,c
  7184  0195EC  0E01               	movlw	1
  7185  0195EE                     L1:
  7186  0195EE  6EDF               	movwf	indf2,c
  7187  0195F0  D013               	goto	l1943
  7188  0195F2                     l10736:
  7189                           
  7190                           ;stkvar	_h @ sp[(0)+-1]
  7191  0195F2  0EFF               	movlw	-1
  7192  0195F4  50E3               	movf	plusw1,w,c
  7193  0195F6  6ED9               	movwf	fsr2l,c
  7194  0195F8  6ADA               	clrf	fsr2h,c
  7195  0195FA  0E01               	movlw	1
  7196  0195FC  26D9               	addwf	fsr2l,f,c
  7197  0195FE  50DF               	movf	indf2,w,c
  7198  019600  6E32               	movwf	(btemp+10)^0,c
  7199  019602  6A33               	clrf	(btemp+11)^0,c
  7200                           
  7201                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7202                           ; Switch size 1, requested type "simple"
  7203                           ; Number of cases is 1, Range of values is 0 to 0
  7204                           ; switch strategies available:
  7205                           ; Name         Instructions Cycles
  7206                           ; simple_byte            4     3 (average)
  7207                           ;	Chosen strategy is simple_byte
  7208  019604  5033               	movf	(btemp+11)^0,w,c
  7209  019606  0A00               	xorlw	0	; case 0
  7210  019608  A4D8               	btfss	status,2,c
  7211  01960A  D7BB               	goto	l10726
  7212                           
  7213                           ; Switch size 1, requested type "simple"
  7214                           ; Number of cases is 2, Range of values is 0 to 1
  7215                           ; switch strategies available:
  7216                           ; Name         Instructions Cycles
  7217                           ; simple_byte            7     4 (average)
  7218                           ;	Chosen strategy is simple_byte
  7219  01960C  5032               	movf	(btemp+10)^0,w,c
  7220  01960E  0A00               	xorlw	0	; case 0
  7221  019610  B4D8               	btfsc	status,2,c
  7222  019612  D789               	goto	l10714
  7223  019614  0A01               	xorlw	1	; case 1
  7224  019616  D7B5               	goto	l10726
  7225  019618                     l1943:
  7226                           
  7227                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  7228  019618  52E5               	movf	postdec1,f,c
  7229  01961A  0012               	return		;funcret
  7230  01961C                     __end_of_hid_display:
  7231                           	opt callstack 0
  7232                           
  7233 ;; *************** function _hid_input *****************
  7234 ;; Defined at:
  7235 ;;		line 3 in file "hid.c"
  7236 ;; Parameters:    Size  Location     Type
  7237 ;;  h               1  [STACK] PTR struct H_data
  7238 ;;		 -> H(7), 
  7239 ;; Auto vars:     Size  Location     Type
  7240 ;;		None
  7241 ;; Return value:  Size  Location     Type
  7242 ;;                  1  [STACK] PTR struct H_data
  7243 ;; Registers used:
  7244 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh
  7245 ;; Tracked objects:
  7246 ;;		On entry : 0/1
  7247 ;;		On exit  : 0/0
  7248 ;;		Unchanged: 0/0
  7249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7253 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7254 ;;Total ram usage:        0 bytes
  7255 ;; Hardware stack levels used:    1
  7256 ;; Hardware stack levels required when called:   16
  7257 ;; This function calls:
  7258 ;;		_get_switch
  7259 ;; This function is called by:
  7260 ;;		_hid_display
  7261 ;; This function uses a reentrant model
  7262 ;;
  7263                           
  7264                           	psect	text14
  7265  01A18E                     __ptext14:
  7266                           	opt callstack 0
  7267  01A18E                     _hid_input:
  7268                           	opt callstack 13
  7269                           
  7270                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
  7271                           
  7272                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7273                           ;incstack = 0
  7274  01A18E  0E02               	movlw	2
  7275  01A190  6EE6               	movwf	postinc1,c
  7276  01A192  ECFE  F0D7         	call	_get_switch	;wreg free
  7277  01A196  5028               	movf	btemp^0,w,c
  7278  01A198  B4D8               	btfsc	status,2,c
  7279  01A19A  D01C               	goto	l10262
  7280                           
  7281                           ;hid.c: 6:   h->wait_select = 0;
  7282                           ;stkvar	_h @ sp[(0)+-1]
  7283  01A19C  0EFF               	movlw	-1
  7284  01A19E  50E3               	movf	plusw1,w,c
  7285  01A1A0  6ED9               	movwf	fsr2l,c
  7286  01A1A2  6ADA               	clrf	fsr2h,c
  7287  01A1A4  0E02               	movlw	2
  7288  01A1A6  26D9               	addwf	fsr2l,f,c
  7289  01A1A8  0E00               	movlw	0
  7290  01A1AA  6EDF               	movwf	indf2,c
  7291                           
  7292                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
  7293  01A1AC  0E02               	movlw	2
  7294  01A1AE  6EE6               	movwf	postinc1,c
  7295  01A1B0  ECFE  F0D7         	call	_get_switch	;wreg free
  7296  01A1B4  5028               	movf	btemp^0,w,c
  7297  01A1B6  B4D8               	btfsc	status,2,c
  7298  01A1B8  D003               	goto	u9400
  7299  01A1BA  6A33               	clrf	(btemp+11)^0,c
  7300  01A1BC  2A33               	incf	(btemp+11)^0,f,c
  7301  01A1BE  D001               	goto	u9418
  7302  01A1C0                     u9400:
  7303  01A1C0  6A33               	clrf	(btemp+11)^0,c
  7304  01A1C2                     u9418:
  7305                           
  7306                           ;stkvar	_h @ sp[(0)+-1]
  7307  01A1C2  0EFF               	movlw	-1
  7308  01A1C4  50E3               	movf	plusw1,w,c
  7309  01A1C6  6ED9               	movwf	fsr2l,c
  7310  01A1C8  6ADA               	clrf	fsr2h,c
  7311  01A1CA  0E03               	movlw	3
  7312  01A1CC  26D9               	addwf	fsr2l,f,c
  7313  01A1CE  0060  F0CF  FFDF   	movff	btemp+11,indf2
  7314  01A1D4                     l10262:
  7315                           
  7316                           ;hid.c: 10:  if (get_switch(SENTER)) {
  7317  01A1D4  0E03               	movlw	3
  7318  01A1D6  6EE6               	movwf	postinc1,c
  7319  01A1D8  ECFE  F0D7         	call	_get_switch	;wreg free
  7320  01A1DC  5028               	movf	btemp^0,w,c
  7321  01A1DE  B4D8               	btfsc	status,2,c
  7322  01A1E0  D01C               	goto	l1934
  7323                           
  7324                           ;hid.c: 11:   h->wait_enter = 0;
  7325                           ;stkvar	_h @ sp[(0)+-1]
  7326  01A1E2  0EFF               	movlw	-1
  7327  01A1E4  50E3               	movf	plusw1,w,c
  7328  01A1E6  6ED9               	movwf	fsr2l,c
  7329  01A1E8  6ADA               	clrf	fsr2h,c
  7330  01A1EA  0E04               	movlw	4
  7331  01A1EC  26D9               	addwf	fsr2l,f,c
  7332  01A1EE  0E00               	movlw	0
  7333  01A1F0  6EDF               	movwf	indf2,c
  7334                           
  7335                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
  7336  01A1F2  0E03               	movlw	3
  7337  01A1F4  6EE6               	movwf	postinc1,c
  7338  01A1F6  ECFE  F0D7         	call	_get_switch	;wreg free
  7339  01A1FA  5028               	movf	btemp^0,w,c
  7340  01A1FC  B4D8               	btfsc	status,2,c
  7341  01A1FE  D003               	goto	u9430
  7342  01A200  6A33               	clrf	(btemp+11)^0,c
  7343  01A202  2A33               	incf	(btemp+11)^0,f,c
  7344  01A204  D001               	goto	u9448
  7345  01A206                     u9430:
  7346  01A206  6A33               	clrf	(btemp+11)^0,c
  7347  01A208                     u9448:
  7348                           
  7349                           ;stkvar	_h @ sp[(0)+-1]
  7350  01A208  0EFF               	movlw	-1
  7351  01A20A  50E3               	movf	plusw1,w,c
  7352  01A20C  6ED9               	movwf	fsr2l,c
  7353  01A20E  6ADA               	clrf	fsr2h,c
  7354  01A210  0E05               	movlw	5
  7355  01A212  26D9               	addwf	fsr2l,f,c
  7356  01A214  0060  F0CF  FFDF   	movff	btemp+11,indf2
  7357  01A21A                     l1934:
  7358                           
  7359                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  7360  01A21A  52E5               	movf	postdec1,f,c
  7361  01A21C  0012               	return		;funcret
  7362  01A21E                     __end_of_hid_input:
  7363                           	opt callstack 0
  7364                           
  7365 ;; *************** function _get_switch *****************
  7366 ;; Defined at:
  7367 ;;		line 18 in file "dio.c"
  7368 ;; Parameters:    Size  Location     Type
  7369 ;;  i               1  [STACK] unsigned char 
  7370 ;; Auto vars:     Size  Location     Type
  7371 ;;		None
  7372 ;; Return value:  Size  Location     Type
  7373 ;;                  1  [STACK] enum E17021
  7374 ;; Registers used:
  7375 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  7376 ;; Tracked objects:
  7377 ;;		On entry : 0/2
  7378 ;;		On exit  : 0/0
  7379 ;;		Unchanged: 0/0
  7380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7385 ;;Total ram usage:        0 bytes
  7386 ;; Hardware stack levels used:    1
  7387 ;; Hardware stack levels required when called:   15
  7388 ;; This function calls:
  7389 ;;		Nothing
  7390 ;; This function is called by:
  7391 ;;		_main
  7392 ;;		_hid_input
  7393 ;; This function uses a reentrant model
  7394 ;;
  7395                           
  7396                           	psect	text15
  7397  01AFFC                     __ptext15:
  7398                           	opt callstack 0
  7399  01AFFC                     _get_switch:
  7400                           	opt callstack 13
  7401                           
  7402                           ;dio.c: 18: SW_STATES get_switch(uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 4)
  7403                           ;stkvar	_i @ sp[(0)+-1]
  7404                           
  7405                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7406                           ;incstack = 0
  7407  01AFFC  0EFF               	movlw	-1
  7408  01AFFE  006F FF8C  F028    	movff	plusw1,btemp
  7409  01B004  0E03               	movlw	3
  7410  01B006  6428               	cpfsgt	btemp^0,c
  7411  01B008  D002               	goto	l9534
  7412                           
  7413                           ;dio.c: 21:   return SW_OFF;
  7414  01B00A  0E00               	movlw	0
  7415  01B00C  D00A               	goto	L2
  7416  01B00E                     l9534:
  7417                           
  7418                           ;dio.c: 23:  return S.button[i].sw;
  7419                           ;stkvar	_i @ sp[(0)+-1]
  7420  01B00E  0EFF               	movlw	-1
  7421  01B010  50E3               	movf	plusw1,w,c
  7422  01B012  0D05               	mullw	5
  7423  01B014  0EBD               	movlw	low _S
  7424  01B016  24F3               	addwf	243,w,c
  7425  01B018  6ED9               	movwf	fsr2l,c
  7426  01B01A  0E02               	movlw	high _S
  7427  01B01C  20F4               	addwfc	prodh,w,c
  7428  01B01E  6EDA               	movwf	fsr2h,c
  7429  01B020  50DF               	movf	indf2,w,c
  7430  01B022                     L2:
  7431  01B022  6E28               	movwf	btemp^0,c
  7432                           
  7433                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  7434  01B024  52E5               	movf	postdec1,f,c
  7435  01B026  0012               	return		;funcret
  7436  01B028                     __end_of_get_switch:
  7437                           	opt callstack 0
  7438                           
  7439 ;; *************** function _esr_check *****************
  7440 ;; Defined at:
  7441 ;;		line 173 in file "bsoc.c"
  7442 ;; Parameters:    Size  Location     Type
  7443 ;;  fsm             1  [STACK] unsigned char 
  7444 ;; Auto vars:     Size  Location     Type
  7445 ;;		None
  7446 ;; Return value:  Size  Location     Type
  7447 ;;                  4  [STACK] float 
  7448 ;; Registers used:
  7449 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  7450 ;; Tracked objects:
  7451 ;;		On entry : 0/0
  7452 ;;		On exit  : 0/0
  7453 ;;		Unchanged: 0/0
  7454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7459 ;;Total ram usage:        0 bytes
  7460 ;; Hardware stack levels used:    1
  7461 ;; Hardware stack levels required when called:   18
  7462 ;; This function calls:
  7463 ;;		_StartTimer
  7464 ;;		_TimerDone
  7465 ;;		___fldiv
  7466 ;;		___flsub
  7467 ;;		_conv_raw_result
  7468 ;;		_fabsf
  7469 ;;		_set_load_relay_one
  7470 ;;		_set_load_relay_two
  7471 ;;		_update_adc_result
  7472 ;; This function is called by:
  7473 ;;		_main
  7474 ;; This function uses a reentrant model
  7475 ;;
  7476                           
  7477                           	psect	text16
  7478  0168D0                     __ptext16:
  7479                           	opt callstack 0
  7480  0168D0                     _esr_check:
  7481                           	opt callstack 12
  7482                           
  7483                           ;bsoc.c: 173: float esr_check(uint8_t fsm);bsoc.c: 174: {;bsoc.c: 175:  static uint8_t e
      +                          sr_state = 0;;bsoc.c: 177:  if (fsm) {
  7484                           ;stkvar	_fsm @ sp[(0)+-1]
  7485                           
  7486                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7487                           ;incstack = 0
  7488  0168D0  0EFF               	movlw	-1
  7489  0168D2  50E3               	movf	plusw1,w,c
  7490  0168D4  B4D8               	btfsc	status,2,c
  7491  0168D6  D13E               	goto	l10652
  7492                           
  7493                           ;bsoc.c: 178:   esr_state = 0;
  7494  0168D8  6A54               	clrf	esr_check@esr_state^0,c
  7495                           
  7496                           ;bsoc.c: 179:   return -10.0;
  7497  0168DA  0E00               	movlw	0
  7498  0168DC  6E28               	movwf	btemp^0,c
  7499  0168DE  0E00               	movlw	0
  7500  0168E0  6E29               	movwf	(btemp+1)^0,c
  7501  0168E2  0E20               	movlw	32
  7502  0168E4  6E2A               	movwf	(btemp+2)^0,c
  7503  0168E6  0EC1               	movlw	193
  7504  0168E8  D150               	goto	L3
  7505  0168EA                     l10584:
  7506                           
  7507                           ;bsoc.c: 184:   StartTimer(TMR_ESR, 10000);
  7508  0168EA  0E10               	movlw	16
  7509  0168EC  6EE6               	movwf	postinc1,c
  7510  0168EE  0E27               	movlw	39
  7511  0168F0  6EE6               	movwf	postinc1,c
  7512  0168F2  0E0C               	movlw	12
  7513  0168F4  6EE6               	movwf	postinc1,c
  7514  0168F6  EC10  F0D6         	call	_StartTimer	;wreg free
  7515  0168FA                     l10586:
  7516                           
  7517                           ;bsoc.c: 185:   esr_state++;
  7518  0168FA  2A54               	incf	esr_check@esr_state^0,f,c
  7519                           
  7520                           ;bsoc.c: 186:   break;
  7521  0168FC  D13F               	goto	l10654
  7522  0168FE                     l10588:
  7523                           
  7524                           ;bsoc.c: 191:   set_load_relay_one(0);
  7525  0168FE  0E00               	movlw	0
  7526  016900  6EE6               	movwf	postinc1,c
  7527  016902  EC1F  F0DB         	call	_set_load_relay_one	;wreg free
  7528                           
  7529                           ;bsoc.c: 192:   set_load_relay_two(0);
  7530  016906  0E00               	movlw	0
  7531  016908  6EE6               	movwf	postinc1,c
  7532  01690A  EC17  F0DB         	call	_set_load_relay_two	;wreg free
  7533                           
  7534                           ;bsoc.c: 193:   if (TimerDone(TMR_ESR)) {
  7535  01690E  0E0C               	movlw	12
  7536  016910  6EE6               	movwf	postinc1,c
  7537  016912  EC91  F0D8         	call	_TimerDone	;wreg free
  7538  016916  5028               	movf	btemp^0,w,c
  7539  016918  B4D8               	btfsc	status,2,c
  7540  01691A  D009               	goto	l10594
  7541                           
  7542                           ;bsoc.c: 194:    StartTimer(TMR_ESR, 10000);
  7543  01691C  0E10               	movlw	16
  7544  01691E  6EE6               	movwf	postinc1,c
  7545  016920  0E27               	movlw	39
  7546  016922  6EE6               	movwf	postinc1,c
  7547  016924  0E0C               	movlw	12
  7548  016926  6EE6               	movwf	postinc1,c
  7549  016928  EC10  F0D6         	call	_StartTimer	;wreg free
  7550                           
  7551                           ;bsoc.c: 195:   } else {
  7552  01692C  D006               	goto	l10598
  7553  01692E                     l10594:
  7554                           
  7555                           ;bsoc.c: 196:    return -2.0;
  7556  01692E  0E00               	movlw	0
  7557  016930  6E28               	movwf	btemp^0,c
  7558  016932  0E00               	movlw	0
  7559  016934  6E29               	movwf	(btemp+1)^0,c
  7560  016936  0E00               	movlw	0
  7561  016938  D066               	goto	L5
  7562  01693A                     l10598:
  7563                           
  7564                           ;bsoc.c: 201:   update_adc_result();
  7565  01693A  ECAF  F0D6         	call	_update_adc_result	;wreg free
  7566                           
  7567                           ;bsoc.c: 202:   C.bv_noload = conv_raw_result(V_BAT, CONV);
  7568  01693E  0E00               	movlw	0
  7569  016940  6EE6               	movwf	postinc1,c
  7570  016942  0E04               	movlw	4
  7571  016944  6EE6               	movwf	postinc1,c
  7572  016946  EC58  F0A7         	call	_conv_raw_result	;wreg free
  7573  01694A  0060  F0A0  F1EB   	movff	btemp,_C+235	;volatile
  7574  016950  0060  F0A4  F1EC   	movff	btemp+1,_C+236	;volatile
  7575  016956  0060  F0A8  F1ED   	movff	btemp+2,_C+237	;volatile
  7576  01695C  0060  F0AC  F1EE   	movff	btemp+3,_C+238	;volatile
  7577  016962  D7CB               	goto	l10586
  7578  016964                     l10604:
  7579                           
  7580                           ;bsoc.c: 206:   set_load_relay_one(1);
  7581  016964  0E01               	movlw	1
  7582  016966  6EE6               	movwf	postinc1,c
  7583  016968  EC1F  F0DB         	call	_set_load_relay_one	;wreg free
  7584                           
  7585                           ;bsoc.c: 207:   if (TimerDone(TMR_ESR)) {
  7586  01696C  0E0C               	movlw	12
  7587  01696E  6EE6               	movwf	postinc1,c
  7588  016970  EC91  F0D8         	call	_TimerDone	;wreg free
  7589  016974  5028               	movf	btemp^0,w,c
  7590  016976  B4D8               	btfsc	status,2,c
  7591  016978  D009               	goto	l10610
  7592                           
  7593                           ;bsoc.c: 208:    StartTimer(TMR_ESR, 10000);
  7594  01697A  0E10               	movlw	16
  7595  01697C  6EE6               	movwf	postinc1,c
  7596  01697E  0E27               	movlw	39
  7597  016980  6EE6               	movwf	postinc1,c
  7598  016982  0E0C               	movlw	12
  7599  016984  6EE6               	movwf	postinc1,c
  7600  016986  EC10  F0D6         	call	_StartTimer	;wreg free
  7601                           
  7602                           ;bsoc.c: 209:   } else {
  7603  01698A  D006               	goto	l10614
  7604  01698C                     l10610:
  7605                           
  7606                           ;bsoc.c: 210:    return -3.0;
  7607  01698C  0E00               	movlw	0
  7608  01698E  6E28               	movwf	btemp^0,c
  7609  016990  0E00               	movlw	0
  7610  016992  6E29               	movwf	(btemp+1)^0,c
  7611  016994  0E40               	movlw	64
  7612  016996  D037               	goto	L5
  7613  016998                     l10614:
  7614                           
  7615                           ;bsoc.c: 213:   update_adc_result();
  7616  016998  ECAF  F0D6         	call	_update_adc_result	;wreg free
  7617                           
  7618                           ;bsoc.c: 214:   C.bv_one_load = conv_raw_result(V_BAT, CONV);
  7619  01699C  0E00               	movlw	0
  7620  01699E  6EE6               	movwf	postinc1,c
  7621  0169A0  0E04               	movlw	4
  7622  0169A2  6EE6               	movwf	postinc1,c
  7623  0169A4  EC58  F0A7         	call	_conv_raw_result	;wreg free
  7624  0169A8  0060  F0A0  F1EF   	movff	btemp,_C+239	;volatile
  7625  0169AE  0060  F0A4  F1F0   	movff	btemp+1,_C+240	;volatile
  7626  0169B4  0060  F0A8  F1F1   	movff	btemp+2,_C+241	;volatile
  7627  0169BA  0060  F0AC  F1F2   	movff	btemp+3,_C+242	;volatile
  7628                           
  7629                           ;bsoc.c: 215:   C.load_i1 = conv_raw_result(C_BATT, CONV);
  7630  0169C0  0E00               	movlw	0
  7631  0169C2  6EE6               	movwf	postinc1,c
  7632  0169C4  0E00               	movlw	0
  7633  0169C6  6EE6               	movwf	postinc1,c
  7634  0169C8  EC58  F0A7         	call	_conv_raw_result	;wreg free
  7635  0169CC  0060  F0A0  F1E3   	movff	btemp,_C+227	;volatile
  7636  0169D2  0060  F0A4  F1E4   	movff	btemp+1,_C+228	;volatile
  7637  0169D8  0060  F0A8  F1E5   	movff	btemp+2,_C+229	;volatile
  7638  0169DE  0060  F0AC  F1E6   	movff	btemp+3,_C+230	;volatile
  7639  0169E4  D78A               	goto	l10586
  7640  0169E6                     l10622:
  7641                           
  7642                           ;bsoc.c: 219:   set_load_relay_two(1);
  7643  0169E6  0E01               	movlw	1
  7644  0169E8  6EE6               	movwf	postinc1,c
  7645  0169EA  EC17  F0DB         	call	_set_load_relay_two	;wreg free
  7646                           
  7647                           ;bsoc.c: 220:   if (!TimerDone(TMR_ESR))
  7648  0169EE  0E0C               	movlw	12
  7649  0169F0  6EE6               	movwf	postinc1,c
  7650  0169F2  EC91  F0D8         	call	_TimerDone	;wreg free
  7651  0169F6  5028               	movf	btemp^0,w,c
  7652  0169F8  A4D8               	btfss	status,2,c
  7653  0169FA  D008               	goto	l10630
  7654                           
  7655                           ;bsoc.c: 221:    return -4.0;
  7656  0169FC  0E00               	movlw	0
  7657  0169FE  6E28               	movwf	btemp^0,c
  7658  016A00  0E00               	movlw	0
  7659  016A02  6E29               	movwf	(btemp+1)^0,c
  7660  016A04  0E80               	movlw	128
  7661  016A06                     L5:
  7662  016A06  6E2A               	movwf	(btemp+2)^0,c
  7663  016A08  0EC0               	movlw	192
  7664  016A0A  D0BF               	goto	L3
  7665  016A0C                     l10630:
  7666                           
  7667                           ;bsoc.c: 223:   update_adc_result();
  7668  016A0C  ECAF  F0D6         	call	_update_adc_result	;wreg free
  7669                           
  7670                           ;bsoc.c: 224:   C.bv_full_load = conv_raw_result(V_BAT, CONV);
  7671  016A10  0E00               	movlw	0
  7672  016A12  6EE6               	movwf	postinc1,c
  7673  016A14  0E04               	movlw	4
  7674  016A16  6EE6               	movwf	postinc1,c
  7675  016A18  EC58  F0A7         	call	_conv_raw_result	;wreg free
  7676  016A1C  0060  F0A0  F1F3   	movff	btemp,_C+243	;volatile
  7677  016A22  0060  F0A4  F1F4   	movff	btemp+1,_C+244	;volatile
  7678  016A28  0060  F0A8  F1F5   	movff	btemp+2,_C+245	;volatile
  7679  016A2E  0060  F0AC  F1F6   	movff	btemp+3,_C+246	;volatile
  7680                           
  7681                           ;bsoc.c: 225:   C.load_i2 = conv_raw_result(C_BATT, CONV);
  7682  016A34  0E00               	movlw	0
  7683  016A36  6EE6               	movwf	postinc1,c
  7684  016A38  0E00               	movlw	0
  7685  016A3A  6EE6               	movwf	postinc1,c
  7686  016A3C  EC58  F0A7         	call	_conv_raw_result	;wreg free
  7687  016A40  0060  F0A0  F1E7   	movff	btemp,_C+231	;volatile
  7688  016A46  0060  F0A4  F1E8   	movff	btemp+1,_C+232	;volatile
  7689  016A4C  0060  F0A8  F1E9   	movff	btemp+2,_C+233	;volatile
  7690  016A52  0060  F0AC  F1EA   	movff	btemp+3,_C+234	;volatile
  7691                           
  7692                           ;bsoc.c: 227:   C.esr = fabsf((C.bv_one_load - C.bv_full_load) / (C.load_i1 - C.load_i2)
      +                          );
  7693  016A58  0060  F79F  FFE6   	movff	_C+231,postinc1
  7694  016A5E  0060  F7A3  FFE6   	movff	_C+232,postinc1
  7695  016A64  0060  F7A7  FFE6   	movff	_C+233,postinc1
  7696  016A6A  0060  F7AB  FFE6   	movff	_C+234,postinc1
  7697  016A70  0060  F78F  FFE6   	movff	_C+227,postinc1
  7698  016A76  0060  F793  FFE6   	movff	_C+228,postinc1
  7699  016A7C  0060  F797  FFE6   	movff	_C+229,postinc1
  7700  016A82  0060  F79B  FFE6   	movff	_C+230,postinc1
  7701  016A88  EC41  F0D5         	call	___flsub	;wreg free
  7702  016A8C  0060  F0A3  FFE6   	movff	btemp,postinc1
  7703  016A92  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  7704  016A98  0060  F0AB  FFE6   	movff	btemp+2,postinc1
  7705  016A9E  0060  F0AF  FFE6   	movff	btemp+3,postinc1
  7706  016AA4  0060  F7CF  FFE6   	movff	_C+243,postinc1
  7707  016AAA  0060  F7D3  FFE6   	movff	_C+244,postinc1
  7708  016AB0  0060  F7D7  FFE6   	movff	_C+245,postinc1
  7709  016AB6  0060  F7DB  FFE6   	movff	_C+246,postinc1
  7710  016ABC  0060  F7BF  FFE6   	movff	_C+239,postinc1
  7711  016AC2  0060  F7C3  FFE6   	movff	_C+240,postinc1
  7712  016AC8  0060  F7C7  FFE6   	movff	_C+241,postinc1
  7713  016ACE  0060  F7CB  FFE6   	movff	_C+242,postinc1
  7714  016AD4  EC41  F0D5         	call	___flsub	;wreg free
  7715  016AD8  0060  F0A3  FFE6   	movff	btemp,postinc1
  7716  016ADE  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  7717  016AE4  0060  F0AB  FFE6   	movff	btemp+2,postinc1
  7718  016AEA  0060  F0AF  FFE6   	movff	btemp+3,postinc1
  7719  016AF0  EC9B  F0A4         	call	___fldiv	;wreg free
  7720  016AF4  0060  F0A3  FFE6   	movff	btemp,postinc1
  7721  016AFA  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  7722  016B00  0060  F0AB  FFE6   	movff	btemp+2,postinc1
  7723  016B06  0060  F0AF  FFE6   	movff	btemp+3,postinc1
  7724  016B0C  ECF9  F0CD         	call	_fabsf	;wreg free
  7725  016B10  0060  F0A0  F184   	movff	btemp,_C+132	;volatile
  7726  016B16  0060  F0A4  F185   	movff	btemp+1,_C+133	;volatile
  7727  016B1C  0060  F0A8  F186   	movff	btemp+2,_C+134	;volatile
  7728  016B22  0060  F0AC  F187   	movff	btemp+3,_C+135	;volatile
  7729                           
  7730                           ;bsoc.c: 228:   set_load_relay_one(0);
  7731  016B28  0E00               	movlw	0
  7732  016B2A  6EE6               	movwf	postinc1,c
  7733  016B2C  EC1F  F0DB         	call	_set_load_relay_one	;wreg free
  7734                           
  7735                           ;bsoc.c: 229:   set_load_relay_two(0);
  7736  016B30  0E00               	movlw	0
  7737  016B32  6EE6               	movwf	postinc1,c
  7738  016B34  EC17  F0DB         	call	_set_load_relay_two	;wreg free
  7739                           
  7740                           ;bsoc.c: 230:   esr_state = 0;
  7741  016B38  6A54               	clrf	esr_check@esr_state^0,c
  7742                           
  7743                           ;bsoc.c: 231:   return C.esr;
  7744  016B3A  0060  F610  F028   	movff	_C+132,btemp	;volatile
  7745  016B40  0060  F614  F029   	movff	_C+133,btemp+1	;volatile
  7746  016B46  0060  F618  F02A   	movff	_C+134,btemp+2	;volatile
  7747  016B4C  0060  F61C  F02B   	movff	_C+135,btemp+3	;volatile
  7748  016B52  D01C               	goto	l2047
  7749  016B54                     l10652:
  7750  016B54  5054               	movf	esr_check@esr_state^0,w,c
  7751  016B56  6E32               	movwf	(btemp+10)^0,c
  7752  016B58  6A33               	clrf	(btemp+11)^0,c
  7753                           
  7754                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7755                           ; Switch size 1, requested type "simple"
  7756                           ; Number of cases is 1, Range of values is 0 to 0
  7757                           ; switch strategies available:
  7758                           ; Name         Instructions Cycles
  7759                           ; simple_byte            4     3 (average)
  7760                           ;	Chosen strategy is simple_byte
  7761  016B5A  5033               	movf	(btemp+11)^0,w,c
  7762  016B5C  0A00               	xorlw	0	; case 0
  7763  016B5E  A4D8               	btfss	status,2,c
  7764  016B60  D00D               	goto	l10654
  7765                           
  7766                           ; Switch size 1, requested type "simple"
  7767                           ; Number of cases is 4, Range of values is 0 to 3
  7768                           ; switch strategies available:
  7769                           ; Name         Instructions Cycles
  7770                           ; simple_byte           13     7 (average)
  7771                           ;	Chosen strategy is simple_byte
  7772  016B62  5032               	movf	(btemp+10)^0,w,c
  7773  016B64  0A00               	xorlw	0	; case 0
  7774  016B66  B4D8               	btfsc	status,2,c
  7775  016B68  D6C0               	goto	l10584
  7776  016B6A  0A01               	xorlw	1	; case 1
  7777  016B6C  B4D8               	btfsc	status,2,c
  7778  016B6E  D6C7               	goto	l10588
  7779  016B70  0A03               	xorlw	3	; case 2
  7780  016B72  B4D8               	btfsc	status,2,c
  7781  016B74  D6F7               	goto	l10604
  7782  016B76  0A01               	xorlw	1	; case 3
  7783  016B78  B4D8               	btfsc	status,2,c
  7784  016B7A  D735               	goto	l10622
  7785  016B7C                     l10654:
  7786                           
  7787                           ;bsoc.c: 236:  return -1.0;
  7788  016B7C  0E00               	movlw	0
  7789  016B7E  6E28               	movwf	btemp^0,c
  7790  016B80  0E00               	movlw	0
  7791  016B82  6E29               	movwf	(btemp+1)^0,c
  7792  016B84  0E80               	movlw	128
  7793  016B86  6E2A               	movwf	(btemp+2)^0,c
  7794  016B88  0EBF               	movlw	191
  7795  016B8A                     L3:
  7796  016B8A  6E2B               	movwf	(btemp+3)^0,c
  7797  016B8C                     l2047:
  7798                           
  7799                           ; _esr_check: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  7800  016B8C  52E5               	movf	postdec1,f,c
  7801  016B8E  0012               	return		;funcret
  7802  016B90                     __end_of_esr_check:
  7803                           	opt callstack 0
  7804                           
  7805 ;; *************** function _update_adc_result *****************
  7806 ;; Defined at:
  7807 ;;		line 71 in file "daq.c"
  7808 ;; Parameters:    Size  Location     Type
  7809 ;;		None
  7810 ;; Auto vars:     Size  Location     Type
  7811 ;;		None
  7812 ;; Return value:  Size  Location     Type
  7813 ;;                  1  [STACK] _Bool 
  7814 ;; Registers used:
  7815 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  7816 ;; Tracked objects:
  7817 ;;		On entry : 0/0
  7818 ;;		On exit  : 0/0
  7819 ;;		Unchanged: 0/0
  7820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7824 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7825 ;;Total ram usage:        0 bytes
  7826 ;; Hardware stack levels used:    1
  7827 ;; Hardware stack levels required when called:   17
  7828 ;; This function calls:
  7829 ;;		_StartTimer
  7830 ;;		_TimerDone
  7831 ;;		_check_adc_scan
  7832 ;;		_clear_adc_scan
  7833 ;;		_start_adc_scan
  7834 ;; This function is called by:
  7835 ;;		_esr_check
  7836 ;; This function uses a reentrant model
  7837 ;;
  7838                           
  7839                           	psect	text17
  7840  01AD5E                     __ptext17:
  7841                           	opt callstack 0
  7842  01AD5E                     _update_adc_result:
  7843                           	opt callstack 12
  7844                           
  7845                           ;daq.c: 73:  if (R.done) {
  7846                           
  7847                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7848                           ;incstack = 0
  7849  01AD5E  0100               	movlb	0	; () banked
  7850  01AD60  51EB               	movf	(_R+39)& (0+255),w,b	;volatile
  7851  01AD62  B4D8               	btfsc	status,2,c
  7852  01AD64  0012               	return	
  7853                           
  7854                           ; BSR set to: 0
  7855                           ;daq.c: 74:   clear_adc_scan();
  7856  01AD66  EC7D  F0DB         	call	_clear_adc_scan	;wreg free
  7857                           
  7858                           ; BSR set to: 0
  7859                           ;daq.c: 75:   start_adc_scan();
  7860  01AD6A  ECE8  F0D2         	call	_start_adc_scan	;wreg free
  7861                           
  7862                           ;daq.c: 76:   StartTimer(TMR_ADC, 200);
  7863  01AD6E  0EC8               	movlw	200
  7864  01AD70  6EE6               	movwf	postinc1,c
  7865  01AD72  0E00               	movlw	0
  7866  01AD74  6EE6               	movwf	postinc1,c
  7867  01AD76  0E01               	movlw	1
  7868  01AD78  6EE6               	movwf	postinc1,c
  7869  01AD7A  EC10  F0D6         	call	_StartTimer	;wreg free
  7870  01AD7E                     l10198:
  7871  01AD7E  0E01               	movlw	1
  7872  01AD80  6EE6               	movwf	postinc1,c
  7873  01AD82  EC91  F0D8         	call	_TimerDone	;wreg free
  7874  01AD86  5028               	movf	btemp^0,w,c
  7875  01AD88  A4D8               	btfss	status,2,c
  7876  01AD8A  0012               	return	
  7877  01AD8C  EC6D  F0DB         	call	_check_adc_scan	;wreg free
  7878  01AD90  5028               	movf	btemp^0,w,c
  7879  01AD92  A4D8               	btfss	status,2,c
  7880  01AD94  0012               	return	
  7881  01AD96  D7F3               	goto	l10198
  7882  01AD98                     __end_of_update_adc_result:
  7883                           	opt callstack 0
  7884                           
  7885 ;; *************** function _start_adc_scan *****************
  7886 ;; Defined at:
  7887 ;;		line 32 in file "daq.c"
  7888 ;; Parameters:    Size  Location     Type
  7889 ;;		None
  7890 ;; Auto vars:     Size  Location     Type
  7891 ;;		None
  7892 ;; Return value:  Size  Location     Type
  7893 ;;                  1  [STACK] _Bool 
  7894 ;; Registers used:
  7895 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  7896 ;; Tracked objects:
  7897 ;;		On entry : 0/0
  7898 ;;		On exit  : 1/0
  7899 ;;		Unchanged: 0/0
  7900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7904 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7905 ;;Total ram usage:        0 bytes
  7906 ;; Hardware stack levels used:    1
  7907 ;; Hardware stack levels required when called:   16
  7908 ;; This function calls:
  7909 ;;		_ADCC_DischargeSampleCapacitor
  7910 ;;		_ADCC_SetADIInterruptHandler
  7911 ;;		_ADCC_SetADTIInterruptHandler
  7912 ;;		_ADCC_StartConversion
  7913 ;; This function is called by:
  7914 ;;		_main
  7915 ;;		_update_adc_result
  7916 ;; This function uses a reentrant model
  7917 ;;
  7918                           
  7919                           	psect	text18
  7920  01A5D0                     __ptext18:
  7921                           	opt callstack 0
  7922  01A5D0                     _start_adc_scan:
  7923                           	opt callstack 14
  7924                           
  7925                           ;daq.c: 34:  if (R.done)
  7926                           
  7927                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7928                           ;incstack = 0
  7929  01A5D0  0100               	movlb	0	; () banked
  7930  01A5D2  51EB               	movf	(_R+39)& (0+255),w,b	;volatile
  7931  01A5D4  A4D8               	btfss	status,2,c
  7932  01A5D6  0012               	return	
  7933                           
  7934                           ; BSR set to: 0
  7935                           ;daq.c: 37:  R.scan_index = 0;
  7936  01A5D8  6BE8               	clrf	(_R+36)& (0+255),b	;volatile
  7937                           
  7938                           ; BSR set to: 0
  7939                           ;daq.c: 38:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  7940  01A5DA  013A               	movlb	58	; () banked
  7941  01A5DC  5140               	movf	64,w,b	;volatile
  7942  01A5DE  006E F940  F028    	movff	14928,btemp	;volatile
  7943  01A5E4  6A29               	clrf	(btemp+1)^0,c
  7944  01A5E6  0060  F0A0  F029   	movff	btemp,btemp+1
  7945  01A5EC  6A28               	clrf	btemp^0,c
  7946  01A5EE  2628               	addwf	btemp^0,f,c
  7947  01A5F0  0E00               	movlw	0
  7948  01A5F2  2229               	addwfc	(btemp+1)^0,f,c
  7949  01A5F4  0E77               	movlw	119
  7950  01A5F6  1428               	andwf	btemp^0,w,c
  7951  01A5F8  0100               	movlb	0	; () banked
  7952  01A5FA  6FE9               	movwf	(_R+37)& (0+255),b	;volatile
  7953  01A5FC  0E3C               	movlw	60
  7954  01A5FE  1429               	andwf	(btemp+1)^0,w,c
  7955  01A600  6FEA               	movwf	(_R+38)& (0+255),b	;volatile
  7956                           
  7957                           ; BSR set to: 0
  7958                           ;daq.c: 39:  ADCC_SetADIInterruptHandler(adc_int_handler);
  7959  01A602  0E22               	movlw	low _adc_int_handler
  7960  01A604  6EE6               	movwf	postinc1,c
  7961  01A606  0EB7               	movlw	high _adc_int_handler
  7962  01A608  6EE6               	movwf	postinc1,c
  7963  01A60A  0E01               	movlw	low (_adc_int_handler shr (0+16))
  7964  01A60C  6EE6               	movwf	postinc1,c
  7965  01A60E  EC59  F0D9         	call	_ADCC_SetADIInterruptHandler	;wreg free
  7966                           
  7967                           ;daq.c: 40:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  7968  01A612  0EAE               	movlw	low _adc_int_t_handler
  7969  01A614  6EE6               	movwf	postinc1,c
  7970  01A616  0EA3               	movlw	high _adc_int_t_handler
  7971  01A618  6EE6               	movwf	postinc1,c
  7972  01A61A  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  7973  01A61C  6EE6               	movwf	postinc1,c
  7974  01A61E  EC45  F0D9         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  7975                           
  7976                           ;daq.c: 41:  ADCC_DischargeSampleCapacitor();
  7977  01A622  EC69  F0DB         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  7978                           
  7979                           ; BSR set to: 62
  7980                           ;daq.c: 42:  ADCC_StartConversion(R.scan_index & 0xf);
  7981  01A626  0100               	movlb	0	; () banked
  7982  01A628  51E8               	movf	(_R+36)& (0+255),w,b	;volatile
  7983  01A62A  0B0F               	andlw	15
  7984  01A62C  6EE6               	movwf	postinc1,c
  7985  01A62E  EC0E  F0DB         	call	_ADCC_StartConversion	;wreg free
  7986                           
  7987                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  7988  01A632  0012               	return		;funcret
  7989  01A634                     __end_of_start_adc_scan:
  7990                           	opt callstack 0
  7991                           
  7992 ;; *************** function _ADCC_StartConversion *****************
  7993 ;; Defined at:
  7994 ;;		line 128 in file "mcc_generated_files/adcc.c"
  7995 ;; Parameters:    Size  Location     Type
  7996 ;;  channel         1  [STACK] enum E16136
  7997 ;; Auto vars:     Size  Location     Type
  7998 ;;		None
  7999 ;; Return value:  Size  Location     Type
  8000 ;;                  1  [STACK] void 
  8001 ;; Registers used:
  8002 ;;		fsr1l, fsr1h
  8003 ;; Tracked objects:
  8004 ;;		On entry : 3F/0
  8005 ;;		On exit  : 3F/3E
  8006 ;;		Unchanged: 0/0
  8007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8011 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8012 ;;Total ram usage:        0 bytes
  8013 ;; Hardware stack levels used:    1
  8014 ;; Hardware stack levels required when called:   15
  8015 ;; This function calls:
  8016 ;;		Nothing
  8017 ;; This function is called by:
  8018 ;;		_start_adc_scan
  8019 ;;		_adc_int_t_handler
  8020 ;; This function uses a reentrant model
  8021 ;;
  8022                           
  8023                           	psect	text19
  8024  01B61C                     __ptext19:
  8025                           	opt callstack 0
  8026  01B61C                     _ADCC_StartConversion:
  8027                           	opt callstack 0
  8028                           
  8029                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  8030                           ;stkvar	_channel @ sp[(0)+-1]
  8031                           
  8032                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8033                           ;incstack = 0
  8034 ;; hardware stack exceeded
  8035  01B61C  0EFF               	movlw	-1
  8036  01B61E  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  8037                           
  8038                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  8039  01B624  013E               	movlb	62	; () banked
  8040  01B626  8FF8               	bsf	248,7,b	;volatile
  8041                           
  8042                           ; BSR set to: 62
  8043                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  8044  01B628  81F8               	bsf	248,0,b	;volatile
  8045                           
  8046                           ; BSR set to: 62
  8047                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  8048  01B62A  52E5               	movf	postdec1,f,c
  8049  01B62C  0012               	return		;funcret
  8050  01B62E                     __end_of_ADCC_StartConversion:
  8051                           	opt callstack 0
  8052                           
  8053 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  8054 ;; Defined at:
  8055 ;;		line 189 in file "mcc_generated_files/adcc.c"
  8056 ;; Parameters:    Size  Location     Type
  8057 ;;		None
  8058 ;; Auto vars:     Size  Location     Type
  8059 ;;		None
  8060 ;; Return value:  Size  Location     Type
  8061 ;;                  1  [STACK] void 
  8062 ;; Registers used:
  8063 ;;		wreg, status,2
  8064 ;; Tracked objects:
  8065 ;;		On entry : 0/0
  8066 ;;		On exit  : 3F/3E
  8067 ;;		Unchanged: 0/0
  8068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8072 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8073 ;;Total ram usage:        0 bytes
  8074 ;; Hardware stack levels used:    1
  8075 ;; Hardware stack levels required when called:   15
  8076 ;; This function calls:
  8077 ;;		Nothing
  8078 ;; This function is called by:
  8079 ;;		_start_adc_scan
  8080 ;;		_adc_int_t_handler
  8081 ;; This function uses a reentrant model
  8082 ;;
  8083                           
  8084                           	psect	text20
  8085  01B6D2                     __ptext20:
  8086                           	opt callstack 0
  8087  01B6D2                     _ADCC_DischargeSampleCapacitor:
  8088                           	opt callstack 0
  8089                           
  8090                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
  8091                           
  8092                           ; BSR set to: 62
  8093                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8094                           ;incstack = 0
  8095 ;; hardware stack exceeded
  8096  01B6D2  0E3B               	movlw	59
  8097  01B6D4  013E               	movlb	62	; () banked
  8098  01B6D6  6FF1               	movwf	241,b	;volatile
  8099                           
  8100                           ; BSR set to: 62
  8101                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
  8102  01B6D8  0012               	return		;funcret
  8103  01B6DA                     __end_of_ADCC_DischargeSampleCapacitor:
  8104                           	opt callstack 0
  8105                           
  8106 ;; *************** function _clear_adc_scan *****************
  8107 ;; Defined at:
  8108 ;;		line 63 in file "daq.c"
  8109 ;; Parameters:    Size  Location     Type
  8110 ;;		None
  8111 ;; Auto vars:     Size  Location     Type
  8112 ;;		None
  8113 ;; Return value:  Size  Location     Type
  8114 ;;                  1  [STACK] void 
  8115 ;; Registers used:
  8116 ;;		None
  8117 ;; Tracked objects:
  8118 ;;		On entry : 0/0
  8119 ;;		On exit  : 3F/0
  8120 ;;		Unchanged: 0/0
  8121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8126 ;;Total ram usage:        0 bytes
  8127 ;; Hardware stack levels used:    1
  8128 ;; Hardware stack levels required when called:   15
  8129 ;; This function calls:
  8130 ;;		Nothing
  8131 ;; This function is called by:
  8132 ;;		_main
  8133 ;;		_update_adc_result
  8134 ;; This function uses a reentrant model
  8135 ;;
  8136                           
  8137                           	psect	text21
  8138  01B6FA                     __ptext21:
  8139                           	opt callstack 0
  8140  01B6FA                     _clear_adc_scan:
  8141                           	opt callstack 13
  8142                           
  8143                           ;daq.c: 65:  R.done = 0;
  8144                           
  8145                           ; BSR set to: 62
  8146                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8147                           ;incstack = 0
  8148  01B6FA  0100               	movlb	0	; () banked
  8149  01B6FC  6BEB               	clrf	(_R+39)& (0+255),b	;volatile
  8150                           
  8151                           ; BSR set to: 0
  8152                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  8153  01B6FE  0012               	return		;funcret
  8154  01B700                     __end_of_clear_adc_scan:
  8155                           	opt callstack 0
  8156                           
  8157 ;; *************** function _check_adc_scan *****************
  8158 ;; Defined at:
  8159 ;;		line 55 in file "daq.c"
  8160 ;; Parameters:    Size  Location     Type
  8161 ;;		None
  8162 ;; Auto vars:     Size  Location     Type
  8163 ;;		None
  8164 ;; Return value:  Size  Location     Type
  8165 ;;                  1  [STACK] _Bool 
  8166 ;; Registers used:
  8167 ;;		btemp
  8168 ;; Tracked objects:
  8169 ;;		On entry : 0/0
  8170 ;;		On exit  : 0/0
  8171 ;;		Unchanged: 0/0
  8172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8177 ;;Total ram usage:        0 bytes
  8178 ;; Hardware stack levels used:    1
  8179 ;; Hardware stack levels required when called:   15
  8180 ;; This function calls:
  8181 ;;		Nothing
  8182 ;; This function is called by:
  8183 ;;		_main
  8184 ;;		_update_adc_result
  8185 ;; This function uses a reentrant model
  8186 ;;
  8187                           
  8188                           	psect	text22
  8189  01B6DA                     __ptext22:
  8190                           	opt callstack 0
  8191  01B6DA                     _check_adc_scan:
  8192                           	opt callstack 13
  8193                           
  8194                           ;daq.c: 57:  return R.done;
  8195                           
  8196                           ; BSR set to: 0
  8197                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8198                           ;incstack = 0
  8199  01B6DA  0060  F3AC  F028   	movff	_R+39,btemp	;volatile
  8200                           
  8201                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  8202  01B6E0  0012               	return		;funcret
  8203  01B6E2                     __end_of_check_adc_scan:
  8204                           	opt callstack 0
  8205                           
  8206 ;; *************** function _set_load_relay_two *****************
  8207 ;; Defined at:
  8208 ;;		line 128 in file "mbmc.c"
  8209 ;; Parameters:    Size  Location     Type
  8210 ;;  mode            1  [STACK] _Bool 
  8211 ;; Auto vars:     Size  Location     Type
  8212 ;;		None
  8213 ;; Return value:  Size  Location     Type
  8214 ;;                  1  [STACK] void 
  8215 ;; Registers used:
  8216 ;;		wreg, fsr1l, fsr1h
  8217 ;; Tracked objects:
  8218 ;;		On entry : 0/0
  8219 ;;		On exit  : 0/0
  8220 ;;		Unchanged: 0/0
  8221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8225 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8226 ;;Total ram usage:        0 bytes
  8227 ;; Hardware stack levels used:    1
  8228 ;; Hardware stack levels required when called:   15
  8229 ;; This function calls:
  8230 ;;		Nothing
  8231 ;; This function is called by:
  8232 ;;		_main
  8233 ;;		_esr_check
  8234 ;; This function uses a reentrant model
  8235 ;;
  8236                           
  8237                           	psect	text23
  8238  01B62E                     __ptext23:
  8239                           	opt callstack 0
  8240  01B62E                     _set_load_relay_two:
  8241                           	opt callstack 15
  8242                           
  8243                           ;mbmc.c: 128: void set_load_relay_two(_Bool mode);mbmc.c: 129: {;mbmc.c: 130:  LATDbits.
      +                          LATD5 = mode;
  8244                           ;stkvar	_mode @ sp[(0)+-1]
  8245                           
  8246                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8247                           ;incstack = 0
  8248  01B62E  0EFF               	movlw	-1
  8249  01B630  B0E3               	btfsc	plusw1,0,c
  8250  01B632  D002               	bra	u9045
  8251  01B634  9ABD               	bcf	189,5,c	;volatile
  8252  01B636  D001               	bra	u9046
  8253  01B638                     u9045:
  8254  01B638  8ABD               	bsf	189,5,c	;volatile
  8255  01B63A                     u9046:
  8256                           
  8257                           ; _set_load_relay_two: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  8258  01B63A  52E5               	movf	postdec1,f,c
  8259  01B63C  0012               	return		;funcret
  8260  01B63E                     __end_of_set_load_relay_two:
  8261                           	opt callstack 0
  8262                           
  8263 ;; *************** function _set_load_relay_one *****************
  8264 ;; Defined at:
  8265 ;;		line 123 in file "mbmc.c"
  8266 ;; Parameters:    Size  Location     Type
  8267 ;;  mode            1  [STACK] _Bool 
  8268 ;; Auto vars:     Size  Location     Type
  8269 ;;		None
  8270 ;; Return value:  Size  Location     Type
  8271 ;;                  1  [STACK] void 
  8272 ;; Registers used:
  8273 ;;		wreg, fsr1l, fsr1h
  8274 ;; Tracked objects:
  8275 ;;		On entry : 0/0
  8276 ;;		On exit  : 0/0
  8277 ;;		Unchanged: 0/0
  8278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8283 ;;Total ram usage:        0 bytes
  8284 ;; Hardware stack levels used:    1
  8285 ;; Hardware stack levels required when called:   15
  8286 ;; This function calls:
  8287 ;;		Nothing
  8288 ;; This function is called by:
  8289 ;;		_main
  8290 ;;		_esr_check
  8291 ;; This function uses a reentrant model
  8292 ;;
  8293                           
  8294                           	psect	text24
  8295  01B63E                     __ptext24:
  8296                           	opt callstack 0
  8297  01B63E                     _set_load_relay_one:
  8298                           	opt callstack 15
  8299                           
  8300                           ;mbmc.c: 123: void set_load_relay_one(_Bool mode);mbmc.c: 124: {;mbmc.c: 125:  LATDbits.
      +                          LATD4 = mode;
  8301                           ;stkvar	_mode @ sp[(0)+-1]
  8302                           
  8303                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8304                           ;incstack = 0
  8305  01B63E  0EFF               	movlw	-1
  8306  01B640  B0E3               	btfsc	plusw1,0,c
  8307  01B642  D002               	bra	u9035
  8308  01B644  98BD               	bcf	189,4,c	;volatile
  8309  01B646  D001               	bra	u9036
  8310  01B648                     u9035:
  8311  01B648  88BD               	bsf	189,4,c	;volatile
  8312  01B64A                     u9036:
  8313                           
  8314                           ; _set_load_relay_one: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  8315  01B64A  52E5               	movf	postdec1,f,c
  8316  01B64C  0012               	return		;funcret
  8317  01B64E                     __end_of_set_load_relay_one:
  8318                           	opt callstack 0
  8319                           
  8320 ;; *************** function _eaDogM_WriteCommand *****************
  8321 ;; Defined at:
  8322 ;;		line 175 in file "eadog.c"
  8323 ;; Parameters:    Size  Location     Type
  8324 ;;  cmd             1  [STACK] const unsigned char 
  8325 ;; Auto vars:     Size  Location     Type
  8326 ;;		None
  8327 ;; Return value:  Size  Location     Type
  8328 ;;                  1  [STACK] void 
  8329 ;; Registers used:
  8330 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8331 ;; Tracked objects:
  8332 ;;		On entry : 3F/3D
  8333 ;;		On exit  : 3F/0
  8334 ;;		Unchanged: 0/0
  8335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8340 ;;Total ram usage:        0 bytes
  8341 ;; Hardware stack levels used:    1
  8342 ;; Hardware stack levels required when called:   25
  8343 ;; This function calls:
  8344 ;;		_send_lcd_cmd_dma
  8345 ;; This function is called by:
  8346 ;;		_main
  8347 ;; This function uses a reentrant model
  8348 ;;
  8349                           
  8350                           	psect	text25
  8351  01B65E                     __ptext25:
  8352                           	opt callstack 0
  8353  01B65E                     _eaDogM_WriteCommand:
  8354                           	opt callstack 5
  8355                           
  8356                           ;eadog.c: 175: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 176: {;eadog.c: 177:
      +                            send_lcd_cmd_dma(cmd);
  8357                           ;stkvar	_cmd @ sp[(0)+-1]
  8358                           
  8359                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8360                           ;incstack = 0
  8361  01B65E  0EFF               	movlw	-1
  8362  01B660  50E3               	movf	plusw1,w,c
  8363  01B662  6EE6               	movwf	postinc1,c
  8364  01B664  EC33  F0D4         	call	_send_lcd_cmd_dma	;wreg free
  8365                           
  8366                           ; BSR set to: 0
  8367                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  8368  01B668  52E5               	movf	postdec1,f,c
  8369  01B66A  0012               	return		;funcret
  8370  01B66C                     __end_of_eaDogM_WriteCommand:
  8371                           	opt callstack 0
  8372                           
  8373 ;; *************** function _convert_adc_data *****************
  8374 ;; Defined at:
  8375 ;;		line 51 in file "mbmc.c"
  8376 ;; Parameters:    Size  Location     Type
  8377 ;;		None
  8378 ;; Auto vars:     Size  Location     Type
  8379 ;;  i               1  [STACK] unsigned char 
  8380 ;; Return value:  Size  Location     Type
  8381 ;;                  1  [STACK] void 
  8382 ;; Registers used:
  8383 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  8384 ;; Tracked objects:
  8385 ;;		On entry : 0/0
  8386 ;;		On exit  : 0/0
  8387 ;;		Unchanged: 0/0
  8388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8393 ;;Total ram usage:        0 bytes
  8394 ;; Hardware stack levels used:    1
  8395 ;; Hardware stack levels required when called:   18
  8396 ;; This function calls:
  8397 ;;		_conv_raw_result
  8398 ;;		_lp_filter
  8399 ;; This function is called by:
  8400 ;;		_main
  8401 ;; This function uses a reentrant model
  8402 ;;
  8403                           
  8404                           	psect	text26
  8405  019B3A                     __ptext26:
  8406                           	opt callstack 0
  8407  019B3A                     _convert_adc_data:
  8408                           	opt callstack 0
  8409                           
  8410                           ; BSR set to: 0
  8411                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8412  019B3A  52E6               	movf	postinc1,f,c
  8413                           
  8414                           ;mbmc.c: 53:  uint8_t i = 0;
  8415                           ;stkvar	_i @ sp[(-1)+0]
  8416                           
  8417                           ;incstack = 0
  8418  019B3C  0EFF               	movlw	-1
  8419  019B3E  6AE3               	clrf	plusw1,c
  8420  019B40                     l10664:
  8421                           
  8422                           ;mbmc.c: 56:   if (V.calib) {
  8423  019B40  0102               	movlb	2	; () banked
  8424  019B42  51AC               	movf	(_V+172)& (0+255),w,b	;volatile
  8425  019B44  B4D8               	btfsc	status,2,c
  8426  019B46  D01B               	goto	l10668
  8427                           
  8428                           ; BSR set to: 2
  8429                           ;mbmc.c: 57:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
  8430  019B48  0E01               	movlw	1
  8431  019B4A  6EE6               	movwf	postinc1,c
  8432                           
  8433                           ;stkvar	_i @ sp[(-2)+0]
  8434  019B4C  0EFE               	movlw	-2
  8435  019B4E  50E3               	movf	plusw1,w,c
  8436  019B50  6EE6               	movwf	postinc1,c
  8437  019B52  0E01               	movlw	1
  8438  019B54  6EE6               	movwf	postinc1,c
  8439                           
  8440                           ;stkvar	_i @ sp[(-4)+0]
  8441  019B56  0EFC               	movlw	-4
  8442  019B58  50E3               	movf	plusw1,w,c
  8443  019B5A  6EE6               	movwf	postinc1,c
  8444  019B5C  EC58  F0A7         	call	_conv_raw_result	;wreg free
  8445  019B60  0060  F0A3  FFE6   	movff	btemp,postinc1
  8446  019B66  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  8447  019B6C  0060  F0AB  FFE6   	movff	btemp+2,postinc1
  8448  019B72  0060  F0AF  FFE6   	movff	btemp+3,postinc1
  8449  019B78  ECDC  F0BE         	call	_lp_filter	;wreg free
  8450  019B7C  D01A               	goto	L6
  8451  019B7E                     l10668:
  8452                           
  8453                           ; BSR set to: 2
  8454                           ;mbmc.c: 59:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
  8455  019B7E  0E00               	movlw	0
  8456  019B80  6EE6               	movwf	postinc1,c
  8457                           
  8458                           ;stkvar	_i @ sp[(-2)+0]
  8459  019B82  0EFE               	movlw	-2
  8460  019B84  50E3               	movf	plusw1,w,c
  8461  019B86  6EE6               	movwf	postinc1,c
  8462  019B88  0E00               	movlw	0
  8463  019B8A  6EE6               	movwf	postinc1,c
  8464                           
  8465                           ;stkvar	_i @ sp[(-4)+0]
  8466  019B8C  0EFC               	movlw	-4
  8467  019B8E  50E3               	movf	plusw1,w,c
  8468  019B90  6EE6               	movwf	postinc1,c
  8469  019B92  EC58  F0A7         	call	_conv_raw_result	;wreg free
  8470  019B96  0060  F0A3  FFE6   	movff	btemp,postinc1
  8471  019B9C  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  8472  019BA2  0060  F0AB  FFE6   	movff	btemp+2,postinc1
  8473  019BA8  0060  F0AF  FFE6   	movff	btemp+3,postinc1
  8474  019BAE  ECDC  F0BE         	call	_lp_filter	;wreg free
  8475  019BB2                     L6:
  8476                           
  8477                           ;stkvar	_i @ sp[(-1)+0]
  8478  019BB2  0EFF               	movlw	-1
  8479  019BB4  50E3               	movf	plusw1,w,c
  8480  019BB6  0D04               	mullw	4
  8481  019BB8  0E00               	movlw	low _C
  8482  019BBA  24F3               	addwf	243,w,c
  8483  019BBC  6ED9               	movwf	fsr2l,c
  8484  019BBE  0E01               	movlw	high _C
  8485  019BC0  20F4               	addwfc	prodh,w,c
  8486  019BC2  6EDA               	movwf	fsr2h,c
  8487  019BC4  0060  F0A3  FFDE   	movff	btemp,postinc2
  8488  019BCA  0060  F0A7  FFDE   	movff	btemp+1,postinc2
  8489  019BD0  0060  F0AB  FFDE   	movff	btemp+2,postinc2
  8490  019BD6  0060  F0AF  FFDE   	movff	btemp+3,postinc2
  8491                           
  8492                           ;mbmc.c: 61:  } while (++i < 16);
  8493                           ;stkvar	_i @ sp[(-1)+0]
  8494  019BDC  0EFF               	movlw	-1
  8495  019BDE  2AE3               	incf	plusw1,f,c
  8496  019BE0  0EFF               	movlw	-1
  8497  019BE2  006F FF8C  F028    	movff	plusw1,btemp
  8498  019BE8  0E0F               	movlw	15
  8499  019BEA  6428               	cpfsgt	btemp^0,c
  8500  019BEC  D7A9               	goto	l10664
  8501                           
  8502                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  8503  019BEE  52E5               	movf	postdec1,f,c
  8504  019BF0  0012               	return		;funcret
  8505  019BF2                     __end_of_convert_adc_data:
  8506                           	opt callstack 0
  8507                           
  8508 ;; *************** function _clear_hid_pflags *****************
  8509 ;; Defined at:
  8510 ;;		line 51 in file "hid.c"
  8511 ;; Parameters:    Size  Location     Type
  8512 ;;  h               1  [STACK] PTR struct H_data
  8513 ;;		 -> H(7), 
  8514 ;; Auto vars:     Size  Location     Type
  8515 ;;		None
  8516 ;; Return value:  Size  Location     Type
  8517 ;;                  1  [STACK] void 
  8518 ;; Registers used:
  8519 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8520 ;; Tracked objects:
  8521 ;;		On entry : 3F/0
  8522 ;;		On exit  : 0/0
  8523 ;;		Unchanged: 0/0
  8524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8528 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8529 ;;Total ram usage:        0 bytes
  8530 ;; Hardware stack levels used:    1
  8531 ;; Hardware stack levels required when called:   15
  8532 ;; This function calls:
  8533 ;;		Nothing
  8534 ;; This function is called by:
  8535 ;;		_main
  8536 ;; This function uses a reentrant model
  8537 ;;
  8538                           
  8539                           	psect	text27
  8540  01B378                     __ptext27:
  8541                           	opt callstack 0
  8542  01B378                     _clear_hid_pflags:
  8543                           	opt callstack 15
  8544                           
  8545                           ;hid.c: 51: void clear_hid_pflags(H_data* h);hid.c: 52: {;hid.c: 53:  h->select_p = SW_O
      +                          FF;
  8546                           ;stkvar	_h @ sp[(0)+-1]
  8547                           
  8548                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8549                           ;incstack = 0
  8550  01B378  0EFF               	movlw	-1
  8551  01B37A  50E3               	movf	plusw1,w,c
  8552  01B37C  6ED9               	movwf	fsr2l,c
  8553  01B37E  6ADA               	clrf	fsr2h,c
  8554  01B380  0E03               	movlw	3
  8555  01B382  26D9               	addwf	fsr2l,f,c
  8556  01B384  0E00               	movlw	0
  8557  01B386  6EDF               	movwf	indf2,c
  8558                           
  8559                           ;hid.c: 54:  h->enter_p = SW_OFF;
  8560                           ;stkvar	_h @ sp[(0)+-1]
  8561  01B388  0EFF               	movlw	-1
  8562  01B38A  50E3               	movf	plusw1,w,c
  8563  01B38C  6ED9               	movwf	fsr2l,c
  8564  01B38E  6ADA               	clrf	fsr2h,c
  8565  01B390  0E05               	movlw	5
  8566  01B392  26D9               	addwf	fsr2l,f,c
  8567  01B394  0E00               	movlw	0
  8568  01B396  6EDF               	movwf	indf2,c
  8569                           
  8570                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  8571  01B398  52E5               	movf	postdec1,f,c
  8572  01B39A  0012               	return		;funcret
  8573  01B39C                     __end_of_clear_hid_pflags:
  8574                           	opt callstack 0
  8575                           
  8576 ;; *************** function _check_help *****************
  8577 ;; Defined at:
  8578 ;;		line 40 in file "mconfig.c"
  8579 ;; Parameters:    Size  Location     Type
  8580 ;;  flipper         1  [STACK] const _Bool 
  8581 ;; Auto vars:     Size  Location     Type
  8582 ;;  estatus         1    0        _Bool 
  8583 ;; Return value:  Size  Location     Type
  8584 ;;                  1  [STACK] _Bool 
  8585 ;; Registers used:
  8586 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8587 ;; Tracked objects:
  8588 ;;		On entry : 3F/2
  8589 ;;		On exit  : 0/0
  8590 ;;		Unchanged: 0/0
  8591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8596 ;;Total ram usage:        0 bytes
  8597 ;; Hardware stack levels used:    1
  8598 ;; Hardware stack levels required when called:   27
  8599 ;; This function calls:
  8600 ;;		_StartTimer
  8601 ;;		_TimerDone
  8602 ;;		_display_help
  8603 ;;		_display_info
  8604 ;;		_get_vterm_ptr
  8605 ;;		_help_button
  8606 ;;		_mode_lamp_bright
  8607 ;;		_mode_lamp_dim
  8608 ;;		_set_display_info
  8609 ;;		_set_temp_display_help
  8610 ;;		_set_vterm
  8611 ;;		_sprintf
  8612 ;;		_update_lcd
  8613 ;;		_vterm_dump
  8614 ;; This function is called by:
  8615 ;;		_main
  8616 ;; This function uses a reentrant model
  8617 ;;
  8618                           
  8619                           	psect	text28
  8620  0177A2                     __ptext28:
  8621                           	opt callstack 0
  8622  0177A2                     _check_help:
  8623                           	opt callstack 3
  8624                           
  8625                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
  8626                           
  8627                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8628                           ;incstack = 0
  8629  0177A2  ECCC  F0D6         	call	_help_button	;wreg free
  8630  0177A6  5028               	movf	btemp^0,w,c
  8631  0177A8  B4D8               	btfsc	status,2,c
  8632  0177AA  D0D0               	goto	l12522
  8633  0177AC  EC71  F0DB         	call	_display_info	;wreg free
  8634  0177B0  0428               	decf	btemp^0,w,c
  8635  0177B2  B4D8               	btfsc	status,2,c
  8636  0177B4  D0CB               	goto	l12522
  8637                           
  8638                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
  8639  0177B6  0EDC               	movlw	220
  8640  0177B8  6EE6               	movwf	postinc1,c
  8641  0177BA  0E05               	movlw	5
  8642  0177BC  6EE6               	movwf	postinc1,c
  8643  0177BE  0E0B               	movlw	11
  8644  0177C0  6EE6               	movwf	postinc1,c
  8645  0177C2  EC10  F0D6         	call	_StartTimer	;wreg free
  8646                           
  8647                           ;mconfig.c: 48:   if (V.debug)
  8648  0177C6  0102               	movlb	2	; () banked
  8649  0177C8  B39B               	btfsc	(_V+155)& (0+255),1,b	;volatile
  8650                           
  8651                           ; BSR set to: 2
  8652                           ;mconfig.c: 49:    vterm_dump();
  8653  0177CA  ECBA  F0C6         	call	_vterm_dump	;wreg free
  8654                           
  8655                           ;mconfig.c: 51:   set_vterm(1);
  8656  0177CE  0E01               	movlw	1
  8657  0177D0  6EE6               	movwf	postinc1,c
  8658  0177D2  EC58  F0DA         	call	_set_vterm	;wreg free
  8659                           
  8660                           ;mconfig.c: 52:   set_temp_display_help(display_info());
  8661  0177D6  EC71  F0DB         	call	_display_info	;wreg free
  8662  0177DA  5028               	movf	btemp^0,w,c
  8663  0177DC  6EE6               	movwf	postinc1,c
  8664  0177DE  EC27  F0DB         	call	_set_temp_display_help	;wreg free
  8665                           
  8666                           ; BSR set to: 2
  8667                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
  8668  0177E2  0E01               	movlw	1
  8669  0177E4  6EE6               	movwf	postinc1,c
  8670  0177E6  EC67  F0DA         	call	_set_display_info	;wreg free
  8671                           
  8672                           ;mconfig.c: 54:   if (flipper) {
  8673                           ;stkvar	_flipper @ sp[(0)+-1]
  8674  0177EA  0EFF               	movlw	-1
  8675  0177EC  50E3               	movf	plusw1,w,c
  8676  0177EE  B4D8               	btfsc	status,2,c
  8677  0177F0  D019               	goto	l12508
  8678                           
  8679                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  8680  0177F2  0EB1               	movlw	low STR_46
  8681  0177F4  6EE6               	movwf	postinc1,c
  8682  0177F6  0EFF               	movlw	high STR_46
  8683  0177F8  6EE6               	movwf	postinc1,c
  8684  0177FA  0E01               	movlw	low STR_48
  8685  0177FC  6EE6               	movwf	postinc1,c
  8686  0177FE  0EFE               	movlw	high STR_48
  8687  017800  6EE6               	movwf	postinc1,c
  8688  017802  0E01               	movlw	1
  8689  017804  6EE6               	movwf	postinc1,c
  8690  017806  0E00               	movlw	0
  8691  017808  6EE6               	movwf	postinc1,c
  8692  01780A  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  8693  01780E  0060  F0A3  FFE6   	movff	btemp,postinc1
  8694  017814  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  8695  01781A  0E06               	movlw	6
  8696  01781C  6EE6               	movwf	postinc1,c
  8697  01781E  EC08  F0CA         	call	_sprintf	;wreg free
  8698                           
  8699                           ;mconfig.c: 56:   } else {
  8700  017822  D018               	goto	l1664
  8701  017824                     l12508:
  8702                           
  8703                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  8704  017824  0EC7               	movlw	low STR_47
  8705  017826  6EE6               	movwf	postinc1,c
  8706  017828  0EFF               	movlw	high STR_47
  8707  01782A  6EE6               	movwf	postinc1,c
  8708  01782C  0E01               	movlw	low STR_48
  8709  01782E  6EE6               	movwf	postinc1,c
  8710  017830  0EFE               	movlw	high STR_48
  8711  017832  6EE6               	movwf	postinc1,c
  8712  017834  0E01               	movlw	1
  8713  017836  6EE6               	movwf	postinc1,c
  8714  017838  0E00               	movlw	0
  8715  01783A  6EE6               	movwf	postinc1,c
  8716  01783C  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  8717  017840  0060  F0A3  FFE6   	movff	btemp,postinc1
  8718  017846  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  8719  01784C  0E06               	movlw	6
  8720  01784E  6EE6               	movwf	postinc1,c
  8721  017850  EC08  F0CA         	call	_sprintf	;wreg free
  8722  017854                     l1664:
  8723                           
  8724                           ; BSR set to: 0
  8725                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  8726  017854  0102               	movlb	2	; () banked
  8727  017856  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  8728  017858  32E8               	rrcf	wreg,f,c
  8729  01785A  32E8               	rrcf	wreg,f,c
  8730  01785C  0B03               	andlw	3
  8731  01785E  0D24               	mullw	36
  8732  017860  0E12               	movlw	18
  8733  017862  26F3               	addwf	243,f,c
  8734  017864  0E00               	movlw	0
  8735  017866  22F4               	addwfc	244,f,c
  8736  017868  0E4B               	movlw	low _T
  8737  01786A  6E32               	movwf	(btemp+10)^0,c
  8738  01786C  0EFB               	movlw	high _T
  8739  01786E  6E33               	movwf	(btemp+11)^0,c
  8740  017870  50F3               	movf	243,w,c
  8741  017872  2632               	addwf	(btemp+10)^0,f,c
  8742  017874  50F4               	movf	244,w,c
  8743  017876  2233               	addwfc	(btemp+11)^0,f,c
  8744  017878  0060  F0CB  FFE6   	movff	btemp+10,postinc1
  8745  01787E  0060  F0CF  FFE6   	movff	btemp+11,postinc1
  8746  017884  0EBD               	movlw	low STR_50
  8747  017886  6EE6               	movwf	postinc1,c
  8748  017888  0EFF               	movlw	high STR_50
  8749  01788A  6EE6               	movwf	postinc1,c
  8750  01788C  0E01               	movlw	1
  8751  01788E  6EE6               	movwf	postinc1,c
  8752  017890  0E01               	movlw	1
  8753  017892  6EE6               	movwf	postinc1,c
  8754  017894  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  8755  017898  0060  F0A3  FFE6   	movff	btemp,postinc1
  8756  01789E  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  8757  0178A4  0E06               	movlw	6
  8758  0178A6  6EE6               	movwf	postinc1,c
  8759  0178A8  EC08  F0CA         	call	_sprintf	;wreg free
  8760                           
  8761                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  8762  0178AC  0102               	movlb	2	; () banked
  8763  0178AE  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  8764  0178B0  32E8               	rrcf	wreg,f,c
  8765  0178B2  32E8               	rrcf	wreg,f,c
  8766  0178B4  0B03               	andlw	3
  8767  0178B6  0D24               	mullw	36
  8768  0178B8  0E4B               	movlw	low _T
  8769  0178BA  6E32               	movwf	(btemp+10)^0,c
  8770  0178BC  0EFB               	movlw	high _T
  8771  0178BE  6E33               	movwf	(btemp+11)^0,c
  8772  0178C0  50F3               	movf	243,w,c
  8773  0178C2  2632               	addwf	(btemp+10)^0,f,c
  8774  0178C4  50F4               	movf	244,w,c
  8775  0178C6  2233               	addwfc	(btemp+11)^0,f,c
  8776  0178C8  0060  F0CB  FFE6   	movff	btemp+10,postinc1
  8777  0178CE  0060  F0CF  FFE6   	movff	btemp+11,postinc1
  8778  0178D4  0EBD               	movlw	low STR_50
  8779  0178D6  6EE6               	movwf	postinc1,c
  8780  0178D8  0EFF               	movlw	high STR_50
  8781  0178DA  6EE6               	movwf	postinc1,c
  8782  0178DC  0E01               	movlw	1
  8783  0178DE  6EE6               	movwf	postinc1,c
  8784  0178E0  0E02               	movlw	2
  8785  0178E2  6EE6               	movwf	postinc1,c
  8786  0178E4  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  8787  0178E8  0060  F0A3  FFE6   	movff	btemp,postinc1
  8788  0178EE  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  8789  0178F4  0E06               	movlw	6
  8790  0178F6  6EE6               	movwf	postinc1,c
  8791  0178F8  EC08  F0CA         	call	_sprintf	;wreg free
  8792                           
  8793                           ; BSR set to: 0
  8794                           ;mconfig.c: 61:   V.help_id++;
  8795  0178FC  EE20  F29B         	lfsr	2,_V+155	;volatile
  8796  017900  38DF               	swapf	223,w,c
  8797  017902  6E33               	movwf	(btemp+11)^0,c
  8798  017904  3233               	rrcf	(btemp+11)^0,f,c
  8799  017906  3033               	rrcf	(btemp+11)^0,w,c
  8800  017908  0B03               	andlw	3
  8801  01790A  6E33               	movwf	(btemp+11)^0,c
  8802  01790C  2A33               	incf	(btemp+11)^0,f,c
  8803  01790E  3A33               	swapf	(btemp+11)^0,f,c
  8804  017910  3633               	rlcf	(btemp+11)^0,f,c
  8805  017912  3633               	rlcf	(btemp+11)^0,f,c
  8806  017914  50DF               	movf	223,w,c
  8807  017916  1833               	xorwf	(btemp+11)^0,w,c
  8808  017918  0B3F               	andlw	-193
  8809  01791A  1833               	xorwf	(btemp+11)^0,w,c
  8810  01791C  6EDF               	movwf	223,c
  8811                           
  8812                           ; BSR set to: 0
  8813                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
  8814  01791E  0EB8               	movlw	184
  8815  017920  6EE6               	movwf	postinc1,c
  8816  017922  0E0B               	movlw	11
  8817  017924  6EE6               	movwf	postinc1,c
  8818  017926  0E09               	movlw	9
  8819  017928  6EE6               	movwf	postinc1,c
  8820  01792A  EC10  F0D6         	call	_StartTimer	;wreg free
  8821                           
  8822                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
  8823  01792E  0EB8               	movlw	184
  8824  017930  6EE6               	movwf	postinc1,c
  8825  017932  0E0B               	movlw	11
  8826  017934  6EE6               	movwf	postinc1,c
  8827  017936  0E07               	movlw	7
  8828  017938  6EE6               	movwf	postinc1,c
  8829  01793A  EC10  F0D6         	call	_StartTimer	;wreg free
  8830                           
  8831                           ;mconfig.c: 64:   mode_lamp_bright();
  8832  01793E  EC36  F0DB         	call	_mode_lamp_bright	;wreg free
  8833                           
  8834                           ;mconfig.c: 65:   update_lcd(1);
  8835  017942  0E01               	movlw	1
  8836  017944  6EE6               	movwf	postinc1,c
  8837  017946  ECF9  F0C8         	call	_update_lcd	;wreg free
  8838                           
  8839                           ;mconfig.c: 67:  } else {
  8840  01794A  D032               	goto	l1665
  8841  01794C                     l12522:
  8842                           
  8843                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
  8844  01794C  0E09               	movlw	9
  8845  01794E  6EE6               	movwf	postinc1,c
  8846  017950  EC91  F0D8         	call	_TimerDone	;wreg free
  8847  017954  5028               	movf	btemp^0,w,c
  8848  017956  B4D8               	btfsc	status,2,c
  8849  017958  D02B               	goto	l1665
  8850                           
  8851                           ;mconfig.c: 69:    set_vterm(0);
  8852  01795A  0E00               	movlw	0
  8853  01795C  6EE6               	movwf	postinc1,c
  8854  01795E  EC58  F0DA         	call	_set_vterm	;wreg free
  8855                           
  8856                           ;mconfig.c: 70:    V.help = 0;
  8857  017962  0102               	movlb	2	; () banked
  8858  017964  959B               	bcf	(_V+155)& (0+255),2,b	;volatile
  8859                           
  8860                           ; BSR set to: 2
  8861                           ;mconfig.c: 71:    set_display_info(display_help());
  8862  017966  EC75  F0DB         	call	_display_help	;wreg free
  8863  01796A  5028               	movf	btemp^0,w,c
  8864  01796C  6EE6               	movwf	postinc1,c
  8865  01796E  EC67  F0DA         	call	_set_display_info	;wreg free
  8866                           
  8867                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
  8868  017972  0060  FA57  FFE6   	movff	_V+149,postinc1
  8869  017978  0060  FA5B  FFE6   	movff	_V+150,postinc1
  8870  01797E  ECCB  F0DA         	call	_mode_lamp_dim	;wreg free
  8871                           
  8872                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
  8873  017982  0E0B               	movlw	11
  8874  017984  6EE6               	movwf	postinc1,c
  8875  017986  EC91  F0D8         	call	_TimerDone	;wreg free
  8876  01798A  5028               	movf	btemp^0,w,c
  8877  01798C  B4D8               	btfsc	status,2,c
  8878  01798E  D010               	goto	l1665
  8879                           
  8880                           ;mconfig.c: 74:     V.flipper = !V.flipper;
  8881  017990  0102               	movlb	2	; () banked
  8882  017992  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
  8883  017994  A4D8               	btfss	status,2,c
  8884  017996  D002               	goto	u12030
  8885  017998  0E01               	movlw	1
  8886  01799A  D001               	goto	u12040
  8887  01799C                     u12030:
  8888  01799C  0E00               	movlw	0
  8889  01799E                     u12040:
  8890  01799E  6FAB               	movwf	(_V+171)& (0+255),b	;volatile
  8891                           
  8892                           ; BSR set to: 2
  8893                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
  8894  0179A0  0EDC               	movlw	220
  8895  0179A2  6EE6               	movwf	postinc1,c
  8896  0179A4  0E05               	movlw	5
  8897  0179A6  6EE6               	movwf	postinc1,c
  8898  0179A8  0E0B               	movlw	11
  8899  0179AA  6EE6               	movwf	postinc1,c
  8900  0179AC  EC10  F0D6         	call	_StartTimer	;wreg free
  8901  0179B0                     l1665:
  8902                           
  8903                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  8904  0179B0  52E5               	movf	postdec1,f,c
  8905  0179B2  0012               	return		;funcret
  8906  0179B4                     __end_of_check_help:
  8907                           	opt callstack 0
  8908                           
  8909 ;; *************** function _vterm_dump *****************
  8910 ;; Defined at:
  8911 ;;		line 121 in file "mconfig.c"
  8912 ;; Parameters:    Size  Location     Type
  8913 ;;		None
  8914 ;; Auto vars:     Size  Location     Type
  8915 ;;		None
  8916 ;; Return value:  Size  Location     Type
  8917 ;;                  1  [STACK] void 
  8918 ;; Registers used:
  8919 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8920 ;; Tracked objects:
  8921 ;;		On entry : 3F/2
  8922 ;;		On exit  : 0/0
  8923 ;;		Unchanged: 0/0
  8924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8928 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8929 ;;Total ram usage:        0 bytes
  8930 ;; Hardware stack levels used:    1
  8931 ;; Hardware stack levels required when called:   26
  8932 ;; This function calls:
  8933 ;;		_WaitMs
  8934 ;;		_eaDogM_WriteStringAtPos
  8935 ;;		_get_vterm_ptr
  8936 ;;		_sprintf
  8937 ;;		_wait_lcd_done
  8938 ;; This function is called by:
  8939 ;;		_check_help
  8940 ;; This function uses a reentrant model
  8941 ;;
  8942                           
  8943                           	psect	text29
  8944  018D74                     __ptext29:
  8945                           	opt callstack 0
  8946  018D74                     _vterm_dump:
  8947                           	opt callstack 3
  8948                           
  8949                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  8950                           
  8951                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8952                           ;incstack = 0
  8953  018D74  0E01               	movlw	1
  8954  018D76  6EE6               	movwf	postinc1,c
  8955  018D78  0E00               	movlw	0
  8956  018D7A  6EE6               	movwf	postinc1,c
  8957  018D7C  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  8958  018D80  0060  F0A3  FFE6   	movff	btemp,postinc1
  8959  018D86  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  8960  018D8C  0E00               	movlw	0
  8961  018D8E  6EE6               	movwf	postinc1,c
  8962  018D90  0E00               	movlw	0
  8963  018D92  6EE6               	movwf	postinc1,c
  8964  018D94  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  8965  018D98  0060  F0A3  FFE6   	movff	btemp,postinc1
  8966  018D9E  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  8967  018DA4  0E93               	movlw	low STR_52
  8968  018DA6  6EE6               	movwf	postinc1,c
  8969  018DA8  0EFF               	movlw	high STR_52
  8970  018DAA  6EE6               	movwf	postinc1,c
  8971  018DAC  0E01               	movlw	low (_V+1)
  8972  018DAE  6EE6               	movwf	postinc1,c
  8973  018DB0  0E02               	movlw	high (_V+1)
  8974  018DB2  6EE6               	movwf	postinc1,c
  8975  018DB4  0E08               	movlw	8
  8976  018DB6  6EE6               	movwf	postinc1,c
  8977  018DB8  EC08  F0CA         	call	_sprintf	;wreg free
  8978                           
  8979                           ; BSR set to: 0
  8980                           ;mconfig.c: 124:  wait_lcd_done();
  8981  018DBC  EC94  F0DA         	call	_wait_lcd_done	;wreg free
  8982                           
  8983                           ; BSR set to: 0
  8984                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  8985  018DC0  0E01               	movlw	low (_V+1)
  8986  018DC2  6EE6               	movwf	postinc1,c
  8987  018DC4  0E02               	movlw	high (_V+1)
  8988  018DC6  6EE6               	movwf	postinc1,c
  8989  018DC8  0E00               	movlw	0
  8990  018DCA  6EE6               	movwf	postinc1,c
  8991  018DCC  0E00               	movlw	0
  8992  018DCE  6EE6               	movwf	postinc1,c
  8993  018DD0  EC1E  F0D7         	call	_eaDogM_WriteStringAtPos	;wreg free
  8994                           
  8995                           ; BSR set to: 59
  8996                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  8997  018DD4  0E01               	movlw	1
  8998  018DD6  6EE6               	movwf	postinc1,c
  8999  018DD8  0E01               	movlw	1
  9000  018DDA  6EE6               	movwf	postinc1,c
  9001  018DDC  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  9002  018DE0  0060  F0A3  FFE6   	movff	btemp,postinc1
  9003  018DE6  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  9004  018DEC  0E00               	movlw	0
  9005  018DEE  6EE6               	movwf	postinc1,c
  9006  018DF0  0E01               	movlw	1
  9007  018DF2  6EE6               	movwf	postinc1,c
  9008  018DF4  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  9009  018DF8  0060  F0A3  FFE6   	movff	btemp,postinc1
  9010  018DFE  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  9011  018E04  0E93               	movlw	low STR_52
  9012  018E06  6EE6               	movwf	postinc1,c
  9013  018E08  0EFF               	movlw	high STR_52
  9014  018E0A  6EE6               	movwf	postinc1,c
  9015  018E0C  0E01               	movlw	low (_V+1)
  9016  018E0E  6EE6               	movwf	postinc1,c
  9017  018E10  0E02               	movlw	high (_V+1)
  9018  018E12  6EE6               	movwf	postinc1,c
  9019  018E14  0E08               	movlw	8
  9020  018E16  6EE6               	movwf	postinc1,c
  9021  018E18  EC08  F0CA         	call	_sprintf	;wreg free
  9022                           
  9023                           ; BSR set to: 0
  9024                           ;mconfig.c: 127:  wait_lcd_done();
  9025  018E1C  EC94  F0DA         	call	_wait_lcd_done	;wreg free
  9026                           
  9027                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  9028  018E20  0E01               	movlw	low (_V+1)
  9029  018E22  6EE6               	movwf	postinc1,c
  9030  018E24  0E02               	movlw	high (_V+1)
  9031  018E26  6EE6               	movwf	postinc1,c
  9032  018E28  0E00               	movlw	0
  9033  018E2A  6EE6               	movwf	postinc1,c
  9034  018E2C  0E01               	movlw	1
  9035  018E2E  6EE6               	movwf	postinc1,c
  9036  018E30  EC1E  F0D7         	call	_eaDogM_WriteStringAtPos	;wreg free
  9037                           
  9038                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  9039  018E34  0E01               	movlw	1
  9040  018E36  6EE6               	movwf	postinc1,c
  9041  018E38  0E02               	movlw	2
  9042  018E3A  6EE6               	movwf	postinc1,c
  9043  018E3C  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  9044  018E40  0060  F0A3  FFE6   	movff	btemp,postinc1
  9045  018E46  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  9046  018E4C  0E00               	movlw	0
  9047  018E4E  6EE6               	movwf	postinc1,c
  9048  018E50  0E02               	movlw	2
  9049  018E52  6EE6               	movwf	postinc1,c
  9050  018E54  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  9051  018E58  0060  F0A3  FFE6   	movff	btemp,postinc1
  9052  018E5E  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  9053  018E64  0E93               	movlw	low STR_52
  9054  018E66  6EE6               	movwf	postinc1,c
  9055  018E68  0EFF               	movlw	high STR_52
  9056  018E6A  6EE6               	movwf	postinc1,c
  9057  018E6C  0E01               	movlw	low (_V+1)
  9058  018E6E  6EE6               	movwf	postinc1,c
  9059  018E70  0E02               	movlw	high (_V+1)
  9060  018E72  6EE6               	movwf	postinc1,c
  9061  018E74  0E08               	movlw	8
  9062  018E76  6EE6               	movwf	postinc1,c
  9063  018E78  EC08  F0CA         	call	_sprintf	;wreg free
  9064                           
  9065                           ; BSR set to: 0
  9066                           ;mconfig.c: 130:  wait_lcd_done();
  9067  018E7C  EC94  F0DA         	call	_wait_lcd_done	;wreg free
  9068                           
  9069                           ; BSR set to: 0
  9070                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  9071  018E80  0E01               	movlw	low (_V+1)
  9072  018E82  6EE6               	movwf	postinc1,c
  9073  018E84  0E02               	movlw	high (_V+1)
  9074  018E86  6EE6               	movwf	postinc1,c
  9075  018E88  0E00               	movlw	0
  9076  018E8A  6EE6               	movwf	postinc1,c
  9077  018E8C  0E02               	movlw	2
  9078  018E8E  6EE6               	movwf	postinc1,c
  9079  018E90  EC1E  F0D7         	call	_eaDogM_WriteStringAtPos	;wreg free
  9080                           
  9081                           ; BSR set to: 59
  9082                           ;mconfig.c: 132:  WaitMs(3000);
  9083  018E94  0EB8               	movlw	184
  9084  018E96  6EE6               	movwf	postinc1,c
  9085  018E98  0E0B               	movlw	11
  9086  018E9A  6EE6               	movwf	postinc1,c
  9087  018E9C  EC03  F0D7         	call	_WaitMs	;wreg free
  9088                           
  9089                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  9090  018EA0  0012               	return		;funcret
  9091  018EA2                     __end_of_vterm_dump:
  9092                           	opt callstack 0
  9093                           
  9094 ;; *************** function _sprintf *****************
  9095 ;; Defined at:
  9096 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  9097 ;; Parameters:    Size  Location     Type
  9098 ;;  s               2  [STACK] PTR unsigned char 
  9099 ;;		 -> D.lcd(480), D(482), port_data(512), V(189), 
  9100 ;;  fmt             2  [STACK] PTR const unsigned char 
  9101 ;;		 -> STR_65(85), STR_63(3), STR_62(3), STR_61(19), 
  9102 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
  9103 ;;		 -> STR_56(19), STR_55(24), STR_54(15), STR_53(15), 
  9104 ;;		 -> STR_52(15), STR_51(10), STR_50(10), STR_49(19), 
  9105 ;;		 -> STR_48(19), STR_42(17), STR_41(16), STR_40(16), 
  9106 ;;		 -> STR_39(20), STR_38(20), STR_37(20), STR_36(20), 
  9107 ;;		 -> STR_35(20), STR_34(20), STR_33(19), STR_32(19), 
  9108 ;;		 -> STR_31(19), STR_30(19), STR_29(19), STR_28(19), 
  9109 ;;		 -> STR_27(19), STR_26(19), STR_25(19), STR_24(19), 
  9110 ;;		 -> STR_23(19), STR_22(19), STR_21(17), STR_20(16), 
  9111 ;;		 -> STR_19(16), STR_18(26), STR_17(26), STR_16(22), 
  9112 ;;		 -> STR_15(21), STR_14(17), STR_13(17), STR_12(17), 
  9113 ;;		 -> STR_11(22), STR_10(22), STR_9(23), STR_8(18), 
  9114 ;;		 -> STR_7(17), STR_6(17), STR_5(17), STR_4(17), 
  9115 ;;		 -> STR_2(15), STR_1(17), 
  9116 ;; Auto vars:     Size  Location     Type
  9117 ;;  f               6  [STACK] struct _IO_FILE
  9118 ;;  ap              2  [STACK] PTR void [1]
  9119 ;;		 -> ?_printf(2), ?_sprintf(2), 
  9120 ;;  ret             2    0        int 
  9121 ;; Return value:  Size  Location     Type
  9122 ;;                  2  [STACK] int 
  9123 ;; Registers used:
  9124 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9125 ;; Tracked objects:
  9126 ;;		On entry : 0/1
  9127 ;;		On exit  : 3F/0
  9128 ;;		Unchanged: 0/0
  9129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9134 ;;Total ram usage:        0 bytes
  9135 ;; Hardware stack levels used:    1
  9136 ;; Hardware stack levels required when called:   23
  9137 ;; This function calls:
  9138 ;;		_vfprintf
  9139 ;; This function is called by:
  9140 ;;		_main
  9141 ;;		_check_help
  9142 ;;		_vterm_dump
  9143 ;;		_calc_bsoc
  9144 ;; This function uses a reentrant model
  9145 ;;
  9146                           
  9147                           	psect	text30
  9148  019410                     __ptext30:
  9149                           	opt callstack 0
  9150  019410                     _sprintf:
  9151                           	opt callstack 0
  9152                           
  9153                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 56, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  9154  019410  0E08               	movlw	8
  9155  019412  26E1               	addwf	fsr1l,f,c
  9156  019414  0E00               	movlw	0
  9157  019416  22E2               	addwfc	fsr1h,f,c
  9158                           
  9159                           ;incstack = 0
  9160 ;; hardware stack exceeded
  9161  019418  0EFE               	movlw	254
  9162  01941A  6E32               	movwf	(btemp+10)^0,c
  9163  01941C  0EFF               	movlw	255
  9164  01941E  6E33               	movwf	(btemp+11)^0,c
  9165                           
  9166                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  9167  019420  0EF5               	movlw	245
  9168  019422  24E1               	addwf	fsr1l,w,c
  9169  019424  6E30               	movwf	(btemp+8)^0,c
  9170  019426  0EFF               	movlw	255
  9171  019428  20E2               	addwfc	fsr1h,w,c
  9172  01942A  6E31               	movwf	(btemp+9)^0,c
  9173  01942C  5032               	movf	(btemp+10)^0,w,c
  9174  01942E  2630               	addwf	(btemp+8)^0,f,c
  9175  019430  5033               	movf	(btemp+11)^0,w,c
  9176  019432  2231               	addwfc	(btemp+9)^0,f,c
  9177                           
  9178                           ;stkvar	_ap @ sp[(-8)+6]
  9179  019434  0EFF               	movlw	-1
  9180  019436  0060  F0C7  FFE3   	movff	btemp+9,plusw1
  9181  01943C  0EFE               	movlw	-2
  9182  01943E  0060  F0C3  FFE3   	movff	btemp+8,plusw1
  9183                           
  9184                           ;stkvar	_s @ sp[(-8)+-3]
  9185  019444  0EF5               	movlw	-11
  9186  019446  006F FF8C  F032    	movff	plusw1,btemp+10
  9187  01944C  0EF6               	movlw	-10
  9188  01944E  006F FF8C  F033    	movff	plusw1,btemp+11
  9189                           
  9190                           ;stkvar	_f @ sp[(-8)+0]
  9191  019454  0EF9               	movlw	-7
  9192  019456  0060  F0CF  FFE3   	movff	btemp+11,plusw1
  9193  01945C  0EF8               	movlw	-8
  9194  01945E  0060  F0CB  FFE3   	movff	btemp+10,plusw1
  9195                           
  9196                           ;stkvar	_f @ sp[(-8)+0]
  9197  019464  0EFA               	movlw	250
  9198  019466  24E1               	addwf	fsr1l,w,c
  9199  019468  6ED9               	movwf	fsr2l,c
  9200  01946A  0EFF               	movlw	255
  9201  01946C  20E2               	addwfc	fsr1h,w,c
  9202  01946E  6EDA               	movwf	fsr2h,c
  9203  019470  0E00               	movlw	0
  9204  019472  6EDE               	movwf	postinc2,c
  9205  019474  0E00               	movlw	0
  9206  019476  6EDD               	movwf	postdec2,c
  9207                           
  9208                           ;stkvar	_f @ sp[(-8)+0]
  9209  019478  0EFC               	movlw	252
  9210  01947A  24E1               	addwf	fsr1l,w,c
  9211  01947C  6ED9               	movwf	fsr2l,c
  9212  01947E  0EFF               	movlw	255
  9213  019480  20E2               	addwfc	fsr1h,w,c
  9214  019482  6EDA               	movwf	fsr2h,c
  9215  019484  0E00               	movlw	0
  9216  019486  6EDE               	movwf	postinc2,c
  9217  019488  0E00               	movlw	0
  9218  01948A  6EDD               	movwf	postdec2,c
  9219                           
  9220                           ;stkvar	_ap @ sp[(-8)+6]
  9221  01948C  0EFE               	movlw	254
  9222  01948E  24E1               	addwf	fsr1l,w,c
  9223  019490  6E28               	movwf	btemp^0,c
  9224  019492  0EFF               	movlw	255
  9225  019494  20E2               	addwfc	fsr1h,w,c
  9226  019496  6E29               	movwf	(btemp+1)^0,c
  9227  019498  0060  F0A3  FFE6   	movff	btemp,postinc1
  9228  01949E  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  9229                           
  9230                           ;stkvar	_fmt @ sp[(-10)+-5]
  9231  0194A4  0EF1               	movlw	-15
  9232  0194A6  006F FF8F FFE6     	movff	plusw1,postinc1
  9233  0194AC  006F FF8F FFE6     	movff	plusw1,postinc1
  9234                           
  9235                           ;stkvar	_f @ sp[(-12)+0]
  9236  0194B2  0EF4               	movlw	244
  9237  0194B4  24E1               	addwf	fsr1l,w,c
  9238  0194B6  6E28               	movwf	btemp^0,c
  9239  0194B8  0EFF               	movlw	255
  9240  0194BA  20E2               	addwfc	fsr1h,w,c
  9241  0194BC  6E29               	movwf	(btemp+1)^0,c
  9242  0194BE  0060  F0A3  FFE6   	movff	btemp,postinc1
  9243  0194C4  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  9244  0194CA  EC50  F0CE         	call	_vfprintf	;wreg free
  9245                           
  9246                           ; BSR set to: 0
  9247                           ;stkvar	_f @ sp[(-8)+0]
  9248  0194CE  0EFA               	movlw	250
  9249  0194D0  24E1               	addwf	fsr1l,w,c
  9250  0194D2  6ED9               	movwf	fsr2l,c
  9251  0194D4  0EFF               	movlw	255
  9252  0194D6  20E2               	addwfc	fsr1h,w,c
  9253  0194D8  6EDA               	movwf	fsr2h,c
  9254  0194DA  006F FF78  F032    	movff	postinc2,btemp+10
  9255  0194E0  006F FF74  F033    	movff	postdec2,btemp+11
  9256                           
  9257                           ;stkvar	_s @ sp[(-8)+-3]
  9258  0194E6  0EF5               	movlw	-11
  9259  0194E8  006F FF8C  F030    	movff	plusw1,btemp+8
  9260  0194EE  0EF6               	movlw	-10
  9261  0194F0  006F FF8C  F031    	movff	plusw1,btemp+9
  9262  0194F6  5032               	movf	(btemp+10)^0,w,c
  9263  0194F8  2430               	addwf	(btemp+8)^0,w,c
  9264  0194FA  6ED9               	movwf	fsr2l,c
  9265  0194FC  5033               	movf	(btemp+11)^0,w,c
  9266  0194FE  2031               	addwfc	(btemp+9)^0,w,c
  9267  019500  6EDA               	movwf	fsr2h,c
  9268  019502  0E00               	movlw	0
  9269  019504  6EDF               	movwf	indf2,c
  9270                           
  9271                           ; BSR set to: 0
  9272                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 56, args
      +                          ize = 4, vargsize = 0
  9273  019506  0EF8               	movlw	248
  9274  019508  26E1               	addwf	fsr1l,f,c
  9275  01950A  0EFF               	movlw	255
  9276  01950C  22E2               	addwfc	fsr1h,f,c
  9277  01950E  52E5               	movf	postdec1,f,c
  9278  019510  50E7               	movf	indf1,w,c
  9279  019512  5EE1               	subwf	fsr1l,f,c
  9280  019514  0E00               	movlw	0
  9281  019516  5AE2               	subwfb	fsr1h,f,c
  9282  019518  0012               	return		;funcret
  9283  01951A                     __end_of_sprintf:
  9284                           	opt callstack 0
  9285                           
  9286 ;; *************** function _get_vterm_ptr *****************
  9287 ;; Defined at:
  9288 ;;		line 116 in file "mconfig.c"
  9289 ;; Parameters:    Size  Location     Type
  9290 ;;  line            1  [STACK] const unsigned char 
  9291 ;;  vterm           1  [STACK] const unsigned char 
  9292 ;; Auto vars:     Size  Location     Type
  9293 ;;		None
  9294 ;; Return value:  Size  Location     Type
  9295 ;;                  2  [STACK] PTR unsigned char 
  9296 ;; Registers used:
  9297 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
  9298 ;; Tracked objects:
  9299 ;;		On entry : 0/1
  9300 ;;		On exit  : 0/0
  9301 ;;		Unchanged: 0/0
  9302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9306 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9307 ;;Total ram usage:        0 bytes
  9308 ;; Hardware stack levels used:    1
  9309 ;; Hardware stack levels required when called:   15
  9310 ;; This function calls:
  9311 ;;		Nothing
  9312 ;; This function is called by:
  9313 ;;		_main
  9314 ;;		_check_help
  9315 ;;		_vterm_dump
  9316 ;; This function uses a reentrant model
  9317 ;;
  9318                           
  9319                           	psect	text31
  9320  01AFCE                     __ptext31:
  9321                           	opt callstack 0
  9322  01AFCE                     _get_vterm_ptr:
  9323                           	opt callstack 15
  9324                           
  9325                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
  9326                           ;stkvar	_vterm @ sp[(0)+-2]
  9327                           
  9328                           ; BSR set to: 0
  9329                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9330                           ;incstack = 0
  9331  01AFCE  0EFE               	movlw	-2
  9332  01AFD0  50E3               	movf	plusw1,w,c
  9333  01AFD2  0B03               	andlw	3
  9334  01AFD4  0D78               	mullw	120
  9335  01AFD6  0EFF               	movlw	low _D
  9336  01AFD8  6E28               	movwf	btemp^0,c
  9337  01AFDA  0E07               	movlw	high _D
  9338  01AFDC  6E29               	movwf	(btemp+1)^0,c
  9339  01AFDE  50F3               	movf	243,w,c
  9340  01AFE0  2628               	addwf	btemp^0,f,c
  9341  01AFE2  50F4               	movf	244,w,c
  9342  01AFE4  2229               	addwfc	(btemp+1)^0,f,c
  9343                           
  9344                           ;stkvar	_line @ sp[(0)+-1]
  9345  01AFE6  0EFF               	movlw	-1
  9346  01AFE8  50E3               	movf	plusw1,w,c
  9347  01AFEA  0B03               	andlw	3
  9348  01AFEC  0D28               	mullw	40
  9349  01AFEE  50F3               	movf	243,w,c
  9350  01AFF0  2628               	addwf	btemp^0,f,c
  9351  01AFF2  50F4               	movf	244,w,c
  9352  01AFF4  2229               	addwfc	(btemp+1)^0,f,c
  9353                           
  9354                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  9355  01AFF6  52E5               	movf	postdec1,f,c
  9356  01AFF8  52E5               	movf	postdec1,f,c
  9357  01AFFA  0012               	return		;funcret
  9358  01AFFC                     __end_of_get_vterm_ptr:
  9359                           	opt callstack 0
  9360                           
  9361 ;; *************** function _WaitMs *****************
  9362 ;; Defined at:
  9363 ;;		line 32 in file "timers.c"
  9364 ;; Parameters:    Size  Location     Type
  9365 ;;  numMilliseco    2  [STACK] const unsigned short 
  9366 ;; Auto vars:     Size  Location     Type
  9367 ;;		None
  9368 ;; Return value:  Size  Location     Type
  9369 ;;                  1  [STACK] void 
  9370 ;; Registers used:
  9371 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  9372 ;; Tracked objects:
  9373 ;;		On entry : 0/2
  9374 ;;		On exit  : 0/0
  9375 ;;		Unchanged: 0/0
  9376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9381 ;;Total ram usage:        0 bytes
  9382 ;; Hardware stack levels used:    1
  9383 ;; Hardware stack levels required when called:   16
  9384 ;; This function calls:
  9385 ;;		_StartTimer
  9386 ;;		_TimerDone
  9387 ;; This function is called by:
  9388 ;;		_main
  9389 ;;		_vterm_dump
  9390 ;; This function uses a reentrant model
  9391 ;;
  9392                           
  9393                           	psect	text32
  9394  01AE06                     __ptext32:
  9395                           	opt callstack 0
  9396  01AE06                     _WaitMs:
  9397                           	opt callstack 12
  9398                           
  9399                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  9400                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  9401                           
  9402                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9403                           ;incstack = 0
  9404  01AE06  0EFE               	movlw	-2
  9405  01AE08  006F FF8F FFE6     	movff	plusw1,postinc1
  9406  01AE0E  006F FF8F FFE6     	movff	plusw1,postinc1
  9407  01AE14  0E00               	movlw	0
  9408  01AE16  6EE6               	movwf	postinc1,c
  9409  01AE18  EC10  F0D6         	call	_StartTimer	;wreg free
  9410                           
  9411                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  9412  01AE1C  D005               	goto	l9472
  9413  01AE1E                     l1596:
  9414                           
  9415                           ;timers.c: 36:   __nop();
  9416  01AE1E  F000               	nop	
  9417                           
  9418                           ;timers.c: 37:   __nop();
  9419  01AE20  F000               	nop	
  9420                           
  9421                           ;timers.c: 38:   __nop();
  9422  01AE22  F000               	nop	
  9423                           
  9424                           ;timers.c: 39:   __nop();
  9425  01AE24  F000               	nop	
  9426  01AE26  0004               	clrwdt		;# 
  9427  01AE28                     l9472:
  9428                           
  9429                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  9430  01AE28  0E00               	movlw	0
  9431  01AE2A  6EE6               	movwf	postinc1,c
  9432  01AE2C  EC91  F0D8         	call	_TimerDone	;wreg free
  9433  01AE30  5028               	movf	btemp^0,w,c
  9434  01AE32  B4D8               	btfsc	status,2,c
  9435  01AE34  D7F4               	goto	l1596
  9436                           
  9437                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  9438  01AE36  52E5               	movf	postdec1,f,c
  9439  01AE38  52E5               	movf	postdec1,f,c
  9440  01AE3A  0012               	return		;funcret
  9441  01AE3C                     __end_of_WaitMs:
  9442                           	opt callstack 0
  9443                           
  9444 ;; *************** function _update_lcd *****************
  9445 ;; Defined at:
  9446 ;;		line 85 in file "mconfig.c"
  9447 ;; Parameters:    Size  Location     Type
  9448 ;;  vterm           1  [STACK] unsigned char 
  9449 ;; Auto vars:     Size  Location     Type
  9450 ;;		None
  9451 ;; Return value:  Size  Location     Type
  9452 ;;                  1  [STACK] unsigned char 
  9453 ;; Registers used:
  9454 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9455 ;; Tracked objects:
  9456 ;;		On entry : 0/0
  9457 ;;		On exit  : 0/0
  9458 ;;		Unchanged: 0/0
  9459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9463 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9464 ;;Total ram usage:        0 bytes
  9465 ;; Hardware stack levels used:    1
  9466 ;; Hardware stack levels required when called:   26
  9467 ;; This function calls:
  9468 ;;		_eaDogM_WriteStringAtPos
  9469 ;;		_wait_lcd_done
  9470 ;; This function is called by:
  9471 ;;		_main
  9472 ;;		_check_help
  9473 ;; This function uses a reentrant model
  9474 ;;
  9475                           
  9476                           	psect	text33
  9477  0191F2                     __ptext33:
  9478                           	opt callstack 0
  9479  0191F2                     _update_lcd:
  9480                           	opt callstack 4
  9481                           
  9482                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
  9483                           ;stkvar	_vterm @ sp[(0)+-1]
  9484                           
  9485                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9486                           ;incstack = 0
  9487  0191F2  0EFF               	movlw	-1
  9488  0191F4  006F FF8C  F028    	movff	plusw1,btemp
  9489  0191FA  0E03               	movlw	3
  9490  0191FC  1628               	andwf	btemp^0,f,c
  9491  0191FE  0EFF               	movlw	-1
  9492  019200  0060  F0A3  FFE3   	movff	btemp,plusw1
  9493                           
  9494                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
  9495  019206  EE22  F1DF         	lfsr	2,_D+480
  9496  01920A  A0DF               	btfss	indf2,0,c
  9497  01920C  D004               	goto	l12322
  9498                           
  9499                           ;stkvar	_vterm @ sp[(0)+-1]
  9500  01920E  0EFF               	movlw	-1
  9501  019210  50E3               	movf	plusw1,w,c
  9502  019212  B4D8               	btfsc	status,2,c
  9503  019214  D074               	goto	l1672
  9504  019216                     l12322:
  9505                           
  9506                           ;mconfig.c: 92:  D.lcd[vterm][0][16] = 0;
  9507                           ;stkvar	_vterm @ sp[(0)+-1]
  9508  019216  0EFF               	movlw	-1
  9509  019218  50E3               	movf	plusw1,w,c
  9510  01921A  0D78               	mullw	120
  9511  01921C  0E0F               	movlw	low (_D+16)
  9512  01921E  24F3               	addwf	243,w,c
  9513  019220  6ED9               	movwf	fsr2l,c
  9514  019222  0E08               	movlw	high (_D+16)
  9515  019224  20F4               	addwfc	prodh,w,c
  9516  019226  6EDA               	movwf	fsr2h,c
  9517  019228  0E00               	movlw	0
  9518  01922A  6EDF               	movwf	indf2,c
  9519                           
  9520                           ;mconfig.c: 93:  D.lcd[vterm][1][16] = 0;
  9521                           ;stkvar	_vterm @ sp[(0)+-1]
  9522  01922C  0EFF               	movlw	-1
  9523  01922E  50E3               	movf	plusw1,w,c
  9524  019230  0D78               	mullw	120
  9525  019232  0E37               	movlw	low (_D+56)
  9526  019234  24F3               	addwf	243,w,c
  9527  019236  6ED9               	movwf	fsr2l,c
  9528  019238  0E08               	movlw	high (_D+56)
  9529  01923A  20F4               	addwfc	prodh,w,c
  9530  01923C  6EDA               	movwf	fsr2h,c
  9531  01923E  0E00               	movlw	0
  9532  019240  6EDF               	movwf	indf2,c
  9533                           
  9534                           ;mconfig.c: 94:  D.lcd[vterm][2][16] = 0;
  9535                           ;stkvar	_vterm @ sp[(0)+-1]
  9536  019242  0EFF               	movlw	-1
  9537  019244  50E3               	movf	plusw1,w,c
  9538  019246  0D78               	mullw	120
  9539  019248  0E5F               	movlw	low (_D+96)
  9540  01924A  24F3               	addwf	243,w,c
  9541  01924C  6ED9               	movwf	fsr2l,c
  9542  01924E  0E08               	movlw	high (_D+96)
  9543  019250  20F4               	addwfc	prodh,w,c
  9544  019252  6EDA               	movwf	fsr2h,c
  9545  019254  0E00               	movlw	0
  9546  019256  6EDF               	movwf	indf2,c
  9547                           
  9548                           ;mconfig.c: 95:  wait_lcd_done();
  9549  019258  EC94  F0DA         	call	_wait_lcd_done	;wreg free
  9550                           
  9551                           ; BSR set to: 0
  9552                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
  9553                           ;stkvar	_vterm @ sp[(0)+-1]
  9554  01925C  0EFF               	movlw	-1
  9555  01925E  50E3               	movf	plusw1,w,c
  9556  019260  0D78               	mullw	120
  9557  019262  0EFF               	movlw	low _D
  9558  019264  6E32               	movwf	(btemp+10)^0,c
  9559  019266  0E07               	movlw	high _D
  9560  019268  6E33               	movwf	(btemp+11)^0,c
  9561  01926A  50F3               	movf	243,w,c
  9562  01926C  2632               	addwf	(btemp+10)^0,f,c
  9563  01926E  50F4               	movf	244,w,c
  9564  019270  2233               	addwfc	(btemp+11)^0,f,c
  9565  019272  0060  F0CB  FFE6   	movff	btemp+10,postinc1
  9566  019278  0060  F0CF  FFE6   	movff	btemp+11,postinc1
  9567  01927E  0E00               	movlw	0
  9568  019280  6EE6               	movwf	postinc1,c
  9569  019282  0E00               	movlw	0
  9570  019284  6EE6               	movwf	postinc1,c
  9571  019286  EC1E  F0D7         	call	_eaDogM_WriteStringAtPos	;wreg free
  9572                           
  9573                           ; BSR set to: 59
  9574                           ;mconfig.c: 97:  wait_lcd_done();
  9575  01928A  EC94  F0DA         	call	_wait_lcd_done	;wreg free
  9576                           
  9577                           ; BSR set to: 0
  9578                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
  9579                           ;stkvar	_vterm @ sp[(0)+-1]
  9580  01928E  0EFF               	movlw	-1
  9581  019290  50E3               	movf	plusw1,w,c
  9582  019292  0D78               	mullw	120
  9583  019294  0EFF               	movlw	low _D
  9584  019296  6E32               	movwf	(btemp+10)^0,c
  9585  019298  0E07               	movlw	high _D
  9586  01929A  6E33               	movwf	(btemp+11)^0,c
  9587  01929C  0E28               	movlw	40
  9588  01929E  2632               	addwf	(btemp+10)^0,f,c
  9589  0192A0  0E00               	movlw	0
  9590  0192A2  2233               	addwfc	(btemp+11)^0,f,c
  9591  0192A4  50F3               	movf	243,w,c
  9592  0192A6  2632               	addwf	(btemp+10)^0,f,c
  9593  0192A8  50F4               	movf	244,w,c
  9594  0192AA  2233               	addwfc	(btemp+11)^0,f,c
  9595  0192AC  0060  F0CB  FFE6   	movff	btemp+10,postinc1
  9596  0192B2  0060  F0CF  FFE6   	movff	btemp+11,postinc1
  9597  0192B8  0E00               	movlw	0
  9598  0192BA  6EE6               	movwf	postinc1,c
  9599  0192BC  0E01               	movlw	1
  9600  0192BE  6EE6               	movwf	postinc1,c
  9601  0192C0  EC1E  F0D7         	call	_eaDogM_WriteStringAtPos	;wreg free
  9602                           
  9603                           ; BSR set to: 59
  9604                           ;mconfig.c: 99:  wait_lcd_done();
  9605  0192C4  EC94  F0DA         	call	_wait_lcd_done	;wreg free
  9606                           
  9607                           ; BSR set to: 0
  9608                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
  9609                           ;stkvar	_vterm @ sp[(0)+-1]
  9610  0192C8  0EFF               	movlw	-1
  9611  0192CA  50E3               	movf	plusw1,w,c
  9612  0192CC  0D78               	mullw	120
  9613  0192CE  0EFF               	movlw	low _D
  9614  0192D0  6E32               	movwf	(btemp+10)^0,c
  9615  0192D2  0E07               	movlw	high _D
  9616  0192D4  6E33               	movwf	(btemp+11)^0,c
  9617  0192D6  0E50               	movlw	80
  9618  0192D8  2632               	addwf	(btemp+10)^0,f,c
  9619  0192DA  0E00               	movlw	0
  9620  0192DC  2233               	addwfc	(btemp+11)^0,f,c
  9621  0192DE  50F3               	movf	243,w,c
  9622  0192E0  2632               	addwf	(btemp+10)^0,f,c
  9623  0192E2  50F4               	movf	244,w,c
  9624  0192E4  2233               	addwfc	(btemp+11)^0,f,c
  9625  0192E6  0060  F0CB  FFE6   	movff	btemp+10,postinc1
  9626  0192EC  0060  F0CF  FFE6   	movff	btemp+11,postinc1
  9627  0192F2  0E00               	movlw	0
  9628  0192F4  6EE6               	movwf	postinc1,c
  9629  0192F6  0E02               	movlw	2
  9630  0192F8  6EE6               	movwf	postinc1,c
  9631  0192FA  EC1E  F0D7         	call	_eaDogM_WriteStringAtPos	;wreg free
  9632  0192FE                     l1672:
  9633                           
  9634                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  9635  0192FE  52E5               	movf	postdec1,f,c
  9636  019300  0012               	return		;funcret
  9637  019302                     __end_of_update_lcd:
  9638                           	opt callstack 0
  9639                           
  9640 ;; *************** function _eaDogM_WriteStringAtPos *****************
  9641 ;; Defined at:
  9642 ;;		line 278 in file "eadog.c"
  9643 ;; Parameters:    Size  Location     Type
  9644 ;;  r               1  [STACK] const unsigned char 
  9645 ;;  c               1  [STACK] const unsigned char 
  9646 ;;  strPtr          2  [STACK] PTR unsigned char 
  9647 ;;		 -> D.lcd(480), D(482), V(189), 
  9648 ;; Auto vars:     Size  Location     Type
  9649 ;;		None
  9650 ;; Return value:  Size  Location     Type
  9651 ;;                  1  [STACK] void 
  9652 ;; Registers used:
  9653 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9654 ;; Tracked objects:
  9655 ;;		On entry : 3F/0
  9656 ;;		On exit  : 3F/3B
  9657 ;;		Unchanged: 0/0
  9658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9663 ;;Total ram usage:        0 bytes
  9664 ;; Hardware stack levels used:    1
  9665 ;; Hardware stack levels required when called:   25
  9666 ;; This function calls:
  9667 ;;		_eaDogM_WriteString
  9668 ;;		_send_lcd_cmd_dma
  9669 ;; This function is called by:
  9670 ;;		_update_lcd
  9671 ;;		_vterm_dump
  9672 ;; This function uses a reentrant model
  9673 ;;
  9674                           
  9675                           	psect	text34
  9676  01AE3C                     __ptext34:
  9677                           	opt callstack 0
  9678  01AE3C                     _eaDogM_WriteStringAtPos:
  9679                           	opt callstack 4
  9680                           
  9681                           ;eadog.c: 278: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 279: {;eadog.c: 280:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  9682                           ;stkvar	_c @ sp[(0)+-2]
  9683                           
  9684                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9685                           ;incstack = 0
  9686  01AE3C  0EFE               	movlw	-2
  9687  01AE3E  006F FF8C  F033    	movff	plusw1,btemp+11
  9688                           
  9689                           ;stkvar	_r @ sp[(0)+-1]
  9690  01AE44  0EFF               	movlw	-1
  9691  01AE46  50E3               	movf	plusw1,w,c
  9692  01AE48  0D10               	mullw	16
  9693  01AE4A  50F3               	movf	243,w,c
  9694  01AE4C  2433               	addwf	(btemp+11)^0,w,c
  9695  01AE4E  0F80               	addlw	128
  9696  01AE50  6EE6               	movwf	postinc1,c
  9697  01AE52  EC33  F0D4         	call	_send_lcd_cmd_dma	;wreg free
  9698                           
  9699                           ;eadog.c: 281:  eaDogM_WriteString(strPtr);
  9700                           ;stkvar	_strPtr @ sp[(0)+-4]
  9701  01AE56  0EFC               	movlw	-4
  9702  01AE58  006F FF8F FFE6     	movff	plusw1,postinc1
  9703  01AE5E  006F FF8F FFE6     	movff	plusw1,postinc1
  9704  01AE64  ECFB  F0CE         	call	_eaDogM_WriteString	;wreg free
  9705                           
  9706                           ; BSR set to: 59
  9707                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
  9708  01AE68  52E5               	movf	postdec1,f,c
  9709  01AE6A  52E5               	movf	postdec1,f,c
  9710  01AE6C  52E5               	movf	postdec1,f,c
  9711  01AE6E  52E5               	movf	postdec1,f,c
  9712  01AE70  0012               	return		;funcret
  9713  01AE72                     __end_of_eaDogM_WriteStringAtPos:
  9714                           	opt callstack 0
  9715                           
  9716 ;; *************** function _send_lcd_cmd_dma *****************
  9717 ;; Defined at:
  9718 ;;		line 220 in file "eadog.c"
  9719 ;; Parameters:    Size  Location     Type
  9720 ;;  strPtr          1  [STACK] unsigned char 
  9721 ;; Auto vars:     Size  Location     Type
  9722 ;;		None
  9723 ;; Return value:  Size  Location     Type
  9724 ;;                  1  [STACK] void 
  9725 ;; Registers used:
  9726 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9727 ;; Tracked objects:
  9728 ;;		On entry : 0/3D
  9729 ;;		On exit  : 3F/0
  9730 ;;		Unchanged: 0/0
  9731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9735 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9736 ;;Total ram usage:        0 bytes
  9737 ;; Hardware stack levels used:    1
  9738 ;; Hardware stack levels required when called:   24
  9739 ;; This function calls:
  9740 ;;		_printf
  9741 ;;		_ringBufS_flush
  9742 ;;		_start_lcd
  9743 ;;		_wait_lcd_done
  9744 ;;		_wait_lcd_set
  9745 ;; This function is called by:
  9746 ;;		_eaDogM_WriteCommand
  9747 ;;		_eaDogM_WriteStringAtPos
  9748 ;; This function uses a reentrant model
  9749 ;;
  9750                           
  9751                           	psect	text35
  9752  01A866                     __ptext35:
  9753                           	opt callstack 0
  9754  01A866                     _send_lcd_cmd_dma:
  9755                           	opt callstack 4
  9756                           
  9757                           ;eadog.c: 220: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 221: {;eadog.c: 223:  wait
      +                          _lcd_set();
  9758                           
  9759                           ; BSR set to: 59
  9760                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9761                           ;incstack = 0
  9762  01A866  EC80  F0DB         	call	_wait_lcd_set	;wreg free
  9763                           
  9764                           ; BSR set to: 0
  9765                           ;eadog.c: 225:  ringBufS_flush(spi_link.tx1a, 0);
  9766  01A86A  0E00               	movlw	0
  9767  01A86C  6EE6               	movwf	postinc1,c
  9768  01A86E  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
  9769  01A874  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
  9770  01A87A  EC7E  F0D0         	call	_ringBufS_flush	;wreg free
  9771  01A87E  92BC               	bcf	188,1,c	;volatile
  9772  01A880  94BC               	bcf	188,2,c	;volatile
  9773                           
  9774                           ;eadog.c: 228:  DMA1CON0bits.EN = 0;
  9775  01A882  013B               	movlb	59	; () banked
  9776  01A884  9FFC               	bcf	252,7,b	;volatile
  9777                           
  9778                           ; BSR set to: 59
  9779                           ;eadog.c: 229:  DMA1SSZ = 1;
  9780  01A886  0E00               	movlw	0
  9781  01A888  6FF8               	movwf	248,b	;volatile
  9782  01A88A  0E01               	movlw	1
  9783  01A88C  6FF7               	movwf	247,b	;volatile
  9784                           
  9785                           ; BSR set to: 59
  9786                           ;eadog.c: 230:  DMA1CON0bits.EN = 1;
  9787  01A88E  8FFC               	bsf	252,7,b	;volatile
  9788                           
  9789                           ; BSR set to: 59
  9790                           ;eadog.c: 231:  printf("%c", strPtr);
  9791                           ;stkvar	_strPtr @ sp[(0)+-1]
  9792  01A890  0EFF               	movlw	-1
  9793  01A892  50E3               	movf	plusw1,w,c
  9794  01A894  6EE6               	movwf	postinc1,c
  9795  01A896  0E00               	movlw	0
  9796  01A898  6EE6               	movwf	postinc1,c
  9797  01A89A  0EF8               	movlw	low STR_44
  9798  01A89C  6EE6               	movwf	postinc1,c
  9799  01A89E  0EFF               	movlw	high STR_44
  9800  01A8A0  6EE6               	movwf	postinc1,c
  9801  01A8A2  0E04               	movlw	4
  9802  01A8A4  6EE6               	movwf	postinc1,c
  9803  01A8A6  EC1A  F0D3         	call	_printf	;wreg free
  9804                           
  9805                           ; BSR set to: 0
  9806                           ;eadog.c: 232:  start_lcd();
  9807  01A8AA  EC83  F0DB         	call	_start_lcd	;wreg free
  9808                           
  9809                           ; BSR set to: 59
  9810                           ;eadog.c: 233:  wait_lcd_done();
  9811  01A8AE  EC94  F0DA         	call	_wait_lcd_done	;wreg free
  9812                           
  9813                           ; BSR set to: 0
  9814  01A8B2  82BC               	bsf	188,1,c	;volatile
  9815                           
  9816                           ; BSR set to: 0
  9817                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  9818  01A8B4  52E5               	movf	postdec1,f,c
  9819  01A8B6  0012               	return		;funcret
  9820  01A8B8                     __end_of_send_lcd_cmd_dma:
  9821                           	opt callstack 0
  9822                           
  9823 ;; *************** function _wait_lcd_done *****************
  9824 ;; Defined at:
  9825 ;;		line 156 in file "eadog.c"
  9826 ;; Parameters:    Size  Location     Type
  9827 ;;		None
  9828 ;; Auto vars:     Size  Location     Type
  9829 ;;		None
  9830 ;; Return value:  Size  Location     Type
  9831 ;;                  1  [STACK] void 
  9832 ;; Registers used:
  9833 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  9834 ;; Tracked objects:
  9835 ;;		On entry : 0/0
  9836 ;;		On exit  : 3F/0
  9837 ;;		Unchanged: 0/0
  9838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9843 ;;Total ram usage:        0 bytes
  9844 ;; Hardware stack levels used:    1
  9845 ;; Hardware stack levels required when called:   16
  9846 ;; This function calls:
  9847 ;;		_wdtdelay
  9848 ;; This function is called by:
  9849 ;;		_send_lcd_cmd_dma
  9850 ;;		_update_lcd
  9851 ;;		_vterm_dump
  9852 ;; This function uses a reentrant model
  9853 ;;
  9854                           
  9855                           	psect	text36
  9856  01B528                     __ptext36:
  9857                           	opt callstack 0
  9858  01B528                     _wait_lcd_done:
  9859                           	opt callstack 13
  9860                           
  9861                           ;eadog.c: 158:  while (spi_link.LCD_DATA);
  9862                           
  9863                           ; BSR set to: 0
  9864                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9865                           ;incstack = 0
  9866  01B528  0100               	movlb	0	; () banked
  9867  01B52A  B760               	btfsc	_spi_link& (0+255),3,b	;volatile
  9868  01B52C  D7FD               	goto	_wait_lcd_done
  9869                           
  9870                           ; BSR set to: 0
  9871                           ;eadog.c: 159:  wdtdelay(50);
  9872  01B52E  0E32               	movlw	50
  9873  01B530  6EE6               	movwf	postinc1,c
  9874  01B532  0E00               	movlw	0
  9875  01B534  6EE6               	movwf	postinc1,c
  9876  01B536  0E00               	movlw	0
  9877  01B538  6EE6               	movwf	postinc1,c
  9878  01B53A  0E00               	movlw	0
  9879  01B53C  6EE6               	movwf	postinc1,c
  9880  01B53E  ECAB  F0D3         	call	_wdtdelay	;wreg free
  9881                           
  9882                           ; BSR set to: 0
  9883                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  9884  01B542  0012               	return		;funcret
  9885  01B544                     __end_of_wait_lcd_done:
  9886                           	opt callstack 0
  9887                           
  9888 ;; *************** function _wdtdelay *****************
  9889 ;; Defined at:
  9890 ;;		line 23 in file "eadog.c"
  9891 ;; Parameters:    Size  Location     Type
  9892 ;;  delay           4  [STACK] const unsigned long 
  9893 ;; Auto vars:     Size  Location     Type
  9894 ;;		None
  9895 ;; Return value:  Size  Location     Type
  9896 ;;                  1  [STACK] void 
  9897 ;; Registers used:
  9898 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  9899 ;; Tracked objects:
  9900 ;;		On entry : 0/0
  9901 ;;		On exit  : 3F/0
  9902 ;;		Unchanged: 0/0
  9903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9907 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9908 ;;Total ram usage:        0 bytes
  9909 ;; Hardware stack levels used:    1
  9910 ;; Hardware stack levels required when called:   15
  9911 ;; This function calls:
  9912 ;;		Nothing
  9913 ;; This function is called by:
  9914 ;;		_init_display
  9915 ;;		_send_lcd_cmd
  9916 ;;		_send_lcd_cmd_long
  9917 ;;		_wait_lcd_done
  9918 ;; This function uses a reentrant model
  9919 ;;
  9920                           
  9921                           	psect	text37
  9922  01A756                     __ptext37:
  9923                           	opt callstack 0
  9924  01A756                     _wdtdelay:
  9925                           	opt callstack 13
  9926                           
  9927                           ;eadog.c: 23: void wdtdelay(const uint32_t delay);eadog.c: 24: {;eadog.c: 25:  static ui
      +                          nt32_t dcount;;eadog.c: 27:  for (dcount = 0; dcount <= delay; dcount++) {
  9928                           
  9929                           ; BSR set to: 0
  9930                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9931                           ;incstack = 0
  9932  01A756  0100               	movlb	0	; () banked
  9933  01A758  6B9A               	clrf	wdtdelay@dcount& (0+255),b
  9934  01A75A  6B9B               	clrf	(wdtdelay@dcount+1)& (0+255),b
  9935  01A75C  6B9C               	clrf	(wdtdelay@dcount+2)& (0+255),b
  9936  01A75E  6B9D               	clrf	(wdtdelay@dcount+3)& (0+255),b
  9937  01A760                     l1437:
  9938                           
  9939                           ; BSR set to: 0
  9940                           ;eadog.c: 28:   __nop();
  9941  01A760  F000               	nop	
  9942  01A762  0004               	clrwdt		;# 
  9943                           
  9944                           ;eadog.c: 30:  };
  9945  01A764  0E01               	movlw	1
  9946  01A766  0100               	movlb	0	; () banked
  9947  01A768  279A               	addwf	wdtdelay@dcount& (0+255),f,b
  9948  01A76A  0E00               	movlw	0
  9949  01A76C  239B               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  9950  01A76E  239C               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  9951  01A770  239D               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  9952                           
  9953                           ; BSR set to: 0
  9954                           ;stkvar	_delay @ sp[(0)+-4]
  9955  01A772  0EFC               	movlw	-4
  9956  01A774  006F FF8C  F028    	movff	plusw1,btemp
  9957  01A77A  519A               	movf	wdtdelay@dcount& (0+255),w,b
  9958  01A77C  5C28               	subwf	btemp^0,w,c
  9959  01A77E  0EFD               	movlw	-3
  9960  01A780  006F FF8C  F028    	movff	plusw1,btemp
  9961  01A786  519B               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  9962  01A788  5828               	subwfb	btemp^0,w,c
  9963  01A78A  0EFE               	movlw	-2
  9964  01A78C  006F FF8C  F028    	movff	plusw1,btemp
  9965  01A792  519C               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  9966  01A794  5828               	subwfb	btemp^0,w,c
  9967  01A796  0EFF               	movlw	-1
  9968  01A798  006F FF8C  F028    	movff	plusw1,btemp
  9969  01A79E  519D               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  9970  01A7A0  5828               	subwfb	btemp^0,w,c
  9971  01A7A2  B0D8               	btfsc	status,0,c
  9972  01A7A4  D7DD               	goto	l1437
  9973                           
  9974                           ; BSR set to: 0
  9975                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  9976  01A7A6  52E5               	movf	postdec1,f,c
  9977  01A7A8  52E5               	movf	postdec1,f,c
  9978  01A7AA  52E5               	movf	postdec1,f,c
  9979  01A7AC  52E5               	movf	postdec1,f,c
  9980  01A7AE  0012               	return		;funcret
  9981  01A7B0                     __end_of_wdtdelay:
  9982                           	opt callstack 0
  9983                           
  9984 ;; *************** function _eaDogM_WriteString *****************
  9985 ;; Defined at:
  9986 ;;		line 199 in file "eadog.c"
  9987 ;; Parameters:    Size  Location     Type
  9988 ;;  strPtr          2  [STACK] PTR unsigned char 
  9989 ;;		 -> D.lcd(480), D(482), V(189), 
  9990 ;; Auto vars:     Size  Location     Type
  9991 ;;		None
  9992 ;; Return value:  Size  Location     Type
  9993 ;;                  1  [STACK] void 
  9994 ;; Registers used:
  9995 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9996 ;; Tracked objects:
  9997 ;;		On entry : 3F/0
  9998 ;;		On exit  : 3F/3B
  9999 ;;		Unchanged: 0/0
 10000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10005 ;;Total ram usage:        0 bytes
 10006 ;; Hardware stack levels used:    1
 10007 ;; Hardware stack levels required when called:   24
 10008 ;; This function calls:
 10009 ;;		_printf
 10010 ;;		_ringBufS_flush
 10011 ;;		_start_lcd
 10012 ;;		_strlen
 10013 ;;		_wait_lcd_set
 10014 ;; This function is called by:
 10015 ;;		_eaDogM_WriteStringAtPos
 10016 ;; This function uses a reentrant model
 10017 ;;
 10018                           
 10019                           	psect	text38
 10020  019DF6                     __ptext38:
 10021                           	opt callstack 0
 10022  019DF6                     _eaDogM_WriteString:
 10023                           	opt callstack 4
 10024                           
 10025                           ;eadog.c: 199: void eaDogM_WriteString(char *strPtr);eadog.c: 200: {;eadog.c: 202:  wait
      +                          _lcd_set();
 10026                           
 10027                           ; BSR set to: 0
 10028                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10029                           ;incstack = 0
 10030  019DF6  EC80  F0DB         	call	_wait_lcd_set	;wreg free
 10031                           
 10032                           ; BSR set to: 0
 10033                           ;eadog.c: 204:  ringBufS_flush(spi_link.tx1a, 0);
 10034  019DFA  0E00               	movlw	0
 10035  019DFC  6EE6               	movwf	postinc1,c
 10036  019DFE  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 10037  019E04  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 10038  019E0A  EC7E  F0D0         	call	_ringBufS_flush	;wreg free
 10039  019E0E  94BC               	bcf	188,2,c	;volatile
 10040                           
 10041                           ;eadog.c: 206:  if (strlen(strPtr) > 64) strPtr[64] = 0;
 10042                           ;stkvar	_strPtr @ sp[(0)+-2]
 10043  019E10  0EFE               	movlw	-2
 10044  019E12  006F FF8F FFE6     	movff	plusw1,postinc1
 10045  019E18  006F FF8F FFE6     	movff	plusw1,postinc1
 10046  019E1E  EC4E  F0CF         	call	_strlen	;wreg free
 10047  019E22  5029               	movf	(btemp+1)^0,w,c
 10048  019E24  E104               	bnz	u11840
 10049  019E26  0E41               	movlw	65
 10050  019E28  5C28               	subwf	btemp^0,w,c
 10051  019E2A  A0D8               	btfss	status,0,c
 10052  019E2C  D010               	goto	l12276
 10053  019E2E                     u11840:
 10054                           
 10055                           ;stkvar	_strPtr @ sp[(0)+-2]
 10056  019E2E  0EFE               	movlw	-2
 10057  019E30  006F FF8C  F032    	movff	plusw1,btemp+10
 10058  019E36  0EFF               	movlw	-1
 10059  019E38  006F FF8C  F033    	movff	plusw1,btemp+11
 10060  019E3E  0E40               	movlw	64
 10061  019E40  2432               	addwf	(btemp+10)^0,w,c
 10062  019E42  6ED9               	movwf	fsr2l,c
 10063  019E44  0E00               	movlw	0
 10064  019E46  2033               	addwfc	(btemp+11)^0,w,c
 10065  019E48  6EDA               	movwf	fsr2h,c
 10066  019E4A  0E00               	movlw	0
 10067  019E4C  6EDF               	movwf	indf2,c
 10068  019E4E                     l12276:
 10069                           
 10070                           ;eadog.c: 207:  DMA1CON0bits.EN = 0;
 10071  019E4E  013B               	movlb	59	; () banked
 10072  019E50  9FFC               	bcf	252,7,b	;volatile
 10073                           
 10074                           ; BSR set to: 59
 10075                           ;eadog.c: 208:  DMA1SSZ = strlen(strPtr);
 10076                           ;stkvar	_strPtr @ sp[(0)+-2]
 10077  019E52  0EFE               	movlw	-2
 10078  019E54  006F FF8F FFE6     	movff	plusw1,postinc1
 10079  019E5A  006F FF8F FFE6     	movff	plusw1,postinc1
 10080  019E60  EC4E  F0CF         	call	_strlen	;wreg free
 10081  019E64  0060  F0A3  FBF7   	movff	btemp,15351	;volatile
 10082  019E6A  0060  F0A7  FBF8   	movff	btemp+1,15352	;volatile
 10083                           
 10084                           ;eadog.c: 209:  DMA1CON0bits.EN = 1;
 10085  019E70  013B               	movlb	59	; () banked
 10086  019E72  8FFC               	bsf	252,7,b	;volatile
 10087                           
 10088                           ; BSR set to: 59
 10089                           ;eadog.c: 210:  printf("%s", strPtr);
 10090                           ;stkvar	_strPtr @ sp[(0)+-2]
 10091  019E74  0EFE               	movlw	-2
 10092  019E76  006F FF8F FFE6     	movff	plusw1,postinc1
 10093  019E7C  006F FF8F FFE6     	movff	plusw1,postinc1
 10094  019E82  0EFB               	movlw	low STR_43
 10095  019E84  6EE6               	movwf	postinc1,c
 10096  019E86  0EFF               	movlw	high STR_43
 10097  019E88  6EE6               	movwf	postinc1,c
 10098  019E8A  0E04               	movlw	4
 10099  019E8C  6EE6               	movwf	postinc1,c
 10100  019E8E  EC1A  F0D3         	call	_printf	;wreg free
 10101                           
 10102                           ; BSR set to: 0
 10103                           ;eadog.c: 211:  start_lcd();
 10104  019E92  EC83  F0DB         	call	_start_lcd	;wreg free
 10105                           
 10106                           ; BSR set to: 59
 10107                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 10108  019E96  52E5               	movf	postdec1,f,c
 10109  019E98  52E5               	movf	postdec1,f,c
 10110  019E9A  0012               	return		;funcret
 10111  019E9C                     __end_of_eaDogM_WriteString:
 10112                           	opt callstack 0
 10113                           
 10114 ;; *************** function _wait_lcd_set *****************
 10115 ;; Defined at:
 10116 ;;		line 146 in file "eadog.c"
 10117 ;; Parameters:    Size  Location     Type
 10118 ;;		None
 10119 ;; Auto vars:     Size  Location     Type
 10120 ;;		None
 10121 ;; Return value:  Size  Location     Type
 10122 ;;                  1  [STACK] void 
 10123 ;; Registers used:
 10124 ;;		None
 10125 ;; Tracked objects:
 10126 ;;		On entry : 0/3D
 10127 ;;		On exit  : 3F/0
 10128 ;;		Unchanged: 0/0
 10129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10134 ;;Total ram usage:        0 bytes
 10135 ;; Hardware stack levels used:    1
 10136 ;; Hardware stack levels required when called:   15
 10137 ;; This function calls:
 10138 ;;		Nothing
 10139 ;; This function is called by:
 10140 ;;		_eaDogM_WriteString
 10141 ;;		_send_lcd_cmd_dma
 10142 ;; This function uses a reentrant model
 10143 ;;
 10144                           
 10145                           	psect	text39
 10146  01B700                     __ptext39:
 10147                           	opt callstack 0
 10148  01B700                     _wait_lcd_set:
 10149                           	opt callstack 12
 10150                           
 10151                           ;eadog.c: 148:  spi_link.LCD_DATA = 1;
 10152                           
 10153                           ; BSR set to: 59
 10154                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10155                           ;incstack = 0
 10156  01B700  0100               	movlb	0	; () banked
 10157  01B702  8760               	bsf	_spi_link& (0+255),3,b	;volatile
 10158                           
 10159                           ; BSR set to: 0
 10160                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 10161  01B704  0012               	return		;funcret
 10162  01B706                     __end_of_wait_lcd_set:
 10163                           	opt callstack 0
 10164                           
 10165 ;; *************** function _start_lcd *****************
 10166 ;; Defined at:
 10167 ;;		line 141 in file "eadog.c"
 10168 ;; Parameters:    Size  Location     Type
 10169 ;;		None
 10170 ;; Auto vars:     Size  Location     Type
 10171 ;;		None
 10172 ;; Return value:  Size  Location     Type
 10173 ;;                  1  [STACK] void 
 10174 ;; Registers used:
 10175 ;;		None
 10176 ;; Tracked objects:
 10177 ;;		On entry : 3F/0
 10178 ;;		On exit  : 3F/3B
 10179 ;;		Unchanged: 0/0
 10180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10185 ;;Total ram usage:        0 bytes
 10186 ;; Hardware stack levels used:    1
 10187 ;; Hardware stack levels required when called:   15
 10188 ;; This function calls:
 10189 ;;		Nothing
 10190 ;; This function is called by:
 10191 ;;		_eaDogM_WriteString
 10192 ;;		_send_lcd_cmd_dma
 10193 ;; This function uses a reentrant model
 10194 ;;
 10195                           
 10196                           	psect	text40
 10197  01B706                     __ptext40:
 10198                           	opt callstack 0
 10199  01B706                     _start_lcd:
 10200                           	opt callstack 12
 10201                           
 10202                           ;eadog.c: 143:  DMA1CON0bits.DMA1SIRQEN = 1;
 10203                           
 10204                           ; BSR set to: 0
 10205                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10206                           ;incstack = 0
 10207  01B706  013B               	movlb	59	; () banked
 10208  01B708  8DFC               	bsf	252,6,b	;volatile
 10209                           
 10210                           ; BSR set to: 59
 10211                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 10212  01B70A  0012               	return		;funcret
 10213  01B70C                     __end_of_start_lcd:
 10214                           	opt callstack 0
 10215                           
 10216 ;; *************** function _ringBufS_flush *****************
 10217 ;; Defined at:
 10218 ;;		line 76 in file "ringbufs.c"
 10219 ;; Parameters:    Size  Location     Type
 10220 ;;  _this           2  [STACK] PTR struct ringBufS_t
 10221 ;;		 -> ring_buf1(67), 
 10222 ;;  clearBuffer     1  [STACK] const char 
 10223 ;; Auto vars:     Size  Location     Type
 10224 ;;		None
 10225 ;; Return value:  Size  Location     Type
 10226 ;;                  1  [STACK] void 
 10227 ;; Registers used:
 10228 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 10229 ;; Tracked objects:
 10230 ;;		On entry : 3F/0
 10231 ;;		On exit  : 0/0
 10232 ;;		Unchanged: 0/0
 10233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10237 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10238 ;;Total ram usage:        0 bytes
 10239 ;; Hardware stack levels used:    1
 10240 ;; Hardware stack levels required when called:   16
 10241 ;; This function calls:
 10242 ;;		_memset
 10243 ;; This function is called by:
 10244 ;;		_eaDogM_WriteString
 10245 ;;		_send_lcd_cmd_dma
 10246 ;; This function uses a reentrant model
 10247 ;;
 10248                           
 10249                           	psect	text41
 10250  01A0FC                     __ptext41:
 10251                           	opt callstack 0
 10252  01A0FC                     _ringBufS_flush:
 10253                           	opt callstack 11
 10254                           
 10255                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
 10256                           ;stkvar	__this @ sp[(0)+-2]
 10257                           
 10258                           ; BSR set to: 59
 10259                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10260                           ;incstack = 0
 10261  01A0FC  0EFE               	movlw	-2
 10262  01A0FE  006F FF8C  F032    	movff	plusw1,btemp+10
 10263  01A104  0EFF               	movlw	-1
 10264  01A106  006F FF8C  F033    	movff	plusw1,btemp+11
 10265  01A10C  0E42               	movlw	66
 10266  01A10E  2432               	addwf	(btemp+10)^0,w,c
 10267  01A110  6ED9               	movwf	fsr2l,c
 10268  01A112  0E00               	movlw	0
 10269  01A114  2033               	addwfc	(btemp+11)^0,w,c
 10270  01A116  6EDA               	movwf	fsr2h,c
 10271  01A118  0E00               	movlw	0
 10272  01A11A  6EDF               	movwf	indf2,c
 10273                           
 10274                           ;ringbufs.c: 79:  _this->head = 0;
 10275                           ;stkvar	__this @ sp[(0)+-2]
 10276  01A11C  0EFE               	movlw	-2
 10277  01A11E  006F FF8C  F032    	movff	plusw1,btemp+10
 10278  01A124  0EFF               	movlw	-1
 10279  01A126  006F FF8C  F033    	movff	plusw1,btemp+11
 10280  01A12C  0E40               	movlw	64
 10281  01A12E  2432               	addwf	(btemp+10)^0,w,c
 10282  01A130  6ED9               	movwf	fsr2l,c
 10283  01A132  0E00               	movlw	0
 10284  01A134  2033               	addwfc	(btemp+11)^0,w,c
 10285  01A136  6EDA               	movwf	fsr2h,c
 10286  01A138  0E00               	movlw	0
 10287  01A13A  6EDF               	movwf	indf2,c
 10288                           
 10289                           ;ringbufs.c: 80:  _this->tail = 0;
 10290                           ;stkvar	__this @ sp[(0)+-2]
 10291  01A13C  0EFE               	movlw	-2
 10292  01A13E  006F FF8C  F032    	movff	plusw1,btemp+10
 10293  01A144  0EFF               	movlw	-1
 10294  01A146  006F FF8C  F033    	movff	plusw1,btemp+11
 10295  01A14C  0E41               	movlw	65
 10296  01A14E  2432               	addwf	(btemp+10)^0,w,c
 10297  01A150  6ED9               	movwf	fsr2l,c
 10298  01A152  0E00               	movlw	0
 10299  01A154  2033               	addwfc	(btemp+11)^0,w,c
 10300  01A156  6EDA               	movwf	fsr2h,c
 10301  01A158  0E00               	movlw	0
 10302  01A15A  6EDF               	movwf	indf2,c
 10303                           
 10304                           ;ringbufs.c: 81:  if (clearBuffer) {
 10305                           ;stkvar	_clearBuffer @ sp[(0)+-3]
 10306  01A15C  0EFD               	movlw	-3
 10307  01A15E  50E3               	movf	plusw1,w,c
 10308  01A160  B4D8               	btfsc	status,2,c
 10309  01A162  D011               	goto	l1581
 10310                           
 10311                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
 10312  01A164  0E40               	movlw	64
 10313  01A166  6EE6               	movwf	postinc1,c
 10314  01A168  0E00               	movlw	0
 10315  01A16A  6EE6               	movwf	postinc1,c
 10316  01A16C  0E00               	movlw	0
 10317  01A16E  6EE6               	movwf	postinc1,c
 10318  01A170  0E00               	movlw	0
 10319  01A172  6EE6               	movwf	postinc1,c
 10320                           
 10321                           ;stkvar	__this @ sp[(-4)+-2]
 10322  01A174  0EFA               	movlw	-6
 10323  01A176  006F FF8F FFE6     	movff	plusw1,postinc1
 10324  01A17C  006F FF8F FFE6     	movff	plusw1,postinc1
 10325  01A182  ECF2  F0B2         	call	_memset	;wreg free
 10326  01A186                     l1581:
 10327                           
 10328                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
 10329  01A186  52E5               	movf	postdec1,f,c
 10330  01A188  52E5               	movf	postdec1,f,c
 10331  01A18A  52E5               	movf	postdec1,f,c
 10332  01A18C  0012               	return		;funcret
 10333  01A18E                     __end_of_ringBufS_flush:
 10334                           	opt callstack 0
 10335                           
 10336 ;; *************** function _memset *****************
 10337 ;; Defined at:
 10338 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
 10339 ;; Parameters:    Size  Location     Type
 10340 ;;  dest            2  [STACK] PTR void 
 10341 ;;		 -> ring_buf2(67), ring_buf1(67), 
 10342 ;;  c               2  [STACK] int 
 10343 ;;  n               2  [STACK] unsigned int 
 10344 ;; Auto vars:     Size  Location     Type
 10345 ;;  s               2  [STACK] PTR unsigned char 
 10346 ;;		 -> ring_buf2(67), ring_buf1(67), 
 10347 ;;  k               2  [STACK] unsigned int 
 10348 ;; Return value:  Size  Location     Type
 10349 ;;                  2  [STACK] PTR void 
 10350 ;; Registers used:
 10351 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 10352 ;; Tracked objects:
 10353 ;;		On entry : 0/0
 10354 ;;		On exit  : 0/0
 10355 ;;		Unchanged: 0/0
 10356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10361 ;;Total ram usage:        0 bytes
 10362 ;; Hardware stack levels used:    1
 10363 ;; Hardware stack levels required when called:   15
 10364 ;; This function calls:
 10365 ;;		Nothing
 10366 ;; This function is called by:
 10367 ;;		_ringBufS_init
 10368 ;;		_ringBufS_flush
 10369 ;; This function uses a reentrant model
 10370 ;;
 10371                           
 10372                           	psect	text42
 10373  0165E4                     __ptext42:
 10374                           	opt callstack 0
 10375  0165E4                     _memset:
 10376                           	opt callstack 0
 10377                           
 10378                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10379  0165E4  52E6               	movf	postinc1,f,c
 10380  0165E6  52E6               	movf	postinc1,f,c
 10381  0165E8  52E6               	movf	postinc1,f,c
 10382  0165EA  52E6               	movf	postinc1,f,c
 10383                           
 10384                           ;stkvar	_dest @ sp[(-4)+-2]
 10385                           
 10386                           ;incstack = 0
 10387  0165EC  0EFA               	movlw	-6
 10388  0165EE  006F FF8C  F032    	movff	plusw1,btemp+10
 10389  0165F4  0EFB               	movlw	-5
 10390  0165F6  006F FF8C  F033    	movff	plusw1,btemp+11
 10391                           
 10392                           ;stkvar	_s @ sp[(-4)+0]
 10393  0165FC  0EFD               	movlw	-3
 10394  0165FE  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 10395  016604  0EFC               	movlw	-4
 10396  016606  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 10397                           
 10398                           ;stkvar	_n @ sp[(-4)+-6]
 10399  01660C  0EF6               	movlw	-10
 10400  01660E  006F FF8C  F028    	movff	plusw1,btemp
 10401  016614  0EF7               	movlw	-9
 10402  016616  50E3               	movf	plusw1,w,c
 10403  016618  1028               	iorwf	btemp^0,w,c
 10404  01661A  B4D8               	btfsc	status,2,c
 10405  01661C  D154               	goto	u10450
 10406                           
 10407                           ;stkvar	_c @ sp[(-4)+-4]
 10408                           ;stkvar	_s @ sp[(-4)+0]
 10409  01661E  0EFC               	movlw	-4
 10410  016620  006F FF8F FFD9     	movff	plusw1,fsr2l
 10411  016626  0EFD               	movlw	-3
 10412  016628  006F FF8F FFDA     	movff	plusw1,fsr2h
 10413  01662E  0EF8               	movlw	-8
 10414  016630  006F FF8F FFDF     	movff	plusw1,indf2
 10415                           
 10416                           ;stkvar	_c @ sp[(-4)+-4]
 10417                           ;stkvar	_n @ sp[(-4)+-6]
 10418                           ;stkvar	_s @ sp[(-4)+0]
 10419  016636  0EFC               	movlw	-4
 10420  016638  006F FF8C  F032    	movff	plusw1,btemp+10
 10421  01663E  0EFD               	movlw	-3
 10422  016640  006F FF8C  F033    	movff	plusw1,btemp+11
 10423  016646  0EF6               	movlw	-10
 10424  016648  50E3               	movf	plusw1,w,c
 10425  01664A  2632               	addwf	(btemp+10)^0,f,c
 10426  01664C  0EF7               	movlw	-9
 10427  01664E  50E3               	movf	plusw1,w,c
 10428  016650  2233               	addwfc	(btemp+11)^0,f,c
 10429  016652  0EFF               	movlw	255
 10430  016654  2432               	addwf	(btemp+10)^0,w,c
 10431  016656  6ED9               	movwf	fsr2l,c
 10432  016658  0EFF               	movlw	255
 10433  01665A  2033               	addwfc	(btemp+11)^0,w,c
 10434  01665C  6EDA               	movwf	fsr2h,c
 10435  01665E  0EF8               	movlw	-8
 10436  016660  006F FF8F FFDF     	movff	plusw1,indf2
 10437                           
 10438                           ;stkvar	_n @ sp[(-4)+-6]
 10439  016666  0EF7               	movlw	-9
 10440  016668  50E3               	movf	plusw1,w,c
 10441  01666A  E108               	bnz	l11448
 10442  01666C  0EF6               	movlw	-10
 10443  01666E  006F FF8C  F028    	movff	plusw1,btemp
 10444  016674  0E03               	movlw	3
 10445  016676  5E28               	subwf	btemp^0,f,c
 10446  016678  A0D8               	btfss	status,0,c
 10447  01667A  D125               	goto	u10450
 10448  01667C                     l11448:
 10449                           
 10450                           ;stkvar	_c @ sp[(-4)+-4]
 10451                           ;stkvar	_s @ sp[(-4)+0]
 10452  01667C  0EFC               	movlw	-4
 10453  01667E  006F FF8C  F032    	movff	plusw1,btemp+10
 10454  016684  0EFD               	movlw	-3
 10455  016686  006F FF8C  F033    	movff	plusw1,btemp+11
 10456  01668C  0E01               	movlw	1
 10457  01668E  2432               	addwf	(btemp+10)^0,w,c
 10458  016690  6ED9               	movwf	fsr2l,c
 10459  016692  0E00               	movlw	0
 10460  016694  2033               	addwfc	(btemp+11)^0,w,c
 10461  016696  6EDA               	movwf	fsr2h,c
 10462  016698  0EF8               	movlw	-8
 10463  01669A  006F FF8F FFDF     	movff	plusw1,indf2
 10464                           
 10465                           ;stkvar	_c @ sp[(-4)+-4]
 10466                           ;stkvar	_s @ sp[(-4)+0]
 10467  0166A0  0EFC               	movlw	-4
 10468  0166A2  006F FF8C  F032    	movff	plusw1,btemp+10
 10469  0166A8  0EFD               	movlw	-3
 10470  0166AA  006F FF8C  F033    	movff	plusw1,btemp+11
 10471  0166B0  0E02               	movlw	2
 10472  0166B2  2432               	addwf	(btemp+10)^0,w,c
 10473  0166B4  6ED9               	movwf	fsr2l,c
 10474  0166B6  0E00               	movlw	0
 10475  0166B8  2033               	addwfc	(btemp+11)^0,w,c
 10476  0166BA  6EDA               	movwf	fsr2h,c
 10477  0166BC  0EF8               	movlw	-8
 10478  0166BE  006F FF8F FFDF     	movff	plusw1,indf2
 10479                           
 10480                           ;stkvar	_c @ sp[(-4)+-4]
 10481                           ;stkvar	_n @ sp[(-4)+-6]
 10482                           ;stkvar	_s @ sp[(-4)+0]
 10483  0166C4  0EFC               	movlw	-4
 10484  0166C6  006F FF8C  F032    	movff	plusw1,btemp+10
 10485  0166CC  0EFD               	movlw	-3
 10486  0166CE  006F FF8C  F033    	movff	plusw1,btemp+11
 10487  0166D4  0EF6               	movlw	-10
 10488  0166D6  50E3               	movf	plusw1,w,c
 10489  0166D8  2632               	addwf	(btemp+10)^0,f,c
 10490  0166DA  0EF7               	movlw	-9
 10491  0166DC  50E3               	movf	plusw1,w,c
 10492  0166DE  2233               	addwfc	(btemp+11)^0,f,c
 10493  0166E0  0EFE               	movlw	254
 10494  0166E2  2432               	addwf	(btemp+10)^0,w,c
 10495  0166E4  6ED9               	movwf	fsr2l,c
 10496  0166E6  0EFF               	movlw	255
 10497  0166E8  2033               	addwfc	(btemp+11)^0,w,c
 10498  0166EA  6EDA               	movwf	fsr2h,c
 10499  0166EC  0EF8               	movlw	-8
 10500  0166EE  006F FF8F FFDF     	movff	plusw1,indf2
 10501                           
 10502                           ;stkvar	_c @ sp[(-4)+-4]
 10503                           ;stkvar	_n @ sp[(-4)+-6]
 10504                           ;stkvar	_s @ sp[(-4)+0]
 10505  0166F4  0EFC               	movlw	-4
 10506  0166F6  006F FF8C  F032    	movff	plusw1,btemp+10
 10507  0166FC  0EFD               	movlw	-3
 10508  0166FE  006F FF8C  F033    	movff	plusw1,btemp+11
 10509  016704  0EF6               	movlw	-10
 10510  016706  50E3               	movf	plusw1,w,c
 10511  016708  2632               	addwf	(btemp+10)^0,f,c
 10512  01670A  0EF7               	movlw	-9
 10513  01670C  50E3               	movf	plusw1,w,c
 10514  01670E  2233               	addwfc	(btemp+11)^0,f,c
 10515  016710  0EFD               	movlw	253
 10516  016712  2432               	addwf	(btemp+10)^0,w,c
 10517  016714  6ED9               	movwf	fsr2l,c
 10518  016716  0EFF               	movlw	255
 10519  016718  2033               	addwfc	(btemp+11)^0,w,c
 10520  01671A  6EDA               	movwf	fsr2h,c
 10521  01671C  0EF8               	movlw	-8
 10522  01671E  006F FF8F FFDF     	movff	plusw1,indf2
 10523                           
 10524                           ;stkvar	_n @ sp[(-4)+-6]
 10525  016724  0EF7               	movlw	-9
 10526  016726  50E3               	movf	plusw1,w,c
 10527  016728  E108               	bnz	l11454
 10528  01672A  0EF6               	movlw	-10
 10529  01672C  006F FF8C  F028    	movff	plusw1,btemp
 10530  016732  0E07               	movlw	7
 10531  016734  5E28               	subwf	btemp^0,f,c
 10532  016736  A0D8               	btfss	status,0,c
 10533  016738  D0C6               	goto	u10450
 10534  01673A                     l11454:
 10535                           
 10536                           ;stkvar	_c @ sp[(-4)+-4]
 10537                           ;stkvar	_s @ sp[(-4)+0]
 10538  01673A  0EFC               	movlw	-4
 10539  01673C  006F FF8C  F032    	movff	plusw1,btemp+10
 10540  016742  0EFD               	movlw	-3
 10541  016744  006F FF8C  F033    	movff	plusw1,btemp+11
 10542  01674A  0E03               	movlw	3
 10543  01674C  2432               	addwf	(btemp+10)^0,w,c
 10544  01674E  6ED9               	movwf	fsr2l,c
 10545  016750  0E00               	movlw	0
 10546  016752  2033               	addwfc	(btemp+11)^0,w,c
 10547  016754  6EDA               	movwf	fsr2h,c
 10548  016756  0EF8               	movlw	-8
 10549  016758  006F FF8F FFDF     	movff	plusw1,indf2
 10550                           
 10551                           ;stkvar	_c @ sp[(-4)+-4]
 10552                           ;stkvar	_n @ sp[(-4)+-6]
 10553                           ;stkvar	_s @ sp[(-4)+0]
 10554  01675E  0EFC               	movlw	-4
 10555  016760  006F FF8C  F032    	movff	plusw1,btemp+10
 10556  016766  0EFD               	movlw	-3
 10557  016768  006F FF8C  F033    	movff	plusw1,btemp+11
 10558  01676E  0EF6               	movlw	-10
 10559  016770  50E3               	movf	plusw1,w,c
 10560  016772  2632               	addwf	(btemp+10)^0,f,c
 10561  016774  0EF7               	movlw	-9
 10562  016776  50E3               	movf	plusw1,w,c
 10563  016778  2233               	addwfc	(btemp+11)^0,f,c
 10564  01677A  0EFC               	movlw	252
 10565  01677C  2432               	addwf	(btemp+10)^0,w,c
 10566  01677E  6ED9               	movwf	fsr2l,c
 10567  016780  0EFF               	movlw	255
 10568  016782  2033               	addwfc	(btemp+11)^0,w,c
 10569  016784  6EDA               	movwf	fsr2h,c
 10570  016786  0EF8               	movlw	-8
 10571  016788  006F FF8F FFDF     	movff	plusw1,indf2
 10572                           
 10573                           ;stkvar	_n @ sp[(-4)+-6]
 10574  01678E  0EF7               	movlw	-9
 10575  016790  50E3               	movf	plusw1,w,c
 10576  016792  E108               	bnz	l11460
 10577  016794  0EF6               	movlw	-10
 10578  016796  006F FF8C  F028    	movff	plusw1,btemp
 10579  01679C  0E09               	movlw	9
 10580  01679E  5E28               	subwf	btemp^0,f,c
 10581  0167A0  A0D8               	btfss	status,0,c
 10582  0167A2  D091               	goto	u10450
 10583  0167A4                     l11460:
 10584                           
 10585                           ;stkvar	_s @ sp[(-4)+0]
 10586  0167A4  0EFC               	movlw	-4
 10587  0167A6  006F FF8C  F032    	movff	plusw1,btemp+10
 10588  0167AC  1E32               	comf	(btemp+10)^0,f,c
 10589  0167AE  0EFD               	movlw	-3
 10590  0167B0  006F FF8C  F033    	movff	plusw1,btemp+11
 10591  0167B6  1E33               	comf	(btemp+11)^0,f,c
 10592  0167B8  2A32               	incf	(btemp+10)^0,f,c
 10593  0167BA  B4D8               	btfsc	status,2,c
 10594  0167BC  2A33               	incf	(btemp+11)^0,f,c
 10595  0167BE  0E03               	movlw	3
 10596  0167C0  1632               	andwf	(btemp+10)^0,f,c
 10597  0167C2  0E00               	movlw	0
 10598  0167C4  1633               	andwf	(btemp+11)^0,f,c
 10599                           
 10600                           ;stkvar	_k @ sp[(-4)+2]
 10601  0167C6  0EFE               	movlw	-2
 10602  0167C8  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 10603  0167CE  0EFF               	movlw	-1
 10604  0167D0  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 10605                           
 10606                           ;stkvar	_k @ sp[(-4)+2]
 10607                           ;stkvar	_s @ sp[(-4)+0]
 10608  0167D6  0EFC               	movlw	-4
 10609  0167D8  50E3               	movf	plusw1,w,c
 10610  0167DA  6E28               	movwf	btemp^0,c
 10611  0167DC  0EFE               	movlw	-2
 10612  0167DE  50E3               	movf	plusw1,w,c
 10613  0167E0  2628               	addwf	btemp^0,f,c
 10614  0167E2  0EFC               	movlw	-4
 10615  0167E4  0060  F0A3  FFE3   	movff	btemp,plusw1
 10616  0167EA  0EFD               	movlw	-3
 10617  0167EC  50E3               	movf	plusw1,w,c
 10618  0167EE  6E28               	movwf	btemp^0,c
 10619  0167F0  0EFF               	movlw	-1
 10620  0167F2  50E3               	movf	plusw1,w,c
 10621  0167F4  2228               	addwfc	btemp^0,f,c
 10622  0167F6  0EFD               	movlw	-3
 10623  0167F8  0060  F0A3  FFE3   	movff	btemp,plusw1
 10624                           
 10625                           ;stkvar	_k @ sp[(-4)+2]
 10626                           ;stkvar	_n @ sp[(-4)+-6]
 10627  0167FE  0EF6               	movlw	-10
 10628  016800  50E3               	movf	plusw1,w,c
 10629  016802  6E28               	movwf	btemp^0,c
 10630  016804  0EFE               	movlw	-2
 10631  016806  50E3               	movf	plusw1,w,c
 10632  016808  5E28               	subwf	btemp^0,f,c
 10633  01680A  0EF6               	movlw	-10
 10634  01680C  0060  F0A3  FFE3   	movff	btemp,plusw1
 10635  016812  0EF7               	movlw	-9
 10636  016814  50E3               	movf	plusw1,w,c
 10637  016816  6E28               	movwf	btemp^0,c
 10638  016818  0EFF               	movlw	-1
 10639  01681A  50E3               	movf	plusw1,w,c
 10640  01681C  5A28               	subwfb	btemp^0,f,c
 10641  01681E  0EF7               	movlw	-9
 10642  016820  0060  F0A3  FFE3   	movff	btemp,plusw1
 10643  016826  0EFC               	movlw	252
 10644  016828  6E32               	movwf	(btemp+10)^0,c
 10645  01682A  0EFF               	movlw	255
 10646  01682C  6E33               	movwf	(btemp+11)^0,c
 10647                           
 10648                           ;stkvar	_n @ sp[(-4)+-6]
 10649  01682E  0EF6               	movlw	-10
 10650  016830  006F FF8C  F028    	movff	plusw1,btemp
 10651  016836  5032               	movf	(btemp+10)^0,w,c
 10652  016838  1628               	andwf	btemp^0,f,c
 10653  01683A  0EF6               	movlw	-10
 10654  01683C  0060  F0A3  FFE3   	movff	btemp,plusw1
 10655  016842  0EF7               	movlw	-9
 10656  016844  006F FF8C  F028    	movff	plusw1,btemp
 10657  01684A  5033               	movf	(btemp+11)^0,w,c
 10658  01684C  1628               	andwf	btemp^0,f,c
 10659  01684E  0EF7               	movlw	-9
 10660  016850  D02E               	goto	L7
 10661  016852                     l11468:
 10662                           
 10663                           ;stkvar	_c @ sp[(-4)+-4]
 10664                           ;stkvar	_s @ sp[(-4)+0]
 10665  016852  0EFC               	movlw	-4
 10666  016854  006F FF8F FFD9     	movff	plusw1,fsr2l
 10667  01685A  0EFD               	movlw	-3
 10668  01685C  006F FF8F FFDA     	movff	plusw1,fsr2h
 10669  016862  0EF8               	movlw	-8
 10670  016864  006F FF8F FFDF     	movff	plusw1,indf2
 10671                           
 10672                           ;stkvar	_n @ sp[(-4)+-6]
 10673  01686A  0EF6               	movlw	-10
 10674  01686C  006F FF8C  F028    	movff	plusw1,btemp
 10675  016872  0E01               	movlw	1
 10676  016874  5E28               	subwf	btemp^0,f,c
 10677  016876  0EF6               	movlw	-10
 10678  016878  0060  F0A3  FFE3   	movff	btemp,plusw1
 10679  01687E  0EF7               	movlw	-9
 10680  016880  006F FF8C  F028    	movff	plusw1,btemp
 10681  016886  0E00               	movlw	0
 10682  016888  5A28               	subwfb	btemp^0,f,c
 10683  01688A  0EF7               	movlw	-9
 10684  01688C  0060  F0A3  FFE3   	movff	btemp,plusw1
 10685                           
 10686                           ;stkvar	_s @ sp[(-4)+0]
 10687  016892  0EFC               	movlw	-4
 10688  016894  50E3               	movf	plusw1,w,c
 10689  016896  0F01               	addlw	1
 10690  016898  6E28               	movwf	btemp^0,c
 10691  01689A  0EFC               	movlw	-4
 10692  01689C  0060  F0A3  FFE3   	movff	btemp,plusw1
 10693  0168A2  6A28               	clrf	btemp^0,c
 10694  0168A4  0EFD               	movlw	-3
 10695  0168A6  50E3               	movf	plusw1,w,c
 10696  0168A8  2028               	addwfc	btemp^0,w,c
 10697  0168AA  6E28               	movwf	btemp^0,c
 10698  0168AC  0EFD               	movlw	-3
 10699  0168AE                     L7:
 10700  0168AE  0060  F0A3  FFE3   	movff	btemp,plusw1
 10701                           
 10702                           ;stkvar	_n @ sp[(-4)+-6]
 10703  0168B4  0EF6               	movlw	-10
 10704  0168B6  006F FF8C  F028    	movff	plusw1,btemp
 10705  0168BC  0EF7               	movlw	-9
 10706  0168BE  50E3               	movf	plusw1,w,c
 10707  0168C0  1028               	iorwf	btemp^0,w,c
 10708  0168C2  A4D8               	btfss	status,2,c
 10709  0168C4  D7C6               	goto	l11468
 10710  0168C6                     u10450:
 10711                           
 10712                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
 10713  0168C6  0EF6               	movlw	246
 10714  0168C8  26E1               	addwf	fsr1l,f,c
 10715  0168CA  0EFF               	movlw	255
 10716  0168CC  22E2               	addwfc	fsr1h,f,c
 10717  0168CE  0012               	return		;funcret
 10718  0168D0                     __end_of_memset:
 10719                           	opt callstack 0
 10720                           
 10721 ;; *************** function _printf *****************
 10722 ;; Defined at:
 10723 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
 10724 ;; Parameters:    Size  Location     Type
 10725 ;;  fmt             2  [STACK] PTR const unsigned char 
 10726 ;;		 -> STR_45(3), STR_44(3), STR_43(3), 
 10727 ;; Auto vars:     Size  Location     Type
 10728 ;;  ap              2  [STACK] PTR void [1]
 10729 ;;		 -> ?_printf(2), ?_sprintf(2), 
 10730 ;;  ret             2    0        int 
 10731 ;; Return value:  Size  Location     Type
 10732 ;;                  2  [STACK] int 
 10733 ;; Registers used:
 10734 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10735 ;; Tracked objects:
 10736 ;;		On entry : 3F/3B
 10737 ;;		On exit  : 3F/0
 10738 ;;		Unchanged: 0/0
 10739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10743 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10744 ;;Total ram usage:        0 bytes
 10745 ;; Hardware stack levels used:    1
 10746 ;; Hardware stack levels required when called:   23
 10747 ;; This function calls:
 10748 ;;		_vfprintf
 10749 ;; This function is called by:
 10750 ;;		_eaDogM_WriteString
 10751 ;;		_send_lcd_cmd_dma
 10752 ;; This function uses a reentrant model
 10753 ;;
 10754                           
 10755                           	psect	text43
 10756  01A634                     __ptext43:
 10757                           	opt callstack 0
 10758  01A634                     _printf:
 10759                           	opt callstack 0
 10760                           
 10761                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10762  01A634  52E6               	movf	postinc1,f,c
 10763  01A636  52E6               	movf	postinc1,f,c
 10764                           
 10765                           ;stkvar	?_printf @ sp[(-2)+-3]
 10766                           
 10767                           ;incstack = 0
 10768  01A638  0EFB               	movlw	251
 10769  01A63A  24E1               	addwf	fsr1l,w,c
 10770  01A63C  6E32               	movwf	(btemp+10)^0,c
 10771  01A63E  0EFF               	movlw	255
 10772  01A640  20E2               	addwfc	fsr1h,w,c
 10773  01A642  6E33               	movwf	(btemp+11)^0,c
 10774                           
 10775                           ;stkvar	_ap @ sp[(-2)+0]
 10776  01A644  0EFF               	movlw	-1
 10777  01A646  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 10778  01A64C  0EFE               	movlw	-2
 10779  01A64E  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 10780                           
 10781                           ;stkvar	_ap @ sp[(-2)+0]
 10782  01A654  0EFE               	movlw	254
 10783  01A656  24E1               	addwf	fsr1l,w,c
 10784  01A658  6E28               	movwf	btemp^0,c
 10785  01A65A  0EFF               	movlw	255
 10786  01A65C  20E2               	addwfc	fsr1h,w,c
 10787  01A65E  6E29               	movwf	(btemp+1)^0,c
 10788  01A660  0060  F0A3  FFE6   	movff	btemp,postinc1
 10789  01A666  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 10790                           
 10791                           ;stkvar	_fmt @ sp[(-4)+-3]
 10792  01A66C  0EF9               	movlw	-7
 10793  01A66E  006F FF8F FFE6     	movff	plusw1,postinc1
 10794  01A674  006F FF8F FFE6     	movff	plusw1,postinc1
 10795  01A67A  0E00               	movlw	0
 10796  01A67C  6EE6               	movwf	postinc1,c
 10797  01A67E  0E00               	movlw	0
 10798  01A680  6EE6               	movwf	postinc1,c
 10799  01A682  EC50  F0CE         	call	_vfprintf	;wreg free
 10800                           
 10801                           ; BSR set to: 0
 10802                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
 10803  01A686  52E5               	movf	postdec1,f,c
 10804  01A688  52E5               	movf	postdec1,f,c
 10805  01A68A  52E5               	movf	postdec1,f,c
 10806  01A68C  50E7               	movf	indf1,w,c
 10807  01A68E  5EE1               	subwf	fsr1l,f,c
 10808  01A690  0E00               	movlw	0
 10809  01A692  5AE2               	subwfb	fsr1h,f,c
 10810  01A694  0012               	return		;funcret
 10811  01A696                     __end_of_printf:
 10812                           	opt callstack 0
 10813                           
 10814 ;; *************** function _vfprintf *****************
 10815 ;; Defined at:
 10816 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 10817 ;; Parameters:    Size  Location     Type
 10818 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10819 ;;		 -> f(6), NULL(0), 
 10820 ;;  fmt             2  [STACK] PTR const unsigned char 
 10821 ;;		 -> STR_65(85), STR_63(3), STR_62(3), STR_61(19), 
 10822 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
 10823 ;;		 -> STR_56(19), STR_55(24), STR_54(15), STR_53(15), 
 10824 ;;		 -> STR_52(15), STR_51(10), STR_50(10), STR_49(19), 
 10825 ;;		 -> STR_48(19), STR_45(3), STR_44(3), STR_43(3), 
 10826 ;;		 -> STR_42(17), STR_41(16), STR_40(16), STR_39(20), 
 10827 ;;		 -> STR_38(20), STR_37(20), STR_36(20), STR_35(20), 
 10828 ;;		 -> STR_34(20), STR_33(19), STR_32(19), STR_31(19), 
 10829 ;;		 -> STR_30(19), STR_29(19), STR_28(19), STR_27(19), 
 10830 ;;		 -> STR_26(19), STR_25(19), STR_24(19), STR_23(19), 
 10831 ;;		 -> STR_22(19), STR_21(17), STR_20(16), STR_19(16), 
 10832 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(21), 
 10833 ;;		 -> STR_14(17), STR_13(17), STR_12(17), STR_11(22), 
 10834 ;;		 -> STR_10(22), STR_9(23), STR_8(18), STR_7(17), 
 10835 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_2(15), 
 10836 ;;		 -> STR_1(17), 
 10837 ;;  ap              2  [STACK] PTR PTR void 
 10838 ;;		 -> ap(2), ap(2), 
 10839 ;; Auto vars:     Size  Location     Type
 10840 ;;  cfmt            2  [STACK] PTR unsigned char 
 10841 ;;		 -> STR_65(85), STR_63(3), STR_62(3), STR_61(19), 
 10842 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
 10843 ;;		 -> STR_56(19), STR_55(24), STR_54(15), STR_53(15), 
 10844 ;;		 -> STR_52(15), STR_51(10), STR_50(10), STR_49(19), 
 10845 ;;		 -> STR_48(19), STR_45(3), STR_44(3), STR_43(3), 
 10846 ;;		 -> STR_42(17), STR_41(16), STR_40(16), STR_39(20), 
 10847 ;;		 -> STR_38(20), STR_37(20), STR_36(20), STR_35(20), 
 10848 ;;		 -> STR_34(20), STR_33(19), STR_32(19), STR_31(19), 
 10849 ;;		 -> STR_30(19), STR_29(19), STR_28(19), STR_27(19), 
 10850 ;;		 -> STR_26(19), STR_25(19), STR_24(19), STR_23(19), 
 10851 ;;		 -> STR_22(19), STR_21(17), STR_20(16), STR_19(16), 
 10852 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(21), 
 10853 ;;		 -> STR_14(17), STR_13(17), STR_12(17), STR_11(22), 
 10854 ;;		 -> STR_10(22), STR_9(23), STR_8(18), STR_7(17), 
 10855 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_2(15), 
 10856 ;;		 -> STR_1(17), 
 10857 ;; Return value:  Size  Location     Type
 10858 ;;                  2  [STACK] int 
 10859 ;; Registers used:
 10860 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10861 ;; Tracked objects:
 10862 ;;		On entry : 0/1
 10863 ;;		On exit  : 3F/0
 10864 ;;		Unchanged: 0/0
 10865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10870 ;;Total ram usage:        0 bytes
 10871 ;; Hardware stack levels used:    1
 10872 ;; Hardware stack levels required when called:   22
 10873 ;; This function calls:
 10874 ;;		_vfpfcnvrt
 10875 ;; This function is called by:
 10876 ;;		_sprintf
 10877 ;;		_printf
 10878 ;; This function uses a reentrant model
 10879 ;;
 10880                           
 10881                           	psect	text44
 10882  019CA0                     __ptext44:
 10883                           	opt callstack 0
 10884  019CA0                     _vfprintf:
 10885                           	opt callstack 0
 10886                           
 10887                           ; BSR set to: 0
 10888                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10889  019CA0  52E6               	movf	postinc1,f,c
 10890  019CA2  52E6               	movf	postinc1,f,c
 10891                           
 10892                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 10893                           ;stkvar	_fmt @ sp[(-2)+-4]
 10894                           
 10895                           ;incstack = 0
 10896 ;; hardware stack exceeded
 10897  019CA4  0EFA               	movlw	-6
 10898  019CA6  006F FF8C  F032    	movff	plusw1,btemp+10
 10899  019CAC  0EFB               	movlw	-5
 10900  019CAE  006F FF8C  F033    	movff	plusw1,btemp+11
 10901                           
 10902                           ;stkvar	_cfmt @ sp[(-2)+0]
 10903  019CB4  0EFF               	movlw	-1
 10904  019CB6  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 10905  019CBC  0EFE               	movlw	-2
 10906  019CBE  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 10907                           
 10908                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 10909  019CC4  0100               	movlb	0	; () banked
 10910  019CC6  6BC0               	clrf	_nout& (0+255),b
 10911  019CC8  6BC1               	clrf	(_nout+1)& (0+255),b
 10912                           
 10913                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 10914  019CCA  D021               	goto	l12292
 10915  019CCC                     l12290:
 10916                           
 10917                           ; BSR set to: 0
 10918                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 10919                           ;stkvar	_ap @ sp[(-2)+-6]
 10920  019CCC  0EF8               	movlw	-8
 10921  019CCE  006F FF8F FFE6     	movff	plusw1,postinc1
 10922  019CD4  006F FF8F FFE6     	movff	plusw1,postinc1
 10923                           
 10924                           ;stkvar	_cfmt @ sp[(-4)+0]
 10925  019CDA  0EFC               	movlw	252
 10926  019CDC  24E1               	addwf	fsr1l,w,c
 10927  019CDE  6E28               	movwf	btemp^0,c
 10928  019CE0  0EFF               	movlw	255
 10929  019CE2  20E2               	addwfc	fsr1h,w,c
 10930  019CE4  6E29               	movwf	(btemp+1)^0,c
 10931  019CE6  0060  F0A3  FFE6   	movff	btemp,postinc1
 10932  019CEC  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 10933                           
 10934                           ;stkvar	_fp @ sp[(-6)+-2]
 10935  019CF2  0EF8               	movlw	-8
 10936  019CF4  006F FF8F FFE6     	movff	plusw1,postinc1
 10937  019CFA  006F FF8F FFE6     	movff	plusw1,postinc1
 10938  019D00  EC39  F091         	call	_vfpfcnvrt	;wreg free
 10939  019D04  5028               	movf	btemp^0,w,c
 10940  019D06  0100               	movlb	0	; () banked
 10941  019D08  27C0               	addwf	_nout& (0+255),f,b
 10942  019D0A  5029               	movf	(btemp+1)^0,w,c
 10943  019D0C  23C1               	addwfc	(_nout+1)& (0+255),f,b
 10944  019D0E                     l12292:
 10945                           
 10946                           ; BSR set to: 0
 10947                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 10948                           ;stkvar	_cfmt @ sp[(-2)+0]
 10949  019D0E  50E1               	movf	fsr1l,w,c
 10950  019D10  0FFE               	addlw	-2
 10951  019D12  6ED9               	movwf	fsr2l,c
 10952  019D14  50E2               	movf	fsr1h,w,c
 10953  019D16  6EDA               	movwf	fsr2h,c
 10954  019D18  0EFF               	movlw	255
 10955  019D1A  22DA               	addwfc	fsr2h,f,c
 10956  019D1C  006F FF7B FFF6     	movff	postinc2,tblptrl
 10957  019D22  006F FF77 FFF7     	movff	postdec2,tblptrh
 10958  019D28                     	if	0	;tblptru may be non-zero
 10959  019D28                     	endif
 10960  019D28                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10961  019D28  0E00               	movlw	low (__mediumconst shr (0+16))
 10962  019D2A  6EF8               	movwf	tblptru,c
 10963  019D2C                     	endif
 10964  019D2C  0008               	tblrd		*
 10965  019D2E  50F5               	movf	tablat,w,c
 10966  019D30  0900               	iorlw	0
 10967  019D32  A4D8               	btfss	status,2,c
 10968  019D34  D7CB               	goto	l12290
 10969                           
 10970                           ; BSR set to: 0
 10971                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 10972  019D36  0060  F300  F028   	movff	_nout,btemp
 10973  019D3C  0060  F304  F029   	movff	_nout+1,btemp+1
 10974                           
 10975                           ; BSR set to: 0
 10976                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
 10977  019D42  0EF8               	movlw	248
 10978  019D44  26E1               	addwf	fsr1l,f,c
 10979  019D46  0EFF               	movlw	255
 10980  019D48  22E2               	addwfc	fsr1h,f,c
 10981  019D4A  0012               	return		;funcret
 10982  019D4C                     __end_of_vfprintf:
 10983                           	opt callstack 0
 10984                           
 10985 ;; *************** function _vfpfcnvrt *****************
 10986 ;; Defined at:
 10987 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 10988 ;; Parameters:    Size  Location     Type
 10989 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10990 ;;		 -> f(6), NULL(0), 
 10991 ;;  fmt             2  [STACK] PTR PTR unsigned char 
 10992 ;;		 -> cfmt(2), 
 10993 ;;  ap              2  [STACK] PTR PTR void 
 10994 ;;		 -> ap(2), ap(2), 
 10995 ;; Auto vars:     Size  Location     Type
 10996 ;;  llu             8  [STACK] unsigned long long 
 10997 ;;  ll              8  [STACK] long long 
 10998 ;;  f               4  [STACK] long long 
 10999 ;;  ct              3  [STACK] unsigned char [3]
 11000 ;;  vp              3    0        PTR void 
 11001 ;;  cp              2  [STACK] PTR unsigned char 
 11002 ;;		 -> ?_printf(2), ?_sprintf(2), STR_47(9), STR_46(12), 
 11003 ;;		 -> D.lcd(480), D(482), T(144), STR_3(6), 
 11004 ;;		 -> V(189), 
 11005 ;;  i               2    0        int 
 11006 ;;  done            2    0        int 
 11007 ;;  c               1  [STACK] unsigned char 
 11008 ;; Return value:  Size  Location     Type
 11009 ;;                  2  [STACK] int 
 11010 ;; Registers used:
 11011 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11012 ;; Tracked objects:
 11013 ;;		On entry : 0/0
 11014 ;;		On exit  : 0/0
 11015 ;;		Unchanged: 0/0
 11016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11021 ;;Total ram usage:        0 bytes
 11022 ;; Hardware stack levels used:    1
 11023 ;; Hardware stack levels required when called:   21
 11024 ;; This function calls:
 11025 ;;		_atoi
 11026 ;;		_ctoa
 11027 ;;		_dtoa
 11028 ;;		_efgtoa
 11029 ;;		_fputc
 11030 ;;		_isdigit
 11031 ;;		_isupper
 11032 ;;		_stoa
 11033 ;;		_strncmp
 11034 ;;		_tolower
 11035 ;;		_utoa
 11036 ;;		_xtoa
 11037 ;; This function is called by:
 11038 ;;		_vfprintf
 11039 ;; This function uses a reentrant model
 11040 ;;
 11041                           
 11042                           	psect	text45
 11043  012272                     __ptext45:
 11044                           	opt callstack 0
 11045  012272                     _vfpfcnvrt:
 11046                           	opt callstack 0
 11047                           
 11048                           ; BSR set to: 0
 11049                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 11050  012272  0E20               	movlw	32
 11051  012274  26E1               	addwf	fsr1l,f,c
 11052  012276  0E00               	movlw	0
 11053  012278  22E2               	addwfc	fsr1h,f,c
 11054                           
 11055                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 11056                           ;stkvar	_fmt @ sp[(-32)+-4]
 11057                           
 11058                           ;incstack = 0
 11059 ;; hardware stack exceeded
 11060  01227A  0EDC               	movlw	-36
 11061  01227C  006F FF8F FFD9     	movff	plusw1,fsr2l
 11062  012282  0EDD               	movlw	-35
 11063  012284  006F FF8F FFDA     	movff	plusw1,fsr2h
 11064  01228A  006F FF7B FFF6     	movff	postinc2,tblptrl
 11065  012290  006F FF77 FFF7     	movff	postdec2,tblptrh
 11066  012296                     	if	0	;tblptru may be non-zero
 11067  012296                     	endif
 11068  012296                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11069  012296  0E00               	movlw	low (__mediumconst shr (0+16))
 11070  012298  6EF8               	movwf	tblptru,c
 11071  01229A                     	endif
 11072  01229A  0008               	tblrd		*
 11073  01229C  50F5               	movf	tablat,w,c
 11074  01229E  0A25               	xorlw	37
 11075  0122A0  A4D8               	btfss	status,2,c
 11076  0122A2  EFE0  F098         	goto	l12236
 11077                           
 11078                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 11079                           ;stkvar	_fmt @ sp[(-32)+-4]
 11080  0122A6  0EDC               	movlw	-36
 11081  0122A8  006F FF8F FFD9     	movff	plusw1,fsr2l
 11082  0122AE  0EDD               	movlw	-35
 11083  0122B0  006F FF8F FFDA     	movff	plusw1,fsr2h
 11084  0122B6  2ADE               	incf	postinc2,f,c
 11085  0122B8  0E00               	movlw	0
 11086  0122BA  22DD               	addwfc	postdec2,f,c
 11087                           
 11088                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 11089  0122BC  6A48               	clrf	_width^0,c
 11090  0122BE  6A49               	clrf	(_width+1)^0,c
 11091  0122C0  6A4C               	clrf	_flags^0,c
 11092  0122C2  6A4D               	clrf	(_flags+1)^0,c
 11093                           
 11094                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 11095  0122C4  684A               	setf	_prec^0,c
 11096  0122C6  684B               	setf	(_prec+1)^0,c
 11097                           
 11098                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
 11099                           ;stkvar	_fmt @ sp[(-32)+-4]
 11100  0122C8  0EDC               	movlw	-36
 11101  0122CA  006F FF8F FFD9     	movff	plusw1,fsr2l
 11102  0122D0  0EDD               	movlw	-35
 11103  0122D2  006F FF8F FFDA     	movff	plusw1,fsr2h
 11104  0122D8  006F FF7B FFF6     	movff	postinc2,tblptrl
 11105  0122DE  006F FF77 FFF7     	movff	postdec2,tblptrh
 11106  0122E4                     	if	0	;tblptru may be non-zero
 11107  0122E4                     	endif
 11108  0122E4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11109  0122E4  0E00               	movlw	low (__mediumconst shr (0+16))
 11110  0122E6  6EF8               	movwf	tblptru,c
 11111  0122E8                     	endif
 11112  0122E8  0008               	tblrd		*
 11113  0122EA  50F5               	movf	tablat,w,c
 11114  0122EC  0A2A               	xorlw	42
 11115  0122EE  A4D8               	btfss	status,2,c
 11116  0122F0  D031               	goto	l12054
 11117                           
 11118                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
 11119                           ;stkvar	_fmt @ sp[(-32)+-4]
 11120  0122F2  0EDC               	movlw	-36
 11121  0122F4  006F FF8F FFD9     	movff	plusw1,fsr2l
 11122  0122FA  0EDD               	movlw	-35
 11123  0122FC  006F FF8F FFDA     	movff	plusw1,fsr2h
 11124  012302  2ADE               	incf	postinc2,f,c
 11125  012304  0E00               	movlw	0
 11126  012306  22DD               	addwfc	postdec2,f,c
 11127                           
 11128                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
 11129                           ;stkvar	_ap @ sp[(-32)+-6]
 11130  012308  0EDA               	movlw	-38
 11131  01230A  006F FF8F FFD9     	movff	plusw1,fsr2l
 11132  012310  0EDB               	movlw	-37
 11133  012312  006F FF8F FFDA     	movff	plusw1,fsr2h
 11134  012318  0E02               	movlw	2
 11135  01231A  5EDE               	subwf	postinc2,f,c
 11136  01231C  0E00               	movlw	0
 11137  01231E  5ADD               	subwfb	postdec2,f,c
 11138  012320  006F FF78  F032    	movff	postinc2,btemp+10
 11139  012326  006F FF74  F033    	movff	postdec2,btemp+11
 11140  01232C  0060  F0CB  FFD9   	movff	btemp+10,fsr2l
 11141  012332  0060  F0CF  FFDA   	movff	btemp+11,fsr2h
 11142  012338  006F FF78  F048    	movff	postinc2,_width
 11143  01233E  006F FF74  F049    	movff	postdec2,_width+1
 11144                           
 11145                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
 11146  012344  AE49               	btfss	(_width+1)^0,7,c
 11147  012346  D066               	goto	u11580
 11148                           
 11149                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
 11150  012348  804C               	bsf	_flags^0,0,c
 11151                           
 11152                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
 11153  01234A  6C48               	negf	_width^0,c
 11154  01234C  1E49               	comf	(_width+1)^0,f,c
 11155  01234E  B0D8               	btfsc	status,0,c
 11156  012350  2A49               	incf	(_width+1)^0,f,c
 11157  012352  D060               	goto	u11580
 11158  012354                     l12054:
 11159                           
 11160                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
 11161                           ;stkvar	_fmt @ sp[(-32)+-4]
 11162  012354  0EDC               	movlw	-36
 11163  012356  006F FF8F FFD9     	movff	plusw1,fsr2l
 11164  01235C  0EDD               	movlw	-35
 11165  01235E  006F FF8F FFDA     	movff	plusw1,fsr2h
 11166  012364  006F FF78  F032    	movff	postinc2,btemp+10
 11167  01236A  006F FF74  F033    	movff	postdec2,btemp+11
 11168  012370  0060  F0CB  FFE6   	movff	btemp+10,postinc1
 11169  012376  0060  F0CF  FFE6   	movff	btemp+11,postinc1
 11170  01237C  EC67  F0B8         	call	_atoi	;wreg free
 11171  012380  0060  F0A0  F048   	movff	btemp,_width
 11172  012386  0060  F0A4  F049   	movff	btemp+1,_width+1
 11173                           
 11174                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 11175  01238C  D00B               	goto	l12058
 11176  01238E                     l12056:
 11177                           
 11178                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
 11179                           ;stkvar	_fmt @ sp[(-32)+-4]
 11180  01238E  0EDC               	movlw	-36
 11181  012390  006F FF8F FFD9     	movff	plusw1,fsr2l
 11182  012396  0EDD               	movlw	-35
 11183  012398  006F FF8F FFDA     	movff	plusw1,fsr2h
 11184  01239E  2ADE               	incf	postinc2,f,c
 11185  0123A0  0E00               	movlw	0
 11186  0123A2  22DD               	addwfc	postdec2,f,c
 11187  0123A4                     l12058:
 11188  0123A4  0ED0               	movlw	208
 11189  0123A6  6E32               	movwf	(btemp+10)^0,c
 11190  0123A8  0EFF               	movlw	255
 11191  0123AA  6E33               	movwf	(btemp+11)^0,c
 11192                           
 11193                           ;stkvar	_fmt @ sp[(-32)+-4]
 11194  0123AC  0EDC               	movlw	-36
 11195  0123AE  006F FF8F FFD9     	movff	plusw1,fsr2l
 11196  0123B4  0EDD               	movlw	-35
 11197  0123B6  006F FF8F FFDA     	movff	plusw1,fsr2h
 11198  0123BC  006F FF7B FFF6     	movff	postinc2,tblptrl
 11199  0123C2  006F FF77 FFF7     	movff	postdec2,tblptrh
 11200  0123C8                     	if	0	;tblptru may be non-zero
 11201  0123C8                     	endif
 11202  0123C8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11203  0123C8  0E00               	movlw	low (__mediumconst shr (0+16))
 11204  0123CA  6EF8               	movwf	tblptru,c
 11205  0123CC                     	endif
 11206  0123CC  0008               	tblrd		*
 11207  0123CE  50F5               	movf	tablat,w,c
 11208  0123D0  6E30               	movwf	(btemp+8)^0,c
 11209  0123D2  6A31               	clrf	(btemp+9)^0,c
 11210  0123D4  5032               	movf	(btemp+10)^0,w,c
 11211  0123D6  2630               	addwf	(btemp+8)^0,f,c
 11212  0123D8  5033               	movf	(btemp+11)^0,w,c
 11213  0123DA  2231               	addwfc	(btemp+9)^0,f,c
 11214  0123DC  5031               	movf	(btemp+9)^0,w,c
 11215  0123DE  E106               	bnz	u11560
 11216  0123E0  0E0A               	movlw	10
 11217  0123E2  5C30               	subwf	(btemp+8)^0,w,c
 11218  0123E4  B0D8               	btfsc	status,0,c
 11219  0123E6  D002               	goto	u11560
 11220  0123E8  0E01               	movlw	1
 11221  0123EA  D001               	goto	u11570
 11222  0123EC                     u11560:
 11223  0123EC  0E00               	movlw	0
 11224  0123EE                     u11570:
 11225  0123EE  6E32               	movwf	(btemp+10)^0,c
 11226  0123F0  6A33               	clrf	(btemp+11)^0,c
 11227                           
 11228                           ;stkvar	_vfpfcnvrt$5434 @ sp[(-32)+4]
 11229  0123F2  0EE4               	movlw	-28
 11230  0123F4  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 11231  0123FA  0EE5               	movlw	-27
 11232  0123FC  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 11233                           
 11234                           ;stkvar	_vfpfcnvrt$5434 @ sp[(-32)+4]
 11235  012402  0EE4               	movlw	-28
 11236  012404  006F FF8C  F028    	movff	plusw1,btemp
 11237  01240A  0EE5               	movlw	-27
 11238  01240C  50E3               	movf	plusw1,w,c
 11239  01240E  1028               	iorwf	btemp^0,w,c
 11240  012410  A4D8               	btfss	status,2,c
 11241  012412  D7BD               	goto	l12056
 11242  012414                     u11580:
 11243                           
 11244                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
 11245                           ;stkvar	_fmt @ sp[(-32)+-4]
 11246  012414  0EDC               	movlw	-36
 11247  012416  006F FF8F FFD9     	movff	plusw1,fsr2l
 11248  01241C  0EDD               	movlw	-35
 11249  01241E  006F FF8F FFDA     	movff	plusw1,fsr2h
 11250  012424  006F FF7B FFF6     	movff	postinc2,tblptrl
 11251  01242A  006F FF77 FFF7     	movff	postdec2,tblptrh
 11252  012430                     	if	0	;tblptru may be non-zero
 11253  012430                     	endif
 11254  012430                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11255  012430  0E00               	movlw	low (__mediumconst shr (0+16))
 11256  012432  6EF8               	movwf	tblptru,c
 11257  012434                     	endif
 11258  012434  0008               	tblrd		*
 11259  012436  50F5               	movf	tablat,w,c
 11260  012438  0A2E               	xorlw	46
 11261  01243A  A4D8               	btfss	status,2,c
 11262  01243C  D0AC               	goto	u11630
 11263                           
 11264                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
 11265  01243E  6A4A               	clrf	_prec^0,c
 11266  012440  6A4B               	clrf	(_prec+1)^0,c
 11267                           
 11268                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
 11269                           ;stkvar	_fmt @ sp[(-32)+-4]
 11270  012442  0EDC               	movlw	-36
 11271  012444  006F FF8F FFD9     	movff	plusw1,fsr2l
 11272  01244A  0EDD               	movlw	-35
 11273  01244C  006F FF8F FFDA     	movff	plusw1,fsr2h
 11274  012452  2ADE               	incf	postinc2,f,c
 11275  012454  0E00               	movlw	0
 11276  012456  22DD               	addwfc	postdec2,f,c
 11277                           
 11278                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
 11279                           ;stkvar	_fmt @ sp[(-32)+-4]
 11280  012458  0EDC               	movlw	-36
 11281  01245A  006F FF8F FFD9     	movff	plusw1,fsr2l
 11282  012460  0EDD               	movlw	-35
 11283  012462  006F FF8F FFDA     	movff	plusw1,fsr2h
 11284  012468  006F FF7B FFF6     	movff	postinc2,tblptrl
 11285  01246E  006F FF77 FFF7     	movff	postdec2,tblptrh
 11286  012474                     	if	0	;tblptru may be non-zero
 11287  012474                     	endif
 11288  012474                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11289  012474  0E00               	movlw	low (__mediumconst shr (0+16))
 11290  012476  6EF8               	movwf	tblptru,c
 11291  012478                     	endif
 11292  012478  0008               	tblrd		*
 11293  01247A  50F5               	movf	tablat,w,c
 11294  01247C  0A2A               	xorlw	42
 11295  01247E  A4D8               	btfss	status,2,c
 11296  012480  D02A               	goto	l12076
 11297                           
 11298                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
 11299                           ;stkvar	_fmt @ sp[(-32)+-4]
 11300  012482  0EDC               	movlw	-36
 11301  012484  006F FF8F FFD9     	movff	plusw1,fsr2l
 11302  01248A  0EDD               	movlw	-35
 11303  01248C  006F FF8F FFDA     	movff	plusw1,fsr2h
 11304  012492  2ADE               	incf	postinc2,f,c
 11305  012494  0E00               	movlw	0
 11306  012496  22DD               	addwfc	postdec2,f,c
 11307                           
 11308                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
 11309                           ;stkvar	_ap @ sp[(-32)+-6]
 11310  012498  0EDA               	movlw	-38
 11311  01249A  006F FF8F FFD9     	movff	plusw1,fsr2l
 11312  0124A0  0EDB               	movlw	-37
 11313  0124A2  006F FF8F FFDA     	movff	plusw1,fsr2h
 11314  0124A8  0E02               	movlw	2
 11315  0124AA  5EDE               	subwf	postinc2,f,c
 11316  0124AC  0E00               	movlw	0
 11317  0124AE  5ADD               	subwfb	postdec2,f,c
 11318  0124B0  006F FF78  F032    	movff	postinc2,btemp+10
 11319  0124B6  006F FF74  F033    	movff	postdec2,btemp+11
 11320  0124BC  0060  F0CB  FFD9   	movff	btemp+10,fsr2l
 11321  0124C2  0060  F0CF  FFDA   	movff	btemp+11,fsr2h
 11322  0124C8  006F FF78  F04A    	movff	postinc2,_prec
 11323  0124CE  006F FF74  F04B    	movff	postdec2,_prec+1
 11324                           
 11325                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
 11326  0124D4  D060               	goto	u11630
 11327  0124D6                     l12076:
 11328                           
 11329                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
 11330                           ;stkvar	_fmt @ sp[(-32)+-4]
 11331  0124D6  0EDC               	movlw	-36
 11332  0124D8  006F FF8F FFD9     	movff	plusw1,fsr2l
 11333  0124DE  0EDD               	movlw	-35
 11334  0124E0  006F FF8F FFDA     	movff	plusw1,fsr2h
 11335  0124E6  006F FF78  F032    	movff	postinc2,btemp+10
 11336  0124EC  006F FF74  F033    	movff	postdec2,btemp+11
 11337  0124F2  0060  F0CB  FFE6   	movff	btemp+10,postinc1
 11338  0124F8  0060  F0CF  FFE6   	movff	btemp+11,postinc1
 11339  0124FE  EC67  F0B8         	call	_atoi	;wreg free
 11340  012502  0060  F0A0  F04A   	movff	btemp,_prec
 11341  012508  0060  F0A4  F04B   	movff	btemp+1,_prec+1
 11342                           
 11343                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 11344  01250E  D00B               	goto	l12080
 11345  012510                     l12078:
 11346                           
 11347                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
 11348                           ;stkvar	_fmt @ sp[(-32)+-4]
 11349  012510  0EDC               	movlw	-36
 11350  012512  006F FF8F FFD9     	movff	plusw1,fsr2l
 11351  012518  0EDD               	movlw	-35
 11352  01251A  006F FF8F FFDA     	movff	plusw1,fsr2h
 11353  012520  2ADE               	incf	postinc2,f,c
 11354  012522  0E00               	movlw	0
 11355  012524  22DD               	addwfc	postdec2,f,c
 11356  012526                     l12080:
 11357  012526  0ED0               	movlw	208
 11358  012528  6E32               	movwf	(btemp+10)^0,c
 11359  01252A  0EFF               	movlw	255
 11360  01252C  6E33               	movwf	(btemp+11)^0,c
 11361                           
 11362                           ;stkvar	_fmt @ sp[(-32)+-4]
 11363  01252E  0EDC               	movlw	-36
 11364  012530  006F FF8F FFD9     	movff	plusw1,fsr2l
 11365  012536  0EDD               	movlw	-35
 11366  012538  006F FF8F FFDA     	movff	plusw1,fsr2h
 11367  01253E  006F FF7B FFF6     	movff	postinc2,tblptrl
 11368  012544  006F FF77 FFF7     	movff	postdec2,tblptrh
 11369  01254A                     	if	0	;tblptru may be non-zero
 11370  01254A                     	endif
 11371  01254A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11372  01254A  0E00               	movlw	low (__mediumconst shr (0+16))
 11373  01254C  6EF8               	movwf	tblptru,c
 11374  01254E                     	endif
 11375  01254E  0008               	tblrd		*
 11376  012550  50F5               	movf	tablat,w,c
 11377  012552  6E30               	movwf	(btemp+8)^0,c
 11378  012554  6A31               	clrf	(btemp+9)^0,c
 11379  012556  5032               	movf	(btemp+10)^0,w,c
 11380  012558  2630               	addwf	(btemp+8)^0,f,c
 11381  01255A  5033               	movf	(btemp+11)^0,w,c
 11382  01255C  2231               	addwfc	(btemp+9)^0,f,c
 11383  01255E  5031               	movf	(btemp+9)^0,w,c
 11384  012560  E106               	bnz	u11610
 11385  012562  0E0A               	movlw	10
 11386  012564  5C30               	subwf	(btemp+8)^0,w,c
 11387  012566  B0D8               	btfsc	status,0,c
 11388  012568  D002               	goto	u11610
 11389  01256A  0E01               	movlw	1
 11390  01256C  D001               	goto	u11620
 11391  01256E                     u11610:
 11392  01256E  0E00               	movlw	0
 11393  012570                     u11620:
 11394  012570  6E32               	movwf	(btemp+10)^0,c
 11395  012572  6A33               	clrf	(btemp+11)^0,c
 11396                           
 11397                           ;stkvar	_vfpfcnvrt$5435 @ sp[(-32)+0]
 11398  012574  0EE0               	movlw	-32
 11399  012576  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 11400  01257C  0EE1               	movlw	-31
 11401  01257E  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 11402                           
 11403                           ;stkvar	_vfpfcnvrt$5435 @ sp[(-32)+0]
 11404  012584  0EE0               	movlw	-32
 11405  012586  006F FF8C  F028    	movff	plusw1,btemp
 11406  01258C  0EE1               	movlw	-31
 11407  01258E  50E3               	movf	plusw1,w,c
 11408  012590  1028               	iorwf	btemp^0,w,c
 11409  012592  A4D8               	btfss	status,2,c
 11410  012594  D7BD               	goto	l12078
 11411  012596                     u11630:
 11412                           
 11413                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
 11414                           ;stkvar	_fmt @ sp[(-32)+-4]
 11415  012596  0EDC               	movlw	-36
 11416  012598  006F FF8F FFD9     	movff	plusw1,fsr2l
 11417  01259E  0EDD               	movlw	-35
 11418  0125A0  006F FF8F FFDA     	movff	plusw1,fsr2h
 11419  0125A6  006F FF7B FFF6     	movff	postinc2,tblptrl
 11420  0125AC  006F FF77 FFF7     	movff	postdec2,tblptrh
 11421  0125B2                     	if	0	;tblptru may be non-zero
 11422  0125B2                     	endif
 11423  0125B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11424  0125B2  0E00               	movlw	low (__mediumconst shr (0+16))
 11425  0125B4  6EF8               	movwf	tblptru,c
 11426  0125B6                     	endif
 11427  0125B6  0008               	tblrd		*
 11428  0125B8  50F5               	movf	tablat,w,c
 11429  0125BA  6EE6               	movwf	postinc1,c
 11430  0125BC  0E00               	movlw	0
 11431  0125BE  6EE6               	movwf	postinc1,c
 11432  0125C0  EC95  F0D1         	call	_tolower	;wreg free
 11433                           
 11434                           ;stkvar	_ct @ sp[(-32)+26]
 11435  0125C4  0EFA               	movlw	-6
 11436  0125C6  0060  F0A3  FFE3   	movff	btemp,plusw1
 11437                           
 11438                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
 11439                           ;stkvar	_ct @ sp[(-32)+26]
 11440  0125CC  0EFA               	movlw	-6
 11441  0125CE  50E3               	movf	plusw1,w,c
 11442  0125D0  B4D8               	btfsc	status,2,c
 11443  0125D2  D05B               	goto	l12096
 11444                           
 11445                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
 11446                           ;stkvar	_ct @ sp[(-32)+26]
 11447  0125D4  0EFB               	movlw	251
 11448  0125D6  24E1               	addwf	fsr1l,w,c
 11449  0125D8  6ED9               	movwf	fsr2l,c
 11450  0125DA  0EFF               	movlw	255
 11451  0125DC  20E2               	addwfc	fsr1h,w,c
 11452  0125DE  6EDA               	movwf	fsr2h,c
 11453                           
 11454                           ;stkvar	_fmt @ sp[(-32)+-4]
 11455  0125E0  0EDC               	movlw	-36
 11456  0125E2  006F FF8F FFE9     	movff	plusw1,fsr0l
 11457  0125E8  0EDD               	movlw	-35
 11458  0125EA  006F FF8F FFEA     	movff	plusw1,fsr0h
 11459  0125F0  006F FFB8  F032    	movff	postinc0,btemp+10
 11460  0125F6  006F FFB4  F033    	movff	postdec0,btemp+11
 11461  0125FC  0E01               	movlw	1
 11462  0125FE  2632               	addwf	(btemp+10)^0,f,c
 11463  012600  0E00               	movlw	0
 11464  012602  2233               	addwfc	(btemp+11)^0,f,c
 11465  012604  0060  F0CB  FFF6   	movff	btemp+10,tblptrl
 11466  01260A  0060  F0CF  FFF7   	movff	btemp+11,tblptrh
 11467  012610                     	if	0	;tblptru may be non-zero
 11468  012610                     	endif
 11469  012610                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11470  012610  0E00               	movlw	low (__mediumconst shr (0+16))
 11471  012612  6EF8               	movwf	tblptru,c
 11472  012614                     	endif
 11473  012614  0008               	tblrd		*
 11474  012616  50F5               	movf	tablat,w,c
 11475  012618  6EE6               	movwf	postinc1,c
 11476  01261A  0E00               	movlw	0
 11477  01261C  6EE6               	movwf	postinc1,c
 11478  01261E  EC95  F0D1         	call	_tolower	;wreg free
 11479  012622  5028               	movf	btemp^0,w,c
 11480  012624  6EDF               	movwf	indf2,c
 11481                           
 11482                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
 11483                           ;stkvar	_ct @ sp[(-32)+26]
 11484  012626  0EFB               	movlw	251
 11485  012628  24E1               	addwf	fsr1l,w,c
 11486  01262A  6ED9               	movwf	fsr2l,c
 11487  01262C  0EFF               	movlw	255
 11488  01262E  20E2               	addwfc	fsr1h,w,c
 11489  012630  6EDA               	movwf	fsr2h,c
 11490  012632  50DF               	movf	indf2,w,c
 11491  012634  B4D8               	btfsc	status,2,c
 11492  012636  D029               	goto	l12096
 11493                           
 11494                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
 11495                           ;stkvar	_ct @ sp[(-32)+26]
 11496  012638  0EFC               	movlw	252
 11497  01263A  24E1               	addwf	fsr1l,w,c
 11498  01263C  6ED9               	movwf	fsr2l,c
 11499  01263E  0EFF               	movlw	255
 11500  012640  20E2               	addwfc	fsr1h,w,c
 11501  012642  6EDA               	movwf	fsr2h,c
 11502                           
 11503                           ;stkvar	_fmt @ sp[(-32)+-4]
 11504  012644  0EDC               	movlw	-36
 11505  012646  006F FF8F FFE9     	movff	plusw1,fsr0l
 11506  01264C  0EDD               	movlw	-35
 11507  01264E  006F FF8F FFEA     	movff	plusw1,fsr0h
 11508  012654  006F FFB8  F032    	movff	postinc0,btemp+10
 11509  01265A  006F FFB4  F033    	movff	postdec0,btemp+11
 11510  012660  0E02               	movlw	2
 11511  012662  2632               	addwf	(btemp+10)^0,f,c
 11512  012664  0E00               	movlw	0
 11513  012666  2233               	addwfc	(btemp+11)^0,f,c
 11514  012668  0060  F0CB  FFF6   	movff	btemp+10,tblptrl
 11515  01266E  0060  F0CF  FFF7   	movff	btemp+11,tblptrh
 11516  012674                     	if	0	;tblptru may be non-zero
 11517  012674                     	endif
 11518  012674                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11519  012674  0E00               	movlw	low (__mediumconst shr (0+16))
 11520  012676  6EF8               	movwf	tblptru,c
 11521  012678                     	endif
 11522  012678  0008               	tblrd		*
 11523  01267A  50F5               	movf	tablat,w,c
 11524  01267C  6EE6               	movwf	postinc1,c
 11525  01267E  0E00               	movlw	0
 11526  012680  6EE6               	movwf	postinc1,c
 11527  012682  EC95  F0D1         	call	_tolower	;wreg free
 11528  012686  5028               	movf	btemp^0,w,c
 11529  012688  6EDF               	movwf	indf2,c
 11530  01268A                     l12096:
 11531                           
 11532                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 11533                           ;stkvar	_fmt @ sp[(-32)+-4]
 11534  01268A  0EDC               	movlw	-36
 11535  01268C  006F FF8F FFD9     	movff	plusw1,fsr2l
 11536  012692  0EDD               	movlw	-35
 11537  012694  006F FF8F FFDA     	movff	plusw1,fsr2h
 11538  01269A  006F FF7B FFF6     	movff	postinc2,tblptrl
 11539  0126A0  006F FF77 FFF7     	movff	postdec2,tblptrh
 11540  0126A6                     	if	0	;tblptru may be non-zero
 11541  0126A6                     	endif
 11542  0126A6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11543  0126A6  0E00               	movlw	low (__mediumconst shr (0+16))
 11544  0126A8  6EF8               	movwf	tblptru,c
 11545  0126AA                     	endif
 11546  0126AA  0008               	tblrd		*
 11547  0126AC  50F5               	movf	tablat,w,c
 11548  0126AE  0A63               	xorlw	99
 11549  0126B0  A4D8               	btfss	status,2,c
 11550  0126B2  D037               	goto	l12106
 11551                           
 11552                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 11553                           ;stkvar	_fmt @ sp[(-32)+-4]
 11554  0126B4  0EDC               	movlw	-36
 11555  0126B6  006F FF8F FFD9     	movff	plusw1,fsr2l
 11556  0126BC  0EDD               	movlw	-35
 11557  0126BE  006F FF8F FFDA     	movff	plusw1,fsr2h
 11558  0126C4  2ADE               	incf	postinc2,f,c
 11559  0126C6  0E00               	movlw	0
 11560  0126C8  22DD               	addwfc	postdec2,f,c
 11561                           
 11562                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 11563                           ;stkvar	_ap @ sp[(-32)+-6]
 11564  0126CA  0EDA               	movlw	-38
 11565  0126CC  006F FF8F FFD9     	movff	plusw1,fsr2l
 11566  0126D2  0EDB               	movlw	-37
 11567  0126D4  006F FF8F FFDA     	movff	plusw1,fsr2h
 11568  0126DA  0E02               	movlw	2
 11569  0126DC  5EDE               	subwf	postinc2,f,c
 11570  0126DE  0E00               	movlw	0
 11571  0126E0  5ADD               	subwfb	postdec2,f,c
 11572  0126E2  006F FF78  F032    	movff	postinc2,btemp+10
 11573  0126E8  006F FF74  F033    	movff	postdec2,btemp+11
 11574  0126EE  0060  F0CB  FFD9   	movff	btemp+10,fsr2l
 11575  0126F4  0060  F0CF  FFDA   	movff	btemp+11,fsr2h
 11576  0126FA  50DF               	movf	indf2,w,c
 11577  0126FC  6E33               	movwf	(btemp+11)^0,c
 11578                           
 11579                           ;stkvar	_c @ sp[(-32)+31]
 11580  0126FE  0EFF               	movlw	-1
 11581  012700  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 11582                           
 11583                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 11584                           ;stkvar	_c @ sp[(-32)+31]
 11585  012706  0EFF               	movlw	-1
 11586  012708  50E3               	movf	plusw1,w,c
 11587  01270A  6EE6               	movwf	postinc1,c
 11588                           
 11589                           ;stkvar	_fp @ sp[(-33)+-2]
 11590  01270C  0EDD               	movlw	-35
 11591  01270E  006F FF8F FFE6     	movff	plusw1,postinc1
 11592  012714  006F FF8F FFE6     	movff	plusw1,postinc1
 11593  01271A  EC0F  F0D1         	call	_ctoa	;wreg free
 11594  01271E  EF0A  F099         	goto	l2330
 11595  012722                     l12106:
 11596                           
 11597                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 11598                           ;stkvar	_fmt @ sp[(-32)+-4]
 11599  012722  0EDC               	movlw	-36
 11600  012724  006F FF8F FFD9     	movff	plusw1,fsr2l
 11601  01272A  0EDD               	movlw	-35
 11602  01272C  006F FF8F FFDA     	movff	plusw1,fsr2h
 11603  012732  006F FF7B FFF6     	movff	postinc2,tblptrl
 11604  012738  006F FF77 FFF7     	movff	postdec2,tblptrh
 11605  01273E                     	if	0	;tblptru may be non-zero
 11606  01273E                     	endif
 11607  01273E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11608  01273E  0E00               	movlw	low (__mediumconst shr (0+16))
 11609  012740  6EF8               	movwf	tblptru,c
 11610  012742                     	endif
 11611  012742  0008               	tblrd		*
 11612  012744  50F5               	movf	tablat,w,c
 11613  012746  0A64               	xorlw	100
 11614  012748  B4D8               	btfsc	status,2,c
 11615  01274A  D015               	goto	u11680
 11616                           
 11617                           ;stkvar	_fmt @ sp[(-32)+-4]
 11618  01274C  0EDC               	movlw	-36
 11619  01274E  006F FF8F FFD9     	movff	plusw1,fsr2l
 11620  012754  0EDD               	movlw	-35
 11621  012756  006F FF8F FFDA     	movff	plusw1,fsr2h
 11622  01275C  006F FF7B FFF6     	movff	postinc2,tblptrl
 11623  012762  006F FF77 FFF7     	movff	postdec2,tblptrh
 11624  012768                     	if	0	;tblptru may be non-zero
 11625  012768                     	endif
 11626  012768                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11627  012768  0E00               	movlw	low (__mediumconst shr (0+16))
 11628  01276A  6EF8               	movwf	tblptru,c
 11629  01276C                     	endif
 11630  01276C  0008               	tblrd		*
 11631  01276E  50F5               	movf	tablat,w,c
 11632  012770  0A69               	xorlw	105
 11633  012772  A4D8               	btfss	status,2,c
 11634  012774  D076               	goto	l12118
 11635  012776                     u11680:
 11636                           
 11637                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 11638                           ;stkvar	_fmt @ sp[(-32)+-4]
 11639  012776  0EDC               	movlw	-36
 11640  012778  006F FF8F FFD9     	movff	plusw1,fsr2l
 11641  01277E  0EDD               	movlw	-35
 11642  012780  006F FF8F FFDA     	movff	plusw1,fsr2h
 11643  012786  2ADE               	incf	postinc2,f,c
 11644  012788  0E00               	movlw	0
 11645  01278A  22DD               	addwfc	postdec2,f,c
 11646                           
 11647                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 11648                           ;stkvar	_ap @ sp[(-32)+-6]
 11649  01278C  0EDA               	movlw	-38
 11650  01278E  006F FF8F FFD9     	movff	plusw1,fsr2l
 11651  012794  0EDB               	movlw	-37
 11652  012796  006F FF8F FFDA     	movff	plusw1,fsr2h
 11653  01279C  0E02               	movlw	2
 11654  01279E  5EDE               	subwf	postinc2,f,c
 11655  0127A0  0E00               	movlw	0
 11656  0127A2  5ADD               	subwfb	postdec2,f,c
 11657  0127A4  006F FF78  F032    	movff	postinc2,btemp+10
 11658  0127AA  006F FF74  F033    	movff	postdec2,btemp+11
 11659  0127B0  0060  F0CB  FFD9   	movff	btemp+10,fsr2l
 11660  0127B6  0060  F0CF  FFDA   	movff	btemp+11,fsr2h
 11661  0127BC  006F FF78  F032    	movff	postinc2,btemp+10
 11662  0127C2  006F FF74  F033    	movff	postdec2,btemp+11
 11663                           
 11664                           ;stkvar	_ll @ sp[(-32)+14]
 11665  0127C8  0EEE               	movlw	-18
 11666  0127CA  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 11667  0127D0  0EEF               	movlw	-17
 11668  0127D2  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 11669  0127D8  6A28               	clrf	btemp^0,c
 11670  0127DA  BEE3               	btfsc	plusw1,7,c
 11671  0127DC  6828               	setf	btemp^0,c
 11672  0127DE  0EF0               	movlw	-16
 11673  0127E0  0060  F0A3  FFE3   	movff	btemp,plusw1
 11674  0127E6  0EF1               	movlw	-15
 11675  0127E8  0060  F0A3  FFE3   	movff	btemp,plusw1
 11676  0127EE  0EF2               	movlw	-14
 11677  0127F0  0060  F0A3  FFE3   	movff	btemp,plusw1
 11678  0127F6  0EF3               	movlw	-13
 11679  0127F8  0060  F0A3  FFE3   	movff	btemp,plusw1
 11680  0127FE  0EF4               	movlw	-12
 11681  012800  0060  F0A3  FFE3   	movff	btemp,plusw1
 11682  012806  0EF5               	movlw	-11
 11683  012808  0060  F0A3  FFE3   	movff	btemp,plusw1
 11684  01280E                     l12114:
 11685                           
 11686                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
 11687                           ;stkvar	_ll @ sp[(-32)+14]
 11688  01280E  50E1               	movf	fsr1l,w,c
 11689  012810  0FEE               	addlw	-18
 11690  012812  6ED9               	movwf	fsr2l,c
 11691  012814  50E2               	movf	fsr1h,w,c
 11692  012816  6EDA               	movwf	fsr2h,c
 11693  012818  0EFF               	movlw	255
 11694  01281A  22DA               	addwfc	fsr2h,f,c
 11695  01281C  006F FF7B FFE6     	movff	postinc2,postinc1
 11696  012822  006F FF7B FFE6     	movff	postinc2,postinc1
 11697  012828  006F FF7B FFE6     	movff	postinc2,postinc1
 11698  01282E  006F FF7B FFE6     	movff	postinc2,postinc1
 11699  012834  006F FF7B FFE6     	movff	postinc2,postinc1
 11700  01283A  006F FF7B FFE6     	movff	postinc2,postinc1
 11701  012840  006F FF7B FFE6     	movff	postinc2,postinc1
 11702  012846  006F FF7B FFE6     	movff	postinc2,postinc1
 11703                           
 11704                           ;stkvar	_fp @ sp[(-40)+-2]
 11705  01284C  0ED6               	movlw	-42
 11706  01284E  006F FF8F FFE6     	movff	plusw1,postinc1
 11707  012854  006F FF8F FFE6     	movff	plusw1,postinc1
 11708  01285A  ECAE  F0A9         	call	_dtoa	;wreg free
 11709  01285E  EF0A  F099         	goto	l2330
 11710  012862                     l12118:
 11711                           
 11712                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
 11713  012862  0E02               	movlw	2
 11714  012864  6EE6               	movwf	postinc1,c
 11715  012866  0E00               	movlw	0
 11716  012868  6EE6               	movwf	postinc1,c
 11717  01286A  0EE9               	movlw	low STR_74
 11718  01286C  6EE6               	movwf	postinc1,c
 11719  01286E  0EFF               	movlw	high STR_74
 11720  012870  6EE6               	movwf	postinc1,c
 11721                           
 11722                           ;stkvar	_fmt @ sp[(-36)+-4]
 11723  012872  0ED8               	movlw	-40
 11724  012874  006F FF8F FFD9     	movff	plusw1,fsr2l
 11725  01287A  0ED9               	movlw	-39
 11726  01287C  006F FF8F FFDA     	movff	plusw1,fsr2h
 11727  012882  006F FF78  F032    	movff	postinc2,btemp+10
 11728  012888  006F FF74  F033    	movff	postdec2,btemp+11
 11729  01288E  0060  F0CB  FFE6   	movff	btemp+10,postinc1
 11730  012894  0060  F0CF  FFE6   	movff	btemp+11,postinc1
 11731  01289A  ECC1  F0BA         	call	_strncmp	;wreg free
 11732  01289E  5028               	movf	btemp^0,w,c
 11733  0128A0  1029               	iorwf	(btemp+1)^0,w,c
 11734  0128A2  B4D8               	btfsc	status,2,c
 11735  0128A4  D022               	goto	u11700
 11736  0128A6  0E02               	movlw	2
 11737  0128A8  6EE6               	movwf	postinc1,c
 11738  0128AA  0E00               	movlw	0
 11739  0128AC  6EE6               	movwf	postinc1,c
 11740  0128AE  0EEF               	movlw	low STR_78
 11741  0128B0  6EE6               	movwf	postinc1,c
 11742  0128B2  0EFF               	movlw	high STR_78
 11743  0128B4  6EE6               	movwf	postinc1,c
 11744                           
 11745                           ;stkvar	_fmt @ sp[(-36)+-4]
 11746  0128B6  0ED8               	movlw	-40
 11747  0128B8  006F FF8F FFD9     	movff	plusw1,fsr2l
 11748  0128BE  0ED9               	movlw	-39
 11749  0128C0  006F FF8F FFDA     	movff	plusw1,fsr2h
 11750  0128C6  006F FF78  F032    	movff	postinc2,btemp+10
 11751  0128CC  006F FF74  F033    	movff	postdec2,btemp+11
 11752  0128D2  0060  F0CB  FFE6   	movff	btemp+10,postinc1
 11753  0128D8  0060  F0CF  FFE6   	movff	btemp+11,postinc1
 11754  0128DE  ECC1  F0BA         	call	_strncmp	;wreg free
 11755  0128E2  5028               	movf	btemp^0,w,c
 11756  0128E4  1029               	iorwf	(btemp+1)^0,w,c
 11757  0128E6  A4D8               	btfss	status,2,c
 11758  0128E8  D069               	goto	l12130
 11759  0128EA                     u11700:
 11760                           
 11761                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
 11762                           ;stkvar	_fmt @ sp[(-32)+-4]
 11763  0128EA  0EDC               	movlw	-36
 11764  0128EC  006F FF8F FFD9     	movff	plusw1,fsr2l
 11765  0128F2  0EDD               	movlw	-35
 11766  0128F4  006F FF8F FFDA     	movff	plusw1,fsr2h
 11767  0128FA  0E02               	movlw	2
 11768  0128FC  26DE               	addwf	postinc2,f,c
 11769  0128FE  0E00               	movlw	0
 11770  012900  22DD               	addwfc	postdec2,f,c
 11771                           
 11772                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
 11773                           ;stkvar	_ap @ sp[(-32)+-6]
 11774  012902  0EDA               	movlw	-38
 11775  012904  006F FF8F FFD9     	movff	plusw1,fsr2l
 11776  01290A  0EDB               	movlw	-37
 11777  01290C  006F FF8F FFDA     	movff	plusw1,fsr2h
 11778  012912  0E04               	movlw	4
 11779  012914  5EDE               	subwf	postinc2,f,c
 11780  012916  0E00               	movlw	0
 11781  012918  5ADD               	subwfb	postdec2,f,c
 11782  01291A  006F FF78  F032    	movff	postinc2,btemp+10
 11783  012920  006F FF74  F033    	movff	postdec2,btemp+11
 11784  012926  0060  F0CB  FFD9   	movff	btemp+10,fsr2l
 11785  01292C  0060  F0CF  FFDA   	movff	btemp+11,fsr2h
 11786  012932  006F FF78  F030    	movff	postinc2,btemp+8
 11787  012938  006F FF78  F031    	movff	postinc2,btemp+9
 11788  01293E  006F FF78  F032    	movff	postinc2,btemp+10
 11789  012944  006F FF78  F033    	movff	postinc2,btemp+11
 11790  01294A  0060  F0C0  F038   	movff	btemp+8,btemp+16
 11791  012950  0060  F0C4  F039   	movff	btemp+9,btemp+17
 11792  012956  0060  F0C8  F03A   	movff	btemp+10,btemp+18
 11793  01295C  0060  F0CC  F03B   	movff	btemp+11,btemp+19
 11794  012962  6A3C               	clrf	(btemp+20)^0,c
 11795  012964  BE3B               	btfsc	(btemp+19)^0,7,c
 11796  012966  683C               	setf	(btemp+20)^0,c
 11797  012968  0060  F0F0  F03D   	movff	btemp+20,btemp+21
 11798  01296E  0060  F0F0  F03E   	movff	btemp+20,btemp+22
 11799  012974  0060  F0F0  F03F   	movff	btemp+20,btemp+23
 11800                           
 11801                           ;stkvar	_ll @ sp[(-32)+14]
 11802  01297A  0EEE               	movlw	-18
 11803  01297C  0060  F0E3  FFE3   	movff	btemp+16,plusw1
 11804  012982  0EEF               	movlw	-17
 11805  012984  0060  F0E7  FFE3   	movff	btemp+17,plusw1
 11806  01298A  0EF0               	movlw	-16
 11807  01298C  0060  F0EB  FFE3   	movff	btemp+18,plusw1
 11808  012992  0EF1               	movlw	-15
 11809  012994  0060  F0EF  FFE3   	movff	btemp+19,plusw1
 11810  01299A  0EF2               	movlw	-14
 11811  01299C  0060  F0F3  FFE3   	movff	btemp+20,plusw1
 11812  0129A2  0EF3               	movlw	-13
 11813  0129A4  0060  F0F7  FFE3   	movff	btemp+21,plusw1
 11814  0129AA  0EF4               	movlw	-12
 11815  0129AC  0060  F0FB  FFE3   	movff	btemp+22,plusw1
 11816  0129B2  0EF5               	movlw	-11
 11817  0129B4  0060  F0FF  FFE3   	movff	btemp+23,plusw1
 11818  0129BA  D729               	goto	l12114
 11819  0129BC                     l12130:
 11820                           
 11821                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
 11822                           ;stkvar	_ct @ sp[(-32)+26]
 11823  0129BC  0EFA               	movlw	-6
 11824  0129BE  006F FF8C  F028    	movff	plusw1,btemp
 11825  0129C4  0E66               	movlw	102
 11826  0129C6  1828               	xorwf	btemp^0,w,c
 11827  0129C8  A4D8               	btfss	status,2,c
 11828  0129CA  D06E               	goto	l12142
 11829                           
 11830                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
 11831                           ;stkvar	_fmt @ sp[(-32)+-4]
 11832  0129CC  0EDC               	movlw	-36
 11833  0129CE  006F FF8F FFD9     	movff	plusw1,fsr2l
 11834  0129D4  0EDD               	movlw	-35
 11835  0129D6  006F FF8F FFDA     	movff	plusw1,fsr2h
 11836  0129DC  006F FF7B FFF6     	movff	postinc2,tblptrl
 11837  0129E2  006F FF77 FFF7     	movff	postdec2,tblptrh
 11838  0129E8                     	if	0	;tblptru may be non-zero
 11839  0129E8                     	endif
 11840  0129E8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11841  0129E8  0E00               	movlw	low (__mediumconst shr (0+16))
 11842  0129EA  6EF8               	movwf	tblptru,c
 11843  0129EC                     	endif
 11844                           
 11845                           ;stkvar	_c @ sp[(-32)+31]
 11846  0129EC  0008               	tblrd		*
 11847  0129EE  0EFF               	movlw	-1
 11848  0129F0  006F FFD7 FFE3     	movff	tablat,plusw1
 11849                           
 11850                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
 11851                           ;stkvar	_fmt @ sp[(-32)+-4]
 11852  0129F6  0EDC               	movlw	-36
 11853  0129F8  006F FF8F FFD9     	movff	plusw1,fsr2l
 11854  0129FE  0EDD               	movlw	-35
 11855  012A00  006F FF8F FFDA     	movff	plusw1,fsr2h
 11856  012A06  2ADE               	incf	postinc2,f,c
 11857  012A08  0E00               	movlw	0
 11858  012A0A  22DD               	addwfc	postdec2,f,c
 11859                           
 11860                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
 11861                           ;stkvar	_ap @ sp[(-32)+-6]
 11862  012A0C  0EDA               	movlw	-38
 11863  012A0E  006F FF8F FFD9     	movff	plusw1,fsr2l
 11864  012A14  0EDB               	movlw	-37
 11865  012A16  006F FF8F FFDA     	movff	plusw1,fsr2h
 11866  012A1C  0E04               	movlw	4
 11867  012A1E  5EDE               	subwf	postinc2,f,c
 11868  012A20  0E00               	movlw	0
 11869  012A22  5ADD               	subwfb	postdec2,f,c
 11870  012A24  006F FF78  F032    	movff	postinc2,btemp+10
 11871  012A2A  006F FF74  F033    	movff	postdec2,btemp+11
 11872  012A30  0060  F0CB  FFD9   	movff	btemp+10,fsr2l
 11873  012A36  0060  F0CF  FFDA   	movff	btemp+11,fsr2h
 11874  012A3C  006F FF78  F030    	movff	postinc2,btemp+8
 11875  012A42  006F FF78  F031    	movff	postinc2,btemp+9
 11876  012A48  006F FF78  F032    	movff	postinc2,btemp+10
 11877  012A4E  006F FF78  F033    	movff	postinc2,btemp+11
 11878                           
 11879                           ;stkvar	_f @ sp[(-32)+22]
 11880  012A54  0EF6               	movlw	-10
 11881  012A56  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 11882  012A5C  0EF7               	movlw	-9
 11883  012A5E  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 11884  012A64  0EF8               	movlw	-8
 11885  012A66  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 11886  012A6C  0EF9               	movlw	-7
 11887  012A6E  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 11888  012A74                     l12138:
 11889                           
 11890                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
 11891                           ;stkvar	_c @ sp[(-32)+31]
 11892  012A74  0EFF               	movlw	-1
 11893  012A76  50E3               	movf	plusw1,w,c
 11894  012A78  6EE6               	movwf	postinc1,c
 11895                           
 11896                           ;stkvar	_f @ sp[(-33)+22]
 11897  012A7A  0EF5               	movlw	-11
 11898  012A7C  006F FF8F FFE6     	movff	plusw1,postinc1
 11899  012A82  006F FF8F FFE6     	movff	plusw1,postinc1
 11900  012A88  006F FF8F FFE6     	movff	plusw1,postinc1
 11901  012A8E  006F FF8F FFE6     	movff	plusw1,postinc1
 11902                           
 11903                           ;stkvar	_fp @ sp[(-37)+-2]
 11904  012A94  0ED9               	movlw	-39
 11905  012A96  006F FF8F FFE6     	movff	plusw1,postinc1
 11906  012A9C  006F FF8F FFE6     	movff	plusw1,postinc1
 11907  012AA2  EC00  F080         	call	_efgtoa	;wreg free
 11908  012AA6  D3B6               	goto	l2330
 11909  012AA8                     l12142:
 11910                           
 11911                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 11912  012AA8  0E02               	movlw	2
 11913  012AAA  6EE6               	movwf	postinc1,c
 11914  012AAC  0E00               	movlw	0
 11915  012AAE  6EE6               	movwf	postinc1,c
 11916  012AB0  0EEC               	movlw	low STR_83
 11917  012AB2  6EE6               	movwf	postinc1,c
 11918  012AB4  0EFF               	movlw	high STR_83
 11919  012AB6  6EE6               	movwf	postinc1,c
 11920                           
 11921                           ;stkvar	_ct @ sp[(-36)+26]
 11922  012AB8  0EF6               	movlw	246
 11923  012ABA  24E1               	addwf	fsr1l,w,c
 11924  012ABC  6E28               	movwf	btemp^0,c
 11925  012ABE  0EFF               	movlw	255
 11926  012AC0  20E2               	addwfc	fsr1h,w,c
 11927  012AC2  6E29               	movwf	(btemp+1)^0,c
 11928  012AC4  0060  F0A3  FFE6   	movff	btemp,postinc1
 11929  012ACA  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 11930  012AD0  ECC1  F0BA         	call	_strncmp	;wreg free
 11931  012AD4  5028               	movf	btemp^0,w,c
 11932  012AD6  1029               	iorwf	(btemp+1)^0,w,c
 11933  012AD8  A4D8               	btfss	status,2,c
 11934  012ADA  D096               	goto	l12162
 11935                           
 11936                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 11937                           ;stkvar	_fmt @ sp[(-32)+-4]
 11938  012ADC  0EDC               	movlw	-36
 11939  012ADE  006F FF8F FFD9     	movff	plusw1,fsr2l
 11940  012AE4  0EDD               	movlw	-35
 11941  012AE6  006F FF8F FFDA     	movff	plusw1,fsr2h
 11942  012AEC  006F FF78  F032    	movff	postinc2,btemp+10
 11943  012AF2  006F FF74  F033    	movff	postdec2,btemp+11
 11944  012AF8  0E01               	movlw	1
 11945  012AFA  2632               	addwf	(btemp+10)^0,f,c
 11946  012AFC  0E00               	movlw	0
 11947  012AFE  2233               	addwfc	(btemp+11)^0,f,c
 11948  012B00  0060  F0CB  FFF6   	movff	btemp+10,tblptrl
 11949  012B06  0060  F0CF  FFF7   	movff	btemp+11,tblptrh
 11950  012B0C                     	if	0	;tblptru may be non-zero
 11951  012B0C                     	endif
 11952  012B0C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11953  012B0C  0E00               	movlw	low (__mediumconst shr (0+16))
 11954  012B0E  6EF8               	movwf	tblptru,c
 11955  012B10                     	endif
 11956                           
 11957                           ;stkvar	_c @ sp[(-32)+31]
 11958  012B10  0008               	tblrd		*
 11959  012B12  0EFF               	movlw	-1
 11960  012B14  006F FFD7 FFE3     	movff	tablat,plusw1
 11961  012B1A  0EBF               	movlw	191
 11962  012B1C  6E32               	movwf	(btemp+10)^0,c
 11963  012B1E  0EFF               	movlw	255
 11964  012B20  6E33               	movwf	(btemp+11)^0,c
 11965                           
 11966                           ;stkvar	_fmt @ sp[(-32)+-4]
 11967  012B22  0EDC               	movlw	-36
 11968  012B24  006F FF8F FFD9     	movff	plusw1,fsr2l
 11969  012B2A  0EDD               	movlw	-35
 11970  012B2C  006F FF8F FFDA     	movff	plusw1,fsr2h
 11971  012B32  006F FF7B FFF6     	movff	postinc2,tblptrl
 11972  012B38  006F FF77 FFF7     	movff	postdec2,tblptrh
 11973  012B3E                     	if	0	;tblptru may be non-zero
 11974  012B3E                     	endif
 11975  012B3E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11976  012B3E  0E00               	movlw	low (__mediumconst shr (0+16))
 11977  012B40  6EF8               	movwf	tblptru,c
 11978  012B42                     	endif
 11979  012B42  0008               	tblrd		*
 11980  012B44  50F5               	movf	tablat,w,c
 11981  012B46  6E30               	movwf	(btemp+8)^0,c
 11982  012B48  6A31               	clrf	(btemp+9)^0,c
 11983  012B4A  5032               	movf	(btemp+10)^0,w,c
 11984  012B4C  2630               	addwf	(btemp+8)^0,f,c
 11985  012B4E  5033               	movf	(btemp+11)^0,w,c
 11986  012B50  2231               	addwfc	(btemp+9)^0,f,c
 11987  012B52  5031               	movf	(btemp+9)^0,w,c
 11988  012B54  E106               	bnz	u11730
 11989  012B56  0E1A               	movlw	26
 11990  012B58  5C30               	subwf	(btemp+8)^0,w,c
 11991  012B5A  B0D8               	btfsc	status,0,c
 11992  012B5C  D002               	goto	u11730
 11993  012B5E  0E01               	movlw	1
 11994  012B60  D001               	goto	u11740
 11995  012B62                     u11730:
 11996  012B62  0E00               	movlw	0
 11997  012B64                     u11740:
 11998  012B64  6E32               	movwf	(btemp+10)^0,c
 11999  012B66  6A33               	clrf	(btemp+11)^0,c
 12000                           
 12001                           ;stkvar	_vfpfcnvrt$5446 @ sp[(-32)+2]
 12002  012B68  0EE2               	movlw	-30
 12003  012B6A  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 12004  012B70  0EE3               	movlw	-29
 12005  012B72  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 12006                           
 12007                           ;stkvar	_vfpfcnvrt$5446 @ sp[(-32)+2]
 12008  012B78  0EE2               	movlw	-30
 12009  012B7A  006F FF8C  F028    	movff	plusw1,btemp
 12010  012B80  0EE3               	movlw	-29
 12011  012B82  50E3               	movf	plusw1,w,c
 12012  012B84  1028               	iorwf	btemp^0,w,c
 12013                           
 12014                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
 12015                           ;stkvar	_ap @ sp[(-32)+-6]
 12016                           
 12017                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
 12018                           
 12019                           ;stkvar	_f @ sp[(-32)+22]
 12020                           
 12021                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
 12022                           ;stkvar	_ap @ sp[(-32)+-6]
 12023  012B86  0EDA               	movlw	-38
 12024  012B88  006F FF8F FFD9     	movff	plusw1,fsr2l
 12025  012B8E  0EDB               	movlw	-37
 12026  012B90  006F FF8F FFDA     	movff	plusw1,fsr2h
 12027  012B96  0E04               	movlw	4
 12028  012B98  5EDE               	subwf	postinc2,f,c
 12029  012B9A  0E00               	movlw	0
 12030  012B9C  5ADD               	subwfb	postdec2,f,c
 12031  012B9E  006F FF78  F032    	movff	postinc2,btemp+10
 12032  012BA4  006F FF74  F033    	movff	postdec2,btemp+11
 12033  012BAA  0060  F0CB  FFD9   	movff	btemp+10,fsr2l
 12034  012BB0  0060  F0CF  FFDA   	movff	btemp+11,fsr2h
 12035  012BB6  006F FF78  F030    	movff	postinc2,btemp+8
 12036  012BBC  006F FF78  F031    	movff	postinc2,btemp+9
 12037  012BC2  006F FF78  F032    	movff	postinc2,btemp+10
 12038  012BC8  006F FF78  F033    	movff	postinc2,btemp+11
 12039                           
 12040                           ;stkvar	_f @ sp[(-32)+22]
 12041  012BCE  0EF6               	movlw	-10
 12042  012BD0  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 12043  012BD6  0EF7               	movlw	-9
 12044  012BD8  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 12045  012BDE  0EF8               	movlw	-8
 12046  012BE0  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 12047  012BE6  0EF9               	movlw	-7
 12048  012BE8  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 12049                           
 12050                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
 12051                           ;stkvar	_fmt @ sp[(-32)+-4]
 12052  012BEE  0EDC               	movlw	-36
 12053  012BF0  006F FF8F FFD9     	movff	plusw1,fsr2l
 12054  012BF6  0EDD               	movlw	-35
 12055  012BF8  006F FF8F FFDA     	movff	plusw1,fsr2h
 12056  012BFE  0E02               	movlw	2
 12057  012C00  26DE               	addwf	postinc2,f,c
 12058  012C02  0E00               	movlw	0
 12059  012C04  22DD               	addwfc	postdec2,f,c
 12060  012C06  D736               	goto	l12138
 12061  012C08                     l12162:
 12062                           
 12063                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 12064                           ;stkvar	_fmt @ sp[(-32)+-4]
 12065  012C08  0EDC               	movlw	-36
 12066  012C0A  006F FF8F FFD9     	movff	plusw1,fsr2l
 12067  012C10  0EDD               	movlw	-35
 12068  012C12  006F FF8F FFDA     	movff	plusw1,fsr2h
 12069  012C18  006F FF7B FFF6     	movff	postinc2,tblptrl
 12070  012C1E  006F FF77 FFF7     	movff	postdec2,tblptrh
 12071  012C24                     	if	0	;tblptru may be non-zero
 12072  012C24                     	endif
 12073  012C24                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12074  012C24  0E00               	movlw	low (__mediumconst shr (0+16))
 12075  012C26  6EF8               	movwf	tblptru,c
 12076  012C28                     	endif
 12077  012C28  0008               	tblrd		*
 12078  012C2A  50F5               	movf	tablat,w,c
 12079  012C2C  0A73               	xorlw	115
 12080  012C2E  A4D8               	btfss	status,2,c
 12081  012C30  D042               	goto	l12172
 12082                           
 12083                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 12084                           ;stkvar	_fmt @ sp[(-32)+-4]
 12085  012C32  0EDC               	movlw	-36
 12086  012C34  006F FF8F FFD9     	movff	plusw1,fsr2l
 12087  012C3A  0EDD               	movlw	-35
 12088  012C3C  006F FF8F FFDA     	movff	plusw1,fsr2h
 12089  012C42  2ADE               	incf	postinc2,f,c
 12090  012C44  0E00               	movlw	0
 12091  012C46  22DD               	addwfc	postdec2,f,c
 12092                           
 12093                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 12094                           ;stkvar	_ap @ sp[(-32)+-6]
 12095  012C48  0EDA               	movlw	-38
 12096  012C4A  006F FF8F FFD9     	movff	plusw1,fsr2l
 12097  012C50  0EDB               	movlw	-37
 12098  012C52  006F FF8F FFDA     	movff	plusw1,fsr2h
 12099  012C58  0E02               	movlw	2
 12100  012C5A  5EDE               	subwf	postinc2,f,c
 12101  012C5C  0E00               	movlw	0
 12102  012C5E  5ADD               	subwfb	postdec2,f,c
 12103  012C60  006F FF78  F032    	movff	postinc2,btemp+10
 12104  012C66  006F FF74  F033    	movff	postdec2,btemp+11
 12105  012C6C  0060  F0CB  FFD9   	movff	btemp+10,fsr2l
 12106  012C72  0060  F0CF  FFDA   	movff	btemp+11,fsr2h
 12107  012C78  006F FF78  F032    	movff	postinc2,btemp+10
 12108  012C7E  006F FF74  F033    	movff	postdec2,btemp+11
 12109                           
 12110                           ;stkvar	_cp @ sp[(-32)+29]
 12111  012C84  0EFE               	movlw	-2
 12112  012C86  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 12113  012C8C  0EFD               	movlw	-3
 12114  012C8E  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 12115                           
 12116                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 12117                           ;stkvar	_cp @ sp[(-32)+29]
 12118  012C94  0EFD               	movlw	-3
 12119  012C96  006F FF8F FFE6     	movff	plusw1,postinc1
 12120  012C9C  006F FF8F FFE6     	movff	plusw1,postinc1
 12121                           
 12122                           ;stkvar	_fp @ sp[(-34)+-2]
 12123  012CA2  0EDC               	movlw	-36
 12124  012CA4  006F FF8F FFE6     	movff	plusw1,postinc1
 12125  012CAA  006F FF8F FFE6     	movff	plusw1,postinc1
 12126  012CB0  ECC8  F0B5         	call	_stoa	;wreg free
 12127  012CB4  D2AF               	goto	l2330
 12128  012CB6                     l12172:
 12129                           
 12130                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
 12131                           ;stkvar	_fmt @ sp[(-32)+-4]
 12132  012CB6  0EDC               	movlw	-36
 12133  012CB8  006F FF8F FFD9     	movff	plusw1,fsr2l
 12134  012CBE  0EDD               	movlw	-35
 12135  012CC0  006F FF8F FFDA     	movff	plusw1,fsr2h
 12136  012CC6  006F FF7B FFF6     	movff	postinc2,tblptrl
 12137  012CCC  006F FF77 FFF7     	movff	postdec2,tblptrh
 12138  012CD2                     	if	0	;tblptru may be non-zero
 12139  012CD2                     	endif
 12140  012CD2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12141  012CD2  0E00               	movlw	low (__mediumconst shr (0+16))
 12142  012CD4  6EF8               	movwf	tblptru,c
 12143  012CD6                     	endif
 12144  012CD6  0008               	tblrd		*
 12145  012CD8  50F5               	movf	tablat,w,c
 12146  012CDA  0A75               	xorlw	117
 12147  012CDC  A4D8               	btfss	status,2,c
 12148  012CDE  D07C               	goto	l12182
 12149                           
 12150                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
 12151                           ;stkvar	_fmt @ sp[(-32)+-4]
 12152  012CE0  0EDC               	movlw	-36
 12153  012CE2  006F FF8F FFD9     	movff	plusw1,fsr2l
 12154  012CE8  0EDD               	movlw	-35
 12155  012CEA  006F FF8F FFDA     	movff	plusw1,fsr2h
 12156  012CF0  2ADE               	incf	postinc2,f,c
 12157  012CF2  0E00               	movlw	0
 12158  012CF4  22DD               	addwfc	postdec2,f,c
 12159                           
 12160                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1185:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 12161                           ;stkvar	_ap @ sp[(-32)+-6]
 12162  012CF6  0EDA               	movlw	-38
 12163  012CF8  006F FF8F FFD9     	movff	plusw1,fsr2l
 12164  012CFE  0EDB               	movlw	-37
 12165  012D00  006F FF8F FFDA     	movff	plusw1,fsr2h
 12166  012D06  0E02               	movlw	2
 12167  012D08  5EDE               	subwf	postinc2,f,c
 12168  012D0A  0E00               	movlw	0
 12169  012D0C  5ADD               	subwfb	postdec2,f,c
 12170  012D0E  006F FF78  F032    	movff	postinc2,btemp+10
 12171  012D14  006F FF74  F033    	movff	postdec2,btemp+11
 12172  012D1A  0060  F0CB  FFD9   	movff	btemp+10,fsr2l
 12173  012D20  0060  F0CF  FFDA   	movff	btemp+11,fsr2h
 12174  012D26  006F FF78  F032    	movff	postinc2,btemp+10
 12175  012D2C  006F FF74  F033    	movff	postdec2,btemp+11
 12176  012D32  5032               	movf	(btemp+10)^0,w,c
 12177  012D34  6E38               	movwf	(btemp+16)^0,c
 12178  012D36  5033               	movf	(btemp+11)^0,w,c
 12179  012D38  6E39               	movwf	(btemp+17)^0,c
 12180  012D3A  6A3A               	clrf	(btemp+18)^0,c
 12181  012D3C  6A3B               	clrf	(btemp+19)^0,c
 12182  012D3E  6A3C               	clrf	(btemp+20)^0,c
 12183  012D40  6A3D               	clrf	(btemp+21)^0,c
 12184  012D42  6A3E               	clrf	(btemp+22)^0,c
 12185  012D44  6A3F               	clrf	(btemp+23)^0,c
 12186                           
 12187                           ;stkvar	_llu @ sp[(-32)+6]
 12188  012D46  0EE6               	movlw	-26
 12189  012D48  0060  F0E3  FFE3   	movff	btemp+16,plusw1
 12190  012D4E  0EE7               	movlw	-25
 12191  012D50  0060  F0E7  FFE3   	movff	btemp+17,plusw1
 12192  012D56  0EE8               	movlw	-24
 12193  012D58  0060  F0EB  FFE3   	movff	btemp+18,plusw1
 12194  012D5E  0EE9               	movlw	-23
 12195  012D60  0060  F0EF  FFE3   	movff	btemp+19,plusw1
 12196  012D66  0EEA               	movlw	-22
 12197  012D68  0060  F0F3  FFE3   	movff	btemp+20,plusw1
 12198  012D6E  0EEB               	movlw	-21
 12199  012D70  0060  F0F7  FFE3   	movff	btemp+21,plusw1
 12200  012D76  0EEC               	movlw	-20
 12201  012D78  0060  F0FB  FFE3   	movff	btemp+22,plusw1
 12202  012D7E  0EED               	movlw	-19
 12203  012D80  0060  F0FF  FFE3   	movff	btemp+23,plusw1
 12204                           
 12205                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1187:             return utoa
      +                          (fp, llu);
 12206                           ;stkvar	_llu @ sp[(-32)+6]
 12207  012D86  50E1               	movf	fsr1l,w,c
 12208  012D88  0FE6               	addlw	-26
 12209  012D8A  6ED9               	movwf	fsr2l,c
 12210  012D8C  50E2               	movf	fsr1h,w,c
 12211  012D8E  6EDA               	movwf	fsr2h,c
 12212  012D90  0EFF               	movlw	255
 12213  012D92  22DA               	addwfc	fsr2h,f,c
 12214  012D94  006F FF7B FFE6     	movff	postinc2,postinc1
 12215  012D9A  006F FF7B FFE6     	movff	postinc2,postinc1
 12216  012DA0  006F FF7B FFE6     	movff	postinc2,postinc1
 12217  012DA6  006F FF7B FFE6     	movff	postinc2,postinc1
 12218  012DAC  006F FF7B FFE6     	movff	postinc2,postinc1
 12219  012DB2  006F FF7B FFE6     	movff	postinc2,postinc1
 12220  012DB8  006F FF7B FFE6     	movff	postinc2,postinc1
 12221  012DBE  006F FF7B FFE6     	movff	postinc2,postinc1
 12222                           
 12223                           ;stkvar	_fp @ sp[(-40)+-2]
 12224  012DC4  0ED6               	movlw	-42
 12225  012DC6  006F FF8F FFE6     	movff	plusw1,postinc1
 12226  012DCC  006F FF8F FFE6     	movff	plusw1,postinc1
 12227  012DD2  EC52  F0B1         	call	_utoa	;wreg free
 12228  012DD6  D21E               	goto	l2330
 12229  012DD8                     l12182:
 12230                           
 12231                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 12232  012DD8  0E02               	movlw	2
 12233  012DDA  6EE6               	movwf	postinc1,c
 12234  012DDC  0E00               	movlw	0
 12235  012DDE  6EE6               	movwf	postinc1,c
 12236  012DE0  0EF2               	movlw	low STR_88
 12237  012DE2  6EE6               	movwf	postinc1,c
 12238  012DE4  0EFF               	movlw	high STR_88
 12239  012DE6  6EE6               	movwf	postinc1,c
 12240                           
 12241                           ;stkvar	_fmt @ sp[(-36)+-4]
 12242  012DE8  0ED8               	movlw	-40
 12243  012DEA  006F FF8F FFD9     	movff	plusw1,fsr2l
 12244  012DF0  0ED9               	movlw	-39
 12245  012DF2  006F FF8F FFDA     	movff	plusw1,fsr2h
 12246  012DF8  006F FF78  F032    	movff	postinc2,btemp+10
 12247  012DFE  006F FF74  F033    	movff	postdec2,btemp+11
 12248  012E04  0060  F0CB  FFE6   	movff	btemp+10,postinc1
 12249  012E0A  0060  F0CF  FFE6   	movff	btemp+11,postinc1
 12250  012E10  ECC1  F0BA         	call	_strncmp	;wreg free
 12251  012E14  5028               	movf	btemp^0,w,c
 12252  012E16  1029               	iorwf	(btemp+1)^0,w,c
 12253  012E18  A4D8               	btfss	status,2,c
 12254  012E1A  D039               	goto	l12192
 12255                           
 12256                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
 12257                           ;stkvar	_fmt @ sp[(-32)+-4]
 12258  012E1C  0EDC               	movlw	-36
 12259  012E1E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12260  012E24  0EDD               	movlw	-35
 12261  012E26  006F FF8F FFDA     	movff	plusw1,fsr2h
 12262  012E2C  0E02               	movlw	2
 12263  012E2E  26DE               	addwf	postinc2,f,c
 12264  012E30  0E00               	movlw	0
 12265  012E32  22DD               	addwfc	postdec2,f,c
 12266                           
 12267                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 12268                           ;stkvar	_ap @ sp[(-32)+-6]
 12269  012E34  0EDA               	movlw	-38
 12270  012E36  006F FF8F FFD9     	movff	plusw1,fsr2l
 12271  012E3C  0EDB               	movlw	-37
 12272  012E3E  006F FF8F FFDA     	movff	plusw1,fsr2h
 12273  012E44  0E04               	movlw	4
 12274  012E46  5EDE               	subwf	postinc2,f,c
 12275  012E48  0E00               	movlw	0
 12276  012E4A  5ADD               	subwfb	postdec2,f,c
 12277  012E4C  006F FF78  F032    	movff	postinc2,btemp+10
 12278  012E52  006F FF74  F033    	movff	postdec2,btemp+11
 12279  012E58  0060  F0CB  FFD9   	movff	btemp+10,fsr2l
 12280  012E5E  0060  F0CF  FFDA   	movff	btemp+11,fsr2h
 12281  012E64  006F FF78  F030    	movff	postinc2,btemp+8
 12282  012E6A  006F FF78  F031    	movff	postinc2,btemp+9
 12283  012E70  006F FF78  F032    	movff	postinc2,btemp+10
 12284  012E76  006F FF78  F033    	movff	postinc2,btemp+11
 12285  012E7C  5030               	movf	(btemp+8)^0,w,c
 12286  012E7E  6E38               	movwf	(btemp+16)^0,c
 12287  012E80  5031               	movf	(btemp+9)^0,w,c
 12288  012E82  6E39               	movwf	(btemp+17)^0,c
 12289  012E84  5032               	movf	(btemp+10)^0,w,c
 12290  012E86  6E3A               	movwf	(btemp+18)^0,c
 12291  012E88  5033               	movf	(btemp+11)^0,w,c
 12292  012E8A  6E3B               	movwf	(btemp+19)^0,c
 12293  012E8C  D758               	goto	L8
 12294  012E8E                     l12192:
 12295                           
 12296                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
 12297                           ;stkvar	_fmt @ sp[(-32)+-4]
 12298  012E8E  0EDC               	movlw	-36
 12299  012E90  006F FF8F FFD9     	movff	plusw1,fsr2l
 12300  012E96  0EDD               	movlw	-35
 12301  012E98  006F FF8F FFDA     	movff	plusw1,fsr2h
 12302  012E9E  006F FF7B FFF6     	movff	postinc2,tblptrl
 12303  012EA4  006F FF77 FFF7     	movff	postdec2,tblptrh
 12304  012EAA                     	if	0	;tblptru may be non-zero
 12305  012EAA                     	endif
 12306  012EAA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12307  012EAA  0E00               	movlw	low (__mediumconst shr (0+16))
 12308  012EAC  6EF8               	movwf	tblptru,c
 12309  012EAE                     	endif
 12310  012EAE  0008               	tblrd		*
 12311  012EB0  50F5               	movf	tablat,w,c
 12312  012EB2  0A78               	xorlw	120
 12313  012EB4  B4D8               	btfsc	status,2,c
 12314  012EB6  D015               	goto	u11800
 12315                           
 12316                           ;stkvar	_fmt @ sp[(-32)+-4]
 12317  012EB8  0EDC               	movlw	-36
 12318  012EBA  006F FF8F FFD9     	movff	plusw1,fsr2l
 12319  012EC0  0EDD               	movlw	-35
 12320  012EC2  006F FF8F FFDA     	movff	plusw1,fsr2h
 12321  012EC8  006F FF7B FFF6     	movff	postinc2,tblptrl
 12322  012ECE  006F FF77 FFF7     	movff	postdec2,tblptrh
 12323  012ED4                     	if	0	;tblptru may be non-zero
 12324  012ED4                     	endif
 12325  012ED4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12326  012ED4  0E00               	movlw	low (__mediumconst shr (0+16))
 12327  012ED6  6EF8               	movwf	tblptru,c
 12328  012ED8                     	endif
 12329  012ED8  0008               	tblrd		*
 12330  012EDA  50F5               	movf	tablat,w,c
 12331  012EDC  0A58               	xorlw	88
 12332  012EDE  A4D8               	btfss	status,2,c
 12333  012EE0  D094               	goto	l12206
 12334  012EE2                     u11800:
 12335                           
 12336                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
 12337                           ;stkvar	_fmt @ sp[(-32)+-4]
 12338  012EE2  0EDC               	movlw	-36
 12339  012EE4  006F FF8F FFD9     	movff	plusw1,fsr2l
 12340  012EEA  0EDD               	movlw	-35
 12341  012EEC  006F FF8F FFDA     	movff	plusw1,fsr2h
 12342  012EF2  006F FF7B FFF6     	movff	postinc2,tblptrl
 12343  012EF8  006F FF77 FFF7     	movff	postdec2,tblptrh
 12344  012EFE                     	if	0	;tblptru may be non-zero
 12345  012EFE                     	endif
 12346  012EFE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12347  012EFE  0E00               	movlw	low (__mediumconst shr (0+16))
 12348  012F00  6EF8               	movwf	tblptru,c
 12349  012F02                     	endif
 12350                           
 12351                           ;stkvar	_c @ sp[(-32)+31]
 12352  012F02  0008               	tblrd		*
 12353  012F04  0EFF               	movlw	-1
 12354  012F06  006F FFD7 FFE3     	movff	tablat,plusw1
 12355                           
 12356                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
 12357                           ;stkvar	_fmt @ sp[(-32)+-4]
 12358  012F0C  0EDC               	movlw	-36
 12359  012F0E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12360  012F14  0EDD               	movlw	-35
 12361  012F16  006F FF8F FFDA     	movff	plusw1,fsr2h
 12362  012F1C  2ADE               	incf	postinc2,f,c
 12363  012F1E  0E00               	movlw	0
 12364  012F20  22DD               	addwfc	postdec2,f,c
 12365                           
 12366                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 12367                           ;stkvar	_ap @ sp[(-32)+-6]
 12368  012F22  0EDA               	movlw	-38
 12369  012F24  006F FF8F FFD9     	movff	plusw1,fsr2l
 12370  012F2A  0EDB               	movlw	-37
 12371  012F2C  006F FF8F FFDA     	movff	plusw1,fsr2h
 12372  012F32  0E02               	movlw	2
 12373  012F34  5EDE               	subwf	postinc2,f,c
 12374  012F36  0E00               	movlw	0
 12375  012F38  5ADD               	subwfb	postdec2,f,c
 12376  012F3A  006F FF78  F032    	movff	postinc2,btemp+10
 12377  012F40  006F FF74  F033    	movff	postdec2,btemp+11
 12378  012F46  0060  F0CB  FFD9   	movff	btemp+10,fsr2l
 12379  012F4C  0060  F0CF  FFDA   	movff	btemp+11,fsr2h
 12380  012F52  006F FF78  F032    	movff	postinc2,btemp+10
 12381  012F58  006F FF74  F033    	movff	postdec2,btemp+11
 12382  012F5E  5032               	movf	(btemp+10)^0,w,c
 12383  012F60  6E38               	movwf	(btemp+16)^0,c
 12384  012F62  5033               	movf	(btemp+11)^0,w,c
 12385  012F64  6E39               	movwf	(btemp+17)^0,c
 12386  012F66  6A3A               	clrf	(btemp+18)^0,c
 12387  012F68  6A3B               	clrf	(btemp+19)^0,c
 12388  012F6A  6A3C               	clrf	(btemp+20)^0,c
 12389  012F6C  6A3D               	clrf	(btemp+21)^0,c
 12390  012F6E  6A3E               	clrf	(btemp+22)^0,c
 12391  012F70  6A3F               	clrf	(btemp+23)^0,c
 12392                           
 12393                           ;stkvar	_llu @ sp[(-32)+6]
 12394  012F72  0EE6               	movlw	-26
 12395  012F74  0060  F0E3  FFE3   	movff	btemp+16,plusw1
 12396  012F7A  0EE7               	movlw	-25
 12397  012F7C  0060  F0E7  FFE3   	movff	btemp+17,plusw1
 12398  012F82  0EE8               	movlw	-24
 12399  012F84  0060  F0EB  FFE3   	movff	btemp+18,plusw1
 12400  012F8A  0EE9               	movlw	-23
 12401  012F8C  0060  F0EF  FFE3   	movff	btemp+19,plusw1
 12402  012F92  0EEA               	movlw	-22
 12403  012F94  0060  F0F3  FFE3   	movff	btemp+20,plusw1
 12404  012F9A  0EEB               	movlw	-21
 12405  012F9C  0060  F0F7  FFE3   	movff	btemp+21,plusw1
 12406  012FA2  0EEC               	movlw	-20
 12407  012FA4  0060  F0FB  FFE3   	movff	btemp+22,plusw1
 12408  012FAA  0EED               	movlw	-19
 12409  012FAC  0060  F0FF  FFE3   	movff	btemp+23,plusw1
 12410                           
 12411                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
 12412                           ;stkvar	_c @ sp[(-32)+31]
 12413  012FB2  0EFF               	movlw	-1
 12414  012FB4  50E3               	movf	plusw1,w,c
 12415  012FB6  6EE6               	movwf	postinc1,c
 12416                           
 12417                           ;stkvar	_llu @ sp[(-33)+6]
 12418  012FB8  50E1               	movf	fsr1l,w,c
 12419  012FBA  0FE5               	addlw	-27
 12420  012FBC  6ED9               	movwf	fsr2l,c
 12421  012FBE  50E2               	movf	fsr1h,w,c
 12422  012FC0  6EDA               	movwf	fsr2h,c
 12423  012FC2  0EFF               	movlw	255
 12424  012FC4  22DA               	addwfc	fsr2h,f,c
 12425  012FC6  006F FF7B FFE6     	movff	postinc2,postinc1
 12426  012FCC  006F FF7B FFE6     	movff	postinc2,postinc1
 12427  012FD2  006F FF7B FFE6     	movff	postinc2,postinc1
 12428  012FD8  006F FF7B FFE6     	movff	postinc2,postinc1
 12429  012FDE  006F FF7B FFE6     	movff	postinc2,postinc1
 12430  012FE4  006F FF7B FFE6     	movff	postinc2,postinc1
 12431  012FEA  006F FF7B FFE6     	movff	postinc2,postinc1
 12432  012FF0  006F FF7B FFE6     	movff	postinc2,postinc1
 12433                           
 12434                           ;stkvar	_fp @ sp[(-41)+-2]
 12435  012FF6  0ED5               	movlw	-43
 12436  012FF8  006F FF8F FFE6     	movff	plusw1,postinc1
 12437  012FFE  006F FF8F FFE6     	movff	plusw1,postinc1
 12438  013004  ECEE  F0AB         	call	_xtoa	;wreg free
 12439  013008  D105               	goto	l2330
 12440  01300A                     l12206:
 12441                           
 12442                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
 12443  01300A  0E02               	movlw	2
 12444  01300C  6EE6               	movwf	postinc1,c
 12445  01300E  0E00               	movlw	0
 12446  013010  6EE6               	movwf	postinc1,c
 12447  013012  0EF5               	movlw	low STR_93
 12448  013014  6EE6               	movwf	postinc1,c
 12449  013016  0EFF               	movlw	high STR_93
 12450  013018  6EE6               	movwf	postinc1,c
 12451                           
 12452                           ;stkvar	_fmt @ sp[(-36)+-4]
 12453  01301A  0ED8               	movlw	-40
 12454  01301C  006F FF8F FFD9     	movff	plusw1,fsr2l
 12455  013022  0ED9               	movlw	-39
 12456  013024  006F FF8F FFDA     	movff	plusw1,fsr2h
 12457  01302A  006F FF78  F032    	movff	postinc2,btemp+10
 12458  013030  006F FF74  F033    	movff	postdec2,btemp+11
 12459  013036  0060  F0CB  FFE6   	movff	btemp+10,postinc1
 12460  01303C  0060  F0CF  FFE6   	movff	btemp+11,postinc1
 12461  013042  ECC1  F0BA         	call	_strncmp	;wreg free
 12462  013046  5028               	movf	btemp^0,w,c
 12463  013048  1029               	iorwf	(btemp+1)^0,w,c
 12464  01304A  B4D8               	btfsc	status,2,c
 12465  01304C  D022               	goto	u11820
 12466  01304E  0E02               	movlw	2
 12467  013050  6EE6               	movwf	postinc1,c
 12468  013052  0E00               	movlw	0
 12469  013054  6EE6               	movwf	postinc1,c
 12470  013056  0EE6               	movlw	low STR_97
 12471  013058  6EE6               	movwf	postinc1,c
 12472  01305A  0EFF               	movlw	high STR_97
 12473  01305C  6EE6               	movwf	postinc1,c
 12474                           
 12475                           ;stkvar	_fmt @ sp[(-36)+-4]
 12476  01305E  0ED8               	movlw	-40
 12477  013060  006F FF8F FFD9     	movff	plusw1,fsr2l
 12478  013066  0ED9               	movlw	-39
 12479  013068  006F FF8F FFDA     	movff	plusw1,fsr2h
 12480  01306E  006F FF78  F032    	movff	postinc2,btemp+10
 12481  013074  006F FF74  F033    	movff	postdec2,btemp+11
 12482  01307A  0060  F0CB  FFE6   	movff	btemp+10,postinc1
 12483  013080  0060  F0CF  FFE6   	movff	btemp+11,postinc1
 12484  013086  ECC1  F0BA         	call	_strncmp	;wreg free
 12485  01308A  5028               	movf	btemp^0,w,c
 12486  01308C  1029               	iorwf	(btemp+1)^0,w,c
 12487  01308E  A4D8               	btfss	status,2,c
 12488  013090  D058               	goto	l12220
 12489  013092                     u11820:
 12490                           
 12491                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
 12492                           ;stkvar	_fmt @ sp[(-32)+-4]
 12493  013092  0EDC               	movlw	-36
 12494  013094  006F FF8F FFD9     	movff	plusw1,fsr2l
 12495  01309A  0EDD               	movlw	-35
 12496  01309C  006F FF8F FFDA     	movff	plusw1,fsr2h
 12497  0130A2  006F FF78  F032    	movff	postinc2,btemp+10
 12498  0130A8  006F FF74  F033    	movff	postdec2,btemp+11
 12499  0130AE  0E01               	movlw	1
 12500  0130B0  2632               	addwf	(btemp+10)^0,f,c
 12501  0130B2  0E00               	movlw	0
 12502  0130B4  2233               	addwfc	(btemp+11)^0,f,c
 12503  0130B6  0060  F0CB  FFF6   	movff	btemp+10,tblptrl
 12504  0130BC  0060  F0CF  FFF7   	movff	btemp+11,tblptrh
 12505  0130C2                     	if	0	;tblptru may be non-zero
 12506  0130C2                     	endif
 12507  0130C2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12508  0130C2  0E00               	movlw	low (__mediumconst shr (0+16))
 12509  0130C4  6EF8               	movwf	tblptru,c
 12510  0130C6                     	endif
 12511                           
 12512                           ;stkvar	_c @ sp[(-32)+31]
 12513  0130C6  0008               	tblrd		*
 12514  0130C8  0EFF               	movlw	-1
 12515  0130CA  006F FFD7 FFE3     	movff	tablat,plusw1
 12516                           
 12517                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
 12518                           ;stkvar	_fmt @ sp[(-32)+-4]
 12519  0130D0  0EDC               	movlw	-36
 12520  0130D2  006F FF8F FFD9     	movff	plusw1,fsr2l
 12521  0130D8  0EDD               	movlw	-35
 12522  0130DA  006F FF8F FFDA     	movff	plusw1,fsr2h
 12523  0130E0  0E02               	movlw	2
 12524  0130E2  26DE               	addwf	postinc2,f,c
 12525  0130E4  0E00               	movlw	0
 12526  0130E6  22DD               	addwfc	postdec2,f,c
 12527                           
 12528                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 12529                           ;stkvar	_ap @ sp[(-32)+-6]
 12530  0130E8  0EDA               	movlw	-38
 12531  0130EA  006F FF8F FFD9     	movff	plusw1,fsr2l
 12532  0130F0  0EDB               	movlw	-37
 12533  0130F2  006F FF8F FFDA     	movff	plusw1,fsr2h
 12534  0130F8  0E04               	movlw	4
 12535  0130FA  5EDE               	subwf	postinc2,f,c
 12536  0130FC  0E00               	movlw	0
 12537  0130FE  5ADD               	subwfb	postdec2,f,c
 12538  013100  006F FF78  F032    	movff	postinc2,btemp+10
 12539  013106  006F FF74  F033    	movff	postdec2,btemp+11
 12540  01310C  0060  F0CB  FFD9   	movff	btemp+10,fsr2l
 12541  013112  0060  F0CF  FFDA   	movff	btemp+11,fsr2h
 12542  013118  006F FF78  F030    	movff	postinc2,btemp+8
 12543  01311E  006F FF78  F031    	movff	postinc2,btemp+9
 12544  013124  006F FF78  F032    	movff	postinc2,btemp+10
 12545  01312A  006F FF78  F033    	movff	postinc2,btemp+11
 12546  013130  5030               	movf	(btemp+8)^0,w,c
 12547  013132  6E38               	movwf	(btemp+16)^0,c
 12548  013134  5031               	movf	(btemp+9)^0,w,c
 12549  013136  6E39               	movwf	(btemp+17)^0,c
 12550  013138  5032               	movf	(btemp+10)^0,w,c
 12551  01313A  6E3A               	movwf	(btemp+18)^0,c
 12552  01313C  5033               	movf	(btemp+11)^0,w,c
 12553  01313E  6E3B               	movwf	(btemp+19)^0,c
 12554  013140  D714               	goto	L9
 12555  013142                     l12220:
 12556                           
 12557                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 12558                           ;stkvar	_fmt @ sp[(-32)+-4]
 12559  013142  0EDC               	movlw	-36
 12560  013144  006F FF8F FFD9     	movff	plusw1,fsr2l
 12561  01314A  0EDD               	movlw	-35
 12562  01314C  006F FF8F FFDA     	movff	plusw1,fsr2h
 12563  013152  006F FF7B FFF6     	movff	postinc2,tblptrl
 12564  013158  006F FF77 FFF7     	movff	postdec2,tblptrh
 12565  01315E                     	if	0	;tblptru may be non-zero
 12566  01315E                     	endif
 12567  01315E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12568  01315E  0E00               	movlw	low (__mediumconst shr (0+16))
 12569  013160  6EF8               	movwf	tblptru,c
 12570  013162                     	endif
 12571  013162  0008               	tblrd		*
 12572  013164  50F5               	movf	tablat,w,c
 12573  013166  0A25               	xorlw	37
 12574  013168  A4D8               	btfss	status,2,c
 12575  01316A  D01A               	goto	l12230
 12576                           
 12577                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 12578                           ;stkvar	_fmt @ sp[(-32)+-4]
 12579  01316C  0EDC               	movlw	-36
 12580  01316E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12581  013174  0EDD               	movlw	-35
 12582  013176  006F FF8F FFDA     	movff	plusw1,fsr2h
 12583  01317C  2ADE               	incf	postinc2,f,c
 12584  01317E  0E00               	movlw	0
 12585  013180  22DD               	addwfc	postdec2,f,c
 12586                           
 12587                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 12588                           ;stkvar	_fp @ sp[(-32)+-2]
 12589  013182  0EDE               	movlw	-34
 12590  013184  006F FF8F FFE6     	movff	plusw1,postinc1
 12591  01318A  006F FF8F FFE6     	movff	plusw1,postinc1
 12592  013190  0E25               	movlw	37
 12593  013192  6EE6               	movwf	postinc1,c
 12594  013194  0E00               	movlw	0
 12595  013196  6EE6               	movwf	postinc1,c
 12596  013198  EC51  F0C7         	call	_fputc	;wreg free
 12597  01319C                     l12226:
 12598                           
 12599                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 12600  01319C  0E01               	movlw	1
 12601  01319E  D00C               	goto	L10
 12602  0131A0                     l12230:
 12603                           
 12604                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 12605                           ;stkvar	_fmt @ sp[(-32)+-4]
 12606  0131A0  0EDC               	movlw	-36
 12607  0131A2  006F FF8F FFD9     	movff	plusw1,fsr2l
 12608  0131A8  0EDD               	movlw	-35
 12609  0131AA  006F FF8F FFDA     	movff	plusw1,fsr2h
 12610  0131B0  2ADE               	incf	postinc2,f,c
 12611  0131B2  0E00               	movlw	0
 12612  0131B4  22DD               	addwfc	postdec2,f,c
 12613                           
 12614                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 12615  0131B6  0E00               	movlw	0
 12616  0131B8                     L10:
 12617  0131B8  6E28               	movwf	btemp^0,c
 12618  0131BA  0E00               	movlw	0
 12619  0131BC  6E29               	movwf	(btemp+1)^0,c
 12620  0131BE  D02A               	goto	l2330
 12621  0131C0                     l12236:
 12622                           
 12623                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 12624                           ;stkvar	_fp @ sp[(-32)+-2]
 12625  0131C0  0EDE               	movlw	-34
 12626  0131C2  006F FF8F FFE6     	movff	plusw1,postinc1
 12627  0131C8  006F FF8F FFE6     	movff	plusw1,postinc1
 12628                           
 12629                           ;stkvar	_fmt @ sp[(-34)+-4]
 12630  0131CE  0EDA               	movlw	-38
 12631  0131D0  006F FF8F FFD9     	movff	plusw1,fsr2l
 12632  0131D6  0EDB               	movlw	-37
 12633  0131D8  006F FF8F FFDA     	movff	plusw1,fsr2h
 12634  0131DE  006F FF7B FFF6     	movff	postinc2,tblptrl
 12635  0131E4  006F FF77 FFF7     	movff	postdec2,tblptrh
 12636  0131EA                     	if	0	;tblptru may be non-zero
 12637  0131EA                     	endif
 12638  0131EA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12639  0131EA  0E00               	movlw	low (__mediumconst shr (0+16))
 12640  0131EC  6EF8               	movwf	tblptru,c
 12641  0131EE                     	endif
 12642  0131EE  0008               	tblrd		*
 12643  0131F0  50F5               	movf	tablat,w,c
 12644  0131F2  6EE6               	movwf	postinc1,c
 12645  0131F4  0E00               	movlw	0
 12646  0131F6  6EE6               	movwf	postinc1,c
 12647  0131F8  EC51  F0C7         	call	_fputc	;wreg free
 12648                           
 12649                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 12650                           ;stkvar	_fmt @ sp[(-32)+-4]
 12651  0131FC  0EDC               	movlw	-36
 12652  0131FE  006F FF8F FFD9     	movff	plusw1,fsr2l
 12653  013204  0EDD               	movlw	-35
 12654  013206  006F FF8F FFDA     	movff	plusw1,fsr2h
 12655  01320C  2ADE               	incf	postinc2,f,c
 12656  01320E  0E00               	movlw	0
 12657  013210  22DD               	addwfc	postdec2,f,c
 12658  013212  D7C4               	goto	l12226
 12659  013214                     l2330:
 12660                           
 12661                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 12662  013214  0EDA               	movlw	218
 12663  013216  26E1               	addwf	fsr1l,f,c
 12664  013218  0EFF               	movlw	255
 12665  01321A  22E2               	addwfc	fsr1h,f,c
 12666  01321C  0012               	return		;funcret
 12667  01321E                     __end_of_vfpfcnvrt:
 12668                           	opt callstack 0
 12669                           
 12670 ;; *************** function _xtoa *****************
 12671 ;; Defined at:
 12672 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 12673 ;; Parameters:    Size  Location     Type
 12674 ;;  fp              2  [STACK] PTR struct _IO_FILE
 12675 ;;		 -> f(6), NULL(0), 
 12676 ;;  d               8  [STACK] unsigned long long 
 12677 ;;  x               1  [STACK] unsigned char 
 12678 ;; Auto vars:     Size  Location     Type
 12679 ;;  n               8  [STACK] unsigned long long 
 12680 ;;  c               2  [STACK] int 
 12681 ;;  i               2  [STACK] int 
 12682 ;;  w               2  [STACK] int 
 12683 ;;  p               2  [STACK] int 
 12684 ;; Return value:  Size  Location     Type
 12685 ;;                  2  [STACK] int 
 12686 ;; Registers used:
 12687 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 12688 ;; Tracked objects:
 12689 ;;		On entry : 0/0
 12690 ;;		On exit  : 0/0
 12691 ;;		Unchanged: 0/0
 12692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12697 ;;Total ram usage:        0 bytes
 12698 ;; Hardware stack levels used:    1
 12699 ;; Hardware stack levels required when called:   20
 12700 ;; This function calls:
 12701 ;;		_isalpha
 12702 ;;		_isupper
 12703 ;;		_pad
 12704 ;;		_toupper
 12705 ;; This function is called by:
 12706 ;;		_vfpfcnvrt
 12707 ;; This function uses a reentrant model
 12708 ;;
 12709                           
 12710                           	psect	text46
 12711  0157DC                     __ptext46:
 12712                           	opt callstack 0
 12713  0157DC                     _xtoa:
 12714                           	opt callstack 0
 12715                           
 12716                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 12717  0157DC  0E14               	movlw	20
 12718  0157DE  26E1               	addwf	fsr1l,f,c
 12719  0157E0  0E00               	movlw	0
 12720  0157E2  22E2               	addwfc	fsr1h,f,c
 12721                           
 12722                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
 12723                           
 12724                           ;incstack = 0
 12725 ;; hardware stack exceeded
 12726  0157E4  AE4B               	btfss	(_prec+1)^0,7,c
 12727                           
 12728                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
 12729  0157E6  924C               	bcf	_flags^0,1,c
 12730                           
 12731                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
 12732  0157E8  BE4B               	btfsc	(_prec+1)^0,7,c
 12733  0157EA  D005               	goto	u11350
 12734  0157EC  504B               	movf	(_prec+1)^0,w,c
 12735  0157EE  E110               	bnz	l11960
 12736  0157F0  044A               	decf	_prec^0,w,c
 12737  0157F2  B0D8               	btfsc	status,0,c
 12738  0157F4  D00D               	goto	l11960
 12739  0157F6                     u11350:
 12740  0157F6  0E01               	movlw	1
 12741  0157F8  6E32               	movwf	(btemp+10)^0,c
 12742  0157FA  0E00               	movlw	0
 12743  0157FC  6E33               	movwf	(btemp+11)^0,c
 12744                           
 12745                           ;stkvar	_p @ sp[(-20)+18]
 12746  0157FE  0EFE               	movlw	-2
 12747  015800  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 12748  015806  0EFF               	movlw	-1
 12749  015808  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 12750  01580E  D008               	goto	l2280
 12751  015810                     l11960:
 12752                           
 12753                           ;stkvar	_p @ sp[(-20)+18]
 12754  015810  0EFE               	movlw	-2
 12755  015812  0060  F12B  FFE3   	movff	_prec,plusw1
 12756  015818  0EFF               	movlw	-1
 12757  01581A  0060  F12F  FFE3   	movff	_prec+1,plusw1
 12758  015820                     l2280:
 12759                           
 12760                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 12761                           ;stkvar	_w @ sp[(-20)+16]
 12762  015820  0EFC               	movlw	-4
 12763  015822  0060  F123  FFE3   	movff	_width,plusw1
 12764  015828  0EFD               	movlw	-3
 12765  01582A  0060  F127  FFE3   	movff	_width+1,plusw1
 12766                           
 12767                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
 12768  015830  A84C               	btfss	_flags^0,4,c
 12769  015832  D00B               	goto	l11966
 12770                           
 12771                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 12772                           ;stkvar	_w @ sp[(-20)+16]
 12773  015834  50E1               	movf	fsr1l,w,c
 12774  015836  0FFC               	addlw	-4
 12775  015838  6ED9               	movwf	fsr2l,c
 12776  01583A  50E2               	movf	fsr1h,w,c
 12777  01583C  6EDA               	movwf	fsr2h,c
 12778  01583E  0EFF               	movlw	255
 12779  015840  22DA               	addwfc	fsr2h,f,c
 12780  015842  0EFE               	movlw	254
 12781  015844  26DE               	addwf	postinc2,f,c
 12782  015846  0EFF               	movlw	255
 12783  015848  22DD               	addwfc	postdec2,f,c
 12784  01584A                     l11966:
 12785                           
 12786                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 12787                           ;stkvar	_d @ sp[(-20)+-10]
 12788  01584A  0EE2               	movlw	226
 12789  01584C  24E1               	addwf	fsr1l,w,c
 12790  01584E  6ED9               	movwf	fsr2l,c
 12791  015850  0EFF               	movlw	255
 12792  015852  20E2               	addwfc	fsr1h,w,c
 12793  015854  6EDA               	movwf	fsr2h,c
 12794                           
 12795                           ;stkvar	_n @ sp[(-20)+4]
 12796  015856  0E08               	movlw	8
 12797  015858  6E28               	movwf	btemp^0,c
 12798  01585A  0EF0               	movlw	-16
 12799  01585C                     us1137999:
 12800  01585C  006F FF7B FFE3     	movff	postinc2,plusw1
 12801  015862  28E8               	incf	wreg,w,c
 12802  015864  2E28               	decfsz	btemp^0,f,c
 12803  015866  D7FA               	bra	us1137999
 12804                           
 12805                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
 12806  015868  0E4F               	movlw	79
 12807  01586A  6E32               	movwf	(btemp+10)^0,c
 12808  01586C  0E00               	movlw	0
 12809  01586E  6E33               	movwf	(btemp+11)^0,c
 12810                           
 12811                           ;stkvar	_i @ sp[(-20)+14]
 12812  015870  0EFA               	movlw	-6
 12813  015872  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 12814  015878  0EFB               	movlw	-5
 12815  01587A  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 12816                           
 12817                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
 12818  015880  0103               	movlb	3	; () banked
 12819  015882  6BE3               	clrf	(_dbuf+79)& (0+255),b
 12820                           
 12821                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12822  015884  D0EE               	goto	l12004
 12823  015886                     l11972:
 12824                           
 12825                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 12826                           ;stkvar	_i @ sp[(-20)+14]
 12827  015886  50E1               	movf	fsr1l,w,c
 12828  015888  0FFA               	addlw	-6
 12829  01588A  6ED9               	movwf	fsr2l,c
 12830  01588C  50E2               	movf	fsr1h,w,c
 12831  01588E  6EDA               	movwf	fsr2h,c
 12832  015890  0EFF               	movlw	255
 12833  015892  22DA               	addwfc	fsr2h,f,c
 12834  015894  06DE               	decf	postinc2,f,c
 12835  015896  0E00               	movlw	0
 12836  015898  5ADD               	subwfb	postdec2,f,c
 12837                           
 12838                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
 12839                           ;stkvar	_n @ sp[(-20)+4]
 12840  01589A  0EF0               	movlw	-16
 12841  01589C  006F FF8C  F032    	movff	plusw1,btemp+10
 12842  0158A2  0EF1               	movlw	-15
 12843  0158A4  006F FF8C  F033    	movff	plusw1,btemp+11
 12844  0158AA  0E0F               	movlw	15
 12845  0158AC  1632               	andwf	(btemp+10)^0,f,c
 12846  0158AE  0E00               	movlw	0
 12847  0158B0  1633               	andwf	(btemp+11)^0,f,c
 12848                           
 12849                           ;stkvar	_c @ sp[(-20)+12]
 12850  0158B2  0EF8               	movlw	-8
 12851  0158B4  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 12852  0158BA  0EF9               	movlw	-7
 12853  0158BC  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 12854                           
 12855                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 12856                           ;stkvar	_c @ sp[(-20)+12]
 12857  0158C2  0EF9               	movlw	-7
 12858  0158C4  BEE3               	btfsc	plusw1,7,c
 12859  0158C6  D00F               	goto	l11980
 12860  0158C8  0EF9               	movlw	-7
 12861  0158CA  50E3               	movf	plusw1,w,c
 12862  0158CC  E108               	bnz	u11380
 12863  0158CE  0EF8               	movlw	-8
 12864  0158D0  006F FF8C  F028    	movff	plusw1,btemp
 12865  0158D6  0E0A               	movlw	10
 12866  0158D8  5E28               	subwf	btemp^0,f,c
 12867  0158DA  A0D8               	btfss	status,0,c
 12868  0158DC  D004               	goto	l11980
 12869  0158DE                     u11380:
 12870                           
 12871                           ;stkvar	_c @ sp[(-20)+12]
 12872  0158DE  0EF8               	movlw	-8
 12873  0158E0  50E3               	movf	plusw1,w,c
 12874  0158E2  0F57               	addlw	87
 12875  0158E4  D003               	goto	L11
 12876  0158E6                     l11980:
 12877                           
 12878                           ;stkvar	_c @ sp[(-20)+12]
 12879  0158E6  0EF8               	movlw	-8
 12880  0158E8  50E3               	movf	plusw1,w,c
 12881  0158EA  0F30               	addlw	48
 12882  0158EC                     L11:
 12883  0158EC  6E32               	movwf	(btemp+10)^0,c
 12884  0158EE  0EF9               	movlw	-7
 12885  0158F0  006F FF8C  F033    	movff	plusw1,btemp+11
 12886  0158F6  0E00               	movlw	0
 12887  0158F8  2233               	addwfc	(btemp+11)^0,f,c
 12888                           
 12889                           ;stkvar	_c @ sp[(-20)+12]
 12890  0158FA  0EF8               	movlw	-8
 12891  0158FC  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 12892  015902  0EF9               	movlw	-7
 12893  015904  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 12894  01590A  0EBF               	movlw	191
 12895  01590C  6E32               	movwf	(btemp+10)^0,c
 12896  01590E  0EFF               	movlw	255
 12897  015910  6E33               	movwf	(btemp+11)^0,c
 12898                           
 12899                           ;stkvar	_x @ sp[(-20)+-11]
 12900  015912  0EE1               	movlw	-31
 12901  015914  50E3               	movf	plusw1,w,c
 12902  015916  6E30               	movwf	(btemp+8)^0,c
 12903  015918  6A31               	clrf	(btemp+9)^0,c
 12904  01591A  5032               	movf	(btemp+10)^0,w,c
 12905  01591C  2630               	addwf	(btemp+8)^0,f,c
 12906  01591E  5033               	movf	(btemp+11)^0,w,c
 12907  015920  2231               	addwfc	(btemp+9)^0,f,c
 12908  015922  5031               	movf	(btemp+9)^0,w,c
 12909  015924  E106               	bnz	u11390
 12910  015926  0E1A               	movlw	26
 12911  015928  5C30               	subwf	(btemp+8)^0,w,c
 12912  01592A  B0D8               	btfsc	status,0,c
 12913  01592C  D002               	goto	u11390
 12914  01592E  0E01               	movlw	1
 12915  015930  D001               	goto	u11400
 12916  015932                     u11390:
 12917  015932  0E00               	movlw	0
 12918  015934                     u11400:
 12919  015934  6E32               	movwf	(btemp+10)^0,c
 12920  015936  6A33               	clrf	(btemp+11)^0,c
 12921                           
 12922                           ;stkvar	_xtoa$5419 @ sp[(-20)+2]
 12923  015938  0EEE               	movlw	-18
 12924  01593A  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 12925  015940  0EEF               	movlw	-17
 12926  015942  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 12927                           
 12928                           ;stkvar	_xtoa$5419 @ sp[(-20)+2]
 12929  015948  0EEE               	movlw	-18
 12930  01594A  006F FF8C  F028    	movff	plusw1,btemp
 12931  015950  0EEF               	movlw	-17
 12932  015952  50E3               	movf	plusw1,w,c
 12933  015954  1028               	iorwf	btemp^0,w,c
 12934  015956  B4D8               	btfsc	status,2,c
 12935  015958  D041               	goto	l11996
 12936  01595A  0E9F               	movlw	159
 12937  01595C  6E32               	movwf	(btemp+10)^0,c
 12938  01595E  0EFF               	movlw	255
 12939  015960  6E33               	movwf	(btemp+11)^0,c
 12940                           
 12941                           ;stkvar	_c @ sp[(-20)+12]
 12942  015962  0EF8               	movlw	-8
 12943  015964  006F FF8C  F030    	movff	plusw1,btemp+8
 12944  01596A  0EF9               	movlw	-7
 12945  01596C  006F FF8C  F031    	movff	plusw1,btemp+9
 12946  015972  0E20               	movlw	32
 12947  015974  1230               	iorwf	(btemp+8)^0,f,c
 12948  015976  0E00               	movlw	0
 12949  015978  1231               	iorwf	(btemp+9)^0,f,c
 12950  01597A  5032               	movf	(btemp+10)^0,w,c
 12951  01597C  2630               	addwf	(btemp+8)^0,f,c
 12952  01597E  5033               	movf	(btemp+11)^0,w,c
 12953  015980  2231               	addwfc	(btemp+9)^0,f,c
 12954  015982  5031               	movf	(btemp+9)^0,w,c
 12955  015984  E106               	bnz	u11420
 12956  015986  0E1A               	movlw	26
 12957  015988  5C30               	subwf	(btemp+8)^0,w,c
 12958  01598A  B0D8               	btfsc	status,0,c
 12959  01598C  D002               	goto	u11420
 12960  01598E  0E01               	movlw	1
 12961  015990  D001               	goto	u11430
 12962  015992                     u11420:
 12963  015992  0E00               	movlw	0
 12964  015994                     u11430:
 12965  015994  6E32               	movwf	(btemp+10)^0,c
 12966  015996  6A33               	clrf	(btemp+11)^0,c
 12967                           
 12968                           ;stkvar	_xtoa$5420 @ sp[(-20)+0]
 12969  015998  0EEC               	movlw	-20
 12970  01599A  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 12971  0159A0  0EED               	movlw	-19
 12972  0159A2  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 12973                           
 12974                           ;stkvar	_xtoa$5420 @ sp[(-20)+0]
 12975  0159A8  0EEC               	movlw	-20
 12976  0159AA  006F FF8C  F028    	movff	plusw1,btemp
 12977  0159B0  0EED               	movlw	-19
 12978  0159B2  50E3               	movf	plusw1,w,c
 12979  0159B4  1028               	iorwf	btemp^0,w,c
 12980  0159B6  B4D8               	btfsc	status,2,c
 12981  0159B8  D011               	goto	l11996
 12982                           
 12983                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 12984                           ;stkvar	_c @ sp[(-20)+12]
 12985  0159BA  0EF8               	movlw	-8
 12986  0159BC  006F FF8F FFE6     	movff	plusw1,postinc1
 12987  0159C2  006F FF8F FFE6     	movff	plusw1,postinc1
 12988  0159C8  EC53  F0D1         	call	_toupper	;wreg free
 12989                           
 12990                           ;stkvar	_c @ sp[(-20)+12]
 12991  0159CC  0EF8               	movlw	-8
 12992  0159CE  0060  F0A3  FFE3   	movff	btemp,plusw1
 12993  0159D4  0EF9               	movlw	-7
 12994  0159D6  0060  F0A7  FFE3   	movff	btemp+1,plusw1
 12995  0159DC                     l11996:
 12996                           
 12997                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 12998                           ;stkvar	_c @ sp[(-20)+12]
 12999                           ;stkvar	_i @ sp[(-20)+14]
 13000  0159DC  0EFA               	movlw	-6
 13001  0159DE  006F FF8C  F032    	movff	plusw1,btemp+10
 13002  0159E4  0EFB               	movlw	-5
 13003  0159E6  006F FF8C  F033    	movff	plusw1,btemp+11
 13004  0159EC  0E94               	movlw	low _dbuf
 13005  0159EE  2432               	addwf	(btemp+10)^0,w,c
 13006  0159F0  6ED9               	movwf	fsr2l,c
 13007  0159F2  0E03               	movlw	high _dbuf
 13008  0159F4  2033               	addwfc	(btemp+11)^0,w,c
 13009  0159F6  6EDA               	movwf	fsr2h,c
 13010  0159F8  0EF8               	movlw	-8
 13011  0159FA  006F FF8F FFDF     	movff	plusw1,indf2
 13012                           
 13013                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 13014                           ;stkvar	_p @ sp[(-20)+18]
 13015  015A00  50E1               	movf	fsr1l,w,c
 13016  015A02  0FFE               	addlw	-2
 13017  015A04  6ED9               	movwf	fsr2l,c
 13018  015A06  50E2               	movf	fsr1h,w,c
 13019  015A08  6EDA               	movwf	fsr2h,c
 13020  015A0A  0EFF               	movlw	255
 13021  015A0C  22DA               	addwfc	fsr2h,f,c
 13022  015A0E  06DE               	decf	postinc2,f,c
 13023  015A10  0E00               	movlw	0
 13024  015A12  5ADD               	subwfb	postdec2,f,c
 13025                           
 13026                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 13027                           ;stkvar	_w @ sp[(-20)+16]
 13028  015A14  50E1               	movf	fsr1l,w,c
 13029  015A16  0FFC               	addlw	-4
 13030  015A18  6ED9               	movwf	fsr2l,c
 13031  015A1A  50E2               	movf	fsr1h,w,c
 13032  015A1C  6EDA               	movwf	fsr2h,c
 13033  015A1E  0EFF               	movlw	255
 13034  015A20  22DA               	addwfc	fsr2h,f,c
 13035  015A22  06DE               	decf	postinc2,f,c
 13036  015A24  0E00               	movlw	0
 13037  015A26  5ADD               	subwfb	postdec2,f,c
 13038                           
 13039                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 13040  015A28  0E04               	movlw	4
 13041  015A2A  6E33               	movwf	(btemp+11)^0,c
 13042                           
 13043                           ;stkvar	_n @ sp[(-20)+4]
 13044  015A2C  50E1               	movf	fsr1l,w,c
 13045  015A2E  0FF0               	addlw	-16
 13046  015A30  6ED9               	movwf	fsr2l,c
 13047  015A32  50E2               	movf	fsr1h,w,c
 13048  015A34  6EDA               	movwf	fsr2h,c
 13049  015A36  0EFF               	movlw	255
 13050  015A38  22DA               	addwfc	fsr2h,f,c
 13051  015A3A  2833               	incf	(btemp+11)^0,w,c
 13052  015A3C  52DE               	movf	postinc2,f,c
 13053  015A3E  D00F               	goto	u11450
 13054  015A40                     u11455:
 13055  015A40  52DE               	movf	postinc2,f,c
 13056  015A42  52DE               	movf	postinc2,f,c
 13057  015A44  52DE               	movf	postinc2,f,c
 13058  015A46  52DE               	movf	postinc2,f,c
 13059  015A48  52DE               	movf	postinc2,f,c
 13060  015A4A  52DE               	movf	postinc2,f,c
 13061  015A4C  90D8               	bcf	status,0,c
 13062  015A4E  32DD               	rrcf	postdec2,f,c
 13063  015A50  32DD               	rrcf	postdec2,f,c
 13064  015A52  32DD               	rrcf	postdec2,f,c
 13065  015A54  32DD               	rrcf	postdec2,f,c
 13066  015A56  32DD               	rrcf	postdec2,f,c
 13067  015A58  32DD               	rrcf	postdec2,f,c
 13068  015A5A  32DD               	rrcf	postdec2,f,c
 13069  015A5C  32DE               	rrcf	postinc2,f,c
 13070  015A5E                     u11450:
 13071  015A5E  2EE8               	decfsz	wreg,f,c
 13072  015A60  D7EF               	goto	u11455
 13073  015A62                     l12004:
 13074                           
 13075                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13076                           ;stkvar	_i @ sp[(-20)+14]
 13077  015A62  0EFB               	movlw	-5
 13078  015A64  BEE3               	btfsc	plusw1,7,c
 13079  015A66  D03A               	goto	u11500
 13080  015A68  0EFB               	movlw	-5
 13081  015A6A  50E3               	movf	plusw1,w,c
 13082  015A6C  E108               	bnz	u11460
 13083  015A6E  0EFA               	movlw	-6
 13084  015A70  006F FF8C  F028    	movff	plusw1,btemp
 13085  015A76  0E02               	movlw	2
 13086  015A78  5E28               	subwf	btemp^0,f,c
 13087  015A7A  A0D8               	btfss	status,0,c
 13088  015A7C  D02F               	goto	u11500
 13089  015A7E                     u11460:
 13090                           
 13091                           ;stkvar	_n @ sp[(-20)+4]
 13092  015A7E  0EF0               	movlw	-16
 13093  015A80  50E3               	movf	plusw1,w,c
 13094  015A82  E115               	bnz	u11471
 13095  015A84  0EF1               	movlw	-15
 13096  015A86  50E3               	movf	plusw1,w,c
 13097  015A88  E112               	bnz	u11471
 13098  015A8A  0EF2               	movlw	-14
 13099  015A8C  50E3               	movf	plusw1,w,c
 13100  015A8E  E10F               	bnz	u11471
 13101  015A90  0EF3               	movlw	-13
 13102  015A92  50E3               	movf	plusw1,w,c
 13103  015A94  E10C               	bnz	u11471
 13104  015A96  0EF4               	movlw	-12
 13105  015A98  50E3               	movf	plusw1,w,c
 13106  015A9A  E109               	bnz	u11471
 13107  015A9C  0EF5               	movlw	-11
 13108  015A9E  50E3               	movf	plusw1,w,c
 13109  015AA0  E106               	bnz	u11471
 13110  015AA2  0EF6               	movlw	-10
 13111  015AA4  50E3               	movf	plusw1,w,c
 13112  015AA6  E103               	bnz	u11471
 13113  015AA8  0EF7               	movlw	-9
 13114  015AAA  50E3               	movf	plusw1,w,c
 13115  015AAC  A4D8               	btfss	status,2,c
 13116  015AAE                     u11471:
 13117  015AAE  D6EB               	goto	l11972
 13118                           
 13119                           ;stkvar	_p @ sp[(-20)+18]
 13120  015AB0  0EFF               	movlw	-1
 13121  015AB2  BEE3               	btfsc	plusw1,7,c
 13122  015AB4  D007               	goto	u11480
 13123  015AB6  0EFF               	movlw	-1
 13124  015AB8  50E3               	movf	plusw1,w,c
 13125  015ABA  E103               	bnz	u11481
 13126  015ABC  0EFE               	movlw	-2
 13127  015ABE  04E3               	decf	plusw1,w,c
 13128  015AC0  B0D8               	btfsc	status,0,c
 13129  015AC2                     u11481:
 13130  015AC2  D6E1               	goto	l11972
 13131  015AC4                     u11480:
 13132                           
 13133                           ;stkvar	_w @ sp[(-20)+16]
 13134  015AC4  0EFD               	movlw	-3
 13135  015AC6  BEE3               	btfsc	plusw1,7,c
 13136  015AC8  D009               	goto	u11500
 13137  015ACA  0EFD               	movlw	-3
 13138  015ACC  50E3               	movf	plusw1,w,c
 13139  015ACE  E104               	bnz	u11490
 13140  015AD0  0EFC               	movlw	-4
 13141  015AD2  04E3               	decf	plusw1,w,c
 13142  015AD4  A0D8               	btfss	status,0,c
 13143  015AD6  D002               	goto	u11500
 13144  015AD8                     u11490:
 13145  015AD8  B24C               	btfsc	_flags^0,1,c
 13146  015ADA  D6D5               	goto	l11972
 13147  015ADC                     u11500:
 13148                           
 13149                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 13150  015ADC  A84C               	btfss	_flags^0,4,c
 13151  015ADE  D036               	goto	l12020
 13152                           
 13153                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 13154                           ;stkvar	_i @ sp[(-20)+14]
 13155  015AE0  50E1               	movf	fsr1l,w,c
 13156  015AE2  0FFA               	addlw	-6
 13157  015AE4  6ED9               	movwf	fsr2l,c
 13158  015AE6  50E2               	movf	fsr1h,w,c
 13159  015AE8  6EDA               	movwf	fsr2h,c
 13160  015AEA  0EFF               	movlw	255
 13161  015AEC  22DA               	addwfc	fsr2h,f,c
 13162  015AEE  06DE               	decf	postinc2,f,c
 13163  015AF0  0E00               	movlw	0
 13164  015AF2  5ADD               	subwfb	postdec2,f,c
 13165                           
 13166                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 13167                           ;stkvar	_x @ sp[(-20)+-11]
 13168                           ;stkvar	_i @ sp[(-20)+14]
 13169  015AF4  0EFA               	movlw	-6
 13170  015AF6  006F FF8C  F032    	movff	plusw1,btemp+10
 13171  015AFC  0EFB               	movlw	-5
 13172  015AFE  006F FF8C  F033    	movff	plusw1,btemp+11
 13173  015B04  0E94               	movlw	low _dbuf
 13174  015B06  2432               	addwf	(btemp+10)^0,w,c
 13175  015B08  6ED9               	movwf	fsr2l,c
 13176  015B0A  0E03               	movlw	high _dbuf
 13177  015B0C  2033               	addwfc	(btemp+11)^0,w,c
 13178  015B0E  6EDA               	movwf	fsr2h,c
 13179  015B10  0EE1               	movlw	-31
 13180  015B12  006F FF8F FFDF     	movff	plusw1,indf2
 13181                           
 13182                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 13183                           ;stkvar	_i @ sp[(-20)+14]
 13184  015B18  50E1               	movf	fsr1l,w,c
 13185  015B1A  0FFA               	addlw	-6
 13186  015B1C  6ED9               	movwf	fsr2l,c
 13187  015B1E  50E2               	movf	fsr1h,w,c
 13188  015B20  6EDA               	movwf	fsr2h,c
 13189  015B22  0EFF               	movlw	255
 13190  015B24  22DA               	addwfc	fsr2h,f,c
 13191  015B26  06DE               	decf	postinc2,f,c
 13192  015B28  0E00               	movlw	0
 13193  015B2A  5ADD               	subwfb	postdec2,f,c
 13194                           
 13195                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 13196                           ;stkvar	_i @ sp[(-20)+14]
 13197  015B2C  0EFA               	movlw	-6
 13198  015B2E  006F FF8C  F032    	movff	plusw1,btemp+10
 13199  015B34  0EFB               	movlw	-5
 13200  015B36  006F FF8C  F033    	movff	plusw1,btemp+11
 13201  015B3C  0E94               	movlw	low _dbuf
 13202  015B3E  2432               	addwf	(btemp+10)^0,w,c
 13203  015B40  6ED9               	movwf	fsr2l,c
 13204  015B42  0E03               	movlw	high _dbuf
 13205  015B44  2033               	addwfc	(btemp+11)^0,w,c
 13206  015B46  6EDA               	movwf	fsr2h,c
 13207  015B48  0E30               	movlw	48
 13208  015B4A  6EDF               	movwf	indf2,c
 13209  015B4C                     l12020:
 13210                           
 13211                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 13212                           ;stkvar	_w @ sp[(-20)+16]
 13213  015B4C  0EFC               	movlw	-4
 13214  015B4E  006F FF8F FFE6     	movff	plusw1,postinc1
 13215  015B54  006F FF8F FFE6     	movff	plusw1,postinc1
 13216                           
 13217                           ;stkvar	_i @ sp[(-22)+14]
 13218  015B5A  0E94               	movlw	low _dbuf
 13219  015B5C  6E32               	movwf	(btemp+10)^0,c
 13220  015B5E  0E03               	movlw	high _dbuf
 13221  015B60  6E33               	movwf	(btemp+11)^0,c
 13222  015B62  0EF8               	movlw	-8
 13223  015B64  50E3               	movf	plusw1,w,c
 13224  015B66  2632               	addwf	(btemp+10)^0,f,c
 13225  015B68  0EF9               	movlw	-7
 13226  015B6A  50E3               	movf	plusw1,w,c
 13227  015B6C  2233               	addwfc	(btemp+11)^0,f,c
 13228  015B6E  0060  F0CB  FFE6   	movff	btemp+10,postinc1
 13229  015B74  0060  F0CF  FFE6   	movff	btemp+11,postinc1
 13230                           
 13231                           ;stkvar	_fp @ sp[(-24)+-2]
 13232  015B7A  0EE6               	movlw	-26
 13233  015B7C  006F FF8F FFE6     	movff	plusw1,postinc1
 13234  015B82  006F FF8F FFE6     	movff	plusw1,postinc1
 13235  015B88  EC6F  F0C8         	call	_pad	;wreg free
 13236                           
 13237                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 13238  015B8C  0EE1               	movlw	225
 13239  015B8E  26E1               	addwf	fsr1l,f,c
 13240  015B90  0EFF               	movlw	255
 13241  015B92  22E2               	addwfc	fsr1h,f,c
 13242  015B94  0012               	return		;funcret
 13243  015B96                     __end_of_xtoa:
 13244                           	opt callstack 0
 13245                           
 13246 ;; *************** function _toupper *****************
 13247 ;; Defined at:
 13248 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 13249 ;; Parameters:    Size  Location     Type
 13250 ;;  c               2  [STACK] int 
 13251 ;; Auto vars:     Size  Location     Type
 13252 ;;		None
 13253 ;; Return value:  Size  Location     Type
 13254 ;;                  2  [STACK] int 
 13255 ;; Registers used:
 13256 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 13257 ;; Tracked objects:
 13258 ;;		On entry : 0/3
 13259 ;;		On exit  : 0/0
 13260 ;;		Unchanged: 0/0
 13261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13266 ;;Total ram usage:        0 bytes
 13267 ;; Hardware stack levels used:    1
 13268 ;; Hardware stack levels required when called:   16
 13269 ;; This function calls:
 13270 ;;		_islower
 13271 ;; This function is called by:
 13272 ;;		_xtoa
 13273 ;; This function uses a reentrant model
 13274 ;;
 13275                           
 13276                           	psect	text47
 13277  01A2A6                     __ptext47:
 13278                           	opt callstack 0
 13279  01A2A6                     _toupper:
 13280                           	opt callstack 0
 13281                           
 13282                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13283  01A2A6  52E6               	movf	postinc1,f,c
 13284  01A2A8  52E6               	movf	postinc1,f,c
 13285                           
 13286                           ;stkvar	_c @ sp[(-2)+-2]
 13287                           
 13288                           ;incstack = 0
 13289 ;; hardware stack exceeded
 13290  01A2AA  0EFC               	movlw	-4
 13291  01A2AC  50E3               	movf	plusw1,w,c
 13292  01A2AE  0F9F               	addlw	159
 13293  01A2B0  6E32               	movwf	(btemp+10)^0,c
 13294  01A2B2  0EFD               	movlw	-3
 13295  01A2B4  006F FF8C  F033    	movff	plusw1,btemp+11
 13296  01A2BA  0EFF               	movlw	255
 13297  01A2BC  2233               	addwfc	(btemp+11)^0,f,c
 13298  01A2BE  5033               	movf	(btemp+11)^0,w,c
 13299  01A2C0  E106               	bnz	u5980
 13300  01A2C2  0E1A               	movlw	26
 13301  01A2C4  5C32               	subwf	(btemp+10)^0,w,c
 13302  01A2C6  B0D8               	btfsc	status,0,c
 13303  01A2C8  D002               	goto	u5980
 13304  01A2CA  0E01               	movlw	1
 13305  01A2CC  D001               	goto	u5990
 13306  01A2CE                     u5980:
 13307  01A2CE  0E00               	movlw	0
 13308  01A2D0                     u5990:
 13309  01A2D0  6E32               	movwf	(btemp+10)^0,c
 13310  01A2D2  6A33               	clrf	(btemp+11)^0,c
 13311                           
 13312                           ;stkvar	_toupper$6226 @ sp[(-2)+0]
 13313  01A2D4  0EFE               	movlw	-2
 13314  01A2D6  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 13315  01A2DC  0EFF               	movlw	-1
 13316  01A2DE  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 13317                           
 13318                           ;stkvar	_toupper$6226 @ sp[(-2)+0]
 13319  01A2E4  0EFE               	movlw	-2
 13320  01A2E6  006F FF8C  F028    	movff	plusw1,btemp
 13321  01A2EC  0EFF               	movlw	-1
 13322  01A2EE  50E3               	movf	plusw1,w,c
 13323  01A2F0  1028               	iorwf	btemp^0,w,c
 13324  01A2F2  B4D8               	btfsc	status,2,c
 13325  01A2F4  D00D               	goto	l7838
 13326                           
 13327                           ;stkvar	_c @ sp[(-2)+-2]
 13328  01A2F6  0EFC               	movlw	-4
 13329  01A2F8  006F FF8C  F028    	movff	plusw1,btemp
 13330  01A2FE  0EFD               	movlw	-3
 13331  01A300  006F FF8C  F029    	movff	plusw1,btemp+1
 13332  01A306  0E5F               	movlw	95
 13333  01A308  1628               	andwf	btemp^0,f,c
 13334  01A30A  0E00               	movlw	0
 13335  01A30C  1629               	andwf	(btemp+1)^0,f,c
 13336  01A30E  D008               	goto	l3447
 13337  01A310                     l7838:
 13338                           
 13339                           ;stkvar	_c @ sp[(-2)+-2]
 13340  01A310  0EFC               	movlw	-4
 13341  01A312  006F FF8C  F028    	movff	plusw1,btemp
 13342  01A318  0EFD               	movlw	-3
 13343  01A31A  006F FF8C  F029    	movff	plusw1,btemp+1
 13344  01A320                     l3447:
 13345                           
 13346                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13347  01A320  52E5               	movf	postdec1,f,c
 13348  01A322  52E5               	movf	postdec1,f,c
 13349  01A324  52E5               	movf	postdec1,f,c
 13350  01A326  52E5               	movf	postdec1,f,c
 13351  01A328  0012               	return		;funcret
 13352  01A32A                     __end_of_toupper:
 13353                           	opt callstack 0
 13354                           
 13355 ;; *************** function _islower *****************
 13356 ;; Defined at:
 13357 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 13358 ;; Parameters:    Size  Location     Type
 13359 ;;  c               2  [STACK] int 
 13360 ;; Auto vars:     Size  Location     Type
 13361 ;;		None
 13362 ;; Return value:  Size  Location     Type
 13363 ;;                  2  [STACK] int 
 13364 ;; Registers used:
 13365 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 13366 ;; Tracked objects:
 13367 ;;		On entry : 0/0
 13368 ;;		On exit  : 0/0
 13369 ;;		Unchanged: 0/0
 13370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13375 ;;Total ram usage:        0 bytes
 13376 ;; Hardware stack levels used:    1
 13377 ;; Hardware stack levels required when called:   15
 13378 ;; This function calls:
 13379 ;;		Nothing
 13380 ;; This function is called by:
 13381 ;;		_toupper
 13382 ;; This function uses a reentrant model
 13383 ;;
 13384                           
 13385                           	psect	text48
 13386  01AF3E                     __ptext48:
 13387                           	opt callstack 0
 13388  01AF3E                     _islower:
 13389                           	opt callstack 0
 13390                           
 13391                           ;stkvar	_c @ sp[(0)+-2]
 13392                           
 13393                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13394                           ;incstack = 0
 13395 ;; hardware stack exceeded
 13396  01AF3E  0EFE               	movlw	-2
 13397  01AF40  50E3               	movf	plusw1,w,c
 13398  01AF42  0F9F               	addlw	159
 13399  01AF44  6E32               	movwf	(btemp+10)^0,c
 13400  01AF46  0EFF               	movlw	-1
 13401  01AF48  006F FF8C  F033    	movff	plusw1,btemp+11
 13402  01AF4E  0EFF               	movlw	255
 13403  01AF50  2233               	addwfc	(btemp+11)^0,f,c
 13404  01AF52  5033               	movf	(btemp+11)^0,w,c
 13405  01AF54  E106               	bnz	u5670
 13406  01AF56  0E1A               	movlw	26
 13407  01AF58  5C32               	subwf	(btemp+10)^0,w,c
 13408  01AF5A  B0D8               	btfsc	status,0,c
 13409  01AF5C  D002               	goto	u5670
 13410  01AF5E  0E01               	movlw	1
 13411  01AF60  D001               	goto	u5680
 13412  01AF62                     u5670:
 13413  01AF62  0E00               	movlw	0
 13414  01AF64                     u5680:
 13415  01AF64  6E28               	movwf	btemp^0,c
 13416  01AF66  6A29               	clrf	(btemp+1)^0,c
 13417                           
 13418                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13419  01AF68  52E5               	movf	postdec1,f,c
 13420  01AF6A  52E5               	movf	postdec1,f,c
 13421  01AF6C  0012               	return		;funcret
 13422  01AF6E                     __end_of_islower:
 13423                           	opt callstack 0
 13424                           
 13425 ;; *************** function _isalpha *****************
 13426 ;; Defined at:
 13427 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 13428 ;; Parameters:    Size  Location     Type
 13429 ;;  c               2  [STACK] int 
 13430 ;; Auto vars:     Size  Location     Type
 13431 ;;		None
 13432 ;; Return value:  Size  Location     Type
 13433 ;;                  2  [STACK] int 
 13434 ;; Registers used:
 13435 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 13436 ;; Tracked objects:
 13437 ;;		On entry : 0/0
 13438 ;;		On exit  : 0/0
 13439 ;;		Unchanged: 0/0
 13440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13444 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13445 ;;Total ram usage:        0 bytes
 13446 ;; Hardware stack levels used:    1
 13447 ;; Hardware stack levels required when called:   15
 13448 ;; This function calls:
 13449 ;;		Nothing
 13450 ;; This function is called by:
 13451 ;;		_xtoa
 13452 ;; This function uses a reentrant model
 13453 ;;
 13454                           
 13455                           	psect	text49
 13456  01AB9A                     __ptext49:
 13457                           	opt callstack 0
 13458  01AB9A                     _isalpha:
 13459                           	opt callstack 0
 13460                           
 13461                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13462                           ;incstack = 0
 13463 ;; hardware stack exceeded
 13464  01AB9A  0E9F               	movlw	159
 13465  01AB9C  6E32               	movwf	(btemp+10)^0,c
 13466  01AB9E  0EFF               	movlw	255
 13467  01ABA0  6E33               	movwf	(btemp+11)^0,c
 13468                           
 13469                           ;stkvar	_c @ sp[(0)+-2]
 13470  01ABA2  0EFE               	movlw	-2
 13471  01ABA4  006F FF8C  F030    	movff	plusw1,btemp+8
 13472  01ABAA  0EFF               	movlw	-1
 13473  01ABAC  006F FF8C  F031    	movff	plusw1,btemp+9
 13474  01ABB2  0E20               	movlw	32
 13475  01ABB4  1230               	iorwf	(btemp+8)^0,f,c
 13476  01ABB6  0E00               	movlw	0
 13477  01ABB8  1231               	iorwf	(btemp+9)^0,f,c
 13478  01ABBA  5032               	movf	(btemp+10)^0,w,c
 13479  01ABBC  2630               	addwf	(btemp+8)^0,f,c
 13480  01ABBE  5033               	movf	(btemp+11)^0,w,c
 13481  01ABC0  2231               	addwfc	(btemp+9)^0,f,c
 13482  01ABC2  5031               	movf	(btemp+9)^0,w,c
 13483  01ABC4  E106               	bnz	u5960
 13484  01ABC6  0E1A               	movlw	26
 13485  01ABC8  5C30               	subwf	(btemp+8)^0,w,c
 13486  01ABCA  B0D8               	btfsc	status,0,c
 13487  01ABCC  D002               	goto	u5960
 13488  01ABCE  0E01               	movlw	1
 13489  01ABD0  D001               	goto	u5970
 13490  01ABD2                     u5960:
 13491  01ABD2  0E00               	movlw	0
 13492  01ABD4                     u5970:
 13493  01ABD4  6E28               	movwf	btemp^0,c
 13494  01ABD6  6A29               	clrf	(btemp+1)^0,c
 13495                           
 13496                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13497  01ABD8  52E5               	movf	postdec1,f,c
 13498  01ABDA  52E5               	movf	postdec1,f,c
 13499  01ABDC  0012               	return		;funcret
 13500  01ABDE                     __end_of_isalpha:
 13501                           	opt callstack 0
 13502                           
 13503 ;; *************** function _utoa *****************
 13504 ;; Defined at:
 13505 ;;		line 593 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 13506 ;; Parameters:    Size  Location     Type
 13507 ;;  fp              2  [STACK] PTR struct _IO_FILE
 13508 ;;		 -> f(6), NULL(0), 
 13509 ;;  d               8  [STACK] unsigned long long 
 13510 ;; Auto vars:     Size  Location     Type
 13511 ;;  n               8  [STACK] unsigned long long 
 13512 ;;  i               2  [STACK] int 
 13513 ;;  w               2  [STACK] int 
 13514 ;;  p               2  [STACK] int 
 13515 ;; Return value:  Size  Location     Type
 13516 ;;                  2  [STACK] int 
 13517 ;; Registers used:
 13518 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 13519 ;; Tracked objects:
 13520 ;;		On entry : 0/0
 13521 ;;		On exit  : 0/0
 13522 ;;		Unchanged: 0/0
 13523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13528 ;;Total ram usage:        0 bytes
 13529 ;; Hardware stack levels used:    1
 13530 ;; Hardware stack levels required when called:   20
 13531 ;; This function calls:
 13532 ;;		___lodiv
 13533 ;;		___lomod
 13534 ;;		_pad
 13535 ;; This function is called by:
 13536 ;;		_vfpfcnvrt
 13537 ;; This function uses a reentrant model
 13538 ;;
 13539                           
 13540                           	psect	text50
 13541  0162A4                     __ptext50:
 13542                           	opt callstack 0
 13543  0162A4                     _utoa:
 13544                           	opt callstack 0
 13545                           
 13546                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 13547  0162A4  0E0E               	movlw	14
 13548  0162A6  26E1               	addwf	fsr1l,f,c
 13549  0162A8  0E00               	movlw	0
 13550  0162AA  22E2               	addwfc	fsr1h,f,c
 13551                           
 13552                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
 13553                           
 13554                           ;incstack = 0
 13555 ;; hardware stack exceeded
 13556  0162AC  AE4B               	btfss	(_prec+1)^0,7,c
 13557                           
 13558                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
 13559  0162AE  924C               	bcf	_flags^0,1,c
 13560                           
 13561                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
 13562  0162B0  BE4B               	btfsc	(_prec+1)^0,7,c
 13563  0162B2  D005               	goto	u11270
 13564  0162B4  504B               	movf	(_prec+1)^0,w,c
 13565  0162B6  E110               	bnz	l11920
 13566  0162B8  044A               	decf	_prec^0,w,c
 13567  0162BA  B0D8               	btfsc	status,0,c
 13568  0162BC  D00D               	goto	l11920
 13569  0162BE                     u11270:
 13570  0162BE  0E01               	movlw	1
 13571  0162C0  6E32               	movwf	(btemp+10)^0,c
 13572  0162C2  0E00               	movlw	0
 13573  0162C4  6E33               	movwf	(btemp+11)^0,c
 13574                           
 13575                           ;stkvar	_p @ sp[(-14)+12]
 13576  0162C6  0EFE               	movlw	-2
 13577  0162C8  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 13578  0162CE  0EFF               	movlw	-1
 13579  0162D0  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 13580  0162D6  D008               	goto	l2265
 13581  0162D8                     l11920:
 13582                           
 13583                           ;stkvar	_p @ sp[(-14)+12]
 13584  0162D8  0EFE               	movlw	-2
 13585  0162DA  0060  F12B  FFE3   	movff	_prec,plusw1
 13586  0162E0  0EFF               	movlw	-1
 13587  0162E2  0060  F12F  FFE3   	movff	_prec+1,plusw1
 13588  0162E8                     l2265:
 13589                           
 13590                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 603:     w = width;
 13591                           ;stkvar	_w @ sp[(-14)+10]
 13592  0162E8  0EFC               	movlw	-4
 13593  0162EA  0060  F123  FFE3   	movff	_width,plusw1
 13594  0162F0  0EFD               	movlw	-3
 13595  0162F2  0060  F127  FFE3   	movff	_width+1,plusw1
 13596                           
 13597                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 606:     n = d;
 13598                           ;stkvar	_d @ sp[(-14)+-10]
 13599  0162F8  0EE8               	movlw	232
 13600  0162FA  24E1               	addwf	fsr1l,w,c
 13601  0162FC  6ED9               	movwf	fsr2l,c
 13602  0162FE  0EFF               	movlw	255
 13603  016300  20E2               	addwfc	fsr1h,w,c
 13604  016302  6EDA               	movwf	fsr2h,c
 13605                           
 13606                           ;stkvar	_n @ sp[(-14)+0]
 13607  016304  0E08               	movlw	8
 13608  016306  6E28               	movwf	btemp^0,c
 13609  016308  0EF2               	movlw	-14
 13610  01630A                     us1128999:
 13611  01630A  006F FF7B FFE3     	movff	postinc2,plusw1
 13612  016310  28E8               	incf	wreg,w,c
 13613  016312  2E28               	decfsz	btemp^0,f,c
 13614  016314  D7FA               	bra	us1128999
 13615                           
 13616                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
 13617  016316  0E4F               	movlw	79
 13618  016318  6E32               	movwf	(btemp+10)^0,c
 13619  01631A  0E00               	movlw	0
 13620  01631C  6E33               	movwf	(btemp+11)^0,c
 13621                           
 13622                           ;stkvar	_i @ sp[(-14)+8]
 13623  01631E  0EFA               	movlw	-6
 13624  016320  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 13625  016326  0EFB               	movlw	-5
 13626  016328  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 13627                           
 13628                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
 13629  01632E  0103               	movlb	3	; () banked
 13630  016330  6BE3               	clrf	(_dbuf+79)& (0+255),b
 13631                           
 13632                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 13633  016332  D0FB               	goto	l11938
 13634  016334                     l11928:
 13635                           
 13636                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 610:         --i;
 13637                           ;stkvar	_i @ sp[(-14)+8]
 13638  016334  50E1               	movf	fsr1l,w,c
 13639  016336  0FFA               	addlw	-6
 13640  016338  6ED9               	movwf	fsr2l,c
 13641  01633A  50E2               	movf	fsr1h,w,c
 13642  01633C  6EDA               	movwf	fsr2h,c
 13643  01633E  0EFF               	movlw	255
 13644  016340  22DA               	addwfc	fsr2h,f,c
 13645  016342  06DE               	decf	postinc2,f,c
 13646  016344  0E00               	movlw	0
 13647  016346  5ADD               	subwfb	postdec2,f,c
 13648                           
 13649                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
 13650  016348  0E0A               	movlw	10
 13651  01634A  6EE6               	movwf	postinc1,c
 13652  01634C  0E00               	movlw	0
 13653  01634E  6EE6               	movwf	postinc1,c
 13654  016350  0E00               	movlw	0
 13655  016352  6EE6               	movwf	postinc1,c
 13656  016354  0E00               	movlw	0
 13657  016356  6EE6               	movwf	postinc1,c
 13658  016358  0E00               	movlw	0
 13659  01635A  6EE6               	movwf	postinc1,c
 13660  01635C  0E00               	movlw	0
 13661  01635E  6EE6               	movwf	postinc1,c
 13662  016360  0E00               	movlw	0
 13663  016362  6EE6               	movwf	postinc1,c
 13664  016364  0E00               	movlw	0
 13665  016366  6EE6               	movwf	postinc1,c
 13666                           
 13667                           ;stkvar	_n @ sp[(-22)+0]
 13668  016368  50E1               	movf	fsr1l,w,c
 13669  01636A  0FEA               	addlw	-22
 13670  01636C  6ED9               	movwf	fsr2l,c
 13671  01636E  50E2               	movf	fsr1h,w,c
 13672  016370  6EDA               	movwf	fsr2h,c
 13673  016372  0EFF               	movlw	255
 13674  016374  22DA               	addwfc	fsr2h,f,c
 13675  016376  006F FF7B FFE6     	movff	postinc2,postinc1
 13676  01637C  006F FF7B FFE6     	movff	postinc2,postinc1
 13677  016382  006F FF7B FFE6     	movff	postinc2,postinc1
 13678  016388  006F FF7B FFE6     	movff	postinc2,postinc1
 13679  01638E  006F FF7B FFE6     	movff	postinc2,postinc1
 13680  016394  006F FF7B FFE6     	movff	postinc2,postinc1
 13681  01639A  006F FF7B FFE6     	movff	postinc2,postinc1
 13682  0163A0  006F FF7B FFE6     	movff	postinc2,postinc1
 13683  0163A6  EC7A  F0C5         	call	___lomod	;wreg free
 13684  0163AA  52E5               	movf	postdec1,f,c
 13685  0163AC  006F FF9C  F03F    	movff	indf1,btemp+23
 13686  0163B2  52E5               	movf	postdec1,f,c
 13687  0163B4  006F FF9C  F03E    	movff	indf1,btemp+22
 13688  0163BA  52E5               	movf	postdec1,f,c
 13689  0163BC  006F FF9C  F03D    	movff	indf1,btemp+21
 13690  0163C2  52E5               	movf	postdec1,f,c
 13691  0163C4  006F FF9C  F03C    	movff	indf1,btemp+20
 13692  0163CA  52E5               	movf	postdec1,f,c
 13693  0163CC  006F FF9C  F03B    	movff	indf1,btemp+19
 13694  0163D2  52E5               	movf	postdec1,f,c
 13695  0163D4  006F FF9C  F03A    	movff	indf1,btemp+18
 13696  0163DA  52E5               	movf	postdec1,f,c
 13697  0163DC  006F FF9C  F039    	movff	indf1,btemp+17
 13698  0163E2  52E5               	movf	postdec1,f,c
 13699  0163E4  006F FF9C  F038    	movff	indf1,btemp+16
 13700  0163EA  0EF8               	movlw	248
 13701  0163EC  26E1               	addwf	fsr1l,f,c
 13702  0163EE  0EFF               	movlw	255
 13703  0163F0  22E2               	addwfc	fsr1h,f,c
 13704  0163F2  0E30               	movlw	48
 13705  0163F4  2638               	addwf	(btemp+16)^0,f,c
 13706                           
 13707                           ;stkvar	_i @ sp[(-14)+8]
 13708  0163F6  0EFA               	movlw	-6
 13709  0163F8  006F FF8C  F032    	movff	plusw1,btemp+10
 13710  0163FE  0EFB               	movlw	-5
 13711  016400  006F FF8C  F033    	movff	plusw1,btemp+11
 13712  016406  0E94               	movlw	low _dbuf
 13713  016408  2432               	addwf	(btemp+10)^0,w,c
 13714  01640A  6ED9               	movwf	fsr2l,c
 13715  01640C  0E03               	movlw	high _dbuf
 13716  01640E  2033               	addwfc	(btemp+11)^0,w,c
 13717  016410  6EDA               	movwf	fsr2h,c
 13718  016412  0060  F0E3  FFDF   	movff	btemp+16,indf2
 13719                           
 13720                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 612:         --p;
 13721                           ;stkvar	_p @ sp[(-14)+12]
 13722  016418  50E1               	movf	fsr1l,w,c
 13723  01641A  0FFE               	addlw	-2
 13724  01641C  6ED9               	movwf	fsr2l,c
 13725  01641E  50E2               	movf	fsr1h,w,c
 13726  016420  6EDA               	movwf	fsr2h,c
 13727  016422  0EFF               	movlw	255
 13728  016424  22DA               	addwfc	fsr2h,f,c
 13729  016426  06DE               	decf	postinc2,f,c
 13730  016428  0E00               	movlw	0
 13731  01642A  5ADD               	subwfb	postdec2,f,c
 13732                           
 13733                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 613:         --w;
 13734                           ;stkvar	_w @ sp[(-14)+10]
 13735  01642C  50E1               	movf	fsr1l,w,c
 13736  01642E  0FFC               	addlw	-4
 13737  016430  6ED9               	movwf	fsr2l,c
 13738  016432  50E2               	movf	fsr1h,w,c
 13739  016434  6EDA               	movwf	fsr2h,c
 13740  016436  0EFF               	movlw	255
 13741  016438  22DA               	addwfc	fsr2h,f,c
 13742  01643A  06DE               	decf	postinc2,f,c
 13743  01643C  0E00               	movlw	0
 13744  01643E  5ADD               	subwfb	postdec2,f,c
 13745                           
 13746                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
 13747  016440  0E0A               	movlw	10
 13748  016442  6EE6               	movwf	postinc1,c
 13749  016444  0E00               	movlw	0
 13750  016446  6EE6               	movwf	postinc1,c
 13751  016448  0E00               	movlw	0
 13752  01644A  6EE6               	movwf	postinc1,c
 13753  01644C  0E00               	movlw	0
 13754  01644E  6EE6               	movwf	postinc1,c
 13755  016450  0E00               	movlw	0
 13756  016452  6EE6               	movwf	postinc1,c
 13757  016454  0E00               	movlw	0
 13758  016456  6EE6               	movwf	postinc1,c
 13759  016458  0E00               	movlw	0
 13760  01645A  6EE6               	movwf	postinc1,c
 13761  01645C  0E00               	movlw	0
 13762  01645E  6EE6               	movwf	postinc1,c
 13763                           
 13764                           ;stkvar	_n @ sp[(-22)+0]
 13765  016460  50E1               	movf	fsr1l,w,c
 13766  016462  0FEA               	addlw	-22
 13767  016464  6ED9               	movwf	fsr2l,c
 13768  016466  50E2               	movf	fsr1h,w,c
 13769  016468  6EDA               	movwf	fsr2h,c
 13770  01646A  0EFF               	movlw	255
 13771  01646C  22DA               	addwfc	fsr2h,f,c
 13772  01646E  006F FF7B FFE6     	movff	postinc2,postinc1
 13773  016474  006F FF7B FFE6     	movff	postinc2,postinc1
 13774  01647A  006F FF7B FFE6     	movff	postinc2,postinc1
 13775  016480  006F FF7B FFE6     	movff	postinc2,postinc1
 13776  016486  006F FF7B FFE6     	movff	postinc2,postinc1
 13777  01648C  006F FF7B FFE6     	movff	postinc2,postinc1
 13778  016492  006F FF7B FFE6     	movff	postinc2,postinc1
 13779  016498  006F FF7B FFE6     	movff	postinc2,postinc1
 13780  01649E  EC85  F0C0         	call	___lodiv	;wreg free
 13781  0164A2  52E5               	movf	postdec1,f,c
 13782  0164A4  006F FF9C  F03F    	movff	indf1,btemp+23
 13783  0164AA  52E5               	movf	postdec1,f,c
 13784  0164AC  006F FF9C  F03E    	movff	indf1,btemp+22
 13785  0164B2  52E5               	movf	postdec1,f,c
 13786  0164B4  006F FF9C  F03D    	movff	indf1,btemp+21
 13787  0164BA  52E5               	movf	postdec1,f,c
 13788  0164BC  006F FF9C  F03C    	movff	indf1,btemp+20
 13789  0164C2  52E5               	movf	postdec1,f,c
 13790  0164C4  006F FF9C  F03B    	movff	indf1,btemp+19
 13791  0164CA  52E5               	movf	postdec1,f,c
 13792  0164CC  006F FF9C  F03A    	movff	indf1,btemp+18
 13793  0164D2  52E5               	movf	postdec1,f,c
 13794  0164D4  006F FF9C  F039    	movff	indf1,btemp+17
 13795  0164DA  52E5               	movf	postdec1,f,c
 13796  0164DC  006F FF9C  F038    	movff	indf1,btemp+16
 13797  0164E2  0EF8               	movlw	248
 13798  0164E4  26E1               	addwf	fsr1l,f,c
 13799  0164E6  0EFF               	movlw	255
 13800  0164E8  22E2               	addwfc	fsr1h,f,c
 13801                           
 13802                           ;stkvar	_n @ sp[(-14)+0]
 13803  0164EA  0EF2               	movlw	-14
 13804  0164EC  0060  F0E3  FFE3   	movff	btemp+16,plusw1
 13805  0164F2  0EF3               	movlw	-13
 13806  0164F4  0060  F0E7  FFE3   	movff	btemp+17,plusw1
 13807  0164FA  0EF4               	movlw	-12
 13808  0164FC  0060  F0EB  FFE3   	movff	btemp+18,plusw1
 13809  016502  0EF5               	movlw	-11
 13810  016504  0060  F0EF  FFE3   	movff	btemp+19,plusw1
 13811  01650A  0EF6               	movlw	-10
 13812  01650C  0060  F0F3  FFE3   	movff	btemp+20,plusw1
 13813  016512  0EF7               	movlw	-9
 13814  016514  0060  F0F7  FFE3   	movff	btemp+21,plusw1
 13815  01651A  0EF8               	movlw	-8
 13816  01651C  0060  F0FB  FFE3   	movff	btemp+22,plusw1
 13817  016522  0EF9               	movlw	-7
 13818  016524  0060  F0FF  FFE3   	movff	btemp+23,plusw1
 13819  01652A                     l11938:
 13820                           
 13821                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 13822                           ;stkvar	_i @ sp[(-14)+8]
 13823  01652A  0EFA               	movlw	-6
 13824  01652C  006F FF8C  F028    	movff	plusw1,btemp
 13825  016532  0EFB               	movlw	-5
 13826  016534  50E3               	movf	plusw1,w,c
 13827  016536  1028               	iorwf	btemp^0,w,c
 13828  016538  B4D8               	btfsc	status,2,c
 13829  01653A  D02F               	goto	u11330
 13830                           
 13831                           ;stkvar	_n @ sp[(-14)+0]
 13832  01653C  0EF2               	movlw	-14
 13833  01653E  50E3               	movf	plusw1,w,c
 13834  016540  E115               	bnz	u11301
 13835  016542  0EF3               	movlw	-13
 13836  016544  50E3               	movf	plusw1,w,c
 13837  016546  E112               	bnz	u11301
 13838  016548  0EF4               	movlw	-12
 13839  01654A  50E3               	movf	plusw1,w,c
 13840  01654C  E10F               	bnz	u11301
 13841  01654E  0EF5               	movlw	-11
 13842  016550  50E3               	movf	plusw1,w,c
 13843  016552  E10C               	bnz	u11301
 13844  016554  0EF6               	movlw	-10
 13845  016556  50E3               	movf	plusw1,w,c
 13846  016558  E109               	bnz	u11301
 13847  01655A  0EF7               	movlw	-9
 13848  01655C  50E3               	movf	plusw1,w,c
 13849  01655E  E106               	bnz	u11301
 13850  016560  0EF8               	movlw	-8
 13851  016562  50E3               	movf	plusw1,w,c
 13852  016564  E103               	bnz	u11301
 13853  016566  0EF9               	movlw	-7
 13854  016568  50E3               	movf	plusw1,w,c
 13855  01656A  A4D8               	btfss	status,2,c
 13856  01656C                     u11301:
 13857  01656C  D6E3               	goto	l11928
 13858                           
 13859                           ;stkvar	_p @ sp[(-14)+12]
 13860  01656E  0EFF               	movlw	-1
 13861  016570  BEE3               	btfsc	plusw1,7,c
 13862  016572  D007               	goto	u11310
 13863  016574  0EFF               	movlw	-1
 13864  016576  50E3               	movf	plusw1,w,c
 13865  016578  E103               	bnz	u11311
 13866  01657A  0EFE               	movlw	-2
 13867  01657C  04E3               	decf	plusw1,w,c
 13868  01657E  B0D8               	btfsc	status,0,c
 13869  016580                     u11311:
 13870  016580  D6D9               	goto	l11928
 13871  016582                     u11310:
 13872                           
 13873                           ;stkvar	_w @ sp[(-14)+10]
 13874  016582  0EFD               	movlw	-3
 13875  016584  BEE3               	btfsc	plusw1,7,c
 13876  016586  D009               	goto	u11330
 13877  016588  0EFD               	movlw	-3
 13878  01658A  50E3               	movf	plusw1,w,c
 13879  01658C  E104               	bnz	u11320
 13880  01658E  0EFC               	movlw	-4
 13881  016590  04E3               	decf	plusw1,w,c
 13882  016592  A0D8               	btfss	status,0,c
 13883  016594  D002               	goto	u11330
 13884  016596                     u11320:
 13885  016596  B24C               	btfsc	_flags^0,1,c
 13886  016598  D6CD               	goto	l11928
 13887  01659A                     u11330:
 13888                           
 13889                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
 13890                           ;stkvar	_w @ sp[(-14)+10]
 13891  01659A  0EFC               	movlw	-4
 13892  01659C  006F FF8F FFE6     	movff	plusw1,postinc1
 13893  0165A2  006F FF8F FFE6     	movff	plusw1,postinc1
 13894                           
 13895                           ;stkvar	_i @ sp[(-16)+8]
 13896  0165A8  0E94               	movlw	low _dbuf
 13897  0165AA  6E32               	movwf	(btemp+10)^0,c
 13898  0165AC  0E03               	movlw	high _dbuf
 13899  0165AE  6E33               	movwf	(btemp+11)^0,c
 13900  0165B0  0EF8               	movlw	-8
 13901  0165B2  50E3               	movf	plusw1,w,c
 13902  0165B4  2632               	addwf	(btemp+10)^0,f,c
 13903  0165B6  0EF9               	movlw	-7
 13904  0165B8  50E3               	movf	plusw1,w,c
 13905  0165BA  2233               	addwfc	(btemp+11)^0,f,c
 13906  0165BC  0060  F0CB  FFE6   	movff	btemp+10,postinc1
 13907  0165C2  0060  F0CF  FFE6   	movff	btemp+11,postinc1
 13908                           
 13909                           ;stkvar	_fp @ sp[(-18)+-2]
 13910  0165C8  0EEC               	movlw	-20
 13911  0165CA  006F FF8F FFE6     	movff	plusw1,postinc1
 13912  0165D0  006F FF8F FFE6     	movff	plusw1,postinc1
 13913  0165D6  EC6F  F0C8         	call	_pad	;wreg free
 13914                           
 13915                           ; _utoa: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 13916  0165DA  0EE8               	movlw	232
 13917  0165DC  26E1               	addwf	fsr1l,f,c
 13918  0165DE  0EFF               	movlw	255
 13919  0165E0  22E2               	addwfc	fsr1h,f,c
 13920  0165E2  0012               	return		;funcret
 13921  0165E4                     __end_of_utoa:
 13922                           	opt callstack 0
 13923                           
 13924 ;; *************** function ___lomod *****************
 13925 ;; Defined at:
 13926 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lomod.c"
 13927 ;; Parameters:    Size  Location     Type
 13928 ;;  dividend        8  [STACK] unsigned long long 
 13929 ;;  divisor         8  [STACK] unsigned long long 
 13930 ;; Auto vars:     Size  Location     Type
 13931 ;;  counter         1  [STACK] unsigned char 
 13932 ;; Return value:  Size  Location     Type
 13933 ;;                  8  [STACK] unsigned long long 
 13934 ;; Registers used:
 13935 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 13936 ;; Tracked objects:
 13937 ;;		On entry : 0/3
 13938 ;;		On exit  : 0/0
 13939 ;;		Unchanged: 0/0
 13940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13944 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13945 ;;Total ram usage:        0 bytes
 13946 ;; Hardware stack levels used:    1
 13947 ;; Hardware stack levels required when called:   15
 13948 ;; This function calls:
 13949 ;;		Nothing
 13950 ;; This function is called by:
 13951 ;;		_utoa
 13952 ;; This function uses a reentrant model
 13953 ;;
 13954                           
 13955                           	psect	text51
 13956  018AF4                     __ptext51:
 13957                           	opt callstack 0
 13958  018AF4                     ___lomod:
 13959                           	opt callstack 0
 13960                           
 13961                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 13962  018AF4  52E6               	movf	postinc1,f,c
 13963                           
 13964                           ;stkvar	_divisor @ sp[(-1)+-16]
 13965                           
 13966                           ;incstack = 0
 13967 ;; hardware stack exceeded
 13968  018AF6  0EEF               	movlw	-17
 13969  018AF8  50E3               	movf	plusw1,w,c
 13970  018AFA  E116               	bnz	u7110
 13971  018AFC  0EF0               	movlw	-16
 13972  018AFE  50E3               	movf	plusw1,w,c
 13973  018B00  E113               	bnz	u7110
 13974  018B02  0EF1               	movlw	-15
 13975  018B04  50E3               	movf	plusw1,w,c
 13976  018B06  E110               	bnz	u7110
 13977  018B08  0EF2               	movlw	-14
 13978  018B0A  50E3               	movf	plusw1,w,c
 13979  018B0C  E10D               	bnz	u7110
 13980  018B0E  0EF3               	movlw	-13
 13981  018B10  50E3               	movf	plusw1,w,c
 13982  018B12  E10A               	bnz	u7110
 13983  018B14  0EF4               	movlw	-12
 13984  018B16  50E3               	movf	plusw1,w,c
 13985  018B18  E107               	bnz	u7110
 13986  018B1A  0EF5               	movlw	-11
 13987  018B1C  50E3               	movf	plusw1,w,c
 13988  018B1E  E104               	bnz	u7110
 13989  018B20  0EF6               	movlw	-10
 13990  018B22  50E3               	movf	plusw1,w,c
 13991  018B24  B4D8               	btfsc	status,2,c
 13992  018B26  D075               	goto	u7140
 13993  018B28                     u7110:
 13994                           
 13995                           ;stkvar	_counter @ sp[(-1)+0]
 13996  018B28  0EFF               	movlw	-1
 13997  018B2A  6AE3               	clrf	plusw1,c
 13998  018B2C  D012               	goto	L12
 13999  018B2E                     l8448:
 14000                           
 14001                           ;stkvar	_divisor @ sp[(-1)+-16]
 14002  018B2E  90D8               	bcf	status,0,c
 14003  018B30  0EEF               	movlw	-17
 14004  018B32  36E3               	rlcf	plusw1,f,c
 14005  018B34  0EF0               	movlw	-16
 14006  018B36  36E3               	rlcf	plusw1,f,c
 14007  018B38  0EF1               	movlw	-15
 14008  018B3A  36E3               	rlcf	plusw1,f,c
 14009  018B3C  0EF2               	movlw	-14
 14010  018B3E  36E3               	rlcf	plusw1,f,c
 14011  018B40  0EF3               	movlw	-13
 14012  018B42  36E3               	rlcf	plusw1,f,c
 14013  018B44  0EF4               	movlw	-12
 14014  018B46  36E3               	rlcf	plusw1,f,c
 14015  018B48  0EF5               	movlw	-11
 14016  018B4A  36E3               	rlcf	plusw1,f,c
 14017  018B4C  0EF6               	movlw	-10
 14018  018B4E  36E3               	rlcf	plusw1,f,c
 14019                           
 14020                           ;stkvar	_counter @ sp[(-1)+0]
 14021  018B50  0EFF               	movlw	-1
 14022  018B52                     L12:
 14023  018B52  2AE3               	incf	plusw1,f,c
 14024                           
 14025                           ;stkvar	_divisor @ sp[(-1)+-16]
 14026  018B54  0EF6               	movlw	-10
 14027  018B56  AEE3               	btfss	plusw1,7,c
 14028  018B58  D7EA               	goto	l8448
 14029  018B5A                     u7120:
 14030                           
 14031                           ;stkvar	_divisor @ sp[(-1)+-16]
 14032                           ;stkvar	_dividend @ sp[(-1)+-8]
 14033  018B5A  50E1               	movf	fsr1l,w,c
 14034  018B5C  0FF7               	addlw	-9
 14035  018B5E  6ED9               	movwf	fsr2l,c
 14036  018B60  50E2               	movf	fsr1h,w,c
 14037  018B62  6EDA               	movwf	fsr2h,c
 14038  018B64  0EFF               	movlw	255
 14039  018B66  22DA               	addwfc	fsr2h,f,c
 14040  018B68  0EEF               	movlw	-17
 14041  018B6A  50E3               	movf	plusw1,w,c
 14042  018B6C  5CDE               	subwf	postinc2,w,c
 14043  018B6E  0EF0               	movlw	-16
 14044  018B70  50E3               	movf	plusw1,w,c
 14045  018B72  58DE               	subwfb	postinc2,w,c
 14046  018B74  0EF1               	movlw	-15
 14047  018B76  50E3               	movf	plusw1,w,c
 14048  018B78  58DE               	subwfb	postinc2,w,c
 14049  018B7A  0EF2               	movlw	-14
 14050  018B7C  50E3               	movf	plusw1,w,c
 14051  018B7E  58DE               	subwfb	postinc2,w,c
 14052  018B80  0EF3               	movlw	-13
 14053  018B82  50E3               	movf	plusw1,w,c
 14054  018B84  58DE               	subwfb	postinc2,w,c
 14055  018B86  0EF4               	movlw	-12
 14056  018B88  50E3               	movf	plusw1,w,c
 14057  018B8A  58DE               	subwfb	postinc2,w,c
 14058  018B8C  0EF5               	movlw	-11
 14059  018B8E  50E3               	movf	plusw1,w,c
 14060  018B90  58DE               	subwfb	postinc2,w,c
 14061  018B92  0EF6               	movlw	-10
 14062  018B94  50E3               	movf	plusw1,w,c
 14063  018B96  58DE               	subwfb	postinc2,w,c
 14064  018B98  A0D8               	btfss	status,0,c
 14065  018B9A  D01F               	goto	l8456
 14066                           
 14067                           ;stkvar	_divisor @ sp[(-1)+-16]
 14068                           ;stkvar	_dividend @ sp[(-1)+-8]
 14069  018B9C  50E1               	movf	fsr1l,w,c
 14070  018B9E  0FF7               	addlw	-9
 14071  018BA0  6ED9               	movwf	fsr2l,c
 14072  018BA2  50E2               	movf	fsr1h,w,c
 14073  018BA4  6EDA               	movwf	fsr2h,c
 14074  018BA6  0EFF               	movlw	255
 14075  018BA8  22DA               	addwfc	fsr2h,f,c
 14076  018BAA  0EEF               	movlw	-17
 14077  018BAC  50E3               	movf	plusw1,w,c
 14078  018BAE  5EDE               	subwf	postinc2,f,c
 14079  018BB0  0EF0               	movlw	-16
 14080  018BB2  50E3               	movf	plusw1,w,c
 14081  018BB4  5ADE               	subwfb	postinc2,f,c
 14082  018BB6  0EF1               	movlw	-15
 14083  018BB8  50E3               	movf	plusw1,w,c
 14084  018BBA  5ADE               	subwfb	postinc2,f,c
 14085  018BBC  0EF2               	movlw	-14
 14086  018BBE  50E3               	movf	plusw1,w,c
 14087  018BC0  5ADE               	subwfb	postinc2,f,c
 14088  018BC2  0EF3               	movlw	-13
 14089  018BC4  50E3               	movf	plusw1,w,c
 14090  018BC6  5ADE               	subwfb	postinc2,f,c
 14091  018BC8  0EF4               	movlw	-12
 14092  018BCA  50E3               	movf	plusw1,w,c
 14093  018BCC  5ADE               	subwfb	postinc2,f,c
 14094  018BCE  0EF5               	movlw	-11
 14095  018BD0  50E3               	movf	plusw1,w,c
 14096  018BD2  5ADE               	subwfb	postinc2,f,c
 14097  018BD4  0EF6               	movlw	-10
 14098  018BD6  50E3               	movf	plusw1,w,c
 14099  018BD8  5ADE               	subwfb	postinc2,f,c
 14100  018BDA                     l8456:
 14101                           
 14102                           ;stkvar	_divisor @ sp[(-1)+-16]
 14103  018BDA  90D8               	bcf	status,0,c
 14104  018BDC  0EF6               	movlw	-10
 14105  018BDE  32E3               	rrcf	plusw1,f,c
 14106  018BE0  0EF5               	movlw	-11
 14107  018BE2  32E3               	rrcf	plusw1,f,c
 14108  018BE4  0EF4               	movlw	-12
 14109  018BE6  32E3               	rrcf	plusw1,f,c
 14110  018BE8  0EF3               	movlw	-13
 14111  018BEA  32E3               	rrcf	plusw1,f,c
 14112  018BEC  0EF2               	movlw	-14
 14113  018BEE  32E3               	rrcf	plusw1,f,c
 14114  018BF0  0EF1               	movlw	-15
 14115  018BF2  32E3               	rrcf	plusw1,f,c
 14116  018BF4  0EF0               	movlw	-16
 14117  018BF6  32E3               	rrcf	plusw1,f,c
 14118  018BF8  0EEF               	movlw	-17
 14119  018BFA  32E3               	rrcf	plusw1,f,c
 14120                           
 14121                           ;stkvar	_counter @ sp[(-1)+0]
 14122  018BFC  0EFF               	movlw	-1
 14123  018BFE  50E3               	movf	plusw1,w,c
 14124  018C00  6E28               	movwf	btemp^0,c
 14125  018C02  0E01               	movlw	1
 14126  018C04  5E28               	subwf	btemp^0,f,c
 14127  018C06  0EFF               	movlw	-1
 14128  018C08  0060  F0A3  FFE3   	movff	btemp,plusw1
 14129  018C0E  A4D8               	btfss	status,2,c
 14130  018C10  D7A4               	goto	u7120
 14131  018C12                     u7140:
 14132                           
 14133                           ;stkvar	_dividend @ sp[(-1)+-8]
 14134  018C12  0EF7               	movlw	247
 14135  018C14  24E1               	addwf	fsr1l,w,c
 14136  018C16  6ED9               	movwf	fsr2l,c
 14137  018C18  0EFF               	movlw	255
 14138  018C1A  20E2               	addwfc	fsr1h,w,c
 14139  018C1C  6EDA               	movwf	fsr2h,c
 14140                           
 14141                           ;stkvar	?___lomod @ sp[(-1)+-8]
 14142  018C1E  0E08               	movlw	8
 14143  018C20  6E28               	movwf	btemp^0,c
 14144  018C22  0EF7               	movlw	-9
 14145  018C24                     us715999:
 14146  018C24  006F FF7B FFE3     	movff	postinc2,plusw1
 14147  018C2A  28E8               	incf	wreg,w,c
 14148  018C2C  2E28               	decfsz	btemp^0,f,c
 14149  018C2E  D7FA               	bra	us715999
 14150                           
 14151                           ; ___lomod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 14152  018C30  52E5               	movf	postdec1,f,c
 14153  018C32  0012               	return		;funcret
 14154  018C34                     __end_of___lomod:
 14155                           	opt callstack 0
 14156                           
 14157 ;; *************** function ___lodiv *****************
 14158 ;; Defined at:
 14159 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lodiv.c"
 14160 ;; Parameters:    Size  Location     Type
 14161 ;;  dividend        8  [STACK] unsigned long long 
 14162 ;;  divisor         8  [STACK] unsigned long long 
 14163 ;; Auto vars:     Size  Location     Type
 14164 ;;  quotient        8  [STACK] unsigned long long 
 14165 ;;  counter         1  [STACK] unsigned char 
 14166 ;; Return value:  Size  Location     Type
 14167 ;;                  8  [STACK] unsigned long long 
 14168 ;; Registers used:
 14169 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 14170 ;; Tracked objects:
 14171 ;;		On entry : 0/3
 14172 ;;		On exit  : 0/0
 14173 ;;		Unchanged: 0/0
 14174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14178 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14179 ;;Total ram usage:        0 bytes
 14180 ;; Hardware stack levels used:    1
 14181 ;; Hardware stack levels required when called:   15
 14182 ;; This function calls:
 14183 ;;		Nothing
 14184 ;; This function is called by:
 14185 ;;		_utoa
 14186 ;; This function uses a reentrant model
 14187 ;;
 14188                           
 14189                           	psect	text52
 14190  01810A                     __ptext52:
 14191                           	opt callstack 0
 14192  01810A                     ___lodiv:
 14193                           	opt callstack 0
 14194                           
 14195                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 14196  01810A  0E09               	movlw	9
 14197  01810C  26E1               	addwf	fsr1l,f,c
 14198  01810E  0E00               	movlw	0
 14199  018110  22E2               	addwfc	fsr1h,f,c
 14200                           
 14201                           ;stkvar	_quotient @ sp[(-9)+0]
 14202                           
 14203                           ;incstack = 0
 14204 ;; hardware stack exceeded
 14205  018112  0E07               	movlw	7
 14206  018114  6E28               	movwf	btemp^0,c
 14207  018116  0EF7               	movlw	-9
 14208  018118                     u7051:
 14209  018118  6AE3               	clrf	plusw1,c
 14210  01811A  2AE8               	incf	wreg,f,c
 14211  01811C  0628               	decf	btemp^0,f,c
 14212  01811E  E2FC               	bc	u7051
 14213                           
 14214                           ;stkvar	_divisor @ sp[(-9)+-16]
 14215  018120  0EE7               	movlw	-25
 14216  018122  50E3               	movf	plusw1,w,c
 14217  018124  E116               	bnz	u7060
 14218  018126  0EE8               	movlw	-24
 14219  018128  50E3               	movf	plusw1,w,c
 14220  01812A  E113               	bnz	u7060
 14221  01812C  0EE9               	movlw	-23
 14222  01812E  50E3               	movf	plusw1,w,c
 14223  018130  E110               	bnz	u7060
 14224  018132  0EEA               	movlw	-22
 14225  018134  50E3               	movf	plusw1,w,c
 14226  018136  E10D               	bnz	u7060
 14227  018138  0EEB               	movlw	-21
 14228  01813A  50E3               	movf	plusw1,w,c
 14229  01813C  E10A               	bnz	u7060
 14230  01813E  0EEC               	movlw	-20
 14231  018140  50E3               	movf	plusw1,w,c
 14232  018142  E107               	bnz	u7060
 14233  018144  0EED               	movlw	-19
 14234  018146  50E3               	movf	plusw1,w,c
 14235  018148  E104               	bnz	u7060
 14236  01814A  0EEE               	movlw	-18
 14237  01814C  50E3               	movf	plusw1,w,c
 14238  01814E  B4D8               	btfsc	status,2,c
 14239  018150  D088               	goto	u7090
 14240  018152                     u7060:
 14241                           
 14242                           ;stkvar	_counter @ sp[(-9)+8]
 14243  018152  0EFF               	movlw	-1
 14244  018154  6AE3               	clrf	plusw1,c
 14245  018156  D012               	goto	L13
 14246  018158                     l8424:
 14247                           
 14248                           ;stkvar	_divisor @ sp[(-9)+-16]
 14249  018158  90D8               	bcf	status,0,c
 14250  01815A  0EE7               	movlw	-25
 14251  01815C  36E3               	rlcf	plusw1,f,c
 14252  01815E  0EE8               	movlw	-24
 14253  018160  36E3               	rlcf	plusw1,f,c
 14254  018162  0EE9               	movlw	-23
 14255  018164  36E3               	rlcf	plusw1,f,c
 14256  018166  0EEA               	movlw	-22
 14257  018168  36E3               	rlcf	plusw1,f,c
 14258  01816A  0EEB               	movlw	-21
 14259  01816C  36E3               	rlcf	plusw1,f,c
 14260  01816E  0EEC               	movlw	-20
 14261  018170  36E3               	rlcf	plusw1,f,c
 14262  018172  0EED               	movlw	-19
 14263  018174  36E3               	rlcf	plusw1,f,c
 14264  018176  0EEE               	movlw	-18
 14265  018178  36E3               	rlcf	plusw1,f,c
 14266                           
 14267                           ;stkvar	_counter @ sp[(-9)+8]
 14268  01817A  0EFF               	movlw	-1
 14269  01817C                     L13:
 14270  01817C  2AE3               	incf	plusw1,f,c
 14271                           
 14272                           ;stkvar	_divisor @ sp[(-9)+-16]
 14273  01817E  0EEE               	movlw	-18
 14274  018180  AEE3               	btfss	plusw1,7,c
 14275  018182  D7EA               	goto	l8424
 14276  018184                     u7070:
 14277                           
 14278                           ;stkvar	_quotient @ sp[(-9)+0]
 14279  018184  90D8               	bcf	status,0,c
 14280  018186  0EF7               	movlw	-9
 14281  018188  36E3               	rlcf	plusw1,f,c
 14282  01818A  0EF8               	movlw	-8
 14283  01818C  36E3               	rlcf	plusw1,f,c
 14284  01818E  0EF9               	movlw	-7
 14285  018190  36E3               	rlcf	plusw1,f,c
 14286  018192  0EFA               	movlw	-6
 14287  018194  36E3               	rlcf	plusw1,f,c
 14288  018196  0EFB               	movlw	-5
 14289  018198  36E3               	rlcf	plusw1,f,c
 14290  01819A  0EFC               	movlw	-4
 14291  01819C  36E3               	rlcf	plusw1,f,c
 14292  01819E  0EFD               	movlw	-3
 14293  0181A0  36E3               	rlcf	plusw1,f,c
 14294  0181A2  0EFE               	movlw	-2
 14295  0181A4  36E3               	rlcf	plusw1,f,c
 14296                           
 14297                           ;stkvar	_divisor @ sp[(-9)+-16]
 14298                           ;stkvar	_dividend @ sp[(-9)+-8]
 14299  0181A6  50E1               	movf	fsr1l,w,c
 14300  0181A8  0FEF               	addlw	-17
 14301  0181AA  6ED9               	movwf	fsr2l,c
 14302  0181AC  50E2               	movf	fsr1h,w,c
 14303  0181AE  6EDA               	movwf	fsr2h,c
 14304  0181B0  0EFF               	movlw	255
 14305  0181B2  22DA               	addwfc	fsr2h,f,c
 14306  0181B4  0EE7               	movlw	-25
 14307  0181B6  50E3               	movf	plusw1,w,c
 14308  0181B8  5CDE               	subwf	postinc2,w,c
 14309  0181BA  0EE8               	movlw	-24
 14310  0181BC  50E3               	movf	plusw1,w,c
 14311  0181BE  58DE               	subwfb	postinc2,w,c
 14312  0181C0  0EE9               	movlw	-23
 14313  0181C2  50E3               	movf	plusw1,w,c
 14314  0181C4  58DE               	subwfb	postinc2,w,c
 14315  0181C6  0EEA               	movlw	-22
 14316  0181C8  50E3               	movf	plusw1,w,c
 14317  0181CA  58DE               	subwfb	postinc2,w,c
 14318  0181CC  0EEB               	movlw	-21
 14319  0181CE  50E3               	movf	plusw1,w,c
 14320  0181D0  58DE               	subwfb	postinc2,w,c
 14321  0181D2  0EEC               	movlw	-20
 14322  0181D4  50E3               	movf	plusw1,w,c
 14323  0181D6  58DE               	subwfb	postinc2,w,c
 14324  0181D8  0EED               	movlw	-19
 14325  0181DA  50E3               	movf	plusw1,w,c
 14326  0181DC  58DE               	subwfb	postinc2,w,c
 14327  0181DE  0EEE               	movlw	-18
 14328  0181E0  50E3               	movf	plusw1,w,c
 14329  0181E2  58DE               	subwfb	postinc2,w,c
 14330  0181E4  A0D8               	btfss	status,0,c
 14331  0181E6  D021               	goto	l8436
 14332                           
 14333                           ;stkvar	_divisor @ sp[(-9)+-16]
 14334                           ;stkvar	_dividend @ sp[(-9)+-8]
 14335  0181E8  50E1               	movf	fsr1l,w,c
 14336  0181EA  0FEF               	addlw	-17
 14337  0181EC  6ED9               	movwf	fsr2l,c
 14338  0181EE  50E2               	movf	fsr1h,w,c
 14339  0181F0  6EDA               	movwf	fsr2h,c
 14340  0181F2  0EFF               	movlw	255
 14341  0181F4  22DA               	addwfc	fsr2h,f,c
 14342  0181F6  0EE7               	movlw	-25
 14343  0181F8  50E3               	movf	plusw1,w,c
 14344  0181FA  5EDE               	subwf	postinc2,f,c
 14345  0181FC  0EE8               	movlw	-24
 14346  0181FE  50E3               	movf	plusw1,w,c
 14347  018200  5ADE               	subwfb	postinc2,f,c
 14348  018202  0EE9               	movlw	-23
 14349  018204  50E3               	movf	plusw1,w,c
 14350  018206  5ADE               	subwfb	postinc2,f,c
 14351  018208  0EEA               	movlw	-22
 14352  01820A  50E3               	movf	plusw1,w,c
 14353  01820C  5ADE               	subwfb	postinc2,f,c
 14354  01820E  0EEB               	movlw	-21
 14355  018210  50E3               	movf	plusw1,w,c
 14356  018212  5ADE               	subwfb	postinc2,f,c
 14357  018214  0EEC               	movlw	-20
 14358  018216  50E3               	movf	plusw1,w,c
 14359  018218  5ADE               	subwfb	postinc2,f,c
 14360  01821A  0EED               	movlw	-19
 14361  01821C  50E3               	movf	plusw1,w,c
 14362  01821E  5ADE               	subwfb	postinc2,f,c
 14363  018220  0EEE               	movlw	-18
 14364  018222  50E3               	movf	plusw1,w,c
 14365  018224  5ADE               	subwfb	postinc2,f,c
 14366                           
 14367                           ;stkvar	_quotient @ sp[(-9)+0]
 14368  018226  0EF7               	movlw	-9
 14369  018228  80E3               	bsf	plusw1,0,c
 14370  01822A                     l8436:
 14371                           
 14372                           ;stkvar	_divisor @ sp[(-9)+-16]
 14373  01822A  90D8               	bcf	status,0,c
 14374  01822C  0EEE               	movlw	-18
 14375  01822E  32E3               	rrcf	plusw1,f,c
 14376  018230  0EED               	movlw	-19
 14377  018232  32E3               	rrcf	plusw1,f,c
 14378  018234  0EEC               	movlw	-20
 14379  018236  32E3               	rrcf	plusw1,f,c
 14380  018238  0EEB               	movlw	-21
 14381  01823A  32E3               	rrcf	plusw1,f,c
 14382  01823C  0EEA               	movlw	-22
 14383  01823E  32E3               	rrcf	plusw1,f,c
 14384  018240  0EE9               	movlw	-23
 14385  018242  32E3               	rrcf	plusw1,f,c
 14386  018244  0EE8               	movlw	-24
 14387  018246  32E3               	rrcf	plusw1,f,c
 14388  018248  0EE7               	movlw	-25
 14389  01824A  32E3               	rrcf	plusw1,f,c
 14390                           
 14391                           ;stkvar	_counter @ sp[(-9)+8]
 14392  01824C  0EFF               	movlw	-1
 14393  01824E  50E3               	movf	plusw1,w,c
 14394  018250  6E28               	movwf	btemp^0,c
 14395  018252  0E01               	movlw	1
 14396  018254  5E28               	subwf	btemp^0,f,c
 14397  018256  0EFF               	movlw	-1
 14398  018258  0060  F0A3  FFE3   	movff	btemp,plusw1
 14399  01825E  A4D8               	btfss	status,2,c
 14400  018260  D791               	goto	u7070
 14401  018262                     u7090:
 14402                           
 14403                           ;stkvar	_quotient @ sp[(-9)+0]
 14404  018262  0EF7               	movlw	247
 14405  018264  24E1               	addwf	fsr1l,w,c
 14406  018266  6ED9               	movwf	fsr2l,c
 14407  018268  0EFF               	movlw	255
 14408  01826A  20E2               	addwfc	fsr1h,w,c
 14409  01826C  6EDA               	movwf	fsr2h,c
 14410                           
 14411                           ;stkvar	?___lodiv @ sp[(-9)+-8]
 14412  01826E  0E08               	movlw	8
 14413  018270  6E28               	movwf	btemp^0,c
 14414  018272  0EEF               	movlw	-17
 14415  018274                     us710999:
 14416  018274  006F FF7B FFE3     	movff	postinc2,plusw1
 14417  01827A  28E8               	incf	wreg,w,c
 14418  01827C  2E28               	decfsz	btemp^0,f,c
 14419  01827E  D7FA               	bra	us710999
 14420                           
 14421                           ; ___lodiv: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 14422  018280  0EF7               	movlw	247
 14423  018282  26E1               	addwf	fsr1l,f,c
 14424  018284  0EFF               	movlw	255
 14425  018286  22E2               	addwfc	fsr1h,f,c
 14426  018288  0012               	return		;funcret
 14427  01828A                     __end_of___lodiv:
 14428                           	opt callstack 0
 14429                           
 14430 ;; *************** function _strncmp *****************
 14431 ;; Defined at:
 14432 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 14433 ;; Parameters:    Size  Location     Type
 14434 ;;  _l              2  [STACK] PTR const unsigned char 
 14435 ;;		 -> ct(3), STR_65(85), STR_63(3), STR_62(3), 
 14436 ;;		 -> STR_61(19), STR_60(19), STR_59(19), STR_58(19), 
 14437 ;;		 -> STR_57(19), STR_56(19), STR_55(24), STR_54(15), 
 14438 ;;		 -> STR_53(15), STR_52(15), STR_51(10), STR_50(10), 
 14439 ;;		 -> STR_49(19), STR_48(19), STR_45(3), STR_44(3), 
 14440 ;;		 -> STR_43(3), STR_42(17), STR_41(16), STR_40(16), 
 14441 ;;		 -> STR_39(20), STR_38(20), STR_37(20), STR_36(20), 
 14442 ;;		 -> STR_35(20), STR_34(20), STR_33(19), STR_32(19), 
 14443 ;;		 -> STR_31(19), STR_30(19), STR_29(19), STR_28(19), 
 14444 ;;		 -> STR_27(19), STR_26(19), STR_25(19), STR_24(19), 
 14445 ;;		 -> STR_23(19), STR_22(19), STR_21(17), STR_20(16), 
 14446 ;;		 -> STR_19(16), STR_18(26), STR_17(26), STR_16(22), 
 14447 ;;		 -> STR_15(21), STR_14(17), STR_13(17), STR_12(17), 
 14448 ;;		 -> STR_11(22), STR_10(22), STR_9(23), STR_8(18), 
 14449 ;;		 -> STR_7(17), STR_6(17), STR_5(17), STR_4(17), 
 14450 ;;		 -> STR_2(15), STR_1(17), 
 14451 ;;  _r              2  [STACK] PTR const unsigned char 
 14452 ;;		 -> STR_99(3), STR_95(3), STR_90(3), STR_85(3), 
 14453 ;;		 -> STR_80(3), STR_76(3), 
 14454 ;;  n               2  [STACK] unsigned int 
 14455 ;; Auto vars:     Size  Location     Type
 14456 ;;  r               2  [STACK] PTR const unsigned char 
 14457 ;;		 -> STR_99(3), STR_95(3), STR_90(3), STR_85(3), 
 14458 ;;		 -> STR_80(3), STR_76(3), 
 14459 ;;  l               2  [STACK] PTR const unsigned char 
 14460 ;;		 -> ct(3), STR_65(85), STR_63(3), STR_62(3), 
 14461 ;;		 -> STR_61(19), STR_60(19), STR_59(19), STR_58(19), 
 14462 ;;		 -> STR_57(19), STR_56(19), STR_55(24), STR_54(15), 
 14463 ;;		 -> STR_53(15), STR_52(15), STR_51(10), STR_50(10), 
 14464 ;;		 -> STR_49(19), STR_48(19), STR_45(3), STR_44(3), 
 14465 ;;		 -> STR_43(3), STR_42(17), STR_41(16), STR_40(16), 
 14466 ;;		 -> STR_39(20), STR_38(20), STR_37(20), STR_36(20), 
 14467 ;;		 -> STR_35(20), STR_34(20), STR_33(19), STR_32(19), 
 14468 ;;		 -> STR_31(19), STR_30(19), STR_29(19), STR_28(19), 
 14469 ;;		 -> STR_27(19), STR_26(19), STR_25(19), STR_24(19), 
 14470 ;;		 -> STR_23(19), STR_22(19), STR_21(17), STR_20(16), 
 14471 ;;		 -> STR_19(16), STR_18(26), STR_17(26), STR_16(22), 
 14472 ;;		 -> STR_15(21), STR_14(17), STR_13(17), STR_12(17), 
 14473 ;;		 -> STR_11(22), STR_10(22), STR_9(23), STR_8(18), 
 14474 ;;		 -> STR_7(17), STR_6(17), STR_5(17), STR_4(17), 
 14475 ;;		 -> STR_2(15), STR_1(17), 
 14476 ;; Return value:  Size  Location     Type
 14477 ;;                  2  [STACK] int 
 14478 ;; Registers used:
 14479 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tbl
      +ptrh, tblptru, prodl
 14480 ;; Tracked objects:
 14481 ;;		On entry : 0/0
 14482 ;;		On exit  : 0/0
 14483 ;;		Unchanged: 0/0
 14484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14489 ;;Total ram usage:        0 bytes
 14490 ;; Hardware stack levels used:    1
 14491 ;; Hardware stack levels required when called:   15
 14492 ;; This function calls:
 14493 ;;		Nothing
 14494 ;; This function is called by:
 14495 ;;		_vfpfcnvrt
 14496 ;; This function uses a reentrant model
 14497 ;;
 14498                           
 14499                           	psect	text53
 14500  017582                     __ptext53:
 14501                           	opt callstack 0
 14502  017582                     _strncmp:
 14503                           	opt callstack 0
 14504                           
 14505                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14506  017582  52E6               	movf	postinc1,f,c
 14507  017584  52E6               	movf	postinc1,f,c
 14508  017586  52E6               	movf	postinc1,f,c
 14509  017588  52E6               	movf	postinc1,f,c
 14510                           
 14511                           ;stkvar	__l @ sp[(-4)+-2]
 14512                           
 14513                           ;incstack = 0
 14514 ;; hardware stack exceeded
 14515  01758A  0EFA               	movlw	-6
 14516  01758C  006F FF8C  F032    	movff	plusw1,btemp+10
 14517  017592  0EFB               	movlw	-5
 14518  017594  006F FF8C  F033    	movff	plusw1,btemp+11
 14519                           
 14520                           ;stkvar	_l @ sp[(-4)+2]
 14521  01759A  0EFF               	movlw	-1
 14522  01759C  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 14523  0175A2  0EFE               	movlw	-2
 14524  0175A4  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 14525                           
 14526                           ;stkvar	__r @ sp[(-4)+-4]
 14527  0175AA  0EF8               	movlw	-8
 14528  0175AC  006F FF8C  F032    	movff	plusw1,btemp+10
 14529  0175B2  0EF9               	movlw	-7
 14530  0175B4  006F FF8C  F033    	movff	plusw1,btemp+11
 14531                           
 14532                           ;stkvar	_r @ sp[(-4)+0]
 14533  0175BA  0EFD               	movlw	-3
 14534  0175BC  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 14535  0175C2  0EFC               	movlw	-4
 14536  0175C4  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 14537                           
 14538                           ;stkvar	_n @ sp[(-4)+-6]
 14539  0175CA  0EF6               	movlw	-10
 14540  0175CC  006F FF8C  F028    	movff	plusw1,btemp
 14541  0175D2  0E01               	movlw	1
 14542  0175D4  5E28               	subwf	btemp^0,f,c
 14543  0175D6  0EF6               	movlw	-10
 14544  0175D8  0060  F0A3  FFE3   	movff	btemp,plusw1
 14545  0175DE  0EF7               	movlw	-9
 14546  0175E0  006F FF8C  F028    	movff	plusw1,btemp
 14547  0175E6  0E00               	movlw	0
 14548  0175E8  5A28               	subwfb	btemp^0,f,c
 14549  0175EA  0EF7               	movlw	-9
 14550  0175EC  0060  F0A3  FFE3   	movff	btemp,plusw1
 14551  0175F2  0EF6               	movlw	-10
 14552  0175F4  28E3               	incf	plusw1,w,c
 14553  0175F6  E13F               	bnz	l9132
 14554  0175F8  0EF7               	movlw	-9
 14555  0175FA  28E3               	incf	plusw1,w,c
 14556  0175FC  A4D8               	btfss	status,2,c
 14557  0175FE  D03B               	goto	l9132
 14558  017600  0E00               	movlw	0
 14559  017602  6E28               	movwf	btemp^0,c
 14560  017604  0E00               	movlw	0
 14561  017606  6E29               	movwf	(btemp+1)^0,c
 14562  017608  D0C7               	goto	l3419
 14563  01760A                     l9130:
 14564                           
 14565                           ;stkvar	_l @ sp[(-4)+2]
 14566  01760A  0EFE               	movlw	-2
 14567  01760C  50E3               	movf	plusw1,w,c
 14568  01760E  0F01               	addlw	1
 14569  017610  6E28               	movwf	btemp^0,c
 14570  017612  0EFE               	movlw	-2
 14571  017614  0060  F0A3  FFE3   	movff	btemp,plusw1
 14572  01761A  6A28               	clrf	btemp^0,c
 14573  01761C  0EFF               	movlw	-1
 14574  01761E  50E3               	movf	plusw1,w,c
 14575  017620  2028               	addwfc	btemp^0,w,c
 14576  017622  6E28               	movwf	btemp^0,c
 14577  017624  0EFF               	movlw	-1
 14578  017626  0060  F0A3  FFE3   	movff	btemp,plusw1
 14579                           
 14580                           ;stkvar	_r @ sp[(-4)+0]
 14581  01762C  0EFC               	movlw	-4
 14582  01762E  50E3               	movf	plusw1,w,c
 14583  017630  0F01               	addlw	1
 14584  017632  6E28               	movwf	btemp^0,c
 14585  017634  0EFC               	movlw	-4
 14586  017636  0060  F0A3  FFE3   	movff	btemp,plusw1
 14587  01763C  6A28               	clrf	btemp^0,c
 14588  01763E  0EFD               	movlw	-3
 14589  017640  50E3               	movf	plusw1,w,c
 14590  017642  2028               	addwfc	btemp^0,w,c
 14591  017644  6E28               	movwf	btemp^0,c
 14592  017646  0EFD               	movlw	-3
 14593  017648  0060  F0A3  FFE3   	movff	btemp,plusw1
 14594                           
 14595                           ;stkvar	_n @ sp[(-4)+-6]
 14596  01764E  0EF6               	movlw	-10
 14597  017650  006F FF8C  F028    	movff	plusw1,btemp
 14598  017656  0E01               	movlw	1
 14599  017658  5E28               	subwf	btemp^0,f,c
 14600  01765A  0EF6               	movlw	-10
 14601  01765C  0060  F0A3  FFE3   	movff	btemp,plusw1
 14602  017662  0EF7               	movlw	-9
 14603  017664  006F FF8C  F028    	movff	plusw1,btemp
 14604  01766A  0E00               	movlw	0
 14605  01766C  5A28               	subwfb	btemp^0,f,c
 14606  01766E  0EF7               	movlw	-9
 14607  017670  0060  F0A3  FFE3   	movff	btemp,plusw1
 14608  017676                     l9132:
 14609                           
 14610                           ;stkvar	_l @ sp[(-4)+2]
 14611  017676  0EFE               	movlw	-2
 14612  017678  006F FF8F FFF6     	movff	plusw1,tblptrl
 14613  01767E  0EFF               	movlw	-1
 14614  017680  006F FF8F FFF7     	movff	plusw1,tblptrh
 14615  017686  0E00               	movlw	low (__mediumconst shr (0+16))
 14616  017688  6EF8               	movwf	tblptru,c
 14617  01768A  0E1F               	movlw	(high __ramtop+-1)
 14618  01768C  64F7               	cpfsgt	tblptrh,c
 14619  01768E  D003               	bra	u8387
 14620  017690  0008               	tblrd		*
 14621  017692  50F5               	movf	tablat,w,c
 14622  017694  D007               	bra	u8380
 14623  017696                     u8387:
 14624  017696  006F FFDB FFE9     	movff	tblptrl,fsr0l
 14625  01769C  006F FFDF FFEA     	movff	tblptrh,fsr0h
 14626  0176A2  50EF               	movf	indf0,w,c
 14627  0176A4                     u8380:
 14628  0176A4  0900               	iorlw	0
 14629  0176A6  B4D8               	btfsc	status,2,c
 14630  0176A8  D04A               	goto	u8420
 14631                           
 14632                           ;stkvar	_r @ sp[(-4)+0]
 14633  0176AA  50E1               	movf	fsr1l,w,c
 14634  0176AC  0FFC               	addlw	-4
 14635  0176AE  6ED9               	movwf	fsr2l,c
 14636  0176B0  50E2               	movf	fsr1h,w,c
 14637  0176B2  6EDA               	movwf	fsr2h,c
 14638  0176B4  0EFF               	movlw	255
 14639  0176B6  22DA               	addwfc	fsr2h,f,c
 14640  0176B8  006F FF7B FFF6     	movff	postinc2,tblptrl
 14641  0176BE  006F FF77 FFF7     	movff	postdec2,tblptrh
 14642  0176C4                     	if	0	;tblptru may be non-zero
 14643  0176C4                     	endif
 14644  0176C4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14645  0176C4  0E00               	movlw	low (__mediumconst shr (0+16))
 14646  0176C6  6EF8               	movwf	tblptru,c
 14647  0176C8                     	endif
 14648  0176C8  0008               	tblrd		*
 14649  0176CA  50F5               	movf	tablat,w,c
 14650  0176CC  0900               	iorlw	0
 14651  0176CE  B4D8               	btfsc	status,2,c
 14652  0176D0  D036               	goto	u8420
 14653                           
 14654                           ;stkvar	_n @ sp[(-4)+-6]
 14655  0176D2  0EF6               	movlw	-10
 14656  0176D4  006F FF8C  F028    	movff	plusw1,btemp
 14657  0176DA  0EF7               	movlw	-9
 14658  0176DC  50E3               	movf	plusw1,w,c
 14659  0176DE  1028               	iorwf	btemp^0,w,c
 14660  0176E0  B4D8               	btfsc	status,2,c
 14661  0176E2  D02D               	goto	u8420
 14662                           
 14663                           ;stkvar	_r @ sp[(-4)+0]
 14664  0176E4  50E1               	movf	fsr1l,w,c
 14665  0176E6  0FFC               	addlw	-4
 14666  0176E8  6ED9               	movwf	fsr2l,c
 14667  0176EA  50E2               	movf	fsr1h,w,c
 14668  0176EC  6EDA               	movwf	fsr2h,c
 14669  0176EE  0EFF               	movlw	255
 14670  0176F0  22DA               	addwfc	fsr2h,f,c
 14671  0176F2  006F FF7B FFF6     	movff	postinc2,tblptrl
 14672  0176F8  006F FF77 FFF7     	movff	postdec2,tblptrh
 14673  0176FE                     	if	0	;tblptru may be non-zero
 14674  0176FE                     	endif
 14675  0176FE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14676  0176FE  0E00               	movlw	low (__mediumconst shr (0+16))
 14677  017700  6EF8               	movwf	tblptru,c
 14678  017702                     	endif
 14679  017702  0008               	tblrd		*
 14680  017704  006F FFD4  F033    	movff	tablat,btemp+11
 14681                           
 14682                           ;stkvar	_l @ sp[(-4)+2]
 14683  01770A  0EFE               	movlw	-2
 14684  01770C  006F FF8F FFF6     	movff	plusw1,tblptrl
 14685  017712  0EFF               	movlw	-1
 14686  017714  006F FF8F FFF7     	movff	plusw1,tblptrh
 14687  01771A  0E00               	movlw	low (__mediumconst shr (0+16))
 14688  01771C  6EF8               	movwf	tblptru,c
 14689  01771E  0E1F               	movlw	(high __ramtop+-1)
 14690  017720  64F7               	cpfsgt	tblptrh,c
 14691  017722  D003               	bra	u8427
 14692  017724  0008               	tblrd		*
 14693  017726  50F5               	movf	tablat,w,c
 14694  017728  D007               	bra	u8425
 14695  01772A                     u8427:
 14696  01772A  006F FFDB FFE9     	movff	tblptrl,fsr0l
 14697  017730  006F FFDF FFEA     	movff	tblptrh,fsr0h
 14698  017736  50EF               	movf	indf0,w,c
 14699  017738                     u8425:
 14700  017738  1833               	xorwf	(btemp+11)^0,w,c
 14701  01773A  B4D8               	btfsc	status,2,c
 14702  01773C  D766               	goto	l9130
 14703  01773E                     u8420:
 14704                           
 14705                           ;stkvar	_l @ sp[(-4)+2]
 14706  01773E  0EFE               	movlw	-2
 14707  017740  006F FF8F FFF6     	movff	plusw1,tblptrl
 14708  017746  0EFF               	movlw	-1
 14709  017748  006F FF8F FFF7     	movff	plusw1,tblptrh
 14710  01774E  0E00               	movlw	low (__mediumconst shr (0+16))
 14711  017750  6EF8               	movwf	tblptru,c
 14712  017752  0E1F               	movlw	(high __ramtop+-1)
 14713  017754  64F7               	cpfsgt	tblptrh,c
 14714  017756  D003               	bra	u8437
 14715  017758  0008               	tblrd		*
 14716  01775A  50F5               	movf	tablat,w,c
 14717  01775C  D007               	bra	u8430
 14718  01775E                     u8437:
 14719  01775E  006F FFDB FFE9     	movff	tblptrl,fsr0l
 14720  017764  006F FFDF FFEA     	movff	tblptrh,fsr0h
 14721  01776A  50EF               	movf	indf0,w,c
 14722  01776C                     u8430:
 14723  01776C  6E28               	movwf	btemp^0,c
 14724  01776E  6A29               	clrf	(btemp+1)^0,c
 14725                           
 14726                           ;stkvar	_r @ sp[(-4)+0]
 14727  017770  50E1               	movf	fsr1l,w,c
 14728  017772  0FFC               	addlw	-4
 14729  017774  6ED9               	movwf	fsr2l,c
 14730  017776  50E2               	movf	fsr1h,w,c
 14731  017778  6EDA               	movwf	fsr2h,c
 14732  01777A  0EFF               	movlw	255
 14733  01777C  22DA               	addwfc	fsr2h,f,c
 14734  01777E  006F FF7B FFF6     	movff	postinc2,tblptrl
 14735  017784  006F FF77 FFF7     	movff	postdec2,tblptrh
 14736  01778A                     	if	0	;tblptru may be non-zero
 14737  01778A                     	endif
 14738  01778A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14739  01778A  0E00               	movlw	low (__mediumconst shr (0+16))
 14740  01778C  6EF8               	movwf	tblptru,c
 14741  01778E                     	endif
 14742  01778E  0008               	tblrd		*
 14743  017790  50F5               	movf	tablat,w,c
 14744  017792  5E28               	subwf	btemp^0,f,c
 14745  017794  0E00               	movlw	0
 14746  017796  5A29               	subwfb	(btemp+1)^0,f,c
 14747  017798                     l3419:
 14748                           
 14749                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 14750  017798  0EF6               	movlw	246
 14751  01779A  26E1               	addwf	fsr1l,f,c
 14752  01779C  0EFF               	movlw	255
 14753  01779E  22E2               	addwfc	fsr1h,f,c
 14754  0177A0  0012               	return		;funcret
 14755  0177A2                     __end_of_strncmp:
 14756                           	opt callstack 0
 14757                           
 14758 ;; *************** function _stoa *****************
 14759 ;; Defined at:
 14760 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 14761 ;; Parameters:    Size  Location     Type
 14762 ;;  fp              2  [STACK] PTR struct _IO_FILE
 14763 ;;		 -> f(6), NULL(0), 
 14764 ;;  s               2  [STACK] PTR unsigned char 
 14765 ;;		 -> ?_printf(2), ?_sprintf(2), STR_47(9), STR_46(12), 
 14766 ;;		 -> D.lcd(480), D(482), T(144), STR_3(6), 
 14767 ;;		 -> V(189), 
 14768 ;; Auto vars:     Size  Location     Type
 14769 ;;  nuls            7  [STACK] unsigned char [7]
 14770 ;;  l               2  [STACK] int 
 14771 ;;  p               2  [STACK] int 
 14772 ;;  cp              2  [STACK] PTR unsigned char 
 14773 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_47(9), 
 14774 ;;		 -> STR_46(12), D.lcd(480), D(482), T(144), 
 14775 ;;		 -> STR_3(6), V(189), 
 14776 ;;  w               2  [STACK] int 
 14777 ;;  i               2  [STACK] int 
 14778 ;; Return value:  Size  Location     Type
 14779 ;;                  2  [STACK] int 
 14780 ;; Registers used:
 14781 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 14782 ;; Tracked objects:
 14783 ;;		On entry : 0/0
 14784 ;;		On exit  : 0/0
 14785 ;;		Unchanged: 0/0
 14786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14791 ;;Total ram usage:        0 bytes
 14792 ;; Hardware stack levels used:    1
 14793 ;; Hardware stack levels required when called:   18
 14794 ;; This function calls:
 14795 ;;		_fputc
 14796 ;;		_strlen
 14797 ;; This function is called by:
 14798 ;;		_vfpfcnvrt
 14799 ;; This function uses a reentrant model
 14800 ;;
 14801                           
 14802                           	psect	text54
 14803  016B90                     __ptext54:
 14804                           	opt callstack 0
 14805  016B90                     _stoa:
 14806                           	opt callstack 0
 14807                           
 14808                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 14809  016B90  0E11               	movlw	17
 14810  016B92  26E1               	addwf	fsr1l,f,c
 14811  016B94  0E00               	movlw	0
 14812  016B96  22E2               	addwfc	fsr1h,f,c
 14813                           
 14814                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 14815                           
 14816                           ;incstack = 0
 14817 ;; hardware stack exceeded
 14818  016B98  EE20  F0EC         	lfsr	2,stoa@F1166
 14819                           
 14820                           ;stkvar	_nuls @ sp[(-17)+0]
 14821  016B9C  0E07               	movlw	7
 14822  016B9E  6E28               	movwf	btemp^0,c
 14823  016BA0  0EEF               	movlw	-17
 14824  016BA2                     us1116999:
 14825  016BA2  006F FF7B FFE3     	movff	postinc2,plusw1
 14826  016BA8  28E8               	incf	wreg,w,c
 14827  016BAA  2E28               	decfsz	btemp^0,f,c
 14828  016BAC  D7FA               	bra	us1116999
 14829                           
 14830                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 14831                           ;stkvar	_s @ sp[(-17)+-4]
 14832  016BAE  0EEB               	movlw	-21
 14833  016BB0  006F FF8C  F032    	movff	plusw1,btemp+10
 14834  016BB6  0EEC               	movlw	-20
 14835  016BB8  006F FF8C  F033    	movff	plusw1,btemp+11
 14836                           
 14837                           ;stkvar	_cp @ sp[(-17)+11]
 14838  016BBE  0EFB               	movlw	-5
 14839  016BC0  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 14840  016BC6  0EFA               	movlw	-6
 14841  016BC8  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 14842                           
 14843                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 14844                           ;stkvar	_cp @ sp[(-17)+11]
 14845  016BCE  0EFA               	movlw	-6
 14846  016BD0  006F FF8C  F028    	movff	plusw1,btemp
 14847  016BD6  0EFB               	movlw	-5
 14848  016BD8  50E3               	movf	plusw1,w,c
 14849  016BDA  1028               	iorwf	btemp^0,w,c
 14850  016BDC  A4D8               	btfss	status,2,c
 14851  016BDE  D00E               	goto	l11868
 14852                           
 14853                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 14854                           ;stkvar	_nuls @ sp[(-17)+0]
 14855  016BE0  0EEF               	movlw	239
 14856  016BE2  24E1               	addwf	fsr1l,w,c
 14857  016BE4  6E32               	movwf	(btemp+10)^0,c
 14858  016BE6  0EFF               	movlw	255
 14859  016BE8  20E2               	addwfc	fsr1h,w,c
 14860  016BEA  6E33               	movwf	(btemp+11)^0,c
 14861                           
 14862                           ;stkvar	_cp @ sp[(-17)+11]
 14863  016BEC  0EFB               	movlw	-5
 14864  016BEE  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 14865  016BF4  0EFA               	movlw	-6
 14866  016BF6  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 14867  016BFC                     l11868:
 14868                           
 14869                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 14870                           ;stkvar	_cp @ sp[(-17)+11]
 14871  016BFC  0EFA               	movlw	-6
 14872  016BFE  006F FF8F FFE6     	movff	plusw1,postinc1
 14873  016C04  006F FF8F FFE6     	movff	plusw1,postinc1
 14874  016C0A  EC4E  F0CF         	call	_strlen	;wreg free
 14875                           
 14876                           ;stkvar	_l @ sp[(-17)+7]
 14877  016C0E  0EF6               	movlw	-10
 14878  016C10  0060  F0A3  FFE3   	movff	btemp,plusw1
 14879  016C16  0EF7               	movlw	-9
 14880  016C18  0060  F0A7  FFE3   	movff	btemp+1,plusw1
 14881                           
 14882                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 14883                           ;stkvar	_p @ sp[(-17)+9]
 14884  016C1E  0EF8               	movlw	-8
 14885  016C20  0060  F12B  FFE3   	movff	_prec,plusw1
 14886  016C26  0EF9               	movlw	-7
 14887  016C28  0060  F12F  FFE3   	movff	_prec+1,plusw1
 14888                           
 14889                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 14890                           ;stkvar	_p @ sp[(-17)+9]
 14891  016C2E  0EF9               	movlw	-7
 14892  016C30  BEE3               	btfsc	plusw1,7,c
 14893  016C32  D023               	goto	l2244
 14894                           
 14895                           ;stkvar	_l @ sp[(-17)+7]
 14896                           ;stkvar	_p @ sp[(-17)+9]
 14897  016C34  50E1               	movf	fsr1l,w,c
 14898  016C36  0FF8               	addlw	-8
 14899  016C38  6ED9               	movwf	fsr2l,c
 14900  016C3A  50E2               	movf	fsr1h,w,c
 14901  016C3C  6EDA               	movwf	fsr2h,c
 14902  016C3E  0EFF               	movlw	255
 14903  016C40  22DA               	addwfc	fsr2h,f,c
 14904  016C42  0EF6               	movlw	-10
 14905  016C44  50E3               	movf	plusw1,w,c
 14906  016C46  5CDE               	subwf	postinc2,w,c
 14907  016C48  50DE               	movf	postinc2,w,c
 14908  016C4A  0A80               	xorlw	128
 14909  016C4C  6E28               	movwf	btemp^0,c
 14910  016C4E  0EF7               	movlw	-9
 14911  016C50  50E3               	movf	plusw1,w,c
 14912  016C52  0A80               	xorlw	128
 14913  016C54  5828               	subwfb	btemp^0,w,c
 14914  016C56  B0D8               	btfsc	status,0,c
 14915  016C58  D010               	goto	l2244
 14916                           
 14917                           ;stkvar	_p @ sp[(-17)+9]
 14918                           ;stkvar	_l @ sp[(-17)+7]
 14919  016C5A  0EF8               	movlw	-8
 14920  016C5C  006F FF8C  F028    	movff	plusw1,btemp
 14921  016C62  0EF6               	movlw	-10
 14922  016C64  0060  F0A3  FFE3   	movff	btemp,plusw1
 14923  016C6A  0EF9               	movlw	-7
 14924  016C6C  006F FF8C  F028    	movff	plusw1,btemp
 14925  016C72  0EF7               	movlw	-9
 14926  016C74  0060  F0A3  FFE3   	movff	btemp,plusw1
 14927  016C7A                     l2244:
 14928                           
 14929                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 14930                           ;stkvar	_l @ sp[(-17)+7]
 14931                           ;stkvar	_p @ sp[(-17)+9]
 14932  016C7A  0EF6               	movlw	-10
 14933  016C7C  006F FF8C  F028    	movff	plusw1,btemp
 14934  016C82  0EF8               	movlw	-8
 14935  016C84  0060  F0A3  FFE3   	movff	btemp,plusw1
 14936  016C8A  0EF7               	movlw	-9
 14937  016C8C  006F FF8C  F028    	movff	plusw1,btemp
 14938  016C92  0EF9               	movlw	-7
 14939  016C94  0060  F0A3  FFE3   	movff	btemp,plusw1
 14940                           
 14941                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 14942                           ;stkvar	_w @ sp[(-17)+13]
 14943  016C9A  0EFC               	movlw	-4
 14944  016C9C  0060  F123  FFE3   	movff	_width,plusw1
 14945  016CA2  0EFD               	movlw	-3
 14946  016CA4  0060  F127  FFE3   	movff	_width+1,plusw1
 14947                           
 14948                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 14949  016CAA  A04C               	btfss	_flags^0,0,c
 14950  016CAC  D01F               	goto	l11888
 14951  016CAE  D031               	goto	u11210
 14952  016CB0                     l11884:
 14953                           
 14954                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 14955                           ;stkvar	_fp @ sp[(-17)+-2]
 14956  016CB0  0EED               	movlw	-19
 14957  016CB2  006F FF8F FFE6     	movff	plusw1,postinc1
 14958  016CB8  006F FF8F FFE6     	movff	plusw1,postinc1
 14959  016CBE  0E20               	movlw	32
 14960  016CC0  6EE6               	movwf	postinc1,c
 14961  016CC2  0E00               	movlw	0
 14962  016CC4  6EE6               	movwf	postinc1,c
 14963  016CC6  EC51  F0C7         	call	_fputc	;wreg free
 14964                           
 14965                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 14966                           ;stkvar	_l @ sp[(-17)+7]
 14967  016CCA  0EF6               	movlw	-10
 14968  016CCC  50E3               	movf	plusw1,w,c
 14969  016CCE  0F01               	addlw	1
 14970  016CD0  6E28               	movwf	btemp^0,c
 14971  016CD2  0EF6               	movlw	-10
 14972  016CD4  0060  F0A3  FFE3   	movff	btemp,plusw1
 14973  016CDA  6A28               	clrf	btemp^0,c
 14974  016CDC  0EF7               	movlw	-9
 14975  016CDE  50E3               	movf	plusw1,w,c
 14976  016CE0  2028               	addwfc	btemp^0,w,c
 14977  016CE2  6E28               	movwf	btemp^0,c
 14978  016CE4  0EF7               	movlw	-9
 14979  016CE6  0060  F0A3  FFE3   	movff	btemp,plusw1
 14980  016CEC                     l11888:
 14981                           
 14982                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 14983                           ;stkvar	_w @ sp[(-17)+13]
 14984                           ;stkvar	_l @ sp[(-17)+7]
 14985  016CEC  50E1               	movf	fsr1l,w,c
 14986  016CEE  0FF6               	addlw	-10
 14987  016CF0  6ED9               	movwf	fsr2l,c
 14988  016CF2  50E2               	movf	fsr1h,w,c
 14989  016CF4  6EDA               	movwf	fsr2h,c
 14990  016CF6  0EFF               	movlw	255
 14991  016CF8  22DA               	addwfc	fsr2h,f,c
 14992  016CFA  0EFC               	movlw	-4
 14993  016CFC  50E3               	movf	plusw1,w,c
 14994  016CFE  5CDE               	subwf	postinc2,w,c
 14995  016D00  50DE               	movf	postinc2,w,c
 14996  016D02  0A80               	xorlw	128
 14997  016D04  6E28               	movwf	btemp^0,c
 14998  016D06  0EFD               	movlw	-3
 14999  016D08  50E3               	movf	plusw1,w,c
 15000  016D0A  0A80               	xorlw	128
 15001  016D0C  5828               	subwfb	btemp^0,w,c
 15002  016D0E  A0D8               	btfss	status,0,c
 15003  016D10  D7CF               	goto	l11884
 15004  016D12                     u11210:
 15005                           
 15006                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 15007                           ;stkvar	_i @ sp[(-17)+15]
 15008  016D12  0EFE               	movlw	-2
 15009  016D14  6AE3               	clrf	plusw1,c
 15010  016D16  0EFF               	movlw	-1
 15011  016D18  6AE3               	clrf	plusw1,c
 15012                           
 15013                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 15014  016D1A  D045               	goto	l11898
 15015  016D1C                     l11892:
 15016                           
 15017                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 15018                           ;stkvar	_fp @ sp[(-17)+-2]
 15019  016D1C  0EED               	movlw	-19
 15020  016D1E  006F FF8F FFE6     	movff	plusw1,postinc1
 15021  016D24  006F FF8F FFE6     	movff	plusw1,postinc1
 15022                           
 15023                           ;stkvar	_cp @ sp[(-19)+11]
 15024  016D2A  0EF8               	movlw	-8
 15025  016D2C  006F FF8F FFF6     	movff	plusw1,tblptrl
 15026  016D32  0EF9               	movlw	-7
 15027  016D34  006F FF8F FFF7     	movff	plusw1,tblptrh
 15028  016D3A  0E00               	movlw	low (__mediumconst shr (0+16))
 15029  016D3C  6EF8               	movwf	tblptru,c
 15030  016D3E  0E1F               	movlw	(high __ramtop+-1)
 15031  016D40  64F7               	cpfsgt	tblptrh,c
 15032  016D42  D003               	bra	u11227
 15033  016D44  0008               	tblrd		*
 15034  016D46  50F5               	movf	tablat,w,c
 15035  016D48  D007               	bra	u11220
 15036  016D4A                     u11227:
 15037  016D4A  006F FFDB FFE9     	movff	tblptrl,fsr0l
 15038  016D50  006F FFDF FFEA     	movff	tblptrh,fsr0h
 15039  016D56  50EF               	movf	indf0,w,c
 15040  016D58                     u11220:
 15041  016D58  6EE6               	movwf	postinc1,c
 15042  016D5A  0E00               	movlw	0
 15043  016D5C  6EE6               	movwf	postinc1,c
 15044  016D5E  EC51  F0C7         	call	_fputc	;wreg free
 15045                           
 15046                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 15047                           ;stkvar	_cp @ sp[(-17)+11]
 15048  016D62  0EFA               	movlw	-6
 15049  016D64  50E3               	movf	plusw1,w,c
 15050  016D66  0F01               	addlw	1
 15051  016D68  6E28               	movwf	btemp^0,c
 15052  016D6A  0EFA               	movlw	-6
 15053  016D6C  0060  F0A3  FFE3   	movff	btemp,plusw1
 15054  016D72  6A28               	clrf	btemp^0,c
 15055  016D74  0EFB               	movlw	-5
 15056  016D76  50E3               	movf	plusw1,w,c
 15057  016D78  2028               	addwfc	btemp^0,w,c
 15058  016D7A  6E28               	movwf	btemp^0,c
 15059  016D7C  0EFB               	movlw	-5
 15060  016D7E  0060  F0A3  FFE3   	movff	btemp,plusw1
 15061                           
 15062                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 15063                           ;stkvar	_i @ sp[(-17)+15]
 15064  016D84  0EFE               	movlw	-2
 15065  016D86  50E3               	movf	plusw1,w,c
 15066  016D88  0F01               	addlw	1
 15067  016D8A  6E28               	movwf	btemp^0,c
 15068  016D8C  0EFE               	movlw	-2
 15069  016D8E  0060  F0A3  FFE3   	movff	btemp,plusw1
 15070  016D94  6A28               	clrf	btemp^0,c
 15071  016D96  0EFF               	movlw	-1
 15072  016D98  50E3               	movf	plusw1,w,c
 15073  016D9A  2028               	addwfc	btemp^0,w,c
 15074  016D9C  6E28               	movwf	btemp^0,c
 15075  016D9E  0EFF               	movlw	-1
 15076  016DA0  0060  F0A3  FFE3   	movff	btemp,plusw1
 15077  016DA6                     l11898:
 15078                           
 15079                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 15080                           ;stkvar	_p @ sp[(-17)+9]
 15081                           ;stkvar	_i @ sp[(-17)+15]
 15082  016DA6  50E1               	movf	fsr1l,w,c
 15083  016DA8  0FFE               	addlw	-2
 15084  016DAA  6ED9               	movwf	fsr2l,c
 15085  016DAC  50E2               	movf	fsr1h,w,c
 15086  016DAE  6EDA               	movwf	fsr2h,c
 15087  016DB0  0EFF               	movlw	255
 15088  016DB2  22DA               	addwfc	fsr2h,f,c
 15089  016DB4  0EF8               	movlw	-8
 15090  016DB6  50E3               	movf	plusw1,w,c
 15091  016DB8  5CDE               	subwf	postinc2,w,c
 15092  016DBA  50DE               	movf	postinc2,w,c
 15093  016DBC  0A80               	xorlw	128
 15094  016DBE  6E28               	movwf	btemp^0,c
 15095  016DC0  0EF9               	movlw	-7
 15096  016DC2  50E3               	movf	plusw1,w,c
 15097  016DC4  0A80               	xorlw	128
 15098  016DC6  5828               	subwfb	btemp^0,w,c
 15099  016DC8  A0D8               	btfss	status,0,c
 15100  016DCA  D7A8               	goto	l11892
 15101                           
 15102                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 15103  016DCC  B04C               	btfsc	_flags^0,0,c
 15104  016DCE  D01F               	goto	l11906
 15105  016DD0  D031               	goto	u11250
 15106  016DD2                     l11902:
 15107                           
 15108                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 15109                           ;stkvar	_fp @ sp[(-17)+-2]
 15110  016DD2  0EED               	movlw	-19
 15111  016DD4  006F FF8F FFE6     	movff	plusw1,postinc1
 15112  016DDA  006F FF8F FFE6     	movff	plusw1,postinc1
 15113  016DE0  0E20               	movlw	32
 15114  016DE2  6EE6               	movwf	postinc1,c
 15115  016DE4  0E00               	movlw	0
 15116  016DE6  6EE6               	movwf	postinc1,c
 15117  016DE8  EC51  F0C7         	call	_fputc	;wreg free
 15118                           
 15119                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 15120                           ;stkvar	_l @ sp[(-17)+7]
 15121  016DEC  0EF6               	movlw	-10
 15122  016DEE  50E3               	movf	plusw1,w,c
 15123  016DF0  0F01               	addlw	1
 15124  016DF2  6E28               	movwf	btemp^0,c
 15125  016DF4  0EF6               	movlw	-10
 15126  016DF6  0060  F0A3  FFE3   	movff	btemp,plusw1
 15127  016DFC  6A28               	clrf	btemp^0,c
 15128  016DFE  0EF7               	movlw	-9
 15129  016E00  50E3               	movf	plusw1,w,c
 15130  016E02  2028               	addwfc	btemp^0,w,c
 15131  016E04  6E28               	movwf	btemp^0,c
 15132  016E06  0EF7               	movlw	-9
 15133  016E08  0060  F0A3  FFE3   	movff	btemp,plusw1
 15134  016E0E                     l11906:
 15135                           
 15136                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 15137                           ;stkvar	_w @ sp[(-17)+13]
 15138                           ;stkvar	_l @ sp[(-17)+7]
 15139  016E0E  50E1               	movf	fsr1l,w,c
 15140  016E10  0FF6               	addlw	-10
 15141  016E12  6ED9               	movwf	fsr2l,c
 15142  016E14  50E2               	movf	fsr1h,w,c
 15143  016E16  6EDA               	movwf	fsr2h,c
 15144  016E18  0EFF               	movlw	255
 15145  016E1A  22DA               	addwfc	fsr2h,f,c
 15146  016E1C  0EFC               	movlw	-4
 15147  016E1E  50E3               	movf	plusw1,w,c
 15148  016E20  5CDE               	subwf	postinc2,w,c
 15149  016E22  50DE               	movf	postinc2,w,c
 15150  016E24  0A80               	xorlw	128
 15151  016E26  6E28               	movwf	btemp^0,c
 15152  016E28  0EFD               	movlw	-3
 15153  016E2A  50E3               	movf	plusw1,w,c
 15154  016E2C  0A80               	xorlw	128
 15155  016E2E  5828               	subwfb	btemp^0,w,c
 15156  016E30  A0D8               	btfss	status,0,c
 15157  016E32  D7CF               	goto	l11902
 15158  016E34                     u11250:
 15159                           
 15160                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 15161                           ;stkvar	_l @ sp[(-17)+7]
 15162  016E34  0EF6               	movlw	-10
 15163  016E36  006F FF8C  F028    	movff	plusw1,btemp
 15164  016E3C  0EF7               	movlw	-9
 15165  016E3E  006F FF8C  F029    	movff	plusw1,btemp+1
 15166                           
 15167                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 15168  016E44  0EEB               	movlw	235
 15169  016E46  26E1               	addwf	fsr1l,f,c
 15170  016E48  0EFF               	movlw	255
 15171  016E4A  22E2               	addwfc	fsr1h,f,c
 15172  016E4C  0012               	return		;funcret
 15173  016E4E                     __end_of_stoa:
 15174                           	opt callstack 0
 15175                           
 15176 ;; *************** function _efgtoa *****************
 15177 ;; Defined at:
 15178 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 15179 ;; Parameters:    Size  Location     Type
 15180 ;;  fp              2  [STACK] PTR struct _IO_FILE
 15181 ;;		 -> f(6), NULL(0), 
 15182 ;;  f               4  [STACK] PTR struct _IO_FILE
 15183 ;;  c               1  [STACK] unsigned char 
 15184 ;; Auto vars:     Size  Location     Type
 15185 ;;  u               4  [STACK] unsigned char 
 15186 ;;  g               4  [STACK] unsigned char 
 15187 ;;  l               4  [STACK] unsigned char 
 15188 ;;  h               4  [STACK] unsigned char 
 15189 ;;  ou              4  [STACK] unsigned char 
 15190 ;;  n               2  [STACK] int 
 15191 ;;  e               2  [STACK] int 
 15192 ;;  i               2  [STACK] int 
 15193 ;;  w               2  [STACK] int 
 15194 ;;  p               2  [STACK] int 
 15195 ;;  sign            2  [STACK] int 
 15196 ;;  d               2  [STACK] int 
 15197 ;;  ne              2  [STACK] int 
 15198 ;;  m               2  [STACK] int 
 15199 ;;  pp              2  [STACK] int 
 15200 ;;  t               2  [STACK] int 
 15201 ;;  mode            1  [STACK] unsigned char 
 15202 ;;  nmode           1  [STACK] unsigned char 
 15203 ;; Return value:  Size  Location     Type
 15204 ;;                  2  [STACK] int 
 15205 ;; Registers used:
 15206 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 15207 ;; Tracked objects:
 15208 ;;		On entry : 0/0
 15209 ;;		On exit  : 0/0
 15210 ;;		Unchanged: 0/0
 15211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15215 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15216 ;;Total ram usage:        0 bytes
 15217 ;; Hardware stack levels used:    1
 15218 ;; Hardware stack levels required when called:   20
 15219 ;; This function calls:
 15220 ;;		___awdiv
 15221 ;;		___awmod
 15222 ;;		___fladd
 15223 ;;		___fldiv
 15224 ;;		___fleq
 15225 ;;		___flge
 15226 ;;		___flmul
 15227 ;;		___flneg
 15228 ;;		___flsub
 15229 ;;		___fltol
 15230 ;;		___fpclassifyf
 15231 ;;		_floorf
 15232 ;;		_isupper
 15233 ;;		_pad
 15234 ;;		_strcpy
 15235 ;;		_tolower
 15236 ;; This function is called by:
 15237 ;;		_vfpfcnvrt
 15238 ;; This function uses a reentrant model
 15239 ;;
 15240                           
 15241                           	psect	text55
 15242  010000                     __ptext55:
 15243                           	opt callstack 0
 15244  010000                     _efgtoa:
 15245                           	opt callstack 0
 15246                           
 15247                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 15248  010000  0E38               	movlw	56
 15249  010002  26E1               	addwf	fsr1l,f,c
 15250  010004  0E00               	movlw	0
 15251  010006  22E2               	addwfc	fsr1h,f,c
 15252                           
 15253                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 15254                           ;stkvar	_sign @ sp[(-56)+42]
 15255                           
 15256                           ;incstack = 0
 15257 ;; hardware stack exceeded
 15258  010008  0EF2               	movlw	-14
 15259  01000A  6AE3               	clrf	plusw1,c
 15260  01000C  0EF3               	movlw	-13
 15261  01000E  6AE3               	clrf	plusw1,c
 15262                           
 15263                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 15264                           ;stkvar	_f @ sp[(-56)+-6]
 15265  010010  0EC2               	movlw	-62
 15266  010012  006F FF8C  F030    	movff	plusw1,btemp+8
 15267  010018  0EC3               	movlw	-61
 15268  01001A  006F FF8C  F031    	movff	plusw1,btemp+9
 15269  010020  0EC4               	movlw	-60
 15270  010022  006F FF8C  F032    	movff	plusw1,btemp+10
 15271  010028  0EC5               	movlw	-59
 15272  01002A  006F FF8C  F033    	movff	plusw1,btemp+11
 15273                           
 15274                           ;stkvar	_g @ sp[(-56)+16]
 15275  010030  0ED8               	movlw	-40
 15276  010032  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 15277  010038  0ED9               	movlw	-39
 15278  01003A  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 15279  010040  0EDA               	movlw	-38
 15280  010042  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 15281  010048  0EDB               	movlw	-37
 15282  01004A  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 15283                           
 15284                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 15285                           ;stkvar	_g @ sp[(-56)+16]
 15286  010050  0EDB               	movlw	-37
 15287  010052  AEE3               	btfss	plusw1,7,c
 15288  010054  D02B               	goto	l11566
 15289                           
 15290                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 15291  010056  0E01               	movlw	1
 15292  010058  6E32               	movwf	(btemp+10)^0,c
 15293  01005A  0E00               	movlw	0
 15294  01005C  6E33               	movwf	(btemp+11)^0,c
 15295                           
 15296                           ;stkvar	_sign @ sp[(-56)+42]
 15297  01005E  0EF2               	movlw	-14
 15298  010060  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 15299  010066  0EF3               	movlw	-13
 15300  010068  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 15301                           
 15302                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 15303                           ;stkvar	_g @ sp[(-56)+16]
 15304  01006E  0ED8               	movlw	-40
 15305  010070  006F FF8F FFE6     	movff	plusw1,postinc1
 15306  010076  006F FF8F FFE6     	movff	plusw1,postinc1
 15307  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
 15308  010082  006F FF8F FFE6     	movff	plusw1,postinc1
 15309  010088  ECFA  F0D4         	call	___flneg	;wreg free
 15310                           
 15311                           ;stkvar	_g @ sp[(-56)+16]
 15312  01008C  0ED8               	movlw	-40
 15313  01008E  0060  F0A3  FFE3   	movff	btemp,plusw1
 15314  010094  0ED9               	movlw	-39
 15315  010096  0060  F0A7  FFE3   	movff	btemp+1,plusw1
 15316  01009C  0EDA               	movlw	-38
 15317  01009E  0060  F0AB  FFE3   	movff	btemp+2,plusw1
 15318  0100A4  0EDB               	movlw	-37
 15319  0100A6  0060  F0AF  FFE3   	movff	btemp+3,plusw1
 15320  0100AC                     l11566:
 15321                           
 15322                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 15323                           ;stkvar	_n @ sp[(-56)+32]
 15324  0100AC  0EE8               	movlw	-24
 15325  0100AE  6AE3               	clrf	plusw1,c
 15326  0100B0  0EE9               	movlw	-23
 15327  0100B2  6AE3               	clrf	plusw1,c
 15328                           
 15329                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 15330                           ;stkvar	_w @ sp[(-56)+38]
 15331  0100B4  0EEE               	movlw	-18
 15332  0100B6  0060  F123  FFE3   	movff	_width,plusw1
 15333  0100BC  0EEF               	movlw	-17
 15334  0100BE  0060  F127  FFE3   	movff	_width+1,plusw1
 15335                           
 15336                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 15337                           ;stkvar	_sign @ sp[(-56)+42]
 15338  0100C4  0EF2               	movlw	-14
 15339  0100C6  006F FF8C  F028    	movff	plusw1,btemp
 15340  0100CC  0EF3               	movlw	-13
 15341  0100CE  50E3               	movf	plusw1,w,c
 15342  0100D0  1028               	iorwf	btemp^0,w,c
 15343  0100D2  A4D8               	btfss	status,2,c
 15344  0100D4  D002               	goto	u10660
 15345  0100D6  A44C               	btfss	_flags^0,2,c
 15346  0100D8  D036               	goto	l11586
 15347  0100DA                     u10660:
 15348                           
 15349                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 15350                           ;stkvar	_sign @ sp[(-56)+42]
 15351  0100DA  0EF2               	movlw	-14
 15352  0100DC  006F FF8C  F028    	movff	plusw1,btemp
 15353  0100E2  0EF3               	movlw	-13
 15354  0100E4  50E3               	movf	plusw1,w,c
 15355  0100E6  1028               	iorwf	btemp^0,w,c
 15356  0100E8  A4D8               	btfss	status,2,c
 15357  0100EA  D002               	goto	l11578
 15358  0100EC  0E2B               	movlw	43
 15359  0100EE  D001               	goto	L14
 15360  0100F0                     l11578:
 15361  0100F0  0E2D               	movlw	45
 15362  0100F2                     L14:
 15363  0100F2  6E32               	movwf	(btemp+10)^0,c
 15364  0100F4  0E00               	movlw	0
 15365  0100F6  6E33               	movwf	(btemp+11)^0,c
 15366                           
 15367                           ;stkvar	_efgtoa$5381 @ sp[(-56)+10]
 15368  0100F8  0ED2               	movlw	-46
 15369  0100FA  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 15370  010100  0ED3               	movlw	-45
 15371  010102  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 15372                           
 15373                           ;stkvar	_efgtoa$5381 @ sp[(-56)+10]
 15374  010108  0ED2               	movlw	-46
 15375  01010A  006F FF8C  F394    	movff	plusw1,_dbuf
 15376                           
 15377                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 15378                           ;stkvar	_n @ sp[(-56)+32]
 15379  010110  0EE8               	movlw	-24
 15380  010112  50E3               	movf	plusw1,w,c
 15381  010114  0F01               	addlw	1
 15382  010116  6E28               	movwf	btemp^0,c
 15383  010118  0EE8               	movlw	-24
 15384  01011A  0060  F0A3  FFE3   	movff	btemp,plusw1
 15385  010120  6A28               	clrf	btemp^0,c
 15386  010122  0EE9               	movlw	-23
 15387  010124  50E3               	movf	plusw1,w,c
 15388  010126  2028               	addwfc	btemp^0,w,c
 15389  010128  6E28               	movwf	btemp^0,c
 15390  01012A  0EE9               	movlw	-23
 15391  01012C  0060  F0A3  FFE3   	movff	btemp,plusw1
 15392                           
 15393                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 15394                           ;stkvar	_w @ sp[(-56)+38]
 15395  010132  50E1               	movf	fsr1l,w,c
 15396  010134  0FEE               	addlw	-18
 15397  010136  6ED9               	movwf	fsr2l,c
 15398  010138  50E2               	movf	fsr1h,w,c
 15399  01013A  6EDA               	movwf	fsr2h,c
 15400  01013C  0EFF               	movlw	255
 15401  01013E  22DA               	addwfc	fsr2h,f,c
 15402  010140  06DE               	decf	postinc2,f,c
 15403  010142  0E00               	movlw	0
 15404  010144  5ADD               	subwfb	postdec2,f,c
 15405  010146                     l11586:
 15406                           
 15407                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 15408                           ;stkvar	_g @ sp[(-56)+16]
 15409  010146  0ED8               	movlw	-40
 15410  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 15411  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 15412  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 15413  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 15414  010160  ECBA  F0BF         	call	___fpclassifyf	;wreg free
 15415  010164  0428               	decf	btemp^0,w,c
 15416  010166  1029               	iorwf	(btemp+1)^0,w,c
 15417  010168  A4D8               	btfss	status,2,c
 15418  01016A  D076               	goto	l11604
 15419  01016C  0EBF               	movlw	191
 15420  01016E  6E32               	movwf	(btemp+10)^0,c
 15421  010170  0EFF               	movlw	255
 15422  010172  6E33               	movwf	(btemp+11)^0,c
 15423                           
 15424                           ;stkvar	_c @ sp[(-56)+-7]
 15425  010174  0EC1               	movlw	-63
 15426  010176  50E3               	movf	plusw1,w,c
 15427  010178  6E30               	movwf	(btemp+8)^0,c
 15428  01017A  6A31               	clrf	(btemp+9)^0,c
 15429  01017C  5032               	movf	(btemp+10)^0,w,c
 15430  01017E  2630               	addwf	(btemp+8)^0,f,c
 15431  010180  5033               	movf	(btemp+11)^0,w,c
 15432  010182  2231               	addwfc	(btemp+9)^0,f,c
 15433  010184  5031               	movf	(btemp+9)^0,w,c
 15434  010186  E106               	bnz	u10690
 15435  010188  0E1A               	movlw	26
 15436  01018A  5C30               	subwf	(btemp+8)^0,w,c
 15437  01018C  B0D8               	btfsc	status,0,c
 15438  01018E  D002               	goto	u10690
 15439  010190  0E01               	movlw	1
 15440  010192  D001               	goto	u10700
 15441  010194                     u10690:
 15442  010194  0E00               	movlw	0
 15443  010196                     u10700:
 15444  010196  6E32               	movwf	(btemp+10)^0,c
 15445  010198  6A33               	clrf	(btemp+11)^0,c
 15446                           
 15447                           ;stkvar	_efgtoa$5382 @ sp[(-56)+8]
 15448  01019A  0ED0               	movlw	-48
 15449  01019C  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 15450  0101A2  0ED1               	movlw	-47
 15451  0101A4  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 15452                           
 15453                           ;stkvar	_efgtoa$5382 @ sp[(-56)+8]
 15454  0101AA  0ED0               	movlw	-48
 15455  0101AC  006F FF8C  F028    	movff	plusw1,btemp
 15456  0101B2  0ED1               	movlw	-47
 15457  0101B4  50E3               	movf	plusw1,w,c
 15458  0101B6  1028               	iorwf	btemp^0,w,c
 15459  0101B8  B4D8               	btfsc	status,2,c
 15460  0101BA  D017               	goto	l11596
 15461                           
 15462                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 15463  0101BC  0ED6               	movlw	low STR_66
 15464  0101BE  6EE6               	movwf	postinc1,c
 15465  0101C0  0EFF               	movlw	high STR_66
 15466  0101C2  6EE6               	movwf	postinc1,c
 15467                           
 15468                           ;stkvar	_n @ sp[(-58)+32]
 15469  0101C4  0E94               	movlw	low _dbuf
 15470  0101C6  6E32               	movwf	(btemp+10)^0,c
 15471  0101C8  0E03               	movlw	high _dbuf
 15472  0101CA  6E33               	movwf	(btemp+11)^0,c
 15473  0101CC  0EE6               	movlw	-26
 15474  0101CE  50E3               	movf	plusw1,w,c
 15475  0101D0  2632               	addwf	(btemp+10)^0,f,c
 15476  0101D2  0EE7               	movlw	-25
 15477  0101D4  50E3               	movf	plusw1,w,c
 15478  0101D6  2233               	addwfc	(btemp+11)^0,f,c
 15479  0101D8  0060  F0CB  FFE6   	movff	btemp+10,postinc1
 15480  0101DE  0060  F0CF  FFE6   	movff	btemp+11,postinc1
 15481  0101E4  EC72  F0CC         	call	_strcpy	;wreg free
 15482                           
 15483                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 15484  0101E8  D016               	goto	l11598
 15485  0101EA                     l11596:
 15486                           
 15487                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 15488  0101EA  0EDE               	movlw	low STR_67
 15489  0101EC  6EE6               	movwf	postinc1,c
 15490  0101EE  0EFF               	movlw	high STR_67
 15491  0101F0  6EE6               	movwf	postinc1,c
 15492                           
 15493                           ;stkvar	_n @ sp[(-58)+32]
 15494  0101F2  0E94               	movlw	low _dbuf
 15495  0101F4  6E32               	movwf	(btemp+10)^0,c
 15496  0101F6  0E03               	movlw	high _dbuf
 15497  0101F8  6E33               	movwf	(btemp+11)^0,c
 15498  0101FA  0EE6               	movlw	-26
 15499  0101FC  50E3               	movf	plusw1,w,c
 15500  0101FE  2632               	addwf	(btemp+10)^0,f,c
 15501  010200  0EE7               	movlw	-25
 15502  010202  50E3               	movf	plusw1,w,c
 15503  010204  2233               	addwfc	(btemp+11)^0,f,c
 15504  010206  0060  F0CB  FFE6   	movff	btemp+10,postinc1
 15505  01020C  0060  F0CF  FFE6   	movff	btemp+11,postinc1
 15506  010212  EC72  F0CC         	call	_strcpy	;wreg free
 15507  010216                     l11598:
 15508                           
 15509                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 15510                           ;stkvar	_w @ sp[(-56)+38]
 15511  010216  50E1               	movf	fsr1l,w,c
 15512  010218  0FEE               	addlw	-18
 15513  01021A  6ED9               	movwf	fsr2l,c
 15514  01021C  50E2               	movf	fsr1h,w,c
 15515  01021E  6EDA               	movwf	fsr2h,c
 15516  010220  0EFF               	movlw	255
 15517  010222  22DA               	addwfc	fsr2h,f,c
 15518  010224  0EFD               	movlw	253
 15519  010226  26DE               	addwf	postinc2,f,c
 15520  010228  0EFF               	movlw	255
 15521  01022A  22DD               	addwfc	postdec2,f,c
 15522  01022C                     l11600:
 15523                           
 15524                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 15525                           ;stkvar	_w @ sp[(-56)+38]
 15526  01022C  0EEE               	movlw	-18
 15527  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 15528  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 15529  01023A  0E94               	movlw	low _dbuf
 15530  01023C  6EE6               	movwf	postinc1,c
 15531  01023E  0E03               	movlw	high _dbuf
 15532  010240  6EE6               	movwf	postinc1,c
 15533                           
 15534                           ;stkvar	_fp @ sp[(-60)+-2]
 15535  010242  0EC2               	movlw	-62
 15536  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 15537  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 15538  010250  EC6F  F0C8         	call	_pad	;wreg free
 15539  010254  EF1D  F089         	goto	l2162
 15540  010258                     l11604:
 15541                           
 15542                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 15543                           ;stkvar	_g @ sp[(-56)+16]
 15544  010258  0ED8               	movlw	-40
 15545  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 15546  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 15547  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 15548  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 15549  010272  ECBA  F0BF         	call	___fpclassifyf	;wreg free
 15550  010276  5028               	movf	btemp^0,w,c
 15551  010278  1029               	iorwf	(btemp+1)^0,w,c
 15552  01027A  A4D8               	btfss	status,2,c
 15553  01027C  D056               	goto	l11622
 15554  01027E  0EBF               	movlw	191
 15555  010280  6E32               	movwf	(btemp+10)^0,c
 15556  010282  0EFF               	movlw	255
 15557  010284  6E33               	movwf	(btemp+11)^0,c
 15558                           
 15559                           ;stkvar	_c @ sp[(-56)+-7]
 15560  010286  0EC1               	movlw	-63
 15561  010288  50E3               	movf	plusw1,w,c
 15562  01028A  6E30               	movwf	(btemp+8)^0,c
 15563  01028C  6A31               	clrf	(btemp+9)^0,c
 15564  01028E  5032               	movf	(btemp+10)^0,w,c
 15565  010290  2630               	addwf	(btemp+8)^0,f,c
 15566  010292  5033               	movf	(btemp+11)^0,w,c
 15567  010294  2231               	addwfc	(btemp+9)^0,f,c
 15568  010296  5031               	movf	(btemp+9)^0,w,c
 15569  010298  E106               	bnz	u10730
 15570  01029A  0E1A               	movlw	26
 15571  01029C  5C30               	subwf	(btemp+8)^0,w,c
 15572  01029E  B0D8               	btfsc	status,0,c
 15573  0102A0  D002               	goto	u10730
 15574  0102A2  0E01               	movlw	1
 15575  0102A4  D001               	goto	u10740
 15576  0102A6                     u10730:
 15577  0102A6  0E00               	movlw	0
 15578  0102A8                     u10740:
 15579  0102A8  6E32               	movwf	(btemp+10)^0,c
 15580  0102AA  6A33               	clrf	(btemp+11)^0,c
 15581                           
 15582                           ;stkvar	_efgtoa$5386 @ sp[(-56)+6]
 15583  0102AC  0ECE               	movlw	-50
 15584  0102AE  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 15585  0102B4  0ECF               	movlw	-49
 15586  0102B6  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 15587                           
 15588                           ;stkvar	_efgtoa$5386 @ sp[(-56)+6]
 15589  0102BC  0ECE               	movlw	-50
 15590  0102BE  006F FF8C  F028    	movff	plusw1,btemp
 15591  0102C4  0ECF               	movlw	-49
 15592  0102C6  50E3               	movf	plusw1,w,c
 15593  0102C8  1028               	iorwf	btemp^0,w,c
 15594  0102CA  B4D8               	btfsc	status,2,c
 15595  0102CC  D017               	goto	l11614
 15596                           
 15597                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 15598  0102CE  0EDA               	movlw	low STR_70
 15599  0102D0  6EE6               	movwf	postinc1,c
 15600  0102D2  0EFF               	movlw	high STR_70
 15601  0102D4  6EE6               	movwf	postinc1,c
 15602                           
 15603                           ;stkvar	_n @ sp[(-58)+32]
 15604  0102D6  0E94               	movlw	low _dbuf
 15605  0102D8  6E32               	movwf	(btemp+10)^0,c
 15606  0102DA  0E03               	movlw	high _dbuf
 15607  0102DC  6E33               	movwf	(btemp+11)^0,c
 15608  0102DE  0EE6               	movlw	-26
 15609  0102E0  50E3               	movf	plusw1,w,c
 15610  0102E2  2632               	addwf	(btemp+10)^0,f,c
 15611  0102E4  0EE7               	movlw	-25
 15612  0102E6  50E3               	movf	plusw1,w,c
 15613  0102E8  2233               	addwfc	(btemp+11)^0,f,c
 15614  0102EA  0060  F0CB  FFE6   	movff	btemp+10,postinc1
 15615  0102F0  0060  F0CF  FFE6   	movff	btemp+11,postinc1
 15616  0102F6  EC72  F0CC         	call	_strcpy	;wreg free
 15617                           
 15618                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 15619  0102FA  D78D               	goto	l11598
 15620  0102FC                     l11614:
 15621                           
 15622                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 15623  0102FC  0EE2               	movlw	low STR_71
 15624  0102FE  6EE6               	movwf	postinc1,c
 15625  010300  0EFF               	movlw	high STR_71
 15626  010302  6EE6               	movwf	postinc1,c
 15627                           
 15628                           ;stkvar	_n @ sp[(-58)+32]
 15629  010304  0E94               	movlw	low _dbuf
 15630  010306  6E32               	movwf	(btemp+10)^0,c
 15631  010308  0E03               	movlw	high _dbuf
 15632  01030A  6E33               	movwf	(btemp+11)^0,c
 15633  01030C  0EE6               	movlw	-26
 15634  01030E  50E3               	movf	plusw1,w,c
 15635  010310  2632               	addwf	(btemp+10)^0,f,c
 15636  010312  0EE7               	movlw	-25
 15637  010314  50E3               	movf	plusw1,w,c
 15638  010316  2233               	addwfc	(btemp+11)^0,f,c
 15639  010318  0060  F0CB  FFE6   	movff	btemp+10,postinc1
 15640  01031E  0060  F0CF  FFE6   	movff	btemp+11,postinc1
 15641  010324  EC72  F0CC         	call	_strcpy	;wreg free
 15642  010328  D776               	goto	l11598
 15643  01032A                     l11622:
 15644                           
 15645                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 15646  01032A  0E00               	movlw	0
 15647  01032C  6E30               	movwf	(btemp+8)^0,c
 15648  01032E  0E00               	movlw	0
 15649  010330  6E31               	movwf	(btemp+9)^0,c
 15650  010332  0E80               	movlw	128
 15651  010334  6E32               	movwf	(btemp+10)^0,c
 15652  010336  0E3F               	movlw	63
 15653  010338  6E33               	movwf	(btemp+11)^0,c
 15654                           
 15655                           ;stkvar	_u @ sp[(-56)+12]
 15656  01033A  0ED4               	movlw	-44
 15657  01033C  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 15658  010342  0ED5               	movlw	-43
 15659  010344  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 15660  01034A  0ED6               	movlw	-42
 15661  01034C  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 15662  010352  0ED7               	movlw	-41
 15663  010354  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 15664                           
 15665                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 15666                           ;stkvar	_e @ sp[(-56)+34]
 15667  01035A  0EEA               	movlw	-22
 15668  01035C  6AE3               	clrf	plusw1,c
 15669  01035E  0EEB               	movlw	-21
 15670  010360  6AE3               	clrf	plusw1,c
 15671                           
 15672                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 15673  010362  0E00               	movlw	0
 15674  010364  6EE6               	movwf	postinc1,c
 15675  010366  0E00               	movlw	0
 15676  010368  6EE6               	movwf	postinc1,c
 15677  01036A  0E00               	movlw	0
 15678  01036C  6EE6               	movwf	postinc1,c
 15679  01036E  0E00               	movlw	0
 15680  010370  6EE6               	movwf	postinc1,c
 15681                           
 15682                           ;stkvar	_g @ sp[(-60)+16]
 15683  010372  0ED4               	movlw	-44
 15684  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 15685  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 15686  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 15687  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 15688  01038C  ECDC  F0CC         	call	___fleq	;wreg free
 15689  010390  A028               	btfss	btemp& (0+255),0,c
 15690  010392  D039               	goto	l11634
 15691  010394  D0BC               	goto	u10780
 15692  010396                     l11630:
 15693                           
 15694                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 15695  010396  0E00               	movlw	0
 15696  010398  6EE6               	movwf	postinc1,c
 15697  01039A  0E00               	movlw	0
 15698  01039C  6EE6               	movwf	postinc1,c
 15699  01039E  0E20               	movlw	32
 15700  0103A0  6EE6               	movwf	postinc1,c
 15701  0103A2  0E41               	movlw	65
 15702  0103A4  6EE6               	movwf	postinc1,c
 15703                           
 15704                           ;stkvar	_u @ sp[(-60)+12]
 15705  0103A6  0ED0               	movlw	-48
 15706  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 15707  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 15708  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 15709  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 15710  0103C0  EC0F  F099         	call	___flmul	;wreg free
 15711                           
 15712                           ;stkvar	_u @ sp[(-56)+12]
 15713  0103C4  0ED4               	movlw	-44
 15714  0103C6  0060  F0A3  FFE3   	movff	btemp,plusw1
 15715  0103CC  0ED5               	movlw	-43
 15716  0103CE  0060  F0A7  FFE3   	movff	btemp+1,plusw1
 15717  0103D4  0ED6               	movlw	-42
 15718  0103D6  0060  F0AB  FFE3   	movff	btemp+2,plusw1
 15719  0103DC  0ED7               	movlw	-41
 15720  0103DE  0060  F0AF  FFE3   	movff	btemp+3,plusw1
 15721                           
 15722                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 15723                           ;stkvar	_e @ sp[(-56)+34]
 15724  0103E4  0EEA               	movlw	-22
 15725  0103E6  50E3               	movf	plusw1,w,c
 15726  0103E8  0F01               	addlw	1
 15727  0103EA  6E28               	movwf	btemp^0,c
 15728  0103EC  0EEA               	movlw	-22
 15729  0103EE  0060  F0A3  FFE3   	movff	btemp,plusw1
 15730  0103F4  6A28               	clrf	btemp^0,c
 15731  0103F6  0EEB               	movlw	-21
 15732  0103F8  50E3               	movf	plusw1,w,c
 15733  0103FA  2028               	addwfc	btemp^0,w,c
 15734  0103FC  6E28               	movwf	btemp^0,c
 15735  0103FE  0EEB               	movlw	-21
 15736  010400  0060  F0A3  FFE3   	movff	btemp,plusw1
 15737  010406                     l11634:
 15738                           
 15739                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 15740  010406  0E00               	movlw	0
 15741  010408  6EE6               	movwf	postinc1,c
 15742  01040A  0E00               	movlw	0
 15743  01040C  6EE6               	movwf	postinc1,c
 15744  01040E  0E20               	movlw	32
 15745  010410  6EE6               	movwf	postinc1,c
 15746  010412  0E41               	movlw	65
 15747  010414  6EE6               	movwf	postinc1,c
 15748                           
 15749                           ;stkvar	_u @ sp[(-60)+12]
 15750  010416  0ED0               	movlw	-48
 15751  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 15752  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 15753  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 15754  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 15755  010430  EC0F  F099         	call	___flmul	;wreg free
 15756  010434  0060  F0A3  FFE6   	movff	btemp,postinc1
 15757  01043A  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 15758  010440  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 15759  010446  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 15760                           
 15761                           ;stkvar	_g @ sp[(-60)+16]
 15762  01044C  0ED4               	movlw	-44
 15763  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 15764  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 15765  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 15766  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 15767  010466  EC70  F0C3         	call	___flge	;wreg free
 15768  01046A  A028               	btfss	btemp& (0+255),0,c
 15769  01046C  D032               	goto	l11640
 15770  01046E  D793               	goto	l11630
 15771  010470                     l11636:
 15772                           
 15773                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 15774  010470  0E00               	movlw	0
 15775  010472  6EE6               	movwf	postinc1,c
 15776  010474  0E00               	movlw	0
 15777  010476  6EE6               	movwf	postinc1,c
 15778  010478  0E20               	movlw	32
 15779  01047A  6EE6               	movwf	postinc1,c
 15780  01047C  0E41               	movlw	65
 15781  01047E  6EE6               	movwf	postinc1,c
 15782                           
 15783                           ;stkvar	_u @ sp[(-60)+12]
 15784  010480  0ED0               	movlw	-48
 15785  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 15786  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 15787  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 15788  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 15789  01049A  EC9B  F0A4         	call	___fldiv	;wreg free
 15790                           
 15791                           ;stkvar	_u @ sp[(-56)+12]
 15792  01049E  0ED4               	movlw	-44
 15793  0104A0  0060  F0A3  FFE3   	movff	btemp,plusw1
 15794  0104A6  0ED5               	movlw	-43
 15795  0104A8  0060  F0A7  FFE3   	movff	btemp+1,plusw1
 15796  0104AE  0ED6               	movlw	-42
 15797  0104B0  0060  F0AB  FFE3   	movff	btemp+2,plusw1
 15798  0104B6  0ED7               	movlw	-41
 15799  0104B8  0060  F0AF  FFE3   	movff	btemp+3,plusw1
 15800                           
 15801                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 15802                           ;stkvar	_e @ sp[(-56)+34]
 15803  0104BE  50E1               	movf	fsr1l,w,c
 15804  0104C0  0FEA               	addlw	-22
 15805  0104C2  6ED9               	movwf	fsr2l,c
 15806  0104C4  50E2               	movf	fsr1h,w,c
 15807  0104C6  6EDA               	movwf	fsr2h,c
 15808  0104C8  0EFF               	movlw	255
 15809  0104CA  22DA               	addwfc	fsr2h,f,c
 15810  0104CC  06DE               	decf	postinc2,f,c
 15811  0104CE  0E00               	movlw	0
 15812  0104D0  5ADD               	subwfb	postdec2,f,c
 15813  0104D2                     l11640:
 15814                           
 15815                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 15816                           ;stkvar	_u @ sp[(-56)+12]
 15817  0104D2  0ED4               	movlw	-44
 15818  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 15819  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 15820  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 15821  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 15822                           
 15823                           ;stkvar	_g @ sp[(-60)+16]
 15824  0104EC  0ED4               	movlw	-44
 15825  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 15826  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 15827  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 15828  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 15829  010506  EC70  F0C3         	call	___flge	;wreg free
 15830  01050A  A028               	btfss	btemp& (0+255),0,c
 15831  01050C  D7B1               	goto	l11636
 15832  01050E                     u10780:
 15833                           
 15834                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 15835                           ;stkvar	_c @ sp[(-56)+-7]
 15836  01050E  0EC1               	movlw	-63
 15837  010510  50E3               	movf	plusw1,w,c
 15838  010512  6EE6               	movwf	postinc1,c
 15839  010514  0E00               	movlw	0
 15840  010516  6EE6               	movwf	postinc1,c
 15841  010518  EC95  F0D1         	call	_tolower	;wreg free
 15842                           
 15843                           ;stkvar	_mode @ sp[(-56)+54]
 15844  01051C  0EFE               	movlw	-2
 15845  01051E  0060  F0A3  FFE3   	movff	btemp,plusw1
 15846                           
 15847                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 15848                           ;stkvar	_mode @ sp[(-56)+54]
 15849                           ;stkvar	_nmode @ sp[(-56)+55]
 15850  010524  0EFE               	movlw	-2
 15851  010526  006F FF8C  F028    	movff	plusw1,btemp
 15852  01052C  0EFF               	movlw	-1
 15853  01052E  0060  F0A3  FFE3   	movff	btemp,plusw1
 15854                           
 15855                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 15856                           ;stkvar	_mode @ sp[(-56)+54]
 15857  010534  0EFE               	movlw	-2
 15858  010536  006F FF8C  F028    	movff	plusw1,btemp
 15859  01053C  0E67               	movlw	103
 15860  01053E  1828               	xorwf	btemp^0,w,c
 15861  010540  A4D8               	btfss	status,2,c
 15862  010542  D025               	goto	l11658
 15863                           
 15864                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 15865  010544  504A               	movf	_prec^0,w,c
 15866  010546  104B               	iorwf	(_prec+1)^0,w,c
 15867  010548  A4D8               	btfss	status,2,c
 15868  01054A  D004               	goto	l11652
 15869                           
 15870                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 15871  01054C  0E00               	movlw	0
 15872  01054E  6E4B               	movwf	(_prec+1)^0,c
 15873  010550  0E01               	movlw	1
 15874  010552  6E4A               	movwf	_prec^0,c
 15875  010554                     l11652:
 15876                           
 15877                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 15878  010554  BE4B               	btfsc	(_prec+1)^0,7,c
 15879  010556  D005               	goto	u10810
 15880  010558  504B               	movf	(_prec+1)^0,w,c
 15881  01055A  E110               	bnz	l11656
 15882  01055C  044A               	decf	_prec^0,w,c
 15883  01055E  B0D8               	btfsc	status,0,c
 15884  010560  D00D               	goto	l11656
 15885  010562                     u10810:
 15886  010562  0E06               	movlw	6
 15887  010564  6E32               	movwf	(btemp+10)^0,c
 15888  010566  0E00               	movlw	0
 15889  010568  6E33               	movwf	(btemp+11)^0,c
 15890                           
 15891                           ;stkvar	_p @ sp[(-56)+40]
 15892  01056A  0EF0               	movlw	-16
 15893  01056C  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 15894  010572  0EF1               	movlw	-15
 15895  010574  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 15896  01057A  D00C               	goto	l11664
 15897  01057C                     l11656:
 15898                           
 15899                           ;stkvar	_p @ sp[(-56)+40]
 15900  01057C  0EF0               	movlw	-16
 15901  01057E  0060  F12B  FFE3   	movff	_prec,plusw1
 15902  010584  0EF1               	movlw	-15
 15903  010586  0060  F12F  FFE3   	movff	_prec+1,plusw1
 15904  01058C  D003               	goto	l11664
 15905  01058E                     l11658:
 15906                           
 15907                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 15908  01058E  AE4B               	btfss	(_prec+1)^0,7,c
 15909  010590  D7F5               	goto	l11656
 15910  010592  D7E7               	goto	u10810
 15911  010594                     l11664:
 15912                           
 15913                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 15914                           ;stkvar	_mode @ sp[(-56)+54]
 15915  010594  0EFE               	movlw	-2
 15916  010596  006F FF8C  F028    	movff	plusw1,btemp
 15917  01059C  0E67               	movlw	103
 15918  01059E  1828               	xorwf	btemp^0,w,c
 15919  0105A0  A4D8               	btfss	status,2,c
 15920  0105A2  D02F               	goto	l11674
 15921                           
 15922                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 15923                           ;stkvar	_e @ sp[(-56)+34]
 15924  0105A4  0EEB               	movlw	-21
 15925  0105A6  AEE3               	btfss	plusw1,7,c
 15926  0105A8  D00E               	goto	u10840
 15927  0105AA  0EEA               	movlw	-22
 15928  0105AC  006F FF8C  F028    	movff	plusw1,btemp
 15929  0105B2  0EFC               	movlw	252
 15930  0105B4  5E28               	subwf	btemp^0,f,c
 15931  0105B6  0EEB               	movlw	-21
 15932  0105B8  006F FF8C  F028    	movff	plusw1,btemp
 15933  0105BE  0EFF               	movlw	255
 15934  0105C0  5A28               	subwfb	btemp^0,f,c
 15935  0105C2  A0D8               	btfss	status,0,c
 15936  0105C4  D018               	goto	l11672
 15937  0105C6                     u10840:
 15938                           
 15939                           ;stkvar	_e @ sp[(-56)+34]
 15940                           ;stkvar	_p @ sp[(-56)+40]
 15941  0105C6  0EF0               	movlw	-16
 15942  0105C8  50E3               	movf	plusw1,w,c
 15943  0105CA  0FFF               	addlw	255
 15944  0105CC  6E32               	movwf	(btemp+10)^0,c
 15945  0105CE  0EF1               	movlw	-15
 15946  0105D0  006F FF8C  F033    	movff	plusw1,btemp+11
 15947  0105D6  0EFF               	movlw	255
 15948  0105D8  2233               	addwfc	(btemp+11)^0,f,c
 15949  0105DA  0EEA               	movlw	-22
 15950  0105DC  50E3               	movf	plusw1,w,c
 15951  0105DE  5C32               	subwf	(btemp+10)^0,w,c
 15952  0105E0  5033               	movf	(btemp+11)^0,w,c
 15953  0105E2  0A80               	xorlw	128
 15954  0105E4  6E28               	movwf	btemp^0,c
 15955  0105E6  0EEB               	movlw	-21
 15956  0105E8  50E3               	movf	plusw1,w,c
 15957  0105EA  0A80               	xorlw	128
 15958  0105EC  5828               	subwfb	btemp^0,w,c
 15959  0105EE  A0D8               	btfss	status,0,c
 15960  0105F0  D002               	goto	l11672
 15961                           
 15962                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 15963  0105F2  0E66               	movlw	102
 15964  0105F4  D001               	goto	L15
 15965  0105F6                     l11672:
 15966                           
 15967                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 15968  0105F6  0E65               	movlw	101
 15969  0105F8                     L15:
 15970  0105F8  6E33               	movwf	(btemp+11)^0,c
 15971                           
 15972                           ;stkvar	_nmode @ sp[(-56)+55]
 15973  0105FA  0EFF               	movlw	-1
 15974  0105FC  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 15975  010602                     l11674:
 15976                           
 15977                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 15978                           ;stkvar	_p @ sp[(-56)+40]
 15979                           ;stkvar	_m @ sp[(-56)+48]
 15980  010602  0EF0               	movlw	-16
 15981  010604  006F FF8C  F028    	movff	plusw1,btemp
 15982  01060A  0EF8               	movlw	-8
 15983  01060C  0060  F0A3  FFE3   	movff	btemp,plusw1
 15984  010612  0EF1               	movlw	-15
 15985  010614  006F FF8C  F028    	movff	plusw1,btemp
 15986  01061A  0EF9               	movlw	-7
 15987  01061C  0060  F0A3  FFE3   	movff	btemp,plusw1
 15988                           
 15989                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 15990                           ;stkvar	_mode @ sp[(-56)+54]
 15991  010622  0EFE               	movlw	-2
 15992  010624  006F FF8C  F028    	movff	plusw1,btemp
 15993  01062A  0E67               	movlw	103
 15994  01062C  1828               	xorwf	btemp^0,w,c
 15995  01062E  A4D8               	btfss	status,2,c
 15996  010630  D00B               	goto	u10880
 15997                           
 15998                           ;stkvar	_nmode @ sp[(-56)+55]
 15999  010632  0EFF               	movlw	-1
 16000  010634  006F FF8C  F028    	movff	plusw1,btemp
 16001  01063A  0E66               	movlw	102
 16002  01063C  1828               	xorwf	btemp^0,w,c
 16003  01063E  A4D8               	btfss	status,2,c
 16004  010640  D014               	goto	l2191
 16005                           
 16006                           ;stkvar	_e @ sp[(-56)+34]
 16007  010642  0EEB               	movlw	-21
 16008  010644  AEE3               	btfss	plusw1,7,c
 16009  010646  D011               	goto	l2191
 16010  010648                     u10880:
 16011                           
 16012                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 16013                           ;stkvar	_m @ sp[(-56)+48]
 16014  010648  0EF8               	movlw	-8
 16015  01064A  50E3               	movf	plusw1,w,c
 16016  01064C  0F01               	addlw	1
 16017  01064E  6E28               	movwf	btemp^0,c
 16018  010650  0EF8               	movlw	-8
 16019  010652  0060  F0A3  FFE3   	movff	btemp,plusw1
 16020  010658  6A28               	clrf	btemp^0,c
 16021  01065A  0EF9               	movlw	-7
 16022  01065C  50E3               	movf	plusw1,w,c
 16023  01065E  2028               	addwfc	btemp^0,w,c
 16024  010660  6E28               	movwf	btemp^0,c
 16025  010662  0EF9               	movlw	-7
 16026  010664  0060  F0A3  FFE3   	movff	btemp,plusw1
 16027  01066A                     l2191:
 16028                           
 16029                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 16030                           ;stkvar	_nmode @ sp[(-56)+55]
 16031  01066A  0EFF               	movlw	-1
 16032  01066C  006F FF8C  F028    	movff	plusw1,btemp
 16033  010672  0E66               	movlw	102
 16034  010674  1828               	xorwf	btemp^0,w,c
 16035  010676  A4D8               	btfss	status,2,c
 16036  010678  D03B               	goto	l11694
 16037                           
 16038                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 16039                           ;stkvar	_e @ sp[(-56)+34]
 16040  01067A  0EEB               	movlw	-21
 16041  01067C  AEE3               	btfss	plusw1,7,c
 16042  01067E  D01C               	goto	l11690
 16043                           
 16044                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 16045  010680  0E00               	movlw	0
 16046  010682  6E30               	movwf	(btemp+8)^0,c
 16047  010684  0E00               	movlw	0
 16048  010686  6E31               	movwf	(btemp+9)^0,c
 16049  010688  0E80               	movlw	128
 16050  01068A  6E32               	movwf	(btemp+10)^0,c
 16051  01068C  0E3F               	movlw	63
 16052  01068E  6E33               	movwf	(btemp+11)^0,c
 16053                           
 16054                           ;stkvar	_u @ sp[(-56)+12]
 16055  010690  0ED4               	movlw	-44
 16056  010692  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 16057  010698  0ED5               	movlw	-43
 16058  01069A  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 16059  0106A0  0ED6               	movlw	-42
 16060  0106A2  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 16061  0106A8  0ED7               	movlw	-41
 16062  0106AA  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 16063                           
 16064                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 16065                           ;stkvar	_e @ sp[(-56)+34]
 16066  0106B0  0EEA               	movlw	-22
 16067  0106B2  6AE3               	clrf	plusw1,c
 16068  0106B4  0EEB               	movlw	-21
 16069  0106B6  6AE3               	clrf	plusw1,c
 16070  0106B8                     l11690:
 16071                           
 16072                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 16073                           ;stkvar	_mode @ sp[(-56)+54]
 16074  0106B8  0EFE               	movlw	-2
 16075  0106BA  006F FF8C  F028    	movff	plusw1,btemp
 16076  0106C0  0E67               	movlw	103
 16077  0106C2  1828               	xorwf	btemp^0,w,c
 16078  0106C4  B4D8               	btfsc	status,2,c
 16079  0106C6  D014               	goto	l11694
 16080                           
 16081                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 16082                           ;stkvar	_e @ sp[(-56)+34]
 16083                           ;stkvar	_m @ sp[(-56)+48]
 16084  0106C8  0EF8               	movlw	-8
 16085  0106CA  50E3               	movf	plusw1,w,c
 16086  0106CC  6E28               	movwf	btemp^0,c
 16087  0106CE  0EEA               	movlw	-22
 16088  0106D0  50E3               	movf	plusw1,w,c
 16089  0106D2  2628               	addwf	btemp^0,f,c
 16090  0106D4  0EF8               	movlw	-8
 16091  0106D6  0060  F0A3  FFE3   	movff	btemp,plusw1
 16092  0106DC  0EF9               	movlw	-7
 16093  0106DE  50E3               	movf	plusw1,w,c
 16094  0106E0  6E28               	movwf	btemp^0,c
 16095  0106E2  0EEB               	movlw	-21
 16096  0106E4  50E3               	movf	plusw1,w,c
 16097  0106E6  2228               	addwfc	btemp^0,f,c
 16098  0106E8  0EF9               	movlw	-7
 16099  0106EA  0060  F0A3  FFE3   	movff	btemp,plusw1
 16100  0106F0                     l11694:
 16101                           
 16102                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 16103                           ;stkvar	_i @ sp[(-56)+36]
 16104  0106F0  0EEC               	movlw	-20
 16105  0106F2  6AE3               	clrf	plusw1,c
 16106  0106F4  0EED               	movlw	-19
 16107  0106F6  6AE3               	clrf	plusw1,c
 16108                           
 16109                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 16110                           ;stkvar	_g @ sp[(-56)+16]
 16111  0106F8  0ED8               	movlw	-40
 16112  0106FA  006F FF8C  F030    	movff	plusw1,btemp+8
 16113  010700  0ED9               	movlw	-39
 16114  010702  006F FF8C  F031    	movff	plusw1,btemp+9
 16115  010708  0EDA               	movlw	-38
 16116  01070A  006F FF8C  F032    	movff	plusw1,btemp+10
 16117  010710  0EDB               	movlw	-37
 16118  010712  006F FF8C  F033    	movff	plusw1,btemp+11
 16119                           
 16120                           ;stkvar	_h @ sp[(-56)+24]
 16121  010718  0EE0               	movlw	-32
 16122  01071A  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 16123  010720  0EE1               	movlw	-31
 16124  010722  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 16125  010728  0EE2               	movlw	-30
 16126  01072A  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 16127  010730  0EE3               	movlw	-29
 16128  010732  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 16129                           
 16130                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 16131                           ;stkvar	_u @ sp[(-56)+12]
 16132  010738  0ED4               	movlw	-44
 16133  01073A  006F FF8C  F030    	movff	plusw1,btemp+8
 16134  010740  0ED5               	movlw	-43
 16135  010742  006F FF8C  F031    	movff	plusw1,btemp+9
 16136  010748  0ED6               	movlw	-42
 16137  01074A  006F FF8C  F032    	movff	plusw1,btemp+10
 16138  010750  0ED7               	movlw	-41
 16139  010752  006F FF8C  F033    	movff	plusw1,btemp+11
 16140                           
 16141                           ;stkvar	_ou @ sp[(-56)+28]
 16142  010758  0EE4               	movlw	-28
 16143  01075A  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 16144  010760  0EE5               	movlw	-27
 16145  010762  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 16146  010768  0EE6               	movlw	-26
 16147  01076A  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 16148  010770  0EE7               	movlw	-25
 16149  010772  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 16150                           
 16151                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 16152  010778  D0D6               	goto	l11710
 16153  01077A                     l11700:
 16154                           
 16155                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 16156                           ;stkvar	_u @ sp[(-56)+12]
 16157  01077A  0ED4               	movlw	-44
 16158  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 16159  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 16160  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 16161  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 16162                           
 16163                           ;stkvar	_h @ sp[(-60)+24]
 16164  010794  0EDC               	movlw	-36
 16165  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 16166  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 16167  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 16168  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 16169  0107AE  EC9B  F0A4         	call	___fldiv	;wreg free
 16170  0107B2  0060  F0A3  FFE6   	movff	btemp,postinc1
 16171  0107B8  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 16172  0107BE  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 16173  0107C4  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 16174  0107CA  EC9C  F0AF         	call	_floorf	;wreg free
 16175                           
 16176                           ;stkvar	_l @ sp[(-56)+20]
 16177  0107CE  0EDC               	movlw	-36
 16178  0107D0  0060  F0A3  FFE3   	movff	btemp,plusw1
 16179  0107D6  0EDD               	movlw	-35
 16180  0107D8  0060  F0A7  FFE3   	movff	btemp+1,plusw1
 16181  0107DE  0EDE               	movlw	-34
 16182  0107E0  0060  F0AB  FFE3   	movff	btemp+2,plusw1
 16183  0107E6  0EDF               	movlw	-33
 16184  0107E8  0060  F0AF  FFE3   	movff	btemp+3,plusw1
 16185                           
 16186                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 16187                           ;stkvar	_l @ sp[(-56)+20]
 16188  0107EE  0EDC               	movlw	-36
 16189  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 16190  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 16191  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 16192  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 16193  010808  ECFF  F0C1         	call	___fltol	;wreg free
 16194  01080C  0060  F0A0  F032   	movff	btemp,btemp+10
 16195  010812  0060  F0A4  F033   	movff	btemp+1,btemp+11
 16196                           
 16197                           ;stkvar	_d @ sp[(-56)+44]
 16198  010818  0EF4               	movlw	-12
 16199  01081A  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 16200  010820  0EF5               	movlw	-11
 16201  010822  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 16202                           
 16203                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 16204                           ;stkvar	_u @ sp[(-56)+12]
 16205  010828  0ED4               	movlw	-44
 16206  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 16207  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 16208  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 16209  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 16210                           
 16211                           ;stkvar	_l @ sp[(-60)+20]
 16212  010842  0ED8               	movlw	-40
 16213  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 16214  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 16215  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 16216  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 16217  01085C  EC0F  F099         	call	___flmul	;wreg free
 16218  010860  0060  F0A3  FFE6   	movff	btemp,postinc1
 16219  010866  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 16220  01086C  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 16221  010872  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 16222                           
 16223                           ;stkvar	_h @ sp[(-60)+24]
 16224  010878  0EDC               	movlw	-36
 16225  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 16226  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 16227  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 16228  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 16229  010892  EC41  F0D5         	call	___flsub	;wreg free
 16230                           
 16231                           ;stkvar	_h @ sp[(-56)+24]
 16232  010896  0EE0               	movlw	-32
 16233  010898  0060  F0A3  FFE3   	movff	btemp,plusw1
 16234  01089E  0EE1               	movlw	-31
 16235  0108A0  0060  F0A7  FFE3   	movff	btemp+1,plusw1
 16236  0108A6  0EE2               	movlw	-30
 16237  0108A8  0060  F0AB  FFE3   	movff	btemp+2,plusw1
 16238  0108AE  0EE3               	movlw	-29
 16239  0108B0  0060  F0AF  FFE3   	movff	btemp+3,plusw1
 16240                           
 16241                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 16242  0108B6  0E00               	movlw	0
 16243  0108B8  6EE6               	movwf	postinc1,c
 16244  0108BA  0E00               	movlw	0
 16245  0108BC  6EE6               	movwf	postinc1,c
 16246  0108BE  0E20               	movlw	32
 16247  0108C0  6EE6               	movwf	postinc1,c
 16248  0108C2  0E41               	movlw	65
 16249  0108C4  6EE6               	movwf	postinc1,c
 16250                           
 16251                           ;stkvar	_u @ sp[(-60)+12]
 16252  0108C6  0ED0               	movlw	-48
 16253  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 16254  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 16255  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 16256  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 16257  0108E0  EC9B  F0A4         	call	___fldiv	;wreg free
 16258                           
 16259                           ;stkvar	_u @ sp[(-56)+12]
 16260  0108E4  0ED4               	movlw	-44
 16261  0108E6  0060  F0A3  FFE3   	movff	btemp,plusw1
 16262  0108EC  0ED5               	movlw	-43
 16263  0108EE  0060  F0A7  FFE3   	movff	btemp+1,plusw1
 16264  0108F4  0ED6               	movlw	-42
 16265  0108F6  0060  F0AB  FFE3   	movff	btemp+2,plusw1
 16266  0108FC  0ED7               	movlw	-41
 16267  0108FE  0060  F0AF  FFE3   	movff	btemp+3,plusw1
 16268                           
 16269                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 16270                           ;stkvar	_i @ sp[(-56)+36]
 16271  010904  0EEC               	movlw	-20
 16272  010906  50E3               	movf	plusw1,w,c
 16273  010908  0F01               	addlw	1
 16274  01090A  6E28               	movwf	btemp^0,c
 16275  01090C  0EEC               	movlw	-20
 16276  01090E  0060  F0A3  FFE3   	movff	btemp,plusw1
 16277  010914  6A28               	clrf	btemp^0,c
 16278  010916  0EED               	movlw	-19
 16279  010918  50E3               	movf	plusw1,w,c
 16280  01091A  2028               	addwfc	btemp^0,w,c
 16281  01091C  6E28               	movwf	btemp^0,c
 16282  01091E  0EED               	movlw	-19
 16283  010920  0060  F0A3  FFE3   	movff	btemp,plusw1
 16284  010926                     l11710:
 16285                           
 16286                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 16287                           ;stkvar	_m @ sp[(-56)+48]
 16288                           ;stkvar	_i @ sp[(-56)+36]
 16289  010926  50E1               	movf	fsr1l,w,c
 16290  010928  0FEC               	addlw	-20
 16291  01092A  6ED9               	movwf	fsr2l,c
 16292  01092C  50E2               	movf	fsr1h,w,c
 16293  01092E  6EDA               	movwf	fsr2h,c
 16294  010930  0EFF               	movlw	255
 16295  010932  22DA               	addwfc	fsr2h,f,c
 16296  010934  0EF8               	movlw	-8
 16297  010936  50E3               	movf	plusw1,w,c
 16298  010938  5CDE               	subwf	postinc2,w,c
 16299  01093A  50DE               	movf	postinc2,w,c
 16300  01093C  0A80               	xorlw	128
 16301  01093E  6E28               	movwf	btemp^0,c
 16302  010940  0EF9               	movlw	-7
 16303  010942  50E3               	movf	plusw1,w,c
 16304  010944  0A80               	xorlw	128
 16305  010946  5828               	subwfb	btemp^0,w,c
 16306  010948  A0D8               	btfss	status,0,c
 16307  01094A  D717               	goto	l11700
 16308                           
 16309                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 16310  01094C  0E00               	movlw	0
 16311  01094E  6EE6               	movwf	postinc1,c
 16312  010950  0E00               	movlw	0
 16313  010952  6EE6               	movwf	postinc1,c
 16314  010954  0EA0               	movlw	160
 16315  010956  6EE6               	movwf	postinc1,c
 16316  010958  0E40               	movlw	64
 16317  01095A  6EE6               	movwf	postinc1,c
 16318                           
 16319                           ;stkvar	_u @ sp[(-60)+12]
 16320  01095C  0ED0               	movlw	-48
 16321  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 16322  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 16323  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 16324  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 16325  010976  EC0F  F099         	call	___flmul	;wreg free
 16326                           
 16327                           ;stkvar	_l @ sp[(-56)+20]
 16328  01097A  0EDC               	movlw	-36
 16329  01097C  0060  F0A3  FFE3   	movff	btemp,plusw1
 16330  010982  0EDD               	movlw	-35
 16331  010984  0060  F0A7  FFE3   	movff	btemp+1,plusw1
 16332  01098A  0EDE               	movlw	-34
 16333  01098C  0060  F0AB  FFE3   	movff	btemp+2,plusw1
 16334  010992  0EDF               	movlw	-33
 16335  010994  0060  F0AF  FFE3   	movff	btemp+3,plusw1
 16336                           
 16337                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 16338                           ;stkvar	_l @ sp[(-56)+20]
 16339  01099A  0EDC               	movlw	-36
 16340  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 16341  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 16342  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 16343  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 16344                           
 16345                           ;stkvar	_h @ sp[(-60)+24]
 16346  0109B4  0EDC               	movlw	-36
 16347  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 16348  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 16349  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 16350  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 16351  0109CE  EC70  F0C3         	call	___flge	;wreg free
 16352  0109D2  A028               	btfss	btemp& (0+255),0,c
 16353  0109D4  D021               	goto	u10950
 16354                           
 16355                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 16356                           ;stkvar	_l @ sp[(-56)+20]
 16357                           
 16358                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 16359                           
 16360                           ;stkvar	_l @ sp[(-56)+20]
 16361                           
 16362                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 16363  0109D6  0EDC               	movlw	-36
 16364  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 16365  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 16366  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 16367  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 16368                           
 16369                           ;stkvar	_h @ sp[(-60)+24]
 16370  0109F0  0EDC               	movlw	-36
 16371  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 16372  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 16373  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 16374  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 16375  010A0A  ECDC  F0CC         	call	___fleq	;wreg free
 16376  010A0E  A028               	btfss	btemp& (0+255),0,c
 16377  010A10  D01B               	goto	l11724
 16378                           
 16379                           ;stkvar	_d @ sp[(-56)+44]
 16380  010A12  0EF4               	movlw	-12
 16381  010A14  B0E3               	btfsc	plusw1,0,c
 16382  010A16  D018               	goto	l11724
 16383  010A18                     u10950:
 16384                           
 16385                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 16386  010A18  0E00               	movlw	0
 16387  010A1A  6E30               	movwf	(btemp+8)^0,c
 16388  010A1C  0E00               	movlw	0
 16389  010A1E  6E31               	movwf	(btemp+9)^0,c
 16390  010A20  0E00               	movlw	0
 16391  010A22  6E32               	movwf	(btemp+10)^0,c
 16392  010A24  0E00               	movlw	0
 16393  010A26  6E33               	movwf	(btemp+11)^0,c
 16394                           
 16395                           ;stkvar	_l @ sp[(-56)+20]
 16396  010A28  0EDC               	movlw	-36
 16397  010A2A  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 16398  010A30  0EDD               	movlw	-35
 16399  010A32  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 16400  010A38  0EDE               	movlw	-34
 16401  010A3A  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 16402  010A40  0EDF               	movlw	-33
 16403  010A42  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 16404  010A48                     l11724:
 16405                           
 16406                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 16407                           ;stkvar	_l @ sp[(-56)+20]
 16408  010A48  0EDC               	movlw	-36
 16409  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 16410  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 16411  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 16412  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 16413                           
 16414                           ;stkvar	_g @ sp[(-60)+16]
 16415  010A62  0ED4               	movlw	-44
 16416  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 16417  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 16418  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 16419  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 16420  010A7C  EC24  F09D         	call	___fladd	;wreg free
 16421                           
 16422                           ;stkvar	_h @ sp[(-56)+24]
 16423  010A80  0EE0               	movlw	-32
 16424  010A82  0060  F0A3  FFE3   	movff	btemp,plusw1
 16425  010A88  0EE1               	movlw	-31
 16426  010A8A  0060  F0A7  FFE3   	movff	btemp+1,plusw1
 16427  010A90  0EE2               	movlw	-30
 16428  010A92  0060  F0AB  FFE3   	movff	btemp+2,plusw1
 16429  010A98  0EE3               	movlw	-29
 16430  010A9A  0060  F0AF  FFE3   	movff	btemp+3,plusw1
 16431                           
 16432                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 16433                           ;stkvar	_ou @ sp[(-56)+28]
 16434  010AA0  0EE4               	movlw	-28
 16435  010AA2  006F FF8C  F030    	movff	plusw1,btemp+8
 16436  010AA8  0EE5               	movlw	-27
 16437  010AAA  006F FF8C  F031    	movff	plusw1,btemp+9
 16438  010AB0  0EE6               	movlw	-26
 16439  010AB2  006F FF8C  F032    	movff	plusw1,btemp+10
 16440  010AB8  0EE7               	movlw	-25
 16441  010ABA  006F FF8C  F033    	movff	plusw1,btemp+11
 16442                           
 16443                           ;stkvar	_u @ sp[(-56)+12]
 16444  010AC0  0ED4               	movlw	-44
 16445  010AC2  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 16446  010AC8  0ED5               	movlw	-43
 16447  010ACA  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 16448  010AD0  0ED6               	movlw	-42
 16449  010AD2  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 16450  010AD8  0ED7               	movlw	-41
 16451  010ADA  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 16452                           
 16453                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 16454                           ;stkvar	_nmode @ sp[(-56)+55]
 16455  010AE0  0EFF               	movlw	-1
 16456  010AE2  006F FF8C  F028    	movff	plusw1,btemp
 16457  010AE8  0E65               	movlw	101
 16458  010AEA  1828               	xorwf	btemp^0,w,c
 16459  010AEC  B4D8               	btfsc	status,2,c
 16460  010AEE  D011               	goto	l11732
 16461                           
 16462                           ;stkvar	_e @ sp[(-56)+34]
 16463                           ;stkvar	_ne @ sp[(-56)+46]
 16464  010AF0  0EEA               	movlw	-22
 16465  010AF2  006F FF8C  F028    	movff	plusw1,btemp
 16466  010AF8  0EF6               	movlw	-10
 16467  010AFA  0060  F0A3  FFE3   	movff	btemp,plusw1
 16468  010B00  0EEB               	movlw	-21
 16469  010B02  006F FF8C  F028    	movff	plusw1,btemp
 16470  010B08  0EF7               	movlw	-9
 16471  010B0A  0060  F0A3  FFE3   	movff	btemp,plusw1
 16472  010B10  D004               	goto	l2206
 16473  010B12                     l11732:
 16474                           
 16475                           ;stkvar	_ne @ sp[(-56)+46]
 16476  010B12  0EF6               	movlw	-10
 16477  010B14  6AE3               	clrf	plusw1,c
 16478  010B16  0EF7               	movlw	-9
 16479  010B18  6AE3               	clrf	plusw1,c
 16480  010B1A                     l2206:
 16481                           
 16482                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 16483                           ;stkvar	_pp @ sp[(-56)+50]
 16484  010B1A  0EFA               	movlw	-6
 16485  010B1C  6AE3               	clrf	plusw1,c
 16486  010B1E  0EFB               	movlw	-5
 16487  010B20  6AE3               	clrf	plusw1,c
 16488                           
 16489                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 16490                           ;stkvar	_t @ sp[(-56)+52]
 16491  010B22  0EFC               	movlw	-4
 16492  010B24  6AE3               	clrf	plusw1,c
 16493  010B26  0EFD               	movlw	-3
 16494  010B28  6AE3               	clrf	plusw1,c
 16495                           
 16496                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 16497                           ;stkvar	_i @ sp[(-56)+36]
 16498  010B2A  0EEC               	movlw	-20
 16499  010B2C  6AE3               	clrf	plusw1,c
 16500  010B2E  0EED               	movlw	-19
 16501  010B30  6AE3               	clrf	plusw1,c
 16502                           
 16503                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 16504  010B32  D1B7               	goto	l11784
 16505  010B34                     l11734:
 16506                           
 16507                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 16508                           ;stkvar	_u @ sp[(-56)+12]
 16509  010B34  0ED4               	movlw	-44
 16510  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 16511  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 16512  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 16513  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 16514                           
 16515                           ;stkvar	_h @ sp[(-60)+24]
 16516  010B4E  0EDC               	movlw	-36
 16517  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 16518  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 16519  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 16520  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 16521  010B68  EC9B  F0A4         	call	___fldiv	;wreg free
 16522  010B6C  0060  F0A3  FFE6   	movff	btemp,postinc1
 16523  010B72  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 16524  010B78  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 16525  010B7E  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 16526  010B84  EC9C  F0AF         	call	_floorf	;wreg free
 16527                           
 16528                           ;stkvar	_l @ sp[(-56)+20]
 16529  010B88  0EDC               	movlw	-36
 16530  010B8A  0060  F0A3  FFE3   	movff	btemp,plusw1
 16531  010B90  0EDD               	movlw	-35
 16532  010B92  0060  F0A7  FFE3   	movff	btemp+1,plusw1
 16533  010B98  0EDE               	movlw	-34
 16534  010B9A  0060  F0AB  FFE3   	movff	btemp+2,plusw1
 16535  010BA0  0EDF               	movlw	-33
 16536  010BA2  0060  F0AF  FFE3   	movff	btemp+3,plusw1
 16537                           
 16538                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 16539                           ;stkvar	_l @ sp[(-56)+20]
 16540  010BA8  0EDC               	movlw	-36
 16541  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 16542  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 16543  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 16544  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 16545  010BC2  ECFF  F0C1         	call	___fltol	;wreg free
 16546  010BC6  0060  F0A0  F032   	movff	btemp,btemp+10
 16547  010BCC  0060  F0A4  F033   	movff	btemp+1,btemp+11
 16548                           
 16549                           ;stkvar	_d @ sp[(-56)+44]
 16550  010BD2  0EF4               	movlw	-12
 16551  010BD4  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 16552  010BDA  0EF5               	movlw	-11
 16553  010BDC  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 16554                           
 16555                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 16556  010BE2  B84C               	btfsc	_flags^0,4,c
 16557  010BE4  D026               	goto	l11748
 16558                           
 16559                           ;stkvar	_d @ sp[(-56)+44]
 16560  010BE6  0EF4               	movlw	-12
 16561  010BE8  006F FF8C  F028    	movff	plusw1,btemp
 16562  010BEE  0EF5               	movlw	-11
 16563  010BF0  50E3               	movf	plusw1,w,c
 16564  010BF2  1028               	iorwf	btemp^0,w,c
 16565  010BF4  A4D8               	btfss	status,2,c
 16566  010BF6  D01D               	goto	l11748
 16567                           
 16568                           ;stkvar	_mode @ sp[(-56)+54]
 16569  010BF8  0EFE               	movlw	-2
 16570  010BFA  006F FF8C  F028    	movff	plusw1,btemp
 16571  010C00  0E67               	movlw	103
 16572  010C02  1828               	xorwf	btemp^0,w,c
 16573  010C04  A4D8               	btfss	status,2,c
 16574  010C06  D015               	goto	l11748
 16575                           
 16576                           ;stkvar	_ne @ sp[(-56)+46]
 16577  010C08  0EF7               	movlw	-9
 16578  010C0A  AEE3               	btfss	plusw1,7,c
 16579  010C0C  D012               	goto	l11748
 16580                           
 16581                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 16582                           ;stkvar	_t @ sp[(-56)+52]
 16583  010C0E  0EFC               	movlw	-4
 16584  010C10  50E3               	movf	plusw1,w,c
 16585  010C12  0F01               	addlw	1
 16586  010C14  6E28               	movwf	btemp^0,c
 16587  010C16  0EFC               	movlw	-4
 16588  010C18  0060  F0A3  FFE3   	movff	btemp,plusw1
 16589  010C1E  6A28               	clrf	btemp^0,c
 16590  010C20  0EFD               	movlw	-3
 16591  010C22  50E3               	movf	plusw1,w,c
 16592  010C24  2028               	addwfc	btemp^0,w,c
 16593  010C26  6E28               	movwf	btemp^0,c
 16594  010C28  0EFD               	movlw	-3
 16595  010C2A  0060  F0A3  FFE3   	movff	btemp,plusw1
 16596                           
 16597                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 16598  010C30  D0AF               	goto	l11776
 16599  010C32                     l11748:
 16600                           
 16601                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 16602                           ;stkvar	_pp @ sp[(-56)+50]
 16603  010C32  0EFA               	movlw	-6
 16604  010C34  006F FF8C  F028    	movff	plusw1,btemp
 16605  010C3A  0EFB               	movlw	-5
 16606  010C3C  50E3               	movf	plusw1,w,c
 16607  010C3E  1028               	iorwf	btemp^0,w,c
 16608  010C40  A4D8               	btfss	status,2,c
 16609  010C42  D070               	goto	l11768
 16610                           
 16611                           ;stkvar	_ne @ sp[(-56)+46]
 16612  010C44  0EF7               	movlw	-9
 16613  010C46  AEE3               	btfss	plusw1,7,c
 16614  010C48  D06D               	goto	l11768
 16615                           
 16616                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 16617                           ;stkvar	_n @ sp[(-56)+32]
 16618  010C4A  0EE8               	movlw	-24
 16619  010C4C  006F FF8C  F032    	movff	plusw1,btemp+10
 16620  010C52  0EE9               	movlw	-23
 16621  010C54  006F FF8C  F033    	movff	plusw1,btemp+11
 16622  010C5A  0E94               	movlw	low _dbuf
 16623  010C5C  2432               	addwf	(btemp+10)^0,w,c
 16624  010C5E  6ED9               	movwf	fsr2l,c
 16625  010C60  0E03               	movlw	high _dbuf
 16626  010C62  2033               	addwfc	(btemp+11)^0,w,c
 16627  010C64  6EDA               	movwf	fsr2h,c
 16628  010C66  0E2E               	movlw	46
 16629  010C68  6EDF               	movwf	indf2,c
 16630                           
 16631                           ;stkvar	_n @ sp[(-56)+32]
 16632  010C6A  0EE8               	movlw	-24
 16633  010C6C  50E3               	movf	plusw1,w,c
 16634  010C6E  0F01               	addlw	1
 16635  010C70  6E28               	movwf	btemp^0,c
 16636  010C72  0EE8               	movlw	-24
 16637  010C74  0060  F0A3  FFE3   	movff	btemp,plusw1
 16638  010C7A  6A28               	clrf	btemp^0,c
 16639  010C7C  0EE9               	movlw	-23
 16640  010C7E  50E3               	movf	plusw1,w,c
 16641  010C80  2028               	addwfc	btemp^0,w,c
 16642  010C82  6E28               	movwf	btemp^0,c
 16643  010C84  0EE9               	movlw	-23
 16644  010C86  0060  F0A3  FFE3   	movff	btemp,plusw1
 16645                           
 16646                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 16647                           ;stkvar	_w @ sp[(-56)+38]
 16648  010C8C  50E1               	movf	fsr1l,w,c
 16649  010C8E  0FEE               	addlw	-18
 16650  010C90  6ED9               	movwf	fsr2l,c
 16651  010C92  50E2               	movf	fsr1h,w,c
 16652  010C94  6EDA               	movwf	fsr2h,c
 16653  010C96  0EFF               	movlw	255
 16654  010C98  22DA               	addwfc	fsr2h,f,c
 16655  010C9A  06DE               	decf	postinc2,f,c
 16656  010C9C  0E00               	movlw	0
 16657  010C9E  5ADD               	subwfb	postdec2,f,c
 16658                           
 16659                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 16660  010CA0  0E01               	movlw	1
 16661  010CA2  6E32               	movwf	(btemp+10)^0,c
 16662  010CA4  0E00               	movlw	0
 16663  010CA6  6E33               	movwf	(btemp+11)^0,c
 16664                           
 16665                           ;stkvar	_pp @ sp[(-56)+50]
 16666  010CA8  0EFA               	movlw	-6
 16667  010CAA  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 16668  010CB0  0EFB               	movlw	-5
 16669  010CB2  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 16670  010CB8  D035               	goto	l11768
 16671  010CBA                     l11760:
 16672                           
 16673                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 16674                           ;stkvar	_n @ sp[(-56)+32]
 16675  010CBA  0EE8               	movlw	-24
 16676  010CBC  006F FF8C  F032    	movff	plusw1,btemp+10
 16677  010CC2  0EE9               	movlw	-23
 16678  010CC4  006F FF8C  F033    	movff	plusw1,btemp+11
 16679  010CCA  0E94               	movlw	low _dbuf
 16680  010CCC  2432               	addwf	(btemp+10)^0,w,c
 16681  010CCE  6ED9               	movwf	fsr2l,c
 16682  010CD0  0E03               	movlw	high _dbuf
 16683  010CD2  2033               	addwfc	(btemp+11)^0,w,c
 16684  010CD4  6EDA               	movwf	fsr2h,c
 16685  010CD6  0E30               	movlw	48
 16686  010CD8  6EDF               	movwf	indf2,c
 16687                           
 16688                           ;stkvar	_n @ sp[(-56)+32]
 16689  010CDA  0EE8               	movlw	-24
 16690  010CDC  50E3               	movf	plusw1,w,c
 16691  010CDE  0F01               	addlw	1
 16692  010CE0  6E28               	movwf	btemp^0,c
 16693  010CE2  0EE8               	movlw	-24
 16694  010CE4  0060  F0A3  FFE3   	movff	btemp,plusw1
 16695  010CEA  6A28               	clrf	btemp^0,c
 16696  010CEC  0EE9               	movlw	-23
 16697  010CEE  50E3               	movf	plusw1,w,c
 16698  010CF0  2028               	addwfc	btemp^0,w,c
 16699  010CF2  6E28               	movwf	btemp^0,c
 16700  010CF4  0EE9               	movlw	-23
 16701  010CF6  0060  F0A3  FFE3   	movff	btemp,plusw1
 16702                           
 16703                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 16704                           ;stkvar	_w @ sp[(-56)+38]
 16705  010CFC  50E1               	movf	fsr1l,w,c
 16706  010CFE  0FEE               	addlw	-18
 16707  010D00  6ED9               	movwf	fsr2l,c
 16708  010D02  50E2               	movf	fsr1h,w,c
 16709  010D04  6EDA               	movwf	fsr2h,c
 16710  010D06  0EFF               	movlw	255
 16711  010D08  22DA               	addwfc	fsr2h,f,c
 16712  010D0A  06DE               	decf	postinc2,f,c
 16713  010D0C  0E00               	movlw	0
 16714  010D0E  5ADD               	subwfb	postdec2,f,c
 16715                           
 16716                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 16717                           ;stkvar	_t @ sp[(-56)+52]
 16718  010D10  50E1               	movf	fsr1l,w,c
 16719  010D12  0FFC               	addlw	-4
 16720  010D14  6ED9               	movwf	fsr2l,c
 16721  010D16  50E2               	movf	fsr1h,w,c
 16722  010D18  6EDA               	movwf	fsr2h,c
 16723  010D1A  0EFF               	movlw	255
 16724  010D1C  22DA               	addwfc	fsr2h,f,c
 16725  010D1E  06DE               	decf	postinc2,f,c
 16726  010D20  0E00               	movlw	0
 16727  010D22  5ADD               	subwfb	postdec2,f,c
 16728  010D24                     l11768:
 16729                           
 16730                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 16731                           ;stkvar	_t @ sp[(-56)+52]
 16732  010D24  0EFC               	movlw	-4
 16733  010D26  006F FF8C  F028    	movff	plusw1,btemp
 16734  010D2C  0EFD               	movlw	-3
 16735  010D2E  50E3               	movf	plusw1,w,c
 16736  010D30  1028               	iorwf	btemp^0,w,c
 16737  010D32  A4D8               	btfss	status,2,c
 16738  010D34  D7C2               	goto	l11760
 16739                           
 16740                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 16741                           ;stkvar	_n @ sp[(-56)+32]
 16742  010D36  0EE8               	movlw	-24
 16743  010D38  006F FF8C  F032    	movff	plusw1,btemp+10
 16744  010D3E  0EE9               	movlw	-23
 16745  010D40  006F FF8C  F033    	movff	plusw1,btemp+11
 16746  010D46  0E94               	movlw	low _dbuf
 16747  010D48  2432               	addwf	(btemp+10)^0,w,c
 16748  010D4A  6ED9               	movwf	fsr2l,c
 16749  010D4C  0E03               	movlw	high _dbuf
 16750  010D4E  2033               	addwfc	(btemp+11)^0,w,c
 16751  010D50  6EDA               	movwf	fsr2h,c
 16752                           
 16753                           ;stkvar	_d @ sp[(-56)+44]
 16754  010D52  0EF4               	movlw	-12
 16755  010D54  50E3               	movf	plusw1,w,c
 16756  010D56  0F30               	addlw	48
 16757  010D58  6EDF               	movwf	indf2,c
 16758                           
 16759                           ;stkvar	_n @ sp[(-56)+32]
 16760  010D5A  0EE8               	movlw	-24
 16761  010D5C  50E3               	movf	plusw1,w,c
 16762  010D5E  0F01               	addlw	1
 16763  010D60  6E28               	movwf	btemp^0,c
 16764  010D62  0EE8               	movlw	-24
 16765  010D64  0060  F0A3  FFE3   	movff	btemp,plusw1
 16766  010D6A  6A28               	clrf	btemp^0,c
 16767  010D6C  0EE9               	movlw	-23
 16768  010D6E  50E3               	movf	plusw1,w,c
 16769  010D70  2028               	addwfc	btemp^0,w,c
 16770  010D72  6E28               	movwf	btemp^0,c
 16771  010D74  0EE9               	movlw	-23
 16772  010D76  0060  F0A3  FFE3   	movff	btemp,plusw1
 16773                           
 16774                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 16775                           ;stkvar	_w @ sp[(-56)+38]
 16776  010D7C  50E1               	movf	fsr1l,w,c
 16777  010D7E  0FEE               	addlw	-18
 16778  010D80  6ED9               	movwf	fsr2l,c
 16779  010D82  50E2               	movf	fsr1h,w,c
 16780  010D84  6EDA               	movwf	fsr2h,c
 16781  010D86  0EFF               	movlw	255
 16782  010D88  22DA               	addwfc	fsr2h,f,c
 16783  010D8A  06DE               	decf	postinc2,f,c
 16784  010D8C  0E00               	movlw	0
 16785  010D8E  5ADD               	subwfb	postdec2,f,c
 16786  010D90                     l11776:
 16787                           
 16788                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 16789                           ;stkvar	_u @ sp[(-56)+12]
 16790  010D90  0ED4               	movlw	-44
 16791  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 16792  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 16793  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 16794  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 16795                           
 16796                           ;stkvar	_l @ sp[(-60)+20]
 16797  010DAA  0ED8               	movlw	-40
 16798  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 16799  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 16800  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 16801  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 16802  010DC4  EC0F  F099         	call	___flmul	;wreg free
 16803  010DC8  0060  F0A3  FFE6   	movff	btemp,postinc1
 16804  010DCE  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 16805  010DD4  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 16806  010DDA  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 16807                           
 16808                           ;stkvar	_h @ sp[(-60)+24]
 16809  010DE0  0EDC               	movlw	-36
 16810  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 16811  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 16812  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 16813  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 16814  010DFA  EC41  F0D5         	call	___flsub	;wreg free
 16815                           
 16816                           ;stkvar	_h @ sp[(-56)+24]
 16817  010DFE  0EE0               	movlw	-32
 16818  010E00  0060  F0A3  FFE3   	movff	btemp,plusw1
 16819  010E06  0EE1               	movlw	-31
 16820  010E08  0060  F0A7  FFE3   	movff	btemp+1,plusw1
 16821  010E0E  0EE2               	movlw	-30
 16822  010E10  0060  F0AB  FFE3   	movff	btemp+2,plusw1
 16823  010E16  0EE3               	movlw	-29
 16824  010E18  0060  F0AF  FFE3   	movff	btemp+3,plusw1
 16825                           
 16826                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 16827  010E1E  0E00               	movlw	0
 16828  010E20  6EE6               	movwf	postinc1,c
 16829  010E22  0E00               	movlw	0
 16830  010E24  6EE6               	movwf	postinc1,c
 16831  010E26  0E20               	movlw	32
 16832  010E28  6EE6               	movwf	postinc1,c
 16833  010E2A  0E41               	movlw	65
 16834  010E2C  6EE6               	movwf	postinc1,c
 16835                           
 16836                           ;stkvar	_u @ sp[(-60)+12]
 16837  010E2E  0ED0               	movlw	-48
 16838  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 16839  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 16840  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 16841  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 16842  010E48  EC9B  F0A4         	call	___fldiv	;wreg free
 16843                           
 16844                           ;stkvar	_u @ sp[(-56)+12]
 16845  010E4C  0ED4               	movlw	-44
 16846  010E4E  0060  F0A3  FFE3   	movff	btemp,plusw1
 16847  010E54  0ED5               	movlw	-43
 16848  010E56  0060  F0A7  FFE3   	movff	btemp+1,plusw1
 16849  010E5C  0ED6               	movlw	-42
 16850  010E5E  0060  F0AB  FFE3   	movff	btemp+2,plusw1
 16851  010E64  0ED7               	movlw	-41
 16852  010E66  0060  F0AF  FFE3   	movff	btemp+3,plusw1
 16853                           
 16854                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 16855                           ;stkvar	_ne @ sp[(-56)+46]
 16856  010E6C  50E1               	movf	fsr1l,w,c
 16857  010E6E  0FF6               	addlw	-10
 16858  010E70  6ED9               	movwf	fsr2l,c
 16859  010E72  50E2               	movf	fsr1h,w,c
 16860  010E74  6EDA               	movwf	fsr2h,c
 16861  010E76  0EFF               	movlw	255
 16862  010E78  22DA               	addwfc	fsr2h,f,c
 16863  010E7A  06DE               	decf	postinc2,f,c
 16864  010E7C  0E00               	movlw	0
 16865  010E7E  5ADD               	subwfb	postdec2,f,c
 16866                           
 16867                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 16868                           ;stkvar	_i @ sp[(-56)+36]
 16869  010E80  0EEC               	movlw	-20
 16870  010E82  50E3               	movf	plusw1,w,c
 16871  010E84  0F01               	addlw	1
 16872  010E86  6E28               	movwf	btemp^0,c
 16873  010E88  0EEC               	movlw	-20
 16874  010E8A  0060  F0A3  FFE3   	movff	btemp,plusw1
 16875  010E90  6A28               	clrf	btemp^0,c
 16876  010E92  0EED               	movlw	-19
 16877  010E94  50E3               	movf	plusw1,w,c
 16878  010E96  2028               	addwfc	btemp^0,w,c
 16879  010E98  6E28               	movwf	btemp^0,c
 16880  010E9A  0EED               	movlw	-19
 16881  010E9C  0060  F0A3  FFE3   	movff	btemp,plusw1
 16882  010EA2                     l11784:
 16883                           
 16884                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 16885                           ;stkvar	_m @ sp[(-56)+48]
 16886                           ;stkvar	_i @ sp[(-56)+36]
 16887  010EA2  50E1               	movf	fsr1l,w,c
 16888  010EA4  0FEC               	addlw	-20
 16889  010EA6  6ED9               	movwf	fsr2l,c
 16890  010EA8  50E2               	movf	fsr1h,w,c
 16891  010EAA  6EDA               	movwf	fsr2h,c
 16892  010EAC  0EFF               	movlw	255
 16893  010EAE  22DA               	addwfc	fsr2h,f,c
 16894  010EB0  0EF8               	movlw	-8
 16895  010EB2  50E3               	movf	plusw1,w,c
 16896  010EB4  5CDE               	subwf	postinc2,w,c
 16897  010EB6  50DE               	movf	postinc2,w,c
 16898  010EB8  0A80               	xorlw	128
 16899  010EBA  6E28               	movwf	btemp^0,c
 16900  010EBC  0EF9               	movlw	-7
 16901  010EBE  50E3               	movf	plusw1,w,c
 16902  010EC0  0A80               	xorlw	128
 16903  010EC2  5828               	subwfb	btemp^0,w,c
 16904  010EC4  B0D8               	btfsc	status,0,c
 16905  010EC6  D00E               	goto	u11050
 16906                           
 16907                           ;stkvar	_n @ sp[(-56)+32]
 16908  010EC8  0EE9               	movlw	-23
 16909  010ECA  BEE3               	btfsc	plusw1,7,c
 16910  010ECC  D633               	goto	l11734
 16911  010ECE  0EE9               	movlw	-23
 16912  010ED0  50E3               	movf	plusw1,w,c
 16913  010ED2  E108               	bnz	u11050
 16914  010ED4  0EE8               	movlw	-24
 16915  010ED6  006F FF8C  F028    	movff	plusw1,btemp
 16916  010EDC  0E4B               	movlw	75
 16917  010EDE  5E28               	subwf	btemp^0,f,c
 16918  010EE0  A0D8               	btfss	status,0,c
 16919  010EE2  D628               	goto	l11734
 16920  010EE4                     u11050:
 16921                           
 16922                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 16923                           ;stkvar	_pp @ sp[(-56)+50]
 16924  010EE4  0EFA               	movlw	-6
 16925  010EE6  006F FF8C  F028    	movff	plusw1,btemp
 16926  010EEC  0EFB               	movlw	-5
 16927  010EEE  50E3               	movf	plusw1,w,c
 16928  010EF0  1028               	iorwf	btemp^0,w,c
 16929  010EF2  B4D8               	btfsc	status,2,c
 16930  010EF4  A84C               	btfss	_flags^0,4,c
 16931  010EF6  D021               	goto	l11796
 16932                           
 16933                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 16934                           ;stkvar	_n @ sp[(-56)+32]
 16935  010EF8  0EE8               	movlw	-24
 16936  010EFA  006F FF8C  F032    	movff	plusw1,btemp+10
 16937  010F00  0EE9               	movlw	-23
 16938  010F02  006F FF8C  F033    	movff	plusw1,btemp+11
 16939  010F08  0E94               	movlw	low _dbuf
 16940  010F0A  2432               	addwf	(btemp+10)^0,w,c
 16941  010F0C  6ED9               	movwf	fsr2l,c
 16942  010F0E  0E03               	movlw	high _dbuf
 16943  010F10  2033               	addwfc	(btemp+11)^0,w,c
 16944  010F12  6EDA               	movwf	fsr2h,c
 16945  010F14  0E2E               	movlw	46
 16946  010F16  6EDF               	movwf	indf2,c
 16947                           
 16948                           ;stkvar	_n @ sp[(-56)+32]
 16949  010F18  0EE8               	movlw	-24
 16950  010F1A  50E3               	movf	plusw1,w,c
 16951  010F1C  0F01               	addlw	1
 16952  010F1E  6E28               	movwf	btemp^0,c
 16953  010F20  0EE8               	movlw	-24
 16954  010F22  0060  F0A3  FFE3   	movff	btemp,plusw1
 16955  010F28  6A28               	clrf	btemp^0,c
 16956  010F2A  0EE9               	movlw	-23
 16957  010F2C  50E3               	movf	plusw1,w,c
 16958  010F2E  2028               	addwfc	btemp^0,w,c
 16959  010F30  6E28               	movwf	btemp^0,c
 16960  010F32  0EE9               	movlw	-23
 16961  010F34  0060  F0A3  FFE3   	movff	btemp,plusw1
 16962  010F3A                     l11796:
 16963                           
 16964                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 16965                           ;stkvar	_n @ sp[(-56)+32]
 16966  010F3A  0EE8               	movlw	-24
 16967  010F3C  006F FF8C  F032    	movff	plusw1,btemp+10
 16968  010F42  0EE9               	movlw	-23
 16969  010F44  006F FF8C  F033    	movff	plusw1,btemp+11
 16970  010F4A  0E94               	movlw	low _dbuf
 16971  010F4C  2432               	addwf	(btemp+10)^0,w,c
 16972  010F4E  6ED9               	movwf	fsr2l,c
 16973  010F50  0E03               	movlw	high _dbuf
 16974  010F52  2033               	addwfc	(btemp+11)^0,w,c
 16975  010F54  6EDA               	movwf	fsr2h,c
 16976  010F56  0E00               	movlw	0
 16977  010F58  6EDF               	movwf	indf2,c
 16978                           
 16979                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 16980                           ;stkvar	_nmode @ sp[(-56)+55]
 16981  010F5A  0EFF               	movlw	-1
 16982  010F5C  006F FF8C  F028    	movff	plusw1,btemp
 16983  010F62  0E65               	movlw	101
 16984  010F64  1828               	xorwf	btemp^0,w,c
 16985  010F66  A4D8               	btfss	status,2,c
 16986  010F68  EF16  F081         	goto	l11600
 16987                           
 16988                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 16989  010F6C  0E4F               	movlw	79
 16990  010F6E  6E32               	movwf	(btemp+10)^0,c
 16991  010F70  0E00               	movlw	0
 16992  010F72  6E33               	movwf	(btemp+11)^0,c
 16993                           
 16994                           ;stkvar	_i @ sp[(-56)+36]
 16995  010F74  0EEC               	movlw	-20
 16996  010F76  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 16997  010F7C  0EED               	movlw	-19
 16998  010F7E  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 16999                           
 17000                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 17001                           ;stkvar	_i @ sp[(-56)+36]
 17002  010F84  0EEC               	movlw	-20
 17003  010F86  006F FF8C  F032    	movff	plusw1,btemp+10
 17004  010F8C  0EED               	movlw	-19
 17005  010F8E  006F FF8C  F033    	movff	plusw1,btemp+11
 17006  010F94  0E94               	movlw	low _dbuf
 17007  010F96  2432               	addwf	(btemp+10)^0,w,c
 17008  010F98  6ED9               	movwf	fsr2l,c
 17009  010F9A  0E03               	movlw	high _dbuf
 17010  010F9C  2033               	addwfc	(btemp+11)^0,w,c
 17011  010F9E  6EDA               	movwf	fsr2h,c
 17012  010FA0  0E00               	movlw	0
 17013  010FA2  6EDF               	movwf	indf2,c
 17014                           
 17015                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 17016                           ;stkvar	_sign @ sp[(-56)+42]
 17017  010FA4  0EF2               	movlw	-14
 17018  010FA6  6AE3               	clrf	plusw1,c
 17019  010FA8  0EF3               	movlw	-13
 17020  010FAA  6AE3               	clrf	plusw1,c
 17021                           
 17022                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 17023                           ;stkvar	_e @ sp[(-56)+34]
 17024  010FAC  0EEB               	movlw	-21
 17025  010FAE  AEE3               	btfss	plusw1,7,c
 17026  010FB0  D012               	goto	l11810
 17027                           
 17028                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 17029  010FB2  0E01               	movlw	1
 17030  010FB4  6E32               	movwf	(btemp+10)^0,c
 17031  010FB6  0E00               	movlw	0
 17032  010FB8  6E33               	movwf	(btemp+11)^0,c
 17033                           
 17034                           ;stkvar	_sign @ sp[(-56)+42]
 17035  010FBA  0EF2               	movlw	-14
 17036  010FBC  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 17037  010FC2  0EF3               	movlw	-13
 17038  010FC4  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 17039                           
 17040                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 17041                           ;stkvar	_e @ sp[(-56)+34]
 17042                           ;stkvar	_e @ sp[(-56)+34]
 17043  010FCA  0EEA               	movlw	-22
 17044  010FCC  6CE3               	negf	plusw1,c
 17045  010FCE  0EEB               	movlw	-21
 17046  010FD0  1EE3               	comf	plusw1,f,c
 17047  010FD2  B0D8               	btfsc	status,0,c
 17048  010FD4  2AE3               	incf	plusw1,f,c
 17049  010FD6                     l11810:
 17050                           
 17051                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 17052  010FD6  0E02               	movlw	2
 17053  010FD8  6E32               	movwf	(btemp+10)^0,c
 17054  010FDA  0E00               	movlw	0
 17055  010FDC  6E33               	movwf	(btemp+11)^0,c
 17056                           
 17057                           ;stkvar	_p @ sp[(-56)+40]
 17058  010FDE  0EF0               	movlw	-16
 17059  010FE0  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 17060  010FE6  0EF1               	movlw	-15
 17061  010FE8  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 17062                           
 17063                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 17064  010FEE  D051               	goto	l11822
 17065  010FF0                     l11812:
 17066                           
 17067                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 17068                           ;stkvar	_i @ sp[(-56)+36]
 17069  010FF0  50E1               	movf	fsr1l,w,c
 17070  010FF2  0FEC               	addlw	-20
 17071  010FF4  6ED9               	movwf	fsr2l,c
 17072  010FF6  50E2               	movf	fsr1h,w,c
 17073  010FF8  6EDA               	movwf	fsr2h,c
 17074  010FFA  0EFF               	movlw	255
 17075  010FFC  22DA               	addwfc	fsr2h,f,c
 17076  010FFE  06DE               	decf	postinc2,f,c
 17077  011000  0E00               	movlw	0
 17078  011002  5ADD               	subwfb	postdec2,f,c
 17079                           
 17080                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 17081                           ;stkvar	_i @ sp[(-56)+36]
 17082  011004  0EEC               	movlw	-20
 17083  011006  006F FF8C  F032    	movff	plusw1,btemp+10
 17084  01100C  0EED               	movlw	-19
 17085  01100E  006F FF8C  F033    	movff	plusw1,btemp+11
 17086  011014  0E94               	movlw	low _dbuf
 17087  011016  2432               	addwf	(btemp+10)^0,w,c
 17088  011018  6ED9               	movwf	fsr2l,c
 17089  01101A  0E03               	movlw	high _dbuf
 17090  01101C  2033               	addwfc	(btemp+11)^0,w,c
 17091  01101E  6EDA               	movwf	fsr2h,c
 17092  011020  0E0A               	movlw	10
 17093  011022  6EE6               	movwf	postinc1,c
 17094  011024  0E00               	movlw	0
 17095  011026  6EE6               	movwf	postinc1,c
 17096                           
 17097                           ;stkvar	_e @ sp[(-58)+34]
 17098  011028  0EE8               	movlw	-24
 17099  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 17100  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 17101  011036  ECE3  F0C7         	call	___awmod	;wreg free
 17102  01103A  5028               	movf	btemp^0,w,c
 17103  01103C  0F30               	addlw	48
 17104  01103E  6EDF               	movwf	indf2,c
 17105                           
 17106                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 17107  011040  0E0A               	movlw	10
 17108  011042  6EE6               	movwf	postinc1,c
 17109  011044  0E00               	movlw	0
 17110  011046  6EE6               	movwf	postinc1,c
 17111                           
 17112                           ;stkvar	_e @ sp[(-58)+34]
 17113  011048  0EE8               	movlw	-24
 17114  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 17115  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 17116  011056  ECD3  F0C4         	call	___awdiv	;wreg free
 17117                           
 17118                           ;stkvar	_e @ sp[(-56)+34]
 17119  01105A  0EEA               	movlw	-22
 17120  01105C  0060  F0A3  FFE3   	movff	btemp,plusw1
 17121  011062  0EEB               	movlw	-21
 17122  011064  0060  F0A7  FFE3   	movff	btemp+1,plusw1
 17123                           
 17124                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 17125                           ;stkvar	_p @ sp[(-56)+40]
 17126  01106A  50E1               	movf	fsr1l,w,c
 17127  01106C  0FF0               	addlw	-16
 17128  01106E  6ED9               	movwf	fsr2l,c
 17129  011070  50E2               	movf	fsr1h,w,c
 17130  011072  6EDA               	movwf	fsr2h,c
 17131  011074  0EFF               	movlw	255
 17132  011076  22DA               	addwfc	fsr2h,f,c
 17133  011078  06DE               	decf	postinc2,f,c
 17134  01107A  0E00               	movlw	0
 17135  01107C  5ADD               	subwfb	postdec2,f,c
 17136                           
 17137                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 17138                           ;stkvar	_w @ sp[(-56)+38]
 17139  01107E  50E1               	movf	fsr1l,w,c
 17140  011080  0FEE               	addlw	-18
 17141  011082  6ED9               	movwf	fsr2l,c
 17142  011084  50E2               	movf	fsr1h,w,c
 17143  011086  6EDA               	movwf	fsr2h,c
 17144  011088  0EFF               	movlw	255
 17145  01108A  22DA               	addwfc	fsr2h,f,c
 17146  01108C  06DE               	decf	postinc2,f,c
 17147  01108E  0E00               	movlw	0
 17148  011090  5ADD               	subwfb	postdec2,f,c
 17149  011092                     l11822:
 17150                           
 17151                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 17152                           ;stkvar	_e @ sp[(-56)+34]
 17153  011092  0EEA               	movlw	-22
 17154  011094  006F FF8C  F028    	movff	plusw1,btemp
 17155  01109A  0EEB               	movlw	-21
 17156  01109C  50E3               	movf	plusw1,w,c
 17157  01109E  1028               	iorwf	btemp^0,w,c
 17158  0110A0  A4D8               	btfss	status,2,c
 17159  0110A2  D7A6               	goto	l11812
 17160                           
 17161                           ;stkvar	_p @ sp[(-56)+40]
 17162  0110A4  0EF1               	movlw	-15
 17163  0110A6  BEE3               	btfsc	plusw1,7,c
 17164  0110A8  D007               	goto	u11110
 17165  0110AA  0EF1               	movlw	-15
 17166  0110AC  50E3               	movf	plusw1,w,c
 17167  0110AE  E1A0               	bnz	l11812
 17168  0110B0  0EF0               	movlw	-16
 17169  0110B2  04E3               	decf	plusw1,w,c
 17170  0110B4  B0D8               	btfsc	status,0,c
 17171  0110B6  D79C               	goto	l11812
 17172  0110B8                     u11110:
 17173                           
 17174                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 17175                           ;stkvar	_i @ sp[(-56)+36]
 17176  0110B8  50E1               	movf	fsr1l,w,c
 17177  0110BA  0FEC               	addlw	-20
 17178  0110BC  6ED9               	movwf	fsr2l,c
 17179  0110BE  50E2               	movf	fsr1h,w,c
 17180  0110C0  6EDA               	movwf	fsr2h,c
 17181  0110C2  0EFF               	movlw	255
 17182  0110C4  22DA               	addwfc	fsr2h,f,c
 17183  0110C6  06DE               	decf	postinc2,f,c
 17184  0110C8  0E00               	movlw	0
 17185  0110CA  5ADD               	subwfb	postdec2,f,c
 17186                           
 17187                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 17188                           ;stkvar	_sign @ sp[(-56)+42]
 17189  0110CC  0EF2               	movlw	-14
 17190  0110CE  006F FF8C  F028    	movff	plusw1,btemp
 17191  0110D4  0EF3               	movlw	-13
 17192  0110D6  50E3               	movf	plusw1,w,c
 17193  0110D8  1028               	iorwf	btemp^0,w,c
 17194  0110DA  A4D8               	btfss	status,2,c
 17195  0110DC  D002               	goto	l11832
 17196  0110DE  0E2B               	movlw	43
 17197  0110E0  D001               	goto	L16
 17198  0110E2                     l11832:
 17199  0110E2  0E2D               	movlw	45
 17200  0110E4                     L16:
 17201  0110E4  6E32               	movwf	(btemp+10)^0,c
 17202  0110E6  0E00               	movlw	0
 17203  0110E8  6E33               	movwf	(btemp+11)^0,c
 17204                           
 17205                           ;stkvar	_efgtoa$5390 @ sp[(-56)+4]
 17206  0110EA  0ECC               	movlw	-52
 17207  0110EC  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 17208  0110F2  0ECD               	movlw	-51
 17209  0110F4  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 17210                           
 17211                           ;stkvar	_efgtoa$5390 @ sp[(-56)+4]
 17212                           ;stkvar	_i @ sp[(-56)+36]
 17213  0110FA  0EEC               	movlw	-20
 17214  0110FC  006F FF8C  F032    	movff	plusw1,btemp+10
 17215  011102  0EED               	movlw	-19
 17216  011104  006F FF8C  F033    	movff	plusw1,btemp+11
 17217  01110A  0E94               	movlw	low _dbuf
 17218  01110C  2432               	addwf	(btemp+10)^0,w,c
 17219  01110E  6ED9               	movwf	fsr2l,c
 17220  011110  0E03               	movlw	high _dbuf
 17221  011112  2033               	addwfc	(btemp+11)^0,w,c
 17222  011114  6EDA               	movwf	fsr2h,c
 17223  011116  0ECC               	movlw	-52
 17224  011118  006F FF8F FFDF     	movff	plusw1,indf2
 17225                           
 17226                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 17227                           ;stkvar	_w @ sp[(-56)+38]
 17228  01111E  50E1               	movf	fsr1l,w,c
 17229  011120  0FEE               	addlw	-18
 17230  011122  6ED9               	movwf	fsr2l,c
 17231  011124  50E2               	movf	fsr1h,w,c
 17232  011126  6EDA               	movwf	fsr2h,c
 17233  011128  0EFF               	movlw	255
 17234  01112A  22DA               	addwfc	fsr2h,f,c
 17235  01112C  06DE               	decf	postinc2,f,c
 17236  01112E  0E00               	movlw	0
 17237  011130  5ADD               	subwfb	postdec2,f,c
 17238                           
 17239                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 17240                           ;stkvar	_i @ sp[(-56)+36]
 17241  011132  50E1               	movf	fsr1l,w,c
 17242  011134  0FEC               	addlw	-20
 17243  011136  6ED9               	movwf	fsr2l,c
 17244  011138  50E2               	movf	fsr1h,w,c
 17245  01113A  6EDA               	movwf	fsr2h,c
 17246  01113C  0EFF               	movlw	255
 17247  01113E  22DA               	addwfc	fsr2h,f,c
 17248  011140  06DE               	decf	postinc2,f,c
 17249  011142  0E00               	movlw	0
 17250  011144  5ADD               	subwfb	postdec2,f,c
 17251  011146  0EBF               	movlw	191
 17252  011148  6E32               	movwf	(btemp+10)^0,c
 17253  01114A  0EFF               	movlw	255
 17254  01114C  6E33               	movwf	(btemp+11)^0,c
 17255                           
 17256                           ;stkvar	_c @ sp[(-56)+-7]
 17257  01114E  0EC1               	movlw	-63
 17258  011150  50E3               	movf	plusw1,w,c
 17259  011152  6E30               	movwf	(btemp+8)^0,c
 17260  011154  6A31               	clrf	(btemp+9)^0,c
 17261  011156  5032               	movf	(btemp+10)^0,w,c
 17262  011158  2630               	addwf	(btemp+8)^0,f,c
 17263  01115A  5033               	movf	(btemp+11)^0,w,c
 17264  01115C  2231               	addwfc	(btemp+9)^0,f,c
 17265  01115E  5031               	movf	(btemp+9)^0,w,c
 17266  011160  E106               	bnz	u11130
 17267  011162  0E1A               	movlw	26
 17268  011164  5C30               	subwf	(btemp+8)^0,w,c
 17269  011166  B0D8               	btfsc	status,0,c
 17270  011168  D002               	goto	u11130
 17271  01116A  0E01               	movlw	1
 17272  01116C  D001               	goto	u11140
 17273  01116E                     u11130:
 17274  01116E  0E00               	movlw	0
 17275  011170                     u11140:
 17276  011170  6E32               	movwf	(btemp+10)^0,c
 17277  011172  6A33               	clrf	(btemp+11)^0,c
 17278                           
 17279                           ;stkvar	_efgtoa$5392 @ sp[(-56)+0]
 17280  011174  0EC8               	movlw	-56
 17281  011176  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 17282  01117C  0EC9               	movlw	-55
 17283  01117E  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 17284                           
 17285                           ;stkvar	_efgtoa$5392 @ sp[(-56)+0]
 17286  011184  0EC8               	movlw	-56
 17287  011186  006F FF8C  F028    	movff	plusw1,btemp
 17288  01118C  0EC9               	movlw	-55
 17289  01118E  50E3               	movf	plusw1,w,c
 17290  011190  1028               	iorwf	btemp^0,w,c
 17291  011192  A4D8               	btfss	status,2,c
 17292  011194  D002               	goto	l11848
 17293  011196  0E65               	movlw	101
 17294  011198  D001               	goto	L17
 17295  01119A                     l11848:
 17296  01119A  0E45               	movlw	69
 17297  01119C                     L17:
 17298  01119C  6E32               	movwf	(btemp+10)^0,c
 17299  01119E  0E00               	movlw	0
 17300  0111A0  6E33               	movwf	(btemp+11)^0,c
 17301                           
 17302                           ;stkvar	_efgtoa$5391 @ sp[(-56)+2]
 17303  0111A2  0ECA               	movlw	-54
 17304  0111A4  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 17305  0111AA  0ECB               	movlw	-53
 17306  0111AC  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 17307                           
 17308                           ;stkvar	_efgtoa$5391 @ sp[(-56)+2]
 17309                           ;stkvar	_i @ sp[(-56)+36]
 17310  0111B2  0EEC               	movlw	-20
 17311  0111B4  006F FF8C  F032    	movff	plusw1,btemp+10
 17312  0111BA  0EED               	movlw	-19
 17313  0111BC  006F FF8C  F033    	movff	plusw1,btemp+11
 17314  0111C2  0E94               	movlw	low _dbuf
 17315  0111C4  2432               	addwf	(btemp+10)^0,w,c
 17316  0111C6  6ED9               	movwf	fsr2l,c
 17317  0111C8  0E03               	movlw	high _dbuf
 17318  0111CA  2033               	addwfc	(btemp+11)^0,w,c
 17319  0111CC  6EDA               	movwf	fsr2h,c
 17320  0111CE  0ECA               	movlw	-54
 17321  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 17322                           
 17323                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 17324                           ;stkvar	_w @ sp[(-56)+38]
 17325  0111D6  50E1               	movf	fsr1l,w,c
 17326  0111D8  0FEE               	addlw	-18
 17327  0111DA  6ED9               	movwf	fsr2l,c
 17328  0111DC  50E2               	movf	fsr1h,w,c
 17329  0111DE  6EDA               	movwf	fsr2h,c
 17330  0111E0  0EFF               	movlw	255
 17331  0111E2  22DA               	addwfc	fsr2h,f,c
 17332  0111E4  06DE               	decf	postinc2,f,c
 17333  0111E6  0E00               	movlw	0
 17334  0111E8  5ADD               	subwfb	postdec2,f,c
 17335                           
 17336                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 17337                           ;stkvar	_i @ sp[(-56)+36]
 17338  0111EA  0EEC               	movlw	-20
 17339  0111EC  006F FF8C  F032    	movff	plusw1,btemp+10
 17340  0111F2  0EED               	movlw	-19
 17341  0111F4  006F FF8C  F033    	movff	plusw1,btemp+11
 17342  0111FA  0E94               	movlw	low _dbuf
 17343  0111FC  2432               	addwf	(btemp+10)^0,w,c
 17344  0111FE  6E30               	movwf	(btemp+8)^0,c
 17345  011200  0E03               	movlw	high _dbuf
 17346  011202  2033               	addwfc	(btemp+11)^0,w,c
 17347  011204  6E31               	movwf	(btemp+9)^0,c
 17348  011206  0060  F0C3  FFE6   	movff	btemp+8,postinc1
 17349  01120C  0060  F0C7  FFE6   	movff	btemp+9,postinc1
 17350                           
 17351                           ;stkvar	_n @ sp[(-58)+32]
 17352  011212  0E94               	movlw	low _dbuf
 17353  011214  6E32               	movwf	(btemp+10)^0,c
 17354  011216  0E03               	movlw	high _dbuf
 17355  011218  6E33               	movwf	(btemp+11)^0,c
 17356  01121A  0EE6               	movlw	-26
 17357  01121C  50E3               	movf	plusw1,w,c
 17358  01121E  2632               	addwf	(btemp+10)^0,f,c
 17359  011220  0EE7               	movlw	-25
 17360  011222  50E3               	movf	plusw1,w,c
 17361  011224  2233               	addwfc	(btemp+11)^0,f,c
 17362  011226  0060  F0CB  FFE6   	movff	btemp+10,postinc1
 17363  01122C  0060  F0CF  FFE6   	movff	btemp+11,postinc1
 17364  011232  EC72  F0CC         	call	_strcpy	;wreg free
 17365  011236  EF16  F081         	goto	l11600
 17366  01123A                     l2162:
 17367                           
 17368                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 17369  01123A  0EC1               	movlw	193
 17370  01123C  26E1               	addwf	fsr1l,f,c
 17371  01123E  0EFF               	movlw	255
 17372  011240  22E2               	addwfc	fsr1h,f,c
 17373  011242  0012               	return		;funcret
 17374  011244                     __end_of_efgtoa:
 17375                           	opt callstack 0
 17376                           
 17377 ;; *************** function _tolower *****************
 17378 ;; Defined at:
 17379 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 17380 ;; Parameters:    Size  Location     Type
 17381 ;;  c               2  [STACK] int 
 17382 ;; Auto vars:     Size  Location     Type
 17383 ;;		None
 17384 ;; Return value:  Size  Location     Type
 17385 ;;                  2  [STACK] int 
 17386 ;; Registers used:
 17387 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 17388 ;; Tracked objects:
 17389 ;;		On entry : 0/0
 17390 ;;		On exit  : 0/0
 17391 ;;		Unchanged: 0/0
 17392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17397 ;;Total ram usage:        0 bytes
 17398 ;; Hardware stack levels used:    1
 17399 ;; Hardware stack levels required when called:   16
 17400 ;; This function calls:
 17401 ;;		_isupper
 17402 ;; This function is called by:
 17403 ;;		_efgtoa
 17404 ;;		_vfpfcnvrt
 17405 ;; This function uses a reentrant model
 17406 ;;
 17407                           
 17408                           	psect	text56
 17409  01A32A                     __ptext56:
 17410                           	opt callstack 0
 17411  01A32A                     _tolower:
 17412                           	opt callstack 0
 17413                           
 17414                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17415  01A32A  52E6               	movf	postinc1,f,c
 17416  01A32C  52E6               	movf	postinc1,f,c
 17417                           
 17418                           ;stkvar	_c @ sp[(-2)+-2]
 17419                           
 17420                           ;incstack = 0
 17421 ;; hardware stack exceeded
 17422  01A32E  0EFC               	movlw	-4
 17423  01A330  50E3               	movf	plusw1,w,c
 17424  01A332  0FBF               	addlw	191
 17425  01A334  6E32               	movwf	(btemp+10)^0,c
 17426  01A336  0EFD               	movlw	-3
 17427  01A338  006F FF8C  F033    	movff	plusw1,btemp+11
 17428  01A33E  0EFF               	movlw	255
 17429  01A340  2233               	addwfc	(btemp+11)^0,f,c
 17430  01A342  5033               	movf	(btemp+11)^0,w,c
 17431  01A344  E106               	bnz	u5830
 17432  01A346  0E1A               	movlw	26
 17433  01A348  5C32               	subwf	(btemp+10)^0,w,c
 17434  01A34A  B0D8               	btfsc	status,0,c
 17435  01A34C  D002               	goto	u5830
 17436  01A34E  0E01               	movlw	1
 17437  01A350  D001               	goto	u5840
 17438  01A352                     u5830:
 17439  01A352  0E00               	movlw	0
 17440  01A354                     u5840:
 17441  01A354  6E32               	movwf	(btemp+10)^0,c
 17442  01A356  6A33               	clrf	(btemp+11)^0,c
 17443                           
 17444                           ;stkvar	_tolower$6211 @ sp[(-2)+0]
 17445  01A358  0EFE               	movlw	-2
 17446  01A35A  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 17447  01A360  0EFF               	movlw	-1
 17448  01A362  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 17449                           
 17450                           ;stkvar	_tolower$6211 @ sp[(-2)+0]
 17451  01A368  0EFE               	movlw	-2
 17452  01A36A  006F FF8C  F028    	movff	plusw1,btemp
 17453  01A370  0EFF               	movlw	-1
 17454  01A372  50E3               	movf	plusw1,w,c
 17455  01A374  1028               	iorwf	btemp^0,w,c
 17456  01A376  B4D8               	btfsc	status,2,c
 17457  01A378  D00D               	goto	l7782
 17458                           
 17459                           ;stkvar	_c @ sp[(-2)+-2]
 17460  01A37A  0EFC               	movlw	-4
 17461  01A37C  006F FF8C  F028    	movff	plusw1,btemp
 17462  01A382  0EFD               	movlw	-3
 17463  01A384  006F FF8C  F029    	movff	plusw1,btemp+1
 17464  01A38A  0E20               	movlw	32
 17465  01A38C  1228               	iorwf	btemp^0,f,c
 17466  01A38E  0E00               	movlw	0
 17467  01A390  1229               	iorwf	(btemp+1)^0,f,c
 17468  01A392  D008               	goto	l3434
 17469  01A394                     l7782:
 17470                           
 17471                           ;stkvar	_c @ sp[(-2)+-2]
 17472  01A394  0EFC               	movlw	-4
 17473  01A396  006F FF8C  F028    	movff	plusw1,btemp
 17474  01A39C  0EFD               	movlw	-3
 17475  01A39E  006F FF8C  F029    	movff	plusw1,btemp+1
 17476  01A3A4                     l3434:
 17477                           
 17478                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 17479  01A3A4  52E5               	movf	postdec1,f,c
 17480  01A3A6  52E5               	movf	postdec1,f,c
 17481  01A3A8  52E5               	movf	postdec1,f,c
 17482  01A3AA  52E5               	movf	postdec1,f,c
 17483  01A3AC  0012               	return		;funcret
 17484  01A3AE                     __end_of_tolower:
 17485                           	opt callstack 0
 17486                           
 17487 ;; *************** function _isupper *****************
 17488 ;; Defined at:
 17489 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 17490 ;; Parameters:    Size  Location     Type
 17491 ;;  c               2  [STACK] int 
 17492 ;; Auto vars:     Size  Location     Type
 17493 ;;		None
 17494 ;; Return value:  Size  Location     Type
 17495 ;;                  2  [STACK] int 
 17496 ;; Registers used:
 17497 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 17498 ;; Tracked objects:
 17499 ;;		On entry : 0/0
 17500 ;;		On exit  : 0/0
 17501 ;;		Unchanged: 0/0
 17502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17507 ;;Total ram usage:        0 bytes
 17508 ;; Hardware stack levels used:    1
 17509 ;; Hardware stack levels required when called:   15
 17510 ;; This function calls:
 17511 ;;		Nothing
 17512 ;; This function is called by:
 17513 ;;		_efgtoa
 17514 ;;		_xtoa
 17515 ;;		_vfpfcnvrt
 17516 ;;		_tolower
 17517 ;; This function uses a reentrant model
 17518 ;;
 17519                           
 17520                           	psect	text57
 17521  01AF6E                     __ptext57:
 17522                           	opt callstack 0
 17523  01AF6E                     _isupper:
 17524                           	opt callstack 0
 17525                           
 17526                           ;stkvar	_c @ sp[(0)+-2]
 17527                           
 17528                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17529                           ;incstack = 0
 17530 ;; hardware stack exceeded
 17531  01AF6E  0EFE               	movlw	-2
 17532  01AF70  50E3               	movf	plusw1,w,c
 17533  01AF72  0FBF               	addlw	191
 17534  01AF74  6E32               	movwf	(btemp+10)^0,c
 17535  01AF76  0EFF               	movlw	-1
 17536  01AF78  006F FF8C  F033    	movff	plusw1,btemp+11
 17537  01AF7E  0EFF               	movlw	255
 17538  01AF80  2233               	addwfc	(btemp+11)^0,f,c
 17539  01AF82  5033               	movf	(btemp+11)^0,w,c
 17540  01AF84  E106               	bnz	u5230
 17541  01AF86  0E1A               	movlw	26
 17542  01AF88  5C32               	subwf	(btemp+10)^0,w,c
 17543  01AF8A  B0D8               	btfsc	status,0,c
 17544  01AF8C  D002               	goto	u5230
 17545  01AF8E  0E01               	movlw	1
 17546  01AF90  D001               	goto	u5240
 17547  01AF92                     u5230:
 17548  01AF92  0E00               	movlw	0
 17549  01AF94                     u5240:
 17550  01AF94  6E28               	movwf	btemp^0,c
 17551  01AF96  6A29               	clrf	(btemp+1)^0,c
 17552                           
 17553                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 17554  01AF98  52E5               	movf	postdec1,f,c
 17555  01AF9A  52E5               	movf	postdec1,f,c
 17556  01AF9C  0012               	return		;funcret
 17557  01AF9E                     __end_of_isupper:
 17558                           	opt callstack 0
 17559                           
 17560 ;; *************** function _strcpy *****************
 17561 ;; Defined at:
 17562 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 17563 ;; Parameters:    Size  Location     Type
 17564 ;;  dest            2  [STACK] PTR unsigned char 
 17565 ;;		 -> dbuf(80), 
 17566 ;;  src             2  [STACK] PTR const unsigned char 
 17567 ;;		 -> STR_71(4), STR_70(4), STR_67(4), STR_66(4), 
 17568 ;;		 -> dbuf(80), 
 17569 ;; Auto vars:     Size  Location     Type
 17570 ;;  d               2  [STACK] PTR unsigned char 
 17571 ;;		 -> dbuf(80), 
 17572 ;;  s               2  [STACK] PTR const unsigned char 
 17573 ;;		 -> STR_71(4), STR_70(4), STR_67(4), STR_66(4), 
 17574 ;;		 -> dbuf(80), 
 17575 ;; Return value:  Size  Location     Type
 17576 ;;                  2  [STACK] PTR unsigned char 
 17577 ;; Registers used:
 17578 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 17579 ;; Tracked objects:
 17580 ;;		On entry : 0/0
 17581 ;;		On exit  : 0/0
 17582 ;;		Unchanged: 0/0
 17583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17588 ;;Total ram usage:        0 bytes
 17589 ;; Hardware stack levels used:    1
 17590 ;; Hardware stack levels required when called:   15
 17591 ;; This function calls:
 17592 ;;		Nothing
 17593 ;; This function is called by:
 17594 ;;		_efgtoa
 17595 ;; This function uses a reentrant model
 17596 ;;
 17597                           
 17598                           	psect	text58
 17599  0198E4                     __ptext58:
 17600                           	opt callstack 0
 17601  0198E4                     _strcpy:
 17602                           	opt callstack 0
 17603                           
 17604                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17605  0198E4  52E6               	movf	postinc1,f,c
 17606  0198E6  52E6               	movf	postinc1,f,c
 17607  0198E8  52E6               	movf	postinc1,f,c
 17608  0198EA  52E6               	movf	postinc1,f,c
 17609                           
 17610                           ;stkvar	_src @ sp[(-4)+-4]
 17611                           
 17612                           ;incstack = 0
 17613 ;; hardware stack exceeded
 17614  0198EC  0EF8               	movlw	-8
 17615  0198EE  006F FF8C  F032    	movff	plusw1,btemp+10
 17616  0198F4  0EF9               	movlw	-7
 17617  0198F6  006F FF8C  F033    	movff	plusw1,btemp+11
 17618                           
 17619                           ;stkvar	_s @ sp[(-4)+2]
 17620  0198FC  0EFF               	movlw	-1
 17621  0198FE  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 17622  019904  0EFE               	movlw	-2
 17623  019906  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 17624                           
 17625                           ;stkvar	_dest @ sp[(-4)+-2]
 17626  01990C  0EFA               	movlw	-6
 17627  01990E  006F FF8C  F032    	movff	plusw1,btemp+10
 17628  019914  0EFB               	movlw	-5
 17629  019916  006F FF8C  F033    	movff	plusw1,btemp+11
 17630                           
 17631                           ;stkvar	_d @ sp[(-4)+0]
 17632  01991C  0EFD               	movlw	-3
 17633  01991E  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 17634  019924  0EFC               	movlw	-4
 17635  019926  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 17636  01992C                     l11432:
 17637                           
 17638                           ;stkvar	_s @ sp[(-4)+2]
 17639  01992C  50E1               	movf	fsr1l,w,c
 17640  01992E  0FFE               	addlw	-2
 17641  019930  6ED9               	movwf	fsr2l,c
 17642  019932  50E2               	movf	fsr1h,w,c
 17643  019934  6EDA               	movwf	fsr2h,c
 17644  019936  0EFF               	movlw	255
 17645  019938  22DA               	addwfc	fsr2h,f,c
 17646  01993A  006F FF7C  F032    	movff	indf2,btemp+10
 17647  019940  0E01               	movlw	1
 17648  019942  26DE               	addwf	postinc2,f,c
 17649  019944  006F FF7C  F033    	movff	indf2,btemp+11
 17650  01994A  0E00               	movlw	0
 17651  01994C  22DD               	addwfc	postdec2,f,c
 17652  01994E  0060  F0CB  FFF6   	movff	btemp+10,tblptrl
 17653  019954  0060  F0CF  FFF7   	movff	btemp+11,tblptrh
 17654  01995A  0E00               	movlw	low (__mediumconst shr (0+16))
 17655  01995C  6EF8               	movwf	tblptru,c
 17656                           
 17657                           ;stkvar	_d @ sp[(-4)+0]
 17658  01995E  50E1               	movf	fsr1l,w,c
 17659  019960  0FFC               	addlw	-4
 17660  019962  6ED9               	movwf	fsr2l,c
 17661  019964  50E2               	movf	fsr1h,w,c
 17662  019966  6EDA               	movwf	fsr2h,c
 17663  019968  0EFF               	movlw	255
 17664  01996A  22DA               	addwfc	fsr2h,f,c
 17665  01996C  006F FF7C  F032    	movff	indf2,btemp+10
 17666  019972  0E01               	movlw	1
 17667  019974  26DE               	addwf	postinc2,f,c
 17668  019976  006F FF7C  F033    	movff	indf2,btemp+11
 17669  01997C  0E00               	movlw	0
 17670  01997E  22DD               	addwfc	postdec2,f,c
 17671  019980  0060  F0CB  FFD9   	movff	btemp+10,fsr2l
 17672  019986  0060  F0CF  FFDA   	movff	btemp+11,fsr2h
 17673  01998C  0E1F               	movlw	(high __ramtop+-1)
 17674  01998E  64F7               	cpfsgt	tblptrh,c
 17675  019990  D003               	bra	u10397
 17676  019992  0008               	tblrd		*
 17677  019994  50F5               	movf	tablat,w,c
 17678  019996  D007               	bra	u10390
 17679  019998                     u10397:
 17680  019998  006F FFDB FFE9     	movff	tblptrl,fsr0l
 17681  01999E  006F FFDF FFEA     	movff	tblptrh,fsr0h
 17682  0199A4  50EF               	movf	indf0,w,c
 17683  0199A6                     u10390:
 17684  0199A6  6EDF               	movwf	indf2,c
 17685  0199A8  50DF               	movf	indf2,w,c
 17686  0199AA  A4D8               	btfss	status,2,c
 17687  0199AC  D7BF               	goto	l11432
 17688                           
 17689                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 17690  0199AE  0EF8               	movlw	248
 17691  0199B0  26E1               	addwf	fsr1l,f,c
 17692  0199B2  0EFF               	movlw	255
 17693  0199B4  22E2               	addwfc	fsr1h,f,c
 17694  0199B6  0012               	return		;funcret
 17695  0199B8                     __end_of_strcpy:
 17696                           	opt callstack 0
 17697                           
 17698 ;; *************** function _floorf *****************
 17699 ;; Defined at:
 17700 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 17701 ;; Parameters:    Size  Location     Type
 17702 ;;  x               4  [STACK] float 
 17703 ;; Auto vars:     Size  Location     Type
 17704 ;;  u               4  [STACK] struct .
 17705 ;;  m               4  [STACK] unsigned long 
 17706 ;;  e               2  [STACK] int 
 17707 ;; Return value:  Size  Location     Type
 17708 ;;                  4  [STACK] float 
 17709 ;; Registers used:
 17710 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 17711 ;; Tracked objects:
 17712 ;;		On entry : 0/0
 17713 ;;		On exit  : 0/0
 17714 ;;		Unchanged: 0/0
 17715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17720 ;;Total ram usage:        0 bytes
 17721 ;; Hardware stack levels used:    1
 17722 ;; Hardware stack levels required when called:   15
 17723 ;; This function calls:
 17724 ;;		Nothing
 17725 ;; This function is called by:
 17726 ;;		_efgtoa
 17727 ;; This function uses a reentrant model
 17728 ;;
 17729                           
 17730                           	psect	text59
 17731  015F38                     __ptext59:
 17732                           	opt callstack 0
 17733  015F38                     _floorf:
 17734                           	opt callstack 0
 17735                           
 17736                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 17737  015F38  0E0A               	movlw	10
 17738  015F3A  26E1               	addwf	fsr1l,f,c
 17739  015F3C  0E00               	movlw	0
 17740  015F3E  22E2               	addwfc	fsr1h,f,c
 17741                           
 17742                           ;incstack = 0
 17743 ;; hardware stack exceeded
 17744  015F40  0060  F1E8  F030   	movff	floorf@F524,btemp+8
 17745  015F46  0060  F1EC  F031   	movff	floorf@F524+1,btemp+9
 17746  015F4C  0060  F1F0  F032   	movff	floorf@F524+2,btemp+10
 17747  015F52  0060  F1F4  F033   	movff	floorf@F524+3,btemp+11
 17748                           
 17749                           ;stkvar	_u @ sp[(-10)+0]
 17750  015F58  0EF6               	movlw	-10
 17751  015F5A  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 17752  015F60  0EF7               	movlw	-9
 17753  015F62  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 17754  015F68  0EF8               	movlw	-8
 17755  015F6A  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 17756  015F70  0EF9               	movlw	-7
 17757  015F72  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 17758                           
 17759                           ;stkvar	_x @ sp[(-10)+-4]
 17760  015F78  0EF2               	movlw	-14
 17761  015F7A  006F FF8C  F030    	movff	plusw1,btemp+8
 17762  015F80  0EF3               	movlw	-13
 17763  015F82  006F FF8C  F031    	movff	plusw1,btemp+9
 17764  015F88  0EF4               	movlw	-12
 17765  015F8A  006F FF8C  F032    	movff	plusw1,btemp+10
 17766  015F90  0EF5               	movlw	-11
 17767  015F92  006F FF8C  F033    	movff	plusw1,btemp+11
 17768                           
 17769                           ;stkvar	_u @ sp[(-10)+0]
 17770  015F98  0EF6               	movlw	-10
 17771  015F9A  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 17772  015FA0  0EF7               	movlw	-9
 17773  015FA2  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 17774  015FA8  0EF8               	movlw	-8
 17775  015FAA  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 17776  015FB0  0EF9               	movlw	-7
 17777  015FB2  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 17778  015FB8  0E81               	movlw	129
 17779  015FBA  6E32               	movwf	(btemp+10)^0,c
 17780  015FBC  0EFF               	movlw	255
 17781  015FBE  6E33               	movwf	(btemp+11)^0,c
 17782                           
 17783                           ;stkvar	_u @ sp[(-10)+0]
 17784  015FC0  0EF6               	movlw	-10
 17785  015FC2  006F FF8C  F02C    	movff	plusw1,btemp+4
 17786  015FC8  0EF7               	movlw	-9
 17787  015FCA  006F FF8C  F02D    	movff	plusw1,btemp+5
 17788  015FD0  0EF8               	movlw	-8
 17789  015FD2  006F FF8C  F02E    	movff	plusw1,btemp+6
 17790  015FD8  0EF9               	movlw	-7
 17791  015FDA  006F FF8C  F02F    	movff	plusw1,btemp+7
 17792  015FE0  0E18               	movlw	24
 17793  015FE2  D005               	goto	u5860
 17794  015FE4                     u5865:
 17795  015FE4  90D8               	bcf	status,0,c
 17796  015FE6  322F               	rrcf	(btemp+7)^0,f,c
 17797  015FE8  322E               	rrcf	(btemp+6)^0,f,c
 17798  015FEA  322D               	rrcf	(btemp+5)^0,f,c
 17799  015FEC  322C               	rrcf	(btemp+4)^0,f,c
 17800  015FEE                     u5860:
 17801  015FEE  2EE8               	decfsz	wreg,f,c
 17802  015FF0  D7F9               	goto	u5865
 17803  015FF2  0060  F0B0  F030   	movff	btemp+4,btemp+8
 17804  015FF8  0060  F0B4  F031   	movff	btemp+5,btemp+9
 17805  015FFE  0EFF               	movlw	255
 17806  016000  1630               	andwf	(btemp+8)^0,f,c
 17807  016002  0E00               	movlw	0
 17808  016004  1631               	andwf	(btemp+9)^0,f,c
 17809  016006  5032               	movf	(btemp+10)^0,w,c
 17810  016008  2630               	addwf	(btemp+8)^0,f,c
 17811  01600A  5033               	movf	(btemp+11)^0,w,c
 17812  01600C  2231               	addwfc	(btemp+9)^0,f,c
 17813                           
 17814                           ;stkvar	_e @ sp[(-10)+8]
 17815  01600E  0EFE               	movlw	-2
 17816  016010  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 17817  016016  0EFF               	movlw	-1
 17818  016018  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 17819                           
 17820                           ;stkvar	_e @ sp[(-10)+8]
 17821  01601E  0EFF               	movlw	-1
 17822  016020  BEE3               	btfsc	plusw1,7,c
 17823  016022  D019               	goto	l7796
 17824  016024  0EFF               	movlw	-1
 17825  016026  50E3               	movf	plusw1,w,c
 17826  016028  E108               	bnz	u5870
 17827  01602A  0EFE               	movlw	-2
 17828  01602C  006F FF8C  F028    	movff	plusw1,btemp
 17829  016032  0E17               	movlw	23
 17830  016034  5E28               	subwf	btemp^0,f,c
 17831  016036  A0D8               	btfss	status,0,c
 17832  016038  D00E               	goto	l7796
 17833  01603A                     u5870:
 17834                           
 17835                           ;stkvar	_x @ sp[(-10)+-4]
 17836  01603A  0EF2               	movlw	-14
 17837  01603C  006F FF8C  F028    	movff	plusw1,btemp
 17838  016042  0EF3               	movlw	-13
 17839  016044  006F FF8C  F029    	movff	plusw1,btemp+1
 17840  01604A  0EF4               	movlw	-12
 17841  01604C  006F FF8C  F02A    	movff	plusw1,btemp+2
 17842  016052  0EF5               	movlw	-11
 17843  016054  D11F               	goto	L18
 17844  016056                     l7796:
 17845                           
 17846                           ;stkvar	_e @ sp[(-10)+8]
 17847  016056  0EFF               	movlw	-1
 17848  016058  BEE3               	btfsc	plusw1,7,c
 17849  01605A  D0B4               	goto	l7812
 17850                           
 17851                           ;stkvar	_e @ sp[(-10)+8]
 17852  01605C  0EFE               	movlw	-2
 17853  01605E  006F FF8C  F033    	movff	plusw1,btemp+11
 17854  016064  0EFF               	movlw	255
 17855  016066  6E2C               	movwf	(btemp+4)^0,c
 17856  016068  0EFF               	movlw	255
 17857  01606A  6E2D               	movwf	(btemp+5)^0,c
 17858  01606C  0E7F               	movlw	127
 17859  01606E  6E2E               	movwf	(btemp+6)^0,c
 17860  016070  0E00               	movlw	0
 17861  016072  6E2F               	movwf	(btemp+7)^0,c
 17862  016074                     u5895:
 17863  016074  6633               	tstfsz	(btemp+11)^0,c
 17864  016076  D001               	goto	u5896
 17865  016078  D007               	goto	u5897
 17866  01607A                     u5896:
 17867  01607A  342F               	rlcf	(btemp+7)^0,w,c
 17868  01607C  322F               	rrcf	(btemp+7)^0,f,c
 17869  01607E  322E               	rrcf	(btemp+6)^0,f,c
 17870  016080  322D               	rrcf	(btemp+5)^0,f,c
 17871  016082  322C               	rrcf	(btemp+4)^0,f,c
 17872  016084  2E33               	decfsz	(btemp+11)^0,f,c
 17873  016086  D7F6               	goto	u5895
 17874  016088                     u5897:
 17875                           
 17876                           ;stkvar	_m @ sp[(-10)+4]
 17877  016088  0EFA               	movlw	-6
 17878  01608A  0060  F0B3  FFE3   	movff	btemp+4,plusw1
 17879  016090  0EFB               	movlw	-5
 17880  016092  0060  F0B7  FFE3   	movff	btemp+5,plusw1
 17881  016098  0EFC               	movlw	-4
 17882  01609A  0060  F0BB  FFE3   	movff	btemp+6,plusw1
 17883  0160A0  0EFD               	movlw	-3
 17884  0160A2  0060  F0BF  FFE3   	movff	btemp+7,plusw1
 17885                           
 17886                           ;stkvar	_m @ sp[(-10)+4]
 17887                           ;stkvar	_u @ sp[(-10)+0]
 17888  0160A8  0EF6               	movlw	-10
 17889  0160AA  006F FF8C  F030    	movff	plusw1,btemp+8
 17890  0160B0  0EF7               	movlw	-9
 17891  0160B2  006F FF8C  F031    	movff	plusw1,btemp+9
 17892  0160B8  0EF8               	movlw	-8
 17893  0160BA  006F FF8C  F032    	movff	plusw1,btemp+10
 17894  0160C0  0EF9               	movlw	-7
 17895  0160C2  006F FF8C  F033    	movff	plusw1,btemp+11
 17896  0160C8  0EFA               	movlw	-6
 17897  0160CA  50E3               	movf	plusw1,w,c
 17898  0160CC  1630               	andwf	(btemp+8)^0,f,c
 17899  0160CE  0EFB               	movlw	-5
 17900  0160D0  50E3               	movf	plusw1,w,c
 17901  0160D2  1631               	andwf	(btemp+9)^0,f,c
 17902  0160D4  0EFC               	movlw	-4
 17903  0160D6  50E3               	movf	plusw1,w,c
 17904  0160D8  1632               	andwf	(btemp+10)^0,f,c
 17905  0160DA  0EFD               	movlw	-3
 17906  0160DC  50E3               	movf	plusw1,w,c
 17907  0160DE  1633               	andwf	(btemp+11)^0,f,c
 17908  0160E0  5030               	movf	(btemp+8)^0,w,c
 17909  0160E2  1031               	iorwf	(btemp+9)^0,w,c
 17910  0160E4  1032               	iorwf	(btemp+10)^0,w,c
 17911  0160E6  1033               	iorwf	(btemp+11)^0,w,c
 17912  0160E8  B4D8               	btfsc	status,2,c
 17913  0160EA  D7A7               	goto	u5870
 17914                           
 17915                           ;stkvar	_u @ sp[(-10)+0]
 17916  0160EC  0EF6               	movlw	-10
 17917  0160EE  006F FF8C  F030    	movff	plusw1,btemp+8
 17918  0160F4  0EF7               	movlw	-9
 17919  0160F6  006F FF8C  F031    	movff	plusw1,btemp+9
 17920  0160FC  0EF8               	movlw	-8
 17921  0160FE  006F FF8C  F032    	movff	plusw1,btemp+10
 17922  016104  0EF9               	movlw	-7
 17923  016106  006F FF8C  F033    	movff	plusw1,btemp+11
 17924  01610C  0E20               	movlw	32
 17925  01610E  D005               	goto	u5910
 17926  016110                     u5915:
 17927  016110  90D8               	bcf	status,0,c
 17928  016112  3233               	rrcf	(btemp+11)^0,f,c
 17929  016114  3232               	rrcf	(btemp+10)^0,f,c
 17930  016116  3231               	rrcf	(btemp+9)^0,f,c
 17931  016118  3230               	rrcf	(btemp+8)^0,f,c
 17932  01611A                     u5910:
 17933  01611A  2EE8               	decfsz	wreg,f,c
 17934  01611C  D7F9               	goto	u5915
 17935  01611E  5030               	movf	(btemp+8)^0,w,c
 17936  016120  B4D8               	btfsc	status,2,c
 17937  016122  D028               	goto	l7810
 17938                           
 17939                           ;stkvar	_m @ sp[(-10)+4]
 17940                           ;stkvar	_u @ sp[(-10)+0]
 17941  016124  0EF6               	movlw	-10
 17942  016126  50E3               	movf	plusw1,w,c
 17943  016128  6E28               	movwf	btemp^0,c
 17944  01612A  0EFA               	movlw	-6
 17945  01612C  50E3               	movf	plusw1,w,c
 17946  01612E  2628               	addwf	btemp^0,f,c
 17947  016130  0EF6               	movlw	-10
 17948  016132  0060  F0A3  FFE3   	movff	btemp,plusw1
 17949  016138  0EF7               	movlw	-9
 17950  01613A  50E3               	movf	plusw1,w,c
 17951  01613C  6E28               	movwf	btemp^0,c
 17952  01613E  0EFB               	movlw	-5
 17953  016140  50E3               	movf	plusw1,w,c
 17954  016142  2228               	addwfc	btemp^0,f,c
 17955  016144  0EF7               	movlw	-9
 17956  016146  0060  F0A3  FFE3   	movff	btemp,plusw1
 17957  01614C  0EF8               	movlw	-8
 17958  01614E  50E3               	movf	plusw1,w,c
 17959  016150  6E28               	movwf	btemp^0,c
 17960  016152  0EFC               	movlw	-4
 17961  016154  50E3               	movf	plusw1,w,c
 17962  016156  2228               	addwfc	btemp^0,f,c
 17963  016158  0EF8               	movlw	-8
 17964  01615A  0060  F0A3  FFE3   	movff	btemp,plusw1
 17965  016160  0EF9               	movlw	-7
 17966  016162  50E3               	movf	plusw1,w,c
 17967  016164  6E28               	movwf	btemp^0,c
 17968  016166  0EFD               	movlw	-3
 17969  016168  50E3               	movf	plusw1,w,c
 17970  01616A  2228               	addwfc	btemp^0,f,c
 17971  01616C  0EF9               	movlw	-7
 17972  01616E  0060  F0A3  FFE3   	movff	btemp,plusw1
 17973  016174                     l7810:
 17974                           
 17975                           ;stkvar	_m @ sp[(-10)+4]
 17976  016174  0EFA               	movlw	-6
 17977  016176  006F FF8C  F030    	movff	plusw1,btemp+8
 17978  01617C  0EFB               	movlw	-5
 17979  01617E  006F FF8C  F031    	movff	plusw1,btemp+9
 17980  016184  0EFC               	movlw	-4
 17981  016186  006F FF8C  F032    	movff	plusw1,btemp+10
 17982  01618C  0EFD               	movlw	-3
 17983  01618E  006F FF8C  F033    	movff	plusw1,btemp+11
 17984  016194  1C30               	comf	(btemp+8)^0,w,c
 17985  016196  6E2C               	movwf	(btemp+4)^0,c
 17986  016198  1C31               	comf	(btemp+9)^0,w,c
 17987  01619A  6E2D               	movwf	(btemp+5)^0,c
 17988  01619C  1C32               	comf	(btemp+10)^0,w,c
 17989  01619E  6E2E               	movwf	(btemp+6)^0,c
 17990  0161A0  1C33               	comf	(btemp+11)^0,w,c
 17991  0161A2  6E2F               	movwf	(btemp+7)^0,c
 17992                           
 17993                           ;stkvar	_u @ sp[(-10)+0]
 17994  0161A4  50E1               	movf	fsr1l,w,c
 17995  0161A6  0FF6               	addlw	-10
 17996  0161A8  6ED9               	movwf	fsr2l,c
 17997  0161AA  50E2               	movf	fsr1h,w,c
 17998  0161AC  6EDA               	movwf	fsr2h,c
 17999  0161AE  0EFF               	movlw	255
 18000  0161B0  22DA               	addwfc	fsr2h,f,c
 18001  0161B2  502C               	movf	(btemp+4)^0,w,c
 18002  0161B4  16DE               	andwf	postinc2,f,c
 18003  0161B6  502D               	movf	(btemp+5)^0,w,c
 18004  0161B8  16DE               	andwf	postinc2,f,c
 18005  0161BA  502E               	movf	(btemp+6)^0,w,c
 18006  0161BC  16DE               	andwf	postinc2,f,c
 18007  0161BE  502F               	movf	(btemp+7)^0,w,c
 18008  0161C0  16DE               	andwf	postinc2,f,c
 18009  0161C2  D05B               	goto	l7820
 18010  0161C4                     l7812:
 18011                           
 18012                           ;stkvar	_u @ sp[(-10)+0]
 18013  0161C4  0EF6               	movlw	-10
 18014  0161C6  006F FF8C  F030    	movff	plusw1,btemp+8
 18015  0161CC  0EF7               	movlw	-9
 18016  0161CE  006F FF8C  F031    	movff	plusw1,btemp+9
 18017  0161D4  0EF8               	movlw	-8
 18018  0161D6  006F FF8C  F032    	movff	plusw1,btemp+10
 18019  0161DC  0EF9               	movlw	-7
 18020  0161DE  006F FF8C  F033    	movff	plusw1,btemp+11
 18021  0161E4  0E20               	movlw	32
 18022  0161E6  D005               	goto	u5930
 18023  0161E8                     u5935:
 18024  0161E8  90D8               	bcf	status,0,c
 18025  0161EA  3233               	rrcf	(btemp+11)^0,f,c
 18026  0161EC  3232               	rrcf	(btemp+10)^0,f,c
 18027  0161EE  3231               	rrcf	(btemp+9)^0,f,c
 18028  0161F0  3230               	rrcf	(btemp+8)^0,f,c
 18029  0161F2                     u5930:
 18030  0161F2  2EE8               	decfsz	wreg,f,c
 18031  0161F4  D7F9               	goto	u5935
 18032  0161F6  6630               	tstfsz	(btemp+8)^0,c
 18033  0161F8  D009               	goto	l7816
 18034                           
 18035                           ;stkvar	_u @ sp[(-10)+0]
 18036  0161FA  0EF6               	movlw	-10
 18037  0161FC  6AE3               	clrf	plusw1,c
 18038  0161FE  0EF7               	movlw	-9
 18039  016200  6AE3               	clrf	plusw1,c
 18040  016202  0EF8               	movlw	-8
 18041  016204  6AE3               	clrf	plusw1,c
 18042  016206  0EF9               	movlw	-7
 18043  016208  6AE3               	clrf	plusw1,c
 18044  01620A  D037               	goto	l7820
 18045  01620C                     l7816:
 18046                           
 18047                           ;stkvar	_u @ sp[(-10)+0]
 18048  01620C  0EF6               	movlw	-10
 18049  01620E  006F FF8C  F030    	movff	plusw1,btemp+8
 18050  016214  0EF7               	movlw	-9
 18051  016216  006F FF8C  F031    	movff	plusw1,btemp+9
 18052  01621C  0EF8               	movlw	-8
 18053  01621E  006F FF8C  F032    	movff	plusw1,btemp+10
 18054  016224  0EF9               	movlw	-7
 18055  016226  006F FF8C  F033    	movff	plusw1,btemp+11
 18056  01622C  90D8               	bcf	status,0,c
 18057  01622E  3430               	rlcf	(btemp+8)^0,w,c
 18058  016230  6E2C               	movwf	(btemp+4)^0,c
 18059  016232  3431               	rlcf	(btemp+9)^0,w,c
 18060  016234  6E2D               	movwf	(btemp+5)^0,c
 18061  016236  3432               	rlcf	(btemp+10)^0,w,c
 18062  016238  6E2E               	movwf	(btemp+6)^0,c
 18063  01623A  3433               	rlcf	(btemp+11)^0,w,c
 18064  01623C  6E2F               	movwf	(btemp+7)^0,c
 18065  01623E  502C               	movf	(btemp+4)^0,w,c
 18066  016240  102D               	iorwf	(btemp+5)^0,w,c
 18067  016242  102E               	iorwf	(btemp+6)^0,w,c
 18068  016244  102F               	iorwf	(btemp+7)^0,w,c
 18069  016246  B4D8               	btfsc	status,2,c
 18070  016248  D018               	goto	l7820
 18071  01624A  0E00               	movlw	0
 18072  01624C  6E30               	movwf	(btemp+8)^0,c
 18073  01624E  0E00               	movlw	0
 18074  016250  6E31               	movwf	(btemp+9)^0,c
 18075  016252  0E80               	movlw	128
 18076  016254  6E32               	movwf	(btemp+10)^0,c
 18077  016256  0EBF               	movlw	191
 18078  016258  6E33               	movwf	(btemp+11)^0,c
 18079                           
 18080                           ;stkvar	_u @ sp[(-10)+0]
 18081  01625A  0EF6               	movlw	-10
 18082  01625C  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 18083  016262  0EF7               	movlw	-9
 18084  016264  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 18085  01626A  0EF8               	movlw	-8
 18086  01626C  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 18087  016272  0EF9               	movlw	-7
 18088  016274  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 18089  01627A                     l7820:
 18090                           
 18091                           ;stkvar	_u @ sp[(-10)+0]
 18092  01627A  0EF6               	movlw	-10
 18093  01627C  006F FF8C  F028    	movff	plusw1,btemp
 18094  016282  0EF7               	movlw	-9
 18095  016284  006F FF8C  F029    	movff	plusw1,btemp+1
 18096  01628A  0EF8               	movlw	-8
 18097  01628C  006F FF8C  F02A    	movff	plusw1,btemp+2
 18098  016292  0EF9               	movlw	-7
 18099  016294                     L18:
 18100  016294  006F FF8C  F02B    	movff	plusw1,btemp+3
 18101                           
 18102                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18103  01629A  0EF2               	movlw	242
 18104  01629C  26E1               	addwf	fsr1l,f,c
 18105  01629E  0EFF               	movlw	255
 18106  0162A0  22E2               	addwfc	fsr1h,f,c
 18107  0162A2  0012               	return		;funcret
 18108  0162A4                     __end_of_floorf:
 18109                           	opt callstack 0
 18110                           
 18111 ;; *************** function ___fpclassifyf *****************
 18112 ;; Defined at:
 18113 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 18114 ;; Parameters:    Size  Location     Type
 18115 ;;  x               4  [STACK] float 
 18116 ;; Auto vars:     Size  Location     Type
 18117 ;;  u               4  [STACK] struct .
 18118 ;;  e               2  [STACK] int 
 18119 ;; Return value:  Size  Location     Type
 18120 ;;                  2  [STACK] int 
 18121 ;; Registers used:
 18122 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 18123 ;; Tracked objects:
 18124 ;;		On entry : 0/0
 18125 ;;		On exit  : 0/0
 18126 ;;		Unchanged: 0/0
 18127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18132 ;;Total ram usage:        0 bytes
 18133 ;; Hardware stack levels used:    1
 18134 ;; Hardware stack levels required when called:   15
 18135 ;; This function calls:
 18136 ;;		Nothing
 18137 ;; This function is called by:
 18138 ;;		_efgtoa
 18139 ;; This function uses a reentrant model
 18140 ;;
 18141                           
 18142                           	psect	text60
 18143  017F74                     __ptext60:
 18144                           	opt callstack 0
 18145  017F74                     ___fpclassifyf:
 18146                           	opt callstack 0
 18147                           
 18148                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18149  017F74  0E06               	movlw	6
 18150  017F76  26E1               	addwf	fsr1l,f,c
 18151  017F78  0E00               	movlw	0
 18152  017F7A  22E2               	addwfc	fsr1h,f,c
 18153                           
 18154                           ;incstack = 0
 18155 ;; hardware stack exceeded
 18156  017F7C  0060  F208  F030   	movff	___fpclassifyf@F463,btemp+8
 18157  017F82  0060  F20C  F031   	movff	___fpclassifyf@F463+1,btemp+9
 18158  017F88  0060  F210  F032   	movff	___fpclassifyf@F463+2,btemp+10
 18159  017F8E  0060  F214  F033   	movff	___fpclassifyf@F463+3,btemp+11
 18160                           
 18161                           ;stkvar	_u @ sp[(-6)+0]
 18162  017F94  0EFA               	movlw	-6
 18163  017F96  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 18164  017F9C  0EFB               	movlw	-5
 18165  017F9E  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 18166  017FA4  0EFC               	movlw	-4
 18167  017FA6  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 18168  017FAC  0EFD               	movlw	-3
 18169  017FAE  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 18170                           
 18171                           ;stkvar	_x @ sp[(-6)+-4]
 18172  017FB4  0EF6               	movlw	-10
 18173  017FB6  006F FF8C  F030    	movff	plusw1,btemp+8
 18174  017FBC  0EF7               	movlw	-9
 18175  017FBE  006F FF8C  F031    	movff	plusw1,btemp+9
 18176  017FC4  0EF8               	movlw	-8
 18177  017FC6  006F FF8C  F032    	movff	plusw1,btemp+10
 18178  017FCC  0EF9               	movlw	-7
 18179  017FCE  006F FF8C  F033    	movff	plusw1,btemp+11
 18180                           
 18181                           ;stkvar	_u @ sp[(-6)+0]
 18182  017FD4  0EFA               	movlw	-6
 18183  017FD6  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 18184  017FDC  0EFB               	movlw	-5
 18185  017FDE  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 18186  017FE4  0EFC               	movlw	-4
 18187  017FE6  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 18188  017FEC  0EFD               	movlw	-3
 18189  017FEE  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 18190                           
 18191                           ;stkvar	_u @ sp[(-6)+0]
 18192  017FF4  0EFA               	movlw	-6
 18193  017FF6  006F FF8C  F030    	movff	plusw1,btemp+8
 18194  017FFC  0EFB               	movlw	-5
 18195  017FFE  006F FF8C  F031    	movff	plusw1,btemp+9
 18196  018004  0EFC               	movlw	-4
 18197  018006  006F FF8C  F032    	movff	plusw1,btemp+10
 18198  01800C  0EFD               	movlw	-3
 18199  01800E  006F FF8C  F033    	movff	plusw1,btemp+11
 18200  018014  0E18               	movlw	24
 18201  018016  D005               	goto	u5740
 18202  018018                     u5745:
 18203  018018  90D8               	bcf	status,0,c
 18204  01801A  3233               	rrcf	(btemp+11)^0,f,c
 18205  01801C  3232               	rrcf	(btemp+10)^0,f,c
 18206  01801E  3231               	rrcf	(btemp+9)^0,f,c
 18207  018020  3230               	rrcf	(btemp+8)^0,f,c
 18208  018022                     u5740:
 18209  018022  2EE8               	decfsz	wreg,f,c
 18210  018024  D7F9               	goto	u5745
 18211  018026  0060  F0C0  F02E   	movff	btemp+8,btemp+6
 18212  01802C  0060  F0C4  F02F   	movff	btemp+9,btemp+7
 18213  018032  0EFF               	movlw	255
 18214  018034  162E               	andwf	(btemp+6)^0,f,c
 18215  018036  0E00               	movlw	0
 18216  018038  162F               	andwf	(btemp+7)^0,f,c
 18217                           
 18218                           ;stkvar	_e @ sp[(-6)+4]
 18219  01803A  0EFE               	movlw	-2
 18220  01803C  0060  F0BB  FFE3   	movff	btemp+6,plusw1
 18221  018042  0EFF               	movlw	-1
 18222  018044  0060  F0BF  FFE3   	movff	btemp+7,plusw1
 18223                           
 18224                           ;stkvar	_e @ sp[(-6)+4]
 18225  01804A  0EFE               	movlw	-2
 18226  01804C  006F FF8C  F028    	movff	plusw1,btemp
 18227  018052  0EFF               	movlw	-1
 18228  018054  50E3               	movf	plusw1,w,c
 18229  018056  1028               	iorwf	btemp^0,w,c
 18230  018058  A4D8               	btfss	status,2,c
 18231  01805A  D023               	goto	l7758
 18232                           
 18233                           ;stkvar	_u @ sp[(-6)+0]
 18234  01805C  0EFA               	movlw	-6
 18235  01805E  006F FF8C  F030    	movff	plusw1,btemp+8
 18236  018064  0EFB               	movlw	-5
 18237  018066  006F FF8C  F031    	movff	plusw1,btemp+9
 18238  01806C  0EFC               	movlw	-4
 18239  01806E  006F FF8C  F032    	movff	plusw1,btemp+10
 18240  018074  0EFD               	movlw	-3
 18241  018076  006F FF8C  F033    	movff	plusw1,btemp+11
 18242  01807C  90D8               	bcf	status,0,c
 18243  01807E  3430               	rlcf	(btemp+8)^0,w,c
 18244  018080  6E2C               	movwf	(btemp+4)^0,c
 18245  018082  3431               	rlcf	(btemp+9)^0,w,c
 18246  018084  6E2D               	movwf	(btemp+5)^0,c
 18247  018086  3432               	rlcf	(btemp+10)^0,w,c
 18248  018088  6E2E               	movwf	(btemp+6)^0,c
 18249  01808A  3433               	rlcf	(btemp+11)^0,w,c
 18250  01808C  6E2F               	movwf	(btemp+7)^0,c
 18251  01808E  502C               	movf	(btemp+4)^0,w,c
 18252  018090  102D               	iorwf	(btemp+5)^0,w,c
 18253  018092  102E               	iorwf	(btemp+6)^0,w,c
 18254  018094  102F               	iorwf	(btemp+7)^0,w,c
 18255  018096  A4D8               	btfss	status,2,c
 18256  018098  D002               	goto	l7754
 18257  01809A  0E02               	movlw	2
 18258  01809C  D02E               	goto	L19
 18259  01809E                     l7754:
 18260  01809E  0E03               	movlw	3
 18261  0180A0  D02C               	goto	L19
 18262  0180A2                     l7758:
 18263                           
 18264                           ;stkvar	_e @ sp[(-6)+4]
 18265  0180A2  0EFE               	movlw	-2
 18266  0180A4  28E3               	incf	plusw1,w,c
 18267  0180A6  E128               	bnz	l7764
 18268  0180A8  0EFF               	movlw	-1
 18269  0180AA  50E3               	movf	plusw1,w,c
 18270  0180AC  A4D8               	btfss	status,2,c
 18271  0180AE  D024               	goto	l7764
 18272                           
 18273                           ;stkvar	_u @ sp[(-6)+0]
 18274  0180B0  0EFA               	movlw	-6
 18275  0180B2  006F FF8C  F030    	movff	plusw1,btemp+8
 18276  0180B8  0EFB               	movlw	-5
 18277  0180BA  006F FF8C  F031    	movff	plusw1,btemp+9
 18278  0180C0  0EFC               	movlw	-4
 18279  0180C2  006F FF8C  F032    	movff	plusw1,btemp+10
 18280  0180C8  0EFD               	movlw	-3
 18281  0180CA  006F FF8C  F033    	movff	plusw1,btemp+11
 18282  0180D0  0E09               	movlw	9
 18283  0180D2                     u5785:
 18284  0180D2  90D8               	bcf	status,0,c
 18285  0180D4  3630               	rlcf	(btemp+8)^0,f,c
 18286  0180D6  3631               	rlcf	(btemp+9)^0,f,c
 18287  0180D8  3632               	rlcf	(btemp+10)^0,f,c
 18288  0180DA  3633               	rlcf	(btemp+11)^0,f,c
 18289  0180DC  2EE8               	decfsz	wreg,f,c
 18290  0180DE  D7F9               	goto	u5785
 18291  0180E0  5030               	movf	(btemp+8)^0,w,c
 18292  0180E2  1031               	iorwf	(btemp+9)^0,w,c
 18293  0180E4  1032               	iorwf	(btemp+10)^0,w,c
 18294  0180E6  1033               	iorwf	(btemp+11)^0,w,c
 18295  0180E8  A4D8               	btfss	status,2,c
 18296  0180EA  D002               	goto	u5790
 18297  0180EC  0E01               	movlw	1
 18298  0180EE  D001               	goto	u5800
 18299  0180F0                     u5790:
 18300  0180F0  0E00               	movlw	0
 18301  0180F2                     u5800:
 18302  0180F2  6E28               	movwf	btemp^0,c
 18303  0180F4  6A29               	clrf	(btemp+1)^0,c
 18304  0180F6  D004               	goto	l3044
 18305  0180F8                     l7764:
 18306  0180F8  0E04               	movlw	4
 18307  0180FA                     L19:
 18308  0180FA  6E28               	movwf	btemp^0,c
 18309  0180FC  0E00               	movlw	0
 18310  0180FE  6E29               	movwf	(btemp+1)^0,c
 18311  018100                     l3044:
 18312                           
 18313                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 18314  018100  0EF6               	movlw	246
 18315  018102  26E1               	addwf	fsr1l,f,c
 18316  018104  0EFF               	movlw	255
 18317  018106  22E2               	addwfc	fsr1h,f,c
 18318  018108  0012               	return		;funcret
 18319  01810A                     __end_of___fpclassifyf:
 18320                           	opt callstack 0
 18321                           
 18322 ;; *************** function ___fltol *****************
 18323 ;; Defined at:
 18324 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 18325 ;; Parameters:    Size  Location     Type
 18326 ;;  f1              4  [STACK] int 
 18327 ;; Auto vars:     Size  Location     Type
 18328 ;;  exp1            1  [STACK] unsigned char 
 18329 ;;  sign1           1  [STACK] unsigned char 
 18330 ;; Return value:  Size  Location     Type
 18331 ;;                  4  [STACK] long 
 18332 ;; Registers used:
 18333 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 18334 ;; Tracked objects:
 18335 ;;		On entry : 0/0
 18336 ;;		On exit  : 0/0
 18337 ;;		Unchanged: 0/0
 18338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18343 ;;Total ram usage:        0 bytes
 18344 ;; Hardware stack levels used:    1
 18345 ;; Hardware stack levels required when called:   15
 18346 ;; This function calls:
 18347 ;;		Nothing
 18348 ;; This function is called by:
 18349 ;;		_main
 18350 ;;		_calc_bsoc
 18351 ;;		_init_bsoc
 18352 ;;		_efgtoa
 18353 ;; This function uses a reentrant model
 18354 ;;
 18355                           
 18356                           	psect	text61
 18357  0183FE                     __ptext61:
 18358                           	opt callstack 0
 18359  0183FE                     ___fltol:
 18360                           	opt callstack 0
 18361                           
 18362                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18363  0183FE  52E6               	movf	postinc1,f,c
 18364  018400  52E6               	movf	postinc1,f,c
 18365                           
 18366                           ;stkvar	_f1 @ sp[(-2)+-4]
 18367                           
 18368                           ;incstack = 0
 18369 ;; hardware stack exceeded
 18370  018402  0EFA               	movlw	-6
 18371  018404  006F FF8C  F030    	movff	plusw1,btemp+8
 18372  01840A  0EFB               	movlw	-5
 18373  01840C  006F FF8C  F031    	movff	plusw1,btemp+9
 18374  018412  0EFC               	movlw	-4
 18375  018414  006F FF8C  F032    	movff	plusw1,btemp+10
 18376  01841A  0EFD               	movlw	-3
 18377  01841C  006F FF8C  F033    	movff	plusw1,btemp+11
 18378  018422  0E18               	movlw	24
 18379  018424  D005               	goto	u6950
 18380  018426                     u6955:
 18381  018426  90D8               	bcf	status,0,c
 18382  018428  3233               	rrcf	(btemp+11)^0,f,c
 18383  01842A  3232               	rrcf	(btemp+10)^0,f,c
 18384  01842C  3231               	rrcf	(btemp+9)^0,f,c
 18385  01842E  3230               	rrcf	(btemp+8)^0,f,c
 18386  018430                     u6950:
 18387  018430  2EE8               	decfsz	wreg,f,c
 18388  018432  D7F9               	goto	u6955
 18389                           
 18390                           ;stkvar	_exp1 @ sp[(-2)+0]
 18391  018434  0EFE               	movlw	-2
 18392  018436  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 18393  01843C  0EFE               	movlw	-2
 18394  01843E  50E3               	movf	plusw1,w,c
 18395  018440  A4D8               	btfss	status,2,c
 18396  018442  D006               	goto	l8384
 18397  018444                     u6960:
 18398  018444  0E00               	movlw	0
 18399  018446  6E28               	movwf	btemp^0,c
 18400  018448  6A29               	clrf	(btemp+1)^0,c
 18401  01844A  6A2A               	clrf	(btemp+2)^0,c
 18402  01844C  6A2B               	clrf	(btemp+3)^0,c
 18403  01844E  D08B               	goto	l2660
 18404  018450                     l8384:
 18405                           
 18406                           ;stkvar	_f1 @ sp[(-2)+-4]
 18407  018450  0EFA               	movlw	-6
 18408  018452  006F FF8C  F030    	movff	plusw1,btemp+8
 18409  018458  0EFB               	movlw	-5
 18410  01845A  006F FF8C  F031    	movff	plusw1,btemp+9
 18411  018460  0EFC               	movlw	-4
 18412  018462  006F FF8C  F032    	movff	plusw1,btemp+10
 18413  018468  0EFD               	movlw	-3
 18414  01846A  006F FF8C  F033    	movff	plusw1,btemp+11
 18415  018470  0E20               	movlw	32
 18416  018472  D005               	goto	u6970
 18417  018474                     u6975:
 18418  018474  90D8               	bcf	status,0,c
 18419  018476  3233               	rrcf	(btemp+11)^0,f,c
 18420  018478  3232               	rrcf	(btemp+10)^0,f,c
 18421  01847A  3231               	rrcf	(btemp+9)^0,f,c
 18422  01847C  3230               	rrcf	(btemp+8)^0,f,c
 18423  01847E                     u6970:
 18424  01847E  2EE8               	decfsz	wreg,f,c
 18425  018480  D7F9               	goto	u6975
 18426                           
 18427                           ;stkvar	_sign1 @ sp[(-2)+1]
 18428  018482  0EFF               	movlw	-1
 18429  018484  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 18430                           
 18431                           ;stkvar	_f1 @ sp[(-2)+-4]
 18432  01848A  0EFC               	movlw	-4
 18433  01848C  8EE3               	bsf	plusw1,7,c
 18434                           
 18435                           ;stkvar	_f1 @ sp[(-2)+-4]
 18436  01848E  50E1               	movf	fsr1l,w,c
 18437  018490  0FFA               	addlw	-6
 18438  018492  6ED9               	movwf	fsr2l,c
 18439  018494  50E2               	movf	fsr1h,w,c
 18440  018496  6EDA               	movwf	fsr2h,c
 18441  018498  0EFF               	movlw	255
 18442  01849A  22DA               	addwfc	fsr2h,f,c
 18443  01849C  0EFF               	movlw	255
 18444  01849E  16DE               	andwf	postinc2,f,c
 18445  0184A0  0EFF               	movlw	255
 18446  0184A2  16DE               	andwf	postinc2,f,c
 18447  0184A4  0EFF               	movlw	255
 18448  0184A6  16DE               	andwf	postinc2,f,c
 18449  0184A8  0E00               	movlw	0
 18450  0184AA  16DE               	andwf	postinc2,f,c
 18451                           
 18452                           ;stkvar	_exp1 @ sp[(-2)+0]
 18453  0184AC  0EFE               	movlw	-2
 18454  0184AE  006F FF8C  F028    	movff	plusw1,btemp
 18455  0184B4  0E96               	movlw	150
 18456  0184B6  5E28               	subwf	btemp^0,f,c
 18457  0184B8  0EFE               	movlw	-2
 18458  0184BA  0060  F0A3  FFE3   	movff	btemp,plusw1
 18459                           
 18460                           ;stkvar	_exp1 @ sp[(-2)+0]
 18461  0184C0  0EFE               	movlw	-2
 18462  0184C2  AEE3               	btfss	plusw1,7,c
 18463  0184C4  D014               	goto	l8402
 18464                           
 18465                           ;stkvar	_exp1 @ sp[(-2)+0]
 18466  0184C6  0EFE               	movlw	-2
 18467  0184C8  50E3               	movf	plusw1,w,c
 18468  0184CA  0A80               	xorlw	128
 18469  0184CC  0F97               	addlw	151
 18470  0184CE  A0D8               	btfss	status,0,c
 18471  0184D0  D7B9               	goto	u6960
 18472  0184D2                     l8400:
 18473                           
 18474                           ;stkvar	_f1 @ sp[(-2)+-4]
 18475  0184D2  90D8               	bcf	status,0,c
 18476  0184D4  0EFD               	movlw	-3
 18477  0184D6  32E3               	rrcf	plusw1,f,c
 18478  0184D8  0EFC               	movlw	-4
 18479  0184DA  32E3               	rrcf	plusw1,f,c
 18480  0184DC  0EFB               	movlw	-5
 18481  0184DE  32E3               	rrcf	plusw1,f,c
 18482  0184E0  0EFA               	movlw	-6
 18483  0184E2  32E3               	rrcf	plusw1,f,c
 18484                           
 18485                           ;stkvar	_exp1 @ sp[(-2)+0]
 18486  0184E4  0EFE               	movlw	-2
 18487  0184E6  2AE3               	incf	plusw1,f,c
 18488  0184E8  B4D8               	btfsc	status,2,c
 18489  0184EA  D018               	goto	u7020
 18490  0184EC  D7F2               	goto	l8400
 18491  0184EE                     l8402:
 18492                           
 18493                           ;stkvar	_exp1 @ sp[(-2)+0]
 18494  0184EE  0EFE               	movlw	-2
 18495  0184F0  006F FF8C  F028    	movff	plusw1,btemp
 18496  0184F6  0E1F               	movlw	31
 18497  0184F8  6428               	cpfsgt	btemp^0,c
 18498  0184FA  D00C               	goto	l8410
 18499  0184FC  D7A3               	goto	u6960
 18500  0184FE                     l8408:
 18501                           
 18502                           ;stkvar	_f1 @ sp[(-2)+-4]
 18503  0184FE  90D8               	bcf	status,0,c
 18504  018500  0EFA               	movlw	-6
 18505  018502  36E3               	rlcf	plusw1,f,c
 18506  018504  0EFB               	movlw	-5
 18507  018506  36E3               	rlcf	plusw1,f,c
 18508  018508  0EFC               	movlw	-4
 18509  01850A  36E3               	rlcf	plusw1,f,c
 18510  01850C  0EFD               	movlw	-3
 18511  01850E  36E3               	rlcf	plusw1,f,c
 18512                           
 18513                           ;stkvar	_exp1 @ sp[(-2)+0]
 18514  018510  0EFE               	movlw	-2
 18515  018512  06E3               	decf	plusw1,f,c
 18516  018514                     l8410:
 18517                           
 18518                           ;stkvar	_exp1 @ sp[(-2)+0]
 18519  018514  0EFE               	movlw	-2
 18520  018516  50E3               	movf	plusw1,w,c
 18521  018518  A4D8               	btfss	status,2,c
 18522  01851A  D7F1               	goto	l8408
 18523  01851C                     u7020:
 18524                           
 18525                           ;stkvar	_sign1 @ sp[(-2)+1]
 18526  01851C  0EFF               	movlw	-1
 18527  01851E  50E3               	movf	plusw1,w,c
 18528  018520  B4D8               	btfsc	status,2,c
 18529  018522  D011               	goto	u7040
 18530                           
 18531                           ;stkvar	_f1 @ sp[(-2)+-4]
 18532                           ;stkvar	_f1 @ sp[(-2)+-4]
 18533  018524  0EFA               	movlw	-6
 18534  018526  6CE3               	negf	plusw1,c
 18535  018528  0EFB               	movlw	-5
 18536  01852A  1EE3               	comf	plusw1,f,c
 18537  01852C  0EFC               	movlw	-4
 18538  01852E  1EE3               	comf	plusw1,f,c
 18539  018530  0EFD               	movlw	-3
 18540  018532  1EE3               	comf	plusw1,f,c
 18541  018534  E308               	bnc	u7040
 18542  018536  0EFB               	movlw	-5
 18543  018538  2AE3               	incf	plusw1,f,c
 18544  01853A  E305               	bnc	u7040
 18545  01853C  0EFC               	movlw	-4
 18546  01853E  2AE3               	incf	plusw1,f,c
 18547  018540  E302               	bnc	u7040
 18548  018542  0EFD               	movlw	-3
 18549  018544  2AE3               	incf	plusw1,f,c
 18550  018546                     u7040:
 18551                           
 18552                           ;stkvar	_f1 @ sp[(-2)+-4]
 18553  018546  0EFA               	movlw	-6
 18554  018548  006F FF8C  F028    	movff	plusw1,btemp
 18555  01854E  0EFB               	movlw	-5
 18556  018550  006F FF8C  F029    	movff	plusw1,btemp+1
 18557  018556  0EFC               	movlw	-4
 18558  018558  006F FF8C  F02A    	movff	plusw1,btemp+2
 18559  01855E  0EFD               	movlw	-3
 18560  018560  006F FF8C  F02B    	movff	plusw1,btemp+3
 18561  018566                     l2660:
 18562                           
 18563                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18564  018566  0EFA               	movlw	250
 18565  018568  26E1               	addwf	fsr1l,f,c
 18566  01856A  0EFF               	movlw	255
 18567  01856C  22E2               	addwfc	fsr1h,f,c
 18568  01856E  0012               	return		;funcret
 18569  018570                     __end_of___fltol:
 18570                           	opt callstack 0
 18571                           
 18572 ;; *************** function ___flneg *****************
 18573 ;; Defined at:
 18574 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 18575 ;; Parameters:    Size  Location     Type
 18576 ;;  f1              4  [STACK] long 
 18577 ;; Auto vars:     Size  Location     Type
 18578 ;;		None
 18579 ;; Return value:  Size  Location     Type
 18580 ;;                  4  [STACK] long 
 18581 ;; Registers used:
 18582 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 18583 ;; Tracked objects:
 18584 ;;		On entry : 0/0
 18585 ;;		On exit  : 0/0
 18586 ;;		Unchanged: 0/0
 18587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18592 ;;Total ram usage:        0 bytes
 18593 ;; Hardware stack levels used:    1
 18594 ;; Hardware stack levels required when called:   15
 18595 ;; This function calls:
 18596 ;;		Nothing
 18597 ;; This function is called by:
 18598 ;;		_calc_bsoc
 18599 ;;		_efgtoa
 18600 ;; This function uses a reentrant model
 18601 ;;
 18602                           
 18603                           	psect	text62
 18604  01A9F4                     __ptext62:
 18605                           	opt callstack 0
 18606  01A9F4                     ___flneg:
 18607                           	opt callstack 0
 18608                           
 18609                           ;stkvar	_f1 @ sp[(0)+-4]
 18610                           
 18611                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18612                           ;incstack = 0
 18613 ;; hardware stack exceeded
 18614  01A9F4  0EFC               	movlw	-4
 18615  01A9F6  50E3               	movf	plusw1,w,c
 18616  01A9F8  E10A               	bnz	u6940
 18617  01A9FA  0EFD               	movlw	-3
 18618  01A9FC  50E3               	movf	plusw1,w,c
 18619  01A9FE  E107               	bnz	u6940
 18620  01AA00  0EFE               	movlw	-2
 18621  01AA02  50E3               	movf	plusw1,w,c
 18622  01AA04  E104               	bnz	u6940
 18623  01AA06  0EFF               	movlw	-1
 18624  01AA08  50E3               	movf	plusw1,w,c
 18625  01AA0A  B4D8               	btfsc	status,2,c
 18626  01AA0C  D002               	goto	l8374
 18627  01AA0E                     u6940:
 18628                           
 18629                           ;stkvar	_f1 @ sp[(0)+-4]
 18630  01AA0E  0EFF               	movlw	-1
 18631  01AA10  7EE3               	btg	plusw1,7,c
 18632  01AA12                     l8374:
 18633                           
 18634                           ;stkvar	_f1 @ sp[(0)+-4]
 18635  01AA12  0EFC               	movlw	-4
 18636  01AA14  006F FF8C  F028    	movff	plusw1,btemp
 18637  01AA1A  0EFD               	movlw	-3
 18638  01AA1C  006F FF8C  F029    	movff	plusw1,btemp+1
 18639  01AA22  0EFE               	movlw	-2
 18640  01AA24  006F FF8C  F02A    	movff	plusw1,btemp+2
 18641  01AA2A  0EFF               	movlw	-1
 18642  01AA2C  006F FF8C  F02B    	movff	plusw1,btemp+3
 18643                           
 18644                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18645  01AA32  52E5               	movf	postdec1,f,c
 18646  01AA34  52E5               	movf	postdec1,f,c
 18647  01AA36  52E5               	movf	postdec1,f,c
 18648  01AA38  52E5               	movf	postdec1,f,c
 18649  01AA3A  0012               	return		;funcret
 18650  01AA3C                     __end_of___flneg:
 18651                           	opt callstack 0
 18652                           
 18653 ;; *************** function ___fleq *****************
 18654 ;; Defined at:
 18655 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 18656 ;; Parameters:    Size  Location     Type
 18657 ;;  ff1             4  [STACK] long 
 18658 ;;  ff2             4  [STACK] long 
 18659 ;; Auto vars:     Size  Location     Type
 18660 ;;		None
 18661 ;; Return value:  Size  Location     Type
 18662 ;;		None               void
 18663 ;; Registers used:
 18664 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 18665 ;; Tracked objects:
 18666 ;;		On entry : 0/0
 18667 ;;		On exit  : 0/0
 18668 ;;		Unchanged: 0/0
 18669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18674 ;;Total ram usage:        0 bytes
 18675 ;; Hardware stack levels used:    1
 18676 ;; Hardware stack levels required when called:   15
 18677 ;; This function calls:
 18678 ;;		Nothing
 18679 ;; This function is called by:
 18680 ;;		_efgtoa
 18681 ;; This function uses a reentrant model
 18682 ;;
 18683                           
 18684                           	psect	text63
 18685  0199B8                     __ptext63:
 18686                           	opt callstack 0
 18687  0199B8                     ___fleq:
 18688                           	opt callstack 0
 18689                           
 18690                           ;stkvar	_ff1 @ sp[(0)+-4]
 18691                           
 18692                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18693                           ;incstack = 0
 18694 ;; hardware stack exceeded
 18695  0199B8  50E1               	movf	fsr1l,w,c
 18696  0199BA  0FFC               	addlw	-4
 18697  0199BC  6ED9               	movwf	fsr2l,c
 18698  0199BE  50E2               	movf	fsr1h,w,c
 18699  0199C0  6EDA               	movwf	fsr2h,c
 18700  0199C2  0EFF               	movlw	255
 18701  0199C4  22DA               	addwfc	fsr2h,f,c
 18702  0199C6  0E00               	movlw	0
 18703  0199C8  14DE               	andwf	postinc2,w,c
 18704  0199CA  6E30               	movwf	(btemp+8)^0,c
 18705  0199CC  0E00               	movlw	0
 18706  0199CE  14DE               	andwf	postinc2,w,c
 18707  0199D0  6E31               	movwf	(btemp+9)^0,c
 18708  0199D2  0E80               	movlw	128
 18709  0199D4  14DE               	andwf	postinc2,w,c
 18710  0199D6  6E32               	movwf	(btemp+10)^0,c
 18711  0199D8  0E7F               	movlw	127
 18712  0199DA  14DE               	andwf	postinc2,w,c
 18713  0199DC  6E33               	movwf	(btemp+11)^0,c
 18714  0199DE  5030               	movf	(btemp+8)^0,w,c
 18715  0199E0  1031               	iorwf	(btemp+9)^0,w,c
 18716  0199E2  1032               	iorwf	(btemp+10)^0,w,c
 18717  0199E4  1033               	iorwf	(btemp+11)^0,w,c
 18718  0199E6  A4D8               	btfss	status,2,c
 18719  0199E8  D008               	goto	l8332
 18720                           
 18721                           ;stkvar	_ff1 @ sp[(0)+-4]
 18722  0199EA  0EFC               	movlw	-4
 18723  0199EC  6AE3               	clrf	plusw1,c
 18724  0199EE  0EFD               	movlw	-3
 18725  0199F0  6AE3               	clrf	plusw1,c
 18726  0199F2  0EFE               	movlw	-2
 18727  0199F4  6AE3               	clrf	plusw1,c
 18728  0199F6  0EFF               	movlw	-1
 18729  0199F8  6AE3               	clrf	plusw1,c
 18730  0199FA                     l8332:
 18731                           
 18732                           ;stkvar	_ff2 @ sp[(0)+-8]
 18733  0199FA  50E1               	movf	fsr1l,w,c
 18734  0199FC  0FF8               	addlw	-8
 18735  0199FE  6ED9               	movwf	fsr2l,c
 18736  019A00  50E2               	movf	fsr1h,w,c
 18737  019A02  6EDA               	movwf	fsr2h,c
 18738  019A04  0EFF               	movlw	255
 18739  019A06  22DA               	addwfc	fsr2h,f,c
 18740  019A08  0E00               	movlw	0
 18741  019A0A  14DE               	andwf	postinc2,w,c
 18742  019A0C  6E30               	movwf	(btemp+8)^0,c
 18743  019A0E  0E00               	movlw	0
 18744  019A10  14DE               	andwf	postinc2,w,c
 18745  019A12  6E31               	movwf	(btemp+9)^0,c
 18746  019A14  0E80               	movlw	128
 18747  019A16  14DE               	andwf	postinc2,w,c
 18748  019A18  6E32               	movwf	(btemp+10)^0,c
 18749  019A1A  0E7F               	movlw	127
 18750  019A1C  14DE               	andwf	postinc2,w,c
 18751  019A1E  6E33               	movwf	(btemp+11)^0,c
 18752  019A20  5030               	movf	(btemp+8)^0,w,c
 18753  019A22  1031               	iorwf	(btemp+9)^0,w,c
 18754  019A24  1032               	iorwf	(btemp+10)^0,w,c
 18755  019A26  1033               	iorwf	(btemp+11)^0,w,c
 18756  019A28  A4D8               	btfss	status,2,c
 18757  019A2A  D008               	goto	l8336
 18758                           
 18759                           ;stkvar	_ff2 @ sp[(0)+-8]
 18760  019A2C  0EF8               	movlw	-8
 18761  019A2E  6AE3               	clrf	plusw1,c
 18762  019A30  0EF9               	movlw	-7
 18763  019A32  6AE3               	clrf	plusw1,c
 18764  019A34  0EFA               	movlw	-6
 18765  019A36  6AE3               	clrf	plusw1,c
 18766  019A38  0EFB               	movlw	-5
 18767  019A3A  6AE3               	clrf	plusw1,c
 18768  019A3C                     l8336:
 18769                           
 18770                           ;stkvar	_ff2 @ sp[(0)+-8]
 18771                           ;stkvar	_ff1 @ sp[(0)+-4]
 18772  019A3C  50E1               	movf	fsr1l,w,c
 18773  019A3E  0FFC               	addlw	-4
 18774  019A40  6ED9               	movwf	fsr2l,c
 18775  019A42  50E2               	movf	fsr1h,w,c
 18776  019A44  6EDA               	movwf	fsr2h,c
 18777  019A46  0EFF               	movlw	255
 18778  019A48  22DA               	addwfc	fsr2h,f,c
 18779  019A4A  0EF8               	movlw	-8
 18780  019A4C  50E3               	movf	plusw1,w,c
 18781  019A4E  18DE               	xorwf	postinc2,w,c
 18782  019A50  E10D               	bnz	u6880
 18783  019A52  0EF9               	movlw	-7
 18784  019A54  50E3               	movf	plusw1,w,c
 18785  019A56  18DE               	xorwf	postinc2,w,c
 18786  019A58  E109               	bnz	u6880
 18787  019A5A  0EFA               	movlw	-6
 18788  019A5C  50E3               	movf	plusw1,w,c
 18789  019A5E  18DE               	xorwf	postinc2,w,c
 18790  019A60  E105               	bnz	u6880
 18791  019A62  0EFB               	movlw	-5
 18792  019A64  50E3               	movf	plusw1,w,c
 18793  019A66  18DE               	xorwf	postinc2,w,c
 18794  019A68  B4D8               	btfsc	status,2,c
 18795  019A6A  D002               	goto	l8340
 18796  019A6C                     u6880:
 18797  019A6C  9028               	bcf	btemp& (0+255),0,c
 18798  019A6E  D001               	goto	l2622
 18799  019A70                     l8340:
 18800  019A70  8028               	bsf	btemp& (0+255),0,c
 18801  019A72                     l2622:
 18802                           
 18803                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 18804  019A72  0EF8               	movlw	248
 18805  019A74  26E1               	addwf	fsr1l,f,c
 18806  019A76  0EFF               	movlw	255
 18807  019A78  22E2               	addwfc	fsr1h,f,c
 18808  019A7A  0012               	return		;funcret
 18809  019A7C                     __end_of___fleq:
 18810                           	opt callstack 0
 18811                           
 18812 ;; *************** function ___awmod *****************
 18813 ;; Defined at:
 18814 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 18815 ;; Parameters:    Size  Location     Type
 18816 ;;  dividend        2  [STACK] int 
 18817 ;;  divisor         2  [STACK] int 
 18818 ;; Auto vars:     Size  Location     Type
 18819 ;;  sign            1  [STACK] unsigned char 
 18820 ;;  counter         1  [STACK] unsigned char 
 18821 ;; Return value:  Size  Location     Type
 18822 ;;                  2  [STACK] int 
 18823 ;; Registers used:
 18824 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 18825 ;; Tracked objects:
 18826 ;;		On entry : 0/0
 18827 ;;		On exit  : 0/0
 18828 ;;		Unchanged: 0/0
 18829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18833 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18834 ;;Total ram usage:        0 bytes
 18835 ;; Hardware stack levels used:    1
 18836 ;; Hardware stack levels required when called:   15
 18837 ;; This function calls:
 18838 ;;		Nothing
 18839 ;; This function is called by:
 18840 ;;		_efgtoa
 18841 ;; This function uses a reentrant model
 18842 ;;
 18843                           
 18844                           	psect	text64
 18845  018FC6                     __ptext64:
 18846                           	opt callstack 0
 18847  018FC6                     ___awmod:
 18848                           	opt callstack 0
 18849                           
 18850                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18851  018FC6  52E6               	movf	postinc1,f,c
 18852  018FC8  52E6               	movf	postinc1,f,c
 18853                           
 18854                           ;stkvar	_sign @ sp[(-2)+0]
 18855                           
 18856                           ;incstack = 0
 18857 ;; hardware stack exceeded
 18858  018FCA  0EFE               	movlw	-2
 18859  018FCC  6AE3               	clrf	plusw1,c
 18860                           
 18861                           ;stkvar	_dividend @ sp[(-2)+-2]
 18862  018FCE  0EFD               	movlw	-3
 18863  018FD0  AEE3               	btfss	plusw1,7,c
 18864  018FD2  D009               	goto	l8298
 18865                           
 18866                           ;stkvar	_dividend @ sp[(-2)+-2]
 18867                           ;stkvar	_dividend @ sp[(-2)+-2]
 18868  018FD4  0EFC               	movlw	-4
 18869  018FD6  6CE3               	negf	plusw1,c
 18870  018FD8  0EFD               	movlw	-3
 18871  018FDA  1EE3               	comf	plusw1,f,c
 18872  018FDC  B0D8               	btfsc	status,0,c
 18873  018FDE  2AE3               	incf	plusw1,f,c
 18874                           
 18875                           ;stkvar	_sign @ sp[(-2)+0]
 18876  018FE0  0EFE               	movlw	-2
 18877  018FE2  6AE3               	clrf	plusw1,c
 18878  018FE4  2AE3               	incf	plusw1,f,c
 18879  018FE6                     l8298:
 18880                           
 18881                           ;stkvar	_divisor @ sp[(-2)+-4]
 18882  018FE6  0EFB               	movlw	-5
 18883  018FE8  AEE3               	btfss	plusw1,7,c
 18884  018FEA  D006               	goto	l8302
 18885                           
 18886                           ;stkvar	_divisor @ sp[(-2)+-4]
 18887                           ;stkvar	_divisor @ sp[(-2)+-4]
 18888  018FEC  0EFA               	movlw	-6
 18889  018FEE  6CE3               	negf	plusw1,c
 18890  018FF0  0EFB               	movlw	-5
 18891  018FF2  1EE3               	comf	plusw1,f,c
 18892  018FF4  B0D8               	btfsc	status,0,c
 18893  018FF6  2AE3               	incf	plusw1,f,c
 18894  018FF8                     l8302:
 18895                           
 18896                           ;stkvar	_divisor @ sp[(-2)+-4]
 18897  018FF8  0EFA               	movlw	-6
 18898  018FFA  006F FF8C  F028    	movff	plusw1,btemp
 18899  019000  0EFB               	movlw	-5
 18900  019002  50E3               	movf	plusw1,w,c
 18901  019004  1028               	iorwf	btemp^0,w,c
 18902  019006  B4D8               	btfsc	status,2,c
 18903  019008  D053               	goto	u6840
 18904                           
 18905                           ;stkvar	_counter @ sp[(-2)+1]
 18906  01900A  0EFF               	movlw	-1
 18907  01900C  6AE3               	clrf	plusw1,c
 18908  01900E  D012               	goto	L20
 18909  019010                     l8306:
 18910                           
 18911                           ;stkvar	_divisor @ sp[(-2)+-4]
 18912  019010  0EFA               	movlw	-6
 18913  019012  50E3               	movf	plusw1,w,c
 18914  019014  90D8               	bcf	status,0,c
 18915  019016  34E8               	rlcf	wreg,w,c
 18916  019018  6E28               	movwf	btemp^0,c
 18917  01901A  0EFA               	movlw	-6
 18918  01901C  0060  F0A3  FFE3   	movff	btemp,plusw1
 18919  019022  0EFB               	movlw	-5
 18920  019024  50E3               	movf	plusw1,w,c
 18921  019026  34E8               	rlcf	wreg,w,c
 18922  019028  6E28               	movwf	btemp^0,c
 18923  01902A  0EFB               	movlw	-5
 18924  01902C  0060  F0A3  FFE3   	movff	btemp,plusw1
 18925                           
 18926                           ;stkvar	_counter @ sp[(-2)+1]
 18927  019032  0EFF               	movlw	-1
 18928  019034                     L20:
 18929  019034  2AE3               	incf	plusw1,f,c
 18930                           
 18931                           ;stkvar	_divisor @ sp[(-2)+-4]
 18932  019036  0EFB               	movlw	-5
 18933  019038  AEE3               	btfss	plusw1,7,c
 18934  01903A  D7EA               	goto	l8306
 18935  01903C                     u6820:
 18936                           
 18937                           ;stkvar	_divisor @ sp[(-2)+-4]
 18938  01903C  0EFA               	movlw	-6
 18939  01903E  006F FF8C  F032    	movff	plusw1,btemp+10
 18940  019044  0EFB               	movlw	-5
 18941  019046  006F FF8C  F033    	movff	plusw1,btemp+11
 18942                           
 18943                           ;stkvar	_dividend @ sp[(-2)+-2]
 18944  01904C  0EFC               	movlw	-4
 18945  01904E  006F FF8C  F030    	movff	plusw1,btemp+8
 18946  019054  0EFD               	movlw	-3
 18947  019056  006F FF8C  F031    	movff	plusw1,btemp+9
 18948  01905C  5032               	movf	(btemp+10)^0,w,c
 18949  01905E  5C30               	subwf	(btemp+8)^0,w,c
 18950  019060  5033               	movf	(btemp+11)^0,w,c
 18951  019062  5831               	subwfb	(btemp+9)^0,w,c
 18952  019064  A0D8               	btfss	status,0,c
 18953  019066  D014               	goto	l8316
 18954                           
 18955                           ;stkvar	_divisor @ sp[(-2)+-4]
 18956                           ;stkvar	_dividend @ sp[(-2)+-2]
 18957  019068  0EFC               	movlw	-4
 18958  01906A  50E3               	movf	plusw1,w,c
 18959  01906C  6E28               	movwf	btemp^0,c
 18960  01906E  0EFA               	movlw	-6
 18961  019070  50E3               	movf	plusw1,w,c
 18962  019072  5E28               	subwf	btemp^0,f,c
 18963  019074  0EFC               	movlw	-4
 18964  019076  0060  F0A3  FFE3   	movff	btemp,plusw1
 18965  01907C  0EFD               	movlw	-3
 18966  01907E  50E3               	movf	plusw1,w,c
 18967  019080  6E28               	movwf	btemp^0,c
 18968  019082  0EFB               	movlw	-5
 18969  019084  50E3               	movf	plusw1,w,c
 18970  019086  5A28               	subwfb	btemp^0,f,c
 18971  019088  0EFD               	movlw	-3
 18972  01908A  0060  F0A3  FFE3   	movff	btemp,plusw1
 18973  019090                     l8316:
 18974                           
 18975                           ;stkvar	_divisor @ sp[(-2)+-4]
 18976  019090  90D8               	bcf	status,0,c
 18977  019092  0EFB               	movlw	-5
 18978  019094  32E3               	rrcf	plusw1,f,c
 18979  019096  0EFA               	movlw	-6
 18980  019098  32E3               	rrcf	plusw1,f,c
 18981                           
 18982                           ;stkvar	_counter @ sp[(-2)+1]
 18983  01909A  0EFF               	movlw	-1
 18984  01909C  50E3               	movf	plusw1,w,c
 18985  01909E  6E28               	movwf	btemp^0,c
 18986  0190A0  0E01               	movlw	1
 18987  0190A2  5E28               	subwf	btemp^0,f,c
 18988  0190A4  0EFF               	movlw	-1
 18989  0190A6  0060  F0A3  FFE3   	movff	btemp,plusw1
 18990  0190AC  A4D8               	btfss	status,2,c
 18991  0190AE  D7C6               	goto	u6820
 18992  0190B0                     u6840:
 18993                           
 18994                           ;stkvar	_sign @ sp[(-2)+0]
 18995  0190B0  0EFE               	movlw	-2
 18996  0190B2  50E3               	movf	plusw1,w,c
 18997  0190B4  B4D8               	btfsc	status,2,c
 18998  0190B6  D006               	goto	l8324
 18999                           
 19000                           ;stkvar	_dividend @ sp[(-2)+-2]
 19001                           ;stkvar	_dividend @ sp[(-2)+-2]
 19002  0190B8  0EFC               	movlw	-4
 19003  0190BA  6CE3               	negf	plusw1,c
 19004  0190BC  0EFD               	movlw	-3
 19005  0190BE  1EE3               	comf	plusw1,f,c
 19006  0190C0  B0D8               	btfsc	status,0,c
 19007  0190C2  2AE3               	incf	plusw1,f,c
 19008  0190C4                     l8324:
 19009                           
 19010                           ;stkvar	_dividend @ sp[(-2)+-2]
 19011  0190C4  0EFC               	movlw	-4
 19012  0190C6  006F FF8C  F028    	movff	plusw1,btemp
 19013  0190CC  0EFD               	movlw	-3
 19014  0190CE  006F FF8C  F029    	movff	plusw1,btemp+1
 19015                           
 19016                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 19017  0190D4  0EFA               	movlw	250
 19018  0190D6  26E1               	addwf	fsr1l,f,c
 19019  0190D8  0EFF               	movlw	255
 19020  0190DA  22E2               	addwfc	fsr1h,f,c
 19021  0190DC  0012               	return		;funcret
 19022  0190DE                     __end_of___awmod:
 19023                           	opt callstack 0
 19024                           
 19025 ;; *************** function ___awdiv *****************
 19026 ;; Defined at:
 19027 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 19028 ;; Parameters:    Size  Location     Type
 19029 ;;  dividend        2  [STACK] int 
 19030 ;;  divisor         2  [STACK] int 
 19031 ;; Auto vars:     Size  Location     Type
 19032 ;;  quotient        2  [STACK] int 
 19033 ;;  sign            1  [STACK] unsigned char 
 19034 ;;  counter         1  [STACK] unsigned char 
 19035 ;; Return value:  Size  Location     Type
 19036 ;;                  2  [STACK] int 
 19037 ;; Registers used:
 19038 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 19039 ;; Tracked objects:
 19040 ;;		On entry : 0/0
 19041 ;;		On exit  : 0/0
 19042 ;;		Unchanged: 0/0
 19043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19047 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19048 ;;Total ram usage:        0 bytes
 19049 ;; Hardware stack levels used:    1
 19050 ;; Hardware stack levels required when called:   15
 19051 ;; This function calls:
 19052 ;;		Nothing
 19053 ;; This function is called by:
 19054 ;;		_efgtoa
 19055 ;; This function uses a reentrant model
 19056 ;;
 19057                           
 19058                           	psect	text65
 19059  0189A6                     __ptext65:
 19060                           	opt callstack 0
 19061  0189A6                     ___awdiv:
 19062                           	opt callstack 0
 19063                           
 19064                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19065  0189A6  52E6               	movf	postinc1,f,c
 19066  0189A8  52E6               	movf	postinc1,f,c
 19067  0189AA  52E6               	movf	postinc1,f,c
 19068  0189AC  52E6               	movf	postinc1,f,c
 19069                           
 19070                           ;stkvar	_sign @ sp[(-4)+2]
 19071                           
 19072                           ;incstack = 0
 19073 ;; hardware stack exceeded
 19074  0189AE  0EFE               	movlw	-2
 19075  0189B0  6AE3               	clrf	plusw1,c
 19076                           
 19077                           ;stkvar	_divisor @ sp[(-4)+-4]
 19078  0189B2  0EF9               	movlw	-7
 19079  0189B4  AEE3               	btfss	plusw1,7,c
 19080  0189B6  D009               	goto	l8252
 19081                           
 19082                           ;stkvar	_divisor @ sp[(-4)+-4]
 19083                           ;stkvar	_divisor @ sp[(-4)+-4]
 19084  0189B8  0EF8               	movlw	-8
 19085  0189BA  6CE3               	negf	plusw1,c
 19086  0189BC  0EF9               	movlw	-7
 19087  0189BE  1EE3               	comf	plusw1,f,c
 19088  0189C0  B0D8               	btfsc	status,0,c
 19089  0189C2  2AE3               	incf	plusw1,f,c
 19090                           
 19091                           ;stkvar	_sign @ sp[(-4)+2]
 19092  0189C4  0EFE               	movlw	-2
 19093  0189C6  6AE3               	clrf	plusw1,c
 19094  0189C8  2AE3               	incf	plusw1,f,c
 19095  0189CA                     l8252:
 19096                           
 19097                           ;stkvar	_dividend @ sp[(-4)+-2]
 19098  0189CA  0EFB               	movlw	-5
 19099  0189CC  AEE3               	btfss	plusw1,7,c
 19100  0189CE  D008               	goto	l8258
 19101                           
 19102                           ;stkvar	_dividend @ sp[(-4)+-2]
 19103                           ;stkvar	_dividend @ sp[(-4)+-2]
 19104  0189D0  0EFA               	movlw	-6
 19105  0189D2  6CE3               	negf	plusw1,c
 19106  0189D4  0EFB               	movlw	-5
 19107  0189D6  1EE3               	comf	plusw1,f,c
 19108  0189D8  B0D8               	btfsc	status,0,c
 19109  0189DA  2AE3               	incf	plusw1,f,c
 19110                           
 19111                           ;stkvar	_sign @ sp[(-4)+2]
 19112  0189DC  0EFE               	movlw	-2
 19113  0189DE  70E3               	btg	plusw1,0,c
 19114  0189E0                     l8258:
 19115                           
 19116                           ;stkvar	_quotient @ sp[(-4)+0]
 19117  0189E0  0EFC               	movlw	-4
 19118  0189E2  6AE3               	clrf	plusw1,c
 19119  0189E4  0EFD               	movlw	-3
 19120  0189E6  6AE3               	clrf	plusw1,c
 19121                           
 19122                           ;stkvar	_divisor @ sp[(-4)+-4]
 19123  0189E8  0EF8               	movlw	-8
 19124  0189EA  006F FF8C  F028    	movff	plusw1,btemp
 19125  0189F0  0EF9               	movlw	-7
 19126  0189F2  50E3               	movf	plusw1,w,c
 19127  0189F4  1028               	iorwf	btemp^0,w,c
 19128  0189F6  B4D8               	btfsc	status,2,c
 19129  0189F8  D066               	goto	u6770
 19130                           
 19131                           ;stkvar	_counter @ sp[(-4)+3]
 19132  0189FA  0EFF               	movlw	-1
 19133  0189FC  6AE3               	clrf	plusw1,c
 19134  0189FE  D012               	goto	L21
 19135  018A00                     l8264:
 19136                           
 19137                           ;stkvar	_divisor @ sp[(-4)+-4]
 19138  018A00  0EF8               	movlw	-8
 19139  018A02  50E3               	movf	plusw1,w,c
 19140  018A04  90D8               	bcf	status,0,c
 19141  018A06  34E8               	rlcf	wreg,w,c
 19142  018A08  6E28               	movwf	btemp^0,c
 19143  018A0A  0EF8               	movlw	-8
 19144  018A0C  0060  F0A3  FFE3   	movff	btemp,plusw1
 19145  018A12  0EF9               	movlw	-7
 19146  018A14  50E3               	movf	plusw1,w,c
 19147  018A16  34E8               	rlcf	wreg,w,c
 19148  018A18  6E28               	movwf	btemp^0,c
 19149  018A1A  0EF9               	movlw	-7
 19150  018A1C  0060  F0A3  FFE3   	movff	btemp,plusw1
 19151                           
 19152                           ;stkvar	_counter @ sp[(-4)+3]
 19153  018A22  0EFF               	movlw	-1
 19154  018A24                     L21:
 19155  018A24  2AE3               	incf	plusw1,f,c
 19156                           
 19157                           ;stkvar	_divisor @ sp[(-4)+-4]
 19158  018A26  0EF9               	movlw	-7
 19159  018A28  AEE3               	btfss	plusw1,7,c
 19160  018A2A  D7EA               	goto	l8264
 19161  018A2C                     u6750:
 19162                           
 19163                           ;stkvar	_quotient @ sp[(-4)+0]
 19164  018A2C  0EFC               	movlw	-4
 19165  018A2E  50E3               	movf	plusw1,w,c
 19166  018A30  90D8               	bcf	status,0,c
 19167  018A32  34E8               	rlcf	wreg,w,c
 19168  018A34  6E28               	movwf	btemp^0,c
 19169  018A36  0EFC               	movlw	-4
 19170  018A38  0060  F0A3  FFE3   	movff	btemp,plusw1
 19171  018A3E  0EFD               	movlw	-3
 19172  018A40  50E3               	movf	plusw1,w,c
 19173  018A42  34E8               	rlcf	wreg,w,c
 19174  018A44  6E28               	movwf	btemp^0,c
 19175  018A46  0EFD               	movlw	-3
 19176  018A48  0060  F0A3  FFE3   	movff	btemp,plusw1
 19177                           
 19178                           ;stkvar	_divisor @ sp[(-4)+-4]
 19179  018A4E  0EF8               	movlw	-8
 19180  018A50  006F FF8C  F032    	movff	plusw1,btemp+10
 19181  018A56  0EF9               	movlw	-7
 19182  018A58  006F FF8C  F033    	movff	plusw1,btemp+11
 19183                           
 19184                           ;stkvar	_dividend @ sp[(-4)+-2]
 19185  018A5E  0EFA               	movlw	-6
 19186  018A60  006F FF8C  F030    	movff	plusw1,btemp+8
 19187  018A66  0EFB               	movlw	-5
 19188  018A68  006F FF8C  F031    	movff	plusw1,btemp+9
 19189  018A6E  5032               	movf	(btemp+10)^0,w,c
 19190  018A70  5C30               	subwf	(btemp+8)^0,w,c
 19191  018A72  5033               	movf	(btemp+11)^0,w,c
 19192  018A74  5831               	subwfb	(btemp+9)^0,w,c
 19193  018A76  A0D8               	btfss	status,0,c
 19194  018A78  D016               	goto	l8278
 19195                           
 19196                           ;stkvar	_divisor @ sp[(-4)+-4]
 19197                           ;stkvar	_dividend @ sp[(-4)+-2]
 19198  018A7A  0EFA               	movlw	-6
 19199  018A7C  50E3               	movf	plusw1,w,c
 19200  018A7E  6E28               	movwf	btemp^0,c
 19201  018A80  0EF8               	movlw	-8
 19202  018A82  50E3               	movf	plusw1,w,c
 19203  018A84  5E28               	subwf	btemp^0,f,c
 19204  018A86  0EFA               	movlw	-6
 19205  018A88  0060  F0A3  FFE3   	movff	btemp,plusw1
 19206  018A8E  0EFB               	movlw	-5
 19207  018A90  50E3               	movf	plusw1,w,c
 19208  018A92  6E28               	movwf	btemp^0,c
 19209  018A94  0EF9               	movlw	-7
 19210  018A96  50E3               	movf	plusw1,w,c
 19211  018A98  5A28               	subwfb	btemp^0,f,c
 19212  018A9A  0EFB               	movlw	-5
 19213  018A9C  0060  F0A3  FFE3   	movff	btemp,plusw1
 19214                           
 19215                           ;stkvar	_quotient @ sp[(-4)+0]
 19216  018AA2  0EFC               	movlw	-4
 19217  018AA4  80E3               	bsf	plusw1,0,c
 19218  018AA6                     l8278:
 19219                           
 19220                           ;stkvar	_divisor @ sp[(-4)+-4]
 19221  018AA6  90D8               	bcf	status,0,c
 19222  018AA8  0EF9               	movlw	-7
 19223  018AAA  32E3               	rrcf	plusw1,f,c
 19224  018AAC  0EF8               	movlw	-8
 19225  018AAE  32E3               	rrcf	plusw1,f,c
 19226                           
 19227                           ;stkvar	_counter @ sp[(-4)+3]
 19228  018AB0  0EFF               	movlw	-1
 19229  018AB2  50E3               	movf	plusw1,w,c
 19230  018AB4  6E28               	movwf	btemp^0,c
 19231  018AB6  0E01               	movlw	1
 19232  018AB8  5E28               	subwf	btemp^0,f,c
 19233  018ABA  0EFF               	movlw	-1
 19234  018ABC  0060  F0A3  FFE3   	movff	btemp,plusw1
 19235  018AC2  A4D8               	btfss	status,2,c
 19236  018AC4  D7B3               	goto	u6750
 19237  018AC6                     u6770:
 19238                           
 19239                           ;stkvar	_sign @ sp[(-4)+2]
 19240  018AC6  0EFE               	movlw	-2
 19241  018AC8  50E3               	movf	plusw1,w,c
 19242  018ACA  B4D8               	btfsc	status,2,c
 19243  018ACC  D006               	goto	l8286
 19244                           
 19245                           ;stkvar	_quotient @ sp[(-4)+0]
 19246                           ;stkvar	_quotient @ sp[(-4)+0]
 19247  018ACE  0EFC               	movlw	-4
 19248  018AD0  6CE3               	negf	plusw1,c
 19249  018AD2  0EFD               	movlw	-3
 19250  018AD4  1EE3               	comf	plusw1,f,c
 19251  018AD6  B0D8               	btfsc	status,0,c
 19252  018AD8  2AE3               	incf	plusw1,f,c
 19253  018ADA                     l8286:
 19254                           
 19255                           ;stkvar	_quotient @ sp[(-4)+0]
 19256  018ADA  0EFC               	movlw	-4
 19257  018ADC  006F FF8C  F028    	movff	plusw1,btemp
 19258  018AE2  0EFD               	movlw	-3
 19259  018AE4  006F FF8C  F029    	movff	plusw1,btemp+1
 19260                           
 19261                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 19262  018AEA  0EF8               	movlw	248
 19263  018AEC  26E1               	addwf	fsr1l,f,c
 19264  018AEE  0EFF               	movlw	255
 19265  018AF0  22E2               	addwfc	fsr1h,f,c
 19266  018AF2  0012               	return		;funcret
 19267  018AF4                     __end_of___awdiv:
 19268                           	opt callstack 0
 19269                           
 19270 ;; *************** function _dtoa *****************
 19271 ;; Defined at:
 19272 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 19273 ;; Parameters:    Size  Location     Type
 19274 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19275 ;;		 -> f(6), NULL(0), 
 19276 ;;  d               8  [STACK] long long 
 19277 ;; Auto vars:     Size  Location     Type
 19278 ;;  n               8  [STACK] long long 
 19279 ;;  i               2  [STACK] int 
 19280 ;;  s               2  [STACK] int 
 19281 ;;  w               2  [STACK] int 
 19282 ;;  p               2  [STACK] int 
 19283 ;; Return value:  Size  Location     Type
 19284 ;;                  2  [STACK] int 
 19285 ;; Registers used:
 19286 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 19287 ;; Tracked objects:
 19288 ;;		On entry : 0/0
 19289 ;;		On exit  : 0/0
 19290 ;;		Unchanged: 0/0
 19291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19295 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19296 ;;Total ram usage:        0 bytes
 19297 ;; Hardware stack levels used:    1
 19298 ;; Hardware stack levels required when called:   20
 19299 ;; This function calls:
 19300 ;;		___aodiv
 19301 ;;		___aomod
 19302 ;;		_abs
 19303 ;;		_pad
 19304 ;; This function is called by:
 19305 ;;		_vfpfcnvrt
 19306 ;; This function uses a reentrant model
 19307 ;;
 19308                           
 19309                           	psect	text66
 19310  01535C                     __ptext66:
 19311                           	opt callstack 0
 19312  01535C                     _dtoa:
 19313                           	opt callstack 0
 19314                           
 19315                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 19316  01535C  0E12               	movlw	18
 19317  01535E  26E1               	addwf	fsr1l,f,c
 19318  015360  0E00               	movlw	0
 19319  015362  22E2               	addwfc	fsr1h,f,c
 19320                           
 19321                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 19322                           ;stkvar	_d @ sp[(-18)+-10]
 19323                           
 19324                           ;incstack = 0
 19325 ;; hardware stack exceeded
 19326  015364  0EE4               	movlw	228
 19327  015366  24E1               	addwf	fsr1l,w,c
 19328  015368  6ED9               	movwf	fsr2l,c
 19329  01536A  0EFF               	movlw	255
 19330  01536C  20E2               	addwfc	fsr1h,w,c
 19331  01536E  6EDA               	movwf	fsr2h,c
 19332                           
 19333                           ;stkvar	_n @ sp[(-18)+2]
 19334  015370  0E08               	movlw	8
 19335  015372  6E28               	movwf	btemp^0,c
 19336  015374  0EF0               	movlw	-16
 19337  015376                     us1047999:
 19338  015376  006F FF7B FFE3     	movff	postinc2,plusw1
 19339  01537C  28E8               	incf	wreg,w,c
 19340  01537E  2E28               	decfsz	btemp^0,f,c
 19341  015380  D7FA               	bra	us1047999
 19342                           
 19343                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 19344                           ;stkvar	_n @ sp[(-18)+2]
 19345  015382  0EF7               	movlw	-9
 19346  015384  AEE3               	btfss	plusw1,7,c
 19347  015386  D002               	goto	u10480
 19348  015388  0E01               	movlw	1
 19349  01538A  D001               	goto	u10490
 19350  01538C                     u10480:
 19351  01538C  0E00               	movlw	0
 19352  01538E                     u10490:
 19353  01538E  6E32               	movwf	(btemp+10)^0,c
 19354  015390  6A33               	clrf	(btemp+11)^0,c
 19355                           
 19356                           ;stkvar	_s @ sp[(-18)+12]
 19357  015392  0EFA               	movlw	-6
 19358  015394  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 19359  01539A  0EFB               	movlw	-5
 19360  01539C  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 19361                           
 19362                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 19363                           ;stkvar	_s @ sp[(-18)+12]
 19364  0153A2  0EFA               	movlw	-6
 19365  0153A4  006F FF8C  F028    	movff	plusw1,btemp
 19366  0153AA  0EFB               	movlw	-5
 19367  0153AC  50E3               	movf	plusw1,w,c
 19368  0153AE  1028               	iorwf	btemp^0,w,c
 19369  0153B0  B4D8               	btfsc	status,2,c
 19370  0153B2  D025               	goto	u10510
 19371                           
 19372                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 19373                           ;stkvar	_n @ sp[(-18)+2]
 19374                           ;stkvar	_n @ sp[(-18)+2]
 19375  0153B4  0EF0               	movlw	-16
 19376  0153B6  6CE3               	negf	plusw1,c
 19377  0153B8  0EF1               	movlw	-15
 19378  0153BA  1EE3               	comf	plusw1,f,c
 19379  0153BC  0EF2               	movlw	-14
 19380  0153BE  1EE3               	comf	plusw1,f,c
 19381  0153C0  0EF3               	movlw	-13
 19382  0153C2  1EE3               	comf	plusw1,f,c
 19383  0153C4  0EF4               	movlw	-12
 19384  0153C6  1EE3               	comf	plusw1,f,c
 19385  0153C8  0EF5               	movlw	-11
 19386  0153CA  1EE3               	comf	plusw1,f,c
 19387  0153CC  0EF6               	movlw	-10
 19388  0153CE  1EE3               	comf	plusw1,f,c
 19389  0153D0  0EF7               	movlw	-9
 19390  0153D2  1EE3               	comf	plusw1,f,c
 19391  0153D4  E314               	bnc	u10510
 19392  0153D6  0EF1               	movlw	-15
 19393  0153D8  2AE3               	incf	plusw1,f,c
 19394  0153DA  E311               	bnc	u10510
 19395  0153DC  0EF2               	movlw	-14
 19396  0153DE  2AE3               	incf	plusw1,f,c
 19397  0153E0  E30E               	bnc	u10510
 19398  0153E2  0EF3               	movlw	-13
 19399  0153E4  2AE3               	incf	plusw1,f,c
 19400  0153E6  E30B               	bnc	u10510
 19401  0153E8  0EF4               	movlw	-12
 19402  0153EA  2AE3               	incf	plusw1,f,c
 19403  0153EC  E308               	bnc	u10510
 19404  0153EE  0EF5               	movlw	-11
 19405  0153F0  2AE3               	incf	plusw1,f,c
 19406  0153F2  E305               	bnc	u10510
 19407  0153F4  0EF6               	movlw	-10
 19408  0153F6  2AE3               	incf	plusw1,f,c
 19409  0153F8  E302               	bnc	u10510
 19410  0153FA  0EF7               	movlw	-9
 19411  0153FC  2AE3               	incf	plusw1,f,c
 19412  0153FE                     u10510:
 19413                           
 19414                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 19415  0153FE  AE4B               	btfss	(_prec+1)^0,7,c
 19416                           
 19417                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 19418  015400  924C               	bcf	_flags^0,1,c
 19419                           
 19420                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 19421  015402  BE4B               	btfsc	(_prec+1)^0,7,c
 19422  015404  D005               	goto	u10530
 19423  015406  504B               	movf	(_prec+1)^0,w,c
 19424  015408  E110               	bnz	l11506
 19425  01540A  044A               	decf	_prec^0,w,c
 19426  01540C  B0D8               	btfsc	status,0,c
 19427  01540E  D00D               	goto	l11506
 19428  015410                     u10530:
 19429  015410  0E01               	movlw	1
 19430  015412  6E32               	movwf	(btemp+10)^0,c
 19431  015414  0E00               	movlw	0
 19432  015416  6E33               	movwf	(btemp+11)^0,c
 19433                           
 19434                           ;stkvar	_p @ sp[(-18)+16]
 19435  015418  0EFE               	movlw	-2
 19436  01541A  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 19437  015420  0EFF               	movlw	-1
 19438  015422  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 19439  015428  D008               	goto	l2126
 19440  01542A                     l11506:
 19441                           
 19442                           ;stkvar	_p @ sp[(-18)+16]
 19443  01542A  0EFE               	movlw	-2
 19444  01542C  0060  F12B  FFE3   	movff	_prec,plusw1
 19445  015432  0EFF               	movlw	-1
 19446  015434  0060  F12F  FFE3   	movff	_prec+1,plusw1
 19447  01543A                     l2126:
 19448                           
 19449                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 19450                           ;stkvar	_w @ sp[(-18)+14]
 19451  01543A  0EFC               	movlw	-4
 19452  01543C  0060  F123  FFE3   	movff	_width,plusw1
 19453  015442  0EFD               	movlw	-3
 19454  015444  0060  F127  FFE3   	movff	_width+1,plusw1
 19455                           
 19456                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 19457                           ;stkvar	_s @ sp[(-18)+12]
 19458  01544A  0EFA               	movlw	-6
 19459  01544C  006F FF8C  F028    	movff	plusw1,btemp
 19460  015452  0EFB               	movlw	-5
 19461  015454  50E3               	movf	plusw1,w,c
 19462  015456  1028               	iorwf	btemp^0,w,c
 19463  015458  A4D8               	btfss	status,2,c
 19464  01545A  D002               	goto	u10550
 19465  01545C  A44C               	btfss	_flags^0,2,c
 19466  01545E  D00A               	goto	l11514
 19467  015460                     u10550:
 19468                           
 19469                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 19470                           ;stkvar	_w @ sp[(-18)+14]
 19471  015460  50E1               	movf	fsr1l,w,c
 19472  015462  0FFC               	addlw	-4
 19473  015464  6ED9               	movwf	fsr2l,c
 19474  015466  50E2               	movf	fsr1h,w,c
 19475  015468  6EDA               	movwf	fsr2h,c
 19476  01546A  0EFF               	movlw	255
 19477  01546C  22DA               	addwfc	fsr2h,f,c
 19478  01546E  06DE               	decf	postinc2,f,c
 19479  015470  0E00               	movlw	0
 19480  015472  5ADD               	subwfb	postdec2,f,c
 19481  015474                     l11514:
 19482                           
 19483                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 19484  015474  0E4F               	movlw	79
 19485  015476  6E32               	movwf	(btemp+10)^0,c
 19486  015478  0E00               	movlw	0
 19487  01547A  6E33               	movwf	(btemp+11)^0,c
 19488                           
 19489                           ;stkvar	_i @ sp[(-18)+10]
 19490  01547C  0EF8               	movlw	-8
 19491  01547E  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 19492  015484  0EF9               	movlw	-7
 19493  015486  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 19494                           
 19495                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 19496  01548C  0103               	movlb	3	; () banked
 19497  01548E  6BE3               	clrf	(_dbuf+79)& (0+255),b
 19498                           
 19499                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 19500  015490  D109               	goto	l11528
 19501  015492                     l11518:
 19502                           
 19503                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 19504                           ;stkvar	_i @ sp[(-18)+10]
 19505  015492  50E1               	movf	fsr1l,w,c
 19506  015494  0FF8               	addlw	-8
 19507  015496  6ED9               	movwf	fsr2l,c
 19508  015498  50E2               	movf	fsr1h,w,c
 19509  01549A  6EDA               	movwf	fsr2h,c
 19510  01549C  0EFF               	movlw	255
 19511  01549E  22DA               	addwfc	fsr2h,f,c
 19512  0154A0  06DE               	decf	postinc2,f,c
 19513  0154A2  0E00               	movlw	0
 19514  0154A4  5ADD               	subwfb	postdec2,f,c
 19515                           
 19516                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 19517  0154A6  0E0A               	movlw	10
 19518  0154A8  6EE6               	movwf	postinc1,c
 19519  0154AA  0E00               	movlw	0
 19520  0154AC  6EE6               	movwf	postinc1,c
 19521  0154AE  0E00               	movlw	0
 19522  0154B0  6EE6               	movwf	postinc1,c
 19523  0154B2  0E00               	movlw	0
 19524  0154B4  6EE6               	movwf	postinc1,c
 19525  0154B6  0E00               	movlw	0
 19526  0154B8  6EE6               	movwf	postinc1,c
 19527  0154BA  0E00               	movlw	0
 19528  0154BC  6EE6               	movwf	postinc1,c
 19529  0154BE  0E00               	movlw	0
 19530  0154C0  6EE6               	movwf	postinc1,c
 19531  0154C2  0E00               	movlw	0
 19532  0154C4  6EE6               	movwf	postinc1,c
 19533                           
 19534                           ;stkvar	_n @ sp[(-26)+2]
 19535  0154C6  50E1               	movf	fsr1l,w,c
 19536  0154C8  0FE8               	addlw	-24
 19537  0154CA  6ED9               	movwf	fsr2l,c
 19538  0154CC  50E2               	movf	fsr1h,w,c
 19539  0154CE  6EDA               	movwf	fsr2h,c
 19540  0154D0  0EFF               	movlw	255
 19541  0154D2  22DA               	addwfc	fsr2h,f,c
 19542  0154D4  006F FF7B FFE6     	movff	postinc2,postinc1
 19543  0154DA  006F FF7B FFE6     	movff	postinc2,postinc1
 19544  0154E0  006F FF7B FFE6     	movff	postinc2,postinc1
 19545  0154E6  006F FF7B FFE6     	movff	postinc2,postinc1
 19546  0154EC  006F FF7B FFE6     	movff	postinc2,postinc1
 19547  0154F2  006F FF7B FFE6     	movff	postinc2,postinc1
 19548  0154F8  006F FF7B FFE6     	movff	postinc2,postinc1
 19549  0154FE  006F FF7B FFE6     	movff	postinc2,postinc1
 19550  015504  ECA1  F0B9         	call	___aomod	;wreg free
 19551  015508  52E5               	movf	postdec1,f,c
 19552  01550A  006F FF9C  F03F    	movff	indf1,btemp+23
 19553  015510  52E5               	movf	postdec1,f,c
 19554  015512  006F FF9C  F03E    	movff	indf1,btemp+22
 19555  015518  52E5               	movf	postdec1,f,c
 19556  01551A  006F FF9C  F03D    	movff	indf1,btemp+21
 19557  015520  52E5               	movf	postdec1,f,c
 19558  015522  006F FF9C  F03C    	movff	indf1,btemp+20
 19559  015528  52E5               	movf	postdec1,f,c
 19560  01552A  006F FF9C  F03B    	movff	indf1,btemp+19
 19561  015530  52E5               	movf	postdec1,f,c
 19562  015532  006F FF9C  F03A    	movff	indf1,btemp+18
 19563  015538  52E5               	movf	postdec1,f,c
 19564  01553A  006F FF9C  F039    	movff	indf1,btemp+17
 19565  015540  52E5               	movf	postdec1,f,c
 19566  015542  006F FF9C  F038    	movff	indf1,btemp+16
 19567  015548  0EF8               	movlw	248
 19568  01554A  26E1               	addwf	fsr1l,f,c
 19569  01554C  0EFF               	movlw	255
 19570  01554E  22E2               	addwfc	fsr1h,f,c
 19571  015550  0060  F0E0  F032   	movff	btemp+16,btemp+10
 19572  015556  0060  F0E4  F033   	movff	btemp+17,btemp+11
 19573  01555C  0060  F0CB  FFE6   	movff	btemp+10,postinc1
 19574  015562  0060  F0CF  FFE6   	movff	btemp+11,postinc1
 19575  015568  EC1E  F0D5         	call	_abs	;wreg free
 19576  01556C  0E30               	movlw	48
 19577  01556E  2628               	addwf	btemp^0,f,c
 19578                           
 19579                           ;stkvar	_i @ sp[(-18)+10]
 19580  015570  0EF8               	movlw	-8
 19581  015572  006F FF8C  F032    	movff	plusw1,btemp+10
 19582  015578  0EF9               	movlw	-7
 19583  01557A  006F FF8C  F033    	movff	plusw1,btemp+11
 19584  015580  0E94               	movlw	low _dbuf
 19585  015582  2432               	addwf	(btemp+10)^0,w,c
 19586  015584  6ED9               	movwf	fsr2l,c
 19587  015586  0E03               	movlw	high _dbuf
 19588  015588  2033               	addwfc	(btemp+11)^0,w,c
 19589  01558A  6EDA               	movwf	fsr2h,c
 19590  01558C  0060  F0A3  FFDF   	movff	btemp,indf2
 19591                           
 19592                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 19593                           ;stkvar	_p @ sp[(-18)+16]
 19594  015592  50E1               	movf	fsr1l,w,c
 19595  015594  0FFE               	addlw	-2
 19596  015596  6ED9               	movwf	fsr2l,c
 19597  015598  50E2               	movf	fsr1h,w,c
 19598  01559A  6EDA               	movwf	fsr2h,c
 19599  01559C  0EFF               	movlw	255
 19600  01559E  22DA               	addwfc	fsr2h,f,c
 19601  0155A0  06DE               	decf	postinc2,f,c
 19602  0155A2  0E00               	movlw	0
 19603  0155A4  5ADD               	subwfb	postdec2,f,c
 19604                           
 19605                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 19606                           ;stkvar	_w @ sp[(-18)+14]
 19607  0155A6  50E1               	movf	fsr1l,w,c
 19608  0155A8  0FFC               	addlw	-4
 19609  0155AA  6ED9               	movwf	fsr2l,c
 19610  0155AC  50E2               	movf	fsr1h,w,c
 19611  0155AE  6EDA               	movwf	fsr2h,c
 19612  0155B0  0EFF               	movlw	255
 19613  0155B2  22DA               	addwfc	fsr2h,f,c
 19614  0155B4  06DE               	decf	postinc2,f,c
 19615  0155B6  0E00               	movlw	0
 19616  0155B8  5ADD               	subwfb	postdec2,f,c
 19617                           
 19618                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 19619  0155BA  0E0A               	movlw	10
 19620  0155BC  6EE6               	movwf	postinc1,c
 19621  0155BE  0E00               	movlw	0
 19622  0155C0  6EE6               	movwf	postinc1,c
 19623  0155C2  0E00               	movlw	0
 19624  0155C4  6EE6               	movwf	postinc1,c
 19625  0155C6  0E00               	movlw	0
 19626  0155C8  6EE6               	movwf	postinc1,c
 19627  0155CA  0E00               	movlw	0
 19628  0155CC  6EE6               	movwf	postinc1,c
 19629  0155CE  0E00               	movlw	0
 19630  0155D0  6EE6               	movwf	postinc1,c
 19631  0155D2  0E00               	movlw	0
 19632  0155D4  6EE6               	movwf	postinc1,c
 19633  0155D6  0E00               	movlw	0
 19634  0155D8  6EE6               	movwf	postinc1,c
 19635                           
 19636                           ;stkvar	_n @ sp[(-26)+2]
 19637  0155DA  50E1               	movf	fsr1l,w,c
 19638  0155DC  0FE8               	addlw	-24
 19639  0155DE  6ED9               	movwf	fsr2l,c
 19640  0155E0  50E2               	movf	fsr1h,w,c
 19641  0155E2  6EDA               	movwf	fsr2h,c
 19642  0155E4  0EFF               	movlw	255
 19643  0155E6  22DA               	addwfc	fsr2h,f,c
 19644  0155E8  006F FF7B FFE6     	movff	postinc2,postinc1
 19645  0155EE  006F FF7B FFE6     	movff	postinc2,postinc1
 19646  0155F4  006F FF7B FFE6     	movff	postinc2,postinc1
 19647  0155FA  006F FF7B FFE6     	movff	postinc2,postinc1
 19648  015600  006F FF7B FFE6     	movff	postinc2,postinc1
 19649  015606  006F FF7B FFE6     	movff	postinc2,postinc1
 19650  01560C  006F FF7B FFE6     	movff	postinc2,postinc1
 19651  015612  006F FF7B FFE6     	movff	postinc2,postinc1
 19652  015618  EC27  F0B7         	call	___aodiv	;wreg free
 19653  01561C  52E5               	movf	postdec1,f,c
 19654  01561E  006F FF9C  F03F    	movff	indf1,btemp+23
 19655  015624  52E5               	movf	postdec1,f,c
 19656  015626  006F FF9C  F03E    	movff	indf1,btemp+22
 19657  01562C  52E5               	movf	postdec1,f,c
 19658  01562E  006F FF9C  F03D    	movff	indf1,btemp+21
 19659  015634  52E5               	movf	postdec1,f,c
 19660  015636  006F FF9C  F03C    	movff	indf1,btemp+20
 19661  01563C  52E5               	movf	postdec1,f,c
 19662  01563E  006F FF9C  F03B    	movff	indf1,btemp+19
 19663  015644  52E5               	movf	postdec1,f,c
 19664  015646  006F FF9C  F03A    	movff	indf1,btemp+18
 19665  01564C  52E5               	movf	postdec1,f,c
 19666  01564E  006F FF9C  F039    	movff	indf1,btemp+17
 19667  015654  52E5               	movf	postdec1,f,c
 19668  015656  006F FF9C  F038    	movff	indf1,btemp+16
 19669  01565C  0EF8               	movlw	248
 19670  01565E  26E1               	addwf	fsr1l,f,c
 19671  015660  0EFF               	movlw	255
 19672  015662  22E2               	addwfc	fsr1h,f,c
 19673                           
 19674                           ;stkvar	_n @ sp[(-18)+2]
 19675  015664  0EF0               	movlw	-16
 19676  015666  0060  F0E3  FFE3   	movff	btemp+16,plusw1
 19677  01566C  0EF1               	movlw	-15
 19678  01566E  0060  F0E7  FFE3   	movff	btemp+17,plusw1
 19679  015674  0EF2               	movlw	-14
 19680  015676  0060  F0EB  FFE3   	movff	btemp+18,plusw1
 19681  01567C  0EF3               	movlw	-13
 19682  01567E  0060  F0EF  FFE3   	movff	btemp+19,plusw1
 19683  015684  0EF4               	movlw	-12
 19684  015686  0060  F0F3  FFE3   	movff	btemp+20,plusw1
 19685  01568C  0EF5               	movlw	-11
 19686  01568E  0060  F0F7  FFE3   	movff	btemp+21,plusw1
 19687  015694  0EF6               	movlw	-10
 19688  015696  0060  F0FB  FFE3   	movff	btemp+22,plusw1
 19689  01569C  0EF7               	movlw	-9
 19690  01569E  0060  F0FF  FFE3   	movff	btemp+23,plusw1
 19691  0156A4                     l11528:
 19692                           
 19693                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 19694                           ;stkvar	_i @ sp[(-18)+10]
 19695  0156A4  0EF9               	movlw	-7
 19696  0156A6  BEE3               	btfsc	plusw1,7,c
 19697  0156A8  D036               	goto	u10600
 19698  0156AA  0EF9               	movlw	-7
 19699  0156AC  50E3               	movf	plusw1,w,c
 19700  0156AE  E104               	bnz	u10560
 19701  0156B0  0EF8               	movlw	-8
 19702  0156B2  04E3               	decf	plusw1,w,c
 19703  0156B4  A0D8               	btfss	status,0,c
 19704  0156B6  D02F               	goto	u10600
 19705  0156B8                     u10560:
 19706                           
 19707                           ;stkvar	_n @ sp[(-18)+2]
 19708  0156B8  0EF0               	movlw	-16
 19709  0156BA  50E3               	movf	plusw1,w,c
 19710  0156BC  E115               	bnz	u10571
 19711  0156BE  0EF1               	movlw	-15
 19712  0156C0  50E3               	movf	plusw1,w,c
 19713  0156C2  E112               	bnz	u10571
 19714  0156C4  0EF2               	movlw	-14
 19715  0156C6  50E3               	movf	plusw1,w,c
 19716  0156C8  E10F               	bnz	u10571
 19717  0156CA  0EF3               	movlw	-13
 19718  0156CC  50E3               	movf	plusw1,w,c
 19719  0156CE  E10C               	bnz	u10571
 19720  0156D0  0EF4               	movlw	-12
 19721  0156D2  50E3               	movf	plusw1,w,c
 19722  0156D4  E109               	bnz	u10571
 19723  0156D6  0EF5               	movlw	-11
 19724  0156D8  50E3               	movf	plusw1,w,c
 19725  0156DA  E106               	bnz	u10571
 19726  0156DC  0EF6               	movlw	-10
 19727  0156DE  50E3               	movf	plusw1,w,c
 19728  0156E0  E103               	bnz	u10571
 19729  0156E2  0EF7               	movlw	-9
 19730  0156E4  50E3               	movf	plusw1,w,c
 19731  0156E6  A4D8               	btfss	status,2,c
 19732  0156E8                     u10571:
 19733  0156E8  D6D4               	goto	l11518
 19734                           
 19735                           ;stkvar	_p @ sp[(-18)+16]
 19736  0156EA  0EFF               	movlw	-1
 19737  0156EC  BEE3               	btfsc	plusw1,7,c
 19738  0156EE  D007               	goto	u10580
 19739  0156F0  0EFF               	movlw	-1
 19740  0156F2  50E3               	movf	plusw1,w,c
 19741  0156F4  E103               	bnz	u10581
 19742  0156F6  0EFE               	movlw	-2
 19743  0156F8  04E3               	decf	plusw1,w,c
 19744  0156FA  B0D8               	btfsc	status,0,c
 19745  0156FC                     u10581:
 19746  0156FC  D6CA               	goto	l11518
 19747  0156FE                     u10580:
 19748                           
 19749                           ;stkvar	_w @ sp[(-18)+14]
 19750  0156FE  0EFD               	movlw	-3
 19751  015700  BEE3               	btfsc	plusw1,7,c
 19752  015702  D009               	goto	u10600
 19753  015704  0EFD               	movlw	-3
 19754  015706  50E3               	movf	plusw1,w,c
 19755  015708  E104               	bnz	u10590
 19756  01570A  0EFC               	movlw	-4
 19757  01570C  04E3               	decf	plusw1,w,c
 19758  01570E  A0D8               	btfss	status,0,c
 19759  015710  D002               	goto	u10600
 19760  015712                     u10590:
 19761  015712  B24C               	btfsc	_flags^0,1,c
 19762  015714  D6BE               	goto	l11518
 19763  015716                     u10600:
 19764                           
 19765                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 19766                           ;stkvar	_s @ sp[(-18)+12]
 19767  015716  0EFA               	movlw	-6
 19768  015718  006F FF8C  F028    	movff	plusw1,btemp
 19769  01571E  0EFB               	movlw	-5
 19770  015720  50E3               	movf	plusw1,w,c
 19771  015722  1028               	iorwf	btemp^0,w,c
 19772  015724  A4D8               	btfss	status,2,c
 19773  015726  D002               	goto	u10620
 19774  015728  A44C               	btfss	_flags^0,2,c
 19775  01572A  D033               	goto	l11552
 19776  01572C                     u10620:
 19777                           
 19778                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 19779                           ;stkvar	_i @ sp[(-18)+10]
 19780  01572C  50E1               	movf	fsr1l,w,c
 19781  01572E  0FF8               	addlw	-8
 19782  015730  6ED9               	movwf	fsr2l,c
 19783  015732  50E2               	movf	fsr1h,w,c
 19784  015734  6EDA               	movwf	fsr2h,c
 19785  015736  0EFF               	movlw	255
 19786  015738  22DA               	addwfc	fsr2h,f,c
 19787  01573A  06DE               	decf	postinc2,f,c
 19788  01573C  0E00               	movlw	0
 19789  01573E  5ADD               	subwfb	postdec2,f,c
 19790                           
 19791                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 19792                           ;stkvar	_s @ sp[(-18)+12]
 19793  015740  0EFA               	movlw	-6
 19794  015742  006F FF8C  F028    	movff	plusw1,btemp
 19795  015748  0EFB               	movlw	-5
 19796  01574A  50E3               	movf	plusw1,w,c
 19797  01574C  1028               	iorwf	btemp^0,w,c
 19798  01574E  A4D8               	btfss	status,2,c
 19799  015750  D002               	goto	l11548
 19800  015752  0E2B               	movlw	43
 19801  015754  D001               	goto	L22
 19802  015756                     l11548:
 19803  015756  0E2D               	movlw	45
 19804  015758                     L22:
 19805  015758  6E32               	movwf	(btemp+10)^0,c
 19806  01575A  0E00               	movlw	0
 19807  01575C  6E33               	movwf	(btemp+11)^0,c
 19808                           
 19809                           ;stkvar	_dtoa$5358 @ sp[(-18)+0]
 19810  01575E  0EEE               	movlw	-18
 19811  015760  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 19812  015766  0EEF               	movlw	-17
 19813  015768  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 19814                           
 19815                           ;stkvar	_dtoa$5358 @ sp[(-18)+0]
 19816                           ;stkvar	_i @ sp[(-18)+10]
 19817  01576E  0EF8               	movlw	-8
 19818  015770  006F FF8C  F032    	movff	plusw1,btemp+10
 19819  015776  0EF9               	movlw	-7
 19820  015778  006F FF8C  F033    	movff	plusw1,btemp+11
 19821  01577E  0E94               	movlw	low _dbuf
 19822  015780  2432               	addwf	(btemp+10)^0,w,c
 19823  015782  6ED9               	movwf	fsr2l,c
 19824  015784  0E03               	movlw	high _dbuf
 19825  015786  2033               	addwfc	(btemp+11)^0,w,c
 19826  015788  6EDA               	movwf	fsr2h,c
 19827  01578A  0EEE               	movlw	-18
 19828  01578C  006F FF8F FFDF     	movff	plusw1,indf2
 19829  015792                     l11552:
 19830                           
 19831                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 19832                           ;stkvar	_w @ sp[(-18)+14]
 19833  015792  0EFC               	movlw	-4
 19834  015794  006F FF8F FFE6     	movff	plusw1,postinc1
 19835  01579A  006F FF8F FFE6     	movff	plusw1,postinc1
 19836                           
 19837                           ;stkvar	_i @ sp[(-20)+10]
 19838  0157A0  0E94               	movlw	low _dbuf
 19839  0157A2  6E32               	movwf	(btemp+10)^0,c
 19840  0157A4  0E03               	movlw	high _dbuf
 19841  0157A6  6E33               	movwf	(btemp+11)^0,c
 19842  0157A8  0EF6               	movlw	-10
 19843  0157AA  50E3               	movf	plusw1,w,c
 19844  0157AC  2632               	addwf	(btemp+10)^0,f,c
 19845  0157AE  0EF7               	movlw	-9
 19846  0157B0  50E3               	movf	plusw1,w,c
 19847  0157B2  2233               	addwfc	(btemp+11)^0,f,c
 19848  0157B4  0060  F0CB  FFE6   	movff	btemp+10,postinc1
 19849  0157BA  0060  F0CF  FFE6   	movff	btemp+11,postinc1
 19850                           
 19851                           ;stkvar	_fp @ sp[(-22)+-2]
 19852  0157C0  0EE8               	movlw	-24
 19853  0157C2  006F FF8F FFE6     	movff	plusw1,postinc1
 19854  0157C8  006F FF8F FFE6     	movff	plusw1,postinc1
 19855  0157CE  EC6F  F0C8         	call	_pad	;wreg free
 19856                           
 19857                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 19858  0157D2  0EE4               	movlw	228
 19859  0157D4  26E1               	addwf	fsr1l,f,c
 19860  0157D6  0EFF               	movlw	255
 19861  0157D8  22E2               	addwfc	fsr1h,f,c
 19862  0157DA  0012               	return		;funcret
 19863  0157DC                     __end_of_dtoa:
 19864                           	opt callstack 0
 19865                           
 19866 ;; *************** function _abs *****************
 19867 ;; Defined at:
 19868 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 19869 ;; Parameters:    Size  Location     Type
 19870 ;;  a               2  [STACK] int 
 19871 ;; Auto vars:     Size  Location     Type
 19872 ;;		None
 19873 ;; Return value:  Size  Location     Type
 19874 ;;                  2  [STACK] int 
 19875 ;; Registers used:
 19876 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 19877 ;; Tracked objects:
 19878 ;;		On entry : 0/3
 19879 ;;		On exit  : 0/0
 19880 ;;		Unchanged: 0/0
 19881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19886 ;;Total ram usage:        0 bytes
 19887 ;; Hardware stack levels used:    1
 19888 ;; Hardware stack levels required when called:   15
 19889 ;; This function calls:
 19890 ;;		Nothing
 19891 ;; This function is called by:
 19892 ;;		_dtoa
 19893 ;; This function uses a reentrant model
 19894 ;;
 19895                           
 19896                           	psect	text67
 19897  01AA3C                     __ptext67:
 19898                           	opt callstack 0
 19899  01AA3C                     _abs:
 19900                           	opt callstack 0
 19901                           
 19902                           ;stkvar	_a @ sp[(0)+-2]
 19903                           
 19904                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19905                           ;incstack = 0
 19906 ;; hardware stack exceeded
 19907  01AA3C  0EFF               	movlw	-1
 19908  01AA3E  BEE3               	btfsc	plusw1,7,c
 19909  01AA40  D007               	goto	u5730
 19910  01AA42  0EFF               	movlw	-1
 19911  01AA44  50E3               	movf	plusw1,w,c
 19912  01AA46  E112               	bnz	l7740
 19913  01AA48  0EFE               	movlw	-2
 19914  01AA4A  04E3               	decf	plusw1,w,c
 19915  01AA4C  B0D8               	btfsc	status,0,c
 19916  01AA4E  D00E               	goto	l7740
 19917  01AA50                     u5730:
 19918                           
 19919                           ;stkvar	_a @ sp[(0)+-2]
 19920  01AA50  0EFE               	movlw	-2
 19921  01AA52  006F FF8C  F028    	movff	plusw1,btemp
 19922  01AA58  1E28               	comf	btemp^0,f,c
 19923  01AA5A  0EFF               	movlw	-1
 19924  01AA5C  006F FF8C  F029    	movff	plusw1,btemp+1
 19925  01AA62  1E29               	comf	(btemp+1)^0,f,c
 19926  01AA64  2A28               	incf	btemp^0,f,c
 19927  01AA66  B4D8               	btfsc	status,2,c
 19928  01AA68  2A29               	incf	(btemp+1)^0,f,c
 19929  01AA6A  D008               	goto	l3052
 19930  01AA6C                     l7740:
 19931                           
 19932                           ;stkvar	_a @ sp[(0)+-2]
 19933  01AA6C  0EFE               	movlw	-2
 19934  01AA6E  006F FF8C  F028    	movff	plusw1,btemp
 19935  01AA74  0EFF               	movlw	-1
 19936  01AA76  006F FF8C  F029    	movff	plusw1,btemp+1
 19937  01AA7C                     l3052:
 19938                           
 19939                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 19940  01AA7C  52E5               	movf	postdec1,f,c
 19941  01AA7E  52E5               	movf	postdec1,f,c
 19942  01AA80  0012               	return		;funcret
 19943  01AA82                     __end_of_abs:
 19944                           	opt callstack 0
 19945                           
 19946 ;; *************** function ___aomod *****************
 19947 ;; Defined at:
 19948 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 19949 ;; Parameters:    Size  Location     Type
 19950 ;;  dividend        8  [STACK] long long 
 19951 ;;  divisor         8  [STACK] long long 
 19952 ;; Auto vars:     Size  Location     Type
 19953 ;;  sign            1  [STACK] unsigned char 
 19954 ;;  counter         1  [STACK] unsigned char 
 19955 ;; Return value:  Size  Location     Type
 19956 ;;                  8  [STACK] long long 
 19957 ;; Registers used:
 19958 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 19959 ;; Tracked objects:
 19960 ;;		On entry : 0/3
 19961 ;;		On exit  : 0/0
 19962 ;;		Unchanged: 0/0
 19963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19968 ;;Total ram usage:        0 bytes
 19969 ;; Hardware stack levels used:    1
 19970 ;; Hardware stack levels required when called:   15
 19971 ;; This function calls:
 19972 ;;		Nothing
 19973 ;; This function is called by:
 19974 ;;		_dtoa
 19975 ;; This function uses a reentrant model
 19976 ;;
 19977                           
 19978                           	psect	text68
 19979  017342                     __ptext68:
 19980                           	opt callstack 0
 19981  017342                     ___aomod:
 19982                           	opt callstack 0
 19983                           
 19984                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 19985  017342  52E6               	movf	postinc1,f,c
 19986  017344  52E6               	movf	postinc1,f,c
 19987                           
 19988                           ;stkvar	_sign @ sp[(-2)+0]
 19989                           
 19990                           ;incstack = 0
 19991 ;; hardware stack exceeded
 19992  017346  0EFE               	movlw	-2
 19993  017348  6AE3               	clrf	plusw1,c
 19994                           
 19995                           ;stkvar	_dividend @ sp[(-2)+-8]
 19996  01734A  0EFD               	movlw	-3
 19997  01734C  AEE3               	btfss	plusw1,7,c
 19998  01734E  D028               	goto	l7898
 19999                           
 20000                           ;stkvar	_dividend @ sp[(-2)+-8]
 20001                           ;stkvar	_dividend @ sp[(-2)+-8]
 20002  017350  0EF6               	movlw	-10
 20003  017352  6CE3               	negf	plusw1,c
 20004  017354  0EF7               	movlw	-9
 20005  017356  1EE3               	comf	plusw1,f,c
 20006  017358  0EF8               	movlw	-8
 20007  01735A  1EE3               	comf	plusw1,f,c
 20008  01735C  0EF9               	movlw	-7
 20009  01735E  1EE3               	comf	plusw1,f,c
 20010  017360  0EFA               	movlw	-6
 20011  017362  1EE3               	comf	plusw1,f,c
 20012  017364  0EFB               	movlw	-5
 20013  017366  1EE3               	comf	plusw1,f,c
 20014  017368  0EFC               	movlw	-4
 20015  01736A  1EE3               	comf	plusw1,f,c
 20016  01736C  0EFD               	movlw	-3
 20017  01736E  1EE3               	comf	plusw1,f,c
 20018  017370  E314               	bnc	u6160
 20019  017372  0EF7               	movlw	-9
 20020  017374  2AE3               	incf	plusw1,f,c
 20021  017376  E311               	bnc	u6160
 20022  017378  0EF8               	movlw	-8
 20023  01737A  2AE3               	incf	plusw1,f,c
 20024  01737C  E30E               	bnc	u6160
 20025  01737E  0EF9               	movlw	-7
 20026  017380  2AE3               	incf	plusw1,f,c
 20027  017382  E30B               	bnc	u6160
 20028  017384  0EFA               	movlw	-6
 20029  017386  2AE3               	incf	plusw1,f,c
 20030  017388  E308               	bnc	u6160
 20031  01738A  0EFB               	movlw	-5
 20032  01738C  2AE3               	incf	plusw1,f,c
 20033  01738E  E305               	bnc	u6160
 20034  017390  0EFC               	movlw	-4
 20035  017392  2AE3               	incf	plusw1,f,c
 20036  017394  E302               	bnc	u6160
 20037  017396  0EFD               	movlw	-3
 20038  017398  2AE3               	incf	plusw1,f,c
 20039  01739A                     u6160:
 20040                           
 20041                           ;stkvar	_sign @ sp[(-2)+0]
 20042  01739A  0EFE               	movlw	-2
 20043  01739C  6AE3               	clrf	plusw1,c
 20044  01739E  2AE3               	incf	plusw1,f,c
 20045  0173A0                     l7898:
 20046                           
 20047                           ;stkvar	_divisor @ sp[(-2)+-16]
 20048  0173A0  0EF5               	movlw	-11
 20049  0173A2  AEE3               	btfss	plusw1,7,c
 20050  0173A4  D025               	goto	u6180
 20051                           
 20052                           ;stkvar	_divisor @ sp[(-2)+-16]
 20053                           ;stkvar	_divisor @ sp[(-2)+-16]
 20054  0173A6  0EEE               	movlw	-18
 20055  0173A8  6CE3               	negf	plusw1,c
 20056  0173AA  0EEF               	movlw	-17
 20057  0173AC  1EE3               	comf	plusw1,f,c
 20058  0173AE  0EF0               	movlw	-16
 20059  0173B0  1EE3               	comf	plusw1,f,c
 20060  0173B2  0EF1               	movlw	-15
 20061  0173B4  1EE3               	comf	plusw1,f,c
 20062  0173B6  0EF2               	movlw	-14
 20063  0173B8  1EE3               	comf	plusw1,f,c
 20064  0173BA  0EF3               	movlw	-13
 20065  0173BC  1EE3               	comf	plusw1,f,c
 20066  0173BE  0EF4               	movlw	-12
 20067  0173C0  1EE3               	comf	plusw1,f,c
 20068  0173C2  0EF5               	movlw	-11
 20069  0173C4  1EE3               	comf	plusw1,f,c
 20070  0173C6  E314               	bnc	u6180
 20071  0173C8  0EEF               	movlw	-17
 20072  0173CA  2AE3               	incf	plusw1,f,c
 20073  0173CC  E311               	bnc	u6180
 20074  0173CE  0EF0               	movlw	-16
 20075  0173D0  2AE3               	incf	plusw1,f,c
 20076  0173D2  E30E               	bnc	u6180
 20077  0173D4  0EF1               	movlw	-15
 20078  0173D6  2AE3               	incf	plusw1,f,c
 20079  0173D8  E30B               	bnc	u6180
 20080  0173DA  0EF2               	movlw	-14
 20081  0173DC  2AE3               	incf	plusw1,f,c
 20082  0173DE  E308               	bnc	u6180
 20083  0173E0  0EF3               	movlw	-13
 20084  0173E2  2AE3               	incf	plusw1,f,c
 20085  0173E4  E305               	bnc	u6180
 20086  0173E6  0EF4               	movlw	-12
 20087  0173E8  2AE3               	incf	plusw1,f,c
 20088  0173EA  E302               	bnc	u6180
 20089  0173EC  0EF5               	movlw	-11
 20090  0173EE  2AE3               	incf	plusw1,f,c
 20091  0173F0                     u6180:
 20092                           
 20093                           ;stkvar	_divisor @ sp[(-2)+-16]
 20094  0173F0  0EEE               	movlw	-18
 20095  0173F2  50E3               	movf	plusw1,w,c
 20096  0173F4  E116               	bnz	u6190
 20097  0173F6  0EEF               	movlw	-17
 20098  0173F8  50E3               	movf	plusw1,w,c
 20099  0173FA  E113               	bnz	u6190
 20100  0173FC  0EF0               	movlw	-16
 20101  0173FE  50E3               	movf	plusw1,w,c
 20102  017400  E110               	bnz	u6190
 20103  017402  0EF1               	movlw	-15
 20104  017404  50E3               	movf	plusw1,w,c
 20105  017406  E10D               	bnz	u6190
 20106  017408  0EF2               	movlw	-14
 20107  01740A  50E3               	movf	plusw1,w,c
 20108  01740C  E10A               	bnz	u6190
 20109  01740E  0EF3               	movlw	-13
 20110  017410  50E3               	movf	plusw1,w,c
 20111  017412  E107               	bnz	u6190
 20112  017414  0EF4               	movlw	-12
 20113  017416  50E3               	movf	plusw1,w,c
 20114  017418  E104               	bnz	u6190
 20115  01741A  0EF5               	movlw	-11
 20116  01741C  50E3               	movf	plusw1,w,c
 20117  01741E  B4D8               	btfsc	status,2,c
 20118  017420  D075               	goto	u6220
 20119  017422                     u6190:
 20120                           
 20121                           ;stkvar	_counter @ sp[(-2)+1]
 20122  017422  0EFF               	movlw	-1
 20123  017424  6AE3               	clrf	plusw1,c
 20124  017426  D012               	goto	L23
 20125  017428                     l7906:
 20126                           
 20127                           ;stkvar	_divisor @ sp[(-2)+-16]
 20128  017428  90D8               	bcf	status,0,c
 20129  01742A  0EEE               	movlw	-18
 20130  01742C  36E3               	rlcf	plusw1,f,c
 20131  01742E  0EEF               	movlw	-17
 20132  017430  36E3               	rlcf	plusw1,f,c
 20133  017432  0EF0               	movlw	-16
 20134  017434  36E3               	rlcf	plusw1,f,c
 20135  017436  0EF1               	movlw	-15
 20136  017438  36E3               	rlcf	plusw1,f,c
 20137  01743A  0EF2               	movlw	-14
 20138  01743C  36E3               	rlcf	plusw1,f,c
 20139  01743E  0EF3               	movlw	-13
 20140  017440  36E3               	rlcf	plusw1,f,c
 20141  017442  0EF4               	movlw	-12
 20142  017444  36E3               	rlcf	plusw1,f,c
 20143  017446  0EF5               	movlw	-11
 20144  017448  36E3               	rlcf	plusw1,f,c
 20145                           
 20146                           ;stkvar	_counter @ sp[(-2)+1]
 20147  01744A  0EFF               	movlw	-1
 20148  01744C                     L23:
 20149  01744C  2AE3               	incf	plusw1,f,c
 20150                           
 20151                           ;stkvar	_divisor @ sp[(-2)+-16]
 20152  01744E  0EF5               	movlw	-11
 20153  017450  AEE3               	btfss	plusw1,7,c
 20154  017452  D7EA               	goto	l7906
 20155  017454                     u6200:
 20156                           
 20157                           ;stkvar	_divisor @ sp[(-2)+-16]
 20158                           ;stkvar	_dividend @ sp[(-2)+-8]
 20159  017454  50E1               	movf	fsr1l,w,c
 20160  017456  0FF6               	addlw	-10
 20161  017458  6ED9               	movwf	fsr2l,c
 20162  01745A  50E2               	movf	fsr1h,w,c
 20163  01745C  6EDA               	movwf	fsr2h,c
 20164  01745E  0EFF               	movlw	255
 20165  017460  22DA               	addwfc	fsr2h,f,c
 20166  017462  0EEE               	movlw	-18
 20167  017464  50E3               	movf	plusw1,w,c
 20168  017466  5CDE               	subwf	postinc2,w,c
 20169  017468  0EEF               	movlw	-17
 20170  01746A  50E3               	movf	plusw1,w,c
 20171  01746C  58DE               	subwfb	postinc2,w,c
 20172  01746E  0EF0               	movlw	-16
 20173  017470  50E3               	movf	plusw1,w,c
 20174  017472  58DE               	subwfb	postinc2,w,c
 20175  017474  0EF1               	movlw	-15
 20176  017476  50E3               	movf	plusw1,w,c
 20177  017478  58DE               	subwfb	postinc2,w,c
 20178  01747A  0EF2               	movlw	-14
 20179  01747C  50E3               	movf	plusw1,w,c
 20180  01747E  58DE               	subwfb	postinc2,w,c
 20181  017480  0EF3               	movlw	-13
 20182  017482  50E3               	movf	plusw1,w,c
 20183  017484  58DE               	subwfb	postinc2,w,c
 20184  017486  0EF4               	movlw	-12
 20185  017488  50E3               	movf	plusw1,w,c
 20186  01748A  58DE               	subwfb	postinc2,w,c
 20187  01748C  0EF5               	movlw	-11
 20188  01748E  50E3               	movf	plusw1,w,c
 20189  017490  58DE               	subwfb	postinc2,w,c
 20190  017492  A0D8               	btfss	status,0,c
 20191  017494  D01F               	goto	l7914
 20192                           
 20193                           ;stkvar	_divisor @ sp[(-2)+-16]
 20194                           ;stkvar	_dividend @ sp[(-2)+-8]
 20195  017496  50E1               	movf	fsr1l,w,c
 20196  017498  0FF6               	addlw	-10
 20197  01749A  6ED9               	movwf	fsr2l,c
 20198  01749C  50E2               	movf	fsr1h,w,c
 20199  01749E  6EDA               	movwf	fsr2h,c
 20200  0174A0  0EFF               	movlw	255
 20201  0174A2  22DA               	addwfc	fsr2h,f,c
 20202  0174A4  0EEE               	movlw	-18
 20203  0174A6  50E3               	movf	plusw1,w,c
 20204  0174A8  5EDE               	subwf	postinc2,f,c
 20205  0174AA  0EEF               	movlw	-17
 20206  0174AC  50E3               	movf	plusw1,w,c
 20207  0174AE  5ADE               	subwfb	postinc2,f,c
 20208  0174B0  0EF0               	movlw	-16
 20209  0174B2  50E3               	movf	plusw1,w,c
 20210  0174B4  5ADE               	subwfb	postinc2,f,c
 20211  0174B6  0EF1               	movlw	-15
 20212  0174B8  50E3               	movf	plusw1,w,c
 20213  0174BA  5ADE               	subwfb	postinc2,f,c
 20214  0174BC  0EF2               	movlw	-14
 20215  0174BE  50E3               	movf	plusw1,w,c
 20216  0174C0  5ADE               	subwfb	postinc2,f,c
 20217  0174C2  0EF3               	movlw	-13
 20218  0174C4  50E3               	movf	plusw1,w,c
 20219  0174C6  5ADE               	subwfb	postinc2,f,c
 20220  0174C8  0EF4               	movlw	-12
 20221  0174CA  50E3               	movf	plusw1,w,c
 20222  0174CC  5ADE               	subwfb	postinc2,f,c
 20223  0174CE  0EF5               	movlw	-11
 20224  0174D0  50E3               	movf	plusw1,w,c
 20225  0174D2  5ADE               	subwfb	postinc2,f,c
 20226  0174D4                     l7914:
 20227                           
 20228                           ;stkvar	_divisor @ sp[(-2)+-16]
 20229  0174D4  90D8               	bcf	status,0,c
 20230  0174D6  0EF5               	movlw	-11
 20231  0174D8  32E3               	rrcf	plusw1,f,c
 20232  0174DA  0EF4               	movlw	-12
 20233  0174DC  32E3               	rrcf	plusw1,f,c
 20234  0174DE  0EF3               	movlw	-13
 20235  0174E0  32E3               	rrcf	plusw1,f,c
 20236  0174E2  0EF2               	movlw	-14
 20237  0174E4  32E3               	rrcf	plusw1,f,c
 20238  0174E6  0EF1               	movlw	-15
 20239  0174E8  32E3               	rrcf	plusw1,f,c
 20240  0174EA  0EF0               	movlw	-16
 20241  0174EC  32E3               	rrcf	plusw1,f,c
 20242  0174EE  0EEF               	movlw	-17
 20243  0174F0  32E3               	rrcf	plusw1,f,c
 20244  0174F2  0EEE               	movlw	-18
 20245  0174F4  32E3               	rrcf	plusw1,f,c
 20246                           
 20247                           ;stkvar	_counter @ sp[(-2)+1]
 20248  0174F6  0EFF               	movlw	-1
 20249  0174F8  50E3               	movf	plusw1,w,c
 20250  0174FA  6E28               	movwf	btemp^0,c
 20251  0174FC  0E01               	movlw	1
 20252  0174FE  5E28               	subwf	btemp^0,f,c
 20253  017500  0EFF               	movlw	-1
 20254  017502  0060  F0A3  FFE3   	movff	btemp,plusw1
 20255  017508  A4D8               	btfss	status,2,c
 20256  01750A  D7A4               	goto	u6200
 20257  01750C                     u6220:
 20258                           
 20259                           ;stkvar	_sign @ sp[(-2)+0]
 20260  01750C  0EFE               	movlw	-2
 20261  01750E  50E3               	movf	plusw1,w,c
 20262  017510  B4D8               	btfsc	status,2,c
 20263  017512  D025               	goto	u6240
 20264                           
 20265                           ;stkvar	_dividend @ sp[(-2)+-8]
 20266                           ;stkvar	_dividend @ sp[(-2)+-8]
 20267  017514  0EF6               	movlw	-10
 20268  017516  6CE3               	negf	plusw1,c
 20269  017518  0EF7               	movlw	-9
 20270  01751A  1EE3               	comf	plusw1,f,c
 20271  01751C  0EF8               	movlw	-8
 20272  01751E  1EE3               	comf	plusw1,f,c
 20273  017520  0EF9               	movlw	-7
 20274  017522  1EE3               	comf	plusw1,f,c
 20275  017524  0EFA               	movlw	-6
 20276  017526  1EE3               	comf	plusw1,f,c
 20277  017528  0EFB               	movlw	-5
 20278  01752A  1EE3               	comf	plusw1,f,c
 20279  01752C  0EFC               	movlw	-4
 20280  01752E  1EE3               	comf	plusw1,f,c
 20281  017530  0EFD               	movlw	-3
 20282  017532  1EE3               	comf	plusw1,f,c
 20283  017534  E314               	bnc	u6240
 20284  017536  0EF7               	movlw	-9
 20285  017538  2AE3               	incf	plusw1,f,c
 20286  01753A  E311               	bnc	u6240
 20287  01753C  0EF8               	movlw	-8
 20288  01753E  2AE3               	incf	plusw1,f,c
 20289  017540  E30E               	bnc	u6240
 20290  017542  0EF9               	movlw	-7
 20291  017544  2AE3               	incf	plusw1,f,c
 20292  017546  E30B               	bnc	u6240
 20293  017548  0EFA               	movlw	-6
 20294  01754A  2AE3               	incf	plusw1,f,c
 20295  01754C  E308               	bnc	u6240
 20296  01754E  0EFB               	movlw	-5
 20297  017550  2AE3               	incf	plusw1,f,c
 20298  017552  E305               	bnc	u6240
 20299  017554  0EFC               	movlw	-4
 20300  017556  2AE3               	incf	plusw1,f,c
 20301  017558  E302               	bnc	u6240
 20302  01755A  0EFD               	movlw	-3
 20303  01755C  2AE3               	incf	plusw1,f,c
 20304  01755E                     u6240:
 20305                           
 20306                           ;stkvar	_dividend @ sp[(-2)+-8]
 20307  01755E  0EF6               	movlw	246
 20308  017560  24E1               	addwf	fsr1l,w,c
 20309  017562  6ED9               	movwf	fsr2l,c
 20310  017564  0EFF               	movlw	255
 20311  017566  20E2               	addwfc	fsr1h,w,c
 20312  017568  6EDA               	movwf	fsr2h,c
 20313                           
 20314                           ;stkvar	?___aomod @ sp[(-2)+-8]
 20315  01756A  0E08               	movlw	8
 20316  01756C  6E28               	movwf	btemp^0,c
 20317  01756E  0EF6               	movlw	-10
 20318  017570                     us625999:
 20319  017570  006F FF7B FFE3     	movff	postinc2,plusw1
 20320  017576  28E8               	incf	wreg,w,c
 20321  017578  2E28               	decfsz	btemp^0,f,c
 20322  01757A  D7FA               	bra	us625999
 20323                           
 20324                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 20325  01757C  52E5               	movf	postdec1,f,c
 20326  01757E  52E5               	movf	postdec1,f,c
 20327  017580  0012               	return		;funcret
 20328  017582                     __end_of___aomod:
 20329                           	opt callstack 0
 20330                           
 20331 ;; *************** function ___aodiv *****************
 20332 ;; Defined at:
 20333 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 20334 ;; Parameters:    Size  Location     Type
 20335 ;;  dividend        8  [STACK] long long 
 20336 ;;  divisor         8  [STACK] long long 
 20337 ;; Auto vars:     Size  Location     Type
 20338 ;;  quotient        8  [STACK] long long 
 20339 ;;  sign            1  [STACK] unsigned char 
 20340 ;;  counter         1  [STACK] unsigned char 
 20341 ;; Return value:  Size  Location     Type
 20342 ;;                  8  [STACK] long long 
 20343 ;; Registers used:
 20344 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 20345 ;; Tracked objects:
 20346 ;;		On entry : 0/3
 20347 ;;		On exit  : 0/0
 20348 ;;		Unchanged: 0/0
 20349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20354 ;;Total ram usage:        0 bytes
 20355 ;; Hardware stack levels used:    1
 20356 ;; Hardware stack levels required when called:   15
 20357 ;; This function calls:
 20358 ;;		Nothing
 20359 ;; This function is called by:
 20360 ;;		_dtoa
 20361 ;; This function uses a reentrant model
 20362 ;;
 20363                           
 20364                           	psect	text69
 20365  016E4E                     __ptext69:
 20366                           	opt callstack 0
 20367  016E4E                     ___aodiv:
 20368                           	opt callstack 0
 20369                           
 20370                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 20371  016E4E  0E0A               	movlw	10
 20372  016E50  26E1               	addwf	fsr1l,f,c
 20373  016E52  0E00               	movlw	0
 20374  016E54  22E2               	addwfc	fsr1h,f,c
 20375                           
 20376                           ;stkvar	_sign @ sp[(-10)+8]
 20377                           
 20378                           ;incstack = 0
 20379 ;; hardware stack exceeded
 20380  016E56  0EFE               	movlw	-2
 20381  016E58  6AE3               	clrf	plusw1,c
 20382                           
 20383                           ;stkvar	_divisor @ sp[(-10)+-16]
 20384  016E5A  0EED               	movlw	-19
 20385  016E5C  AEE3               	btfss	plusw1,7,c
 20386  016E5E  D028               	goto	l7854
 20387                           
 20388                           ;stkvar	_divisor @ sp[(-10)+-16]
 20389                           ;stkvar	_divisor @ sp[(-10)+-16]
 20390  016E60  0EE6               	movlw	-26
 20391  016E62  6CE3               	negf	plusw1,c
 20392  016E64  0EE7               	movlw	-25
 20393  016E66  1EE3               	comf	plusw1,f,c
 20394  016E68  0EE8               	movlw	-24
 20395  016E6A  1EE3               	comf	plusw1,f,c
 20396  016E6C  0EE9               	movlw	-23
 20397  016E6E  1EE3               	comf	plusw1,f,c
 20398  016E70  0EEA               	movlw	-22
 20399  016E72  1EE3               	comf	plusw1,f,c
 20400  016E74  0EEB               	movlw	-21
 20401  016E76  1EE3               	comf	plusw1,f,c
 20402  016E78  0EEC               	movlw	-20
 20403  016E7A  1EE3               	comf	plusw1,f,c
 20404  016E7C  0EED               	movlw	-19
 20405  016E7E  1EE3               	comf	plusw1,f,c
 20406  016E80  E314               	bnc	u6040
 20407  016E82  0EE7               	movlw	-25
 20408  016E84  2AE3               	incf	plusw1,f,c
 20409  016E86  E311               	bnc	u6040
 20410  016E88  0EE8               	movlw	-24
 20411  016E8A  2AE3               	incf	plusw1,f,c
 20412  016E8C  E30E               	bnc	u6040
 20413  016E8E  0EE9               	movlw	-23
 20414  016E90  2AE3               	incf	plusw1,f,c
 20415  016E92  E30B               	bnc	u6040
 20416  016E94  0EEA               	movlw	-22
 20417  016E96  2AE3               	incf	plusw1,f,c
 20418  016E98  E308               	bnc	u6040
 20419  016E9A  0EEB               	movlw	-21
 20420  016E9C  2AE3               	incf	plusw1,f,c
 20421  016E9E  E305               	bnc	u6040
 20422  016EA0  0EEC               	movlw	-20
 20423  016EA2  2AE3               	incf	plusw1,f,c
 20424  016EA4  E302               	bnc	u6040
 20425  016EA6  0EED               	movlw	-19
 20426  016EA8  2AE3               	incf	plusw1,f,c
 20427  016EAA                     u6040:
 20428                           
 20429                           ;stkvar	_sign @ sp[(-10)+8]
 20430  016EAA  0EFE               	movlw	-2
 20431  016EAC  6AE3               	clrf	plusw1,c
 20432  016EAE  2AE3               	incf	plusw1,f,c
 20433  016EB0                     l7854:
 20434                           
 20435                           ;stkvar	_dividend @ sp[(-10)+-8]
 20436  016EB0  0EF5               	movlw	-11
 20437  016EB2  AEE3               	btfss	plusw1,7,c
 20438  016EB4  D027               	goto	l7860
 20439                           
 20440                           ;stkvar	_dividend @ sp[(-10)+-8]
 20441                           ;stkvar	_dividend @ sp[(-10)+-8]
 20442  016EB6  0EEE               	movlw	-18
 20443  016EB8  6CE3               	negf	plusw1,c
 20444  016EBA  0EEF               	movlw	-17
 20445  016EBC  1EE3               	comf	plusw1,f,c
 20446  016EBE  0EF0               	movlw	-16
 20447  016EC0  1EE3               	comf	plusw1,f,c
 20448  016EC2  0EF1               	movlw	-15
 20449  016EC4  1EE3               	comf	plusw1,f,c
 20450  016EC6  0EF2               	movlw	-14
 20451  016EC8  1EE3               	comf	plusw1,f,c
 20452  016ECA  0EF3               	movlw	-13
 20453  016ECC  1EE3               	comf	plusw1,f,c
 20454  016ECE  0EF4               	movlw	-12
 20455  016ED0  1EE3               	comf	plusw1,f,c
 20456  016ED2  0EF5               	movlw	-11
 20457  016ED4  1EE3               	comf	plusw1,f,c
 20458  016ED6  E314               	bnc	u6060
 20459  016ED8  0EEF               	movlw	-17
 20460  016EDA  2AE3               	incf	plusw1,f,c
 20461  016EDC  E311               	bnc	u6060
 20462  016EDE  0EF0               	movlw	-16
 20463  016EE0  2AE3               	incf	plusw1,f,c
 20464  016EE2  E30E               	bnc	u6060
 20465  016EE4  0EF1               	movlw	-15
 20466  016EE6  2AE3               	incf	plusw1,f,c
 20467  016EE8  E30B               	bnc	u6060
 20468  016EEA  0EF2               	movlw	-14
 20469  016EEC  2AE3               	incf	plusw1,f,c
 20470  016EEE  E308               	bnc	u6060
 20471  016EF0  0EF3               	movlw	-13
 20472  016EF2  2AE3               	incf	plusw1,f,c
 20473  016EF4  E305               	bnc	u6060
 20474  016EF6  0EF4               	movlw	-12
 20475  016EF8  2AE3               	incf	plusw1,f,c
 20476  016EFA  E302               	bnc	u6060
 20477  016EFC  0EF5               	movlw	-11
 20478  016EFE  2AE3               	incf	plusw1,f,c
 20479  016F00                     u6060:
 20480                           
 20481                           ;stkvar	_sign @ sp[(-10)+8]
 20482  016F00  0EFE               	movlw	-2
 20483  016F02  70E3               	btg	plusw1,0,c
 20484  016F04                     l7860:
 20485                           
 20486                           ;stkvar	_quotient @ sp[(-10)+0]
 20487  016F04  0E07               	movlw	7
 20488  016F06  6E28               	movwf	btemp^0,c
 20489  016F08  0EF6               	movlw	-10
 20490  016F0A                     u6071:
 20491  016F0A  6AE3               	clrf	plusw1,c
 20492  016F0C  2AE8               	incf	wreg,f,c
 20493  016F0E  0628               	decf	btemp^0,f,c
 20494  016F10  E2FC               	bc	u6071
 20495                           
 20496                           ;stkvar	_divisor @ sp[(-10)+-16]
 20497  016F12  0EE6               	movlw	-26
 20498  016F14  50E3               	movf	plusw1,w,c
 20499  016F16  E116               	bnz	u6080
 20500  016F18  0EE7               	movlw	-25
 20501  016F1A  50E3               	movf	plusw1,w,c
 20502  016F1C  E113               	bnz	u6080
 20503  016F1E  0EE8               	movlw	-24
 20504  016F20  50E3               	movf	plusw1,w,c
 20505  016F22  E110               	bnz	u6080
 20506  016F24  0EE9               	movlw	-23
 20507  016F26  50E3               	movf	plusw1,w,c
 20508  016F28  E10D               	bnz	u6080
 20509  016F2A  0EEA               	movlw	-22
 20510  016F2C  50E3               	movf	plusw1,w,c
 20511  016F2E  E10A               	bnz	u6080
 20512  016F30  0EEB               	movlw	-21
 20513  016F32  50E3               	movf	plusw1,w,c
 20514  016F34  E107               	bnz	u6080
 20515  016F36  0EEC               	movlw	-20
 20516  016F38  50E3               	movf	plusw1,w,c
 20517  016F3A  E104               	bnz	u6080
 20518  016F3C  0EED               	movlw	-19
 20519  016F3E  50E3               	movf	plusw1,w,c
 20520  016F40  B4D8               	btfsc	status,2,c
 20521  016F42  D088               	goto	u6110
 20522  016F44                     u6080:
 20523                           
 20524                           ;stkvar	_counter @ sp[(-10)+9]
 20525  016F44  0EFF               	movlw	-1
 20526  016F46  6AE3               	clrf	plusw1,c
 20527  016F48  D012               	goto	L24
 20528  016F4A                     l7866:
 20529                           
 20530                           ;stkvar	_divisor @ sp[(-10)+-16]
 20531  016F4A  90D8               	bcf	status,0,c
 20532  016F4C  0EE6               	movlw	-26
 20533  016F4E  36E3               	rlcf	plusw1,f,c
 20534  016F50  0EE7               	movlw	-25
 20535  016F52  36E3               	rlcf	plusw1,f,c
 20536  016F54  0EE8               	movlw	-24
 20537  016F56  36E3               	rlcf	plusw1,f,c
 20538  016F58  0EE9               	movlw	-23
 20539  016F5A  36E3               	rlcf	plusw1,f,c
 20540  016F5C  0EEA               	movlw	-22
 20541  016F5E  36E3               	rlcf	plusw1,f,c
 20542  016F60  0EEB               	movlw	-21
 20543  016F62  36E3               	rlcf	plusw1,f,c
 20544  016F64  0EEC               	movlw	-20
 20545  016F66  36E3               	rlcf	plusw1,f,c
 20546  016F68  0EED               	movlw	-19
 20547  016F6A  36E3               	rlcf	plusw1,f,c
 20548                           
 20549                           ;stkvar	_counter @ sp[(-10)+9]
 20550  016F6C  0EFF               	movlw	-1
 20551  016F6E                     L24:
 20552  016F6E  2AE3               	incf	plusw1,f,c
 20553                           
 20554                           ;stkvar	_divisor @ sp[(-10)+-16]
 20555  016F70  0EED               	movlw	-19
 20556  016F72  AEE3               	btfss	plusw1,7,c
 20557  016F74  D7EA               	goto	l7866
 20558  016F76                     u6090:
 20559                           
 20560                           ;stkvar	_quotient @ sp[(-10)+0]
 20561  016F76  90D8               	bcf	status,0,c
 20562  016F78  0EF6               	movlw	-10
 20563  016F7A  36E3               	rlcf	plusw1,f,c
 20564  016F7C  0EF7               	movlw	-9
 20565  016F7E  36E3               	rlcf	plusw1,f,c
 20566  016F80  0EF8               	movlw	-8
 20567  016F82  36E3               	rlcf	plusw1,f,c
 20568  016F84  0EF9               	movlw	-7
 20569  016F86  36E3               	rlcf	plusw1,f,c
 20570  016F88  0EFA               	movlw	-6
 20571  016F8A  36E3               	rlcf	plusw1,f,c
 20572  016F8C  0EFB               	movlw	-5
 20573  016F8E  36E3               	rlcf	plusw1,f,c
 20574  016F90  0EFC               	movlw	-4
 20575  016F92  36E3               	rlcf	plusw1,f,c
 20576  016F94  0EFD               	movlw	-3
 20577  016F96  36E3               	rlcf	plusw1,f,c
 20578                           
 20579                           ;stkvar	_divisor @ sp[(-10)+-16]
 20580                           ;stkvar	_dividend @ sp[(-10)+-8]
 20581  016F98  50E1               	movf	fsr1l,w,c
 20582  016F9A  0FEE               	addlw	-18
 20583  016F9C  6ED9               	movwf	fsr2l,c
 20584  016F9E  50E2               	movf	fsr1h,w,c
 20585  016FA0  6EDA               	movwf	fsr2h,c
 20586  016FA2  0EFF               	movlw	255
 20587  016FA4  22DA               	addwfc	fsr2h,f,c
 20588  016FA6  0EE6               	movlw	-26
 20589  016FA8  50E3               	movf	plusw1,w,c
 20590  016FAA  5CDE               	subwf	postinc2,w,c
 20591  016FAC  0EE7               	movlw	-25
 20592  016FAE  50E3               	movf	plusw1,w,c
 20593  016FB0  58DE               	subwfb	postinc2,w,c
 20594  016FB2  0EE8               	movlw	-24
 20595  016FB4  50E3               	movf	plusw1,w,c
 20596  016FB6  58DE               	subwfb	postinc2,w,c
 20597  016FB8  0EE9               	movlw	-23
 20598  016FBA  50E3               	movf	plusw1,w,c
 20599  016FBC  58DE               	subwfb	postinc2,w,c
 20600  016FBE  0EEA               	movlw	-22
 20601  016FC0  50E3               	movf	plusw1,w,c
 20602  016FC2  58DE               	subwfb	postinc2,w,c
 20603  016FC4  0EEB               	movlw	-21
 20604  016FC6  50E3               	movf	plusw1,w,c
 20605  016FC8  58DE               	subwfb	postinc2,w,c
 20606  016FCA  0EEC               	movlw	-20
 20607  016FCC  50E3               	movf	plusw1,w,c
 20608  016FCE  58DE               	subwfb	postinc2,w,c
 20609  016FD0  0EED               	movlw	-19
 20610  016FD2  50E3               	movf	plusw1,w,c
 20611  016FD4  58DE               	subwfb	postinc2,w,c
 20612  016FD6  A0D8               	btfss	status,0,c
 20613  016FD8  D021               	goto	l7878
 20614                           
 20615                           ;stkvar	_divisor @ sp[(-10)+-16]
 20616                           ;stkvar	_dividend @ sp[(-10)+-8]
 20617  016FDA  50E1               	movf	fsr1l,w,c
 20618  016FDC  0FEE               	addlw	-18
 20619  016FDE  6ED9               	movwf	fsr2l,c
 20620  016FE0  50E2               	movf	fsr1h,w,c
 20621  016FE2  6EDA               	movwf	fsr2h,c
 20622  016FE4  0EFF               	movlw	255
 20623  016FE6  22DA               	addwfc	fsr2h,f,c
 20624  016FE8  0EE6               	movlw	-26
 20625  016FEA  50E3               	movf	plusw1,w,c
 20626  016FEC  5EDE               	subwf	postinc2,f,c
 20627  016FEE  0EE7               	movlw	-25
 20628  016FF0  50E3               	movf	plusw1,w,c
 20629  016FF2  5ADE               	subwfb	postinc2,f,c
 20630  016FF4  0EE8               	movlw	-24
 20631  016FF6  50E3               	movf	plusw1,w,c
 20632  016FF8  5ADE               	subwfb	postinc2,f,c
 20633  016FFA  0EE9               	movlw	-23
 20634  016FFC  50E3               	movf	plusw1,w,c
 20635  016FFE  5ADE               	subwfb	postinc2,f,c
 20636  017000  0EEA               	movlw	-22
 20637  017002  50E3               	movf	plusw1,w,c
 20638  017004  5ADE               	subwfb	postinc2,f,c
 20639  017006  0EEB               	movlw	-21
 20640  017008  50E3               	movf	plusw1,w,c
 20641  01700A  5ADE               	subwfb	postinc2,f,c
 20642  01700C  0EEC               	movlw	-20
 20643  01700E  50E3               	movf	plusw1,w,c
 20644  017010  5ADE               	subwfb	postinc2,f,c
 20645  017012  0EED               	movlw	-19
 20646  017014  50E3               	movf	plusw1,w,c
 20647  017016  5ADE               	subwfb	postinc2,f,c
 20648                           
 20649                           ;stkvar	_quotient @ sp[(-10)+0]
 20650  017018  0EF6               	movlw	-10
 20651  01701A  80E3               	bsf	plusw1,0,c
 20652  01701C                     l7878:
 20653                           
 20654                           ;stkvar	_divisor @ sp[(-10)+-16]
 20655  01701C  90D8               	bcf	status,0,c
 20656  01701E  0EED               	movlw	-19
 20657  017020  32E3               	rrcf	plusw1,f,c
 20658  017022  0EEC               	movlw	-20
 20659  017024  32E3               	rrcf	plusw1,f,c
 20660  017026  0EEB               	movlw	-21
 20661  017028  32E3               	rrcf	plusw1,f,c
 20662  01702A  0EEA               	movlw	-22
 20663  01702C  32E3               	rrcf	plusw1,f,c
 20664  01702E  0EE9               	movlw	-23
 20665  017030  32E3               	rrcf	plusw1,f,c
 20666  017032  0EE8               	movlw	-24
 20667  017034  32E3               	rrcf	plusw1,f,c
 20668  017036  0EE7               	movlw	-25
 20669  017038  32E3               	rrcf	plusw1,f,c
 20670  01703A  0EE6               	movlw	-26
 20671  01703C  32E3               	rrcf	plusw1,f,c
 20672                           
 20673                           ;stkvar	_counter @ sp[(-10)+9]
 20674  01703E  0EFF               	movlw	-1
 20675  017040  50E3               	movf	plusw1,w,c
 20676  017042  6E28               	movwf	btemp^0,c
 20677  017044  0E01               	movlw	1
 20678  017046  5E28               	subwf	btemp^0,f,c
 20679  017048  0EFF               	movlw	-1
 20680  01704A  0060  F0A3  FFE3   	movff	btemp,plusw1
 20681  017050  A4D8               	btfss	status,2,c
 20682  017052  D791               	goto	u6090
 20683  017054                     u6110:
 20684                           
 20685                           ;stkvar	_sign @ sp[(-10)+8]
 20686  017054  0EFE               	movlw	-2
 20687  017056  50E3               	movf	plusw1,w,c
 20688  017058  B4D8               	btfsc	status,2,c
 20689  01705A  D025               	goto	u6130
 20690                           
 20691                           ;stkvar	_quotient @ sp[(-10)+0]
 20692                           ;stkvar	_quotient @ sp[(-10)+0]
 20693  01705C  0EF6               	movlw	-10
 20694  01705E  6CE3               	negf	plusw1,c
 20695  017060  0EF7               	movlw	-9
 20696  017062  1EE3               	comf	plusw1,f,c
 20697  017064  0EF8               	movlw	-8
 20698  017066  1EE3               	comf	plusw1,f,c
 20699  017068  0EF9               	movlw	-7
 20700  01706A  1EE3               	comf	plusw1,f,c
 20701  01706C  0EFA               	movlw	-6
 20702  01706E  1EE3               	comf	plusw1,f,c
 20703  017070  0EFB               	movlw	-5
 20704  017072  1EE3               	comf	plusw1,f,c
 20705  017074  0EFC               	movlw	-4
 20706  017076  1EE3               	comf	plusw1,f,c
 20707  017078  0EFD               	movlw	-3
 20708  01707A  1EE3               	comf	plusw1,f,c
 20709  01707C  E314               	bnc	u6130
 20710  01707E  0EF7               	movlw	-9
 20711  017080  2AE3               	incf	plusw1,f,c
 20712  017082  E311               	bnc	u6130
 20713  017084  0EF8               	movlw	-8
 20714  017086  2AE3               	incf	plusw1,f,c
 20715  017088  E30E               	bnc	u6130
 20716  01708A  0EF9               	movlw	-7
 20717  01708C  2AE3               	incf	plusw1,f,c
 20718  01708E  E30B               	bnc	u6130
 20719  017090  0EFA               	movlw	-6
 20720  017092  2AE3               	incf	plusw1,f,c
 20721  017094  E308               	bnc	u6130
 20722  017096  0EFB               	movlw	-5
 20723  017098  2AE3               	incf	plusw1,f,c
 20724  01709A  E305               	bnc	u6130
 20725  01709C  0EFC               	movlw	-4
 20726  01709E  2AE3               	incf	plusw1,f,c
 20727  0170A0  E302               	bnc	u6130
 20728  0170A2  0EFD               	movlw	-3
 20729  0170A4  2AE3               	incf	plusw1,f,c
 20730  0170A6                     u6130:
 20731                           
 20732                           ;stkvar	_quotient @ sp[(-10)+0]
 20733  0170A6  0EF6               	movlw	246
 20734  0170A8  24E1               	addwf	fsr1l,w,c
 20735  0170AA  6ED9               	movwf	fsr2l,c
 20736  0170AC  0EFF               	movlw	255
 20737  0170AE  20E2               	addwfc	fsr1h,w,c
 20738  0170B0  6EDA               	movwf	fsr2h,c
 20739                           
 20740                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 20741  0170B2  0E08               	movlw	8
 20742  0170B4  6E28               	movwf	btemp^0,c
 20743  0170B6  0EEE               	movlw	-18
 20744  0170B8                     us614999:
 20745  0170B8  006F FF7B FFE3     	movff	postinc2,plusw1
 20746  0170BE  28E8               	incf	wreg,w,c
 20747  0170C0  2E28               	decfsz	btemp^0,f,c
 20748  0170C2  D7FA               	bra	us614999
 20749                           
 20750                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 20751  0170C4  0EF6               	movlw	246
 20752  0170C6  26E1               	addwf	fsr1l,f,c
 20753  0170C8  0EFF               	movlw	255
 20754  0170CA  22E2               	addwfc	fsr1h,f,c
 20755  0170CC  0012               	return		;funcret
 20756  0170CE                     __end_of___aodiv:
 20757                           	opt callstack 0
 20758                           
 20759 ;; *************** function _ctoa *****************
 20760 ;; Defined at:
 20761 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 20762 ;; Parameters:    Size  Location     Type
 20763 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20764 ;;		 -> f(6), NULL(0), 
 20765 ;;  c               1  [STACK] unsigned char 
 20766 ;; Auto vars:     Size  Location     Type
 20767 ;;  w               2  [STACK] int 
 20768 ;;  l               2    0        int 
 20769 ;; Return value:  Size  Location     Type
 20770 ;;                  2  [STACK] int 
 20771 ;; Registers used:
 20772 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 20773 ;; Tracked objects:
 20774 ;;		On entry : 0/0
 20775 ;;		On exit  : 0/0
 20776 ;;		Unchanged: 0/0
 20777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20781 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20782 ;;Total ram usage:        0 bytes
 20783 ;; Hardware stack levels used:    1
 20784 ;; Hardware stack levels required when called:   20
 20785 ;; This function calls:
 20786 ;;		_pad
 20787 ;; This function is called by:
 20788 ;;		_vfpfcnvrt
 20789 ;; This function uses a reentrant model
 20790 ;;
 20791                           
 20792                           	psect	text70
 20793  01A21E                     __ptext70:
 20794                           	opt callstack 0
 20795  01A21E                     _ctoa:
 20796                           	opt callstack 0
 20797                           
 20798                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20799  01A21E  52E6               	movf	postinc1,f,c
 20800  01A220  52E6               	movf	postinc1,f,c
 20801                           
 20802                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 20803                           
 20804                           ;incstack = 0
 20805 ;; hardware stack exceeded
 20806  01A222  5048               	movf	_width^0,w,c
 20807  01A224  1049               	iorwf	(_width+1)^0,w,c
 20808  01A226  A4D8               	btfss	status,2,c
 20809  01A228  D009               	goto	l11480
 20810                           
 20811                           ;stkvar	_w @ sp[(-2)+0]
 20812  01A22A  0EFE               	movlw	-2
 20813  01A22C  0060  F123  FFE3   	movff	_width,plusw1
 20814  01A232  0EFF               	movlw	-1
 20815  01A234  0060  F127  FFE3   	movff	_width+1,plusw1
 20816  01A23A  D016               	goto	l11482
 20817  01A23C                     l11480:
 20818  01A23C  0EFF               	movlw	255
 20819  01A23E  6E32               	movwf	(btemp+10)^0,c
 20820  01A240  0EFF               	movlw	255
 20821  01A242  6E33               	movwf	(btemp+11)^0,c
 20822  01A244  0060  F120  F030   	movff	_width,btemp+8
 20823  01A24A  0060  F124  F031   	movff	_width+1,btemp+9
 20824  01A250  5032               	movf	(btemp+10)^0,w,c
 20825  01A252  2630               	addwf	(btemp+8)^0,f,c
 20826  01A254  5033               	movf	(btemp+11)^0,w,c
 20827  01A256  2231               	addwfc	(btemp+9)^0,f,c
 20828                           
 20829                           ;stkvar	_w @ sp[(-2)+0]
 20830  01A258  0EFE               	movlw	-2
 20831  01A25A  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 20832  01A260  0EFF               	movlw	-1
 20833  01A262  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 20834  01A268                     l11482:
 20835                           
 20836                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 20837                           ;stkvar	_c @ sp[(-2)+-3]
 20838  01A268  0EFB               	movlw	-5
 20839  01A26A  006F FF8C  F394    	movff	plusw1,_dbuf
 20840                           
 20841                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 20842  01A270  0103               	movlb	3	; () banked
 20843  01A272  6B95               	clrf	(_dbuf+1)& (0+255),b
 20844                           
 20845                           ; BSR set to: 3
 20846                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 20847                           ;stkvar	_w @ sp[(-2)+0]
 20848  01A274  0EFE               	movlw	-2
 20849  01A276  006F FF8F FFE6     	movff	plusw1,postinc1
 20850  01A27C  006F FF8F FFE6     	movff	plusw1,postinc1
 20851  01A282  0E94               	movlw	low _dbuf
 20852  01A284  6EE6               	movwf	postinc1,c
 20853  01A286  0E03               	movlw	high _dbuf
 20854  01A288  6EE6               	movwf	postinc1,c
 20855                           
 20856                           ;stkvar	_fp @ sp[(-6)+-2]
 20857  01A28A  0EF8               	movlw	-8
 20858  01A28C  006F FF8F FFE6     	movff	plusw1,postinc1
 20859  01A292  006F FF8F FFE6     	movff	plusw1,postinc1
 20860  01A298  EC6F  F0C8         	call	_pad	;wreg free
 20861                           
 20862                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 20863  01A29C  0EFB               	movlw	251
 20864  01A29E  26E1               	addwf	fsr1l,f,c
 20865  01A2A0  0EFF               	movlw	255
 20866  01A2A2  22E2               	addwfc	fsr1h,f,c
 20867  01A2A4  0012               	return		;funcret
 20868  01A2A6                     __end_of_ctoa:
 20869                           	opt callstack 0
 20870                           
 20871 ;; *************** function _pad *****************
 20872 ;; Defined at:
 20873 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 20874 ;; Parameters:    Size  Location     Type
 20875 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20876 ;;		 -> f(6), NULL(0), 
 20877 ;;  buf             2  [STACK] PTR unsigned char 
 20878 ;;		 -> dbuf(80), 
 20879 ;;  p               2  [STACK] int 
 20880 ;; Auto vars:     Size  Location     Type
 20881 ;;  w               2  [STACK] int 
 20882 ;;  i               2  [STACK] int 
 20883 ;; Return value:  Size  Location     Type
 20884 ;;                  2  [STACK] int 
 20885 ;; Registers used:
 20886 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 20887 ;; Tracked objects:
 20888 ;;		On entry : 0/3
 20889 ;;		On exit  : 0/0
 20890 ;;		Unchanged: 0/0
 20891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20895 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20896 ;;Total ram usage:        0 bytes
 20897 ;; Hardware stack levels used:    1
 20898 ;; Hardware stack levels required when called:   19
 20899 ;; This function calls:
 20900 ;;		_fputc
 20901 ;;		_fputs
 20902 ;;		_strlen
 20903 ;; This function is called by:
 20904 ;;		_ctoa
 20905 ;;		_dtoa
 20906 ;;		_efgtoa
 20907 ;;		_utoa
 20908 ;;		_xtoa
 20909 ;; This function uses a reentrant model
 20910 ;;
 20911                           
 20912                           	psect	text71
 20913  0190DE                     __ptext71:
 20914                           	opt callstack 0
 20915  0190DE                     _pad:
 20916                           	opt callstack 0
 20917                           
 20918                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20919  0190DE  52E6               	movf	postinc1,f,c
 20920  0190E0  52E6               	movf	postinc1,f,c
 20921  0190E2  52E6               	movf	postinc1,f,c
 20922  0190E4  52E6               	movf	postinc1,f,c
 20923                           
 20924                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 20925                           
 20926                           ;incstack = 0
 20927 ;; hardware stack exceeded
 20928  0190E6  A04C               	btfss	_flags^0,0,c
 20929  0190E8  D010               	goto	l11412
 20930                           
 20931                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 20932                           ;stkvar	_fp @ sp[(-4)+-2]
 20933  0190EA  0EFA               	movlw	-6
 20934  0190EC  006F FF8F FFE6     	movff	plusw1,postinc1
 20935  0190F2  006F FF8F FFE6     	movff	plusw1,postinc1
 20936                           
 20937                           ;stkvar	_buf @ sp[(-6)+-4]
 20938  0190F8  0EF6               	movlw	-10
 20939  0190FA  006F FF8F FFE6     	movff	plusw1,postinc1
 20940  019100  006F FF8F FFE6     	movff	plusw1,postinc1
 20941  019106  EC9F  F0CF         	call	_fputs	;wreg free
 20942  01910A                     l11412:
 20943                           
 20944                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 20945                           ;stkvar	_p @ sp[(-4)+-6]
 20946  01910A  0EF7               	movlw	-9
 20947  01910C  BEE3               	btfsc	plusw1,7,c
 20948  01910E  D011               	goto	l11416
 20949                           
 20950                           ;stkvar	_p @ sp[(-4)+-6]
 20951                           ;stkvar	_w @ sp[(-4)+0]
 20952  019110  0EF6               	movlw	-10
 20953  019112  006F FF8C  F028    	movff	plusw1,btemp
 20954  019118  0EFC               	movlw	-4
 20955  01911A  0060  F0A3  FFE3   	movff	btemp,plusw1
 20956  019120  0EF7               	movlw	-9
 20957  019122  006F FF8C  F028    	movff	plusw1,btemp
 20958  019128  0EFD               	movlw	-3
 20959  01912A  0060  F0A3  FFE3   	movff	btemp,plusw1
 20960  019130  D004               	goto	l2106
 20961  019132                     l11416:
 20962                           
 20963                           ;stkvar	_w @ sp[(-4)+0]
 20964  019132  0EFC               	movlw	-4
 20965  019134  6AE3               	clrf	plusw1,c
 20966  019136  0EFD               	movlw	-3
 20967  019138  6AE3               	clrf	plusw1,c
 20968  01913A                     l2106:
 20969                           
 20970                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 20971                           ;stkvar	_i @ sp[(-4)+2]
 20972  01913A  0EFE               	movlw	-2
 20973  01913C  6AE3               	clrf	plusw1,c
 20974  01913E  0EFF               	movlw	-1
 20975  019140  6AE3               	clrf	plusw1,c
 20976                           
 20977                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 20978  019142  D01E               	goto	l11422
 20979  019144                     l11418:
 20980                           
 20981                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 20982                           ;stkvar	_fp @ sp[(-4)+-2]
 20983  019144  0EFA               	movlw	-6
 20984  019146  006F FF8F FFE6     	movff	plusw1,postinc1
 20985  01914C  006F FF8F FFE6     	movff	plusw1,postinc1
 20986  019152  0E20               	movlw	32
 20987  019154  6EE6               	movwf	postinc1,c
 20988  019156  0E00               	movlw	0
 20989  019158  6EE6               	movwf	postinc1,c
 20990  01915A  EC51  F0C7         	call	_fputc	;wreg free
 20991                           
 20992                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 20993                           ;stkvar	_i @ sp[(-4)+2]
 20994  01915E  0EFE               	movlw	-2
 20995  019160  50E3               	movf	plusw1,w,c
 20996  019162  0F01               	addlw	1
 20997  019164  6E28               	movwf	btemp^0,c
 20998  019166  0EFE               	movlw	-2
 20999  019168  0060  F0A3  FFE3   	movff	btemp,plusw1
 21000  01916E  6A28               	clrf	btemp^0,c
 21001  019170  0EFF               	movlw	-1
 21002  019172  50E3               	movf	plusw1,w,c
 21003  019174  2028               	addwfc	btemp^0,w,c
 21004  019176  6E28               	movwf	btemp^0,c
 21005  019178  0EFF               	movlw	-1
 21006  01917A  0060  F0A3  FFE3   	movff	btemp,plusw1
 21007  019180                     l11422:
 21008                           
 21009                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 21010                           ;stkvar	_w @ sp[(-4)+0]
 21011                           ;stkvar	_i @ sp[(-4)+2]
 21012  019180  50E1               	movf	fsr1l,w,c
 21013  019182  0FFE               	addlw	-2
 21014  019184  6ED9               	movwf	fsr2l,c
 21015  019186  50E2               	movf	fsr1h,w,c
 21016  019188  6EDA               	movwf	fsr2h,c
 21017  01918A  0EFF               	movlw	255
 21018  01918C  22DA               	addwfc	fsr2h,f,c
 21019  01918E  0EFC               	movlw	-4
 21020  019190  50E3               	movf	plusw1,w,c
 21021  019192  5CDE               	subwf	postinc2,w,c
 21022  019194  50DE               	movf	postinc2,w,c
 21023  019196  0A80               	xorlw	128
 21024  019198  6E28               	movwf	btemp^0,c
 21025  01919A  0EFD               	movlw	-3
 21026  01919C  50E3               	movf	plusw1,w,c
 21027  01919E  0A80               	xorlw	128
 21028  0191A0  5828               	subwfb	btemp^0,w,c
 21029  0191A2  A0D8               	btfss	status,0,c
 21030  0191A4  D7CF               	goto	l11418
 21031                           
 21032                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 21033  0191A6  B04C               	btfsc	_flags^0,0,c
 21034  0191A8  D010               	goto	l11426
 21035                           
 21036                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 21037                           ;stkvar	_fp @ sp[(-4)+-2]
 21038  0191AA  0EFA               	movlw	-6
 21039  0191AC  006F FF8F FFE6     	movff	plusw1,postinc1
 21040  0191B2  006F FF8F FFE6     	movff	plusw1,postinc1
 21041                           
 21042                           ;stkvar	_buf @ sp[(-6)+-4]
 21043  0191B8  0EF6               	movlw	-10
 21044  0191BA  006F FF8F FFE6     	movff	plusw1,postinc1
 21045  0191C0  006F FF8F FFE6     	movff	plusw1,postinc1
 21046  0191C6  EC9F  F0CF         	call	_fputs	;wreg free
 21047  0191CA                     l11426:
 21048                           
 21049                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 21050                           ;stkvar	_w @ sp[(-4)+0]
 21051                           ;stkvar	_buf @ sp[(-4)+-4]
 21052  0191CA  0EF8               	movlw	-8
 21053  0191CC  006F FF8F FFE6     	movff	plusw1,postinc1
 21054  0191D2  006F FF8F FFE6     	movff	plusw1,postinc1
 21055  0191D8  EC4E  F0CF         	call	_strlen	;wreg free
 21056  0191DC  0EFC               	movlw	-4
 21057  0191DE  50E3               	movf	plusw1,w,c
 21058  0191E0  2628               	addwf	btemp^0,f,c
 21059  0191E2  0EFD               	movlw	-3
 21060  0191E4  50E3               	movf	plusw1,w,c
 21061  0191E6  2229               	addwfc	(btemp+1)^0,f,c
 21062                           
 21063                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 21064  0191E8  0EF6               	movlw	246
 21065  0191EA  26E1               	addwf	fsr1l,f,c
 21066  0191EC  0EFF               	movlw	255
 21067  0191EE  22E2               	addwfc	fsr1h,f,c
 21068  0191F0  0012               	return		;funcret
 21069  0191F2                     __end_of_pad:
 21070                           	opt callstack 0
 21071                           
 21072 ;; *************** function _strlen *****************
 21073 ;; Defined at:
 21074 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 21075 ;; Parameters:    Size  Location     Type
 21076 ;;  s               2  [STACK] PTR const unsigned char 
 21077 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 21078 ;;		 -> spin(120), STR_47(9), STR_46(12), D.lcd(480), 
 21079 ;;		 -> D(482), T(144), port_data(512), STR_3(6), 
 21080 ;;		 -> V(189), 
 21081 ;; Auto vars:     Size  Location     Type
 21082 ;;  a               2  [STACK] PTR const unsigned char 
 21083 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 21084 ;;		 -> spin(120), STR_47(9), STR_46(12), D.lcd(480), 
 21085 ;;		 -> D(482), T(144), port_data(512), STR_3(6), 
 21086 ;;		 -> V(189), 
 21087 ;; Return value:  Size  Location     Type
 21088 ;;                  2  [STACK] unsigned int 
 21089 ;; Registers used:
 21090 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 21091 ;; Tracked objects:
 21092 ;;		On entry : 0/0
 21093 ;;		On exit  : 0/0
 21094 ;;		Unchanged: 0/0
 21095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21099 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21100 ;;Total ram usage:        0 bytes
 21101 ;; Hardware stack levels used:    1
 21102 ;; Hardware stack levels required when called:   15
 21103 ;; This function calls:
 21104 ;;		Nothing
 21105 ;; This function is called by:
 21106 ;;		_eaDogM_WriteString
 21107 ;;		_spinners
 21108 ;;		_calc_bsoc
 21109 ;;		_pad
 21110 ;;		_stoa
 21111 ;; This function uses a reentrant model
 21112 ;;
 21113                           
 21114                           	psect	text72
 21115  019E9C                     __ptext72:
 21116                           	opt callstack 0
 21117  019E9C                     _strlen:
 21118                           	opt callstack 0
 21119                           
 21120                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21121  019E9C  52E6               	movf	postinc1,f,c
 21122  019E9E  52E6               	movf	postinc1,f,c
 21123                           
 21124                           ;stkvar	_s @ sp[(-2)+-2]
 21125                           
 21126                           ;incstack = 0
 21127 ;; hardware stack exceeded
 21128  019EA0  0EFC               	movlw	-4
 21129  019EA2  006F FF8C  F032    	movff	plusw1,btemp+10
 21130  019EA8  0EFD               	movlw	-3
 21131  019EAA  006F FF8C  F033    	movff	plusw1,btemp+11
 21132                           
 21133                           ;stkvar	_a @ sp[(-2)+0]
 21134  019EB0  0EFF               	movlw	-1
 21135  019EB2  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 21136  019EB8  0EFE               	movlw	-2
 21137  019EBA  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 21138  019EC0  D011               	goto	l7472
 21139  019EC2                     l7470:
 21140                           
 21141                           ;stkvar	_s @ sp[(-2)+-2]
 21142  019EC2  0EFC               	movlw	-4
 21143  019EC4  50E3               	movf	plusw1,w,c
 21144  019EC6  0F01               	addlw	1
 21145  019EC8  6E28               	movwf	btemp^0,c
 21146  019ECA  0EFC               	movlw	-4
 21147  019ECC  0060  F0A3  FFE3   	movff	btemp,plusw1
 21148  019ED2  6A28               	clrf	btemp^0,c
 21149  019ED4  0EFD               	movlw	-3
 21150  019ED6  50E3               	movf	plusw1,w,c
 21151  019ED8  2028               	addwfc	btemp^0,w,c
 21152  019EDA  6E28               	movwf	btemp^0,c
 21153  019EDC  0EFD               	movlw	-3
 21154  019EDE  0060  F0A3  FFE3   	movff	btemp,plusw1
 21155  019EE4                     l7472:
 21156                           
 21157                           ;stkvar	_s @ sp[(-2)+-2]
 21158  019EE4  0EFC               	movlw	-4
 21159  019EE6  006F FF8F FFF6     	movff	plusw1,tblptrl
 21160  019EEC  0EFD               	movlw	-3
 21161  019EEE  006F FF8F FFF7     	movff	plusw1,tblptrh
 21162  019EF4  0E00               	movlw	low (__mediumconst shr (0+16))
 21163  019EF6  6EF8               	movwf	tblptru,c
 21164  019EF8  0E1F               	movlw	(high __ramtop+-1)
 21165  019EFA  64F7               	cpfsgt	tblptrh,c
 21166  019EFC  D003               	bra	u5207
 21167  019EFE  0008               	tblrd		*
 21168  019F00  50F5               	movf	tablat,w,c
 21169  019F02  D007               	bra	u5200
 21170  019F04                     u5207:
 21171  019F04  006F FFDB FFE9     	movff	tblptrl,fsr0l
 21172  019F0A  006F FFDF FFEA     	movff	tblptrh,fsr0h
 21173  019F10  50EF               	movf	indf0,w,c
 21174  019F12                     u5200:
 21175  019F12  0900               	iorlw	0
 21176  019F14  A4D8               	btfss	status,2,c
 21177  019F16  D7D5               	goto	l7470
 21178                           
 21179                           ;stkvar	_a @ sp[(-2)+0]
 21180                           ;stkvar	_s @ sp[(-2)+-2]
 21181  019F18  0EFC               	movlw	-4
 21182  019F1A  006F FF8C  F028    	movff	plusw1,btemp
 21183  019F20  0EFD               	movlw	-3
 21184  019F22  006F FF8C  F029    	movff	plusw1,btemp+1
 21185  019F28  0EFE               	movlw	-2
 21186  019F2A  50E3               	movf	plusw1,w,c
 21187  019F2C  5E28               	subwf	btemp^0,f,c
 21188  019F2E  0EFF               	movlw	-1
 21189  019F30  50E3               	movf	plusw1,w,c
 21190  019F32  5A29               	subwfb	(btemp+1)^0,f,c
 21191                           
 21192                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 21193  019F34  52E5               	movf	postdec1,f,c
 21194  019F36  52E5               	movf	postdec1,f,c
 21195  019F38  52E5               	movf	postdec1,f,c
 21196  019F3A  52E5               	movf	postdec1,f,c
 21197  019F3C  0012               	return		;funcret
 21198  019F3E                     __end_of_strlen:
 21199                           	opt callstack 0
 21200                           
 21201 ;; *************** function _fputs *****************
 21202 ;; Defined at:
 21203 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 21204 ;; Parameters:    Size  Location     Type
 21205 ;;  s               2  [STACK] PTR const unsigned char 
 21206 ;;		 -> dbuf(80), 
 21207 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21208 ;;		 -> f(6), NULL(0), 
 21209 ;; Auto vars:     Size  Location     Type
 21210 ;;  i               2  [STACK] int 
 21211 ;;  c               1  [STACK] unsigned char 
 21212 ;; Return value:  Size  Location     Type
 21213 ;;                  2  [STACK] int 
 21214 ;; Registers used:
 21215 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 21216 ;; Tracked objects:
 21217 ;;		On entry : 0/3
 21218 ;;		On exit  : 0/0
 21219 ;;		Unchanged: 0/0
 21220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21224 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21225 ;;Total ram usage:        0 bytes
 21226 ;; Hardware stack levels used:    1
 21227 ;; Hardware stack levels required when called:   18
 21228 ;; This function calls:
 21229 ;;		_fputc
 21230 ;; This function is called by:
 21231 ;;		_pad
 21232 ;; This function uses a reentrant model
 21233 ;;
 21234                           
 21235                           	psect	text73
 21236  019F3E                     __ptext73:
 21237                           	opt callstack 0
 21238  019F3E                     _fputs:
 21239                           	opt callstack 0
 21240                           
 21241                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21242  019F3E  52E6               	movf	postinc1,f,c
 21243  019F40  52E6               	movf	postinc1,f,c
 21244  019F42  52E6               	movf	postinc1,f,c
 21245                           
 21246                           ;stkvar	_i @ sp[(-3)+0]
 21247                           
 21248                           ;incstack = 0
 21249 ;; hardware stack exceeded
 21250  019F44  0EFD               	movlw	-3
 21251  019F46  6AE3               	clrf	plusw1,c
 21252  019F48  0EFE               	movlw	-2
 21253  019F4A  6AE3               	clrf	plusw1,c
 21254  019F4C  D01F               	goto	l11406
 21255  019F4E                     l11402:
 21256                           
 21257                           ;stkvar	_fp @ sp[(-3)+-4]
 21258  019F4E  0EF9               	movlw	-7
 21259  019F50  006F FF8F FFE6     	movff	plusw1,postinc1
 21260  019F56  006F FF8F FFE6     	movff	plusw1,postinc1
 21261                           
 21262                           ;stkvar	_c @ sp[(-5)+2]
 21263  019F5C  0EFD               	movlw	-3
 21264  019F5E  50E3               	movf	plusw1,w,c
 21265  019F60  6EE6               	movwf	postinc1,c
 21266  019F62  0E00               	movlw	0
 21267  019F64  6EE6               	movwf	postinc1,c
 21268  019F66  EC51  F0C7         	call	_fputc	;wreg free
 21269                           
 21270                           ;stkvar	_i @ sp[(-3)+0]
 21271  019F6A  0EFD               	movlw	-3
 21272  019F6C  50E3               	movf	plusw1,w,c
 21273  019F6E  0F01               	addlw	1
 21274  019F70  6E28               	movwf	btemp^0,c
 21275  019F72  0EFD               	movlw	-3
 21276  019F74  0060  F0A3  FFE3   	movff	btemp,plusw1
 21277  019F7A  6A28               	clrf	btemp^0,c
 21278  019F7C  0EFE               	movlw	-2
 21279  019F7E  50E3               	movf	plusw1,w,c
 21280  019F80  2028               	addwfc	btemp^0,w,c
 21281  019F82  6E28               	movwf	btemp^0,c
 21282  019F84  0EFE               	movlw	-2
 21283  019F86  0060  F0A3  FFE3   	movff	btemp,plusw1
 21284  019F8C                     l11406:
 21285                           
 21286                           ;stkvar	_i @ sp[(-3)+0]
 21287  019F8C  0EFD               	movlw	-3
 21288  019F8E  006F FF8C  F032    	movff	plusw1,btemp+10
 21289  019F94  0EFE               	movlw	-2
 21290  019F96  006F FF8C  F033    	movff	plusw1,btemp+11
 21291                           
 21292                           ;stkvar	_s @ sp[(-3)+-2]
 21293  019F9C  0EFB               	movlw	-5
 21294  019F9E  006F FF8C  F030    	movff	plusw1,btemp+8
 21295  019FA4  0EFC               	movlw	-4
 21296  019FA6  006F FF8C  F031    	movff	plusw1,btemp+9
 21297  019FAC  5032               	movf	(btemp+10)^0,w,c
 21298  019FAE  2430               	addwf	(btemp+8)^0,w,c
 21299  019FB0  6ED9               	movwf	fsr2l,c
 21300  019FB2  5033               	movf	(btemp+11)^0,w,c
 21301  019FB4  2031               	addwfc	(btemp+9)^0,w,c
 21302  019FB6  6EDA               	movwf	fsr2h,c
 21303  019FB8  50DF               	movf	indf2,w,c
 21304  019FBA  6E33               	movwf	(btemp+11)^0,c
 21305                           
 21306                           ;stkvar	_c @ sp[(-3)+2]
 21307  019FBC  0EFF               	movlw	-1
 21308  019FBE  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 21309  019FC4  0EFF               	movlw	-1
 21310  019FC6  50E3               	movf	plusw1,w,c
 21311  019FC8  A4D8               	btfss	status,2,c
 21312  019FCA  D7C1               	goto	l11402
 21313                           
 21314                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 21315  019FCC  0EF9               	movlw	249
 21316  019FCE  26E1               	addwf	fsr1l,f,c
 21317  019FD0  0EFF               	movlw	255
 21318  019FD2  22E2               	addwfc	fsr1h,f,c
 21319  019FD4  0012               	return		;funcret
 21320  019FD6                     __end_of_fputs:
 21321                           	opt callstack 0
 21322                           
 21323 ;; *************** function _fputc *****************
 21324 ;; Defined at:
 21325 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 21326 ;; Parameters:    Size  Location     Type
 21327 ;;  c               2  [STACK] int 
 21328 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21329 ;;		 -> f(6), NULL(0), 
 21330 ;; Auto vars:     Size  Location     Type
 21331 ;;		None
 21332 ;; Return value:  Size  Location     Type
 21333 ;;                  2  [STACK] int 
 21334 ;; Registers used:
 21335 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 21336 ;; Tracked objects:
 21337 ;;		On entry : 0/0
 21338 ;;		On exit  : 0/0
 21339 ;;		Unchanged: 0/0
 21340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21344 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21345 ;;Total ram usage:        0 bytes
 21346 ;; Hardware stack levels used:    1
 21347 ;; Hardware stack levels required when called:   17
 21348 ;; This function calls:
 21349 ;;		_putch
 21350 ;; This function is called by:
 21351 ;;		_pad
 21352 ;;		_stoa
 21353 ;;		_vfpfcnvrt
 21354 ;;		_fputs
 21355 ;; This function uses a reentrant model
 21356 ;;
 21357                           
 21358                           	psect	text74
 21359  018EA2                     __ptext74:
 21360                           	opt callstack 0
 21361  018EA2                     _fputc:
 21362                           	opt callstack 0
 21363                           
 21364                           ;stkvar	_fp @ sp[(0)+-4]
 21365                           
 21366                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21367                           ;incstack = 0
 21368 ;; hardware stack exceeded
 21369  018EA2  0EFC               	movlw	-4
 21370  018EA4  006F FF8C  F028    	movff	plusw1,btemp
 21371  018EAA  0EFD               	movlw	-3
 21372  018EAC  50E3               	movf	plusw1,w,c
 21373  018EAE  1028               	iorwf	btemp^0,w,c
 21374  018EB0  B4D8               	btfsc	status,2,c
 21375  018EB2  D009               	goto	u10310
 21376                           
 21377                           ;stkvar	_fp @ sp[(0)+-4]
 21378  018EB4  0EFC               	movlw	-4
 21379  018EB6  006F FF8C  F028    	movff	plusw1,btemp
 21380  018EBC  0EFD               	movlw	-3
 21381  018EBE  50E3               	movf	plusw1,w,c
 21382  018EC0  1028               	iorwf	btemp^0,w,c
 21383  018EC2  A4D8               	btfss	status,2,c
 21384  018EC4  D006               	goto	l11390
 21385  018EC6                     u10310:
 21386                           
 21387                           ;stkvar	_c @ sp[(0)+-2]
 21388  018EC6  0EFE               	movlw	-2
 21389  018EC8  50E3               	movf	plusw1,w,c
 21390  018ECA  6EE6               	movwf	postinc1,c
 21391  018ECC  ECB0  F0DA         	call	_putch	;wreg free
 21392  018ED0  D075               	goto	l3152
 21393  018ED2                     l11390:
 21394                           
 21395                           ;stkvar	_fp @ sp[(0)+-4]
 21396  018ED2  0EFC               	movlw	-4
 21397  018ED4  006F FF8C  F032    	movff	plusw1,btemp+10
 21398  018EDA  0EFD               	movlw	-3
 21399  018EDC  006F FF8C  F033    	movff	plusw1,btemp+11
 21400  018EE2  0E04               	movlw	4
 21401  018EE4  2432               	addwf	(btemp+10)^0,w,c
 21402  018EE6  6ED9               	movwf	fsr2l,c
 21403  018EE8  0E00               	movlw	0
 21404  018EEA  2033               	addwfc	(btemp+11)^0,w,c
 21405  018EEC  6EDA               	movwf	fsr2h,c
 21406  018EEE  50DE               	movf	postinc2,w,c
 21407  018EF0  10DE               	iorwf	postinc2,w,c
 21408  018EF2  B4D8               	btfsc	status,2,c
 21409  018EF4  D026               	goto	u10330
 21410                           
 21411                           ;stkvar	_fp @ sp[(0)+-4]
 21412  018EF6  0EFC               	movlw	-4
 21413  018EF8  006F FF8C  F032    	movff	plusw1,btemp+10
 21414  018EFE  0EFD               	movlw	-3
 21415  018F00  006F FF8C  F033    	movff	plusw1,btemp+11
 21416  018F06  0E04               	movlw	4
 21417  018F08  2432               	addwf	(btemp+10)^0,w,c
 21418  018F0A  6ED9               	movwf	fsr2l,c
 21419  018F0C  0E00               	movlw	0
 21420  018F0E  2033               	addwfc	(btemp+11)^0,w,c
 21421  018F10  6EDA               	movwf	fsr2h,c
 21422                           
 21423                           ;stkvar	_fp @ sp[(0)+-4]
 21424  018F12  0EFC               	movlw	-4
 21425  018F14  006F FF8C  F032    	movff	plusw1,btemp+10
 21426  018F1A  0EFD               	movlw	-3
 21427  018F1C  006F FF8C  F033    	movff	plusw1,btemp+11
 21428  018F22  0E02               	movlw	2
 21429  018F24  2432               	addwf	(btemp+10)^0,w,c
 21430  018F26  6EE9               	movwf	fsr0l,c
 21431  018F28  0E00               	movlw	0
 21432  018F2A  2033               	addwfc	(btemp+11)^0,w,c
 21433  018F2C  6EEA               	movwf	fsr0h,c
 21434  018F2E  50DE               	movf	postinc2,w,c
 21435  018F30  5CEE               	subwf	postinc0,w,c
 21436  018F32  50EE               	movf	postinc0,w,c
 21437  018F34  0A80               	xorlw	128
 21438  018F36  6E28               	movwf	btemp^0,c
 21439  018F38  50DE               	movf	postinc2,w,c
 21440  018F3A  0A80               	xorlw	128
 21441  018F3C  5828               	subwfb	btemp^0,w,c
 21442  018F3E  B0D8               	btfsc	status,0,c
 21443  018F40  D03D               	goto	l3152
 21444  018F42                     u10330:
 21445                           
 21446                           ;stkvar	_c @ sp[(0)+-2]
 21447                           ;stkvar	_fp @ sp[(0)+-4]
 21448  018F42  0EFC               	movlw	-4
 21449  018F44  006F FF8C  F032    	movff	plusw1,btemp+10
 21450  018F4A  0EFD               	movlw	-3
 21451  018F4C  006F FF8C  F033    	movff	plusw1,btemp+11
 21452  018F52  0E02               	movlw	2
 21453  018F54  2432               	addwf	(btemp+10)^0,w,c
 21454  018F56  6ED9               	movwf	fsr2l,c
 21455  018F58  0E00               	movlw	0
 21456  018F5A  2033               	addwfc	(btemp+11)^0,w,c
 21457  018F5C  6EDA               	movwf	fsr2h,c
 21458  018F5E  006F FF78  F032    	movff	postinc2,btemp+10
 21459  018F64  006F FF74  F033    	movff	postdec2,btemp+11
 21460                           
 21461                           ;stkvar	_fp @ sp[(0)+-4]
 21462  018F6A  0EFC               	movlw	-4
 21463  018F6C  006F FF8F FFD9     	movff	plusw1,fsr2l
 21464  018F72  0EFD               	movlw	-3
 21465  018F74  006F FF8F FFDA     	movff	plusw1,fsr2h
 21466  018F7A  006F FF78  F030    	movff	postinc2,btemp+8
 21467  018F80  006F FF74  F031    	movff	postdec2,btemp+9
 21468  018F86  5032               	movf	(btemp+10)^0,w,c
 21469  018F88  2430               	addwf	(btemp+8)^0,w,c
 21470  018F8A  6ED9               	movwf	fsr2l,c
 21471  018F8C  5033               	movf	(btemp+11)^0,w,c
 21472  018F8E  2031               	addwfc	(btemp+9)^0,w,c
 21473  018F90  6EDA               	movwf	fsr2h,c
 21474  018F92  0EFE               	movlw	-2
 21475  018F94  006F FF8F FFDF     	movff	plusw1,indf2
 21476                           
 21477                           ;stkvar	_fp @ sp[(0)+-4]
 21478  018F9A  0EFC               	movlw	-4
 21479  018F9C  006F FF8C  F032    	movff	plusw1,btemp+10
 21480  018FA2  0EFD               	movlw	-3
 21481  018FA4  006F FF8C  F033    	movff	plusw1,btemp+11
 21482  018FAA  0E02               	movlw	2
 21483  018FAC  2432               	addwf	(btemp+10)^0,w,c
 21484  018FAE  6ED9               	movwf	fsr2l,c
 21485  018FB0  0E00               	movlw	0
 21486  018FB2  2033               	addwfc	(btemp+11)^0,w,c
 21487  018FB4  6EDA               	movwf	fsr2h,c
 21488  018FB6  2ADE               	incf	postinc2,f,c
 21489  018FB8  0E00               	movlw	0
 21490  018FBA  22DD               	addwfc	postdec2,f,c
 21491  018FBC                     l3152:
 21492                           
 21493                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 21494  018FBC  52E5               	movf	postdec1,f,c
 21495  018FBE  52E5               	movf	postdec1,f,c
 21496  018FC0  52E5               	movf	postdec1,f,c
 21497  018FC2  52E5               	movf	postdec1,f,c
 21498  018FC4  0012               	return		;funcret
 21499  018FC6                     __end_of_fputc:
 21500                           	opt callstack 0
 21501                           
 21502 ;; *************** function _putch *****************
 21503 ;; Defined at:
 21504 ;;		line 170 in file "eadog.c"
 21505 ;; Parameters:    Size  Location     Type
 21506 ;;  c               1  [STACK] unsigned char 
 21507 ;; Auto vars:     Size  Location     Type
 21508 ;;		None
 21509 ;; Return value:  Size  Location     Type
 21510 ;;                  1  [STACK] void 
 21511 ;; Registers used:
 21512 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 21513 ;; Tracked objects:
 21514 ;;		On entry : 0/0
 21515 ;;		On exit  : 0/0
 21516 ;;		Unchanged: 0/0
 21517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21521 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21522 ;;Total ram usage:        0 bytes
 21523 ;; Hardware stack levels used:    1
 21524 ;; Hardware stack levels required when called:   16
 21525 ;; This function calls:
 21526 ;;		_ringBufS_put_dma
 21527 ;; This function is called by:
 21528 ;;		_fputc
 21529 ;; This function uses a reentrant model
 21530 ;;
 21531                           
 21532                           	psect	text75
 21533  01B560                     __ptext75:
 21534                           	opt callstack 0
 21535  01B560                     _putch:
 21536                           	opt callstack 0
 21537                           
 21538                           ;eadog.c: 170: void putch(char c);eadog.c: 171: {;eadog.c: 172:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 21539                           ;stkvar	_c @ sp[(0)+-1]
 21540                           
 21541                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21542                           ;incstack = 0
 21543 ;; hardware stack exceeded
 21544  01B560  0EFF               	movlw	-1
 21545  01B562  50E3               	movf	plusw1,w,c
 21546  01B564  6EE6               	movwf	postinc1,c
 21547  01B566  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 21548  01B56C  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 21549  01B572  ECA6  F0CE         	call	_ringBufS_put_dma	;wreg free
 21550                           
 21551                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 21552  01B576  52E5               	movf	postdec1,f,c
 21553  01B578  0012               	return		;funcret
 21554  01B57A                     __end_of_putch:
 21555                           	opt callstack 0
 21556                           
 21557 ;; *************** function _ringBufS_put_dma *****************
 21558 ;; Defined at:
 21559 ;;		line 67 in file "ringbufs.c"
 21560 ;; Parameters:    Size  Location     Type
 21561 ;;  _this           2  [STACK] PTR struct ringBufS_t
 21562 ;;		 -> ring_buf1(67), 
 21563 ;;  c               1  [STACK] const unsigned char 
 21564 ;; Auto vars:     Size  Location     Type
 21565 ;;		None
 21566 ;; Return value:  Size  Location     Type
 21567 ;;                  1  [STACK] void 
 21568 ;; Registers used:
 21569 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 21570 ;; Tracked objects:
 21571 ;;		On entry : 0/0
 21572 ;;		On exit  : 0/0
 21573 ;;		Unchanged: 0/0
 21574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21578 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21579 ;;Total ram usage:        0 bytes
 21580 ;; Hardware stack levels used:    1
 21581 ;; Hardware stack levels required when called:   15
 21582 ;; This function calls:
 21583 ;;		Nothing
 21584 ;; This function is called by:
 21585 ;;		_putch
 21586 ;; This function uses a reentrant model
 21587 ;;
 21588                           
 21589                           	psect	text76
 21590  019D4C                     __ptext76:
 21591                           	opt callstack 0
 21592  019D4C                     _ringBufS_put_dma:
 21593                           	opt callstack 0
 21594                           
 21595                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 21596                           ;stkvar	__this @ sp[(0)+-2]
 21597                           
 21598                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21599                           ;incstack = 0
 21600 ;; hardware stack exceeded
 21601  019D4C  0EFE               	movlw	-2
 21602  019D4E  006F FF8C  F032    	movff	plusw1,btemp+10
 21603  019D54  0EFF               	movlw	-1
 21604  019D56  006F FF8C  F033    	movff	plusw1,btemp+11
 21605  019D5C  0E42               	movlw	66
 21606  019D5E  2432               	addwf	(btemp+10)^0,w,c
 21607  019D60  6ED9               	movwf	fsr2l,c
 21608  019D62  0E00               	movlw	0
 21609  019D64  2033               	addwfc	(btemp+11)^0,w,c
 21610  019D66  6EDA               	movwf	fsr2h,c
 21611  019D68  0E40               	movlw	64
 21612  019D6A  60DF               	cpfslt	indf2,c
 21613  019D6C  D040               	goto	l1577
 21614                           
 21615                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 21616                           ;stkvar	_c @ sp[(0)+-3]
 21617                           ;stkvar	__this @ sp[(0)+-2]
 21618  019D6E  0EFE               	movlw	-2
 21619  019D70  006F FF8C  F032    	movff	plusw1,btemp+10
 21620  019D76  0EFF               	movlw	-1
 21621  019D78  006F FF8C  F033    	movff	plusw1,btemp+11
 21622  019D7E  0E40               	movlw	64
 21623  019D80  2432               	addwf	(btemp+10)^0,w,c
 21624  019D82  6ED9               	movwf	fsr2l,c
 21625  019D84  0E00               	movlw	0
 21626  019D86  2033               	addwfc	(btemp+11)^0,w,c
 21627  019D88  6EDA               	movwf	fsr2h,c
 21628  019D8A  50DF               	movf	indf2,w,c
 21629  019D8C  6E33               	movwf	(btemp+11)^0,c
 21630                           
 21631                           ;stkvar	__this @ sp[(0)+-2]
 21632  019D8E  0EFE               	movlw	-2
 21633  019D90  006F FF8C  F030    	movff	plusw1,btemp+8
 21634  019D96  0EFF               	movlw	-1
 21635  019D98  006F FF8C  F031    	movff	plusw1,btemp+9
 21636  019D9E  5033               	movf	(btemp+11)^0,w,c
 21637  019DA0  2430               	addwf	(btemp+8)^0,w,c
 21638  019DA2  6ED9               	movwf	fsr2l,c
 21639  019DA4  0E00               	movlw	0
 21640  019DA6  2031               	addwfc	(btemp+9)^0,w,c
 21641  019DA8  6EDA               	movwf	fsr2h,c
 21642  019DAA  0EFD               	movlw	-3
 21643  019DAC  006F FF8F FFDF     	movff	plusw1,indf2
 21644                           
 21645                           ;ringbufs.c: 71:   ++_this->head;
 21646                           ;stkvar	__this @ sp[(0)+-2]
 21647  019DB2  0EFE               	movlw	-2
 21648  019DB4  006F FF8C  F032    	movff	plusw1,btemp+10
 21649  019DBA  0EFF               	movlw	-1
 21650  019DBC  006F FF8C  F033    	movff	plusw1,btemp+11
 21651  019DC2  0E40               	movlw	64
 21652  019DC4  2432               	addwf	(btemp+10)^0,w,c
 21653  019DC6  6ED9               	movwf	fsr2l,c
 21654  019DC8  0E00               	movlw	0
 21655  019DCA  2033               	addwfc	(btemp+11)^0,w,c
 21656  019DCC  6EDA               	movwf	fsr2h,c
 21657  019DCE  2ADF               	incf	indf2,f,c
 21658                           
 21659                           ;ringbufs.c: 72:   ++_this->count;
 21660                           ;stkvar	__this @ sp[(0)+-2]
 21661  019DD0  0EFE               	movlw	-2
 21662  019DD2  006F FF8C  F032    	movff	plusw1,btemp+10
 21663  019DD8  0EFF               	movlw	-1
 21664  019DDA  006F FF8C  F033    	movff	plusw1,btemp+11
 21665  019DE0  0E42               	movlw	66
 21666  019DE2  2432               	addwf	(btemp+10)^0,w,c
 21667  019DE4  6ED9               	movwf	fsr2l,c
 21668  019DE6  0E00               	movlw	0
 21669  019DE8  2033               	addwfc	(btemp+11)^0,w,c
 21670  019DEA  6EDA               	movwf	fsr2h,c
 21671  019DEC  2ADF               	incf	indf2,f,c
 21672  019DEE                     l1577:
 21673                           
 21674                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 21675  019DEE  52E5               	movf	postdec1,f,c
 21676  019DF0  52E5               	movf	postdec1,f,c
 21677  019DF2  52E5               	movf	postdec1,f,c
 21678  019DF4  0012               	return		;funcret
 21679  019DF6                     __end_of_ringBufS_put_dma:
 21680                           	opt callstack 0
 21681                           
 21682 ;; *************** function _atoi *****************
 21683 ;; Defined at:
 21684 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 21685 ;; Parameters:    Size  Location     Type
 21686 ;;  s               2  [STACK] PTR const unsigned char 
 21687 ;;		 -> STR_65(85), STR_63(3), STR_62(3), STR_61(19), 
 21688 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
 21689 ;;		 -> STR_56(19), STR_55(24), STR_54(15), STR_53(15), 
 21690 ;;		 -> STR_52(15), STR_51(10), STR_50(10), STR_49(19), 
 21691 ;;		 -> STR_48(19), STR_45(3), STR_44(3), STR_43(3), 
 21692 ;;		 -> STR_42(17), STR_41(16), STR_40(16), STR_39(20), 
 21693 ;;		 -> STR_38(20), STR_37(20), STR_36(20), STR_35(20), 
 21694 ;;		 -> STR_34(20), STR_33(19), STR_32(19), STR_31(19), 
 21695 ;;		 -> STR_30(19), STR_29(19), STR_28(19), STR_27(19), 
 21696 ;;		 -> STR_26(19), STR_25(19), STR_24(19), STR_23(19), 
 21697 ;;		 -> STR_22(19), STR_21(17), STR_20(16), STR_19(16), 
 21698 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(21), 
 21699 ;;		 -> STR_14(17), STR_13(17), STR_12(17), STR_11(22), 
 21700 ;;		 -> STR_10(22), STR_9(23), STR_8(18), STR_7(17), 
 21701 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_2(15), 
 21702 ;;		 -> STR_1(17), 
 21703 ;; Auto vars:     Size  Location     Type
 21704 ;;  n               2  [STACK] int 
 21705 ;;  neg             2  [STACK] int 
 21706 ;; Return value:  Size  Location     Type
 21707 ;;                  2  [STACK] int 
 21708 ;; Registers used:
 21709 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 21710 ;; Tracked objects:
 21711 ;;		On entry : 0/0
 21712 ;;		On exit  : 0/0
 21713 ;;		Unchanged: 0/0
 21714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21719 ;;Total ram usage:        0 bytes
 21720 ;; Hardware stack levels used:    1
 21721 ;; Hardware stack levels required when called:   16
 21722 ;; This function calls:
 21723 ;;		_isdigit
 21724 ;;		_isspace
 21725 ;; This function is called by:
 21726 ;;		_vfpfcnvrt
 21727 ;; This function uses a reentrant model
 21728 ;;
 21729                           
 21730                           	psect	text77
 21731  0170CE                     __ptext77:
 21732                           	opt callstack 0
 21733  0170CE                     _atoi:
 21734                           	opt callstack 0
 21735                           
 21736                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21737  0170CE  0E09               	movlw	9
 21738  0170D0  26E1               	addwf	fsr1l,f,c
 21739  0170D2  0E00               	movlw	0
 21740  0170D4  22E2               	addwfc	fsr1h,f,c
 21741                           
 21742                           ;stkvar	_n @ sp[(-9)+5]
 21743                           
 21744                           ;incstack = 0
 21745 ;; hardware stack exceeded
 21746  0170D6  0EFC               	movlw	-4
 21747  0170D8  6AE3               	clrf	plusw1,c
 21748  0170DA  0EFD               	movlw	-3
 21749  0170DC  6AE3               	clrf	plusw1,c
 21750                           
 21751                           ;stkvar	_neg @ sp[(-9)+7]
 21752  0170DE  0EFE               	movlw	-2
 21753  0170E0  6AE3               	clrf	plusw1,c
 21754  0170E2  0EFF               	movlw	-1
 21755  0170E4  6AE3               	clrf	plusw1,c
 21756  0170E6  D011               	goto	l9080
 21757  0170E8                     l9078:
 21758                           
 21759                           ;stkvar	_s @ sp[(-9)+-2]
 21760  0170E8  0EF5               	movlw	-11
 21761  0170EA  50E3               	movf	plusw1,w,c
 21762  0170EC  0F01               	addlw	1
 21763  0170EE  6E28               	movwf	btemp^0,c
 21764  0170F0  0EF5               	movlw	-11
 21765  0170F2  0060  F0A3  FFE3   	movff	btemp,plusw1
 21766  0170F8  6A28               	clrf	btemp^0,c
 21767  0170FA  0EF6               	movlw	-10
 21768  0170FC  50E3               	movf	plusw1,w,c
 21769  0170FE  2028               	addwfc	btemp^0,w,c
 21770  017100  6E28               	movwf	btemp^0,c
 21771  017102  0EF6               	movlw	-10
 21772  017104  0060  F0A3  FFE3   	movff	btemp,plusw1
 21773  01710A                     l9080:
 21774                           
 21775                           ;stkvar	_atoi$5941 @ sp[(-9)+4]
 21776  01710A  0EFB               	movlw	-5
 21777  01710C  6AE3               	clrf	plusw1,c
 21778  01710E  2AE3               	incf	plusw1,f,c
 21779                           
 21780                           ;stkvar	_s @ sp[(-9)+-2]
 21781  017110  50E1               	movf	fsr1l,w,c
 21782  017112  0FF5               	addlw	-11
 21783  017114  6ED9               	movwf	fsr2l,c
 21784  017116  50E2               	movf	fsr1h,w,c
 21785  017118  6EDA               	movwf	fsr2h,c
 21786  01711A  0EFF               	movlw	255
 21787  01711C  22DA               	addwfc	fsr2h,f,c
 21788  01711E  006F FF7B FFF6     	movff	postinc2,tblptrl
 21789  017124  006F FF77 FFF7     	movff	postdec2,tblptrh
 21790  01712A                     	if	0	;tblptru may be non-zero
 21791  01712A                     	endif
 21792  01712A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21793  01712A  0E00               	movlw	low (__mediumconst shr (0+16))
 21794  01712C  6EF8               	movwf	tblptru,c
 21795  01712E                     	endif
 21796  01712E  0008               	tblrd		*
 21797  017130  50F5               	movf	tablat,w,c
 21798  017132  0A20               	xorlw	32
 21799  017134  B4D8               	btfsc	status,2,c
 21800  017136  D023               	goto	l9088
 21801  017138  0EF7               	movlw	247
 21802  01713A  6E32               	movwf	(btemp+10)^0,c
 21803  01713C  0EFF               	movlw	255
 21804  01713E  6E33               	movwf	(btemp+11)^0,c
 21805                           
 21806                           ;stkvar	_s @ sp[(-9)+-2]
 21807  017140  50E1               	movf	fsr1l,w,c
 21808  017142  0FF5               	addlw	-11
 21809  017144  6ED9               	movwf	fsr2l,c
 21810  017146  50E2               	movf	fsr1h,w,c
 21811  017148  6EDA               	movwf	fsr2h,c
 21812  01714A  0EFF               	movlw	255
 21813  01714C  22DA               	addwfc	fsr2h,f,c
 21814  01714E  006F FF7B FFF6     	movff	postinc2,tblptrl
 21815  017154  006F FF77 FFF7     	movff	postdec2,tblptrh
 21816  01715A                     	if	0	;tblptru may be non-zero
 21817  01715A                     	endif
 21818  01715A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21819  01715A  0E00               	movlw	low (__mediumconst shr (0+16))
 21820  01715C  6EF8               	movwf	tblptru,c
 21821  01715E                     	endif
 21822  01715E  0008               	tblrd		*
 21823  017160  50F5               	movf	tablat,w,c
 21824  017162  6E30               	movwf	(btemp+8)^0,c
 21825  017164  6A31               	clrf	(btemp+9)^0,c
 21826  017166  5032               	movf	(btemp+10)^0,w,c
 21827  017168  2630               	addwf	(btemp+8)^0,f,c
 21828  01716A  5033               	movf	(btemp+11)^0,w,c
 21829  01716C  2231               	addwfc	(btemp+9)^0,f,c
 21830  01716E  5031               	movf	(btemp+9)^0,w,c
 21831  017170  E104               	bnz	u8310
 21832  017172  0E05               	movlw	5
 21833  017174  5C30               	subwf	(btemp+8)^0,w,c
 21834  017176  A0D8               	btfss	status,0,c
 21835  017178  D002               	goto	l9088
 21836  01717A                     u8310:
 21837                           
 21838                           ;stkvar	_atoi$5941 @ sp[(-9)+4]
 21839  01717A  0EFB               	movlw	-5
 21840  01717C  6AE3               	clrf	plusw1,c
 21841  01717E                     l9088:
 21842                           
 21843                           ;stkvar	_atoi$5941 @ sp[(-9)+4]
 21844  01717E  0EFB               	movlw	-5
 21845  017180  50E3               	movf	plusw1,w,c
 21846  017182  6E32               	movwf	(btemp+10)^0,c
 21847  017184  6A33               	clrf	(btemp+11)^0,c
 21848                           
 21849                           ;stkvar	_atoi$5940 @ sp[(-9)+2]
 21850  017186  0EF9               	movlw	-7
 21851  017188  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 21852  01718E  0EFA               	movlw	-6
 21853  017190  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 21854                           
 21855                           ;stkvar	_atoi$5940 @ sp[(-9)+2]
 21856  017196  0EF9               	movlw	-7
 21857  017198  006F FF8C  F028    	movff	plusw1,btemp
 21858  01719E  0EFA               	movlw	-6
 21859  0171A0  50E3               	movf	plusw1,w,c
 21860  0171A2  1028               	iorwf	btemp^0,w,c
 21861  0171A4  B4D8               	btfsc	status,2,c
 21862  0171A6  D01F               	goto	l9098
 21863  0171A8  D79F               	goto	l9078
 21864  0171AA                     l9094:
 21865  0171AA  0E01               	movlw	1
 21866  0171AC  6E32               	movwf	(btemp+10)^0,c
 21867  0171AE  0E00               	movlw	0
 21868  0171B0  6E33               	movwf	(btemp+11)^0,c
 21869                           
 21870                           ;stkvar	_neg @ sp[(-9)+7]
 21871  0171B2  0EFE               	movlw	-2
 21872  0171B4  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 21873  0171BA  0EFF               	movlw	-1
 21874  0171BC  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 21875  0171C2                     l9096:
 21876                           
 21877                           ;stkvar	_s @ sp[(-9)+-2]
 21878  0171C2  0EF5               	movlw	-11
 21879  0171C4  50E3               	movf	plusw1,w,c
 21880  0171C6  0F01               	addlw	1
 21881  0171C8  6E28               	movwf	btemp^0,c
 21882  0171CA  0EF5               	movlw	-11
 21883  0171CC  0060  F0A3  FFE3   	movff	btemp,plusw1
 21884  0171D2  6A28               	clrf	btemp^0,c
 21885  0171D4  0EF6               	movlw	-10
 21886  0171D6  50E3               	movf	plusw1,w,c
 21887  0171D8  2028               	addwfc	btemp^0,w,c
 21888  0171DA  6E28               	movwf	btemp^0,c
 21889  0171DC  0EF6               	movlw	-10
 21890  0171DE  0060  F0A3  FFE3   	movff	btemp,plusw1
 21891  0171E4  D053               	goto	l9104
 21892  0171E6                     l9098:
 21893                           
 21894                           ;stkvar	_s @ sp[(-9)+-2]
 21895  0171E6  50E1               	movf	fsr1l,w,c
 21896  0171E8  0FF5               	addlw	-11
 21897  0171EA  6ED9               	movwf	fsr2l,c
 21898  0171EC  50E2               	movf	fsr1h,w,c
 21899  0171EE  6EDA               	movwf	fsr2h,c
 21900  0171F0  0EFF               	movlw	255
 21901  0171F2  22DA               	addwfc	fsr2h,f,c
 21902  0171F4  006F FF7B FFF6     	movff	postinc2,tblptrl
 21903  0171FA  006F FF77 FFF7     	movff	postdec2,tblptrh
 21904  017200                     	if	0	;tblptru may be non-zero
 21905  017200                     	endif
 21906  017200                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21907  017200  0E00               	movlw	low (__mediumconst shr (0+16))
 21908  017202  6EF8               	movwf	tblptru,c
 21909  017204                     	endif
 21910  017204  0008               	tblrd		*
 21911  017206  50F5               	movf	tablat,w,c
 21912  017208  6E32               	movwf	(btemp+10)^0,c
 21913  01720A  6A33               	clrf	(btemp+11)^0,c
 21914                           
 21915                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21916                           ; Switch size 1, requested type "simple"
 21917                           ; Number of cases is 1, Range of values is 0 to 0
 21918                           ; switch strategies available:
 21919                           ; Name         Instructions Cycles
 21920                           ; simple_byte            4     3 (average)
 21921                           ;	Chosen strategy is simple_byte
 21922  01720C  5033               	movf	(btemp+11)^0,w,c
 21923  01720E  0A00               	xorlw	0	; case 0
 21924  017210  A4D8               	btfss	status,2,c
 21925  017212  D03C               	goto	l9104
 21926                           
 21927                           ; Switch size 1, requested type "simple"
 21928                           ; Number of cases is 2, Range of values is 43 to 45
 21929                           ; switch strategies available:
 21930                           ; Name         Instructions Cycles
 21931                           ; simple_byte            7     4 (average)
 21932                           ;	Chosen strategy is simple_byte
 21933  017214  5032               	movf	(btemp+10)^0,w,c
 21934  017216  0A2B               	xorlw	43	; case 43
 21935  017218  B4D8               	btfsc	status,2,c
 21936  01721A  D7D3               	goto	l9096
 21937  01721C  0A06               	xorlw	6	; case 45
 21938  01721E  B4D8               	btfsc	status,2,c
 21939  017220  D7C4               	goto	l9094
 21940  017222  D034               	goto	l9104
 21941  017224                     l9100:
 21942                           
 21943                           ;stkvar	_n @ sp[(-9)+5]
 21944  017224  0EFC               	movlw	-4
 21945  017226  006F FF8C  F032    	movff	plusw1,btemp+10
 21946  01722C  0EFD               	movlw	-3
 21947  01722E  006F FF8C  F033    	movff	plusw1,btemp+11
 21948  017234  0E0A               	movlw	10
 21949  017236  0232               	mulwf	(btemp+10)^0,c
 21950  017238  006F FFCC  F030    	movff	prodl,btemp+8
 21951  01723E  006F FFD0  F031    	movff	prodh,btemp+9
 21952  017244  0233               	mulwf	(btemp+11)^0,c
 21953  017246  50F3               	movf	prodl,w,c
 21954  017248  2631               	addwf	(btemp+9)^0,f,c
 21955                           
 21956                           ;stkvar	_s @ sp[(-9)+-2]
 21957  01724A  50E1               	movf	fsr1l,w,c
 21958  01724C  0FF5               	addlw	-11
 21959  01724E  6ED9               	movwf	fsr2l,c
 21960  017250  50E2               	movf	fsr1h,w,c
 21961  017252  6EDA               	movwf	fsr2h,c
 21962  017254  0EFF               	movlw	255
 21963  017256  22DA               	addwfc	fsr2h,f,c
 21964  017258  006F FF7B FFF6     	movff	postinc2,tblptrl
 21965  01725E  006F FF77 FFF7     	movff	postdec2,tblptrh
 21966  017264                     	if	0	;tblptru may be non-zero
 21967  017264                     	endif
 21968  017264                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21969  017264  0E00               	movlw	low (__mediumconst shr (0+16))
 21970  017266  6EF8               	movwf	tblptru,c
 21971  017268                     	endif
 21972  017268  0008               	tblrd		*
 21973  01726A  50F5               	movf	tablat,w,c
 21974  01726C  5E30               	subwf	(btemp+8)^0,f,c
 21975  01726E  0E00               	movlw	0
 21976  017270  5A31               	subwfb	(btemp+9)^0,f,c
 21977  017272  0E30               	movlw	48
 21978  017274  2630               	addwf	(btemp+8)^0,f,c
 21979  017276  0E00               	movlw	0
 21980  017278  2231               	addwfc	(btemp+9)^0,f,c
 21981                           
 21982                           ;stkvar	_n @ sp[(-9)+5]
 21983  01727A  0EFC               	movlw	-4
 21984  01727C  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 21985  017282  0EFD               	movlw	-3
 21986  017284  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 21987  01728A  D79B               	goto	l9096
 21988  01728C                     l9104:
 21989  01728C  0ED0               	movlw	208
 21990  01728E  6E32               	movwf	(btemp+10)^0,c
 21991  017290  0EFF               	movlw	255
 21992  017292  6E33               	movwf	(btemp+11)^0,c
 21993                           
 21994                           ;stkvar	_s @ sp[(-9)+-2]
 21995  017294  50E1               	movf	fsr1l,w,c
 21996  017296  0FF5               	addlw	-11
 21997  017298  6ED9               	movwf	fsr2l,c
 21998  01729A  50E2               	movf	fsr1h,w,c
 21999  01729C  6EDA               	movwf	fsr2h,c
 22000  01729E  0EFF               	movlw	255
 22001  0172A0  22DA               	addwfc	fsr2h,f,c
 22002  0172A2  006F FF7B FFF6     	movff	postinc2,tblptrl
 22003  0172A8  006F FF77 FFF7     	movff	postdec2,tblptrh
 22004  0172AE                     	if	0	;tblptru may be non-zero
 22005  0172AE                     	endif
 22006  0172AE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22007  0172AE  0E00               	movlw	low (__mediumconst shr (0+16))
 22008  0172B0  6EF8               	movwf	tblptru,c
 22009  0172B2                     	endif
 22010  0172B2  0008               	tblrd		*
 22011  0172B4  50F5               	movf	tablat,w,c
 22012  0172B6  6E30               	movwf	(btemp+8)^0,c
 22013  0172B8  6A31               	clrf	(btemp+9)^0,c
 22014  0172BA  5032               	movf	(btemp+10)^0,w,c
 22015  0172BC  2630               	addwf	(btemp+8)^0,f,c
 22016  0172BE  5033               	movf	(btemp+11)^0,w,c
 22017  0172C0  2231               	addwfc	(btemp+9)^0,f,c
 22018  0172C2  5031               	movf	(btemp+9)^0,w,c
 22019  0172C4  E106               	bnz	u8330
 22020  0172C6  0E0A               	movlw	10
 22021  0172C8  5C30               	subwf	(btemp+8)^0,w,c
 22022  0172CA  B0D8               	btfsc	status,0,c
 22023  0172CC  D002               	goto	u8330
 22024  0172CE  0E01               	movlw	1
 22025  0172D0  D001               	goto	u8340
 22026  0172D2                     u8330:
 22027  0172D2  0E00               	movlw	0
 22028  0172D4                     u8340:
 22029  0172D4  6E32               	movwf	(btemp+10)^0,c
 22030  0172D6  6A33               	clrf	(btemp+11)^0,c
 22031                           
 22032                           ;stkvar	_atoi$5942 @ sp[(-9)+0]
 22033  0172D8  0EF7               	movlw	-9
 22034  0172DA  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 22035  0172E0  0EF8               	movlw	-8
 22036  0172E2  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 22037                           
 22038                           ;stkvar	_atoi$5942 @ sp[(-9)+0]
 22039  0172E8  0EF7               	movlw	-9
 22040  0172EA  006F FF8C  F028    	movff	plusw1,btemp
 22041  0172F0  0EF8               	movlw	-8
 22042  0172F2  50E3               	movf	plusw1,w,c
 22043  0172F4  1028               	iorwf	btemp^0,w,c
 22044  0172F6  A4D8               	btfss	status,2,c
 22045  0172F8  D795               	goto	l9100
 22046                           
 22047                           ;stkvar	_neg @ sp[(-9)+7]
 22048  0172FA  0EFE               	movlw	-2
 22049  0172FC  006F FF8C  F028    	movff	plusw1,btemp
 22050  017302  0EFF               	movlw	-1
 22051  017304  50E3               	movf	plusw1,w,c
 22052  017306  1028               	iorwf	btemp^0,w,c
 22053  017308  A4D8               	btfss	status,2,c
 22054  01730A  D00E               	goto	l9114
 22055                           
 22056                           ;stkvar	_n @ sp[(-9)+5]
 22057  01730C  0EFC               	movlw	-4
 22058  01730E  006F FF8C  F028    	movff	plusw1,btemp
 22059  017314  1E28               	comf	btemp^0,f,c
 22060  017316  0EFD               	movlw	-3
 22061  017318  006F FF8C  F029    	movff	plusw1,btemp+1
 22062  01731E  1E29               	comf	(btemp+1)^0,f,c
 22063  017320  2A28               	incf	btemp^0,f,c
 22064  017322  B4D8               	btfsc	status,2,c
 22065  017324  2A29               	incf	(btemp+1)^0,f,c
 22066  017326  D008               	goto	l3083
 22067  017328                     l9114:
 22068                           
 22069                           ;stkvar	_n @ sp[(-9)+5]
 22070  017328  0EFC               	movlw	-4
 22071  01732A  006F FF8C  F028    	movff	plusw1,btemp
 22072  017330  0EFD               	movlw	-3
 22073  017332  006F FF8C  F029    	movff	plusw1,btemp+1
 22074  017338                     l3083:
 22075                           
 22076                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 22077  017338  0EF5               	movlw	245
 22078  01733A  26E1               	addwf	fsr1l,f,c
 22079  01733C  0EFF               	movlw	255
 22080  01733E  22E2               	addwfc	fsr1h,f,c
 22081  017340  0012               	return		;funcret
 22082  017342                     __end_of_atoi:
 22083                           	opt callstack 0
 22084                           
 22085 ;; *************** function _isspace *****************
 22086 ;; Defined at:
 22087 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 22088 ;; Parameters:    Size  Location     Type
 22089 ;;  c               2  [STACK] int 
 22090 ;; Auto vars:     Size  Location     Type
 22091 ;;		None
 22092 ;; Return value:  Size  Location     Type
 22093 ;;                  2  [STACK] int 
 22094 ;; Registers used:
 22095 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 22096 ;; Tracked objects:
 22097 ;;		On entry : 0/0
 22098 ;;		On exit  : 0/0
 22099 ;;		Unchanged: 0/0
 22100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22105 ;;Total ram usage:        0 bytes
 22106 ;; Hardware stack levels used:    1
 22107 ;; Hardware stack levels required when called:   15
 22108 ;; This function calls:
 22109 ;;		Nothing
 22110 ;; This function is called by:
 22111 ;;		_atoi
 22112 ;; This function uses a reentrant model
 22113 ;;
 22114                           
 22115                           	psect	text78
 22116  01A8B8                     __ptext78:
 22117                           	opt callstack 0
 22118  01A8B8                     _isspace:
 22119                           	opt callstack 0
 22120                           
 22121                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22122  01A8B8  52E6               	movf	postinc1,f,c
 22123                           
 22124                           ;stkvar	_isspace$5991 @ sp[(-1)+0]
 22125                           
 22126                           ;incstack = 0
 22127 ;; hardware stack exceeded
 22128  01A8BA  0EFF               	movlw	-1
 22129  01A8BC  6AE3               	clrf	plusw1,c
 22130  01A8BE  2AE3               	incf	plusw1,f,c
 22131                           
 22132                           ;stkvar	_c @ sp[(-1)+-2]
 22133  01A8C0  0EFD               	movlw	-3
 22134  01A8C2  006F FF8C  F028    	movff	plusw1,btemp
 22135  01A8C8  0E20               	movlw	32
 22136  01A8CA  1828               	xorwf	btemp^0,w,c
 22137  01A8CC  E104               	bnz	u7160
 22138  01A8CE  0EFE               	movlw	-2
 22139  01A8D0  50E3               	movf	plusw1,w,c
 22140  01A8D2  B4D8               	btfsc	status,2,c
 22141  01A8D4  D012               	goto	l8472
 22142  01A8D6                     u7160:
 22143                           
 22144                           ;stkvar	_c @ sp[(-1)+-2]
 22145  01A8D6  0EFD               	movlw	-3
 22146  01A8D8  50E3               	movf	plusw1,w,c
 22147  01A8DA  0FF7               	addlw	247
 22148  01A8DC  6E32               	movwf	(btemp+10)^0,c
 22149  01A8DE  0EFE               	movlw	-2
 22150  01A8E0  006F FF8C  F033    	movff	plusw1,btemp+11
 22151  01A8E6  0EFF               	movlw	255
 22152  01A8E8  2233               	addwfc	(btemp+11)^0,f,c
 22153  01A8EA  5033               	movf	(btemp+11)^0,w,c
 22154  01A8EC  E104               	bnz	u7170
 22155  01A8EE  0E05               	movlw	5
 22156  01A8F0  5C32               	subwf	(btemp+10)^0,w,c
 22157  01A8F2  A0D8               	btfss	status,0,c
 22158  01A8F4  D002               	goto	l8472
 22159  01A8F6                     u7170:
 22160                           
 22161                           ;stkvar	_isspace$5991 @ sp[(-1)+0]
 22162  01A8F6  0EFF               	movlw	-1
 22163  01A8F8  6AE3               	clrf	plusw1,c
 22164  01A8FA                     l8472:
 22165                           
 22166                           ;stkvar	_isspace$5991 @ sp[(-1)+0]
 22167  01A8FA  0EFF               	movlw	-1
 22168  01A8FC  50E3               	movf	plusw1,w,c
 22169  01A8FE  6E28               	movwf	btemp^0,c
 22170  01A900  6A29               	clrf	(btemp+1)^0,c
 22171                           
 22172                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 22173  01A902  52E5               	movf	postdec1,f,c
 22174  01A904  52E5               	movf	postdec1,f,c
 22175  01A906  52E5               	movf	postdec1,f,c
 22176  01A908  0012               	return		;funcret
 22177  01A90A                     __end_of_isspace:
 22178                           	opt callstack 0
 22179                           
 22180 ;; *************** function _isdigit *****************
 22181 ;; Defined at:
 22182 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 22183 ;; Parameters:    Size  Location     Type
 22184 ;;  c               2  [STACK] int 
 22185 ;; Auto vars:     Size  Location     Type
 22186 ;;		None
 22187 ;; Return value:  Size  Location     Type
 22188 ;;                  2  [STACK] int 
 22189 ;; Registers used:
 22190 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 22191 ;; Tracked objects:
 22192 ;;		On entry : 0/0
 22193 ;;		On exit  : 0/0
 22194 ;;		Unchanged: 0/0
 22195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22199 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22200 ;;Total ram usage:        0 bytes
 22201 ;; Hardware stack levels used:    1
 22202 ;; Hardware stack levels required when called:   15
 22203 ;; This function calls:
 22204 ;;		Nothing
 22205 ;; This function is called by:
 22206 ;;		_vfpfcnvrt
 22207 ;;		_atoi
 22208 ;; This function uses a reentrant model
 22209 ;;
 22210                           
 22211                           	psect	text79
 22212  01AF9E                     __ptext79:
 22213                           	opt callstack 0
 22214  01AF9E                     _isdigit:
 22215                           	opt callstack 0
 22216                           
 22217                           ;stkvar	_c @ sp[(0)+-2]
 22218                           
 22219                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22220                           ;incstack = 0
 22221 ;; hardware stack exceeded
 22222  01AF9E  0EFE               	movlw	-2
 22223  01AFA0  50E3               	movf	plusw1,w,c
 22224  01AFA2  0FD0               	addlw	208
 22225  01AFA4  6E32               	movwf	(btemp+10)^0,c
 22226  01AFA6  0EFF               	movlw	-1
 22227  01AFA8  006F FF8C  F033    	movff	plusw1,btemp+11
 22228  01AFAE  0EFF               	movlw	255
 22229  01AFB0  2233               	addwfc	(btemp+11)^0,f,c
 22230  01AFB2  5033               	movf	(btemp+11)^0,w,c
 22231  01AFB4  E106               	bnz	u6010
 22232  01AFB6  0E0A               	movlw	10
 22233  01AFB8  5C32               	subwf	(btemp+10)^0,w,c
 22234  01AFBA  B0D8               	btfsc	status,0,c
 22235  01AFBC  D002               	goto	u6010
 22236  01AFBE  0E01               	movlw	1
 22237  01AFC0  D001               	goto	u6020
 22238  01AFC2                     u6010:
 22239  01AFC2  0E00               	movlw	0
 22240  01AFC4                     u6020:
 22241  01AFC4  6E28               	movwf	btemp^0,c
 22242  01AFC6  6A29               	clrf	(btemp+1)^0,c
 22243                           
 22244                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 22245  01AFC8  52E5               	movf	postdec1,f,c
 22246  01AFCA  52E5               	movf	postdec1,f,c
 22247  01AFCC  0012               	return		;funcret
 22248  01AFCE                     __end_of_isdigit:
 22249                           	opt callstack 0
 22250                           
 22251 ;; *************** function _set_vterm *****************
 22252 ;; Defined at:
 22253 ;;		line 107 in file "mconfig.c"
 22254 ;; Parameters:    Size  Location     Type
 22255 ;;  vterm           1  [STACK] const unsigned char 
 22256 ;; Auto vars:     Size  Location     Type
 22257 ;;		None
 22258 ;; Return value:  Size  Location     Type
 22259 ;;                  1  [STACK] unsigned char 
 22260 ;; Registers used:
 22261 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 22262 ;; Tracked objects:
 22263 ;;		On entry : 0/1
 22264 ;;		On exit  : 0/0
 22265 ;;		Unchanged: 0/0
 22266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22271 ;;Total ram usage:        0 bytes
 22272 ;; Hardware stack levels used:    1
 22273 ;; Hardware stack levels required when called:   15
 22274 ;; This function calls:
 22275 ;;		Nothing
 22276 ;; This function is called by:
 22277 ;;		_main
 22278 ;;		_check_help
 22279 ;; This function uses a reentrant model
 22280 ;;
 22281                           
 22282                           	psect	text80
 22283  01B4B0                     __ptext80:
 22284                           	opt callstack 0
 22285  01B4B0                     _set_vterm:
 22286                           	opt callstack 15
 22287                           
 22288                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 22289                           ;stkvar	_vterm @ sp[(0)+-1]
 22290                           
 22291                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22292                           ;incstack = 0
 22293  01B4B0  0EFF               	movlw	-1
 22294  01B4B2  006F FF8C  F033    	movff	plusw1,btemp+11
 22295  01B4B8  0E03               	movlw	3
 22296  01B4BA  1633               	andwf	(btemp+11)^0,f,c
 22297  01B4BC  EE22  F1DF         	lfsr	2,_D+480
 22298  01B4C0  50DF               	movf	223,w,c
 22299  01B4C2  1833               	xorwf	(btemp+11)^0,w,c
 22300  01B4C4  0BFE               	andlw	-2
 22301  01B4C6  1833               	xorwf	(btemp+11)^0,w,c
 22302  01B4C8  6EDF               	movwf	223,c
 22303                           
 22304                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 22305  01B4CA  52E5               	movf	postdec1,f,c
 22306  01B4CC  0012               	return		;funcret
 22307  01B4CE                     __end_of_set_vterm:
 22308                           	opt callstack 0
 22309                           
 22310 ;; *************** function _set_temp_display_help *****************
 22311 ;; Defined at:
 22312 ;;		line 211 in file "mconfig.c"
 22313 ;; Parameters:    Size  Location     Type
 22314 ;;  new_response    1  [STACK] const enum E16509
 22315 ;; Auto vars:     Size  Location     Type
 22316 ;;		None
 22317 ;; Return value:  Size  Location     Type
 22318 ;;                  1  [STACK] enum E16509
 22319 ;; Registers used:
 22320 ;;		wreg, fsr1l, fsr1h
 22321 ;; Tracked objects:
 22322 ;;		On entry : 0/2
 22323 ;;		On exit  : 3F/2
 22324 ;;		Unchanged: 0/0
 22325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22330 ;;Total ram usage:        0 bytes
 22331 ;; Hardware stack levels used:    1
 22332 ;; Hardware stack levels required when called:   15
 22333 ;; This function calls:
 22334 ;;		Nothing
 22335 ;; This function is called by:
 22336 ;;		_check_help
 22337 ;; This function uses a reentrant model
 22338 ;;
 22339                           
 22340                           	psect	text81
 22341  01B64E                     __ptext81:
 22342                           	opt callstack 0
 22343  01B64E                     _set_temp_display_help:
 22344                           	opt callstack 14
 22345                           
 22346                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 22347                           
 22348                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22349                           ;incstack = 0
 22350  01B64E  0102               	movlb	2	; () banked
 22351  01B650  51A5               	movf	(_V+165)& (0+255),w,b	;volatile
 22352                           
 22353                           ; BSR set to: 2
 22354                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 22355                           ;stkvar	_new_response_info @ sp[(0)+-1]
 22356  01B652  0EFF               	movlw	-1
 22357  01B654  006F FF8C  F2A5    	movff	plusw1,_V+165	;volatile
 22358                           
 22359                           ; BSR set to: 2
 22360                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 22361  01B65A  52E5               	movf	postdec1,f,c
 22362  01B65C  0012               	return		;funcret
 22363  01B65E                     __end_of_set_temp_display_help:
 22364                           	opt callstack 0
 22365                           
 22366 ;; *************** function _set_display_info *****************
 22367 ;; Defined at:
 22368 ;;		line 200 in file "mconfig.c"
 22369 ;; Parameters:    Size  Location     Type
 22370 ;;  new_response    1  [STACK] const enum E16509
 22371 ;; Auto vars:     Size  Location     Type
 22372 ;;		None
 22373 ;; Return value:  Size  Location     Type
 22374 ;;                  1  [STACK] enum E16994
 22375 ;; Registers used:
 22376 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 22377 ;; Tracked objects:
 22378 ;;		On entry : 0/0
 22379 ;;		On exit  : 0/0
 22380 ;;		Unchanged: 0/0
 22381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22386 ;;Total ram usage:        0 bytes
 22387 ;; Hardware stack levels used:    1
 22388 ;; Hardware stack levels required when called:   16
 22389 ;; This function calls:
 22390 ;;		_TimerDone
 22391 ;; This function is called by:
 22392 ;;		_main
 22393 ;;		_check_help
 22394 ;; This function uses a reentrant model
 22395 ;;
 22396                           
 22397                           	psect	text82
 22398  01B4CE                     __ptext82:
 22399                           	opt callstack 0
 22400  01B4CE                     _set_display_info:
 22401                           	opt callstack 14
 22402                           
 22403                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 22404                           
 22405                           ; BSR set to: 2
 22406                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22407                           ;incstack = 0
 22408  01B4CE  0E07               	movlw	7
 22409  01B4D0  6EE6               	movwf	postinc1,c
 22410  01B4D2  EC91  F0D8         	call	_TimerDone	;wreg free
 22411  01B4D6  5028               	movf	btemp^0,w,c
 22412  01B4D8  B4D8               	btfsc	status,2,c
 22413  01B4DA  D006               	goto	l1712
 22414                           
 22415                           ;mconfig.c: 205:   old_info = V.response.info;
 22416  01B4DC  0102               	movlb	2	; () banked
 22417  01B4DE  51A4               	movf	(_V+164)& (0+255),w,b	;volatile
 22418                           
 22419                           ; BSR set to: 2
 22420                           ;mconfig.c: 206:   V.response.info = new_response_info;
 22421                           ;stkvar	_new_response_info @ sp[(0)+-1]
 22422  01B4E0  0EFF               	movlw	-1
 22423  01B4E2  006F FF8C  F2A4    	movff	plusw1,_V+164	;volatile
 22424  01B4E8                     l1712:
 22425                           
 22426                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 22427  01B4E8  52E5               	movf	postdec1,f,c
 22428  01B4EA  0012               	return		;funcret
 22429  01B4EC                     __end_of_set_display_info:
 22430                           	opt callstack 0
 22431                           
 22432 ;; *************** function _mode_lamp_dim *****************
 22433 ;; Defined at:
 22434 ;;		line 13 in file "mconfig.c"
 22435 ;; Parameters:    Size  Location     Type
 22436 ;;  level           2  [STACK] const unsigned short 
 22437 ;; Auto vars:     Size  Location     Type
 22438 ;;		None
 22439 ;; Return value:  Size  Location     Type
 22440 ;;                  1  [STACK] void 
 22441 ;; Registers used:
 22442 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22443 ;; Tracked objects:
 22444 ;;		On entry : 0/2
 22445 ;;		On exit  : 0/0
 22446 ;;		Unchanged: 0/0
 22447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22451 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22452 ;;Total ram usage:        0 bytes
 22453 ;; Hardware stack levels used:    1
 22454 ;; Hardware stack levels required when called:   16
 22455 ;; This function calls:
 22456 ;;		_PWM8_LoadDutyValue
 22457 ;; This function is called by:
 22458 ;;		_main
 22459 ;;		_check_help
 22460 ;; This function uses a reentrant model
 22461 ;;
 22462                           
 22463                           	psect	text83
 22464  01B596                     __ptext83:
 22465                           	opt callstack 0
 22466  01B596                     _mode_lamp_dim:
 22467                           	opt callstack 14
 22468                           
 22469                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 22470                           ;stkvar	_level @ sp[(0)+-2]
 22471                           
 22472                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22473                           ;incstack = 0
 22474  01B596  0EFE               	movlw	-2
 22475  01B598  006F FF8F FFE6     	movff	plusw1,postinc1
 22476  01B59E  006F FF8F FFE6     	movff	plusw1,postinc1
 22477  01B5A4  ECEF  F0D5         	call	_PWM8_LoadDutyValue	;wreg free
 22478                           
 22479                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 22480  01B5A8  52E5               	movf	postdec1,f,c
 22481  01B5AA  52E5               	movf	postdec1,f,c
 22482  01B5AC  0012               	return		;funcret
 22483  01B5AE                     __end_of_mode_lamp_dim:
 22484                           	opt callstack 0
 22485                           
 22486 ;; *************** function _mode_lamp_bright *****************
 22487 ;; Defined at:
 22488 ;;		line 18 in file "mconfig.c"
 22489 ;; Parameters:    Size  Location     Type
 22490 ;;		None
 22491 ;; Auto vars:     Size  Location     Type
 22492 ;;		None
 22493 ;; Return value:  Size  Location     Type
 22494 ;;                  1  [STACK] void 
 22495 ;; Registers used:
 22496 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22497 ;; Tracked objects:
 22498 ;;		On entry : 0/0
 22499 ;;		On exit  : 0/0
 22500 ;;		Unchanged: 0/0
 22501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22505 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22506 ;;Total ram usage:        0 bytes
 22507 ;; Hardware stack levels used:    1
 22508 ;; Hardware stack levels required when called:   16
 22509 ;; This function calls:
 22510 ;;		_PWM8_LoadDutyValue
 22511 ;; This function is called by:
 22512 ;;		_check_help
 22513 ;; This function uses a reentrant model
 22514 ;;
 22515                           
 22516                           	psect	text84
 22517  01B66C                     __ptext84:
 22518                           	opt callstack 0
 22519  01B66C                     _mode_lamp_bright:
 22520                           	opt callstack 13
 22521                           
 22522                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 22523                           
 22524                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22525                           ;incstack = 0
 22526  01B66C  0E2C               	movlw	44
 22527  01B66E  6EE6               	movwf	postinc1,c
 22528  01B670  0E01               	movlw	1
 22529  01B672  6EE6               	movwf	postinc1,c
 22530  01B674  ECEF  F0D5         	call	_PWM8_LoadDutyValue	;wreg free
 22531                           
 22532                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 22533  01B678  0012               	return		;funcret
 22534  01B67A                     __end_of_mode_lamp_bright:
 22535                           	opt callstack 0
 22536                           
 22537 ;; *************** function _PWM8_LoadDutyValue *****************
 22538 ;; Defined at:
 22539 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 22540 ;; Parameters:    Size  Location     Type
 22541 ;;  dutyValue       2  [STACK] unsigned short 
 22542 ;; Auto vars:     Size  Location     Type
 22543 ;;		None
 22544 ;; Return value:  Size  Location     Type
 22545 ;;                  1  [STACK] void 
 22546 ;; Registers used:
 22547 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22548 ;; Tracked objects:
 22549 ;;		On entry : 0/2
 22550 ;;		On exit  : 0/0
 22551 ;;		Unchanged: 0/0
 22552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22557 ;;Total ram usage:        0 bytes
 22558 ;; Hardware stack levels used:    1
 22559 ;; Hardware stack levels required when called:   15
 22560 ;; This function calls:
 22561 ;;		Nothing
 22562 ;; This function is called by:
 22563 ;;		_mode_lamp_dim
 22564 ;;		_mode_lamp_bright
 22565 ;; This function uses a reentrant model
 22566 ;;
 22567                           
 22568                           	psect	text85
 22569  01ABDE                     __ptext85:
 22570                           	opt callstack 0
 22571  01ABDE                     _PWM8_LoadDutyValue:
 22572                           	opt callstack 14
 22573                           
 22574                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 22575                           ;stkvar	_dutyValue @ sp[(0)+-2]
 22576                           
 22577                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22578                           ;incstack = 0
 22579  01ABDE  0EFE               	movlw	-2
 22580  01ABE0  006F FF8C  F032    	movff	plusw1,btemp+10
 22581  01ABE6  0EFF               	movlw	-1
 22582  01ABE8  006F FF8C  F033    	movff	plusw1,btemp+11
 22583  01ABEE  90D8               	bcf	status,0,c
 22584  01ABF0  3233               	rrcf	(btemp+11)^0,f,c
 22585  01ABF2  3232               	rrcf	(btemp+10)^0,f,c
 22586  01ABF4  90D8               	bcf	status,0,c
 22587  01ABF6  3233               	rrcf	(btemp+11)^0,f,c
 22588  01ABF8  3232               	rrcf	(btemp+10)^0,f,c
 22589  01ABFA  5032               	movf	(btemp+10)^0,w,c
 22590  01ABFC  6E61               	movwf	97,c	;volatile
 22591                           
 22592                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 22593                           ;stkvar	_dutyValue @ sp[(0)+-2]
 22594  01ABFE  0EFE               	movlw	-2
 22595  01AC00  006F FF8C  F033    	movff	plusw1,btemp+11
 22596  01AC06  0E03               	movlw	3
 22597  01AC08  1633               	andwf	(btemp+11)^0,f,c
 22598  01AC0A  0E06               	movlw	6
 22599  01AC0C  6E28               	movwf	btemp^0,c
 22600  01AC0E                     u8815:
 22601  01AC0E  90D8               	bcf	status,0,c
 22602  01AC10  3633               	rlcf	(btemp+11)^0,f,c
 22603  01AC12  2E28               	decfsz	btemp^0,f,c
 22604  01AC14  D7FC               	goto	u8815
 22605  01AC16  5033               	movf	(btemp+11)^0,w,c
 22606  01AC18  6E60               	movwf	96,c	;volatile
 22607                           
 22608                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 22609  01AC1A  52E5               	movf	postdec1,f,c
 22610  01AC1C  52E5               	movf	postdec1,f,c
 22611  01AC1E  0012               	return		;funcret
 22612  01AC20                     __end_of_PWM8_LoadDutyValue:
 22613                           	opt callstack 0
 22614                           
 22615 ;; *************** function _help_button *****************
 22616 ;; Defined at:
 22617 ;;		line 26 in file "mconfig.c"
 22618 ;; Parameters:    Size  Location     Type
 22619 ;;		None
 22620 ;; Auto vars:     Size  Location     Type
 22621 ;;		None
 22622 ;; Return value:  Size  Location     Type
 22623 ;;                  1  [STACK] _Bool 
 22624 ;; Registers used:
 22625 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 22626 ;; Tracked objects:
 22627 ;;		On entry : 0/2
 22628 ;;		On exit  : 0/0
 22629 ;;		Unchanged: 0/0
 22630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22634 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22635 ;;Total ram usage:        0 bytes
 22636 ;; Hardware stack levels used:    1
 22637 ;; Hardware stack levels required when called:   16
 22638 ;; This function calls:
 22639 ;;		_StartTimer
 22640 ;;		_TimerDone
 22641 ;; This function is called by:
 22642 ;;		_check_help
 22643 ;; This function uses a reentrant model
 22644 ;;
 22645                           
 22646                           	psect	text86
 22647  01AD98                     __ptext86:
 22648                           	opt callstack 0
 22649  01AD98                     _help_button:
 22650                           	opt callstack 13
 22651                           
 22652                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 22653                           
 22654                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22655                           ;incstack = 0
 22656  01AD98  B0CB               	btfsc	203,0,c	;volatile
 22657  01AD9A  D00C               	goto	l1655
 22658                           
 22659                           ;mconfig.c: 29:   V.help = 1;
 22660  01AD9C  0102               	movlb	2	; () banked
 22661  01AD9E  859B               	bsf	(_V+155)& (0+255),2,b	;volatile
 22662                           
 22663                           ; BSR set to: 2
 22664                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 22665  01ADA0  0E08               	movlw	8
 22666  01ADA2  6EE6               	movwf	postinc1,c
 22667  01ADA4  EC91  F0D8         	call	_TimerDone	;wreg free
 22668  01ADA8  5028               	movf	btemp^0,w,c
 22669  01ADAA  B4D8               	btfsc	status,2,c
 22670  01ADAC  D003               	goto	l1655
 22671                           
 22672                           ;mconfig.c: 31:    return 1;
 22673  01ADAE  0E01               	movlw	1
 22674  01ADB0  6E28               	movwf	btemp^0,c
 22675  01ADB2  0012               	return	
 22676  01ADB4                     l1655:
 22677                           
 22678                           ;mconfig.c: 34:  if (!V.help)
 22679  01ADB4  0102               	movlb	2	; () banked
 22680  01ADB6  B59B               	btfsc	(_V+155)& (0+255),2,b	;volatile
 22681  01ADB8  D008               	goto	l10156
 22682                           
 22683                           ; BSR set to: 2
 22684                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 22685  01ADBA  0E2C               	movlw	44
 22686  01ADBC  6EE6               	movwf	postinc1,c
 22687  01ADBE  0E01               	movlw	1
 22688  01ADC0  6EE6               	movwf	postinc1,c
 22689  01ADC2  0E08               	movlw	8
 22690  01ADC4  6EE6               	movwf	postinc1,c
 22691  01ADC6  EC10  F0D6         	call	_StartTimer	;wreg free
 22692  01ADCA                     l10156:
 22693                           
 22694                           ;mconfig.c: 37:  return 0;
 22695  01ADCA  0E00               	movlw	0
 22696  01ADCC  6E28               	movwf	btemp^0,c
 22697                           
 22698                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 22699  01ADCE  0012               	return		;funcret
 22700  01ADD0                     __end_of_help_button:
 22701                           	opt callstack 0
 22702                           
 22703 ;; *************** function _TimerDone *****************
 22704 ;; Defined at:
 22705 ;;		line 20 in file "timers.c"
 22706 ;; Parameters:    Size  Location     Type
 22707 ;;  timer           1  [STACK] const unsigned char 
 22708 ;; Auto vars:     Size  Location     Type
 22709 ;;		None
 22710 ;; Return value:  Size  Location     Type
 22711 ;;                  1  [STACK] _Bool 
 22712 ;; Registers used:
 22713 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 22714 ;; Tracked objects:
 22715 ;;		On entry : 0/0
 22716 ;;		On exit  : 0/0
 22717 ;;		Unchanged: 0/0
 22718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22722 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22723 ;;Total ram usage:        0 bytes
 22724 ;; Hardware stack levels used:    1
 22725 ;; Hardware stack levels required when called:   15
 22726 ;; This function calls:
 22727 ;;		Nothing
 22728 ;; This function is called by:
 22729 ;;		_main
 22730 ;;		_WaitMs
 22731 ;;		_help_button
 22732 ;;		_check_help
 22733 ;;		_set_display_info
 22734 ;;		_update_adc_result
 22735 ;;		_esr_check
 22736 ;; This function uses a reentrant model
 22737 ;;
 22738                           
 22739                           	psect	text87
 22740  01B122                     __ptext87:
 22741                           	opt callstack 0
 22742  01B122                     _TimerDone:
 22743                           	opt callstack 14
 22744                           
 22745                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22746                           ;incstack = 0
 22747  01B122  0004               	clrwdt		;# 
 22748                           
 22749                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 22750                           ;stkvar	_timer @ sp[(0)+-1]
 22751  01B124  0EFF               	movlw	-1
 22752  01B126  50E3               	movf	plusw1,w,c
 22753  01B128  0D02               	mullw	2
 22754  01B12A  0EE6               	movlw	low _tickCount
 22755  01B12C  24F3               	addwf	243,w,c
 22756  01B12E  6ED9               	movwf	fsr2l,c
 22757  01B130  0E02               	movlw	high _tickCount
 22758  01B132  20F4               	addwfc	prodh,w,c
 22759  01B134  6EDA               	movwf	fsr2h,c
 22760  01B136  50DE               	movf	postinc2,w,c
 22761  01B138  10DE               	iorwf	postinc2,w,c
 22762  01B13A  A4D8               	btfss	status,2,c
 22763  01B13C  D002               	goto	l9384
 22764                           
 22765                           ;timers.c: 24:   return 1;
 22766  01B13E  0E01               	movlw	1
 22767  01B140  D001               	goto	L25
 22768  01B142                     l9384:
 22769                           
 22770                           ;timers.c: 26:  return 0;
 22771  01B142  0E00               	movlw	0
 22772  01B144                     L25:
 22773  01B144  6E28               	movwf	btemp^0,c
 22774                           
 22775                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 22776  01B146  52E5               	movf	postdec1,f,c
 22777  01B148  0012               	return		;funcret
 22778  01B14A                     __end_of_TimerDone:
 22779                           	opt callstack 0
 22780                           
 22781 ;; *************** function _StartTimer *****************
 22782 ;; Defined at:
 22783 ;;		line 12 in file "timers.c"
 22784 ;; Parameters:    Size  Location     Type
 22785 ;;  timer           1  [STACK] const unsigned char 
 22786 ;;  count           2  [STACK] const unsigned short 
 22787 ;; Auto vars:     Size  Location     Type
 22788 ;;		None
 22789 ;; Return value:  Size  Location     Type
 22790 ;;                  1  [STACK] void 
 22791 ;; Registers used:
 22792 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 22793 ;; Tracked objects:
 22794 ;;		On entry : 0/0
 22795 ;;		On exit  : 0/0
 22796 ;;		Unchanged: 0/0
 22797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22801 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22802 ;;Total ram usage:        0 bytes
 22803 ;; Hardware stack levels used:    1
 22804 ;; Hardware stack levels required when called:   15
 22805 ;; This function calls:
 22806 ;;		Nothing
 22807 ;; This function is called by:
 22808 ;;		_main
 22809 ;;		_WaitMs
 22810 ;;		_help_button
 22811 ;;		_check_help
 22812 ;;		_update_adc_result
 22813 ;;		_calc_bsoc
 22814 ;;		_esr_check
 22815 ;; This function uses a reentrant model
 22816 ;;
 22817                           
 22818                           	psect	text88
 22819  01AC20                     __ptext88:
 22820                           	opt callstack 0
 22821  01AC20                     _StartTimer:
 22822                           	opt callstack 0
 22823                           
 22824                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 22825                           ;stkvar	_count @ sp[(0)+-3]
 22826                           
 22827                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22828                           ;incstack = 0
 22829 ;; hardware stack exceeded
 22830  01AC20  0EFD               	movlw	-3
 22831  01AC22  006F FF8C  F032    	movff	plusw1,btemp+10
 22832  01AC28  0EFE               	movlw	-2
 22833  01AC2A  006F FF8C  F033    	movff	plusw1,btemp+11
 22834  01AC30  90D8               	bcf	status,0,c
 22835  01AC32  3432               	rlcf	(btemp+10)^0,w,c
 22836  01AC34  6E30               	movwf	(btemp+8)^0,c
 22837  01AC36  3433               	rlcf	(btemp+11)^0,w,c
 22838  01AC38  6E31               	movwf	(btemp+9)^0,c
 22839                           
 22840                           ;stkvar	_timer @ sp[(0)+-1]
 22841  01AC3A  0EFF               	movlw	-1
 22842  01AC3C  50E3               	movf	plusw1,w,c
 22843  01AC3E  0D02               	mullw	2
 22844  01AC40  0EE6               	movlw	low _tickCount
 22845  01AC42  24F3               	addwf	243,w,c
 22846  01AC44  6ED9               	movwf	fsr2l,c
 22847  01AC46  0E02               	movlw	high _tickCount
 22848  01AC48  20F4               	addwfc	prodh,w,c
 22849  01AC4A  6EDA               	movwf	fsr2h,c
 22850  01AC4C  0060  F0C3  FFDE   	movff	btemp+8,postinc2
 22851  01AC52  0060  F0C7  FFDD   	movff	btemp+9,postdec2
 22852                           
 22853                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 22854  01AC58  52E5               	movf	postdec1,f,c
 22855  01AC5A  52E5               	movf	postdec1,f,c
 22856  01AC5C  52E5               	movf	postdec1,f,c
 22857  01AC5E  0012               	return		;funcret
 22858  01AC60                     __end_of_StartTimer:
 22859                           	opt callstack 0
 22860                           
 22861 ;; *************** function _display_info *****************
 22862 ;; Defined at:
 22863 ;;		line 190 in file "mconfig.c"
 22864 ;; Parameters:    Size  Location     Type
 22865 ;;		None
 22866 ;; Auto vars:     Size  Location     Type
 22867 ;;		None
 22868 ;; Return value:  Size  Location     Type
 22869 ;;                  1  [STACK] enum E16509
 22870 ;; Registers used:
 22871 ;;		btemp
 22872 ;; Tracked objects:
 22873 ;;		On entry : 0/2
 22874 ;;		On exit  : 0/0
 22875 ;;		Unchanged: 0/0
 22876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22880 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22881 ;;Total ram usage:        0 bytes
 22882 ;; Hardware stack levels used:    1
 22883 ;; Hardware stack levels required when called:   15
 22884 ;; This function calls:
 22885 ;;		Nothing
 22886 ;; This function is called by:
 22887 ;;		_check_help
 22888 ;; This function uses a reentrant model
 22889 ;;
 22890                           
 22891                           	psect	text89
 22892  01B6E2                     __ptext89:
 22893                           	opt callstack 0
 22894  01B6E2                     _display_info:
 22895                           	opt callstack 14
 22896                           
 22897                           ;mconfig.c: 192:  return V.response.info;
 22898                           
 22899                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22900                           ;incstack = 0
 22901  01B6E2  0060  FA90  F028   	movff	_V+164,btemp	;volatile
 22902                           
 22903                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 22904  01B6E8  0012               	return		;funcret
 22905  01B6EA                     __end_of_display_info:
 22906                           	opt callstack 0
 22907                           
 22908 ;; *************** function _display_help *****************
 22909 ;; Defined at:
 22910 ;;		line 195 in file "mconfig.c"
 22911 ;; Parameters:    Size  Location     Type
 22912 ;;		None
 22913 ;; Auto vars:     Size  Location     Type
 22914 ;;		None
 22915 ;; Return value:  Size  Location     Type
 22916 ;;                  1  [STACK] enum E16509
 22917 ;; Registers used:
 22918 ;;		btemp
 22919 ;; Tracked objects:
 22920 ;;		On entry : 3F/2
 22921 ;;		On exit  : 0/0
 22922 ;;		Unchanged: 0/0
 22923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22927 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22928 ;;Total ram usage:        0 bytes
 22929 ;; Hardware stack levels used:    1
 22930 ;; Hardware stack levels required when called:   15
 22931 ;; This function calls:
 22932 ;;		Nothing
 22933 ;; This function is called by:
 22934 ;;		_check_help
 22935 ;; This function uses a reentrant model
 22936 ;;
 22937                           
 22938                           	psect	text90
 22939  01B6EA                     __ptext90:
 22940                           	opt callstack 0
 22941  01B6EA                     _display_help:
 22942                           	opt callstack 14
 22943                           
 22944                           ;mconfig.c: 197:  return V.response.help_temp;
 22945                           
 22946                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22947                           ;incstack = 0
 22948  01B6EA  0060  FA94  F028   	movff	_V+165,btemp	;volatile
 22949                           
 22950                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 22951  01B6F0  0012               	return		;funcret
 22952  01B6F2                     __end_of_display_help:
 22953                           	opt callstack 0
 22954                           
 22955 ;; *************** function _check_enter_button *****************
 22956 ;; Defined at:
 22957 ;;		line 42 in file "hid.c"
 22958 ;; Parameters:    Size  Location     Type
 22959 ;;  h               1  [STACK] PTR struct H_data
 22960 ;;		 -> H(7), 
 22961 ;; Auto vars:     Size  Location     Type
 22962 ;;		None
 22963 ;; Return value:  Size  Location     Type
 22964 ;;                  1  [STACK] _Bool 
 22965 ;; Registers used:
 22966 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 22967 ;; Tracked objects:
 22968 ;;		On entry : 0/0
 22969 ;;		On exit  : 0/0
 22970 ;;		Unchanged: 0/0
 22971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22976 ;;Total ram usage:        0 bytes
 22977 ;; Hardware stack levels used:    1
 22978 ;; Hardware stack levels required when called:   15
 22979 ;; This function calls:
 22980 ;;		Nothing
 22981 ;; This function is called by:
 22982 ;;		_main
 22983 ;; This function uses a reentrant model
 22984 ;;
 22985                           
 22986                           	psect	text91
 22987  01AC60                     __ptext91:
 22988                           	opt callstack 0
 22989  01AC60                     _check_enter_button:
 22990                           	opt callstack 15
 22991                           
 22992                           ;hid.c: 42: _Bool check_enter_button(H_data* h);hid.c: 43: {;hid.c: 44:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 22993                           ;stkvar	_h @ sp[(0)+-1]
 22994                           
 22995                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22996                           ;incstack = 0
 22997  01AC60  0EFF               	movlw	-1
 22998  01AC62  50E3               	movf	plusw1,w,c
 22999  01AC64  6ED9               	movwf	fsr2l,c
 23000  01AC66  6ADA               	clrf	fsr2h,c
 23001  01AC68  0E04               	movlw	4
 23002  01AC6A  26D9               	addwf	fsr2l,f,c
 23003  01AC6C  50DF               	movf	indf2,w,c
 23004  01AC6E  A4D8               	btfss	status,2,c
 23005  01AC70  D013               	goto	l10754
 23006                           
 23007                           ;stkvar	_h @ sp[(0)+-1]
 23008  01AC72  0EFF               	movlw	-1
 23009  01AC74  50E3               	movf	plusw1,w,c
 23010  01AC76  6ED9               	movwf	fsr2l,c
 23011  01AC78  6ADA               	clrf	fsr2h,c
 23012  01AC7A  0E05               	movlw	5
 23013  01AC7C  26D9               	addwf	fsr2l,f,c
 23014  01AC7E  50DF               	movf	indf2,w,c
 23015  01AC80  A4D8               	btfss	status,2,c
 23016  01AC82  D00A               	goto	l10754
 23017                           
 23018                           ;hid.c: 45:   h->wait_enter = 1;
 23019                           ;stkvar	_h @ sp[(0)+-1]
 23020  01AC84  0EFF               	movlw	-1
 23021  01AC86  50E3               	movf	plusw1,w,c
 23022  01AC88  6ED9               	movwf	fsr2l,c
 23023  01AC8A  6ADA               	clrf	fsr2h,c
 23024  01AC8C  0E04               	movlw	4
 23025  01AC8E  26D9               	addwf	fsr2l,f,c
 23026  01AC90  0E01               	movlw	1
 23027  01AC92  6EDF               	movwf	indf2,c
 23028                           
 23029                           ;hid.c: 46:   return 1;
 23030  01AC94  0E01               	movlw	1
 23031  01AC96  D001               	goto	L26
 23032  01AC98                     l10754:
 23033                           
 23034                           ;hid.c: 48:  return 0;
 23035  01AC98  0E00               	movlw	0
 23036  01AC9A                     L26:
 23037  01AC9A  6E28               	movwf	btemp^0,c
 23038                           
 23039                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 23040  01AC9C  52E5               	movf	postdec1,f,c
 23041  01AC9E  0012               	return		;funcret
 23042  01ACA0                     __end_of_check_enter_button:
 23043                           	opt callstack 0
 23044                           
 23045 ;; *************** function _calc_ror_data *****************
 23046 ;; Defined at:
 23047 ;;		line 101 in file "mbmc.c"
 23048 ;; Parameters:    Size  Location     Type
 23049 ;;		None
 23050 ;; Auto vars:     Size  Location     Type
 23051 ;;		None
 23052 ;; Return value:  Size  Location     Type
 23053 ;;                  1  [STACK] void 
 23054 ;; Registers used:
 23055 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23056 ;; Tracked objects:
 23057 ;;		On entry : 0/39
 23058 ;;		On exit  : 0/0
 23059 ;;		Unchanged: 0/0
 23060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23064 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23065 ;;Total ram usage:        0 bytes
 23066 ;; Hardware stack levels used:    1
 23067 ;; Hardware stack levels required when called:   18
 23068 ;; This function calls:
 23069 ;;		___flge
 23070 ;;		___flsub
 23071 ;;		_conv_raw_result
 23072 ;;		_fabsf
 23073 ;; This function is called by:
 23074 ;;		_main
 23075 ;; This function uses a reentrant model
 23076 ;;
 23077                           
 23078                           	psect	text92
 23079  01828A                     __ptext92:
 23080                           	opt callstack 0
 23081  01828A                     _calc_ror_data:
 23082                           	opt callstack 12
 23083                           
 23084                           ;mbmc.c: 103:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 105:  C.bc_ror = fabsf(con
      +                          v_raw_result(C_BATT, CONV) - bcror);
 23085                           
 23086                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23087                           ;incstack = 0
 23088  01828A  0060  F21B  FFE6   	movff	calc_ror_data@bcror,postinc1
 23089  018290  0060  F21F  FFE6   	movff	calc_ror_data@bcror+1,postinc1
 23090  018296  0060  F223  FFE6   	movff	calc_ror_data@bcror+2,postinc1
 23091  01829C  0060  F227  FFE6   	movff	calc_ror_data@bcror+3,postinc1
 23092  0182A2  0E00               	movlw	0
 23093  0182A4  6EE6               	movwf	postinc1,c
 23094  0182A6  0E00               	movlw	0
 23095  0182A8  6EE6               	movwf	postinc1,c
 23096  0182AA  EC58  F0A7         	call	_conv_raw_result	;wreg free
 23097  0182AE  0060  F0A3  FFE6   	movff	btemp,postinc1
 23098  0182B4  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 23099  0182BA  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 23100  0182C0  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 23101  0182C6  EC41  F0D5         	call	___flsub	;wreg free
 23102  0182CA  0060  F0A3  FFE6   	movff	btemp,postinc1
 23103  0182D0  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 23104  0182D6  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 23105  0182DC  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 23106  0182E2  ECF9  F0CD         	call	_fabsf	;wreg free
 23107  0182E6  0060  F0A0  F16C   	movff	btemp,_C+108	;volatile
 23108  0182EC  0060  F0A4  F16D   	movff	btemp+1,_C+109	;volatile
 23109  0182F2  0060  F0A8  F16E   	movff	btemp+2,_C+110	;volatile
 23110  0182F8  0060  F0AC  F16F   	movff	btemp+3,_C+111	;volatile
 23111                           
 23112                           ;mbmc.c: 106:  bcror = conv_raw_result(C_BATT, CONV);
 23113  0182FE  0E00               	movlw	0
 23114  018300  6EE6               	movwf	postinc1,c
 23115  018302  0E00               	movlw	0
 23116  018304  6EE6               	movwf	postinc1,c
 23117  018306  EC58  F0A7         	call	_conv_raw_result	;wreg free
 23118  01830A  0060  F0A0  F086   	movff	btemp,calc_ror_data@bcror
 23119  018310  0060  F0A4  F087   	movff	btemp+1,calc_ror_data@bcror+1
 23120  018316  0060  F0A8  F088   	movff	btemp+2,calc_ror_data@bcror+2
 23121  01831C  0060  F0AC  F089   	movff	btemp+3,calc_ror_data@bcror+3
 23122                           
 23123                           ;mbmc.c: 107:  C.bv_ror = fabsf(conv_raw_result(V_BAT, CONV) - bvror);
 23124  018322  0060  F22B  FFE6   	movff	calc_ror_data@bvror,postinc1
 23125  018328  0060  F22F  FFE6   	movff	calc_ror_data@bvror+1,postinc1
 23126  01832E  0060  F233  FFE6   	movff	calc_ror_data@bvror+2,postinc1
 23127  018334  0060  F237  FFE6   	movff	calc_ror_data@bvror+3,postinc1
 23128  01833A  0E00               	movlw	0
 23129  01833C  6EE6               	movwf	postinc1,c
 23130  01833E  0E04               	movlw	4
 23131  018340  6EE6               	movwf	postinc1,c
 23132  018342  EC58  F0A7         	call	_conv_raw_result	;wreg free
 23133  018346  0060  F0A3  FFE6   	movff	btemp,postinc1
 23134  01834C  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 23135  018352  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 23136  018358  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 23137  01835E  EC41  F0D5         	call	___flsub	;wreg free
 23138  018362  0060  F0A3  FFE6   	movff	btemp,postinc1
 23139  018368  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 23140  01836E  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 23141  018374  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 23142  01837A  ECF9  F0CD         	call	_fabsf	;wreg free
 23143  01837E  0060  F0A0  F168   	movff	btemp,_C+104	;volatile
 23144  018384  0060  F0A4  F169   	movff	btemp+1,_C+105	;volatile
 23145  01838A  0060  F0A8  F16A   	movff	btemp+2,_C+106	;volatile
 23146  018390  0060  F0AC  F16B   	movff	btemp+3,_C+107	;volatile
 23147                           
 23148                           ;mbmc.c: 108:  if (C.bv_ror < 0.0051)
 23149  018396  0EE7               	movlw	231
 23150  018398  6EE6               	movwf	postinc1,c
 23151  01839A  0E1D               	movlw	29
 23152  01839C  6EE6               	movwf	postinc1,c
 23153  01839E  0EA7               	movlw	167
 23154  0183A0  6EE6               	movwf	postinc1,c
 23155  0183A2  0E3B               	movlw	59
 23156  0183A4  6EE6               	movwf	postinc1,c
 23157  0183A6  0060  F5A3  FFE6   	movff	_C+104,postinc1
 23158  0183AC  0060  F5A7  FFE6   	movff	_C+105,postinc1
 23159  0183B2  0060  F5AB  FFE6   	movff	_C+106,postinc1
 23160  0183B8  0060  F5AF  FFE6   	movff	_C+107,postinc1
 23161  0183BE  EC70  F0C3         	call	___flge	;wreg free
 23162  0183C2  B028               	btfsc	btemp& (0+255),0,c
 23163  0183C4  D009               	goto	l10548
 23164                           
 23165                           ;mbmc.c: 109:   C.bv_ror = 0.0140 + 0.0001;
 23166  0183C6  0EB0               	movlw	176
 23167  0183C8  0101               	movlb	1	; () banked
 23168  0183CA  6F68               	movwf	(_C+104)& (0+255),b	;volatile
 23169  0183CC  0E03               	movlw	3
 23170  0183CE  6F69               	movwf	(_C+105)& (0+255),b	;volatile
 23171  0183D0  0E67               	movlw	103
 23172  0183D2  6F6A               	movwf	(_C+106)& (0+255),b	;volatile
 23173  0183D4  0E3C               	movlw	60
 23174  0183D6  6F6B               	movwf	(_C+107)& (0+255),b	;volatile
 23175  0183D8                     l10548:
 23176                           
 23177                           ;mbmc.c: 110:  bvror = conv_raw_result(V_BAT, CONV);
 23178  0183D8  0E00               	movlw	0
 23179  0183DA  6EE6               	movwf	postinc1,c
 23180  0183DC  0E04               	movlw	4
 23181  0183DE  6EE6               	movwf	postinc1,c
 23182  0183E0  EC58  F0A7         	call	_conv_raw_result	;wreg free
 23183  0183E4  0060  F0A0  F08A   	movff	btemp,calc_ror_data@bvror
 23184  0183EA  0060  F0A4  F08B   	movff	btemp+1,calc_ror_data@bvror+1
 23185  0183F0  0060  F0A8  F08C   	movff	btemp+2,calc_ror_data@bvror+2
 23186  0183F6  0060  F0AC  F08D   	movff	btemp+3,calc_ror_data@bvror+3
 23187                           
 23188                           ; _calc_ror_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 23189  0183FC  0012               	return		;funcret
 23190  0183FE                     __end_of_calc_ror_data:
 23191                           	opt callstack 0
 23192                           
 23193 ;; *************** function _fabsf *****************
 23194 ;; Defined at:
 23195 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fabsf.c"
 23196 ;; Parameters:    Size  Location     Type
 23197 ;;  x               4  [STACK] float 
 23198 ;; Auto vars:     Size  Location     Type
 23199 ;;  u               4  [STACK] struct .
 23200 ;; Return value:  Size  Location     Type
 23201 ;;                  4  [STACK] float 
 23202 ;; Registers used:
 23203 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 23204 ;; Tracked objects:
 23205 ;;		On entry : 0/0
 23206 ;;		On exit  : 0/0
 23207 ;;		Unchanged: 0/0
 23208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23212 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23213 ;;Total ram usage:        0 bytes
 23214 ;; Hardware stack levels used:    1
 23215 ;; Hardware stack levels required when called:   15
 23216 ;; This function calls:
 23217 ;;		Nothing
 23218 ;; This function is called by:
 23219 ;;		_main
 23220 ;;		_calc_ror_data
 23221 ;;		_calc_bsoc
 23222 ;;		_esr_check
 23223 ;; This function uses a reentrant model
 23224 ;;
 23225                           
 23226                           	psect	text93
 23227  019BF2                     __ptext93:
 23228                           	opt callstack 0
 23229  019BF2                     _fabsf:
 23230                           	opt callstack 0
 23231                           
 23232                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23233  019BF2  52E6               	movf	postinc1,f,c
 23234  019BF4  52E6               	movf	postinc1,f,c
 23235  019BF6  52E6               	movf	postinc1,f,c
 23236  019BF8  52E6               	movf	postinc1,f,c
 23237                           
 23238                           ;incstack = 0
 23239 ;; hardware stack exceeded
 23240  019BFA  0060  F1F8  F030   	movff	fabsf@F463,btemp+8
 23241  019C00  0060  F1FC  F031   	movff	fabsf@F463+1,btemp+9
 23242  019C06  0060  F200  F032   	movff	fabsf@F463+2,btemp+10
 23243  019C0C  0060  F204  F033   	movff	fabsf@F463+3,btemp+11
 23244                           
 23245                           ;stkvar	_u @ sp[(-4)+0]
 23246  019C12  0EFC               	movlw	-4
 23247  019C14  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 23248  019C1A  0EFD               	movlw	-3
 23249  019C1C  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 23250  019C22  0EFE               	movlw	-2
 23251  019C24  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 23252  019C2A  0EFF               	movlw	-1
 23253  019C2C  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 23254                           
 23255                           ;stkvar	_x @ sp[(-4)+-4]
 23256  019C32  0EF8               	movlw	-8
 23257  019C34  006F FF8C  F030    	movff	plusw1,btemp+8
 23258  019C3A  0EF9               	movlw	-7
 23259  019C3C  006F FF8C  F031    	movff	plusw1,btemp+9
 23260  019C42  0EFA               	movlw	-6
 23261  019C44  006F FF8C  F032    	movff	plusw1,btemp+10
 23262  019C4A  0EFB               	movlw	-5
 23263  019C4C  006F FF8C  F033    	movff	plusw1,btemp+11
 23264                           
 23265                           ;stkvar	_u @ sp[(-4)+0]
 23266  019C52  0EFC               	movlw	-4
 23267  019C54  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 23268  019C5A  0EFD               	movlw	-3
 23269  019C5C  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 23270  019C62  0EFE               	movlw	-2
 23271  019C64  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 23272  019C6A  0EFF               	movlw	-1
 23273  019C6C  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 23274                           
 23275                           ;stkvar	_u @ sp[(-4)+0]
 23276  019C72  0EFF               	movlw	-1
 23277  019C74  9EE3               	bcf	plusw1,7,c
 23278                           
 23279                           ;stkvar	_u @ sp[(-4)+0]
 23280  019C76  0EFC               	movlw	-4
 23281  019C78  006F FF8C  F028    	movff	plusw1,btemp
 23282  019C7E  0EFD               	movlw	-3
 23283  019C80  006F FF8C  F029    	movff	plusw1,btemp+1
 23284  019C86  0EFE               	movlw	-2
 23285  019C88  006F FF8C  F02A    	movff	plusw1,btemp+2
 23286  019C8E  0EFF               	movlw	-1
 23287  019C90  006F FF8C  F02B    	movff	plusw1,btemp+3
 23288                           
 23289                           ; _fabsf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 23290  019C96  0EF8               	movlw	248
 23291  019C98  26E1               	addwf	fsr1l,f,c
 23292  019C9A  0EFF               	movlw	255
 23293  019C9C  22E2               	addwfc	fsr1h,f,c
 23294  019C9E  0012               	return		;funcret
 23295  019CA0                     __end_of_fabsf:
 23296                           	opt callstack 0
 23297                           
 23298 ;; *************** function _conv_raw_result *****************
 23299 ;; Defined at:
 23300 ;;		line 95 in file "daq.c"
 23301 ;; Parameters:    Size  Location     Type
 23302 ;;  chan            1  [STACK] const enum E16582
 23303 ;;  to_what         1  [STACK] const enum E16644
 23304 ;; Auto vars:     Size  Location     Type
 23305 ;;		None
 23306 ;; Return value:  Size  Location     Type
 23307 ;;                  4  [STACK] float 
 23308 ;; Registers used:
 23309 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23310 ;; Tracked objects:
 23311 ;;		On entry : 0/39
 23312 ;;		On exit  : 0/0
 23313 ;;		Unchanged: 0/0
 23314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23319 ;;Total ram usage:        0 bytes
 23320 ;; Hardware stack levels used:    1
 23321 ;; Hardware stack levels required when called:   17
 23322 ;; This function calls:
 23323 ;;		___fldiv
 23324 ;;		___flmul
 23325 ;;		___flsub
 23326 ;;		___xxtofl
 23327 ;;		_get_raw_result
 23328 ;;		_nanf
 23329 ;; This function is called by:
 23330 ;;		_main
 23331 ;;		_convert_adc_data
 23332 ;;		_calc_ror_data
 23333 ;;		_init_bsoc
 23334 ;;		_esr_check
 23335 ;; This function uses a reentrant model
 23336 ;;
 23337                           
 23338                           	psect	text94
 23339  014EB0                     __ptext94:
 23340                           	opt callstack 0
 23341  014EB0                     _conv_raw_result:
 23342                           	opt callstack 12
 23343                           
 23344                           ;daq.c: 95: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);d
      +                          aq.c: 96: {;daq.c: 98:  switch (to_what) {
 23345                           
 23346                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23347                           ;incstack = 0
 23348  014EB0  D242               	goto	l10086
 23349  014EB2                     l10032:
 23350                           
 23351                           ;daq.c: 100:   if (!(0b0011110001110111 >> chan & 0x1))
 23352                           ;stkvar	_chan @ sp[(0)+-1]
 23353  014EB2  0EFF               	movlw	-1
 23354  014EB4  006F FF8C  F033    	movff	plusw1,btemp+11
 23355  014EBA  0E77               	movlw	119
 23356  014EBC  6E30               	movwf	(btemp+8)^0,c
 23357  014EBE  0E3C               	movlw	60
 23358  014EC0  6E31               	movwf	(btemp+9)^0,c
 23359  014EC2  2A33               	incf	(btemp+11)^0,f,c
 23360  014EC4  D003               	goto	u9074
 23361  014EC6                     u9075:
 23362  014EC6  3431               	rlcf	(btemp+9)^0,w,c
 23363  014EC8  3231               	rrcf	(btemp+9)^0,f,c
 23364  014ECA  3230               	rrcf	(btemp+8)^0,f,c
 23365  014ECC                     u9074:
 23366  014ECC  2E33               	decfsz	(btemp+11)^0,f,c
 23367  014ECE  D7FB               	goto	u9075
 23368  014ED0  B030               	btfsc	(btemp+8)^0,0,c
 23369  014ED2  D007               	goto	l10038
 23370                           
 23371                           ;daq.c: 101:    return nanf("");
 23372  014ED4  0EBB               	movlw	low (STR_65+84)
 23373  014ED6  6EE6               	movwf	postinc1,c
 23374  014ED8  0EFC               	movlw	high (STR_65+84)
 23375  014EDA  6EE6               	movwf	postinc1,c
 23376  014EDC  EC4B  F0D3         	call	_nanf	;wreg free
 23377  014EE0  D23A               	goto	l1774
 23378  014EE2                     l10038:
 23379                           
 23380                           ;daq.c: 103:   if (0b0000000000000011 >> chan & 0x1) {
 23381                           ;stkvar	_chan @ sp[(0)+-1]
 23382  014EE2  0EFF               	movlw	-1
 23383  014EE4  006F FF8C  F033    	movff	plusw1,btemp+11
 23384  014EEA  0E03               	movlw	3
 23385  014EEC  6E30               	movwf	(btemp+8)^0,c
 23386  014EEE  0E00               	movlw	0
 23387  014EF0  6E31               	movwf	(btemp+9)^0,c
 23388  014EF2  2A33               	incf	(btemp+11)^0,f,c
 23389  014EF4  D003               	goto	u9094
 23390  014EF6                     u9095:
 23391  014EF6  3431               	rlcf	(btemp+9)^0,w,c
 23392  014EF8  3231               	rrcf	(btemp+9)^0,f,c
 23393  014EFA  3230               	rrcf	(btemp+8)^0,f,c
 23394  014EFC                     u9094:
 23395  014EFC  2E33               	decfsz	(btemp+11)^0,f,c
 23396  014EFE  D7FB               	goto	u9095
 23397  014F00  A030               	btfss	(btemp+8)^0,0,c
 23398  014F02  D0EB               	goto	l10052
 23399                           
 23400                           ;daq.c: 104:    if (0b0000000000000001 >> chan & 0x1) {
 23401                           ;stkvar	_chan @ sp[(0)+-1]
 23402  014F04  0EFF               	movlw	-1
 23403  014F06  006F FF8C  F033    	movff	plusw1,btemp+11
 23404  014F0C  0E01               	movlw	1
 23405  014F0E  6E30               	movwf	(btemp+8)^0,c
 23406  014F10  0E00               	movlw	0
 23407  014F12  6E31               	movwf	(btemp+9)^0,c
 23408  014F14  2A33               	incf	(btemp+11)^0,f,c
 23409  014F16  D003               	goto	u9114
 23410  014F18                     u9115:
 23411  014F18  3431               	rlcf	(btemp+9)^0,w,c
 23412  014F1A  3231               	rrcf	(btemp+9)^0,f,c
 23413  014F1C  3230               	rrcf	(btemp+8)^0,f,c
 23414  014F1E                     u9114:
 23415  014F1E  2E33               	decfsz	(btemp+11)^0,f,c
 23416  014F20  D7FB               	goto	u9115
 23417  014F22  A030               	btfss	(btemp+8)^0,0,c
 23418  014F24  D06D               	goto	l10048
 23419                           
 23420                           ;daq.c: 105:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[0]) * 0.0850
      +                          000;
 23421  014F26  0E7B               	movlw	123
 23422  014F28  6EE6               	movwf	postinc1,c
 23423  014F2A  0E14               	movlw	20
 23424  014F2C  6EE6               	movwf	postinc1,c
 23425  014F2E  0EAE               	movlw	174
 23426  014F30  6EE6               	movwf	postinc1,c
 23427  014F32  0E3D               	movlw	61
 23428  014F34  6EE6               	movwf	postinc1,c
 23429  014F36  0060  F390  F030   	movff	_R+32,btemp+8	;volatile
 23430  014F3C  0060  F394  F031   	movff	_R+33,btemp+9	;volatile
 23431  014F42  0E00               	movlw	0
 23432  014F44  BE31               	btfsc	(btemp+9)^0,7,c
 23433  014F46  0EFF               	movlw	255
 23434  014F48  6E32               	movwf	(btemp+10)^0,c
 23435  014F4A  6E33               	movwf	(btemp+11)^0,c
 23436  014F4C  0060  F0C3  FFE6   	movff	btemp+8,postinc1
 23437  014F52  0060  F0C7  FFE6   	movff	btemp+9,postinc1
 23438  014F58  0060  F0CB  FFE6   	movff	btemp+10,postinc1
 23439  014F5E  0060  F0CF  FFE6   	movff	btemp+11,postinc1
 23440  014F64  0E01               	movlw	1
 23441  014F66  6EE6               	movwf	postinc1,c
 23442  014F68  ECDA  F0BC         	call	___xxtofl	;wreg free
 23443  014F6C  0060  F0A3  FFE6   	movff	btemp,postinc1
 23444  014F72  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 23445  014F78  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 23446  014F7E  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 23447                           
 23448                           ;stkvar	_chan @ sp[(-8)+-1]
 23449  014F84  0EF7               	movlw	-9
 23450  014F86  50E3               	movf	plusw1,w,c
 23451  014F88  6EE6               	movwf	postinc1,c
 23452  014F8A  EC76  F0DA         	call	_get_raw_result	;wreg free
 23453  014F8E  0060  F0A0  F032   	movff	btemp,btemp+10
 23454  014F94  0060  F0A4  F033   	movff	btemp+1,btemp+11
 23455  014F9A  5032               	movf	(btemp+10)^0,w,c
 23456  014F9C  6E2C               	movwf	(btemp+4)^0,c
 23457  014F9E  5033               	movf	(btemp+11)^0,w,c
 23458  014FA0  6E2D               	movwf	(btemp+5)^0,c
 23459  014FA2  6A2E               	clrf	(btemp+6)^0,c
 23460  014FA4  6A2F               	clrf	(btemp+7)^0,c
 23461  014FA6  0060  F0B3  FFE6   	movff	btemp+4,postinc1
 23462  014FAC  0060  F0B7  FFE6   	movff	btemp+5,postinc1
 23463  014FB2  0060  F0BB  FFE6   	movff	btemp+6,postinc1
 23464  014FB8  0060  F0BF  FFE6   	movff	btemp+7,postinc1
 23465  014FBE  0E00               	movlw	0
 23466  014FC0  6EE6               	movwf	postinc1,c
 23467  014FC2  ECDA  F0BC         	call	___xxtofl	;wreg free
 23468  014FC6  0060  F0A3  FFE6   	movff	btemp,postinc1
 23469  014FCC  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 23470  014FD2  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 23471  014FD8  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 23472  014FDE  EC41  F0D5         	call	___flsub	;wreg free
 23473  014FE2  0060  F0A3  FFE6   	movff	btemp,postinc1
 23474  014FE8  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 23475  014FEE  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 23476  014FF4  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 23477  014FFA  EC0F  F099         	call	___flmul	;wreg free
 23478  014FFE  D1AB               	goto	l1774
 23479  015000                     l10048:
 23480                           
 23481                           ;daq.c: 107:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[1]) * 0.0350
      +                          000;
 23482  015000  0E29               	movlw	41
 23483  015002  6EE6               	movwf	postinc1,c
 23484  015004  0E5C               	movlw	92
 23485  015006  6EE6               	movwf	postinc1,c
 23486  015008  0E0F               	movlw	15
 23487  01500A  6EE6               	movwf	postinc1,c
 23488  01500C  0E3D               	movlw	61
 23489  01500E  6EE6               	movwf	postinc1,c
 23490  015010  0060  F398  F030   	movff	_R+34,btemp+8	;volatile
 23491  015016  0060  F39C  F031   	movff	_R+35,btemp+9	;volatile
 23492  01501C  0E00               	movlw	0
 23493  01501E  BE31               	btfsc	(btemp+9)^0,7,c
 23494  015020  0EFF               	movlw	255
 23495  015022  6E32               	movwf	(btemp+10)^0,c
 23496  015024  6E33               	movwf	(btemp+11)^0,c
 23497  015026  0060  F0C3  FFE6   	movff	btemp+8,postinc1
 23498  01502C  0060  F0C7  FFE6   	movff	btemp+9,postinc1
 23499  015032  0060  F0CB  FFE6   	movff	btemp+10,postinc1
 23500  015038  0060  F0CF  FFE6   	movff	btemp+11,postinc1
 23501  01503E  0E01               	movlw	1
 23502  015040  6EE6               	movwf	postinc1,c
 23503  015042  ECDA  F0BC         	call	___xxtofl	;wreg free
 23504  015046  0060  F0A3  FFE6   	movff	btemp,postinc1
 23505  01504C  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 23506  015052  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 23507  015058  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 23508                           
 23509                           ;stkvar	_chan @ sp[(-8)+-1]
 23510  01505E  0EF7               	movlw	-9
 23511  015060  50E3               	movf	plusw1,w,c
 23512  015062  6EE6               	movwf	postinc1,c
 23513  015064  EC76  F0DA         	call	_get_raw_result	;wreg free
 23514  015068  0060  F0A0  F032   	movff	btemp,btemp+10
 23515  01506E  0060  F0A4  F033   	movff	btemp+1,btemp+11
 23516  015074  5032               	movf	(btemp+10)^0,w,c
 23517  015076  6E2C               	movwf	(btemp+4)^0,c
 23518  015078  5033               	movf	(btemp+11)^0,w,c
 23519  01507A  6E2D               	movwf	(btemp+5)^0,c
 23520  01507C  6A2E               	clrf	(btemp+6)^0,c
 23521  01507E  6A2F               	clrf	(btemp+7)^0,c
 23522  015080  0060  F0B3  FFE6   	movff	btemp+4,postinc1
 23523  015086  0060  F0B7  FFE6   	movff	btemp+5,postinc1
 23524  01508C  0060  F0BB  FFE6   	movff	btemp+6,postinc1
 23525  015092  0060  F0BF  FFE6   	movff	btemp+7,postinc1
 23526  015098  0E00               	movlw	0
 23527  01509A  6EE6               	movwf	postinc1,c
 23528  01509C  ECDA  F0BC         	call	___xxtofl	;wreg free
 23529  0150A0  0060  F0A3  FFE6   	movff	btemp,postinc1
 23530  0150A6  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 23531  0150AC  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 23532  0150B2  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 23533  0150B8  EC41  F0D5         	call	___flsub	;wreg free
 23534  0150BC  0060  F0A3  FFE6   	movff	btemp,postinc1
 23535  0150C2  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 23536  0150C8  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 23537  0150CE  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 23538  0150D4  EC0F  F099         	call	___flmul	;wreg free
 23539  0150D8  D13E               	goto	l1774
 23540  0150DA                     l10052:
 23541                           
 23542                           ;daq.c: 110:    if (0b0000100000000000 >> chan & 0x1) {
 23543                           ;stkvar	_chan @ sp[(0)+-1]
 23544  0150DA  0EFF               	movlw	-1
 23545  0150DC  006F FF8C  F033    	movff	plusw1,btemp+11
 23546  0150E2  0E00               	movlw	0
 23547  0150E4  6E30               	movwf	(btemp+8)^0,c
 23548  0150E6  0E08               	movlw	8
 23549  0150E8  6E31               	movwf	(btemp+9)^0,c
 23550  0150EA  2A33               	incf	(btemp+11)^0,f,c
 23551  0150EC  D003               	goto	u9134
 23552  0150EE                     u9135:
 23553  0150EE  3431               	rlcf	(btemp+9)^0,w,c
 23554  0150F0  3231               	rrcf	(btemp+9)^0,f,c
 23555  0150F2  3230               	rrcf	(btemp+8)^0,f,c
 23556  0150F4                     u9134:
 23557  0150F4  2E33               	decfsz	(btemp+11)^0,f,c
 23558  0150F6  D7FB               	goto	u9135
 23559  0150F8  A030               	btfss	(btemp+8)^0,0,c
 23560  0150FA  D008               	goto	l10060
 23561                           
 23562                           ;daq.c: 111:     return 25.0;
 23563  0150FC  0E00               	movlw	0
 23564  0150FE  6E28               	movwf	btemp^0,c
 23565  015100  0E00               	movlw	0
 23566  015102  6E29               	movwf	(btemp+1)^0,c
 23567  015104  0EC8               	movlw	200
 23568  015106  6E2A               	movwf	(btemp+2)^0,c
 23569  015108  0E41               	movlw	65
 23570  01510A  D113               	goto	L27
 23571  01510C                     l10060:
 23572                           
 23573                           ;daq.c: 113:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 23574  01510C  0E00               	movlw	0
 23575  01510E  6EE6               	movwf	postinc1,c
 23576  015110  0E00               	movlw	0
 23577  015112  6EE6               	movwf	postinc1,c
 23578  015114  0E7A               	movlw	122
 23579  015116  6EE6               	movwf	postinc1,c
 23580  015118  0E44               	movlw	68
 23581  01511A  6EE6               	movwf	postinc1,c
 23582  01511C  0E61               	movlw	97
 23583  01511E  6EE6               	movwf	postinc1,c
 23584  015120  0E03               	movlw	3
 23585  015122  6EE6               	movwf	postinc1,c
 23586  015124  0E84               	movlw	132
 23587  015126  6EE6               	movwf	postinc1,c
 23588  015128  0E40               	movlw	64
 23589  01512A  6EE6               	movwf	postinc1,c
 23590                           
 23591                           ;stkvar	_chan @ sp[(-8)+-1]
 23592  01512C  0EF7               	movlw	-9
 23593  01512E  50E3               	movf	plusw1,w,c
 23594  015130  6EE6               	movwf	postinc1,c
 23595  015132  EC76  F0DA         	call	_get_raw_result	;wreg free
 23596  015136  0060  F0A0  F032   	movff	btemp,btemp+10
 23597  01513C  0060  F0A4  F033   	movff	btemp+1,btemp+11
 23598  015142  5032               	movf	(btemp+10)^0,w,c
 23599  015144  6E2C               	movwf	(btemp+4)^0,c
 23600  015146  5033               	movf	(btemp+11)^0,w,c
 23601  015148  6E2D               	movwf	(btemp+5)^0,c
 23602  01514A  6A2E               	clrf	(btemp+6)^0,c
 23603  01514C  6A2F               	clrf	(btemp+7)^0,c
 23604  01514E  0060  F0B3  FFE6   	movff	btemp+4,postinc1
 23605  015154  0060  F0B7  FFE6   	movff	btemp+5,postinc1
 23606  01515A  0060  F0BB  FFE6   	movff	btemp+6,postinc1
 23607  015160  0060  F0BF  FFE6   	movff	btemp+7,postinc1
 23608  015166  0E00               	movlw	0
 23609  015168  6EE6               	movwf	postinc1,c
 23610  01516A  ECDA  F0BC         	call	___xxtofl	;wreg free
 23611  01516E  0060  F0A3  FFE6   	movff	btemp,postinc1
 23612  015174  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 23613  01517A  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 23614  015180  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 23615  015186  EC0F  F099         	call	___flmul	;wreg free
 23616  01518A  0060  F0A3  FFE6   	movff	btemp,postinc1
 23617  015190  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 23618  015196  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 23619  01519C  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 23620  0151A2  EC9B  F0A4         	call	___fldiv	;wreg free
 23621  0151A6  D0D7               	goto	l1774
 23622  0151A8                     l10064:
 23623                           
 23624                           ;daq.c: 118:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
 23625                           ;stkvar	_chan @ sp[(0)+-1]
 23626  0151A8  0EFF               	movlw	-1
 23627  0151AA  006F FF8C  F033    	movff	plusw1,btemp+11
 23628  0151B0  0E03               	movlw	3
 23629  0151B2  6E30               	movwf	(btemp+8)^0,c
 23630  0151B4  0E00               	movlw	0
 23631  0151B6  6E31               	movwf	(btemp+9)^0,c
 23632  0151B8  2A33               	incf	(btemp+11)^0,f,c
 23633  0151BA  D003               	goto	u9154
 23634  0151BC                     u9155:
 23635  0151BC  3431               	rlcf	(btemp+9)^0,w,c
 23636  0151BE  3231               	rrcf	(btemp+9)^0,f,c
 23637  0151C0  3230               	rrcf	(btemp+8)^0,f,c
 23638  0151C2                     u9154:
 23639  0151C2  2E33               	decfsz	(btemp+11)^0,f,c
 23640  0151C4  D7FB               	goto	u9155
 23641  0151C6  B030               	btfsc	(btemp+8)^0,0,c
 23642  0151C8  D011               	goto	u9180
 23643                           
 23644                           ;stkvar	_chan @ sp[(0)+-1]
 23645  0151CA  0EFF               	movlw	-1
 23646  0151CC  006F FF8C  F033    	movff	plusw1,btemp+11
 23647  0151D2  0E00               	movlw	0
 23648  0151D4  6E30               	movwf	(btemp+8)^0,c
 23649  0151D6  0E08               	movlw	8
 23650  0151D8  6E31               	movwf	(btemp+9)^0,c
 23651  0151DA  2A33               	incf	(btemp+11)^0,f,c
 23652  0151DC  D003               	goto	u9174
 23653  0151DE                     u9175:
 23654  0151DE  3431               	rlcf	(btemp+9)^0,w,c
 23655  0151E0  3231               	rrcf	(btemp+9)^0,f,c
 23656  0151E2  3230               	rrcf	(btemp+8)^0,f,c
 23657  0151E4                     u9174:
 23658  0151E4  2E33               	decfsz	(btemp+11)^0,f,c
 23659  0151E6  D7FB               	goto	u9175
 23660  0151E8  A030               	btfss	(btemp+8)^0,0,c
 23661  0151EA  D04E               	goto	l10072
 23662  0151EC                     u9180:
 23663                           
 23664                           ;daq.c: 119:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
 23665  0151EC  0E00               	movlw	0
 23666  0151EE  6EE6               	movwf	postinc1,c
 23667  0151F0  0E00               	movlw	0
 23668  0151F2  6EE6               	movwf	postinc1,c
 23669  0151F4  0E7A               	movlw	122
 23670  0151F6  6EE6               	movwf	postinc1,c
 23671  0151F8  0E44               	movlw	68
 23672  0151FA  6EE6               	movwf	postinc1,c
 23673  0151FC  0E00               	movlw	0
 23674  0151FE  6EE6               	movwf	postinc1,c
 23675  015200  0E00               	movlw	0
 23676  015202  6EE6               	movwf	postinc1,c
 23677  015204  0E20               	movlw	32
 23678  015206  6EE6               	movwf	postinc1,c
 23679  015208  0E3F               	movlw	63
 23680  01520A  6EE6               	movwf	postinc1,c
 23681                           
 23682                           ;stkvar	_chan @ sp[(-8)+-1]
 23683  01520C  0EF7               	movlw	-9
 23684  01520E  50E3               	movf	plusw1,w,c
 23685  015210  6EE6               	movwf	postinc1,c
 23686  015212  EC76  F0DA         	call	_get_raw_result	;wreg free
 23687  015216  0060  F0A0  F032   	movff	btemp,btemp+10
 23688  01521C  0060  F0A4  F033   	movff	btemp+1,btemp+11
 23689  015222  5032               	movf	(btemp+10)^0,w,c
 23690  015224  6E2C               	movwf	(btemp+4)^0,c
 23691  015226  5033               	movf	(btemp+11)^0,w,c
 23692  015228  6E2D               	movwf	(btemp+5)^0,c
 23693  01522A  6A2E               	clrf	(btemp+6)^0,c
 23694  01522C  6A2F               	clrf	(btemp+7)^0,c
 23695  01522E  0060  F0B3  FFE6   	movff	btemp+4,postinc1
 23696  015234  0060  F0B7  FFE6   	movff	btemp+5,postinc1
 23697  01523A  0060  F0BB  FFE6   	movff	btemp+6,postinc1
 23698  015240  0060  F0BF  FFE6   	movff	btemp+7,postinc1
 23699  015246  0E00               	movlw	0
 23700  015248  6EE6               	movwf	postinc1,c
 23701  01524A  ECDA  F0BC         	call	___xxtofl	;wreg free
 23702  01524E  0060  F0A3  FFE6   	movff	btemp,postinc1
 23703  015254  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 23704  01525A  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 23705  015260  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 23706  015266  EC0F  F099         	call	___flmul	;wreg free
 23707  01526A  0060  F0A3  FFE6   	movff	btemp,postinc1
 23708  015270  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 23709  015276  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 23710  01527C  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 23711  015282  EC9B  F0A4         	call	___fldiv	;wreg free
 23712  015286  D067               	goto	l1774
 23713  015288                     l10072:
 23714                           
 23715                           ;daq.c: 121:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 23716  015288  0E00               	movlw	0
 23717  01528A  6EE6               	movwf	postinc1,c
 23718  01528C  0E00               	movlw	0
 23719  01528E  6EE6               	movwf	postinc1,c
 23720  015290  0E7A               	movlw	122
 23721  015292  6EE6               	movwf	postinc1,c
 23722  015294  0E44               	movlw	68
 23723  015296  6EE6               	movwf	postinc1,c
 23724  015298  0E61               	movlw	97
 23725  01529A  6EE6               	movwf	postinc1,c
 23726  01529C  0E03               	movlw	3
 23727  01529E  6EE6               	movwf	postinc1,c
 23728  0152A0  0E84               	movlw	132
 23729  0152A2  6EE6               	movwf	postinc1,c
 23730  0152A4  0E40               	movlw	64
 23731  0152A6  6EE6               	movwf	postinc1,c
 23732                           
 23733                           ;stkvar	_chan @ sp[(-8)+-1]
 23734  0152A8  0EF7               	movlw	-9
 23735  0152AA  50E3               	movf	plusw1,w,c
 23736  0152AC  6EE6               	movwf	postinc1,c
 23737  0152AE  EC76  F0DA         	call	_get_raw_result	;wreg free
 23738  0152B2  0060  F0A0  F032   	movff	btemp,btemp+10
 23739  0152B8  0060  F0A4  F033   	movff	btemp+1,btemp+11
 23740  0152BE  5032               	movf	(btemp+10)^0,w,c
 23741  0152C0  6E2C               	movwf	(btemp+4)^0,c
 23742  0152C2  5033               	movf	(btemp+11)^0,w,c
 23743  0152C4  6E2D               	movwf	(btemp+5)^0,c
 23744  0152C6  6A2E               	clrf	(btemp+6)^0,c
 23745  0152C8  6A2F               	clrf	(btemp+7)^0,c
 23746  0152CA  0060  F0B3  FFE6   	movff	btemp+4,postinc1
 23747  0152D0  0060  F0B7  FFE6   	movff	btemp+5,postinc1
 23748  0152D6  0060  F0BB  FFE6   	movff	btemp+6,postinc1
 23749  0152DC  0060  F0BF  FFE6   	movff	btemp+7,postinc1
 23750  0152E2  0E00               	movlw	0
 23751  0152E4  6EE6               	movwf	postinc1,c
 23752  0152E6  ECDA  F0BC         	call	___xxtofl	;wreg free
 23753  0152EA  0060  F0A3  FFE6   	movff	btemp,postinc1
 23754  0152F0  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 23755  0152F6  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 23756  0152FC  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 23757  015302  EC0F  F099         	call	___flmul	;wreg free
 23758  015306  0060  F0A3  FFE6   	movff	btemp,postinc1
 23759  01530C  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 23760  015312  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 23761  015318  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 23762  01531E  EC9B  F0A4         	call	___fldiv	;wreg free
 23763  015322  D019               	goto	l1774
 23764  015324                     l10078:
 23765                           
 23766                           ;daq.c: 124:   return 0.0;
 23767  015324  0E00               	movlw	0
 23768  015326  6E28               	movwf	btemp^0,c
 23769  015328  0E00               	movlw	0
 23770  01532A  6E29               	movwf	(btemp+1)^0,c
 23771  01532C  0E00               	movlw	0
 23772  01532E  6E2A               	movwf	(btemp+2)^0,c
 23773  015330  0E00               	movlw	0
 23774  015332                     L27:
 23775  015332  6E2B               	movwf	(btemp+3)^0,c
 23776  015334  D010               	goto	l1774
 23777  015336                     l10086:
 23778                           
 23779                           ;stkvar	_to_what @ sp[(0)+-2]
 23780  015336  0EFE               	movlw	-2
 23781  015338  50E3               	movf	plusw1,w,c
 23782  01533A  6E32               	movwf	(btemp+10)^0,c
 23783  01533C  6A33               	clrf	(btemp+11)^0,c
 23784                           
 23785                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 23786                           ; Switch size 1, requested type "simple"
 23787                           ; Number of cases is 1, Range of values is 0 to 0
 23788                           ; switch strategies available:
 23789                           ; Name         Instructions Cycles
 23790                           ; simple_byte            4     3 (average)
 23791                           ;	Chosen strategy is simple_byte
 23792  01533E  5033               	movf	(btemp+11)^0,w,c
 23793  015340  0A00               	xorlw	0	; case 0
 23794  015342  A4D8               	btfss	status,2,c
 23795  015344  D7EF               	goto	l10078
 23796                           
 23797                           ; Switch size 1, requested type "simple"
 23798                           ; Number of cases is 2, Range of values is 0 to 1
 23799                           ; switch strategies available:
 23800                           ; Name         Instructions Cycles
 23801                           ; simple_byte            7     4 (average)
 23802                           ;	Chosen strategy is simple_byte
 23803  015346  5032               	movf	(btemp+10)^0,w,c
 23804  015348  0A00               	xorlw	0	; case 0
 23805  01534A  B4D8               	btfsc	status,2,c
 23806  01534C  D5B2               	goto	l10032
 23807  01534E  0A01               	xorlw	1	; case 1
 23808  015350  B4D8               	btfsc	status,2,c
 23809  015352  D72A               	goto	l10064
 23810  015354  D7E7               	goto	l10078
 23811  015356                     l1774:
 23812                           
 23813                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 23814  015356  52E5               	movf	postdec1,f,c
 23815  015358  52E5               	movf	postdec1,f,c
 23816  01535A  0012               	return		;funcret
 23817  01535C                     __end_of_conv_raw_result:
 23818                           	opt callstack 0
 23819                           
 23820 ;; *************** function _nanf *****************
 23821 ;; Defined at:
 23822 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
 23823 ;; Parameters:    Size  Location     Type
 23824 ;;  s               2  [STACK] PTR const unsigned char 
 23825 ;;		 -> STR_102(1), STR_64(1), 
 23826 ;; Auto vars:     Size  Location     Type
 23827 ;;  u               4  [STACK] struct .
 23828 ;; Return value:  Size  Location     Type
 23829 ;;                  4  [STACK] float 
 23830 ;; Registers used:
 23831 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 23832 ;; Tracked objects:
 23833 ;;		On entry : 0/39
 23834 ;;		On exit  : 0/0
 23835 ;;		Unchanged: 0/0
 23836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23840 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23841 ;;Total ram usage:        0 bytes
 23842 ;; Hardware stack levels used:    1
 23843 ;; Hardware stack levels required when called:   15
 23844 ;; This function calls:
 23845 ;;		Nothing
 23846 ;; This function is called by:
 23847 ;;		_conv_raw_result
 23848 ;; This function uses a reentrant model
 23849 ;;
 23850                           
 23851                           	psect	text95
 23852  01A696                     __ptext95:
 23853                           	opt callstack 0
 23854  01A696                     _nanf:
 23855                           	opt callstack 0
 23856                           
 23857                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23858  01A696  52E6               	movf	postinc1,f,c
 23859  01A698  52E6               	movf	postinc1,f,c
 23860  01A69A  52E6               	movf	postinc1,f,c
 23861  01A69C  52E6               	movf	postinc1,f,c
 23862                           
 23863                           ;incstack = 0
 23864  01A69E  0EFF               	movlw	255
 23865  01A6A0  6E30               	movwf	(btemp+8)^0,c
 23866  01A6A2  0EFF               	movlw	255
 23867  01A6A4  6E31               	movwf	(btemp+9)^0,c
 23868  01A6A6  0EFF               	movlw	255
 23869  01A6A8  6E32               	movwf	(btemp+10)^0,c
 23870  01A6AA  0E7F               	movlw	127
 23871  01A6AC  6E33               	movwf	(btemp+11)^0,c
 23872                           
 23873                           ;stkvar	_u @ sp[(-4)+0]
 23874  01A6AE  0EFC               	movlw	-4
 23875  01A6B0  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 23876  01A6B6  0EFD               	movlw	-3
 23877  01A6B8  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 23878  01A6BE  0EFE               	movlw	-2
 23879  01A6C0  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 23880  01A6C6  0EFF               	movlw	-1
 23881  01A6C8  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 23882                           
 23883                           ;stkvar	_u @ sp[(-4)+0]
 23884  01A6CE  0EFC               	movlw	-4
 23885  01A6D0  006F FF8C  F028    	movff	plusw1,btemp
 23886  01A6D6  0EFD               	movlw	-3
 23887  01A6D8  006F FF8C  F029    	movff	plusw1,btemp+1
 23888  01A6DE  0EFE               	movlw	-2
 23889  01A6E0  006F FF8C  F02A    	movff	plusw1,btemp+2
 23890  01A6E6  0EFF               	movlw	-1
 23891  01A6E8  006F FF8C  F02B    	movff	plusw1,btemp+3
 23892                           
 23893                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 23894  01A6EE  0EFA               	movlw	250
 23895  01A6F0  26E1               	addwf	fsr1l,f,c
 23896  01A6F2  0EFF               	movlw	255
 23897  01A6F4  22E2               	addwfc	fsr1h,f,c
 23898  01A6F6  0012               	return		;funcret
 23899  01A6F8                     __end_of_nanf:
 23900                           	opt callstack 0
 23901                           
 23902 ;; *************** function _get_raw_result *****************
 23903 ;; Defined at:
 23904 ;;		line 87 in file "daq.c"
 23905 ;; Parameters:    Size  Location     Type
 23906 ;;  index           1  [STACK] const enum E16582
 23907 ;; Auto vars:     Size  Location     Type
 23908 ;;		None
 23909 ;; Return value:  Size  Location     Type
 23910 ;;                  2  [STACK] unsigned short 
 23911 ;; Registers used:
 23912 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
 23913 ;; Tracked objects:
 23914 ;;		On entry : 0/2
 23915 ;;		On exit  : 0/0
 23916 ;;		Unchanged: 0/0
 23917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23921 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23922 ;;Total ram usage:        0 bytes
 23923 ;; Hardware stack levels used:    1
 23924 ;; Hardware stack levels required when called:   15
 23925 ;; This function calls:
 23926 ;;		Nothing
 23927 ;; This function is called by:
 23928 ;;		_main
 23929 ;;		_conv_raw_result
 23930 ;; This function uses a reentrant model
 23931 ;;
 23932                           
 23933                           	psect	text96
 23934  01B4EC                     __ptext96:
 23935                           	opt callstack 0
 23936  01B4EC                     _get_raw_result:
 23937                           	opt callstack 13
 23938                           
 23939                           ;daq.c: 87: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 88: {;daq.c: 
      +                          89:  return R.raw_adc[index];
 23940                           ;stkvar	_index @ sp[(0)+-1]
 23941                           
 23942                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23943                           ;incstack = 0
 23944  01B4EC  0EFF               	movlw	-1
 23945  01B4EE  50E3               	movf	plusw1,w,c
 23946  01B4F0  0D02               	mullw	2
 23947  01B4F2  50F3               	movf	243,w,c
 23948  01B4F4  0FC4               	addlw	low _R
 23949  01B4F6  6ED9               	movwf	fsr2l,c
 23950  01B4F8  6ADA               	clrf	fsr2h,c
 23951  01B4FA  006F FF78  F028    	movff	postinc2,btemp
 23952  01B500  006F FF74  F029    	movff	postdec2,btemp+1
 23953                           
 23954                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
 23955  01B506  52E5               	movf	postdec1,f,c
 23956  01B508  0012               	return		;funcret
 23957  01B50A                     __end_of_get_raw_result:
 23958                           	opt callstack 0
 23959                           
 23960 ;; *************** function ___xxtofl *****************
 23961 ;; Defined at:
 23962 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
 23963 ;; Parameters:    Size  Location     Type
 23964 ;;  sign            1  [STACK] unsigned char 
 23965 ;;  val             4  [STACK] long 
 23966 ;; Auto vars:     Size  Location     Type
 23967 ;;  arg             4  [STACK] unsigned long 
 23968 ;;  exp             1  [STACK] unsigned char 
 23969 ;; Return value:  Size  Location     Type
 23970 ;;                  4  [STACK] unsigned char 
 23971 ;; Registers used:
 23972 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 23973 ;; Tracked objects:
 23974 ;;		On entry : 0/1
 23975 ;;		On exit  : 0/0
 23976 ;;		Unchanged: 0/0
 23977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23982 ;;Total ram usage:        0 bytes
 23983 ;; Hardware stack levels used:    1
 23984 ;; Hardware stack levels required when called:   15
 23985 ;; This function calls:
 23986 ;;		Nothing
 23987 ;; This function is called by:
 23988 ;;		_conv_raw_result
 23989 ;;		_init_bsoc
 23990 ;; This function uses a reentrant model
 23991 ;;
 23992                           
 23993                           	psect	text97
 23994  0179B4                     __ptext97:
 23995                           	opt callstack 0
 23996  0179B4                     ___xxtofl:
 23997                           	opt callstack 0
 23998                           
 23999                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24000  0179B4  0E05               	movlw	5
 24001  0179B6  26E1               	addwf	fsr1l,f,c
 24002  0179B8  0E00               	movlw	0
 24003  0179BA  22E2               	addwfc	fsr1h,f,c
 24004                           
 24005                           ;stkvar	_sign @ sp[(-5)+-1]
 24006                           
 24007                           ;incstack = 0
 24008  0179BC  0EFA               	movlw	-6
 24009  0179BE  50E3               	movf	plusw1,w,c
 24010  0179C0  B4D8               	btfsc	status,2,c
 24011  0179C2  D01D               	goto	l9570
 24012                           
 24013                           ;stkvar	_val @ sp[(-5)+-5]
 24014  0179C4  0EF9               	movlw	-7
 24015  0179C6  AEE3               	btfss	plusw1,7,c
 24016  0179C8  D01A               	goto	l9570
 24017                           
 24018                           ;stkvar	_val @ sp[(-5)+-5]
 24019  0179CA  0EF6               	movlw	-10
 24020  0179CC  006F FF8C  F030    	movff	plusw1,btemp+8
 24021  0179D2  0EF7               	movlw	-9
 24022  0179D4  006F FF8C  F031    	movff	plusw1,btemp+9
 24023  0179DA  0EF8               	movlw	-8
 24024  0179DC  006F FF8C  F032    	movff	plusw1,btemp+10
 24025  0179E2  0EF9               	movlw	-7
 24026  0179E4  006F FF8C  F033    	movff	plusw1,btemp+11
 24027  0179EA  1E30               	comf	(btemp+8)^0,f,c
 24028  0179EC  1E31               	comf	(btemp+9)^0,f,c
 24029  0179EE  1E32               	comf	(btemp+10)^0,f,c
 24030  0179F0  1E33               	comf	(btemp+11)^0,f,c
 24031  0179F2  2A30               	incf	(btemp+8)^0,f,c
 24032  0179F4  0E00               	movlw	0
 24033  0179F6  2231               	addwfc	(btemp+9)^0,f,c
 24034  0179F8  2232               	addwfc	(btemp+10)^0,f,c
 24035  0179FA  2233               	addwfc	(btemp+11)^0,f,c
 24036  0179FC  D010               	goto	L28
 24037  0179FE                     l9570:
 24038                           
 24039                           ;stkvar	_val @ sp[(-5)+-5]
 24040  0179FE  0EF6               	movlw	-10
 24041  017A00  006F FF8C  F030    	movff	plusw1,btemp+8
 24042  017A06  0EF7               	movlw	-9
 24043  017A08  006F FF8C  F031    	movff	plusw1,btemp+9
 24044  017A0E  0EF8               	movlw	-8
 24045  017A10  006F FF8C  F032    	movff	plusw1,btemp+10
 24046  017A16  0EF9               	movlw	-7
 24047  017A18  006F FF8C  F033    	movff	plusw1,btemp+11
 24048  017A1E                     L28:
 24049                           
 24050                           ;stkvar	_arg @ sp[(-5)+0]
 24051  017A1E  0EFB               	movlw	-5
 24052  017A20  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 24053  017A26  0EFC               	movlw	-4
 24054  017A28  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 24055  017A2E  0EFD               	movlw	-3
 24056  017A30  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 24057  017A36  0EFE               	movlw	-2
 24058  017A38  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 24059                           
 24060                           ;stkvar	_val @ sp[(-5)+-5]
 24061  017A3E  0EF6               	movlw	-10
 24062  017A40  50E3               	movf	plusw1,w,c
 24063  017A42  E113               	bnz	l9578
 24064  017A44  0EF7               	movlw	-9
 24065  017A46  50E3               	movf	plusw1,w,c
 24066  017A48  E110               	bnz	l9578
 24067  017A4A  0EF8               	movlw	-8
 24068  017A4C  50E3               	movf	plusw1,w,c
 24069  017A4E  E10D               	bnz	l9578
 24070  017A50  0EF9               	movlw	-7
 24071  017A52  50E3               	movf	plusw1,w,c
 24072  017A54  A4D8               	btfss	status,2,c
 24073  017A56  D009               	goto	l9578
 24074  017A58  0E00               	movlw	0
 24075  017A5A  6E28               	movwf	btemp^0,c
 24076  017A5C  0E00               	movlw	0
 24077  017A5E  6E29               	movwf	(btemp+1)^0,c
 24078  017A60  0E00               	movlw	0
 24079  017A62  6E2A               	movwf	(btemp+2)^0,c
 24080  017A64  0E00               	movlw	0
 24081  017A66  6E2B               	movwf	(btemp+3)^0,c
 24082  017A68  D0A2               	goto	l3021
 24083  017A6A                     l9578:
 24084  017A6A  0E96               	movlw	150
 24085  017A6C  6E33               	movwf	(btemp+11)^0,c
 24086                           
 24087                           ;stkvar	_exp @ sp[(-5)+4]
 24088  017A6E  0EFF               	movlw	-1
 24089  017A70  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 24090  017A76  D00B               	goto	l9582
 24091  017A78                     l9580:
 24092                           
 24093                           ;stkvar	_exp @ sp[(-5)+4]
 24094  017A78  0EFF               	movlw	-1
 24095  017A7A  2AE3               	incf	plusw1,f,c
 24096                           
 24097                           ;stkvar	_arg @ sp[(-5)+0]
 24098  017A7C  90D8               	bcf	status,0,c
 24099  017A7E  0EFE               	movlw	-2
 24100  017A80  32E3               	rrcf	plusw1,f,c
 24101  017A82  0EFD               	movlw	-3
 24102  017A84  32E3               	rrcf	plusw1,f,c
 24103  017A86  0EFC               	movlw	-4
 24104  017A88  32E3               	rrcf	plusw1,f,c
 24105  017A8A  0EFB               	movlw	-5
 24106  017A8C  32E3               	rrcf	plusw1,f,c
 24107  017A8E                     l9582:
 24108                           
 24109                           ;stkvar	_arg @ sp[(-5)+0]
 24110  017A8E  50E1               	movf	fsr1l,w,c
 24111  017A90  0FFB               	addlw	-5
 24112  017A92  6ED9               	movwf	fsr2l,c
 24113  017A94  50E2               	movf	fsr1h,w,c
 24114  017A96  6EDA               	movwf	fsr2h,c
 24115  017A98  0EFF               	movlw	255
 24116  017A9A  22DA               	addwfc	fsr2h,f,c
 24117  017A9C  52DE               	movf	postinc2,f,c
 24118  017A9E  52DE               	movf	postinc2,f,c
 24119  017AA0  52DE               	movf	postinc2,f,c
 24120  017AA2  0EFE               	movlw	254
 24121  017AA4  14DD               	andwf	postdec2,w,c
 24122  017AA6  B4D8               	btfsc	status,2,c
 24123  017AA8  D018               	goto	l9590
 24124  017AAA  D7E6               	goto	l9580
 24125  017AAC                     l9584:
 24126                           
 24127                           ;stkvar	_exp @ sp[(-5)+4]
 24128  017AAC  0EFF               	movlw	-1
 24129  017AAE  2AE3               	incf	plusw1,f,c
 24130                           
 24131                           ;stkvar	_arg @ sp[(-5)+0]
 24132  017AB0  50E1               	movf	fsr1l,w,c
 24133  017AB2  0FFB               	addlw	-5
 24134  017AB4  6ED9               	movwf	fsr2l,c
 24135  017AB6  50E2               	movf	fsr1h,w,c
 24136  017AB8  6EDA               	movwf	fsr2h,c
 24137  017ABA  0EFF               	movlw	255
 24138  017ABC  22DA               	addwfc	fsr2h,f,c
 24139  017ABE  2ADE               	incf	postinc2,f,c
 24140  017AC0  0E00               	movlw	0
 24141  017AC2  22DE               	addwfc	postinc2,f,c
 24142  017AC4  22DE               	addwfc	postinc2,f,c
 24143  017AC6  22DE               	addwfc	postinc2,f,c
 24144                           
 24145                           ;stkvar	_arg @ sp[(-5)+0]
 24146  017AC8  90D8               	bcf	status,0,c
 24147  017ACA  0EFE               	movlw	-2
 24148  017ACC  32E3               	rrcf	plusw1,f,c
 24149  017ACE  0EFD               	movlw	-3
 24150  017AD0  32E3               	rrcf	plusw1,f,c
 24151  017AD2  0EFC               	movlw	-4
 24152  017AD4  32E3               	rrcf	plusw1,f,c
 24153  017AD6  0EFB               	movlw	-5
 24154  017AD8  32E3               	rrcf	plusw1,f,c
 24155  017ADA                     l9590:
 24156                           
 24157                           ;stkvar	_arg @ sp[(-5)+0]
 24158  017ADA  50E1               	movf	fsr1l,w,c
 24159  017ADC  0FFB               	addlw	-5
 24160  017ADE  6ED9               	movwf	fsr2l,c
 24161  017AE0  50E2               	movf	fsr1h,w,c
 24162  017AE2  6EDA               	movwf	fsr2h,c
 24163  017AE4  0EFF               	movlw	255
 24164  017AE6  22DA               	addwfc	fsr2h,f,c
 24165  017AE8  52DE               	movf	postinc2,f,c
 24166  017AEA  52DE               	movf	postinc2,f,c
 24167  017AEC  52DE               	movf	postinc2,f,c
 24168  017AEE  0EFF               	movlw	255
 24169  017AF0  14DD               	andwf	postdec2,w,c
 24170  017AF2  B4D8               	btfsc	status,2,c
 24171  017AF4  D00C               	goto	l9594
 24172  017AF6  D7DA               	goto	l9584
 24173  017AF8                     l9592:
 24174                           
 24175                           ;stkvar	_exp @ sp[(-5)+4]
 24176  017AF8  0EFF               	movlw	-1
 24177  017AFA  06E3               	decf	plusw1,f,c
 24178                           
 24179                           ;stkvar	_arg @ sp[(-5)+0]
 24180  017AFC  90D8               	bcf	status,0,c
 24181  017AFE  0EFB               	movlw	-5
 24182  017B00  36E3               	rlcf	plusw1,f,c
 24183  017B02  0EFC               	movlw	-4
 24184  017B04  36E3               	rlcf	plusw1,f,c
 24185  017B06  0EFD               	movlw	-3
 24186  017B08  36E3               	rlcf	plusw1,f,c
 24187  017B0A  0EFE               	movlw	-2
 24188  017B0C  36E3               	rlcf	plusw1,f,c
 24189  017B0E                     l9594:
 24190                           
 24191                           ;stkvar	_arg @ sp[(-5)+0]
 24192  017B0E  0EFD               	movlw	-3
 24193  017B10  BEE3               	btfsc	plusw1,7,c
 24194  017B12  D007               	goto	u8920
 24195                           
 24196                           ;stkvar	_exp @ sp[(-5)+4]
 24197  017B14  0EFF               	movlw	-1
 24198  017B16  006F FF8C  F028    	movff	plusw1,btemp
 24199  017B1C  0E02               	movlw	2
 24200  017B1E  6028               	cpfslt	btemp^0,c
 24201  017B20  D7EB               	goto	l9592
 24202  017B22                     u8920:
 24203                           
 24204                           ;stkvar	_exp @ sp[(-5)+4]
 24205  017B22  0EFF               	movlw	-1
 24206  017B24  B0E3               	btfsc	plusw1,0,c
 24207  017B26  D002               	goto	l9602
 24208                           
 24209                           ;stkvar	_arg @ sp[(-5)+0]
 24210  017B28  0EFD               	movlw	-3
 24211  017B2A  9EE3               	bcf	plusw1,7,c
 24212  017B2C                     l9602:
 24213                           
 24214                           ;stkvar	_exp @ sp[(-5)+4]
 24215  017B2C  50E1               	movf	fsr1l,w,c
 24216  017B2E  0FFF               	addlw	-1
 24217  017B30  6ED9               	movwf	fsr2l,c
 24218  017B32  50E2               	movf	fsr1h,w,c
 24219  017B34  6EDA               	movwf	fsr2h,c
 24220  017B36  0EFF               	movlw	255
 24221  017B38  22DA               	addwfc	fsr2h,f,c
 24222  017B3A  90D8               	bcf	status,0,c
 24223  017B3C  32DF               	rrcf	indf2,f,c
 24224                           
 24225                           ;stkvar	_exp @ sp[(-5)+4]
 24226  017B3E  0EFF               	movlw	-1
 24227  017B40  006F FF8C  F033    	movff	plusw1,btemp+11
 24228  017B46  0060  F0CC  F02C   	movff	btemp+11,btemp+4
 24229  017B4C  6A2D               	clrf	(btemp+5)^0,c
 24230  017B4E  6A2E               	clrf	(btemp+6)^0,c
 24231  017B50  6A2F               	clrf	(btemp+7)^0,c
 24232  017B52  0060  F0B0  F02F   	movff	btemp+4,btemp+7
 24233  017B58  6A2E               	clrf	(btemp+6)^0,c
 24234  017B5A  6A2D               	clrf	(btemp+5)^0,c
 24235  017B5C  6A2C               	clrf	(btemp+4)^0,c
 24236                           
 24237                           ;stkvar	_arg @ sp[(-5)+0]
 24238  017B5E  50E1               	movf	fsr1l,w,c
 24239  017B60  0FFB               	addlw	-5
 24240  017B62  6ED9               	movwf	fsr2l,c
 24241  017B64  50E2               	movf	fsr1h,w,c
 24242  017B66  6EDA               	movwf	fsr2h,c
 24243  017B68  0EFF               	movlw	255
 24244  017B6A  22DA               	addwfc	fsr2h,f,c
 24245  017B6C  502C               	movf	(btemp+4)^0,w,c
 24246  017B6E  12DE               	iorwf	postinc2,f,c
 24247  017B70  502D               	movf	(btemp+5)^0,w,c
 24248  017B72  12DE               	iorwf	postinc2,f,c
 24249  017B74  502E               	movf	(btemp+6)^0,w,c
 24250  017B76  12DE               	iorwf	postinc2,f,c
 24251  017B78  502F               	movf	(btemp+7)^0,w,c
 24252  017B7A  12DE               	iorwf	postinc2,f,c
 24253                           
 24254                           ;stkvar	_sign @ sp[(-5)+-1]
 24255  017B7C  0EFA               	movlw	-6
 24256  017B7E  50E3               	movf	plusw1,w,c
 24257  017B80  B4D8               	btfsc	status,2,c
 24258  017B82  D005               	goto	l9612
 24259                           
 24260                           ;stkvar	_val @ sp[(-5)+-5]
 24261  017B84  0EF9               	movlw	-7
 24262  017B86  AEE3               	btfss	plusw1,7,c
 24263  017B88  D002               	goto	l9612
 24264                           
 24265                           ;stkvar	_arg @ sp[(-5)+0]
 24266  017B8A  0EFE               	movlw	-2
 24267  017B8C  8EE3               	bsf	plusw1,7,c
 24268  017B8E                     l9612:
 24269                           
 24270                           ;stkvar	_arg @ sp[(-5)+0]
 24271  017B8E  0EFB               	movlw	-5
 24272  017B90  006F FF8C  F028    	movff	plusw1,btemp
 24273  017B96  0EFC               	movlw	-4
 24274  017B98  006F FF8C  F029    	movff	plusw1,btemp+1
 24275  017B9E  0EFD               	movlw	-3
 24276  017BA0  006F FF8C  F02A    	movff	plusw1,btemp+2
 24277  017BA6  0EFE               	movlw	-2
 24278  017BA8  006F FF8C  F02B    	movff	plusw1,btemp+3
 24279  017BAE                     l3021:
 24280                           
 24281                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
 24282  017BAE  0EF6               	movlw	246
 24283  017BB0  26E1               	addwf	fsr1l,f,c
 24284  017BB2  0EFF               	movlw	255
 24285  017BB4  22E2               	addwfc	fsr1h,f,c
 24286  017BB6  0012               	return		;funcret
 24287  017BB8                     __end_of___xxtofl:
 24288                           	opt callstack 0
 24289                           
 24290 ;; *************** function ___fldiv *****************
 24291 ;; Defined at:
 24292 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 24293 ;; Parameters:    Size  Location     Type
 24294 ;;  b               4  [STACK] unsigned char 
 24295 ;;  a               4  [STACK] unsigned char 
 24296 ;; Auto vars:     Size  Location     Type
 24297 ;;  grs             4  [STACK] unsigned long 
 24298 ;;  rem             4  [STACK] unsigned long 
 24299 ;;  new_exp         2  [STACK] short 
 24300 ;;  aexp            1  [STACK] unsigned char 
 24301 ;;  bexp            1  [STACK] unsigned char 
 24302 ;;  sign            1  [STACK] unsigned char 
 24303 ;; Return value:  Size  Location     Type
 24304 ;;                  4  [STACK] unsigned char 
 24305 ;; Registers used:
 24306 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 24307 ;; Tracked objects:
 24308 ;;		On entry : 0/1
 24309 ;;		On exit  : 0/0
 24310 ;;		Unchanged: 0/0
 24311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24316 ;;Total ram usage:        0 bytes
 24317 ;; Hardware stack levels used:    1
 24318 ;; Hardware stack levels required when called:   15
 24319 ;; This function calls:
 24320 ;;		Nothing
 24321 ;; This function is called by:
 24322 ;;		_conv_raw_result
 24323 ;;		_calc_bsoc
 24324 ;;		_init_bsoc
 24325 ;;		_esr_check
 24326 ;;		_efgtoa
 24327 ;; This function uses a reentrant model
 24328 ;;
 24329                           
 24330                           	psect	text98
 24331  014936                     __ptext98:
 24332                           	opt callstack 0
 24333  014936                     ___fldiv:
 24334                           	opt callstack 0
 24335                           
 24336                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 24337  014936  0E0D               	movlw	13
 24338  014938  26E1               	addwf	fsr1l,f,c
 24339  01493A  0E00               	movlw	0
 24340  01493C  22E2               	addwfc	fsr1h,f,c
 24341                           
 24342                           ;stkvar	_b @ sp[(-13)+-4]
 24343                           
 24344                           ;incstack = 0
 24345 ;; hardware stack exceeded
 24346  01493E  0EF2               	movlw	242
 24347  014940  24E1               	addwf	fsr1l,w,c
 24348  014942  6ED9               	movwf	fsr2l,c
 24349  014944  0EFF               	movlw	255
 24350  014946  20E2               	addwfc	fsr1h,w,c
 24351  014948  6EDA               	movwf	fsr2h,c
 24352  01494A  50DF               	movf	indf2,w,c
 24353  01494C  6E33               	movwf	(btemp+11)^0,c
 24354  01494E  0E80               	movlw	128
 24355  014950  1633               	andwf	(btemp+11)^0,f,c
 24356                           
 24357                           ;stkvar	_sign @ sp[(-13)+12]
 24358  014952  0EFF               	movlw	-1
 24359  014954  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 24360                           
 24361                           ;stkvar	_b @ sp[(-13)+-4]
 24362  01495A  0EF2               	movlw	242
 24363  01495C  24E1               	addwf	fsr1l,w,c
 24364  01495E  6ED9               	movwf	fsr2l,c
 24365  014960  0EFF               	movlw	255
 24366  014962  20E2               	addwfc	fsr1h,w,c
 24367  014964  6EDA               	movwf	fsr2h,c
 24368  014966  50DF               	movf	indf2,w,c
 24369  014968  6E33               	movwf	(btemp+11)^0,c
 24370  01496A  90D8               	bcf	status,0,c
 24371  01496C  3433               	rlcf	(btemp+11)^0,w,c
 24372  01496E  6E32               	movwf	(btemp+10)^0,c
 24373                           
 24374                           ;stkvar	_bexp @ sp[(-13)+11]
 24375  014970  0EFE               	movlw	-2
 24376  014972  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 24377                           
 24378                           ;stkvar	_b @ sp[(-13)+-4]
 24379  014978  0EF1               	movlw	241
 24380  01497A  24E1               	addwf	fsr1l,w,c
 24381  01497C  6ED9               	movwf	fsr2l,c
 24382  01497E  0EFF               	movlw	255
 24383  014980  20E2               	addwfc	fsr1h,w,c
 24384  014982  6EDA               	movwf	fsr2h,c
 24385  014984  AEDF               	btfss	indf2,7,c
 24386  014986  D002               	goto	l7934
 24387                           
 24388                           ;stkvar	_bexp @ sp[(-13)+11]
 24389  014988  0EFE               	movlw	-2
 24390  01498A  80E3               	bsf	plusw1,0,c
 24391  01498C                     l7934:
 24392                           
 24393                           ;stkvar	_bexp @ sp[(-13)+11]
 24394  01498C  0EFE               	movlw	-2
 24395  01498E  50E3               	movf	plusw1,w,c
 24396  014990  B4D8               	btfsc	status,2,c
 24397  014992  D027               	goto	l7944
 24398                           
 24399                           ;stkvar	_bexp @ sp[(-13)+11]
 24400  014994  0EFE               	movlw	-2
 24401  014996  28E3               	incf	plusw1,w,c
 24402  014998  A4D8               	btfss	status,2,c
 24403  01499A  D018               	goto	l7940
 24404  01499C  0E00               	movlw	0
 24405  01499E  6E30               	movwf	(btemp+8)^0,c
 24406  0149A0  0E00               	movlw	0
 24407  0149A2  6E31               	movwf	(btemp+9)^0,c
 24408  0149A4  0E00               	movlw	0
 24409  0149A6  6E32               	movwf	(btemp+10)^0,c
 24410  0149A8  0E00               	movlw	0
 24411  0149AA  6E33               	movwf	(btemp+11)^0,c
 24412                           
 24413                           ;stkvar	_b @ sp[(-13)+-4]
 24414  0149AC  0EEF               	movlw	-17
 24415  0149AE  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 24416  0149B4  0EF0               	movlw	-16
 24417  0149B6  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 24418  0149BC  0EF1               	movlw	-15
 24419  0149BE  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 24420  0149C4  0EF2               	movlw	-14
 24421  0149C6  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 24422  0149CC                     l7940:
 24423                           
 24424                           ;stkvar	_b @ sp[(-13)+-4]
 24425  0149CC  0EF1               	movlw	-15
 24426  0149CE  8EE3               	bsf	plusw1,7,c
 24427                           
 24428                           ;stkvar	_b @ sp[(-13)+-4]
 24429  0149D0  0EF2               	movlw	242
 24430  0149D2  24E1               	addwf	fsr1l,w,c
 24431  0149D4  6ED9               	movwf	fsr2l,c
 24432  0149D6  0EFF               	movlw	255
 24433  0149D8  20E2               	addwfc	fsr1h,w,c
 24434  0149DA  6EDA               	movwf	fsr2h,c
 24435  0149DC  0E00               	movlw	0
 24436  0149DE  6EDF               	movwf	indf2,c
 24437  0149E0  D018               	goto	l7946
 24438  0149E2                     l7944:
 24439  0149E2  0E00               	movlw	0
 24440  0149E4  6E30               	movwf	(btemp+8)^0,c
 24441  0149E6  0E00               	movlw	0
 24442  0149E8  6E31               	movwf	(btemp+9)^0,c
 24443  0149EA  0E00               	movlw	0
 24444  0149EC  6E32               	movwf	(btemp+10)^0,c
 24445  0149EE  0E00               	movlw	0
 24446  0149F0  6E33               	movwf	(btemp+11)^0,c
 24447                           
 24448                           ;stkvar	_b @ sp[(-13)+-4]
 24449  0149F2  0EEF               	movlw	-17
 24450  0149F4  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 24451  0149FA  0EF0               	movlw	-16
 24452  0149FC  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 24453  014A02  0EF1               	movlw	-15
 24454  014A04  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 24455  014A0A  0EF2               	movlw	-14
 24456  014A0C  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 24457  014A12                     l7946:
 24458                           
 24459                           ;stkvar	_a @ sp[(-13)+-8]
 24460  014A12  0EEE               	movlw	238
 24461  014A14  24E1               	addwf	fsr1l,w,c
 24462  014A16  6ED9               	movwf	fsr2l,c
 24463  014A18  0EFF               	movlw	255
 24464  014A1A  20E2               	addwfc	fsr1h,w,c
 24465  014A1C  6EDA               	movwf	fsr2h,c
 24466  014A1E  50DF               	movf	indf2,w,c
 24467  014A20  6E33               	movwf	(btemp+11)^0,c
 24468  014A22  0E80               	movlw	128
 24469  014A24  1633               	andwf	(btemp+11)^0,f,c
 24470                           
 24471                           ;stkvar	_sign @ sp[(-13)+12]
 24472  014A26  50E1               	movf	fsr1l,w,c
 24473  014A28  0FFF               	addlw	-1
 24474  014A2A  6ED9               	movwf	fsr2l,c
 24475  014A2C  50E2               	movf	fsr1h,w,c
 24476  014A2E  6EDA               	movwf	fsr2h,c
 24477  014A30  0EFF               	movlw	255
 24478  014A32  22DA               	addwfc	fsr2h,f,c
 24479  014A34  5033               	movf	(btemp+11)^0,w,c
 24480  014A36  1ADF               	xorwf	indf2,f,c
 24481                           
 24482                           ;stkvar	_a @ sp[(-13)+-8]
 24483  014A38  0EEE               	movlw	238
 24484  014A3A  24E1               	addwf	fsr1l,w,c
 24485  014A3C  6ED9               	movwf	fsr2l,c
 24486  014A3E  0EFF               	movlw	255
 24487  014A40  20E2               	addwfc	fsr1h,w,c
 24488  014A42  6EDA               	movwf	fsr2h,c
 24489  014A44  50DF               	movf	indf2,w,c
 24490  014A46  6E33               	movwf	(btemp+11)^0,c
 24491  014A48  90D8               	bcf	status,0,c
 24492  014A4A  3433               	rlcf	(btemp+11)^0,w,c
 24493  014A4C  6E32               	movwf	(btemp+10)^0,c
 24494                           
 24495                           ;stkvar	_aexp @ sp[(-13)+10]
 24496  014A4E  0EFD               	movlw	-3
 24497  014A50  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 24498                           
 24499                           ;stkvar	_a @ sp[(-13)+-8]
 24500  014A56  0EED               	movlw	237
 24501  014A58  24E1               	addwf	fsr1l,w,c
 24502  014A5A  6ED9               	movwf	fsr2l,c
 24503  014A5C  0EFF               	movlw	255
 24504  014A5E  20E2               	addwfc	fsr1h,w,c
 24505  014A60  6EDA               	movwf	fsr2h,c
 24506  014A62  AEDF               	btfss	indf2,7,c
 24507  014A64  D002               	goto	l7954
 24508                           
 24509                           ;stkvar	_aexp @ sp[(-13)+10]
 24510  014A66  0EFD               	movlw	-3
 24511  014A68  80E3               	bsf	plusw1,0,c
 24512  014A6A                     l7954:
 24513                           
 24514                           ;stkvar	_aexp @ sp[(-13)+10]
 24515  014A6A  0EFD               	movlw	-3
 24516  014A6C  50E3               	movf	plusw1,w,c
 24517  014A6E  B4D8               	btfsc	status,2,c
 24518  014A70  D027               	goto	l7964
 24519                           
 24520                           ;stkvar	_aexp @ sp[(-13)+10]
 24521  014A72  0EFD               	movlw	-3
 24522  014A74  28E3               	incf	plusw1,w,c
 24523  014A76  A4D8               	btfss	status,2,c
 24524  014A78  D018               	goto	l7960
 24525  014A7A  0E00               	movlw	0
 24526  014A7C  6E30               	movwf	(btemp+8)^0,c
 24527  014A7E  0E00               	movlw	0
 24528  014A80  6E31               	movwf	(btemp+9)^0,c
 24529  014A82  0E00               	movlw	0
 24530  014A84  6E32               	movwf	(btemp+10)^0,c
 24531  014A86  0E00               	movlw	0
 24532  014A88  6E33               	movwf	(btemp+11)^0,c
 24533                           
 24534                           ;stkvar	_a @ sp[(-13)+-8]
 24535  014A8A  0EEB               	movlw	-21
 24536  014A8C  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 24537  014A92  0EEC               	movlw	-20
 24538  014A94  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 24539  014A9A  0EED               	movlw	-19
 24540  014A9C  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 24541  014AA2  0EEE               	movlw	-18
 24542  014AA4  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 24543  014AAA                     l7960:
 24544                           
 24545                           ;stkvar	_a @ sp[(-13)+-8]
 24546  014AAA  0EED               	movlw	-19
 24547  014AAC  8EE3               	bsf	plusw1,7,c
 24548                           
 24549                           ;stkvar	_a @ sp[(-13)+-8]
 24550  014AAE  0EEE               	movlw	238
 24551  014AB0  24E1               	addwf	fsr1l,w,c
 24552  014AB2  6ED9               	movwf	fsr2l,c
 24553  014AB4  0EFF               	movlw	255
 24554  014AB6  20E2               	addwfc	fsr1h,w,c
 24555  014AB8  6EDA               	movwf	fsr2h,c
 24556  014ABA  0E00               	movlw	0
 24557  014ABC  6EDF               	movwf	indf2,c
 24558  014ABE  D018               	goto	l7966
 24559  014AC0                     l7964:
 24560  014AC0  0E00               	movlw	0
 24561  014AC2  6E30               	movwf	(btemp+8)^0,c
 24562  014AC4  0E00               	movlw	0
 24563  014AC6  6E31               	movwf	(btemp+9)^0,c
 24564  014AC8  0E00               	movlw	0
 24565  014ACA  6E32               	movwf	(btemp+10)^0,c
 24566  014ACC  0E00               	movlw	0
 24567  014ACE  6E33               	movwf	(btemp+11)^0,c
 24568                           
 24569                           ;stkvar	_a @ sp[(-13)+-8]
 24570  014AD0  0EEB               	movlw	-21
 24571  014AD2  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 24572  014AD8  0EEC               	movlw	-20
 24573  014ADA  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 24574  014AE0  0EED               	movlw	-19
 24575  014AE2  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 24576  014AE8  0EEE               	movlw	-18
 24577  014AEA  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 24578  014AF0                     l7966:
 24579                           
 24580                           ;stkvar	_a @ sp[(-13)+-8]
 24581  014AF0  0EEB               	movlw	-21
 24582  014AF2  50E3               	movf	plusw1,w,c
 24583  014AF4  E139               	bnz	l7978
 24584  014AF6  0EEC               	movlw	-20
 24585  014AF8  50E3               	movf	plusw1,w,c
 24586  014AFA  E136               	bnz	l7978
 24587  014AFC  0EED               	movlw	-19
 24588  014AFE  50E3               	movf	plusw1,w,c
 24589  014B00  E133               	bnz	l7978
 24590  014B02  0EEE               	movlw	-18
 24591  014B04  50E3               	movf	plusw1,w,c
 24592  014B06  A4D8               	btfss	status,2,c
 24593  014B08  D02F               	goto	l7978
 24594                           
 24595                           ;stkvar	_b @ sp[(-13)+-4]
 24596  014B0A  0EEF               	movlw	-17
 24597  014B0C  6AE3               	clrf	plusw1,c
 24598  014B0E  0EF0               	movlw	-16
 24599  014B10  6AE3               	clrf	plusw1,c
 24600  014B12  0EF1               	movlw	-15
 24601  014B14  6AE3               	clrf	plusw1,c
 24602  014B16  0EF2               	movlw	-14
 24603  014B18  6AE3               	clrf	plusw1,c
 24604                           
 24605                           ;stkvar	_b @ sp[(-13)+-4]
 24606  014B1A  0EF1               	movlw	241
 24607  014B1C  24E1               	addwf	fsr1l,w,c
 24608  014B1E  6ED9               	movwf	fsr2l,c
 24609  014B20  0EFF               	movlw	255
 24610  014B22  20E2               	addwfc	fsr1h,w,c
 24611  014B24  6EDA               	movwf	fsr2h,c
 24612  014B26  0E80               	movlw	128
 24613  014B28  12DE               	iorwf	postinc2,f,c
 24614  014B2A  0E7F               	movlw	127
 24615  014B2C  12DD               	iorwf	postdec2,f,c
 24616  014B2E                     l7972:
 24617                           
 24618                           ;stkvar	_sign @ sp[(-13)+12]
 24619  014B2E  0EFF               	movlw	-1
 24620  014B30  006F FF8C  F033    	movff	plusw1,btemp+11
 24621                           
 24622                           ;stkvar	_b @ sp[(-13)+-4]
 24623  014B36  0EF2               	movlw	242
 24624  014B38  24E1               	addwf	fsr1l,w,c
 24625  014B3A  6ED9               	movwf	fsr2l,c
 24626  014B3C  0EFF               	movlw	255
 24627  014B3E  20E2               	addwfc	fsr1h,w,c
 24628  014B40  6EDA               	movwf	fsr2h,c
 24629  014B42  5033               	movf	(btemp+11)^0,w,c
 24630  014B44  12DF               	iorwf	indf2,f,c
 24631                           
 24632                           ;stkvar	_b @ sp[(-13)+-4]
 24633  014B46  0EEF               	movlw	-17
 24634  014B48  006F FF8C  F028    	movff	plusw1,btemp
 24635  014B4E  0EF0               	movlw	-16
 24636  014B50  006F FF8C  F029    	movff	plusw1,btemp+1
 24637  014B56  0EF1               	movlw	-15
 24638  014B58  006F FF8C  F02A    	movff	plusw1,btemp+2
 24639  014B5E  0EF2               	movlw	-14
 24640  014B60  006F FF8C  F02B    	movff	plusw1,btemp+3
 24641  014B66  D19F               	goto	l2945
 24642  014B68                     l7978:
 24643                           
 24644                           ;stkvar	_bexp @ sp[(-13)+11]
 24645  014B68  0EFE               	movlw	-2
 24646  014B6A  50E3               	movf	plusw1,w,c
 24647  014B6C  A4D8               	btfss	status,2,c
 24648  014B6E  D009               	goto	l7986
 24649  014B70  0E00               	movlw	0
 24650  014B72  6E28               	movwf	btemp^0,c
 24651  014B74  0E00               	movlw	0
 24652  014B76  6E29               	movwf	(btemp+1)^0,c
 24653  014B78  0E00               	movlw	0
 24654  014B7A  6E2A               	movwf	(btemp+2)^0,c
 24655  014B7C  0E00               	movlw	0
 24656  014B7E  6E2B               	movwf	(btemp+3)^0,c
 24657  014B80  D192               	goto	l2945
 24658  014B82                     l7986:
 24659                           
 24660                           ;stkvar	_bexp @ sp[(-13)+11]
 24661  014B82  0EFE               	movlw	-2
 24662  014B84  50E3               	movf	plusw1,w,c
 24663  014B86  6E32               	movwf	(btemp+10)^0,c
 24664  014B88  6A33               	clrf	(btemp+11)^0,c
 24665                           
 24666                           ;stkvar	_aexp @ sp[(-13)+10]
 24667  014B8A  0EFD               	movlw	-3
 24668  014B8C  50E3               	movf	plusw1,w,c
 24669  014B8E  5E32               	subwf	(btemp+10)^0,f,c
 24670  014B90  0E00               	movlw	0
 24671  014B92  5A33               	subwfb	(btemp+11)^0,f,c
 24672  014B94  0E7F               	movlw	127
 24673  014B96  2632               	addwf	(btemp+10)^0,f,c
 24674  014B98  0E00               	movlw	0
 24675  014B9A  2233               	addwfc	(btemp+11)^0,f,c
 24676                           
 24677                           ;stkvar	_new_exp @ sp[(-13)+8]
 24678  014B9C  0EFB               	movlw	-5
 24679  014B9E  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 24680  014BA4  0EFC               	movlw	-4
 24681  014BA6  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 24682                           
 24683                           ;stkvar	_b @ sp[(-13)+-4]
 24684  014BAC  0EEF               	movlw	-17
 24685  014BAE  006F FF8C  F030    	movff	plusw1,btemp+8
 24686  014BB4  0EF0               	movlw	-16
 24687  014BB6  006F FF8C  F031    	movff	plusw1,btemp+9
 24688  014BBC  0EF1               	movlw	-15
 24689  014BBE  006F FF8C  F032    	movff	plusw1,btemp+10
 24690  014BC4  0EF2               	movlw	-14
 24691  014BC6  006F FF8C  F033    	movff	plusw1,btemp+11
 24692                           
 24693                           ;stkvar	_rem @ sp[(-13)+4]
 24694  014BCC  0EF7               	movlw	-9
 24695  014BCE  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 24696  014BD4  0EF8               	movlw	-8
 24697  014BD6  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 24698  014BDC  0EF9               	movlw	-7
 24699  014BDE  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 24700  014BE4  0EFA               	movlw	-6
 24701  014BE6  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 24702                           
 24703                           ;stkvar	_b @ sp[(-13)+-4]
 24704  014BEC  0EEF               	movlw	-17
 24705  014BEE  6AE3               	clrf	plusw1,c
 24706  014BF0  0EF0               	movlw	-16
 24707  014BF2  6AE3               	clrf	plusw1,c
 24708  014BF4  0EF1               	movlw	-15
 24709  014BF6  6AE3               	clrf	plusw1,c
 24710  014BF8  0EF2               	movlw	-14
 24711  014BFA  6AE3               	clrf	plusw1,c
 24712                           
 24713                           ;stkvar	_grs @ sp[(-13)+0]
 24714  014BFC  0EF3               	movlw	-13
 24715  014BFE  6AE3               	clrf	plusw1,c
 24716  014C00  0EF4               	movlw	-12
 24717  014C02  6AE3               	clrf	plusw1,c
 24718  014C04  0EF5               	movlw	-11
 24719  014C06  6AE3               	clrf	plusw1,c
 24720  014C08  0EF6               	movlw	-10
 24721  014C0A  6AE3               	clrf	plusw1,c
 24722                           
 24723                           ;stkvar	_aexp @ sp[(-13)+10]
 24724  014C0C  0EFD               	movlw	-3
 24725  014C0E  6AE3               	clrf	plusw1,c
 24726  014C10  D050               	goto	l8014
 24727  014C12                     l7996:
 24728                           
 24729                           ;stkvar	_aexp @ sp[(-13)+10]
 24730  014C12  0EFD               	movlw	-3
 24731  014C14  50E3               	movf	plusw1,w,c
 24732  014C16  B4D8               	btfsc	status,2,c
 24733  014C18  D020               	goto	l8006
 24734                           
 24735                           ;stkvar	_rem @ sp[(-13)+4]
 24736  014C1A  90D8               	bcf	status,0,c
 24737  014C1C  0EF7               	movlw	-9
 24738  014C1E  36E3               	rlcf	plusw1,f,c
 24739  014C20  0EF8               	movlw	-8
 24740  014C22  36E3               	rlcf	plusw1,f,c
 24741  014C24  0EF9               	movlw	-7
 24742  014C26  36E3               	rlcf	plusw1,f,c
 24743  014C28  0EFA               	movlw	-6
 24744  014C2A  36E3               	rlcf	plusw1,f,c
 24745                           
 24746                           ;stkvar	_b @ sp[(-13)+-4]
 24747  014C2C  90D8               	bcf	status,0,c
 24748  014C2E  0EEF               	movlw	-17
 24749  014C30  36E3               	rlcf	plusw1,f,c
 24750  014C32  0EF0               	movlw	-16
 24751  014C34  36E3               	rlcf	plusw1,f,c
 24752  014C36  0EF1               	movlw	-15
 24753  014C38  36E3               	rlcf	plusw1,f,c
 24754  014C3A  0EF2               	movlw	-14
 24755  014C3C  36E3               	rlcf	plusw1,f,c
 24756                           
 24757                           ;stkvar	_grs @ sp[(-13)+0]
 24758  014C3E  0EF6               	movlw	-10
 24759  014C40  AEE3               	btfss	plusw1,7,c
 24760  014C42  D002               	goto	l8004
 24761                           
 24762                           ;stkvar	_b @ sp[(-13)+-4]
 24763  014C44  0EEF               	movlw	-17
 24764  014C46  80E3               	bsf	plusw1,0,c
 24765  014C48                     l8004:
 24766                           
 24767                           ;stkvar	_grs @ sp[(-13)+0]
 24768  014C48  90D8               	bcf	status,0,c
 24769  014C4A  0EF3               	movlw	-13
 24770  014C4C  36E3               	rlcf	plusw1,f,c
 24771  014C4E  0EF4               	movlw	-12
 24772  014C50  36E3               	rlcf	plusw1,f,c
 24773  014C52  0EF5               	movlw	-11
 24774  014C54  36E3               	rlcf	plusw1,f,c
 24775  014C56  0EF6               	movlw	-10
 24776  014C58  36E3               	rlcf	plusw1,f,c
 24777  014C5A                     l8006:
 24778                           
 24779                           ;stkvar	_a @ sp[(-13)+-8]
 24780                           ;stkvar	_rem @ sp[(-13)+4]
 24781  014C5A  50E1               	movf	fsr1l,w,c
 24782  014C5C  0FF7               	addlw	-9
 24783  014C5E  6ED9               	movwf	fsr2l,c
 24784  014C60  50E2               	movf	fsr1h,w,c
 24785  014C62  6EDA               	movwf	fsr2h,c
 24786  014C64  0EFF               	movlw	255
 24787  014C66  22DA               	addwfc	fsr2h,f,c
 24788  014C68  0EEB               	movlw	-21
 24789  014C6A  50E3               	movf	plusw1,w,c
 24790  014C6C  5CDE               	subwf	postinc2,w,c
 24791  014C6E  0EEC               	movlw	-20
 24792  014C70  50E3               	movf	plusw1,w,c
 24793  014C72  58DE               	subwfb	postinc2,w,c
 24794  014C74  0EED               	movlw	-19
 24795  014C76  50E3               	movf	plusw1,w,c
 24796  014C78  58DE               	subwfb	postinc2,w,c
 24797  014C7A  0EEE               	movlw	-18
 24798  014C7C  50E3               	movf	plusw1,w,c
 24799  014C7E  58DE               	subwfb	postinc2,w,c
 24800  014C80  A0D8               	btfss	status,0,c
 24801  014C82  D015               	goto	l8012
 24802                           
 24803                           ;stkvar	_grs @ sp[(-13)+0]
 24804  014C84  0EF6               	movlw	-10
 24805  014C86  8CE3               	bsf	plusw1,6,c
 24806                           
 24807                           ;stkvar	_a @ sp[(-13)+-8]
 24808                           ;stkvar	_rem @ sp[(-13)+4]
 24809  014C88  50E1               	movf	fsr1l,w,c
 24810  014C8A  0FF7               	addlw	-9
 24811  014C8C  6ED9               	movwf	fsr2l,c
 24812  014C8E  50E2               	movf	fsr1h,w,c
 24813  014C90  6EDA               	movwf	fsr2h,c
 24814  014C92  0EFF               	movlw	255
 24815  014C94  22DA               	addwfc	fsr2h,f,c
 24816  014C96  0EEB               	movlw	-21
 24817  014C98  50E3               	movf	plusw1,w,c
 24818  014C9A  5EDE               	subwf	postinc2,f,c
 24819  014C9C  0EEC               	movlw	-20
 24820  014C9E  50E3               	movf	plusw1,w,c
 24821  014CA0  5ADE               	subwfb	postinc2,f,c
 24822  014CA2  0EED               	movlw	-19
 24823  014CA4  50E3               	movf	plusw1,w,c
 24824  014CA6  5ADE               	subwfb	postinc2,f,c
 24825  014CA8  0EEE               	movlw	-18
 24826  014CAA  50E3               	movf	plusw1,w,c
 24827  014CAC  5ADE               	subwfb	postinc2,f,c
 24828  014CAE                     l8012:
 24829                           
 24830                           ;stkvar	_aexp @ sp[(-13)+10]
 24831  014CAE  0EFD               	movlw	-3
 24832  014CB0  2AE3               	incf	plusw1,f,c
 24833  014CB2                     l8014:
 24834                           
 24835                           ;stkvar	_aexp @ sp[(-13)+10]
 24836  014CB2  0EFD               	movlw	-3
 24837  014CB4  006F FF8C  F028    	movff	plusw1,btemp
 24838  014CBA  0E19               	movlw	25
 24839  014CBC  6428               	cpfsgt	btemp^0,c
 24840  014CBE  D7A9               	goto	l7996
 24841                           
 24842                           ;stkvar	_rem @ sp[(-13)+4]
 24843  014CC0  0EF7               	movlw	-9
 24844  014CC2  50E3               	movf	plusw1,w,c
 24845  014CC4  E10A               	bnz	u6380
 24846  014CC6  0EF8               	movlw	-8
 24847  014CC8  50E3               	movf	plusw1,w,c
 24848  014CCA  E107               	bnz	u6380
 24849  014CCC  0EF9               	movlw	-7
 24850  014CCE  50E3               	movf	plusw1,w,c
 24851  014CD0  E104               	bnz	u6380
 24852  014CD2  0EFA               	movlw	-6
 24853  014CD4  50E3               	movf	plusw1,w,c
 24854  014CD6  B4D8               	btfsc	status,2,c
 24855  014CD8  D024               	goto	l8030
 24856  014CDA                     u6380:
 24857                           
 24858                           ;stkvar	_grs @ sp[(-13)+0]
 24859  014CDA  0EF3               	movlw	-13
 24860  014CDC  80E3               	bsf	plusw1,0,c
 24861  014CDE  D021               	goto	l8030
 24862  014CE0                     l8020:
 24863                           
 24864                           ;stkvar	_b @ sp[(-13)+-4]
 24865  014CE0  90D8               	bcf	status,0,c
 24866  014CE2  0EEF               	movlw	-17
 24867  014CE4  36E3               	rlcf	plusw1,f,c
 24868  014CE6  0EF0               	movlw	-16
 24869  014CE8  36E3               	rlcf	plusw1,f,c
 24870  014CEA  0EF1               	movlw	-15
 24871  014CEC  36E3               	rlcf	plusw1,f,c
 24872  014CEE  0EF2               	movlw	-14
 24873  014CF0  36E3               	rlcf	plusw1,f,c
 24874                           
 24875                           ;stkvar	_grs @ sp[(-13)+0]
 24876  014CF2  0EF6               	movlw	-10
 24877  014CF4  AEE3               	btfss	plusw1,7,c
 24878  014CF6  D002               	goto	l8026
 24879                           
 24880                           ;stkvar	_b @ sp[(-13)+-4]
 24881  014CF8  0EEF               	movlw	-17
 24882  014CFA  80E3               	bsf	plusw1,0,c
 24883  014CFC                     l8026:
 24884                           
 24885                           ;stkvar	_grs @ sp[(-13)+0]
 24886  014CFC  90D8               	bcf	status,0,c
 24887  014CFE  0EF3               	movlw	-13
 24888  014D00  36E3               	rlcf	plusw1,f,c
 24889  014D02  0EF4               	movlw	-12
 24890  014D04  36E3               	rlcf	plusw1,f,c
 24891  014D06  0EF5               	movlw	-11
 24892  014D08  36E3               	rlcf	plusw1,f,c
 24893  014D0A  0EF6               	movlw	-10
 24894  014D0C  36E3               	rlcf	plusw1,f,c
 24895                           
 24896                           ;stkvar	_new_exp @ sp[(-13)+8]
 24897  014D0E  50E1               	movf	fsr1l,w,c
 24898  014D10  0FFB               	addlw	-5
 24899  014D12  6ED9               	movwf	fsr2l,c
 24900  014D14  50E2               	movf	fsr1h,w,c
 24901  014D16  6EDA               	movwf	fsr2h,c
 24902  014D18  0EFF               	movlw	255
 24903  014D1A  22DA               	addwfc	fsr2h,f,c
 24904  014D1C  06DE               	decf	postinc2,f,c
 24905  014D1E  0E00               	movlw	0
 24906  014D20  5ADD               	subwfb	postdec2,f,c
 24907  014D22                     l8030:
 24908                           
 24909                           ;stkvar	_b @ sp[(-13)+-4]
 24910  014D22  0EF1               	movlw	-15
 24911  014D24  AEE3               	btfss	plusw1,7,c
 24912  014D26  D7DC               	goto	l8020
 24913                           
 24914                           ;stkvar	_aexp @ sp[(-13)+10]
 24915  014D28  0EFD               	movlw	-3
 24916  014D2A  6AE3               	clrf	plusw1,c
 24917                           
 24918                           ;stkvar	_grs @ sp[(-13)+0]
 24919  014D2C  0EF6               	movlw	-10
 24920  014D2E  AEE3               	btfss	plusw1,7,c
 24921  014D30  D020               	goto	l8044
 24922                           
 24923                           ;stkvar	_grs @ sp[(-13)+0]
 24924  014D32  50E1               	movf	fsr1l,w,c
 24925  014D34  0FF3               	addlw	-13
 24926  014D36  6ED9               	movwf	fsr2l,c
 24927  014D38  50E2               	movf	fsr1h,w,c
 24928  014D3A  6EDA               	movwf	fsr2h,c
 24929  014D3C  0EFF               	movlw	255
 24930  014D3E  22DA               	addwfc	fsr2h,f,c
 24931  014D40  0EFF               	movlw	255
 24932  014D42  14DE               	andwf	postinc2,w,c
 24933  014D44  6E30               	movwf	(btemp+8)^0,c
 24934  014D46  0EFF               	movlw	255
 24935  014D48  14DE               	andwf	postinc2,w,c
 24936  014D4A  6E31               	movwf	(btemp+9)^0,c
 24937  014D4C  0EFF               	movlw	255
 24938  014D4E  14DE               	andwf	postinc2,w,c
 24939  014D50  6E32               	movwf	(btemp+10)^0,c
 24940  014D52  0E7F               	movlw	127
 24941  014D54  14DE               	andwf	postinc2,w,c
 24942  014D56  6E33               	movwf	(btemp+11)^0,c
 24943  014D58  5030               	movf	(btemp+8)^0,w,c
 24944  014D5A  1031               	iorwf	(btemp+9)^0,w,c
 24945  014D5C  1032               	iorwf	(btemp+10)^0,w,c
 24946  014D5E  1033               	iorwf	(btemp+11)^0,w,c
 24947  014D60  B4D8               	btfsc	status,2,c
 24948  014D62  D004               	goto	l8040
 24949  014D64                     u6420:
 24950                           
 24951                           ;stkvar	_aexp @ sp[(-13)+10]
 24952  014D64  0EFD               	movlw	-3
 24953  014D66  6AE3               	clrf	plusw1,c
 24954  014D68  2AE3               	incf	plusw1,f,c
 24955  014D6A  D003               	goto	l8044
 24956  014D6C                     l8040:
 24957                           
 24958                           ;stkvar	_b @ sp[(-13)+-4]
 24959  014D6C  0EEF               	movlw	-17
 24960  014D6E  B0E3               	btfsc	plusw1,0,c
 24961  014D70  D7F9               	goto	u6420
 24962  014D72                     l8044:
 24963                           
 24964                           ;stkvar	_aexp @ sp[(-13)+10]
 24965  014D72  0EFD               	movlw	-3
 24966  014D74  50E3               	movf	plusw1,w,c
 24967  014D76  B4D8               	btfsc	status,2,c
 24968  014D78  D036               	goto	l8054
 24969                           
 24970                           ;stkvar	_b @ sp[(-13)+-4]
 24971  014D7A  50E1               	movf	fsr1l,w,c
 24972  014D7C  0FEF               	addlw	-17
 24973  014D7E  6ED9               	movwf	fsr2l,c
 24974  014D80  50E2               	movf	fsr1h,w,c
 24975  014D82  6EDA               	movwf	fsr2h,c
 24976  014D84  0EFF               	movlw	255
 24977  014D86  22DA               	addwfc	fsr2h,f,c
 24978  014D88  2ADE               	incf	postinc2,f,c
 24979  014D8A  0E00               	movlw	0
 24980  014D8C  22DE               	addwfc	postinc2,f,c
 24981  014D8E  22DE               	addwfc	postinc2,f,c
 24982  014D90  22DE               	addwfc	postinc2,f,c
 24983                           
 24984                           ;stkvar	_b @ sp[(-13)+-4]
 24985  014D92  0EF2               	movlw	-14
 24986  014D94  A0E3               	btfss	plusw1,0,c
 24987  014D96  D027               	goto	l8054
 24988  014D98  0E01               	movlw	1
 24989  014D9A  6E33               	movwf	(btemp+11)^0,c
 24990                           
 24991                           ;stkvar	_b @ sp[(-13)+-4]
 24992  014D9C  50E1               	movf	fsr1l,w,c
 24993  014D9E  0FEF               	addlw	-17
 24994  014DA0  6ED9               	movwf	fsr2l,c
 24995  014DA2  50E2               	movf	fsr1h,w,c
 24996  014DA4  6EDA               	movwf	fsr2h,c
 24997  014DA6  0EFF               	movlw	255
 24998  014DA8  22DA               	addwfc	fsr2h,f,c
 24999  014DAA  2833               	incf	(btemp+11)^0,w,c
 25000  014DAC  52DE               	movf	postinc2,f,c
 25001  014DAE  D008               	goto	u6460
 25002  014DB0                     u6465:
 25003  014DB0  52DE               	movf	postinc2,f,c
 25004  014DB2  90D8               	bcf	status,0,c
 25005  014DB4  BEDC               	btfsc	preinc2,7,c
 25006  014DB6  80D8               	bsf	status,0,c
 25007  014DB8  32DD               	rrcf	postdec2,f,c
 25008  014DBA  32DD               	rrcf	postdec2,f,c
 25009  014DBC  32DD               	rrcf	postdec2,f,c
 25010  014DBE  32DE               	rrcf	postinc2,f,c
 25011  014DC0                     u6460:
 25012  014DC0  2EE8               	decfsz	wreg,f,c
 25013  014DC2  D7F6               	goto	u6465
 25014                           
 25015                           ;stkvar	_new_exp @ sp[(-13)+8]
 25016  014DC4  0EFB               	movlw	-5
 25017  014DC6  50E3               	movf	plusw1,w,c
 25018  014DC8  0F01               	addlw	1
 25019  014DCA  6E28               	movwf	btemp^0,c
 25020  014DCC  0EFB               	movlw	-5
 25021  014DCE  0060  F0A3  FFE3   	movff	btemp,plusw1
 25022  014DD4  6A28               	clrf	btemp^0,c
 25023  014DD6  0EFC               	movlw	-4
 25024  014DD8  50E3               	movf	plusw1,w,c
 25025  014DDA  2028               	addwfc	btemp^0,w,c
 25026  014DDC  6E28               	movwf	btemp^0,c
 25027  014DDE  0EFC               	movlw	-4
 25028  014DE0  0060  F0A3  FFE3   	movff	btemp,plusw1
 25029  014DE6                     l8054:
 25030                           
 25031                           ;stkvar	_new_exp @ sp[(-13)+8]
 25032  014DE6  0EFC               	movlw	-4
 25033  014DE8  BEE3               	btfsc	plusw1,7,c
 25034  014DEA  D01B               	goto	l8060
 25035  014DEC  0EFC               	movlw	-4
 25036  014DEE  50E3               	movf	plusw1,w,c
 25037  014DF0  E104               	bnz	u6470
 25038  014DF2  0EFB               	movlw	-5
 25039  014DF4  28E3               	incf	plusw1,w,c
 25040  014DF6  A0D8               	btfss	status,0,c
 25041  014DF8  D014               	goto	l8060
 25042  014DFA                     u6470:
 25043  014DFA  0EFF               	movlw	255
 25044  014DFC  6E32               	movwf	(btemp+10)^0,c
 25045  014DFE  0E00               	movlw	0
 25046  014E00  6E33               	movwf	(btemp+11)^0,c
 25047                           
 25048                           ;stkvar	_new_exp @ sp[(-13)+8]
 25049  014E02  0EFB               	movlw	-5
 25050  014E04  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 25051  014E0A  0EFC               	movlw	-4
 25052  014E0C  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 25053                           
 25054                           ;stkvar	_b @ sp[(-13)+-4]
 25055  014E12  0EEF               	movlw	-17
 25056  014E14  6AE3               	clrf	plusw1,c
 25057  014E16  0EF0               	movlw	-16
 25058  014E18  6AE3               	clrf	plusw1,c
 25059  014E1A  0EF1               	movlw	-15
 25060  014E1C  6AE3               	clrf	plusw1,c
 25061  014E1E  0EF2               	movlw	-14
 25062  014E20  6AE3               	clrf	plusw1,c
 25063  014E22                     l8060:
 25064                           
 25065                           ;stkvar	_new_exp @ sp[(-13)+8]
 25066  014E22  0EFC               	movlw	-4
 25067  014E24  BEE3               	btfsc	plusw1,7,c
 25068  014E26  D007               	goto	u6480
 25069  014E28  0EFC               	movlw	-4
 25070  014E2A  50E3               	movf	plusw1,w,c
 25071  014E2C  E112               	bnz	l8066
 25072  014E2E  0EFB               	movlw	-5
 25073  014E30  04E3               	decf	plusw1,w,c
 25074  014E32  B0D8               	btfsc	status,0,c
 25075  014E34  D00E               	goto	l8066
 25076  014E36                     u6480:
 25077                           
 25078                           ;stkvar	_new_exp @ sp[(-13)+8]
 25079  014E36  0EFB               	movlw	-5
 25080  014E38  6AE3               	clrf	plusw1,c
 25081  014E3A  0EFC               	movlw	-4
 25082  014E3C  6AE3               	clrf	plusw1,c
 25083                           
 25084                           ;stkvar	_b @ sp[(-13)+-4]
 25085  014E3E  0EEF               	movlw	-17
 25086  014E40  6AE3               	clrf	plusw1,c
 25087  014E42  0EF0               	movlw	-16
 25088  014E44  6AE3               	clrf	plusw1,c
 25089  014E46  0EF1               	movlw	-15
 25090  014E48  6AE3               	clrf	plusw1,c
 25091  014E4A  0EF2               	movlw	-14
 25092  014E4C  6AE3               	clrf	plusw1,c
 25093                           
 25094                           ;stkvar	_sign @ sp[(-13)+12]
 25095  014E4E  0EFF               	movlw	-1
 25096  014E50  6AE3               	clrf	plusw1,c
 25097  014E52                     l8066:
 25098                           
 25099                           ;stkvar	_new_exp @ sp[(-13)+8]
 25100                           ;stkvar	_bexp @ sp[(-13)+11]
 25101  014E52  0EFB               	movlw	-5
 25102  014E54  006F FF8C  F028    	movff	plusw1,btemp
 25103  014E5A  0EFE               	movlw	-2
 25104  014E5C  0060  F0A3  FFE3   	movff	btemp,plusw1
 25105                           
 25106                           ;stkvar	_bexp @ sp[(-13)+11]
 25107  014E62  0EFE               	movlw	-2
 25108  014E64  A0E3               	btfss	plusw1,0,c
 25109  014E66  D009               	goto	l8072
 25110                           
 25111                           ;stkvar	_b @ sp[(-13)+-4]
 25112  014E68  0EF1               	movlw	241
 25113  014E6A  24E1               	addwf	fsr1l,w,c
 25114  014E6C  6ED9               	movwf	fsr2l,c
 25115  014E6E  0EFF               	movlw	255
 25116  014E70  20E2               	addwfc	fsr1h,w,c
 25117  014E72  6EDA               	movwf	fsr2h,c
 25118  014E74  0E00               	movlw	0
 25119  014E76  8EDB               	bsf	plusw2,7,c
 25120  014E78  D008               	goto	l8074
 25121  014E7A                     l8072:
 25122                           
 25123                           ;stkvar	_b @ sp[(-13)+-4]
 25124  014E7A  0EF1               	movlw	241
 25125  014E7C  24E1               	addwf	fsr1l,w,c
 25126  014E7E  6ED9               	movwf	fsr2l,c
 25127  014E80  0EFF               	movlw	255
 25128  014E82  20E2               	addwfc	fsr1h,w,c
 25129  014E84  6EDA               	movwf	fsr2h,c
 25130  014E86  0E7F               	movlw	127
 25131  014E88  16DF               	andwf	indf2,f,c
 25132  014E8A                     l8074:
 25133                           
 25134                           ;stkvar	_b @ sp[(-13)+-4]
 25135  014E8A  0EF2               	movlw	242
 25136  014E8C  24E1               	addwf	fsr1l,w,c
 25137  014E8E  6ED9               	movwf	fsr2l,c
 25138  014E90  0EFF               	movlw	255
 25139  014E92  20E2               	addwfc	fsr1h,w,c
 25140  014E94  6EDA               	movwf	fsr2h,c
 25141                           
 25142                           ;stkvar	_bexp @ sp[(-13)+11]
 25143  014E96  0EFE               	movlw	-2
 25144  014E98  006F FF8C  F033    	movff	plusw1,btemp+11
 25145  014E9E  90D8               	bcf	status,0,c
 25146  014EA0  3033               	rrcf	(btemp+11)^0,w,c
 25147  014EA2  6EDF               	movwf	indf2,c
 25148  014EA4  D644               	goto	l7972
 25149  014EA6                     l2945:
 25150                           
 25151                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 25152  014EA6  0EEB               	movlw	235
 25153  014EA8  26E1               	addwf	fsr1l,f,c
 25154  014EAA  0EFF               	movlw	255
 25155  014EAC  22E2               	addwfc	fsr1h,f,c
 25156  014EAE  0012               	return		;funcret
 25157  014EB0                     __end_of___fldiv:
 25158                           	opt callstack 0
 25159                           
 25160 ;; *************** function ___flge *****************
 25161 ;; Defined at:
 25162 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 25163 ;; Parameters:    Size  Location     Type
 25164 ;;  ff1             4  [STACK] unsigned char 
 25165 ;;  ff2             4  [STACK] unsigned char 
 25166 ;; Auto vars:     Size  Location     Type
 25167 ;;		None
 25168 ;; Return value:  Size  Location     Type
 25169 ;;		None               void
 25170 ;; Registers used:
 25171 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 25172 ;; Tracked objects:
 25173 ;;		On entry : 0/0
 25174 ;;		On exit  : 0/0
 25175 ;;		Unchanged: 0/0
 25176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25181 ;;Total ram usage:        0 bytes
 25182 ;; Hardware stack levels used:    1
 25183 ;; Hardware stack levels required when called:   15
 25184 ;; This function calls:
 25185 ;;		Nothing
 25186 ;; This function is called by:
 25187 ;;		_main
 25188 ;;		_calc_ror_data
 25189 ;;		_calc_bsoc
 25190 ;;		_efgtoa
 25191 ;; This function uses a reentrant model
 25192 ;;
 25193                           
 25194                           	psect	text99
 25195  0186E0                     __ptext99:
 25196                           	opt callstack 0
 25197  0186E0                     ___flge:
 25198                           	opt callstack 0
 25199                           
 25200                           ;stkvar	_ff1 @ sp[(0)+-4]
 25201                           
 25202                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25203                           ;incstack = 0
 25204 ;; hardware stack exceeded
 25205  0186E0  50E1               	movf	fsr1l,w,c
 25206  0186E2  0FFC               	addlw	-4
 25207  0186E4  6ED9               	movwf	fsr2l,c
 25208  0186E6  50E2               	movf	fsr1h,w,c
 25209  0186E8  6EDA               	movwf	fsr2h,c
 25210  0186EA  0EFF               	movlw	255
 25211  0186EC  22DA               	addwfc	fsr2h,f,c
 25212  0186EE  0E00               	movlw	0
 25213  0186F0  14DE               	andwf	postinc2,w,c
 25214  0186F2  6E30               	movwf	(btemp+8)^0,c
 25215  0186F4  0E00               	movlw	0
 25216  0186F6  14DE               	andwf	postinc2,w,c
 25217  0186F8  6E31               	movwf	(btemp+9)^0,c
 25218  0186FA  0E80               	movlw	128
 25219  0186FC  14DE               	andwf	postinc2,w,c
 25220  0186FE  6E32               	movwf	(btemp+10)^0,c
 25221  018700  0E7F               	movlw	127
 25222  018702  14DE               	andwf	postinc2,w,c
 25223  018704  6E33               	movwf	(btemp+11)^0,c
 25224  018706  5030               	movf	(btemp+8)^0,w,c
 25225  018708  1031               	iorwf	(btemp+9)^0,w,c
 25226  01870A  1032               	iorwf	(btemp+10)^0,w,c
 25227  01870C  1033               	iorwf	(btemp+11)^0,w,c
 25228  01870E  A4D8               	btfss	status,2,c
 25229  018710  D008               	goto	l8348
 25230                           
 25231                           ;stkvar	_ff1 @ sp[(0)+-4]
 25232  018712  0EFC               	movlw	-4
 25233  018714  6AE3               	clrf	plusw1,c
 25234  018716  0EFD               	movlw	-3
 25235  018718  6AE3               	clrf	plusw1,c
 25236  01871A  0EFE               	movlw	-2
 25237  01871C  6AE3               	clrf	plusw1,c
 25238  01871E  0EFF               	movlw	-1
 25239  018720  6AE3               	clrf	plusw1,c
 25240  018722                     l8348:
 25241                           
 25242                           ;stkvar	_ff2 @ sp[(0)+-8]
 25243  018722  50E1               	movf	fsr1l,w,c
 25244  018724  0FF8               	addlw	-8
 25245  018726  6ED9               	movwf	fsr2l,c
 25246  018728  50E2               	movf	fsr1h,w,c
 25247  01872A  6EDA               	movwf	fsr2h,c
 25248  01872C  0EFF               	movlw	255
 25249  01872E  22DA               	addwfc	fsr2h,f,c
 25250  018730  0E00               	movlw	0
 25251  018732  14DE               	andwf	postinc2,w,c
 25252  018734  6E30               	movwf	(btemp+8)^0,c
 25253  018736  0E00               	movlw	0
 25254  018738  14DE               	andwf	postinc2,w,c
 25255  01873A  6E31               	movwf	(btemp+9)^0,c
 25256  01873C  0E80               	movlw	128
 25257  01873E  14DE               	andwf	postinc2,w,c
 25258  018740  6E32               	movwf	(btemp+10)^0,c
 25259  018742  0E7F               	movlw	127
 25260  018744  14DE               	andwf	postinc2,w,c
 25261  018746  6E33               	movwf	(btemp+11)^0,c
 25262  018748  5030               	movf	(btemp+8)^0,w,c
 25263  01874A  1031               	iorwf	(btemp+9)^0,w,c
 25264  01874C  1032               	iorwf	(btemp+10)^0,w,c
 25265  01874E  1033               	iorwf	(btemp+11)^0,w,c
 25266  018750  A4D8               	btfss	status,2,c
 25267  018752  D008               	goto	l2626
 25268                           
 25269                           ;stkvar	_ff2 @ sp[(0)+-8]
 25270  018754  0EF8               	movlw	-8
 25271  018756  6AE3               	clrf	plusw1,c
 25272  018758  0EF9               	movlw	-7
 25273  01875A  6AE3               	clrf	plusw1,c
 25274  01875C  0EFA               	movlw	-6
 25275  01875E  6AE3               	clrf	plusw1,c
 25276  018760  0EFB               	movlw	-5
 25277  018762  6AE3               	clrf	plusw1,c
 25278  018764                     l2626:
 25279                           
 25280                           ;stkvar	_ff1 @ sp[(0)+-4]
 25281  018764  0EFF               	movlw	-1
 25282  018766  AEE3               	btfss	plusw1,7,c
 25283  018768  D024               	goto	l8354
 25284                           
 25285                           ;stkvar	_ff1 @ sp[(0)+-4]
 25286  01876A  0E00               	movlw	0
 25287  01876C  6E30               	movwf	(btemp+8)^0,c
 25288  01876E  0E00               	movlw	0
 25289  018770  6E31               	movwf	(btemp+9)^0,c
 25290  018772  0E00               	movlw	0
 25291  018774  6E32               	movwf	(btemp+10)^0,c
 25292  018776  0E80               	movlw	128
 25293  018778  6E33               	movwf	(btemp+11)^0,c
 25294  01877A  0EFC               	movlw	-4
 25295  01877C  50E3               	movf	plusw1,w,c
 25296  01877E  5E30               	subwf	(btemp+8)^0,f,c
 25297  018780  0EFD               	movlw	-3
 25298  018782  50E3               	movf	plusw1,w,c
 25299  018784  5A31               	subwfb	(btemp+9)^0,f,c
 25300  018786  0EFE               	movlw	-2
 25301  018788  50E3               	movf	plusw1,w,c
 25302  01878A  5A32               	subwfb	(btemp+10)^0,f,c
 25303  01878C  0EFF               	movlw	-1
 25304  01878E  50E3               	movf	plusw1,w,c
 25305  018790  5A33               	subwfb	(btemp+11)^0,f,c
 25306                           
 25307                           ;stkvar	_ff1 @ sp[(0)+-4]
 25308  018792  0EFC               	movlw	-4
 25309  018794  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 25310  01879A  0EFD               	movlw	-3
 25311  01879C  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 25312  0187A2  0EFE               	movlw	-2
 25313  0187A4  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 25314  0187AA  0EFF               	movlw	-1
 25315  0187AC  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 25316  0187B2                     l8354:
 25317                           
 25318                           ;stkvar	_ff2 @ sp[(0)+-8]
 25319  0187B2  0EFB               	movlw	-5
 25320  0187B4  AEE3               	btfss	plusw1,7,c
 25321  0187B6  D024               	goto	l8358
 25322                           
 25323                           ;stkvar	_ff2 @ sp[(0)+-8]
 25324  0187B8  0E00               	movlw	0
 25325  0187BA  6E30               	movwf	(btemp+8)^0,c
 25326  0187BC  0E00               	movlw	0
 25327  0187BE  6E31               	movwf	(btemp+9)^0,c
 25328  0187C0  0E00               	movlw	0
 25329  0187C2  6E32               	movwf	(btemp+10)^0,c
 25330  0187C4  0E80               	movlw	128
 25331  0187C6  6E33               	movwf	(btemp+11)^0,c
 25332  0187C8  0EF8               	movlw	-8
 25333  0187CA  50E3               	movf	plusw1,w,c
 25334  0187CC  5E30               	subwf	(btemp+8)^0,f,c
 25335  0187CE  0EF9               	movlw	-7
 25336  0187D0  50E3               	movf	plusw1,w,c
 25337  0187D2  5A31               	subwfb	(btemp+9)^0,f,c
 25338  0187D4  0EFA               	movlw	-6
 25339  0187D6  50E3               	movf	plusw1,w,c
 25340  0187D8  5A32               	subwfb	(btemp+10)^0,f,c
 25341  0187DA  0EFB               	movlw	-5
 25342  0187DC  50E3               	movf	plusw1,w,c
 25343  0187DE  5A33               	subwfb	(btemp+11)^0,f,c
 25344                           
 25345                           ;stkvar	_ff2 @ sp[(0)+-8]
 25346  0187E0  0EF8               	movlw	-8
 25347  0187E2  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 25348  0187E8  0EF9               	movlw	-7
 25349  0187EA  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 25350  0187F0  0EFA               	movlw	-6
 25351  0187F2  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 25352  0187F8  0EFB               	movlw	-5
 25353  0187FA  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 25354  018800                     l8358:
 25355                           
 25356                           ;stkvar	_ff1 @ sp[(0)+-4]
 25357  018800  0EFF               	movlw	-1
 25358  018802  7EE3               	btg	plusw1,7,c
 25359                           
 25360                           ;stkvar	_ff2 @ sp[(0)+-8]
 25361  018804  0EFB               	movlw	-5
 25362  018806  7EE3               	btg	plusw1,7,c
 25363                           
 25364                           ;stkvar	_ff2 @ sp[(0)+-8]
 25365                           ;stkvar	_ff1 @ sp[(0)+-4]
 25366  018808  50E1               	movf	fsr1l,w,c
 25367  01880A  0FFC               	addlw	-4
 25368  01880C  6ED9               	movwf	fsr2l,c
 25369  01880E  50E2               	movf	fsr1h,w,c
 25370  018810  6EDA               	movwf	fsr2h,c
 25371  018812  0EFF               	movlw	255
 25372  018814  22DA               	addwfc	fsr2h,f,c
 25373  018816  0EF8               	movlw	-8
 25374  018818  50E3               	movf	plusw1,w,c
 25375  01881A  5CDE               	subwf	postinc2,w,c
 25376  01881C  0EF9               	movlw	-7
 25377  01881E  50E3               	movf	plusw1,w,c
 25378  018820  58DE               	subwfb	postinc2,w,c
 25379  018822  0EFA               	movlw	-6
 25380  018824  50E3               	movf	plusw1,w,c
 25381  018826  58DE               	subwfb	postinc2,w,c
 25382  018828  0EFB               	movlw	-5
 25383  01882A  50E3               	movf	plusw1,w,c
 25384  01882C  58DE               	subwfb	postinc2,w,c
 25385  01882E  B0D8               	btfsc	status,0,c
 25386  018830  D002               	goto	l8366
 25387  018832  9028               	bcf	btemp& (0+255),0,c
 25388  018834  D001               	goto	l2633
 25389  018836                     l8366:
 25390  018836  8028               	bsf	btemp& (0+255),0,c
 25391  018838                     l2633:
 25392                           
 25393                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 25394  018838  0EF8               	movlw	248
 25395  01883A  26E1               	addwf	fsr1l,f,c
 25396  01883C  0EFF               	movlw	255
 25397  01883E  22E2               	addwfc	fsr1h,f,c
 25398  018840  0012               	return		;funcret
 25399  018842                     __end_of___flge:
 25400                           	opt callstack 0
 25401                           
 25402 ;; *************** function _calc_model_data *****************
 25403 ;; Defined at:
 25404 ;;		line 67 in file "mbmc.c"
 25405 ;; Parameters:    Size  Location     Type
 25406 ;;		None
 25407 ;; Auto vars:     Size  Location     Type
 25408 ;;		None
 25409 ;; Return value:  Size  Location     Type
 25410 ;;                  1  [STACK] void 
 25411 ;; Registers used:
 25412 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 25413 ;; Tracked objects:
 25414 ;;		On entry : 0/0
 25415 ;;		On exit  : 3F/1
 25416 ;;		Unchanged: 0/0
 25417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25422 ;;Total ram usage:        0 bytes
 25423 ;; Hardware stack levels used:    1
 25424 ;; Hardware stack levels required when called:   18
 25425 ;; This function calls:
 25426 ;;		___fladd
 25427 ;;		___flmul
 25428 ;;		___flsub
 25429 ;;		_lp_filter
 25430 ;;		_start_bsoc
 25431 ;;		_stop_bsoc
 25432 ;; This function is called by:
 25433 ;;		_main
 25434 ;; This function uses a reentrant model
 25435 ;;
 25436                           
 25437                           	psect	text100
 25438  015B96                     __ptext100:
 25439                           	opt callstack 0
 25440  015B96                     _calc_model_data:
 25441                           	opt callstack 12
 25442                           
 25443                           ;mbmc.c: 69:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 70:  stop_bsoc();
 25444                           
 25445                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25446                           ;incstack = 0
 25447  015B96  EC86  F0DB         	call	_stop_bsoc	;wreg free
 25448                           
 25449                           ; BSR set to: 57
 25450                           ;mbmc.c: 72:  if (!V.calib) {
 25451  015B9A  0102               	movlb	2	; () banked
 25452  015B9C  51AC               	movf	(_V+172)& (0+255),w,b	;volatile
 25453  015B9E  A4D8               	btfss	status,2,c
 25454  015BA0  D1C5               	goto	l10708
 25455                           
 25456                           ; BSR set to: 2
 25457                           ;mbmc.c: 73:   C.c_bat = C.calc[C_BATT];
 25458  015BA2  C100  F144         	movff	_C,_C+68	;volatile
 25459  015BA6  C101  F145         	movff	_C+1,_C+69	;volatile
 25460  015BAA  C102  F146         	movff	_C+2,_C+70	;volatile
 25461  015BAE  C103  F147         	movff	_C+3,_C+71	;volatile
 25462                           
 25463                           ; BSR set to: 2
 25464                           ;mbmc.c: 74:   C.bc_ror = C.c_bat - bcror;
 25465  015BB2  0060  F23B  FFE6   	movff	calc_model_data@bcror,postinc1
 25466  015BB8  0060  F23F  FFE6   	movff	calc_model_data@bcror+1,postinc1
 25467  015BBE  0060  F243  FFE6   	movff	calc_model_data@bcror+2,postinc1
 25468  015BC4  0060  F247  FFE6   	movff	calc_model_data@bcror+3,postinc1
 25469  015BCA  0060  F513  FFE6   	movff	_C+68,postinc1
 25470  015BD0  0060  F517  FFE6   	movff	_C+69,postinc1
 25471  015BD6  0060  F51B  FFE6   	movff	_C+70,postinc1
 25472  015BDC  0060  F51F  FFE6   	movff	_C+71,postinc1
 25473  015BE2  EC41  F0D5         	call	___flsub	;wreg free
 25474  015BE6  0060  F0A0  F16C   	movff	btemp,_C+108	;volatile
 25475  015BEC  0060  F0A4  F16D   	movff	btemp+1,_C+109	;volatile
 25476  015BF2  0060  F0A8  F16E   	movff	btemp+2,_C+110	;volatile
 25477  015BF8  0060  F0AC  F16F   	movff	btemp+3,_C+111	;volatile
 25478                           
 25479                           ;mbmc.c: 75:   bcror = C.c_bat;
 25480  015BFE  C144  F08E         	movff	_C+68,calc_model_data@bcror	;volatile
 25481  015C02  C145  F08F         	movff	_C+69,calc_model_data@bcror+1	;volatile
 25482  015C06  C146  F090         	movff	_C+70,calc_model_data@bcror+2	;volatile
 25483  015C0A  C147  F091         	movff	_C+71,calc_model_data@bcror+3	;volatile
 25484                           
 25485                           ;mbmc.c: 76:   C.c_pv = C.calc[C_PV];
 25486  015C0E  C104  F148         	movff	_C+4,_C+72	;volatile
 25487  015C12  C105  F149         	movff	_C+5,_C+73	;volatile
 25488  015C16  C106  F14A         	movff	_C+6,_C+74	;volatile
 25489  015C1A  C107  F14B         	movff	_C+7,_C+75	;volatile
 25490                           
 25491                           ;mbmc.c: 77:   C.v_bat = C.calc[V_BAT];
 25492  015C1E  C110  F154         	movff	_C+16,_C+84	;volatile
 25493  015C22  C111  F155         	movff	_C+17,_C+85	;volatile
 25494  015C26  C112  F156         	movff	_C+18,_C+86	;volatile
 25495  015C2A  C113  F157         	movff	_C+19,_C+87	;volatile
 25496                           
 25497                           ;mbmc.c: 78:   C.bv_ror = C.v_bat - bvror;
 25498  015C2E  0060  F24B  FFE6   	movff	calc_model_data@bvror,postinc1
 25499  015C34  0060  F24F  FFE6   	movff	calc_model_data@bvror+1,postinc1
 25500  015C3A  0060  F253  FFE6   	movff	calc_model_data@bvror+2,postinc1
 25501  015C40  0060  F257  FFE6   	movff	calc_model_data@bvror+3,postinc1
 25502  015C46  0060  F553  FFE6   	movff	_C+84,postinc1
 25503  015C4C  0060  F557  FFE6   	movff	_C+85,postinc1
 25504  015C52  0060  F55B  FFE6   	movff	_C+86,postinc1
 25505  015C58  0060  F55F  FFE6   	movff	_C+87,postinc1
 25506  015C5E  EC41  F0D5         	call	___flsub	;wreg free
 25507  015C62  0060  F0A0  F168   	movff	btemp,_C+104	;volatile
 25508  015C68  0060  F0A4  F169   	movff	btemp+1,_C+105	;volatile
 25509  015C6E  0060  F0A8  F16A   	movff	btemp+2,_C+106	;volatile
 25510  015C74  0060  F0AC  F16B   	movff	btemp+3,_C+107	;volatile
 25511                           
 25512                           ;mbmc.c: 79:   bvror = C.v_bat;
 25513  015C7A  C154  F092         	movff	_C+84,calc_model_data@bvror	;volatile
 25514  015C7E  C155  F093         	movff	_C+85,calc_model_data@bvror+1	;volatile
 25515  015C82  C156  F094         	movff	_C+86,calc_model_data@bvror+2	;volatile
 25516  015C86  C157  F095         	movff	_C+87,calc_model_data@bvror+3	;volatile
 25517                           
 25518                           ;mbmc.c: 80:   C.v_pv = C.calc[V_PV];
 25519  015C8A  C114  F150         	movff	_C+20,_C+80	;volatile
 25520  015C8E  C115  F151         	movff	_C+21,_C+81	;volatile
 25521  015C92  C116  F152         	movff	_C+22,_C+82	;volatile
 25522  015C96  C117  F153         	movff	_C+23,_C+83	;volatile
 25523                           
 25524                           ;mbmc.c: 81:   C.v_cc = C.calc[V_CC];
 25525  015C9A  C108  F14C         	movff	_C+8,_C+76	;volatile
 25526  015C9E  C109  F14D         	movff	_C+9,_C+77	;volatile
 25527  015CA2  C10A  F14E         	movff	_C+10,_C+78	;volatile
 25528  015CA6  C10B  F14F         	movff	_C+11,_C+79	;volatile
 25529                           
 25530                           ;mbmc.c: 82:   C.v_inverter = C.calc[V_INVERTER];
 25531  015CAA  C130  F164         	movff	_C+48,_C+100	;volatile
 25532  015CAE  C131  F165         	movff	_C+49,_C+101	;volatile
 25533  015CB2  C132  F166         	movff	_C+50,_C+102	;volatile
 25534  015CB6  C133  F167         	movff	_C+51,_C+103	;volatile
 25535                           
 25536                           ;mbmc.c: 83:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 25537  015CBA  0E01               	movlw	1
 25538  015CBC  6EE6               	movwf	postinc1,c
 25539  015CBE  0E10               	movlw	16
 25540  015CC0  6EE6               	movwf	postinc1,c
 25541  015CC2  0060  F403  FFE6   	movff	_C,postinc1
 25542  015CC8  0060  F407  FFE6   	movff	_C+1,postinc1
 25543  015CCE  0060  F40B  FFE6   	movff	_C+2,postinc1
 25544  015CD4  0060  F40F  FFE6   	movff	_C+3,postinc1
 25545  015CDA  0060  F413  FFE6   	movff	_C+4,postinc1
 25546  015CE0  0060  F417  FFE6   	movff	_C+5,postinc1
 25547  015CE6  0060  F41B  FFE6   	movff	_C+6,postinc1
 25548  015CEC  0060  F41F  FFE6   	movff	_C+7,postinc1
 25549  015CF2  EC41  F0D5         	call	___flsub	;wreg free
 25550  015CF6  0060  F0A3  FFE6   	movff	btemp,postinc1
 25551  015CFC  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 25552  015D02  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 25553  015D08  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 25554  015D0E  ECDC  F0BE         	call	_lp_filter	;wreg free
 25555  015D12  0060  F0A0  F140   	movff	btemp,_C+64	;volatile
 25556  015D18  0060  F0A4  F141   	movff	btemp+1,_C+65	;volatile
 25557  015D1E  0060  F0A8  F142   	movff	btemp+2,_C+66	;volatile
 25558  015D24  0060  F0AC  F143   	movff	btemp+3,_C+67	;volatile
 25559                           
 25560                           ;mbmc.c: 84:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 25561  015D2A  0E01               	movlw	1
 25562  015D2C  6EE6               	movwf	postinc1,c
 25563  015D2E  0E11               	movlw	17
 25564  015D30  6EE6               	movwf	postinc1,c
 25565  015D32  0060  F553  FFE6   	movff	_C+84,postinc1
 25566  015D38  0060  F557  FFE6   	movff	_C+85,postinc1
 25567  015D3E  0060  F55B  FFE6   	movff	_C+86,postinc1
 25568  015D44  0060  F55F  FFE6   	movff	_C+87,postinc1
 25569  015D4A  0060  F503  FFE6   	movff	_C+64,postinc1
 25570  015D50  0060  F507  FFE6   	movff	_C+65,postinc1
 25571  015D56  0060  F50B  FFE6   	movff	_C+66,postinc1
 25572  015D5C  0060  F50F  FFE6   	movff	_C+67,postinc1
 25573  015D62  EC0F  F099         	call	___flmul	;wreg free
 25574  015D66  0060  F0A3  FFE6   	movff	btemp,postinc1
 25575  015D6C  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 25576  015D72  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 25577  015D78  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 25578  015D7E  ECDC  F0BE         	call	_lp_filter	;wreg free
 25579  015D82  0060  F0A0  F170   	movff	btemp,_C+112	;volatile
 25580  015D88  0060  F0A4  F171   	movff	btemp+1,_C+113	;volatile
 25581  015D8E  0060  F0A8  F172   	movff	btemp+2,_C+114	;volatile
 25582  015D94  0060  F0AC  F173   	movff	btemp+3,_C+115	;volatile
 25583                           
 25584                           ;mbmc.c: 85:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 25585  015D9A  0E01               	movlw	1
 25586  015D9C  6EE6               	movwf	postinc1,c
 25587  015D9E  0E12               	movlw	18
 25588  015DA0  6EE6               	movwf	postinc1,c
 25589  015DA2  0060  F543  FFE6   	movff	_C+80,postinc1
 25590  015DA8  0060  F547  FFE6   	movff	_C+81,postinc1
 25591  015DAE  0060  F54B  FFE6   	movff	_C+82,postinc1
 25592  015DB4  0060  F54F  FFE6   	movff	_C+83,postinc1
 25593  015DBA  0060  F523  FFE6   	movff	_C+72,postinc1
 25594  015DC0  0060  F527  FFE6   	movff	_C+73,postinc1
 25595  015DC6  0060  F52B  FFE6   	movff	_C+74,postinc1
 25596  015DCC  0060  F52F  FFE6   	movff	_C+75,postinc1
 25597  015DD2  EC0F  F099         	call	___flmul	;wreg free
 25598  015DD6  0060  F0A3  FFE6   	movff	btemp,postinc1
 25599  015DDC  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 25600  015DE2  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 25601  015DE8  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 25602  015DEE  ECDC  F0BE         	call	_lp_filter	;wreg free
 25603  015DF2  0060  F0A0  F178   	movff	btemp,_C+120	;volatile
 25604  015DF8  0060  F0A4  F179   	movff	btemp+1,_C+121	;volatile
 25605  015DFE  0060  F0A8  F17A   	movff	btemp+2,_C+122	;volatile
 25606  015E04  0060  F0AC  F17B   	movff	btemp+3,_C+123	;volatile
 25607                           
 25608                           ;mbmc.c: 86:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 25609  015E0A  0E01               	movlw	1
 25610  015E0C  6EE6               	movwf	postinc1,c
 25611  015E0E  0E13               	movlw	19
 25612  015E10  6EE6               	movwf	postinc1,c
 25613  015E12  0E00               	movlw	0
 25614  015E14  6EE6               	movwf	postinc1,c
 25615  015E16  0E00               	movlw	0
 25616  015E18  6EE6               	movwf	postinc1,c
 25617  015E1A  0E60               	movlw	96
 25618  015E1C  6EE6               	movwf	postinc1,c
 25619  015E1E  0EC1               	movlw	193
 25620  015E20  6EE6               	movwf	postinc1,c
 25621  015E22  0060  F593  FFE6   	movff	_C+100,postinc1
 25622  015E28  0060  F597  FFE6   	movff	_C+101,postinc1
 25623  015E2E  0060  F59B  FFE6   	movff	_C+102,postinc1
 25624  015E34  0060  F59F  FFE6   	movff	_C+103,postinc1
 25625  015E3A  0060  F503  FFE6   	movff	_C+64,postinc1
 25626  015E40  0060  F507  FFE6   	movff	_C+65,postinc1
 25627  015E46  0060  F50B  FFE6   	movff	_C+66,postinc1
 25628  015E4C  0060  F50F  FFE6   	movff	_C+67,postinc1
 25629  015E52  EC0F  F099         	call	___flmul	;wreg free
 25630  015E56  0060  F0A3  FFE6   	movff	btemp,postinc1
 25631  015E5C  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 25632  015E62  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 25633  015E68  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 25634  015E6E  EC24  F09D         	call	___fladd	;wreg free
 25635  015E72  0060  F0A3  FFE6   	movff	btemp,postinc1
 25636  015E78  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 25637  015E7E  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 25638  015E84  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 25639  015E8A  ECDC  F0BE         	call	_lp_filter	;wreg free
 25640  015E8E  0060  F0A0  F174   	movff	btemp,_C+116	;volatile
 25641  015E94  0060  F0A4  F175   	movff	btemp+1,_C+117	;volatile
 25642  015E9A  0060  F0A8  F176   	movff	btemp+2,_C+118	;volatile
 25643  015EA0  0060  F0AC  F177   	movff	btemp+3,_C+119	;volatile
 25644                           
 25645                           ;mbmc.c: 87:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 25646  015EA6  0E01               	movlw	1
 25647  015EA8  6EE6               	movwf	postinc1,c
 25648  015EAA  0E14               	movlw	20
 25649  015EAC  6EE6               	movwf	postinc1,c
 25650  015EAE  0060  F553  FFE6   	movff	_C+84,postinc1
 25651  015EB4  0060  F557  FFE6   	movff	_C+85,postinc1
 25652  015EBA  0060  F55B  FFE6   	movff	_C+86,postinc1
 25653  015EC0  0060  F55F  FFE6   	movff	_C+87,postinc1
 25654  015EC6  0060  F513  FFE6   	movff	_C+68,postinc1
 25655  015ECC  0060  F517  FFE6   	movff	_C+69,postinc1
 25656  015ED2  0060  F51B  FFE6   	movff	_C+70,postinc1
 25657  015ED8  0060  F51F  FFE6   	movff	_C+71,postinc1
 25658  015EDE  EC0F  F099         	call	___flmul	;wreg free
 25659  015EE2  0060  F0A3  FFE6   	movff	btemp,postinc1
 25660  015EE8  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 25661  015EEE  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 25662  015EF4  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 25663  015EFA  ECDC  F0BE         	call	_lp_filter	;wreg free
 25664  015EFE  0060  F0A0  F17C   	movff	btemp,_C+124	;volatile
 25665  015F04  0060  F0A4  F17D   	movff	btemp+1,_C+125	;volatile
 25666  015F0A  0060  F0A8  F17E   	movff	btemp+2,_C+126	;volatile
 25667  015F10  0060  F0AC  F17F   	movff	btemp+3,_C+127	;volatile
 25668                           
 25669                           ;mbmc.c: 91:   if (C.p_inverter < 0.0)
 25670  015F16  0101               	movlb	1	; () banked
 25671  015F18  AF77               	btfss	(_C+119)& (0+255),7,b	;volatile
 25672  015F1A  D008               	goto	l10708
 25673                           
 25674                           ; BSR set to: 1
 25675                           ;mbmc.c: 92:    C.p_inverter = 0.0001;
 25676  015F1C  0E17               	movlw	23
 25677  015F1E  6F74               	movwf	(_C+116)& (0+255),b	;volatile
 25678  015F20  0EB7               	movlw	183
 25679  015F22  6F75               	movwf	(_C+117)& (0+255),b	;volatile
 25680  015F24  0ED1               	movlw	209
 25681  015F26  6F76               	movwf	(_C+118)& (0+255),b	;volatile
 25682  015F28  0E38               	movlw	56
 25683  015F2A  6F77               	movwf	(_C+119)& (0+255),b	;volatile
 25684  015F2C                     l10708:
 25685                           
 25686                           ;mbmc.c: 94:  start_bsoc();
 25687  015F2C  EC28  F0DA         	call	_start_bsoc	;wreg free
 25688                           
 25689                           ; BSR set to: 57
 25690                           ;mbmc.c: 95:  C.update = 1;
 25691  015F30  0E01               	movlw	1
 25692  015F32  0101               	movlb	1	; () banked
 25693  015F34  6FB0               	movwf	(_C+176)& (0+255),b	;volatile
 25694                           
 25695                           ; BSR set to: 1
 25696                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25697  015F36  0012               	return		;funcret
 25698  015F38                     __end_of_calc_model_data:
 25699                           	opt callstack 0
 25700                           
 25701 ;; *************** function _stop_bsoc *****************
 25702 ;; Defined at:
 25703 ;;		line 108 in file "bsoc.c"
 25704 ;; Parameters:    Size  Location     Type
 25705 ;;		None
 25706 ;; Auto vars:     Size  Location     Type
 25707 ;;		None
 25708 ;; Return value:  Size  Location     Type
 25709 ;;                  1  [STACK] void 
 25710 ;; Registers used:
 25711 ;;		None
 25712 ;; Tracked objects:
 25713 ;;		On entry : 0/0
 25714 ;;		On exit  : 3F/39
 25715 ;;		Unchanged: 0/0
 25716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25720 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25721 ;;Total ram usage:        0 bytes
 25722 ;; Hardware stack levels used:    1
 25723 ;; Hardware stack levels required when called:   15
 25724 ;; This function calls:
 25725 ;;		Nothing
 25726 ;; This function is called by:
 25727 ;;		_calc_model_data
 25728 ;; This function uses a reentrant model
 25729 ;;
 25730                           
 25731                           	psect	text101
 25732  01B70C                     __ptext101:
 25733                           	opt callstack 0
 25734  01B70C                     _stop_bsoc:
 25735                           	opt callstack 14
 25736                           
 25737                           ;bsoc.c: 111:  PIE6bits.TMR3IE = 0;
 25738                           
 25739                           ; BSR set to: 1
 25740                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25741                           ;incstack = 0
 25742  01B70C  0139               	movlb	57	; () banked
 25743  01B70E  9D96               	bcf	150,6,b	;volatile
 25744                           
 25745                           ; BSR set to: 57
 25746                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 25747  01B710  0012               	return		;funcret
 25748  01B712                     __end_of_stop_bsoc:
 25749                           	opt callstack 0
 25750                           
 25751 ;; *************** function _start_bsoc *****************
 25752 ;; Defined at:
 25753 ;;		line 99 in file "bsoc.c"
 25754 ;; Parameters:    Size  Location     Type
 25755 ;;		None
 25756 ;; Auto vars:     Size  Location     Type
 25757 ;;		None
 25758 ;; Return value:  Size  Location     Type
 25759 ;;                  1  [STACK] void 
 25760 ;; Registers used:
 25761 ;;		wreg, status,2, status,0, btemp+11
 25762 ;; Tracked objects:
 25763 ;;		On entry : 3C/2
 25764 ;;		On exit  : 3F/39
 25765 ;;		Unchanged: 0/0
 25766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25770 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25771 ;;Total ram usage:        0 bytes
 25772 ;; Hardware stack levels used:    1
 25773 ;; Hardware stack levels required when called:   15
 25774 ;; This function calls:
 25775 ;;		Nothing
 25776 ;; This function is called by:
 25777 ;;		_calc_model_data
 25778 ;; This function uses a reentrant model
 25779 ;;
 25780                           
 25781                           	psect	text102
 25782  01B450                     __ptext102:
 25783                           	opt callstack 0
 25784  01B450                     _start_bsoc:
 25785                           	opt callstack 14
 25786                           
 25787                           ;bsoc.c: 102:  PIE6bits.TMR3IE = 1;
 25788                           
 25789                           ; BSR set to: 57
 25790                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25791                           ;incstack = 0
 25792  01B450  0139               	movlb	57	; () banked
 25793  01B452  8D96               	bsf	150,6,b	;volatile
 25794                           
 25795                           ; BSR set to: 57
 25796  01B454  A4BE               	btfss	190,2,c	;volatile
 25797  01B456  D002               	goto	u9290
 25798  01B458  0E01               	movlw	1
 25799  01B45A  D001               	goto	u9296
 25800  01B45C                     u9290:
 25801  01B45C  0E00               	movlw	0
 25802  01B45E                     u9296:
 25803  01B45E  0AFF               	xorlw	255
 25804  01B460  6E33               	movwf	(btemp+11)^0,c
 25805  01B462  4633               	rlncf	(btemp+11)^0,f,c
 25806  01B464  4633               	rlncf	(btemp+11)^0,f,c
 25807  01B466  50BE               	movf	190,w,c	;volatile
 25808  01B468  1833               	xorwf	(btemp+11)^0,w,c
 25809  01B46A  0BFB               	andlw	-5
 25810  01B46C  1833               	xorwf	(btemp+11)^0,w,c
 25811  01B46E  6EBE               	movwf	190,c	;volatile
 25812                           
 25813                           ; BSR set to: 57
 25814                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 25815  01B470  0012               	return		;funcret
 25816  01B472                     __end_of_start_bsoc:
 25817                           	opt callstack 0
 25818                           
 25819 ;; *************** function _lp_filter *****************
 25820 ;; Defined at:
 25821 ;;		line 29 in file "mbmc.c"
 25822 ;; Parameters:    Size  Location     Type
 25823 ;;  new             4  [STACK] const float 
 25824 ;;  bn              1  [STACK] const unsigned char 
 25825 ;;  slow            1  [STACK] const char 
 25826 ;; Auto vars:     Size  Location     Type
 25827 ;;  lp_speed        4  [STACK] float 
 25828 ;; Return value:  Size  Location     Type
 25829 ;;                  4  [STACK] float 
 25830 ;; Registers used:
 25831 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 25832 ;; Tracked objects:
 25833 ;;		On entry : 0/2
 25834 ;;		On exit  : 0/0
 25835 ;;		Unchanged: 0/0
 25836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25840 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25841 ;;Total ram usage:        0 bytes
 25842 ;; Hardware stack levels used:    1
 25843 ;; Hardware stack levels required when called:   17
 25844 ;; This function calls:
 25845 ;;		___fladd
 25846 ;;		___flmul
 25847 ;;		___flsub
 25848 ;; This function is called by:
 25849 ;;		_main
 25850 ;;		_convert_adc_data
 25851 ;;		_calc_model_data
 25852 ;; This function uses a reentrant model
 25853 ;;
 25854                           
 25855                           	psect	text103
 25856  017DB8                     __ptext103:
 25857                           	opt callstack 0
 25858  017DB8                     _lp_filter:
 25859                           	opt callstack 0
 25860                           
 25861                           ; BSR set to: 57
 25862                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25863  017DB8  52E6               	movf	postinc1,f,c
 25864  017DBA  52E6               	movf	postinc1,f,c
 25865  017DBC  52E6               	movf	postinc1,f,c
 25866  017DBE  52E6               	movf	postinc1,f,c
 25867                           
 25868                           ;mbmc.c: 29: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 30: {;mbmc.c: 31:  static float smooth[16 +5];;mbmc.c: 32:  float lp_speed;;mbmc.c: 3
      +                          4:  if (bn >= 16 +5)
 25869                           ;stkvar	_bn @ sp[(-4)+-5]
 25870                           
 25871                           ;incstack = 0
 25872  017DC0  0EF7               	movlw	-9
 25873  017DC2  006F FF8C  F028    	movff	plusw1,btemp
 25874  017DC8  0E14               	movlw	20
 25875  017DCA  6428               	cpfsgt	btemp^0,c
 25876  017DCC  D011               	goto	l10110
 25877  017DCE                     u9200:
 25878                           
 25879                           ;mbmc.c: 35:   return new;
 25880                           ;stkvar	_new @ sp[(-4)+-4]
 25881  017DCE  0EF8               	movlw	-8
 25882  017DD0  006F FF8C  F028    	movff	plusw1,btemp
 25883  017DD6  0EF9               	movlw	-7
 25884  017DD8  006F FF8C  F029    	movff	plusw1,btemp+1
 25885  017DDE  0EFA               	movlw	-6
 25886  017DE0  006F FF8C  F02A    	movff	plusw1,btemp+2
 25887  017DE6  0EFB               	movlw	-5
 25888  017DE8  006F FF8C  F02B    	movff	plusw1,btemp+3
 25889  017DEE  D0BD               	goto	l1825
 25890  017DF0                     l10110:
 25891                           
 25892                           ;mbmc.c: 37:  if (slow == (-1)) {
 25893                           ;stkvar	_slow @ sp[(-4)+-6]
 25894  017DF0  0EF6               	movlw	-10
 25895  017DF2  28E3               	incf	plusw1,w,c
 25896  017DF4  A4D8               	btfss	status,2,c
 25897  017DF6  D012               	goto	l10118
 25898                           
 25899                           ;mbmc.c: 38:   smooth[bn] = 0.0;
 25900                           ;stkvar	_bn @ sp[(-4)+-5]
 25901  017DF8  0EF7               	movlw	-9
 25902  017DFA  50E3               	movf	plusw1,w,c
 25903  017DFC  0D04               	mullw	4
 25904  017DFE  0E00               	movlw	low lp_filter@smooth
 25905  017E00  24F3               	addwf	243,w,c
 25906  017E02  6ED9               	movwf	fsr2l,c
 25907  017E04  0E03               	movlw	high lp_filter@smooth
 25908  017E06  20F4               	addwfc	prodh,w,c
 25909  017E08  6EDA               	movwf	fsr2h,c
 25910  017E0A  0E00               	movlw	0
 25911  017E0C  6EDE               	movwf	postinc2,c
 25912  017E0E  0E00               	movlw	0
 25913  017E10  6EDE               	movwf	postinc2,c
 25914  017E12  0E00               	movlw	0
 25915  017E14  6EDE               	movwf	postinc2,c
 25916  017E16  0E00               	movlw	0
 25917  017E18  6EDD               	movwf	postdec2,c
 25918  017E1A  D7D9               	goto	u9200
 25919  017E1C                     l10118:
 25920                           
 25921                           ;mbmc.c: 42:  if (slow) {
 25922                           ;stkvar	_slow @ sp[(-4)+-6]
 25923  017E1C  0EF6               	movlw	-10
 25924  017E1E  50E3               	movf	plusw1,w,c
 25925  017E20  B4D8               	btfsc	status,2,c
 25926  017E22  D006               	goto	l10122
 25927                           
 25928                           ;mbmc.c: 43:   lp_speed = 0.033;
 25929  017E24  0E02               	movlw	2
 25930  017E26  6E30               	movwf	(btemp+8)^0,c
 25931  017E28  0E2B               	movlw	43
 25932  017E2A  6E31               	movwf	(btemp+9)^0,c
 25933  017E2C  0E07               	movlw	7
 25934  017E2E  D005               	goto	L29
 25935  017E30                     l10122:
 25936                           
 25937                           ;mbmc.c: 45:   lp_speed = 0.066;
 25938  017E30  0E02               	movlw	2
 25939  017E32  6E30               	movwf	(btemp+8)^0,c
 25940  017E34  0E2B               	movlw	43
 25941  017E36  6E31               	movwf	(btemp+9)^0,c
 25942  017E38  0E87               	movlw	135
 25943  017E3A                     L29:
 25944  017E3A  6E32               	movwf	(btemp+10)^0,c
 25945  017E3C  0E3D               	movlw	61
 25946  017E3E  6E33               	movwf	(btemp+11)^0,c
 25947                           
 25948                           ;stkvar	_lp_speed @ sp[(-4)+0]
 25949  017E40  0EFC               	movlw	-4
 25950  017E42  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 25951  017E48  0EFD               	movlw	-3
 25952  017E4A  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 25953  017E50  0EFE               	movlw	-2
 25954  017E52  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 25955  017E58  0EFF               	movlw	-1
 25956  017E5A  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 25957                           
 25958                           ;mbmc.c: 48:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 25959                           ;stkvar	_bn @ sp[(-4)+-5]
 25960  017E60  0EF7               	movlw	-9
 25961  017E62  50E3               	movf	plusw1,w,c
 25962  017E64  0D04               	mullw	4
 25963  017E66  0E00               	movlw	low lp_filter@smooth
 25964  017E68  24F3               	addwf	243,w,c
 25965  017E6A  6ED9               	movwf	fsr2l,c
 25966  017E6C  0E03               	movlw	high lp_filter@smooth
 25967  017E6E  20F4               	addwfc	prodh,w,c
 25968  017E70  6EDA               	movwf	fsr2h,c
 25969  017E72  006F FF7B FFE6     	movff	postinc2,postinc1
 25970  017E78  006F FF7B FFE6     	movff	postinc2,postinc1
 25971  017E7E  006F FF7B FFE6     	movff	postinc2,postinc1
 25972  017E84  006F FF7B FFE6     	movff	postinc2,postinc1
 25973                           
 25974                           ;stkvar	_lp_speed @ sp[(-8)+0]
 25975  017E8A  0EF8               	movlw	-8
 25976  017E8C  006F FF8F FFE6     	movff	plusw1,postinc1
 25977  017E92  006F FF8F FFE6     	movff	plusw1,postinc1
 25978  017E98  006F FF8F FFE6     	movff	plusw1,postinc1
 25979  017E9E  006F FF8F FFE6     	movff	plusw1,postinc1
 25980                           
 25981                           ;stkvar	_bn @ sp[(-12)+-5]
 25982  017EA4  0EEF               	movlw	-17
 25983  017EA6  50E3               	movf	plusw1,w,c
 25984  017EA8  0D04               	mullw	4
 25985  017EAA  0E00               	movlw	low lp_filter@smooth
 25986  017EAC  24F3               	addwf	243,w,c
 25987  017EAE  6ED9               	movwf	fsr2l,c
 25988  017EB0  0E03               	movlw	high lp_filter@smooth
 25989  017EB2  20F4               	addwfc	prodh,w,c
 25990  017EB4  6EDA               	movwf	fsr2h,c
 25991  017EB6  006F FF7B FFE6     	movff	postinc2,postinc1
 25992  017EBC  006F FF7B FFE6     	movff	postinc2,postinc1
 25993  017EC2  006F FF7B FFE6     	movff	postinc2,postinc1
 25994  017EC8  006F FF7B FFE6     	movff	postinc2,postinc1
 25995                           
 25996                           ;stkvar	_new @ sp[(-16)+-4]
 25997  017ECE  0EEC               	movlw	-20
 25998  017ED0  006F FF8F FFE6     	movff	plusw1,postinc1
 25999  017ED6  006F FF8F FFE6     	movff	plusw1,postinc1
 26000  017EDC  006F FF8F FFE6     	movff	plusw1,postinc1
 26001  017EE2  006F FF8F FFE6     	movff	plusw1,postinc1
 26002  017EE8  EC41  F0D5         	call	___flsub	;wreg free
 26003  017EEC  0060  F0A3  FFE6   	movff	btemp,postinc1
 26004  017EF2  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 26005  017EF8  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 26006  017EFE  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 26007  017F04  EC0F  F099         	call	___flmul	;wreg free
 26008  017F08  0060  F0A3  FFE6   	movff	btemp,postinc1
 26009  017F0E  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 26010  017F14  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 26011  017F1A  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 26012  017F20  EC24  F09D         	call	___fladd	;wreg free
 26013                           
 26014                           ;stkvar	_bn @ sp[(-4)+-5]
 26015  017F24  0EF7               	movlw	-9
 26016  017F26  50E3               	movf	plusw1,w,c
 26017  017F28  0D04               	mullw	4
 26018  017F2A  0E00               	movlw	low lp_filter@smooth
 26019  017F2C  24F3               	addwf	243,w,c
 26020  017F2E  6ED9               	movwf	fsr2l,c
 26021  017F30  0E03               	movlw	high lp_filter@smooth
 26022  017F32  20F4               	addwfc	prodh,w,c
 26023  017F34  6EDA               	movwf	fsr2h,c
 26024  017F36  0060  F0A3  FFDE   	movff	btemp,postinc2
 26025  017F3C  0060  F0A7  FFDE   	movff	btemp+1,postinc2
 26026  017F42  0060  F0AB  FFDE   	movff	btemp+2,postinc2
 26027  017F48  0060  F0AF  FFDD   	movff	btemp+3,postdec2
 26028  017F4E  52DD               	movf	postdec2,f,c
 26029  017F50  52DD               	movf	postdec2,f,c
 26030  017F52  006F FF78  F028    	movff	postinc2,btemp
 26031  017F58  006F FF78  F029    	movff	postinc2,btemp+1
 26032  017F5E  006F FF78  F02A    	movff	postinc2,btemp+2
 26033  017F64  006F FF78  F02B    	movff	postinc2,btemp+3
 26034  017F6A                     l1825:
 26035                           
 26036                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 26037  017F6A  0EF6               	movlw	246
 26038  017F6C  26E1               	addwf	fsr1l,f,c
 26039  017F6E  0EFF               	movlw	255
 26040  017F70  22E2               	addwfc	fsr1h,f,c
 26041  017F72  0012               	return		;funcret
 26042  017F74                     __end_of_lp_filter:
 26043                           	opt callstack 0
 26044                           
 26045 ;; *************** function ___flsub *****************
 26046 ;; Defined at:
 26047 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 26048 ;; Parameters:    Size  Location     Type
 26049 ;;  b               4  [STACK] float 
 26050 ;;  a               4  [STACK] float 
 26051 ;; Auto vars:     Size  Location     Type
 26052 ;;		None
 26053 ;; Return value:  Size  Location     Type
 26054 ;;                  4  [STACK] float 
 26055 ;; Registers used:
 26056 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 26057 ;; Tracked objects:
 26058 ;;		On entry : 0/0
 26059 ;;		On exit  : 0/0
 26060 ;;		Unchanged: 0/0
 26061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26065 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26066 ;;Total ram usage:        0 bytes
 26067 ;; Hardware stack levels used:    1
 26068 ;; Hardware stack levels required when called:   16
 26069 ;; This function calls:
 26070 ;;		___fladd
 26071 ;; This function is called by:
 26072 ;;		_conv_raw_result
 26073 ;;		_lp_filter
 26074 ;;		_calc_model_data
 26075 ;;		_calc_ror_data
 26076 ;;		_esr_check
 26077 ;;		_efgtoa
 26078 ;; This function uses a reentrant model
 26079 ;;
 26080                           
 26081                           	psect	text104
 26082  01AA82                     __ptext104:
 26083                           	opt callstack 0
 26084  01AA82                     ___flsub:
 26085                           	opt callstack 0
 26086                           
 26087                           ;stkvar	_a @ sp[(0)+-8]
 26088                           
 26089                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26090                           ;incstack = 0
 26091 ;; hardware stack exceeded
 26092  01AA82  0EFB               	movlw	-5
 26093  01AA84  7EE3               	btg	plusw1,7,c
 26094                           
 26095                           ;stkvar	_a @ sp[(0)+-8]
 26096  01AA86  0EF8               	movlw	-8
 26097  01AA88  006F FF8F FFE6     	movff	plusw1,postinc1
 26098  01AA8E  006F FF8F FFE6     	movff	plusw1,postinc1
 26099  01AA94  006F FF8F FFE6     	movff	plusw1,postinc1
 26100  01AA9A  006F FF8F FFE6     	movff	plusw1,postinc1
 26101                           
 26102                           ;stkvar	_b @ sp[(-4)+-4]
 26103  01AAA0  0EF8               	movlw	-8
 26104  01AAA2  006F FF8F FFE6     	movff	plusw1,postinc1
 26105  01AAA8  006F FF8F FFE6     	movff	plusw1,postinc1
 26106  01AAAE  006F FF8F FFE6     	movff	plusw1,postinc1
 26107  01AAB4  006F FF8F FFE6     	movff	plusw1,postinc1
 26108  01AABA  EC24  F09D         	call	___fladd	;wreg free
 26109                           
 26110                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 26111  01AABE  0EF8               	movlw	248
 26112  01AAC0  26E1               	addwf	fsr1l,f,c
 26113  01AAC2  0EFF               	movlw	255
 26114  01AAC4  22E2               	addwfc	fsr1h,f,c
 26115  01AAC6  0012               	return		;funcret
 26116  01AAC8                     __end_of___flsub:
 26117                           	opt callstack 0
 26118                           
 26119 ;; *************** function ___fladd *****************
 26120 ;; Defined at:
 26121 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 26122 ;; Parameters:    Size  Location     Type
 26123 ;;  b               4  [STACK] float 
 26124 ;;  a               4  [STACK] float 
 26125 ;; Auto vars:     Size  Location     Type
 26126 ;;  grs             1  [STACK] unsigned char 
 26127 ;;  bexp            1  [STACK] unsigned char 
 26128 ;;  aexp            1  [STACK] unsigned char 
 26129 ;;  signs           1  [STACK] unsigned char 
 26130 ;; Return value:  Size  Location     Type
 26131 ;;                  4  [STACK] unsigned char 
 26132 ;; Registers used:
 26133 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 26134 ;; Tracked objects:
 26135 ;;		On entry : 0/0
 26136 ;;		On exit  : 0/0
 26137 ;;		Unchanged: 0/0
 26138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26142 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26143 ;;Total ram usage:        0 bytes
 26144 ;; Hardware stack levels used:    1
 26145 ;; Hardware stack levels required when called:   15
 26146 ;; This function calls:
 26147 ;;		Nothing
 26148 ;; This function is called by:
 26149 ;;		_main
 26150 ;;		_lp_filter
 26151 ;;		_calc_model_data
 26152 ;;		_calc_bsoc
 26153 ;;		_efgtoa
 26154 ;;		___flsub
 26155 ;; This function uses a reentrant model
 26156 ;;
 26157                           
 26158                           	psect	text105
 26159  013A48                     __ptext105:
 26160                           	opt callstack 0
 26161  013A48                     ___fladd:
 26162                           	opt callstack 0
 26163                           
 26164                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26165  013A48  52E6               	movf	postinc1,f,c
 26166  013A4A  52E6               	movf	postinc1,f,c
 26167  013A4C  52E6               	movf	postinc1,f,c
 26168  013A4E  52E6               	movf	postinc1,f,c
 26169                           
 26170                           ;stkvar	_b @ sp[(-4)+-4]
 26171                           
 26172                           ;incstack = 0
 26173 ;; hardware stack exceeded
 26174  013A50  0EFB               	movlw	251
 26175  013A52  24E1               	addwf	fsr1l,w,c
 26176  013A54  6ED9               	movwf	fsr2l,c
 26177  013A56  0EFF               	movlw	255
 26178  013A58  20E2               	addwfc	fsr1h,w,c
 26179  013A5A  6EDA               	movwf	fsr2h,c
 26180  013A5C  50DF               	movf	indf2,w,c
 26181  013A5E  6E33               	movwf	(btemp+11)^0,c
 26182  013A60  0E80               	movlw	128
 26183  013A62  1633               	andwf	(btemp+11)^0,f,c
 26184                           
 26185                           ;stkvar	_signs @ sp[(-4)+3]
 26186  013A64  0EFF               	movlw	-1
 26187  013A66  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 26188                           
 26189                           ;stkvar	_b @ sp[(-4)+-4]
 26190  013A6C  0EFB               	movlw	251
 26191  013A6E  24E1               	addwf	fsr1l,w,c
 26192  013A70  6ED9               	movwf	fsr2l,c
 26193  013A72  0EFF               	movlw	255
 26194  013A74  20E2               	addwfc	fsr1h,w,c
 26195  013A76  6EDA               	movwf	fsr2h,c
 26196  013A78  50DF               	movf	indf2,w,c
 26197  013A7A  6E33               	movwf	(btemp+11)^0,c
 26198  013A7C  90D8               	bcf	status,0,c
 26199  013A7E  3433               	rlcf	(btemp+11)^0,w,c
 26200  013A80  6E32               	movwf	(btemp+10)^0,c
 26201                           
 26202                           ;stkvar	_bexp @ sp[(-4)+1]
 26203  013A82  0EFD               	movlw	-3
 26204  013A84  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 26205                           
 26206                           ;stkvar	_b @ sp[(-4)+-4]
 26207  013A8A  0EFA               	movlw	250
 26208  013A8C  24E1               	addwf	fsr1l,w,c
 26209  013A8E  6ED9               	movwf	fsr2l,c
 26210  013A90  0EFF               	movlw	255
 26211  013A92  20E2               	addwfc	fsr1h,w,c
 26212  013A94  6EDA               	movwf	fsr2h,c
 26213  013A96  AEDF               	btfss	indf2,7,c
 26214  013A98  D002               	goto	l7498
 26215                           
 26216                           ;stkvar	_bexp @ sp[(-4)+1]
 26217  013A9A  0EFD               	movlw	-3
 26218  013A9C  80E3               	bsf	plusw1,0,c
 26219  013A9E                     l7498:
 26220                           
 26221                           ;stkvar	_bexp @ sp[(-4)+1]
 26222  013A9E  0EFD               	movlw	-3
 26223  013AA0  50E3               	movf	plusw1,w,c
 26224  013AA2  B4D8               	btfsc	status,2,c
 26225  013AA4  D027               	goto	l7508
 26226                           
 26227                           ;stkvar	_bexp @ sp[(-4)+1]
 26228  013AA6  0EFD               	movlw	-3
 26229  013AA8  28E3               	incf	plusw1,w,c
 26230  013AAA  A4D8               	btfss	status,2,c
 26231  013AAC  D018               	goto	l7504
 26232  013AAE  0E00               	movlw	0
 26233  013AB0  6E30               	movwf	(btemp+8)^0,c
 26234  013AB2  0E00               	movlw	0
 26235  013AB4  6E31               	movwf	(btemp+9)^0,c
 26236  013AB6  0E00               	movlw	0
 26237  013AB8  6E32               	movwf	(btemp+10)^0,c
 26238  013ABA  0E00               	movlw	0
 26239  013ABC  6E33               	movwf	(btemp+11)^0,c
 26240                           
 26241                           ;stkvar	_b @ sp[(-4)+-4]
 26242  013ABE  0EF8               	movlw	-8
 26243  013AC0  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 26244  013AC6  0EF9               	movlw	-7
 26245  013AC8  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 26246  013ACE  0EFA               	movlw	-6
 26247  013AD0  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 26248  013AD6  0EFB               	movlw	-5
 26249  013AD8  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 26250  013ADE                     l7504:
 26251                           
 26252                           ;stkvar	_b @ sp[(-4)+-4]
 26253  013ADE  0EFA               	movlw	-6
 26254  013AE0  8EE3               	bsf	plusw1,7,c
 26255                           
 26256                           ;stkvar	_b @ sp[(-4)+-4]
 26257  013AE2  0EFB               	movlw	251
 26258  013AE4  24E1               	addwf	fsr1l,w,c
 26259  013AE6  6ED9               	movwf	fsr2l,c
 26260  013AE8  0EFF               	movlw	255
 26261  013AEA  20E2               	addwfc	fsr1h,w,c
 26262  013AEC  6EDA               	movwf	fsr2h,c
 26263  013AEE  0E00               	movlw	0
 26264  013AF0  6EDF               	movwf	indf2,c
 26265  013AF2  D018               	goto	l7510
 26266  013AF4                     l7508:
 26267  013AF4  0E00               	movlw	0
 26268  013AF6  6E30               	movwf	(btemp+8)^0,c
 26269  013AF8  0E00               	movlw	0
 26270  013AFA  6E31               	movwf	(btemp+9)^0,c
 26271  013AFC  0E00               	movlw	0
 26272  013AFE  6E32               	movwf	(btemp+10)^0,c
 26273  013B00  0E00               	movlw	0
 26274  013B02  6E33               	movwf	(btemp+11)^0,c
 26275                           
 26276                           ;stkvar	_b @ sp[(-4)+-4]
 26277  013B04  0EF8               	movlw	-8
 26278  013B06  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 26279  013B0C  0EF9               	movlw	-7
 26280  013B0E  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 26281  013B14  0EFA               	movlw	-6
 26282  013B16  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 26283  013B1C  0EFB               	movlw	-5
 26284  013B1E  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 26285  013B24                     l7510:
 26286                           
 26287                           ;stkvar	_a @ sp[(-4)+-8]
 26288  013B24  0EF7               	movlw	247
 26289  013B26  24E1               	addwf	fsr1l,w,c
 26290  013B28  6ED9               	movwf	fsr2l,c
 26291  013B2A  0EFF               	movlw	255
 26292  013B2C  20E2               	addwfc	fsr1h,w,c
 26293  013B2E  6EDA               	movwf	fsr2h,c
 26294  013B30  50DF               	movf	indf2,w,c
 26295  013B32  6E33               	movwf	(btemp+11)^0,c
 26296  013B34  0E80               	movlw	128
 26297  013B36  1633               	andwf	(btemp+11)^0,f,c
 26298                           
 26299                           ;stkvar	_aexp @ sp[(-4)+2]
 26300  013B38  0EFE               	movlw	-2
 26301  013B3A  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 26302                           
 26303                           ;stkvar	_signs @ sp[(-4)+3]
 26304                           ;stkvar	_aexp @ sp[(-4)+2]
 26305  013B40  50E1               	movf	fsr1l,w,c
 26306  013B42  0FFE               	addlw	-2
 26307  013B44  6ED9               	movwf	fsr2l,c
 26308  013B46  50E2               	movf	fsr1h,w,c
 26309  013B48  6EDA               	movwf	fsr2h,c
 26310  013B4A  0EFF               	movlw	255
 26311  013B4C  22DA               	addwfc	fsr2h,f,c
 26312  013B4E  0EFF               	movlw	-1
 26313  013B50  50E3               	movf	plusw1,w,c
 26314  013B52  18DE               	xorwf	postinc2,w,c
 26315  013B54  B4D8               	btfsc	status,2,c
 26316  013B56  D002               	goto	l7516
 26317                           
 26318                           ;stkvar	_signs @ sp[(-4)+3]
 26319  013B58  0EFF               	movlw	-1
 26320  013B5A  8CE3               	bsf	plusw1,6,c
 26321  013B5C                     l7516:
 26322                           
 26323                           ;stkvar	_a @ sp[(-4)+-8]
 26324  013B5C  0EF7               	movlw	247
 26325  013B5E  24E1               	addwf	fsr1l,w,c
 26326  013B60  6ED9               	movwf	fsr2l,c
 26327  013B62  0EFF               	movlw	255
 26328  013B64  20E2               	addwfc	fsr1h,w,c
 26329  013B66  6EDA               	movwf	fsr2h,c
 26330  013B68  50DF               	movf	indf2,w,c
 26331  013B6A  6E33               	movwf	(btemp+11)^0,c
 26332  013B6C  90D8               	bcf	status,0,c
 26333  013B6E  3433               	rlcf	(btemp+11)^0,w,c
 26334  013B70  6E32               	movwf	(btemp+10)^0,c
 26335                           
 26336                           ;stkvar	_aexp @ sp[(-4)+2]
 26337  013B72  0EFE               	movlw	-2
 26338  013B74  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 26339                           
 26340                           ;stkvar	_a @ sp[(-4)+-8]
 26341  013B7A  0EF6               	movlw	246
 26342  013B7C  24E1               	addwf	fsr1l,w,c
 26343  013B7E  6ED9               	movwf	fsr2l,c
 26344  013B80  0EFF               	movlw	255
 26345  013B82  20E2               	addwfc	fsr1h,w,c
 26346  013B84  6EDA               	movwf	fsr2h,c
 26347  013B86  AEDF               	btfss	indf2,7,c
 26348  013B88  D002               	goto	l7522
 26349                           
 26350                           ;stkvar	_aexp @ sp[(-4)+2]
 26351  013B8A  0EFE               	movlw	-2
 26352  013B8C  80E3               	bsf	plusw1,0,c
 26353  013B8E                     l7522:
 26354                           
 26355                           ;stkvar	_aexp @ sp[(-4)+2]
 26356  013B8E  0EFE               	movlw	-2
 26357  013B90  50E3               	movf	plusw1,w,c
 26358  013B92  B4D8               	btfsc	status,2,c
 26359  013B94  D027               	goto	l7532
 26360                           
 26361                           ;stkvar	_aexp @ sp[(-4)+2]
 26362  013B96  0EFE               	movlw	-2
 26363  013B98  28E3               	incf	plusw1,w,c
 26364  013B9A  A4D8               	btfss	status,2,c
 26365  013B9C  D018               	goto	l7528
 26366  013B9E  0E00               	movlw	0
 26367  013BA0  6E30               	movwf	(btemp+8)^0,c
 26368  013BA2  0E00               	movlw	0
 26369  013BA4  6E31               	movwf	(btemp+9)^0,c
 26370  013BA6  0E00               	movlw	0
 26371  013BA8  6E32               	movwf	(btemp+10)^0,c
 26372  013BAA  0E00               	movlw	0
 26373  013BAC  6E33               	movwf	(btemp+11)^0,c
 26374                           
 26375                           ;stkvar	_a @ sp[(-4)+-8]
 26376  013BAE  0EF4               	movlw	-12
 26377  013BB0  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 26378  013BB6  0EF5               	movlw	-11
 26379  013BB8  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 26380  013BBE  0EF6               	movlw	-10
 26381  013BC0  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 26382  013BC6  0EF7               	movlw	-9
 26383  013BC8  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 26384  013BCE                     l7528:
 26385                           
 26386                           ;stkvar	_a @ sp[(-4)+-8]
 26387  013BCE  0EF6               	movlw	-10
 26388  013BD0  8EE3               	bsf	plusw1,7,c
 26389                           
 26390                           ;stkvar	_a @ sp[(-4)+-8]
 26391  013BD2  0EF7               	movlw	247
 26392  013BD4  24E1               	addwf	fsr1l,w,c
 26393  013BD6  6ED9               	movwf	fsr2l,c
 26394  013BD8  0EFF               	movlw	255
 26395  013BDA  20E2               	addwfc	fsr1h,w,c
 26396  013BDC  6EDA               	movwf	fsr2h,c
 26397  013BDE  0E00               	movlw	0
 26398  013BE0  6EDF               	movwf	indf2,c
 26399  013BE2  D018               	goto	l7534
 26400  013BE4                     l7532:
 26401  013BE4  0E00               	movlw	0
 26402  013BE6  6E30               	movwf	(btemp+8)^0,c
 26403  013BE8  0E00               	movlw	0
 26404  013BEA  6E31               	movwf	(btemp+9)^0,c
 26405  013BEC  0E00               	movlw	0
 26406  013BEE  6E32               	movwf	(btemp+10)^0,c
 26407  013BF0  0E00               	movlw	0
 26408  013BF2  6E33               	movwf	(btemp+11)^0,c
 26409                           
 26410                           ;stkvar	_a @ sp[(-4)+-8]
 26411  013BF4  0EF4               	movlw	-12
 26412  013BF6  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 26413  013BFC  0EF5               	movlw	-11
 26414  013BFE  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 26415  013C04  0EF6               	movlw	-10
 26416  013C06  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 26417  013C0C  0EF7               	movlw	-9
 26418  013C0E  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 26419  013C14                     l7534:
 26420                           
 26421                           ;stkvar	_bexp @ sp[(-4)+1]
 26422                           ;stkvar	_aexp @ sp[(-4)+2]
 26423  013C14  50E1               	movf	fsr1l,w,c
 26424  013C16  0FFE               	addlw	-2
 26425  013C18  6ED9               	movwf	fsr2l,c
 26426  013C1A  50E2               	movf	fsr1h,w,c
 26427  013C1C  6EDA               	movwf	fsr2h,c
 26428  013C1E  0EFF               	movlw	255
 26429  013C20  22DA               	addwfc	fsr2h,f,c
 26430  013C22  0EFD               	movlw	-3
 26431  013C24  50E3               	movf	plusw1,w,c
 26432  013C26  5CDE               	subwf	postinc2,w,c
 26433  013C28  B0D8               	btfsc	status,0,c
 26434  013C2A  D0A4               	goto	l7570
 26435                           
 26436                           ;stkvar	_signs @ sp[(-4)+3]
 26437  013C2C  0EFF               	movlw	-1
 26438  013C2E  ACE3               	btfss	plusw1,6,c
 26439  013C30  D002               	goto	l7540
 26440                           
 26441                           ;stkvar	_signs @ sp[(-4)+3]
 26442  013C32  0EFF               	movlw	-1
 26443  013C34  7EE3               	btg	plusw1,7,c
 26444  013C36                     l7540:
 26445                           
 26446                           ;stkvar	_bexp @ sp[(-4)+1]
 26447                           ;stkvar	_grs @ sp[(-4)+0]
 26448  013C36  0EFD               	movlw	-3
 26449  013C38  006F FF8C  F028    	movff	plusw1,btemp
 26450  013C3E  0EFC               	movlw	-4
 26451  013C40  0060  F0A3  FFE3   	movff	btemp,plusw1
 26452                           
 26453                           ;stkvar	_aexp @ sp[(-4)+2]
 26454                           ;stkvar	_bexp @ sp[(-4)+1]
 26455  013C46  0EFE               	movlw	-2
 26456  013C48  006F FF8C  F028    	movff	plusw1,btemp
 26457  013C4E  0EFD               	movlw	-3
 26458  013C50  0060  F0A3  FFE3   	movff	btemp,plusw1
 26459                           
 26460                           ;stkvar	_grs @ sp[(-4)+0]
 26461                           ;stkvar	_aexp @ sp[(-4)+2]
 26462  013C56  0EFC               	movlw	-4
 26463  013C58  006F FF8C  F028    	movff	plusw1,btemp
 26464  013C5E  0EFE               	movlw	-2
 26465  013C60  0060  F0A3  FFE3   	movff	btemp,plusw1
 26466                           
 26467                           ;stkvar	_b @ sp[(-4)+-4]
 26468                           ;stkvar	_grs @ sp[(-4)+0]
 26469  013C66  0EF8               	movlw	-8
 26470  013C68  006F FF8C  F028    	movff	plusw1,btemp
 26471  013C6E  0EFC               	movlw	-4
 26472  013C70  0060  F0A3  FFE3   	movff	btemp,plusw1
 26473                           
 26474                           ;stkvar	_a @ sp[(-4)+-8]
 26475                           ;stkvar	_b @ sp[(-4)+-4]
 26476  013C76  0EF4               	movlw	-12
 26477  013C78  006F FF8C  F028    	movff	plusw1,btemp
 26478  013C7E  0EF8               	movlw	-8
 26479  013C80  0060  F0A3  FFE3   	movff	btemp,plusw1
 26480                           
 26481                           ;stkvar	_grs @ sp[(-4)+0]
 26482                           ;stkvar	_a @ sp[(-4)+-8]
 26483  013C86  0EFC               	movlw	-4
 26484  013C88  006F FF8C  F028    	movff	plusw1,btemp
 26485  013C8E  0EF4               	movlw	-12
 26486  013C90  0060  F0A3  FFE3   	movff	btemp,plusw1
 26487                           
 26488                           ;stkvar	_b @ sp[(-4)+-4]
 26489  013C96  0EF9               	movlw	249
 26490  013C98  24E1               	addwf	fsr1l,w,c
 26491  013C9A  6ED9               	movwf	fsr2l,c
 26492  013C9C  0EFF               	movlw	255
 26493  013C9E  20E2               	addwfc	fsr1h,w,c
 26494  013CA0  6EDA               	movwf	fsr2h,c
 26495  013CA2  50DF               	movf	indf2,w,c
 26496  013CA4  6E33               	movwf	(btemp+11)^0,c
 26497                           
 26498                           ;stkvar	_grs @ sp[(-4)+0]
 26499  013CA6  0EFC               	movlw	-4
 26500  013CA8  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 26501                           
 26502                           ;stkvar	_a @ sp[(-4)+-8]
 26503  013CAE  0EF5               	movlw	245
 26504  013CB0  24E1               	addwf	fsr1l,w,c
 26505  013CB2  6ED9               	movwf	fsr2l,c
 26506  013CB4  0EFF               	movlw	255
 26507  013CB6  20E2               	addwfc	fsr1h,w,c
 26508  013CB8  6EDA               	movwf	fsr2h,c
 26509                           
 26510                           ;stkvar	_b @ sp[(-4)+-4]
 26511  013CBA  0EF9               	movlw	249
 26512  013CBC  24E1               	addwf	fsr1l,w,c
 26513  013CBE  6EE9               	movwf	fsr0l,c
 26514  013CC0  0EFF               	movlw	255
 26515  013CC2  20E2               	addwfc	fsr1h,w,c
 26516  013CC4  6EEA               	movwf	fsr0h,c
 26517  013CC6  006F FF7F FFEF     	movff	indf2,indf0
 26518                           
 26519                           ;stkvar	_grs @ sp[(-4)+0]
 26520                           ;stkvar	_a @ sp[(-4)+-8]
 26521  013CCC  0EF5               	movlw	245
 26522  013CCE  24E1               	addwf	fsr1l,w,c
 26523  013CD0  6ED9               	movwf	fsr2l,c
 26524  013CD2  0EFF               	movlw	255
 26525  013CD4  20E2               	addwfc	fsr1h,w,c
 26526  013CD6  6EDA               	movwf	fsr2h,c
 26527  013CD8  0EFC               	movlw	-4
 26528  013CDA  006F FF8F FFDF     	movff	plusw1,indf2
 26529                           
 26530                           ;stkvar	_b @ sp[(-4)+-4]
 26531  013CE0  0EFA               	movlw	250
 26532  013CE2  24E1               	addwf	fsr1l,w,c
 26533  013CE4  6ED9               	movwf	fsr2l,c
 26534  013CE6  0EFF               	movlw	255
 26535  013CE8  20E2               	addwfc	fsr1h,w,c
 26536  013CEA  6EDA               	movwf	fsr2h,c
 26537  013CEC  50DF               	movf	indf2,w,c
 26538  013CEE  6E33               	movwf	(btemp+11)^0,c
 26539                           
 26540                           ;stkvar	_grs @ sp[(-4)+0]
 26541  013CF0  0EFC               	movlw	-4
 26542  013CF2  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 26543                           
 26544                           ;stkvar	_a @ sp[(-4)+-8]
 26545  013CF8  0EF6               	movlw	246
 26546  013CFA  24E1               	addwf	fsr1l,w,c
 26547  013CFC  6ED9               	movwf	fsr2l,c
 26548  013CFE  0EFF               	movlw	255
 26549  013D00  20E2               	addwfc	fsr1h,w,c
 26550  013D02  6EDA               	movwf	fsr2h,c
 26551                           
 26552                           ;stkvar	_b @ sp[(-4)+-4]
 26553  013D04  0EFA               	movlw	250
 26554  013D06  24E1               	addwf	fsr1l,w,c
 26555  013D08  6EE9               	movwf	fsr0l,c
 26556  013D0A  0EFF               	movlw	255
 26557  013D0C  20E2               	addwfc	fsr1h,w,c
 26558  013D0E  6EEA               	movwf	fsr0h,c
 26559  013D10  006F FF7F FFEF     	movff	indf2,indf0
 26560                           
 26561                           ;stkvar	_grs @ sp[(-4)+0]
 26562                           ;stkvar	_a @ sp[(-4)+-8]
 26563  013D16  0EF6               	movlw	246
 26564  013D18  24E1               	addwf	fsr1l,w,c
 26565  013D1A  6ED9               	movwf	fsr2l,c
 26566  013D1C  0EFF               	movlw	255
 26567  013D1E  20E2               	addwfc	fsr1h,w,c
 26568  013D20  6EDA               	movwf	fsr2h,c
 26569  013D22  0EFC               	movlw	-4
 26570  013D24  006F FF8F FFDF     	movff	plusw1,indf2
 26571                           
 26572                           ;stkvar	_b @ sp[(-4)+-4]
 26573  013D2A  0EFB               	movlw	251
 26574  013D2C  24E1               	addwf	fsr1l,w,c
 26575  013D2E  6ED9               	movwf	fsr2l,c
 26576  013D30  0EFF               	movlw	255
 26577  013D32  20E2               	addwfc	fsr1h,w,c
 26578  013D34  6EDA               	movwf	fsr2h,c
 26579  013D36  50DF               	movf	indf2,w,c
 26580  013D38  6E33               	movwf	(btemp+11)^0,c
 26581                           
 26582                           ;stkvar	_grs @ sp[(-4)+0]
 26583  013D3A  0EFC               	movlw	-4
 26584  013D3C  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 26585                           
 26586                           ;stkvar	_a @ sp[(-4)+-8]
 26587  013D42  0EF7               	movlw	247
 26588  013D44  24E1               	addwf	fsr1l,w,c
 26589  013D46  6ED9               	movwf	fsr2l,c
 26590  013D48  0EFF               	movlw	255
 26591  013D4A  20E2               	addwfc	fsr1h,w,c
 26592  013D4C  6EDA               	movwf	fsr2h,c
 26593                           
 26594                           ;stkvar	_b @ sp[(-4)+-4]
 26595  013D4E  0EFB               	movlw	251
 26596  013D50  24E1               	addwf	fsr1l,w,c
 26597  013D52  6EE9               	movwf	fsr0l,c
 26598  013D54  0EFF               	movlw	255
 26599  013D56  20E2               	addwfc	fsr1h,w,c
 26600  013D58  6EEA               	movwf	fsr0h,c
 26601  013D5A  006F FF7F FFEF     	movff	indf2,indf0
 26602                           
 26603                           ;stkvar	_grs @ sp[(-4)+0]
 26604                           ;stkvar	_a @ sp[(-4)+-8]
 26605  013D60  0EF7               	movlw	247
 26606  013D62  24E1               	addwf	fsr1l,w,c
 26607  013D64  6ED9               	movwf	fsr2l,c
 26608  013D66  0EFF               	movlw	255
 26609  013D68  20E2               	addwfc	fsr1h,w,c
 26610  013D6A  6EDA               	movwf	fsr2h,c
 26611  013D6C  0EFC               	movlw	-4
 26612  013D6E  006F FF8F FFDF     	movff	plusw1,indf2
 26613  013D74                     l7570:
 26614                           
 26615                           ;stkvar	_grs @ sp[(-4)+0]
 26616  013D74  0EFC               	movlw	-4
 26617  013D76  6AE3               	clrf	plusw1,c
 26618                           
 26619                           ;stkvar	_aexp @ sp[(-4)+2]
 26620  013D78  0EFE               	movlw	-2
 26621  013D7A  50E3               	movf	plusw1,w,c
 26622  013D7C  6E32               	movwf	(btemp+10)^0,c
 26623  013D7E  6A33               	clrf	(btemp+11)^0,c
 26624                           
 26625                           ;stkvar	_bexp @ sp[(-4)+1]
 26626  013D80  0EFD               	movlw	-3
 26627  013D82  50E3               	movf	plusw1,w,c
 26628  013D84  5E32               	subwf	(btemp+10)^0,f,c
 26629  013D86  0E00               	movlw	0
 26630  013D88  5A33               	subwfb	(btemp+11)^0,f,c
 26631  013D8A  BE33               	btfsc	(btemp+11)^0,7,c
 26632  013D8C  D062               	goto	l7594
 26633  013D8E  5033               	movf	(btemp+11)^0,w,c
 26634  013D90  E104               	bnz	u5340
 26635  013D92  0E1A               	movlw	26
 26636  013D94  5C32               	subwf	(btemp+10)^0,w,c
 26637  013D96  A0D8               	btfss	status,0,c
 26638  013D98  D05C               	goto	l7594
 26639  013D9A                     u5340:
 26640                           
 26641                           ;stkvar	_b @ sp[(-4)+-4]
 26642  013D9A  0EF8               	movlw	-8
 26643  013D9C  50E3               	movf	plusw1,w,c
 26644  013D9E  E10A               	bnz	u5351
 26645  013DA0  0EF9               	movlw	-7
 26646  013DA2  50E3               	movf	plusw1,w,c
 26647  013DA4  E107               	bnz	u5351
 26648  013DA6  0EFA               	movlw	-6
 26649  013DA8  50E3               	movf	plusw1,w,c
 26650  013DAA  E104               	bnz	u5351
 26651  013DAC  0EFB               	movlw	-5
 26652  013DAE  50E3               	movf	plusw1,w,c
 26653  013DB0  B4D8               	btfsc	status,2,c
 26654  013DB2  D003               	goto	u5350
 26655  013DB4                     u5351:
 26656  013DB4  6A33               	clrf	(btemp+11)^0,c
 26657  013DB6  2A33               	incf	(btemp+11)^0,f,c
 26658  013DB8  D001               	goto	u5368
 26659  013DBA                     u5350:
 26660  013DBA  6A33               	clrf	(btemp+11)^0,c
 26661  013DBC                     u5368:
 26662                           
 26663                           ;stkvar	_grs @ sp[(-4)+0]
 26664  013DBC  0EFC               	movlw	-4
 26665  013DBE  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 26666                           
 26667                           ;stkvar	_b @ sp[(-4)+-4]
 26668  013DC4  0EF8               	movlw	-8
 26669  013DC6  6AE3               	clrf	plusw1,c
 26670  013DC8  0EF9               	movlw	-7
 26671  013DCA  6AE3               	clrf	plusw1,c
 26672  013DCC  0EFA               	movlw	-6
 26673  013DCE  6AE3               	clrf	plusw1,c
 26674  013DD0  0EFB               	movlw	-5
 26675  013DD2  6AE3               	clrf	plusw1,c
 26676                           
 26677                           ;stkvar	_aexp @ sp[(-4)+2]
 26678                           ;stkvar	_bexp @ sp[(-4)+1]
 26679  013DD4  0EFE               	movlw	-2
 26680  013DD6  006F FF8C  F028    	movff	plusw1,btemp
 26681  013DDC  0EFD               	movlw	-3
 26682  013DDE  0060  F0A3  FFE3   	movff	btemp,plusw1
 26683  013DE4  D042               	goto	u5400
 26684  013DE6                     l7580:
 26685                           
 26686                           ;stkvar	_grs @ sp[(-4)+0]
 26687  013DE6  0EFC               	movlw	-4
 26688  013DE8  A0E3               	btfss	plusw1,0,c
 26689  013DEA  D00D               	goto	l7584
 26690                           
 26691                           ;stkvar	_grs @ sp[(-4)+0]
 26692  013DEC  0EFC               	movlw	-4
 26693  013DEE  006F FF8C  F033    	movff	plusw1,btemp+11
 26694  013DF4  90D8               	bcf	status,0,c
 26695  013DF6  3233               	rrcf	(btemp+11)^0,f,c
 26696  013DF8  0E01               	movlw	1
 26697  013DFA  1233               	iorwf	(btemp+11)^0,f,c
 26698                           
 26699                           ;stkvar	_grs @ sp[(-4)+0]
 26700  013DFC  0EFC               	movlw	-4
 26701  013DFE  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 26702  013E04  D009               	goto	l7586
 26703  013E06                     l7584:
 26704                           
 26705                           ;stkvar	_grs @ sp[(-4)+0]
 26706  013E06  50E1               	movf	fsr1l,w,c
 26707  013E08  0FFC               	addlw	-4
 26708  013E0A  6ED9               	movwf	fsr2l,c
 26709  013E0C  50E2               	movf	fsr1h,w,c
 26710  013E0E  6EDA               	movwf	fsr2h,c
 26711  013E10  0EFF               	movlw	255
 26712  013E12  22DA               	addwfc	fsr2h,f,c
 26713  013E14  90D8               	bcf	status,0,c
 26714  013E16  32DF               	rrcf	indf2,f,c
 26715  013E18                     l7586:
 26716                           
 26717                           ;stkvar	_b @ sp[(-4)+-4]
 26718  013E18  0EF8               	movlw	-8
 26719  013E1A  A0E3               	btfss	plusw1,0,c
 26720  013E1C  D002               	goto	l7590
 26721                           
 26722                           ;stkvar	_grs @ sp[(-4)+0]
 26723  013E1E  0EFC               	movlw	-4
 26724  013E20  8EE3               	bsf	plusw1,7,c
 26725  013E22                     l7590:
 26726  013E22  0E01               	movlw	1
 26727  013E24  6E33               	movwf	(btemp+11)^0,c
 26728                           
 26729                           ;stkvar	_b @ sp[(-4)+-4]
 26730  013E26  50E1               	movf	fsr1l,w,c
 26731  013E28  0FF8               	addlw	-8
 26732  013E2A  6ED9               	movwf	fsr2l,c
 26733  013E2C  50E2               	movf	fsr1h,w,c
 26734  013E2E  6EDA               	movwf	fsr2h,c
 26735  013E30  0EFF               	movlw	255
 26736  013E32  22DA               	addwfc	fsr2h,f,c
 26737  013E34  2833               	incf	(btemp+11)^0,w,c
 26738  013E36  52DE               	movf	postinc2,f,c
 26739  013E38  D008               	goto	u5390
 26740  013E3A                     u5395:
 26741  013E3A  52DE               	movf	postinc2,f,c
 26742  013E3C  90D8               	bcf	status,0,c
 26743  013E3E  BEDC               	btfsc	preinc2,7,c
 26744  013E40  80D8               	bsf	status,0,c
 26745  013E42  32DD               	rrcf	postdec2,f,c
 26746  013E44  32DD               	rrcf	postdec2,f,c
 26747  013E46  32DD               	rrcf	postdec2,f,c
 26748  013E48  32DE               	rrcf	postinc2,f,c
 26749  013E4A                     u5390:
 26750  013E4A  2EE8               	decfsz	wreg,f,c
 26751  013E4C  D7F6               	goto	u5395
 26752                           
 26753                           ;stkvar	_bexp @ sp[(-4)+1]
 26754  013E4E  0EFD               	movlw	-3
 26755  013E50  2AE3               	incf	plusw1,f,c
 26756  013E52                     l7594:
 26757                           
 26758                           ;stkvar	_aexp @ sp[(-4)+2]
 26759                           ;stkvar	_bexp @ sp[(-4)+1]
 26760  013E52  50E1               	movf	fsr1l,w,c
 26761  013E54  0FFD               	addlw	-3
 26762  013E56  6ED9               	movwf	fsr2l,c
 26763  013E58  50E2               	movf	fsr1h,w,c
 26764  013E5A  6EDA               	movwf	fsr2h,c
 26765  013E5C  0EFF               	movlw	255
 26766  013E5E  22DA               	addwfc	fsr2h,f,c
 26767  013E60  0EFE               	movlw	-2
 26768  013E62  50E3               	movf	plusw1,w,c
 26769  013E64  5CDE               	subwf	postinc2,w,c
 26770  013E66  A0D8               	btfss	status,0,c
 26771  013E68  D7BE               	goto	l7580
 26772  013E6A                     u5400:
 26773                           
 26774                           ;stkvar	_signs @ sp[(-4)+3]
 26775  013E6A  0EFF               	movlw	-1
 26776  013E6C  BCE3               	btfsc	plusw1,6,c
 26777  013E6E  D066               	goto	l7622
 26778                           
 26779                           ;stkvar	_bexp @ sp[(-4)+1]
 26780  013E70  0EFD               	movlw	-3
 26781  013E72  50E3               	movf	plusw1,w,c
 26782  013E74  B4D8               	btfsc	status,2,c
 26783  013E76  D0F2               	goto	u5500
 26784                           
 26785                           ;stkvar	_a @ sp[(-4)+-8]
 26786                           ;stkvar	_b @ sp[(-4)+-4]
 26787  013E78  0EF8               	movlw	-8
 26788  013E7A  50E3               	movf	plusw1,w,c
 26789  013E7C  6E28               	movwf	btemp^0,c
 26790  013E7E  0EF4               	movlw	-12
 26791  013E80  50E3               	movf	plusw1,w,c
 26792  013E82  2628               	addwf	btemp^0,f,c
 26793  013E84  0EF8               	movlw	-8
 26794  013E86  0060  F0A3  FFE3   	movff	btemp,plusw1
 26795  013E8C  0EF9               	movlw	-7
 26796  013E8E  50E3               	movf	plusw1,w,c
 26797  013E90  6E28               	movwf	btemp^0,c
 26798  013E92  0EF5               	movlw	-11
 26799  013E94  50E3               	movf	plusw1,w,c
 26800  013E96  2228               	addwfc	btemp^0,f,c
 26801  013E98  0EF9               	movlw	-7
 26802  013E9A  0060  F0A3  FFE3   	movff	btemp,plusw1
 26803  013EA0  0EFA               	movlw	-6
 26804  013EA2  50E3               	movf	plusw1,w,c
 26805  013EA4  6E28               	movwf	btemp^0,c
 26806  013EA6  0EF6               	movlw	-10
 26807  013EA8  50E3               	movf	plusw1,w,c
 26808  013EAA  2228               	addwfc	btemp^0,f,c
 26809  013EAC  0EFA               	movlw	-6
 26810  013EAE  0060  F0A3  FFE3   	movff	btemp,plusw1
 26811  013EB4  0EFB               	movlw	-5
 26812  013EB6  50E3               	movf	plusw1,w,c
 26813  013EB8  6E28               	movwf	btemp^0,c
 26814  013EBA  0EF7               	movlw	-9
 26815  013EBC  50E3               	movf	plusw1,w,c
 26816  013EBE  2228               	addwfc	btemp^0,f,c
 26817  013EC0  0EFB               	movlw	-5
 26818  013EC2  0060  F0A3  FFE3   	movff	btemp,plusw1
 26819                           
 26820                           ;stkvar	_b @ sp[(-4)+-4]
 26821  013EC8  0EFB               	movlw	-5
 26822  013ECA  A0E3               	btfss	plusw1,0,c
 26823  013ECC  D101               	goto	u5540
 26824                           
 26825                           ;stkvar	_grs @ sp[(-4)+0]
 26826  013ECE  0EFC               	movlw	-4
 26827  013ED0  A0E3               	btfss	plusw1,0,c
 26828  013ED2  D00D               	goto	l7612
 26829                           
 26830                           ;stkvar	_grs @ sp[(-4)+0]
 26831  013ED4  0EFC               	movlw	-4
 26832  013ED6  006F FF8C  F033    	movff	plusw1,btemp+11
 26833  013EDC  90D8               	bcf	status,0,c
 26834  013EDE  3233               	rrcf	(btemp+11)^0,f,c
 26835  013EE0  0E01               	movlw	1
 26836  013EE2  1233               	iorwf	(btemp+11)^0,f,c
 26837                           
 26838                           ;stkvar	_grs @ sp[(-4)+0]
 26839  013EE4  0EFC               	movlw	-4
 26840  013EE6  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 26841  013EEC  D009               	goto	l7614
 26842  013EEE                     l7612:
 26843                           
 26844                           ;stkvar	_grs @ sp[(-4)+0]
 26845  013EEE  50E1               	movf	fsr1l,w,c
 26846  013EF0  0FFC               	addlw	-4
 26847  013EF2  6ED9               	movwf	fsr2l,c
 26848  013EF4  50E2               	movf	fsr1h,w,c
 26849  013EF6  6EDA               	movwf	fsr2h,c
 26850  013EF8  0EFF               	movlw	255
 26851  013EFA  22DA               	addwfc	fsr2h,f,c
 26852  013EFC  90D8               	bcf	status,0,c
 26853  013EFE  32DF               	rrcf	indf2,f,c
 26854  013F00                     l7614:
 26855                           
 26856                           ;stkvar	_b @ sp[(-4)+-4]
 26857  013F00  0EF8               	movlw	-8
 26858  013F02  A0E3               	btfss	plusw1,0,c
 26859  013F04  D002               	goto	l7618
 26860                           
 26861                           ;stkvar	_grs @ sp[(-4)+0]
 26862  013F06  0EFC               	movlw	-4
 26863  013F08  8EE3               	bsf	plusw1,7,c
 26864  013F0A                     l7618:
 26865  013F0A  0E01               	movlw	1
 26866  013F0C  6E33               	movwf	(btemp+11)^0,c
 26867                           
 26868                           ;stkvar	_b @ sp[(-4)+-4]
 26869  013F0E  50E1               	movf	fsr1l,w,c
 26870  013F10  0FF8               	addlw	-8
 26871  013F12  6ED9               	movwf	fsr2l,c
 26872  013F14  50E2               	movf	fsr1h,w,c
 26873  013F16  6EDA               	movwf	fsr2h,c
 26874  013F18  0EFF               	movlw	255
 26875  013F1A  22DA               	addwfc	fsr2h,f,c
 26876  013F1C  2833               	incf	(btemp+11)^0,w,c
 26877  013F1E  52DE               	movf	postinc2,f,c
 26878  013F20  D008               	goto	u5460
 26879  013F22                     u5465:
 26880  013F22  52DE               	movf	postinc2,f,c
 26881  013F24  90D8               	bcf	status,0,c
 26882  013F26  BEDC               	btfsc	preinc2,7,c
 26883  013F28  80D8               	bsf	status,0,c
 26884  013F2A  32DD               	rrcf	postdec2,f,c
 26885  013F2C  32DD               	rrcf	postdec2,f,c
 26886  013F2E  32DD               	rrcf	postdec2,f,c
 26887  013F30  32DE               	rrcf	postinc2,f,c
 26888  013F32                     u5460:
 26889  013F32  2EE8               	decfsz	wreg,f,c
 26890  013F34  D7F6               	goto	u5465
 26891                           
 26892                           ;stkvar	_bexp @ sp[(-4)+1]
 26893  013F36  0EFD               	movlw	-3
 26894  013F38  2AE3               	incf	plusw1,f,c
 26895  013F3A  D0CA               	goto	u5540
 26896  013F3C                     l7622:
 26897                           
 26898                           ;stkvar	_a @ sp[(-4)+-8]
 26899                           ;stkvar	_b @ sp[(-4)+-4]
 26900  013F3C  50E1               	movf	fsr1l,w,c
 26901  013F3E  0FF8               	addlw	-8
 26902  013F40  6ED9               	movwf	fsr2l,c
 26903  013F42  50E2               	movf	fsr1h,w,c
 26904  013F44  6EDA               	movwf	fsr2h,c
 26905  013F46  0EFF               	movlw	255
 26906  013F48  22DA               	addwfc	fsr2h,f,c
 26907  013F4A  0EF4               	movlw	-12
 26908  013F4C  50E3               	movf	plusw1,w,c
 26909  013F4E  5CDE               	subwf	postinc2,w,c
 26910  013F50  0EF5               	movlw	-11
 26911  013F52  50E3               	movf	plusw1,w,c
 26912  013F54  58DE               	subwfb	postinc2,w,c
 26913  013F56  0EF6               	movlw	-10
 26914  013F58  50E3               	movf	plusw1,w,c
 26915  013F5A  58DE               	subwfb	postinc2,w,c
 26916  013F5C  50DE               	movf	postinc2,w,c
 26917  013F5E  0A80               	xorlw	128
 26918  013F60  6E28               	movwf	btemp^0,c
 26919  013F62  0EF7               	movlw	-9
 26920  013F64  50E3               	movf	plusw1,w,c
 26921  013F66  0A80               	xorlw	128
 26922  013F68  5828               	subwfb	btemp^0,w,c
 26923  013F6A  B0D8               	btfsc	status,0,c
 26924  013F6C  D053               	goto	l7634
 26925                           
 26926                           ;stkvar	_b @ sp[(-4)+-4]
 26927                           ;stkvar	_a @ sp[(-4)+-8]
 26928  013F6E  0EF4               	movlw	-12
 26929  013F70  006F FF8C  F030    	movff	plusw1,btemp+8
 26930  013F76  0EF5               	movlw	-11
 26931  013F78  006F FF8C  F031    	movff	plusw1,btemp+9
 26932  013F7E  0EF6               	movlw	-10
 26933  013F80  006F FF8C  F032    	movff	plusw1,btemp+10
 26934  013F86  0EF7               	movlw	-9
 26935  013F88  006F FF8C  F033    	movff	plusw1,btemp+11
 26936  013F8E  0EF8               	movlw	-8
 26937  013F90  50E3               	movf	plusw1,w,c
 26938  013F92  5E30               	subwf	(btemp+8)^0,f,c
 26939  013F94  0EF9               	movlw	-7
 26940  013F96  50E3               	movf	plusw1,w,c
 26941  013F98  5A31               	subwfb	(btemp+9)^0,f,c
 26942  013F9A  0EFA               	movlw	-6
 26943  013F9C  50E3               	movf	plusw1,w,c
 26944  013F9E  5A32               	subwfb	(btemp+10)^0,f,c
 26945  013FA0  0EFB               	movlw	-5
 26946  013FA2  50E3               	movf	plusw1,w,c
 26947  013FA4  5A33               	subwfb	(btemp+11)^0,f,c
 26948  013FA6  0EFF               	movlw	255
 26949  013FA8  2430               	addwf	(btemp+8)^0,w,c
 26950  013FAA  6E2C               	movwf	(btemp+4)^0,c
 26951  013FAC  0EFF               	movlw	255
 26952  013FAE  2031               	addwfc	(btemp+9)^0,w,c
 26953  013FB0  6E2D               	movwf	(btemp+5)^0,c
 26954  013FB2  0EFF               	movlw	255
 26955  013FB4  2032               	addwfc	(btemp+10)^0,w,c
 26956  013FB6  6E2E               	movwf	(btemp+6)^0,c
 26957  013FB8  0EFF               	movlw	255
 26958  013FBA  2033               	addwfc	(btemp+11)^0,w,c
 26959  013FBC  6E2F               	movwf	(btemp+7)^0,c
 26960                           
 26961                           ;stkvar	_b @ sp[(-4)+-4]
 26962  013FBE  0EF8               	movlw	-8
 26963  013FC0  0060  F0B3  FFE3   	movff	btemp+4,plusw1
 26964  013FC6  0EF9               	movlw	-7
 26965  013FC8  0060  F0B7  FFE3   	movff	btemp+5,plusw1
 26966  013FCE  0EFA               	movlw	-6
 26967  013FD0  0060  F0BB  FFE3   	movff	btemp+6,plusw1
 26968  013FD6  0EFB               	movlw	-5
 26969  013FD8  0060  F0BF  FFE3   	movff	btemp+7,plusw1
 26970                           
 26971                           ;stkvar	_signs @ sp[(-4)+3]
 26972  013FDE  0EFF               	movlw	-1
 26973  013FE0  7EE3               	btg	plusw1,7,c
 26974                           
 26975                           ;stkvar	_grs @ sp[(-4)+0]
 26976  013FE2  0EFC               	movlw	-4
 26977  013FE4  50E3               	movf	plusw1,w,c
 26978  013FE6  0800               	sublw	0
 26979  013FE8  6E33               	movwf	(btemp+11)^0,c
 26980                           
 26981                           ;stkvar	_grs @ sp[(-4)+0]
 26982  013FEA  0EFC               	movlw	-4
 26983  013FEC  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 26984                           
 26985                           ;stkvar	_grs @ sp[(-4)+0]
 26986  013FF2  0EFC               	movlw	-4
 26987  013FF4  50E3               	movf	plusw1,w,c
 26988  013FF6  A4D8               	btfss	status,2,c
 26989  013FF8  D020               	goto	l7636
 26990                           
 26991                           ;stkvar	_b @ sp[(-4)+-4]
 26992  013FFA  50E1               	movf	fsr1l,w,c
 26993  013FFC  0FF8               	addlw	-8
 26994  013FFE  6ED9               	movwf	fsr2l,c
 26995  014000  50E2               	movf	fsr1h,w,c
 26996  014002  6EDA               	movwf	fsr2h,c
 26997  014004  0EFF               	movlw	255
 26998  014006  22DA               	addwfc	fsr2h,f,c
 26999  014008  2ADE               	incf	postinc2,f,c
 27000  01400A  0E00               	movlw	0
 27001  01400C  22DE               	addwfc	postinc2,f,c
 27002  01400E  22DE               	addwfc	postinc2,f,c
 27003  014010  22DE               	addwfc	postinc2,f,c
 27004  014012  D013               	goto	l7636
 27005  014014                     l7634:
 27006                           
 27007                           ;stkvar	_a @ sp[(-4)+-8]
 27008                           ;stkvar	_b @ sp[(-4)+-4]
 27009  014014  50E1               	movf	fsr1l,w,c
 27010  014016  0FF8               	addlw	-8
 27011  014018  6ED9               	movwf	fsr2l,c
 27012  01401A  50E2               	movf	fsr1h,w,c
 27013  01401C  6EDA               	movwf	fsr2h,c
 27014  01401E  0EFF               	movlw	255
 27015  014020  22DA               	addwfc	fsr2h,f,c
 27016  014022  0EF4               	movlw	-12
 27017  014024  50E3               	movf	plusw1,w,c
 27018  014026  5EDE               	subwf	postinc2,f,c
 27019  014028  0EF5               	movlw	-11
 27020  01402A  50E3               	movf	plusw1,w,c
 27021  01402C  5ADE               	subwfb	postinc2,f,c
 27022  01402E  0EF6               	movlw	-10
 27023  014030  50E3               	movf	plusw1,w,c
 27024  014032  5ADE               	subwfb	postinc2,f,c
 27025  014034  0EF7               	movlw	-9
 27026  014036  50E3               	movf	plusw1,w,c
 27027  014038  5ADE               	subwfb	postinc2,f,c
 27028  01403A                     l7636:
 27029                           
 27030                           ;stkvar	_b @ sp[(-4)+-4]
 27031  01403A  0EF8               	movlw	-8
 27032  01403C  50E3               	movf	plusw1,w,c
 27033  01403E  E145               	bnz	l7658
 27034  014040  0EF9               	movlw	-7
 27035  014042  50E3               	movf	plusw1,w,c
 27036  014044  E142               	bnz	l7658
 27037  014046  0EFA               	movlw	-6
 27038  014048  50E3               	movf	plusw1,w,c
 27039  01404A  E13F               	bnz	l7658
 27040  01404C  0EFB               	movlw	-5
 27041  01404E  50E3               	movf	plusw1,w,c
 27042  014050  A4D8               	btfss	status,2,c
 27043  014052  D03B               	goto	l7658
 27044                           
 27045                           ;stkvar	_grs @ sp[(-4)+0]
 27046  014054  0EFC               	movlw	-4
 27047  014056  50E3               	movf	plusw1,w,c
 27048  014058  A4D8               	btfss	status,2,c
 27049  01405A  D037               	goto	l7658
 27050  01405C                     u5500:
 27051  01405C  0E00               	movlw	0
 27052  01405E  6E28               	movwf	btemp^0,c
 27053  014060  0E00               	movlw	0
 27054  014062  6E29               	movwf	(btemp+1)^0,c
 27055  014064  0E00               	movlw	0
 27056  014066  6E2A               	movwf	(btemp+2)^0,c
 27057  014068  0E00               	movlw	0
 27058  01406A  6E2B               	movwf	(btemp+3)^0,c
 27059  01406C  D0C6               	goto	l2900
 27060  01406E                     l7644:
 27061                           
 27062                           ;stkvar	_b @ sp[(-4)+-4]
 27063  01406E  90D8               	bcf	status,0,c
 27064  014070  0EF8               	movlw	-8
 27065  014072  36E3               	rlcf	plusw1,f,c
 27066  014074  0EF9               	movlw	-7
 27067  014076  36E3               	rlcf	plusw1,f,c
 27068  014078  0EFA               	movlw	-6
 27069  01407A  36E3               	rlcf	plusw1,f,c
 27070  01407C  0EFB               	movlw	-5
 27071  01407E  36E3               	rlcf	plusw1,f,c
 27072                           
 27073                           ;stkvar	_grs @ sp[(-4)+0]
 27074  014080  0EFC               	movlw	-4
 27075  014082  AEE3               	btfss	plusw1,7,c
 27076  014084  D002               	goto	l2912
 27077                           
 27078                           ;stkvar	_b @ sp[(-4)+-4]
 27079  014086  0EF8               	movlw	-8
 27080  014088  80E3               	bsf	plusw1,0,c
 27081  01408A                     l2912:
 27082                           
 27083                           ;stkvar	_grs @ sp[(-4)+0]
 27084  01408A  0EFC               	movlw	-4
 27085  01408C  A0E3               	btfss	plusw1,0,c
 27086  01408E  D00E               	goto	l7652
 27087                           
 27088                           ;stkvar	_grs @ sp[(-4)+0]
 27089  014090  0EFC               	movlw	-4
 27090  014092  006F FF8C  F033    	movff	plusw1,btemp+11
 27091  014098  90D8               	bcf	status,0,c
 27092  01409A  3433               	rlcf	(btemp+11)^0,w,c
 27093  01409C  6E32               	movwf	(btemp+10)^0,c
 27094  01409E  0E01               	movlw	1
 27095  0140A0  1232               	iorwf	(btemp+10)^0,f,c
 27096                           
 27097                           ;stkvar	_grs @ sp[(-4)+0]
 27098  0140A2  0EFC               	movlw	-4
 27099  0140A4  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 27100  0140AA  D009               	goto	l7654
 27101  0140AC                     l7652:
 27102                           
 27103                           ;stkvar	_grs @ sp[(-4)+0]
 27104  0140AC  50E1               	movf	fsr1l,w,c
 27105  0140AE  0FFC               	addlw	-4
 27106  0140B0  6ED9               	movwf	fsr2l,c
 27107  0140B2  50E2               	movf	fsr1h,w,c
 27108  0140B4  6EDA               	movwf	fsr2h,c
 27109  0140B6  0EFF               	movlw	255
 27110  0140B8  22DA               	addwfc	fsr2h,f,c
 27111  0140BA  90D8               	bcf	status,0,c
 27112  0140BC  36DF               	rlcf	indf2,f,c
 27113  0140BE                     l7654:
 27114                           
 27115                           ;stkvar	_bexp @ sp[(-4)+1]
 27116  0140BE  0EFD               	movlw	-3
 27117  0140C0  50E3               	movf	plusw1,w,c
 27118  0140C2  B4D8               	btfsc	status,2,c
 27119  0140C4  D002               	goto	l7658
 27120                           
 27121                           ;stkvar	_bexp @ sp[(-4)+1]
 27122  0140C6  0EFD               	movlw	-3
 27123  0140C8  06E3               	decf	plusw1,f,c
 27124  0140CA                     l7658:
 27125                           
 27126                           ;stkvar	_b @ sp[(-4)+-4]
 27127  0140CA  0EFA               	movlw	-6
 27128  0140CC  AEE3               	btfss	plusw1,7,c
 27129  0140CE  D7CF               	goto	l7644
 27130  0140D0                     u5540:
 27131                           
 27132                           ;stkvar	_aexp @ sp[(-4)+2]
 27133  0140D0  0EFE               	movlw	-2
 27134  0140D2  6AE3               	clrf	plusw1,c
 27135                           
 27136                           ;stkvar	_grs @ sp[(-4)+0]
 27137  0140D4  0EFC               	movlw	-4
 27138  0140D6  AEE3               	btfss	plusw1,7,c
 27139  0140D8  D00F               	goto	l7672
 27140                           
 27141                           ;stkvar	_grs @ sp[(-4)+0]
 27142  0140DA  0EFC               	movlw	-4
 27143  0140DC  006F FF8C  F033    	movff	plusw1,btemp+11
 27144  0140E2  0E7F               	movlw	127
 27145  0140E4  1633               	andwf	(btemp+11)^0,f,c
 27146  0140E6  B4D8               	btfsc	status,2,c
 27147  0140E8  D004               	goto	l7668
 27148  0140EA                     u5560:
 27149                           
 27150                           ;stkvar	_aexp @ sp[(-4)+2]
 27151  0140EA  0EFE               	movlw	-2
 27152  0140EC  6AE3               	clrf	plusw1,c
 27153  0140EE  2AE3               	incf	plusw1,f,c
 27154  0140F0  D003               	goto	l7672
 27155  0140F2                     l7668:
 27156                           
 27157                           ;stkvar	_b @ sp[(-4)+-4]
 27158  0140F2  0EF8               	movlw	-8
 27159  0140F4  B0E3               	btfsc	plusw1,0,c
 27160  0140F6  D7F9               	goto	u5560
 27161  0140F8                     l7672:
 27162                           
 27163                           ;stkvar	_aexp @ sp[(-4)+2]
 27164  0140F8  0EFE               	movlw	-2
 27165  0140FA  50E3               	movf	plusw1,w,c
 27166  0140FC  B4D8               	btfsc	status,2,c
 27167  0140FE  D02B               	goto	l7684
 27168                           
 27169                           ;stkvar	_b @ sp[(-4)+-4]
 27170  014100  50E1               	movf	fsr1l,w,c
 27171  014102  0FF8               	addlw	-8
 27172  014104  6ED9               	movwf	fsr2l,c
 27173  014106  50E2               	movf	fsr1h,w,c
 27174  014108  6EDA               	movwf	fsr2h,c
 27175  01410A  0EFF               	movlw	255
 27176  01410C  22DA               	addwfc	fsr2h,f,c
 27177  01410E  2ADE               	incf	postinc2,f,c
 27178  014110  0E00               	movlw	0
 27179  014112  22DE               	addwfc	postinc2,f,c
 27180  014114  22DE               	addwfc	postinc2,f,c
 27181  014116  22DE               	addwfc	postinc2,f,c
 27182                           
 27183                           ;stkvar	_b @ sp[(-4)+-4]
 27184  014118  0EFB               	movlw	-5
 27185  01411A  A0E3               	btfss	plusw1,0,c
 27186  01411C  D01C               	goto	l7684
 27187  01411E  0E01               	movlw	1
 27188  014120  6E33               	movwf	(btemp+11)^0,c
 27189                           
 27190                           ;stkvar	_b @ sp[(-4)+-4]
 27191  014122  50E1               	movf	fsr1l,w,c
 27192  014124  0FF8               	addlw	-8
 27193  014126  6ED9               	movwf	fsr2l,c
 27194  014128  50E2               	movf	fsr1h,w,c
 27195  01412A  6EDA               	movwf	fsr2h,c
 27196  01412C  0EFF               	movlw	255
 27197  01412E  22DA               	addwfc	fsr2h,f,c
 27198  014130  2833               	incf	(btemp+11)^0,w,c
 27199  014132  52DE               	movf	postinc2,f,c
 27200  014134  D008               	goto	u5600
 27201  014136                     u5605:
 27202  014136  52DE               	movf	postinc2,f,c
 27203  014138  90D8               	bcf	status,0,c
 27204  01413A  BEDC               	btfsc	preinc2,7,c
 27205  01413C  80D8               	bsf	status,0,c
 27206  01413E  32DD               	rrcf	postdec2,f,c
 27207  014140  32DD               	rrcf	postdec2,f,c
 27208  014142  32DD               	rrcf	postdec2,f,c
 27209  014144  32DE               	rrcf	postinc2,f,c
 27210  014146                     u5600:
 27211  014146  2EE8               	decfsz	wreg,f,c
 27212  014148  D7F6               	goto	u5605
 27213                           
 27214                           ;stkvar	_bexp @ sp[(-4)+1]
 27215  01414A  0EFD               	movlw	-3
 27216  01414C  28E3               	incf	plusw1,w,c
 27217  01414E  B4D8               	btfsc	status,2,c
 27218  014150  D002               	goto	l7684
 27219                           
 27220                           ;stkvar	_bexp @ sp[(-4)+1]
 27221  014152  0EFD               	movlw	-3
 27222  014154  2AE3               	incf	plusw1,f,c
 27223  014156                     l7684:
 27224                           
 27225                           ;stkvar	_bexp @ sp[(-4)+1]
 27226  014156  0EFD               	movlw	-3
 27227  014158  28E3               	incf	plusw1,w,c
 27228  01415A  B4D8               	btfsc	status,2,c
 27229  01415C  D004               	goto	u5630
 27230                           
 27231                           ;stkvar	_bexp @ sp[(-4)+1]
 27232  01415E  0EFD               	movlw	-3
 27233  014160  50E3               	movf	plusw1,w,c
 27234  014162  A4D8               	btfss	status,2,c
 27235  014164  D00E               	goto	l7694
 27236  014166                     u5630:
 27237                           
 27238                           ;stkvar	_b @ sp[(-4)+-4]
 27239  014166  0EF8               	movlw	-8
 27240  014168  6AE3               	clrf	plusw1,c
 27241  01416A  0EF9               	movlw	-7
 27242  01416C  6AE3               	clrf	plusw1,c
 27243  01416E  0EFA               	movlw	-6
 27244  014170  6AE3               	clrf	plusw1,c
 27245  014172  0EFB               	movlw	-5
 27246  014174  6AE3               	clrf	plusw1,c
 27247                           
 27248                           ;stkvar	_bexp @ sp[(-4)+1]
 27249  014176  0EFD               	movlw	-3
 27250  014178  50E3               	movf	plusw1,w,c
 27251  01417A  A4D8               	btfss	status,2,c
 27252  01417C  D002               	goto	l7694
 27253                           
 27254                           ;stkvar	_signs @ sp[(-4)+3]
 27255  01417E  0EFF               	movlw	-1
 27256  014180  6AE3               	clrf	plusw1,c
 27257  014182                     l7694:
 27258                           
 27259                           ;stkvar	_bexp @ sp[(-4)+1]
 27260  014182  0EFD               	movlw	-3
 27261  014184  A0E3               	btfss	plusw1,0,c
 27262  014186  D009               	goto	l7698
 27263                           
 27264                           ;stkvar	_b @ sp[(-4)+-4]
 27265  014188  0EFA               	movlw	250
 27266  01418A  24E1               	addwf	fsr1l,w,c
 27267  01418C  6ED9               	movwf	fsr2l,c
 27268  01418E  0EFF               	movlw	255
 27269  014190  20E2               	addwfc	fsr1h,w,c
 27270  014192  6EDA               	movwf	fsr2h,c
 27271  014194  0E00               	movlw	0
 27272  014196  8EDB               	bsf	plusw2,7,c
 27273  014198  D008               	goto	l7700
 27274  01419A                     l7698:
 27275                           
 27276                           ;stkvar	_b @ sp[(-4)+-4]
 27277  01419A  0EFA               	movlw	250
 27278  01419C  24E1               	addwf	fsr1l,w,c
 27279  01419E  6ED9               	movwf	fsr2l,c
 27280  0141A0  0EFF               	movlw	255
 27281  0141A2  20E2               	addwfc	fsr1h,w,c
 27282  0141A4  6EDA               	movwf	fsr2h,c
 27283  0141A6  0E7F               	movlw	127
 27284  0141A8  16DF               	andwf	indf2,f,c
 27285  0141AA                     l7700:
 27286                           
 27287                           ;stkvar	_b @ sp[(-4)+-4]
 27288  0141AA  0EFB               	movlw	251
 27289  0141AC  24E1               	addwf	fsr1l,w,c
 27290  0141AE  6ED9               	movwf	fsr2l,c
 27291  0141B0  0EFF               	movlw	255
 27292  0141B2  20E2               	addwfc	fsr1h,w,c
 27293  0141B4  6EDA               	movwf	fsr2h,c
 27294                           
 27295                           ;stkvar	_bexp @ sp[(-4)+1]
 27296  0141B6  0EFD               	movlw	-3
 27297  0141B8  006F FF8C  F033    	movff	plusw1,btemp+11
 27298  0141BE  90D8               	bcf	status,0,c
 27299  0141C0  3033               	rrcf	(btemp+11)^0,w,c
 27300  0141C2  6EDF               	movwf	indf2,c
 27301                           
 27302                           ;stkvar	_signs @ sp[(-4)+3]
 27303  0141C4  0EFF               	movlw	-1
 27304  0141C6  AEE3               	btfss	plusw1,7,c
 27305  0141C8  D008               	goto	l7706
 27306                           
 27307                           ;stkvar	_b @ sp[(-4)+-4]
 27308  0141CA  0EFB               	movlw	251
 27309  0141CC  24E1               	addwf	fsr1l,w,c
 27310  0141CE  6ED9               	movwf	fsr2l,c
 27311  0141D0  0EFF               	movlw	255
 27312  0141D2  20E2               	addwfc	fsr1h,w,c
 27313  0141D4  6EDA               	movwf	fsr2h,c
 27314  0141D6  0E00               	movlw	0
 27315  0141D8  8EDB               	bsf	plusw2,7,c
 27316  0141DA                     l7706:
 27317                           
 27318                           ;stkvar	_b @ sp[(-4)+-4]
 27319  0141DA  0EF8               	movlw	-8
 27320  0141DC  006F FF8C  F028    	movff	plusw1,btemp
 27321  0141E2  0EF9               	movlw	-7
 27322  0141E4  006F FF8C  F029    	movff	plusw1,btemp+1
 27323  0141EA  0EFA               	movlw	-6
 27324  0141EC  006F FF8C  F02A    	movff	plusw1,btemp+2
 27325  0141F2  0EFB               	movlw	-5
 27326  0141F4  006F FF8C  F02B    	movff	plusw1,btemp+3
 27327  0141FA                     l2900:
 27328                           
 27329                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 27330  0141FA  0EF4               	movlw	244
 27331  0141FC  26E1               	addwf	fsr1l,f,c
 27332  0141FE  0EFF               	movlw	255
 27333  014200  22E2               	addwfc	fsr1h,f,c
 27334  014202  0012               	return		;funcret
 27335  014204                     __end_of___fladd:
 27336                           	opt callstack 0
 27337                           
 27338 ;; *************** function ___flmul *****************
 27339 ;; Defined at:
 27340 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 27341 ;; Parameters:    Size  Location     Type
 27342 ;;  b               4  [STACK] unsigned char 
 27343 ;;  a               4  [STACK] unsigned char 
 27344 ;; Auto vars:     Size  Location     Type
 27345 ;;  prod            4  [STACK] struct .
 27346 ;;  grs             4  [STACK] unsigned long 
 27347 ;;  temp            2  [STACK] struct .
 27348 ;;  bexp            1  [STACK] unsigned char 
 27349 ;;  aexp            1  [STACK] unsigned char 
 27350 ;;  sign            1  [STACK] unsigned char 
 27351 ;; Return value:  Size  Location     Type
 27352 ;;                  4  [STACK] unsigned char 
 27353 ;; Registers used:
 27354 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 27355 ;; Tracked objects:
 27356 ;;		On entry : 0/1
 27357 ;;		On exit  : 0/0
 27358 ;;		Unchanged: 0/0
 27359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27363 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27364 ;;Total ram usage:        0 bytes
 27365 ;; Hardware stack levels used:    1
 27366 ;; Hardware stack levels required when called:   15
 27367 ;; This function calls:
 27368 ;;		Nothing
 27369 ;; This function is called by:
 27370 ;;		_conv_raw_result
 27371 ;;		_lp_filter
 27372 ;;		_calc_model_data
 27373 ;;		_calc_bsoc
 27374 ;;		_init_bsoc
 27375 ;;		_efgtoa
 27376 ;; This function uses a reentrant model
 27377 ;;
 27378                           
 27379                           	psect	text106
 27380  01321E                     __ptext106:
 27381                           	opt callstack 0
 27382  01321E                     ___flmul:
 27383                           	opt callstack 0
 27384                           
 27385                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 27386  01321E  0E0D               	movlw	13
 27387  013220  26E1               	addwf	fsr1l,f,c
 27388  013222  0E00               	movlw	0
 27389  013224  22E2               	addwfc	fsr1h,f,c
 27390                           
 27391                           ;stkvar	_b @ sp[(-13)+-4]
 27392                           
 27393                           ;incstack = 0
 27394 ;; hardware stack exceeded
 27395  013226  0EF2               	movlw	242
 27396  013228  24E1               	addwf	fsr1l,w,c
 27397  01322A  6ED9               	movwf	fsr2l,c
 27398  01322C  0EFF               	movlw	255
 27399  01322E  20E2               	addwfc	fsr1h,w,c
 27400  013230  6EDA               	movwf	fsr2h,c
 27401  013232  50DF               	movf	indf2,w,c
 27402  013234  6E33               	movwf	(btemp+11)^0,c
 27403  013236  0E80               	movlw	128
 27404  013238  1633               	andwf	(btemp+11)^0,f,c
 27405                           
 27406                           ;stkvar	_sign @ sp[(-13)+12]
 27407  01323A  0EFF               	movlw	-1
 27408  01323C  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 27409                           
 27410                           ;stkvar	_b @ sp[(-13)+-4]
 27411  013242  0EF2               	movlw	242
 27412  013244  24E1               	addwf	fsr1l,w,c
 27413  013246  6ED9               	movwf	fsr2l,c
 27414  013248  0EFF               	movlw	255
 27415  01324A  20E2               	addwfc	fsr1h,w,c
 27416  01324C  6EDA               	movwf	fsr2h,c
 27417  01324E  50DF               	movf	indf2,w,c
 27418  013250  6E33               	movwf	(btemp+11)^0,c
 27419  013252  90D8               	bcf	status,0,c
 27420  013254  3433               	rlcf	(btemp+11)^0,w,c
 27421  013256  6E32               	movwf	(btemp+10)^0,c
 27422                           
 27423                           ;stkvar	_bexp @ sp[(-13)+10]
 27424  013258  0EFD               	movlw	-3
 27425  01325A  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 27426                           
 27427                           ;stkvar	_b @ sp[(-13)+-4]
 27428  013260  0EF1               	movlw	241
 27429  013262  24E1               	addwf	fsr1l,w,c
 27430  013264  6ED9               	movwf	fsr2l,c
 27431  013266  0EFF               	movlw	255
 27432  013268  20E2               	addwfc	fsr1h,w,c
 27433  01326A  6EDA               	movwf	fsr2h,c
 27434  01326C  AEDF               	btfss	indf2,7,c
 27435  01326E  D002               	goto	l8090
 27436                           
 27437                           ;stkvar	_bexp @ sp[(-13)+10]
 27438  013270  0EFD               	movlw	-3
 27439  013272  80E3               	bsf	plusw1,0,c
 27440  013274                     l8090:
 27441                           
 27442                           ;stkvar	_bexp @ sp[(-13)+10]
 27443  013274  0EFD               	movlw	-3
 27444  013276  50E3               	movf	plusw1,w,c
 27445  013278  B4D8               	btfsc	status,2,c
 27446  01327A  D01F               	goto	l8098
 27447                           
 27448                           ;stkvar	_bexp @ sp[(-13)+10]
 27449  01327C  0EFD               	movlw	-3
 27450  01327E  28E3               	incf	plusw1,w,c
 27451  013280  A4D8               	btfss	status,2,c
 27452  013282  D018               	goto	l8096
 27453  013284  0E00               	movlw	0
 27454  013286  6E30               	movwf	(btemp+8)^0,c
 27455  013288  0E00               	movlw	0
 27456  01328A  6E31               	movwf	(btemp+9)^0,c
 27457  01328C  0E00               	movlw	0
 27458  01328E  6E32               	movwf	(btemp+10)^0,c
 27459  013290  0E00               	movlw	0
 27460  013292  6E33               	movwf	(btemp+11)^0,c
 27461                           
 27462                           ;stkvar	_b @ sp[(-13)+-4]
 27463  013294  0EEF               	movlw	-17
 27464  013296  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 27465  01329C  0EF0               	movlw	-16
 27466  01329E  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 27467  0132A4  0EF1               	movlw	-15
 27468  0132A6  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 27469  0132AC  0EF2               	movlw	-14
 27470  0132AE  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 27471  0132B4                     l8096:
 27472                           
 27473                           ;stkvar	_b @ sp[(-13)+-4]
 27474  0132B4  0EF1               	movlw	-15
 27475  0132B6  8EE3               	bsf	plusw1,7,c
 27476  0132B8  D018               	goto	l8100
 27477  0132BA                     l8098:
 27478  0132BA  0E00               	movlw	0
 27479  0132BC  6E30               	movwf	(btemp+8)^0,c
 27480  0132BE  0E00               	movlw	0
 27481  0132C0  6E31               	movwf	(btemp+9)^0,c
 27482  0132C2  0E00               	movlw	0
 27483  0132C4  6E32               	movwf	(btemp+10)^0,c
 27484  0132C6  0E00               	movlw	0
 27485  0132C8  6E33               	movwf	(btemp+11)^0,c
 27486                           
 27487                           ;stkvar	_b @ sp[(-13)+-4]
 27488  0132CA  0EEF               	movlw	-17
 27489  0132CC  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 27490  0132D2  0EF0               	movlw	-16
 27491  0132D4  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 27492  0132DA  0EF1               	movlw	-15
 27493  0132DC  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 27494  0132E2  0EF2               	movlw	-14
 27495  0132E4  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 27496  0132EA                     l8100:
 27497                           
 27498                           ;stkvar	_a @ sp[(-13)+-8]
 27499  0132EA  0EEE               	movlw	238
 27500  0132EC  24E1               	addwf	fsr1l,w,c
 27501  0132EE  6ED9               	movwf	fsr2l,c
 27502  0132F0  0EFF               	movlw	255
 27503  0132F2  20E2               	addwfc	fsr1h,w,c
 27504  0132F4  6EDA               	movwf	fsr2h,c
 27505  0132F6  50DF               	movf	indf2,w,c
 27506  0132F8  6E33               	movwf	(btemp+11)^0,c
 27507  0132FA  0E80               	movlw	128
 27508  0132FC  1633               	andwf	(btemp+11)^0,f,c
 27509                           
 27510                           ;stkvar	_sign @ sp[(-13)+12]
 27511  0132FE  50E1               	movf	fsr1l,w,c
 27512  013300  0FFF               	addlw	-1
 27513  013302  6ED9               	movwf	fsr2l,c
 27514  013304  50E2               	movf	fsr1h,w,c
 27515  013306  6EDA               	movwf	fsr2h,c
 27516  013308  0EFF               	movlw	255
 27517  01330A  22DA               	addwfc	fsr2h,f,c
 27518  01330C  5033               	movf	(btemp+11)^0,w,c
 27519  01330E  1ADF               	xorwf	indf2,f,c
 27520                           
 27521                           ;stkvar	_a @ sp[(-13)+-8]
 27522  013310  0EEE               	movlw	238
 27523  013312  24E1               	addwf	fsr1l,w,c
 27524  013314  6ED9               	movwf	fsr2l,c
 27525  013316  0EFF               	movlw	255
 27526  013318  20E2               	addwfc	fsr1h,w,c
 27527  01331A  6EDA               	movwf	fsr2h,c
 27528  01331C  50DF               	movf	indf2,w,c
 27529  01331E  6E33               	movwf	(btemp+11)^0,c
 27530  013320  90D8               	bcf	status,0,c
 27531  013322  3433               	rlcf	(btemp+11)^0,w,c
 27532  013324  6E32               	movwf	(btemp+10)^0,c
 27533                           
 27534                           ;stkvar	_aexp @ sp[(-13)+11]
 27535  013326  0EFE               	movlw	-2
 27536  013328  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 27537                           
 27538                           ;stkvar	_a @ sp[(-13)+-8]
 27539  01332E  0EED               	movlw	237
 27540  013330  24E1               	addwf	fsr1l,w,c
 27541  013332  6ED9               	movwf	fsr2l,c
 27542  013334  0EFF               	movlw	255
 27543  013336  20E2               	addwfc	fsr1h,w,c
 27544  013338  6EDA               	movwf	fsr2h,c
 27545  01333A  AEDF               	btfss	indf2,7,c
 27546  01333C  D002               	goto	l8108
 27547                           
 27548                           ;stkvar	_aexp @ sp[(-13)+11]
 27549  01333E  0EFE               	movlw	-2
 27550  013340  80E3               	bsf	plusw1,0,c
 27551  013342                     l8108:
 27552                           
 27553                           ;stkvar	_aexp @ sp[(-13)+11]
 27554  013342  0EFE               	movlw	-2
 27555  013344  50E3               	movf	plusw1,w,c
 27556  013346  B4D8               	btfsc	status,2,c
 27557  013348  D01F               	goto	l8116
 27558                           
 27559                           ;stkvar	_aexp @ sp[(-13)+11]
 27560  01334A  0EFE               	movlw	-2
 27561  01334C  28E3               	incf	plusw1,w,c
 27562  01334E  A4D8               	btfss	status,2,c
 27563  013350  D018               	goto	l8114
 27564  013352  0E00               	movlw	0
 27565  013354  6E30               	movwf	(btemp+8)^0,c
 27566  013356  0E00               	movlw	0
 27567  013358  6E31               	movwf	(btemp+9)^0,c
 27568  01335A  0E00               	movlw	0
 27569  01335C  6E32               	movwf	(btemp+10)^0,c
 27570  01335E  0E00               	movlw	0
 27571  013360  6E33               	movwf	(btemp+11)^0,c
 27572                           
 27573                           ;stkvar	_a @ sp[(-13)+-8]
 27574  013362  0EEB               	movlw	-21
 27575  013364  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 27576  01336A  0EEC               	movlw	-20
 27577  01336C  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 27578  013372  0EED               	movlw	-19
 27579  013374  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 27580  01337A  0EEE               	movlw	-18
 27581  01337C  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 27582  013382                     l8114:
 27583                           
 27584                           ;stkvar	_a @ sp[(-13)+-8]
 27585  013382  0EED               	movlw	-19
 27586  013384  8EE3               	bsf	plusw1,7,c
 27587  013386  D018               	goto	l8118
 27588  013388                     l8116:
 27589  013388  0E00               	movlw	0
 27590  01338A  6E30               	movwf	(btemp+8)^0,c
 27591  01338C  0E00               	movlw	0
 27592  01338E  6E31               	movwf	(btemp+9)^0,c
 27593  013390  0E00               	movlw	0
 27594  013392  6E32               	movwf	(btemp+10)^0,c
 27595  013394  0E00               	movlw	0
 27596  013396  6E33               	movwf	(btemp+11)^0,c
 27597                           
 27598                           ;stkvar	_a @ sp[(-13)+-8]
 27599  013398  0EEB               	movlw	-21
 27600  01339A  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 27601  0133A0  0EEC               	movlw	-20
 27602  0133A2  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 27603  0133A8  0EED               	movlw	-19
 27604  0133AA  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 27605  0133B0  0EEE               	movlw	-18
 27606  0133B2  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 27607  0133B8                     l8118:
 27608                           
 27609                           ;stkvar	_aexp @ sp[(-13)+11]
 27610  0133B8  0EFE               	movlw	-2
 27611  0133BA  50E3               	movf	plusw1,w,c
 27612  0133BC  B4D8               	btfsc	status,2,c
 27613  0133BE  D004               	goto	u6570
 27614                           
 27615                           ;stkvar	_bexp @ sp[(-13)+10]
 27616  0133C0  0EFD               	movlw	-3
 27617  0133C2  50E3               	movf	plusw1,w,c
 27618  0133C4  A4D8               	btfss	status,2,c
 27619  0133C6  D009               	goto	l8126
 27620  0133C8                     u6570:
 27621  0133C8  0E00               	movlw	0
 27622  0133CA  6E28               	movwf	btemp^0,c
 27623  0133CC  0E00               	movlw	0
 27624  0133CE  6E29               	movwf	(btemp+1)^0,c
 27625  0133D0  0E00               	movlw	0
 27626  0133D2  6E2A               	movwf	(btemp+2)^0,c
 27627  0133D4  0E00               	movlw	0
 27628  0133D6  6E2B               	movwf	(btemp+3)^0,c
 27629  0133D8  D332               	goto	l2981
 27630  0133DA                     l8126:
 27631                           
 27632                           ;stkvar	_b @ sp[(-13)+-4]
 27633  0133DA  0EEF               	movlw	-17
 27634  0133DC  006F FF8C  F033    	movff	plusw1,btemp+11
 27635                           
 27636                           ;stkvar	_a @ sp[(-13)+-8]
 27637  0133E2  0EED               	movlw	237
 27638  0133E4  24E1               	addwf	fsr1l,w,c
 27639  0133E6  6ED9               	movwf	fsr2l,c
 27640  0133E8  0EFF               	movlw	255
 27641  0133EA  20E2               	addwfc	fsr1h,w,c
 27642  0133EC  6EDA               	movwf	fsr2h,c
 27643  0133EE  50DF               	movf	indf2,w,c
 27644  0133F0  0233               	mulwf	(btemp+11)^0,c
 27645                           
 27646                           ;stkvar	_temp @ sp[(-13)+8]
 27647  0133F2  0EFB               	movlw	-5
 27648  0133F4  006F FFCF FFE3     	movff	prodl,plusw1
 27649  0133FA  0EFC               	movlw	-4
 27650  0133FC  006F FFD3 FFE3     	movff	prodh,plusw1
 27651                           
 27652                           ;stkvar	_temp @ sp[(-13)+8]
 27653  013402  0EFB               	movlw	-5
 27654  013404  006F FF8C  F033    	movff	plusw1,btemp+11
 27655  01340A  0060  F0CC  F02C   	movff	btemp+11,btemp+4
 27656  013410  6A2D               	clrf	(btemp+5)^0,c
 27657  013412  6A2E               	clrf	(btemp+6)^0,c
 27658  013414  6A2F               	clrf	(btemp+7)^0,c
 27659                           
 27660                           ;stkvar	_grs @ sp[(-13)+4]
 27661  013416  0EF7               	movlw	-9
 27662  013418  0060  F0B3  FFE3   	movff	btemp+4,plusw1
 27663  01341E  0EF8               	movlw	-8
 27664  013420  0060  F0B7  FFE3   	movff	btemp+5,plusw1
 27665  013426  0EF9               	movlw	-7
 27666  013428  0060  F0BB  FFE3   	movff	btemp+6,plusw1
 27667  01342E  0EFA               	movlw	-6
 27668  013430  0060  F0BF  FFE3   	movff	btemp+7,plusw1
 27669                           
 27670                           ;stkvar	_temp @ sp[(-13)+8]
 27671  013436  0EFC               	movlw	252
 27672  013438  24E1               	addwf	fsr1l,w,c
 27673  01343A  6ED9               	movwf	fsr2l,c
 27674  01343C  0EFF               	movlw	255
 27675  01343E  20E2               	addwfc	fsr1h,w,c
 27676  013440  6EDA               	movwf	fsr2h,c
 27677  013442  50DF               	movf	indf2,w,c
 27678  013444  6E33               	movwf	(btemp+11)^0,c
 27679  013446  0060  F0CC  F02C   	movff	btemp+11,btemp+4
 27680  01344C  6A2D               	clrf	(btemp+5)^0,c
 27681  01344E  6A2E               	clrf	(btemp+6)^0,c
 27682  013450  6A2F               	clrf	(btemp+7)^0,c
 27683                           
 27684                           ;stkvar	_prod @ sp[(-13)+0]
 27685  013452  0EF3               	movlw	-13
 27686  013454  0060  F0B3  FFE3   	movff	btemp+4,plusw1
 27687  01345A  0EF4               	movlw	-12
 27688  01345C  0060  F0B7  FFE3   	movff	btemp+5,plusw1
 27689  013462  0EF5               	movlw	-11
 27690  013464  0060  F0BB  FFE3   	movff	btemp+6,plusw1
 27691  01346A  0EF6               	movlw	-10
 27692  01346C  0060  F0BF  FFE3   	movff	btemp+7,plusw1
 27693                           
 27694                           ;stkvar	_b @ sp[(-13)+-4]
 27695  013472  0EF0               	movlw	240
 27696  013474  24E1               	addwf	fsr1l,w,c
 27697  013476  6ED9               	movwf	fsr2l,c
 27698  013478  0EFF               	movlw	255
 27699  01347A  20E2               	addwfc	fsr1h,w,c
 27700  01347C  6EDA               	movwf	fsr2h,c
 27701  01347E  50DF               	movf	indf2,w,c
 27702  013480  6E33               	movwf	(btemp+11)^0,c
 27703                           
 27704                           ;stkvar	_a @ sp[(-13)+-8]
 27705  013482  0EEC               	movlw	236
 27706  013484  24E1               	addwf	fsr1l,w,c
 27707  013486  6ED9               	movwf	fsr2l,c
 27708  013488  0EFF               	movlw	255
 27709  01348A  20E2               	addwfc	fsr1h,w,c
 27710  01348C  6EDA               	movwf	fsr2h,c
 27711  01348E  50DF               	movf	indf2,w,c
 27712  013490  0233               	mulwf	(btemp+11)^0,c
 27713                           
 27714                           ;stkvar	_temp @ sp[(-13)+8]
 27715  013492  0EFB               	movlw	-5
 27716  013494  006F FFCF FFE3     	movff	prodl,plusw1
 27717  01349A  0EFC               	movlw	-4
 27718  01349C  006F FFD3 FFE3     	movff	prodh,plusw1
 27719                           
 27720                           ;stkvar	_grs @ sp[(-13)+4]
 27721  0134A2  50E1               	movf	fsr1l,w,c
 27722  0134A4  0FF7               	addlw	-9
 27723  0134A6  6ED9               	movwf	fsr2l,c
 27724  0134A8  50E2               	movf	fsr1h,w,c
 27725  0134AA  6EDA               	movwf	fsr2h,c
 27726  0134AC  0EFF               	movlw	255
 27727  0134AE  22DA               	addwfc	fsr2h,f,c
 27728                           
 27729                           ;stkvar	_temp @ sp[(-13)+8]
 27730  0134B0  0EFB               	movlw	-5
 27731  0134B2  50E3               	movf	plusw1,w,c
 27732  0134B4  26DE               	addwf	postinc2,f,c
 27733  0134B6  0E00               	movlw	0
 27734  0134B8  22DE               	addwfc	postinc2,f,c
 27735  0134BA  22DE               	addwfc	postinc2,f,c
 27736  0134BC  22DE               	addwfc	postinc2,f,c
 27737                           
 27738                           ;stkvar	_prod @ sp[(-13)+0]
 27739  0134BE  50E1               	movf	fsr1l,w,c
 27740  0134C0  0FF3               	addlw	-13
 27741  0134C2  6ED9               	movwf	fsr2l,c
 27742  0134C4  50E2               	movf	fsr1h,w,c
 27743  0134C6  6EDA               	movwf	fsr2h,c
 27744  0134C8  0EFF               	movlw	255
 27745  0134CA  22DA               	addwfc	fsr2h,f,c
 27746                           
 27747                           ;stkvar	_temp @ sp[(-13)+8]
 27748  0134CC  0EFC               	movlw	252
 27749  0134CE  24E1               	addwf	fsr1l,w,c
 27750  0134D0  6EE9               	movwf	fsr0l,c
 27751  0134D2  0EFF               	movlw	255
 27752  0134D4  20E2               	addwfc	fsr1h,w,c
 27753  0134D6  6EEA               	movwf	fsr0h,c
 27754  0134D8  50EF               	movf	indf0,w,c
 27755  0134DA  26DE               	addwf	postinc2,f,c
 27756  0134DC  0E00               	movlw	0
 27757  0134DE  22DE               	addwfc	postinc2,f,c
 27758  0134E0  22DE               	addwfc	postinc2,f,c
 27759  0134E2  22DE               	addwfc	postinc2,f,c
 27760                           
 27761                           ;stkvar	_b @ sp[(-13)+-4]
 27762  0134E4  0EF1               	movlw	241
 27763  0134E6  24E1               	addwf	fsr1l,w,c
 27764  0134E8  6ED9               	movwf	fsr2l,c
 27765  0134EA  0EFF               	movlw	255
 27766  0134EC  20E2               	addwfc	fsr1h,w,c
 27767  0134EE  6EDA               	movwf	fsr2h,c
 27768  0134F0  50DF               	movf	indf2,w,c
 27769  0134F2  6E33               	movwf	(btemp+11)^0,c
 27770                           
 27771                           ;stkvar	_a @ sp[(-13)+-8]
 27772  0134F4  0EEB               	movlw	-21
 27773  0134F6  50E3               	movf	plusw1,w,c
 27774  0134F8  0233               	mulwf	(btemp+11)^0,c
 27775                           
 27776                           ;stkvar	_temp @ sp[(-13)+8]
 27777  0134FA  0EFB               	movlw	-5
 27778  0134FC  006F FFCF FFE3     	movff	prodl,plusw1
 27779  013502  0EFC               	movlw	-4
 27780  013504  006F FFD3 FFE3     	movff	prodh,plusw1
 27781                           
 27782                           ;stkvar	_grs @ sp[(-13)+4]
 27783  01350A  50E1               	movf	fsr1l,w,c
 27784  01350C  0FF7               	addlw	-9
 27785  01350E  6ED9               	movwf	fsr2l,c
 27786  013510  50E2               	movf	fsr1h,w,c
 27787  013512  6EDA               	movwf	fsr2h,c
 27788  013514  0EFF               	movlw	255
 27789  013516  22DA               	addwfc	fsr2h,f,c
 27790                           
 27791                           ;stkvar	_temp @ sp[(-13)+8]
 27792  013518  0EFB               	movlw	-5
 27793  01351A  50E3               	movf	plusw1,w,c
 27794  01351C  26DE               	addwf	postinc2,f,c
 27795  01351E  0E00               	movlw	0
 27796  013520  22DE               	addwfc	postinc2,f,c
 27797  013522  22DE               	addwfc	postinc2,f,c
 27798  013524  22DE               	addwfc	postinc2,f,c
 27799                           
 27800                           ;stkvar	_prod @ sp[(-13)+0]
 27801  013526  50E1               	movf	fsr1l,w,c
 27802  013528  0FF3               	addlw	-13
 27803  01352A  6ED9               	movwf	fsr2l,c
 27804  01352C  50E2               	movf	fsr1h,w,c
 27805  01352E  6EDA               	movwf	fsr2h,c
 27806  013530  0EFF               	movlw	255
 27807  013532  22DA               	addwfc	fsr2h,f,c
 27808                           
 27809                           ;stkvar	_temp @ sp[(-13)+8]
 27810  013534  0EFC               	movlw	252
 27811  013536  24E1               	addwf	fsr1l,w,c
 27812  013538  6EE9               	movwf	fsr0l,c
 27813  01353A  0EFF               	movlw	255
 27814  01353C  20E2               	addwfc	fsr1h,w,c
 27815  01353E  6EEA               	movwf	fsr0h,c
 27816  013540  50EF               	movf	indf0,w,c
 27817  013542  26DE               	addwf	postinc2,f,c
 27818  013544  0E00               	movlw	0
 27819  013546  22DE               	addwfc	postinc2,f,c
 27820  013548  22DE               	addwfc	postinc2,f,c
 27821  01354A  22DE               	addwfc	postinc2,f,c
 27822                           
 27823                           ;stkvar	_grs @ sp[(-13)+4]
 27824  01354C  50E1               	movf	fsr1l,w,c
 27825  01354E  0FF7               	addlw	-9
 27826  013550  6ED9               	movwf	fsr2l,c
 27827  013552  50E2               	movf	fsr1h,w,c
 27828  013554  6EDA               	movwf	fsr2h,c
 27829  013556  0EFF               	movlw	255
 27830  013558  22DA               	addwfc	fsr2h,f,c
 27831  01355A  0E08               	movlw	8
 27832  01355C                     u6585:
 27833  01355C  90D8               	bcf	status,0,c
 27834  01355E  36DE               	rlcf	postinc2,f,c
 27835  013560  36DE               	rlcf	postinc2,f,c
 27836  013562  36DE               	rlcf	postinc2,f,c
 27837  013564  36DD               	rlcf	postdec2,f,c
 27838  013566  52DD               	movf	postdec2,f,c
 27839  013568  52DD               	movf	postdec2,f,c
 27840  01356A  2EE8               	decfsz	wreg,f,c
 27841  01356C  D7F7               	goto	u6585
 27842                           
 27843                           ;stkvar	_b @ sp[(-13)+-4]
 27844  01356E  0EF0               	movlw	240
 27845  013570  24E1               	addwf	fsr1l,w,c
 27846  013572  6ED9               	movwf	fsr2l,c
 27847  013574  0EFF               	movlw	255
 27848  013576  20E2               	addwfc	fsr1h,w,c
 27849  013578  6EDA               	movwf	fsr2h,c
 27850  01357A  50DF               	movf	indf2,w,c
 27851  01357C  6E33               	movwf	(btemp+11)^0,c
 27852                           
 27853                           ;stkvar	_a @ sp[(-13)+-8]
 27854  01357E  0EEB               	movlw	-21
 27855  013580  50E3               	movf	plusw1,w,c
 27856  013582  0233               	mulwf	(btemp+11)^0,c
 27857                           
 27858                           ;stkvar	_temp @ sp[(-13)+8]
 27859  013584  0EFB               	movlw	-5
 27860  013586  006F FFCF FFE3     	movff	prodl,plusw1
 27861  01358C  0EFC               	movlw	-4
 27862  01358E  006F FFD3 FFE3     	movff	prodh,plusw1
 27863                           
 27864                           ;stkvar	_temp @ sp[(-13)+8]
 27865  013594  0EFB               	movlw	-5
 27866  013596  006F FF8C  F032    	movff	plusw1,btemp+10
 27867  01359C  0EFC               	movlw	-4
 27868  01359E  006F FF8C  F033    	movff	plusw1,btemp+11
 27869                           
 27870                           ;stkvar	_grs @ sp[(-13)+4]
 27871  0135A4  50E1               	movf	fsr1l,w,c
 27872  0135A6  0FF7               	addlw	-9
 27873  0135A8  6ED9               	movwf	fsr2l,c
 27874  0135AA  50E2               	movf	fsr1h,w,c
 27875  0135AC  6EDA               	movwf	fsr2h,c
 27876  0135AE  0EFF               	movlw	255
 27877  0135B0  22DA               	addwfc	fsr2h,f,c
 27878  0135B2  5032               	movf	(btemp+10)^0,w,c
 27879  0135B4  26DE               	addwf	postinc2,f,c
 27880  0135B6  5033               	movf	(btemp+11)^0,w,c
 27881  0135B8  22DE               	addwfc	postinc2,f,c
 27882  0135BA  0E00               	movlw	0
 27883  0135BC  22DE               	addwfc	postinc2,f,c
 27884  0135BE  22DE               	addwfc	postinc2,f,c
 27885                           
 27886                           ;stkvar	_b @ sp[(-13)+-4]
 27887  0135C0  0EEF               	movlw	-17
 27888  0135C2  006F FF8C  F033    	movff	plusw1,btemp+11
 27889                           
 27890                           ;stkvar	_a @ sp[(-13)+-8]
 27891  0135C8  0EEC               	movlw	236
 27892  0135CA  24E1               	addwf	fsr1l,w,c
 27893  0135CC  6ED9               	movwf	fsr2l,c
 27894  0135CE  0EFF               	movlw	255
 27895  0135D0  20E2               	addwfc	fsr1h,w,c
 27896  0135D2  6EDA               	movwf	fsr2h,c
 27897  0135D4  50DF               	movf	indf2,w,c
 27898  0135D6  0233               	mulwf	(btemp+11)^0,c
 27899                           
 27900                           ;stkvar	_temp @ sp[(-13)+8]
 27901  0135D8  0EFB               	movlw	-5
 27902  0135DA  006F FFCF FFE3     	movff	prodl,plusw1
 27903  0135E0  0EFC               	movlw	-4
 27904  0135E2  006F FFD3 FFE3     	movff	prodh,plusw1
 27905                           
 27906                           ;stkvar	_temp @ sp[(-13)+8]
 27907  0135E8  0EFB               	movlw	-5
 27908  0135EA  006F FF8C  F032    	movff	plusw1,btemp+10
 27909  0135F0  0EFC               	movlw	-4
 27910  0135F2  006F FF8C  F033    	movff	plusw1,btemp+11
 27911                           
 27912                           ;stkvar	_grs @ sp[(-13)+4]
 27913  0135F8  50E1               	movf	fsr1l,w,c
 27914  0135FA  0FF7               	addlw	-9
 27915  0135FC  6ED9               	movwf	fsr2l,c
 27916  0135FE  50E2               	movf	fsr1h,w,c
 27917  013600  6EDA               	movwf	fsr2h,c
 27918  013602  0EFF               	movlw	255
 27919  013604  22DA               	addwfc	fsr2h,f,c
 27920  013606  5032               	movf	(btemp+10)^0,w,c
 27921  013608  26DE               	addwf	postinc2,f,c
 27922  01360A  5033               	movf	(btemp+11)^0,w,c
 27923  01360C  22DE               	addwfc	postinc2,f,c
 27924  01360E  0E00               	movlw	0
 27925  013610  22DE               	addwfc	postinc2,f,c
 27926  013612  22DE               	addwfc	postinc2,f,c
 27927                           
 27928                           ;stkvar	_grs @ sp[(-13)+4]
 27929  013614  50E1               	movf	fsr1l,w,c
 27930  013616  0FF7               	addlw	-9
 27931  013618  6ED9               	movwf	fsr2l,c
 27932  01361A  50E2               	movf	fsr1h,w,c
 27933  01361C  6EDA               	movwf	fsr2h,c
 27934  01361E  0EFF               	movlw	255
 27935  013620  22DA               	addwfc	fsr2h,f,c
 27936  013622  0E08               	movlw	8
 27937  013624                     u6595:
 27938  013624  90D8               	bcf	status,0,c
 27939  013626  36DE               	rlcf	postinc2,f,c
 27940  013628  36DE               	rlcf	postinc2,f,c
 27941  01362A  36DE               	rlcf	postinc2,f,c
 27942  01362C  36DD               	rlcf	postdec2,f,c
 27943  01362E  52DD               	movf	postdec2,f,c
 27944  013630  52DD               	movf	postdec2,f,c
 27945  013632  2EE8               	decfsz	wreg,f,c
 27946  013634  D7F7               	goto	u6595
 27947                           
 27948                           ;stkvar	_b @ sp[(-13)+-4]
 27949  013636  0EEF               	movlw	-17
 27950  013638  006F FF8C  F033    	movff	plusw1,btemp+11
 27951                           
 27952                           ;stkvar	_a @ sp[(-13)+-8]
 27953  01363E  0EEB               	movlw	-21
 27954  013640  50E3               	movf	plusw1,w,c
 27955  013642  0233               	mulwf	(btemp+11)^0,c
 27956                           
 27957                           ;stkvar	_temp @ sp[(-13)+8]
 27958  013644  0EFB               	movlw	-5
 27959  013646  006F FFCF FFE3     	movff	prodl,plusw1
 27960  01364C  0EFC               	movlw	-4
 27961  01364E  006F FFD3 FFE3     	movff	prodh,plusw1
 27962                           
 27963                           ;stkvar	_temp @ sp[(-13)+8]
 27964  013654  0EFB               	movlw	-5
 27965  013656  006F FF8C  F032    	movff	plusw1,btemp+10
 27966  01365C  0EFC               	movlw	-4
 27967  01365E  006F FF8C  F033    	movff	plusw1,btemp+11
 27968                           
 27969                           ;stkvar	_grs @ sp[(-13)+4]
 27970  013664  50E1               	movf	fsr1l,w,c
 27971  013666  0FF7               	addlw	-9
 27972  013668  6ED9               	movwf	fsr2l,c
 27973  01366A  50E2               	movf	fsr1h,w,c
 27974  01366C  6EDA               	movwf	fsr2h,c
 27975  01366E  0EFF               	movlw	255
 27976  013670  22DA               	addwfc	fsr2h,f,c
 27977  013672  5032               	movf	(btemp+10)^0,w,c
 27978  013674  26DE               	addwf	postinc2,f,c
 27979  013676  5033               	movf	(btemp+11)^0,w,c
 27980  013678  22DE               	addwfc	postinc2,f,c
 27981  01367A  0E00               	movlw	0
 27982  01367C  22DE               	addwfc	postinc2,f,c
 27983  01367E  22DE               	addwfc	postinc2,f,c
 27984                           
 27985                           ;stkvar	_b @ sp[(-13)+-4]
 27986  013680  0EF0               	movlw	240
 27987  013682  24E1               	addwf	fsr1l,w,c
 27988  013684  6ED9               	movwf	fsr2l,c
 27989  013686  0EFF               	movlw	255
 27990  013688  20E2               	addwfc	fsr1h,w,c
 27991  01368A  6EDA               	movwf	fsr2h,c
 27992  01368C  50DF               	movf	indf2,w,c
 27993  01368E  6E33               	movwf	(btemp+11)^0,c
 27994                           
 27995                           ;stkvar	_a @ sp[(-13)+-8]
 27996  013690  0EED               	movlw	237
 27997  013692  24E1               	addwf	fsr1l,w,c
 27998  013694  6ED9               	movwf	fsr2l,c
 27999  013696  0EFF               	movlw	255
 28000  013698  20E2               	addwfc	fsr1h,w,c
 28001  01369A  6EDA               	movwf	fsr2h,c
 28002  01369C  50DF               	movf	indf2,w,c
 28003  01369E  0233               	mulwf	(btemp+11)^0,c
 28004                           
 28005                           ;stkvar	_temp @ sp[(-13)+8]
 28006  0136A0  0EFB               	movlw	-5
 28007  0136A2  006F FFCF FFE3     	movff	prodl,plusw1
 28008  0136A8  0EFC               	movlw	-4
 28009  0136AA  006F FFD3 FFE3     	movff	prodh,plusw1
 28010                           
 28011                           ;stkvar	_temp @ sp[(-13)+8]
 28012  0136B0  0EFB               	movlw	-5
 28013  0136B2  006F FF8C  F032    	movff	plusw1,btemp+10
 28014  0136B8  0EFC               	movlw	-4
 28015  0136BA  006F FF8C  F033    	movff	plusw1,btemp+11
 28016                           
 28017                           ;stkvar	_prod @ sp[(-13)+0]
 28018  0136C0  50E1               	movf	fsr1l,w,c
 28019  0136C2  0FF3               	addlw	-13
 28020  0136C4  6ED9               	movwf	fsr2l,c
 28021  0136C6  50E2               	movf	fsr1h,w,c
 28022  0136C8  6EDA               	movwf	fsr2h,c
 28023  0136CA  0EFF               	movlw	255
 28024  0136CC  22DA               	addwfc	fsr2h,f,c
 28025  0136CE  5032               	movf	(btemp+10)^0,w,c
 28026  0136D0  26DE               	addwf	postinc2,f,c
 28027  0136D2  5033               	movf	(btemp+11)^0,w,c
 28028  0136D4  22DE               	addwfc	postinc2,f,c
 28029  0136D6  0E00               	movlw	0
 28030  0136D8  22DE               	addwfc	postinc2,f,c
 28031  0136DA  22DE               	addwfc	postinc2,f,c
 28032                           
 28033                           ;stkvar	_b @ sp[(-13)+-4]
 28034  0136DC  0EF1               	movlw	241
 28035  0136DE  24E1               	addwf	fsr1l,w,c
 28036  0136E0  6ED9               	movwf	fsr2l,c
 28037  0136E2  0EFF               	movlw	255
 28038  0136E4  20E2               	addwfc	fsr1h,w,c
 28039  0136E6  6EDA               	movwf	fsr2h,c
 28040  0136E8  50DF               	movf	indf2,w,c
 28041  0136EA  6E33               	movwf	(btemp+11)^0,c
 28042                           
 28043                           ;stkvar	_a @ sp[(-13)+-8]
 28044  0136EC  0EEC               	movlw	236
 28045  0136EE  24E1               	addwf	fsr1l,w,c
 28046  0136F0  6ED9               	movwf	fsr2l,c
 28047  0136F2  0EFF               	movlw	255
 28048  0136F4  20E2               	addwfc	fsr1h,w,c
 28049  0136F6  6EDA               	movwf	fsr2h,c
 28050  0136F8  50DF               	movf	indf2,w,c
 28051  0136FA  0233               	mulwf	(btemp+11)^0,c
 28052                           
 28053                           ;stkvar	_temp @ sp[(-13)+8]
 28054  0136FC  0EFB               	movlw	-5
 28055  0136FE  006F FFCF FFE3     	movff	prodl,plusw1
 28056  013704  0EFC               	movlw	-4
 28057  013706  006F FFD3 FFE3     	movff	prodh,plusw1
 28058                           
 28059                           ;stkvar	_temp @ sp[(-13)+8]
 28060  01370C  0EFB               	movlw	-5
 28061  01370E  006F FF8C  F032    	movff	plusw1,btemp+10
 28062  013714  0EFC               	movlw	-4
 28063  013716  006F FF8C  F033    	movff	plusw1,btemp+11
 28064                           
 28065                           ;stkvar	_prod @ sp[(-13)+0]
 28066  01371C  50E1               	movf	fsr1l,w,c
 28067  01371E  0FF3               	addlw	-13
 28068  013720  6ED9               	movwf	fsr2l,c
 28069  013722  50E2               	movf	fsr1h,w,c
 28070  013724  6EDA               	movwf	fsr2h,c
 28071  013726  0EFF               	movlw	255
 28072  013728  22DA               	addwfc	fsr2h,f,c
 28073  01372A  5032               	movf	(btemp+10)^0,w,c
 28074  01372C  26DE               	addwf	postinc2,f,c
 28075  01372E  5033               	movf	(btemp+11)^0,w,c
 28076  013730  22DE               	addwfc	postinc2,f,c
 28077  013732  0E00               	movlw	0
 28078  013734  22DE               	addwfc	postinc2,f,c
 28079  013736  22DE               	addwfc	postinc2,f,c
 28080                           
 28081                           ;stkvar	_b @ sp[(-13)+-4]
 28082  013738  0EF1               	movlw	241
 28083  01373A  24E1               	addwf	fsr1l,w,c
 28084  01373C  6ED9               	movwf	fsr2l,c
 28085  01373E  0EFF               	movlw	255
 28086  013740  20E2               	addwfc	fsr1h,w,c
 28087  013742  6EDA               	movwf	fsr2h,c
 28088  013744  50DF               	movf	indf2,w,c
 28089  013746  6E33               	movwf	(btemp+11)^0,c
 28090                           
 28091                           ;stkvar	_a @ sp[(-13)+-8]
 28092  013748  0EED               	movlw	237
 28093  01374A  24E1               	addwf	fsr1l,w,c
 28094  01374C  6ED9               	movwf	fsr2l,c
 28095  01374E  0EFF               	movlw	255
 28096  013750  20E2               	addwfc	fsr1h,w,c
 28097  013752  6EDA               	movwf	fsr2h,c
 28098  013754  50DF               	movf	indf2,w,c
 28099  013756  0233               	mulwf	(btemp+11)^0,c
 28100                           
 28101                           ;stkvar	_temp @ sp[(-13)+8]
 28102  013758  0EFB               	movlw	-5
 28103  01375A  006F FFCF FFE3     	movff	prodl,plusw1
 28104  013760  0EFC               	movlw	-4
 28105  013762  006F FFD3 FFE3     	movff	prodh,plusw1
 28106                           
 28107                           ;stkvar	_temp @ sp[(-13)+8]
 28108  013768  0EFB               	movlw	-5
 28109  01376A  006F FF8C  F032    	movff	plusw1,btemp+10
 28110  013770  0EFC               	movlw	-4
 28111  013772  006F FF8C  F033    	movff	plusw1,btemp+11
 28112  013778  5032               	movf	(btemp+10)^0,w,c
 28113  01377A  6E2C               	movwf	(btemp+4)^0,c
 28114  01377C  5033               	movf	(btemp+11)^0,w,c
 28115  01377E  6E2D               	movwf	(btemp+5)^0,c
 28116  013780  6A2E               	clrf	(btemp+6)^0,c
 28117  013782  6A2F               	clrf	(btemp+7)^0,c
 28118  013784  0060  F0B8  F02F   	movff	btemp+6,btemp+7
 28119  01378A  0060  F0B4  F02E   	movff	btemp+5,btemp+6
 28120  013790  0060  F0B0  F02D   	movff	btemp+4,btemp+5
 28121  013796  6A2C               	clrf	(btemp+4)^0,c
 28122                           
 28123                           ;stkvar	_prod @ sp[(-13)+0]
 28124  013798  50E1               	movf	fsr1l,w,c
 28125  01379A  0FF3               	addlw	-13
 28126  01379C  6ED9               	movwf	fsr2l,c
 28127  01379E  50E2               	movf	fsr1h,w,c
 28128  0137A0  6EDA               	movwf	fsr2h,c
 28129  0137A2  0EFF               	movlw	255
 28130  0137A4  22DA               	addwfc	fsr2h,f,c
 28131  0137A6  502C               	movf	(btemp+4)^0,w,c
 28132  0137A8  26DE               	addwf	postinc2,f,c
 28133  0137AA  502D               	movf	(btemp+5)^0,w,c
 28134  0137AC  22DE               	addwfc	postinc2,f,c
 28135  0137AE  502E               	movf	(btemp+6)^0,w,c
 28136  0137B0  22DE               	addwfc	postinc2,f,c
 28137  0137B2  502F               	movf	(btemp+7)^0,w,c
 28138  0137B4  22DE               	addwfc	postinc2,f,c
 28139                           
 28140                           ;stkvar	_prod @ sp[(-13)+0]
 28141  0137B6  50E1               	movf	fsr1l,w,c
 28142  0137B8  0FF3               	addlw	-13
 28143  0137BA  6ED9               	movwf	fsr2l,c
 28144  0137BC  50E2               	movf	fsr1h,w,c
 28145  0137BE  6EDA               	movwf	fsr2h,c
 28146  0137C0  0EFF               	movlw	255
 28147  0137C2  22DA               	addwfc	fsr2h,f,c
 28148                           
 28149                           ;stkvar	_grs @ sp[(-13)+4]
 28150  0137C4  0EFA               	movlw	250
 28151  0137C6  24E1               	addwf	fsr1l,w,c
 28152  0137C8  6EE9               	movwf	fsr0l,c
 28153  0137CA  0EFF               	movlw	255
 28154  0137CC  20E2               	addwfc	fsr1h,w,c
 28155  0137CE  6EEA               	movwf	fsr0h,c
 28156  0137D0  50EF               	movf	indf0,w,c
 28157  0137D2  26DE               	addwf	postinc2,f,c
 28158  0137D4  0E00               	movlw	0
 28159  0137D6  22DE               	addwfc	postinc2,f,c
 28160  0137D8  22DE               	addwfc	postinc2,f,c
 28161  0137DA  22DE               	addwfc	postinc2,f,c
 28162                           
 28163                           ;stkvar	_grs @ sp[(-13)+4]
 28164  0137DC  50E1               	movf	fsr1l,w,c
 28165  0137DE  0FF7               	addlw	-9
 28166  0137E0  6ED9               	movwf	fsr2l,c
 28167  0137E2  50E2               	movf	fsr1h,w,c
 28168  0137E4  6EDA               	movwf	fsr2h,c
 28169  0137E6  0EFF               	movlw	255
 28170  0137E8  22DA               	addwfc	fsr2h,f,c
 28171  0137EA  0E08               	movlw	8
 28172  0137EC                     u6605:
 28173  0137EC  90D8               	bcf	status,0,c
 28174  0137EE  36DE               	rlcf	postinc2,f,c
 28175  0137F0  36DE               	rlcf	postinc2,f,c
 28176  0137F2  36DE               	rlcf	postinc2,f,c
 28177  0137F4  36DD               	rlcf	postdec2,f,c
 28178  0137F6  52DD               	movf	postdec2,f,c
 28179  0137F8  52DD               	movf	postdec2,f,c
 28180  0137FA  2EE8               	decfsz	wreg,f,c
 28181  0137FC  D7F7               	goto	u6605
 28182  0137FE  0E82               	movlw	130
 28183  013800  6E32               	movwf	(btemp+10)^0,c
 28184  013802  0EFF               	movlw	255
 28185  013804  6E33               	movwf	(btemp+11)^0,c
 28186                           
 28187                           ;stkvar	_bexp @ sp[(-13)+10]
 28188  013806  0EFD               	movlw	-3
 28189  013808  50E3               	movf	plusw1,w,c
 28190  01380A  6E30               	movwf	(btemp+8)^0,c
 28191  01380C  6A31               	clrf	(btemp+9)^0,c
 28192                           
 28193                           ;stkvar	_aexp @ sp[(-13)+11]
 28194  01380E  0EFE               	movlw	-2
 28195  013810  50E3               	movf	plusw1,w,c
 28196  013812  2630               	addwf	(btemp+8)^0,f,c
 28197  013814  0E00               	movlw	0
 28198  013816  2231               	addwfc	(btemp+9)^0,f,c
 28199  013818  5032               	movf	(btemp+10)^0,w,c
 28200  01381A  2630               	addwf	(btemp+8)^0,f,c
 28201  01381C  5033               	movf	(btemp+11)^0,w,c
 28202  01381E  2231               	addwfc	(btemp+9)^0,f,c
 28203                           
 28204                           ;stkvar	_temp @ sp[(-13)+8]
 28205  013820  0EFB               	movlw	-5
 28206  013822  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 28207  013828  0EFC               	movlw	-4
 28208  01382A  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 28209  013830  D021               	goto	l8188
 28210  013832                     l8178:
 28211                           
 28212                           ;stkvar	_prod @ sp[(-13)+0]
 28213  013832  90D8               	bcf	status,0,c
 28214  013834  0EF3               	movlw	-13
 28215  013836  36E3               	rlcf	plusw1,f,c
 28216  013838  0EF4               	movlw	-12
 28217  01383A  36E3               	rlcf	plusw1,f,c
 28218  01383C  0EF5               	movlw	-11
 28219  01383E  36E3               	rlcf	plusw1,f,c
 28220  013840  0EF6               	movlw	-10
 28221  013842  36E3               	rlcf	plusw1,f,c
 28222                           
 28223                           ;stkvar	_grs @ sp[(-13)+4]
 28224  013844  0EFA               	movlw	-6
 28225  013846  AEE3               	btfss	plusw1,7,c
 28226  013848  D002               	goto	l8184
 28227                           
 28228                           ;stkvar	_prod @ sp[(-13)+0]
 28229  01384A  0EF3               	movlw	-13
 28230  01384C  80E3               	bsf	plusw1,0,c
 28231  01384E                     l8184:
 28232                           
 28233                           ;stkvar	_grs @ sp[(-13)+4]
 28234  01384E  90D8               	bcf	status,0,c
 28235  013850  0EF7               	movlw	-9
 28236  013852  36E3               	rlcf	plusw1,f,c
 28237  013854  0EF8               	movlw	-8
 28238  013856  36E3               	rlcf	plusw1,f,c
 28239  013858  0EF9               	movlw	-7
 28240  01385A  36E3               	rlcf	plusw1,f,c
 28241  01385C  0EFA               	movlw	-6
 28242  01385E  36E3               	rlcf	plusw1,f,c
 28243                           
 28244                           ;stkvar	_temp @ sp[(-13)+8]
 28245  013860  50E1               	movf	fsr1l,w,c
 28246  013862  0FFB               	addlw	-5
 28247  013864  6ED9               	movwf	fsr2l,c
 28248  013866  50E2               	movf	fsr1h,w,c
 28249  013868  6EDA               	movwf	fsr2h,c
 28250  01386A  0EFF               	movlw	255
 28251  01386C  22DA               	addwfc	fsr2h,f,c
 28252  01386E  06DE               	decf	postinc2,f,c
 28253  013870  0E00               	movlw	0
 28254  013872  5ADD               	subwfb	postdec2,f,c
 28255  013874                     l8188:
 28256                           
 28257                           ;stkvar	_prod @ sp[(-13)+0]
 28258  013874  0EF5               	movlw	-11
 28259  013876  AEE3               	btfss	plusw1,7,c
 28260  013878  D7DC               	goto	l8178
 28261                           
 28262                           ;stkvar	_aexp @ sp[(-13)+11]
 28263  01387A  0EFE               	movlw	-2
 28264  01387C  6AE3               	clrf	plusw1,c
 28265                           
 28266                           ;stkvar	_grs @ sp[(-13)+4]
 28267  01387E  0EFA               	movlw	-6
 28268  013880  AEE3               	btfss	plusw1,7,c
 28269  013882  D020               	goto	l8202
 28270                           
 28271                           ;stkvar	_grs @ sp[(-13)+4]
 28272  013884  50E1               	movf	fsr1l,w,c
 28273  013886  0FF7               	addlw	-9
 28274  013888  6ED9               	movwf	fsr2l,c
 28275  01388A  50E2               	movf	fsr1h,w,c
 28276  01388C  6EDA               	movwf	fsr2h,c
 28277  01388E  0EFF               	movlw	255
 28278  013890  22DA               	addwfc	fsr2h,f,c
 28279  013892  0EFF               	movlw	255
 28280  013894  14DE               	andwf	postinc2,w,c
 28281  013896  6E30               	movwf	(btemp+8)^0,c
 28282  013898  0EFF               	movlw	255
 28283  01389A  14DE               	andwf	postinc2,w,c
 28284  01389C  6E31               	movwf	(btemp+9)^0,c
 28285  01389E  0EFF               	movlw	255
 28286  0138A0  14DE               	andwf	postinc2,w,c
 28287  0138A2  6E32               	movwf	(btemp+10)^0,c
 28288  0138A4  0E7F               	movlw	127
 28289  0138A6  14DE               	andwf	postinc2,w,c
 28290  0138A8  6E33               	movwf	(btemp+11)^0,c
 28291  0138AA  5030               	movf	(btemp+8)^0,w,c
 28292  0138AC  1031               	iorwf	(btemp+9)^0,w,c
 28293  0138AE  1032               	iorwf	(btemp+10)^0,w,c
 28294  0138B0  1033               	iorwf	(btemp+11)^0,w,c
 28295  0138B2  B4D8               	btfsc	status,2,c
 28296  0138B4  D004               	goto	l8198
 28297  0138B6                     u6640:
 28298                           
 28299                           ;stkvar	_aexp @ sp[(-13)+11]
 28300  0138B6  0EFE               	movlw	-2
 28301  0138B8  6AE3               	clrf	plusw1,c
 28302  0138BA  2AE3               	incf	plusw1,f,c
 28303  0138BC  D003               	goto	l8202
 28304  0138BE                     l8198:
 28305                           
 28306                           ;stkvar	_prod @ sp[(-13)+0]
 28307  0138BE  0EF3               	movlw	-13
 28308  0138C0  B0E3               	btfsc	plusw1,0,c
 28309  0138C2  D7F9               	goto	u6640
 28310  0138C4                     l8202:
 28311                           
 28312                           ;stkvar	_aexp @ sp[(-13)+11]
 28313  0138C4  0EFE               	movlw	-2
 28314  0138C6  50E3               	movf	plusw1,w,c
 28315  0138C8  B4D8               	btfsc	status,2,c
 28316  0138CA  D036               	goto	l8212
 28317                           
 28318                           ;stkvar	_prod @ sp[(-13)+0]
 28319  0138CC  50E1               	movf	fsr1l,w,c
 28320  0138CE  0FF3               	addlw	-13
 28321  0138D0  6ED9               	movwf	fsr2l,c
 28322  0138D2  50E2               	movf	fsr1h,w,c
 28323  0138D4  6EDA               	movwf	fsr2h,c
 28324  0138D6  0EFF               	movlw	255
 28325  0138D8  22DA               	addwfc	fsr2h,f,c
 28326  0138DA  2ADE               	incf	postinc2,f,c
 28327  0138DC  0E00               	movlw	0
 28328  0138DE  22DE               	addwfc	postinc2,f,c
 28329  0138E0  22DE               	addwfc	postinc2,f,c
 28330  0138E2  22DE               	addwfc	postinc2,f,c
 28331                           
 28332                           ;stkvar	_prod @ sp[(-13)+0]
 28333  0138E4  0EF6               	movlw	-10
 28334  0138E6  A0E3               	btfss	plusw1,0,c
 28335  0138E8  D027               	goto	l8212
 28336  0138EA  0E01               	movlw	1
 28337  0138EC  6E33               	movwf	(btemp+11)^0,c
 28338                           
 28339                           ;stkvar	_prod @ sp[(-13)+0]
 28340  0138EE  50E1               	movf	fsr1l,w,c
 28341  0138F0  0FF3               	addlw	-13
 28342  0138F2  6ED9               	movwf	fsr2l,c
 28343  0138F4  50E2               	movf	fsr1h,w,c
 28344  0138F6  6EDA               	movwf	fsr2h,c
 28345  0138F8  0EFF               	movlw	255
 28346  0138FA  22DA               	addwfc	fsr2h,f,c
 28347  0138FC  2833               	incf	(btemp+11)^0,w,c
 28348  0138FE  52DE               	movf	postinc2,f,c
 28349  013900  D008               	goto	u6680
 28350  013902                     u6685:
 28351  013902  52DE               	movf	postinc2,f,c
 28352  013904  90D8               	bcf	status,0,c
 28353  013906  BEDC               	btfsc	preinc2,7,c
 28354  013908  80D8               	bsf	status,0,c
 28355  01390A  32DD               	rrcf	postdec2,f,c
 28356  01390C  32DD               	rrcf	postdec2,f,c
 28357  01390E  32DD               	rrcf	postdec2,f,c
 28358  013910  32DE               	rrcf	postinc2,f,c
 28359  013912                     u6680:
 28360  013912  2EE8               	decfsz	wreg,f,c
 28361  013914  D7F6               	goto	u6685
 28362                           
 28363                           ;stkvar	_temp @ sp[(-13)+8]
 28364  013916  0EFB               	movlw	-5
 28365  013918  50E3               	movf	plusw1,w,c
 28366  01391A  0F01               	addlw	1
 28367  01391C  6E28               	movwf	btemp^0,c
 28368  01391E  0EFB               	movlw	-5
 28369  013920  0060  F0A3  FFE3   	movff	btemp,plusw1
 28370  013926  6A28               	clrf	btemp^0,c
 28371  013928  0EFC               	movlw	-4
 28372  01392A  50E3               	movf	plusw1,w,c
 28373  01392C  2028               	addwfc	btemp^0,w,c
 28374  01392E  6E28               	movwf	btemp^0,c
 28375  013930  0EFC               	movlw	-4
 28376  013932  0060  F0A3  FFE3   	movff	btemp,plusw1
 28377  013938                     l8212:
 28378                           
 28379                           ;stkvar	_temp @ sp[(-13)+8]
 28380  013938  0EFC               	movlw	-4
 28381  01393A  BEE3               	btfsc	plusw1,7,c
 28382  01393C  D020               	goto	l8216
 28383  01393E  0EFC               	movlw	-4
 28384  013940  50E3               	movf	plusw1,w,c
 28385  013942  E104               	bnz	u6690
 28386  013944  0EFB               	movlw	-5
 28387  013946  28E3               	incf	plusw1,w,c
 28388  013948  A0D8               	btfss	status,0,c
 28389  01394A  D019               	goto	l8216
 28390  01394C                     u6690:
 28391  01394C  0E00               	movlw	0
 28392  01394E  6E30               	movwf	(btemp+8)^0,c
 28393  013950  0E00               	movlw	0
 28394  013952  6E31               	movwf	(btemp+9)^0,c
 28395  013954  0E80               	movlw	128
 28396  013956  6E32               	movwf	(btemp+10)^0,c
 28397  013958  0E7F               	movlw	127
 28398  01395A  6E33               	movwf	(btemp+11)^0,c
 28399                           
 28400                           ;stkvar	_prod @ sp[(-13)+0]
 28401  01395C  0EF3               	movlw	-13
 28402  01395E  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 28403  013964  0EF4               	movlw	-12
 28404  013966  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 28405  01396C  0EF5               	movlw	-11
 28406  01396E  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 28407  013974  0EF6               	movlw	-10
 28408  013976  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 28409  01397C  D044               	goto	l8232
 28410  01397E                     l8216:
 28411                           
 28412                           ;stkvar	_temp @ sp[(-13)+8]
 28413  01397E  0EFC               	movlw	-4
 28414  013980  BEE3               	btfsc	plusw1,7,c
 28415  013982  D007               	goto	u6700
 28416  013984  0EFC               	movlw	-4
 28417  013986  50E3               	movf	plusw1,w,c
 28418  013988  E10F               	bnz	l8222
 28419  01398A  0EFB               	movlw	-5
 28420  01398C  04E3               	decf	plusw1,w,c
 28421  01398E  B0D8               	btfsc	status,0,c
 28422  013990  D00B               	goto	l8222
 28423  013992                     u6700:
 28424                           
 28425                           ;stkvar	_prod @ sp[(-13)+0]
 28426  013992  0EF3               	movlw	-13
 28427  013994  6AE3               	clrf	plusw1,c
 28428  013996  0EF4               	movlw	-12
 28429  013998  6AE3               	clrf	plusw1,c
 28430  01399A  0EF5               	movlw	-11
 28431  01399C  6AE3               	clrf	plusw1,c
 28432  01399E  0EF6               	movlw	-10
 28433  0139A0  6AE3               	clrf	plusw1,c
 28434                           
 28435                           ;stkvar	_sign @ sp[(-13)+12]
 28436  0139A2  0EFF               	movlw	-1
 28437  0139A4  6AE3               	clrf	plusw1,c
 28438  0139A6  D02F               	goto	l8232
 28439  0139A8                     l8222:
 28440                           
 28441                           ;stkvar	_temp @ sp[(-13)+8]
 28442                           ;stkvar	_bexp @ sp[(-13)+10]
 28443  0139A8  0EFB               	movlw	-5
 28444  0139AA  006F FF8C  F028    	movff	plusw1,btemp
 28445  0139B0  0EFD               	movlw	-3
 28446  0139B2  0060  F0A3  FFE3   	movff	btemp,plusw1
 28447                           
 28448                           ;stkvar	_prod @ sp[(-13)+0]
 28449  0139B8  50E1               	movf	fsr1l,w,c
 28450  0139BA  0FF3               	addlw	-13
 28451  0139BC  6ED9               	movwf	fsr2l,c
 28452  0139BE  50E2               	movf	fsr1h,w,c
 28453  0139C0  6EDA               	movwf	fsr2h,c
 28454  0139C2  0EFF               	movlw	255
 28455  0139C4  22DA               	addwfc	fsr2h,f,c
 28456  0139C6  0EFF               	movlw	255
 28457  0139C8  16DE               	andwf	postinc2,f,c
 28458  0139CA  0EFF               	movlw	255
 28459  0139CC  16DE               	andwf	postinc2,f,c
 28460  0139CE  0E7F               	movlw	127
 28461  0139D0  16DE               	andwf	postinc2,f,c
 28462  0139D2  0E00               	movlw	0
 28463  0139D4  16DE               	andwf	postinc2,f,c
 28464                           
 28465                           ;stkvar	_bexp @ sp[(-13)+10]
 28466  0139D6  0EFD               	movlw	-3
 28467  0139D8  A0E3               	btfss	plusw1,0,c
 28468  0139DA  D008               	goto	l8230
 28469                           
 28470                           ;stkvar	_prod @ sp[(-13)+0]
 28471  0139DC  0EF5               	movlw	245
 28472  0139DE  24E1               	addwf	fsr1l,w,c
 28473  0139E0  6ED9               	movwf	fsr2l,c
 28474  0139E2  0EFF               	movlw	255
 28475  0139E4  20E2               	addwfc	fsr1h,w,c
 28476  0139E6  6EDA               	movwf	fsr2h,c
 28477  0139E8  0E00               	movlw	0
 28478  0139EA  8EDB               	bsf	plusw2,7,c
 28479  0139EC                     l8230:
 28480                           
 28481                           ;stkvar	_prod @ sp[(-13)+0]
 28482  0139EC  0EF6               	movlw	246
 28483  0139EE  24E1               	addwf	fsr1l,w,c
 28484  0139F0  6ED9               	movwf	fsr2l,c
 28485  0139F2  0EFF               	movlw	255
 28486  0139F4  20E2               	addwfc	fsr1h,w,c
 28487  0139F6  6EDA               	movwf	fsr2h,c
 28488                           
 28489                           ;stkvar	_bexp @ sp[(-13)+10]
 28490  0139F8  0EFD               	movlw	-3
 28491  0139FA  006F FF8C  F033    	movff	plusw1,btemp+11
 28492  013A00  90D8               	bcf	status,0,c
 28493  013A02  3033               	rrcf	(btemp+11)^0,w,c
 28494  013A04  6EDF               	movwf	indf2,c
 28495  013A06                     l8232:
 28496                           
 28497                           ;stkvar	_sign @ sp[(-13)+12]
 28498  013A06  0EFF               	movlw	-1
 28499  013A08  006F FF8C  F033    	movff	plusw1,btemp+11
 28500                           
 28501                           ;stkvar	_prod @ sp[(-13)+0]
 28502  013A0E  0EF6               	movlw	246
 28503  013A10  24E1               	addwf	fsr1l,w,c
 28504  013A12  6ED9               	movwf	fsr2l,c
 28505  013A14  0EFF               	movlw	255
 28506  013A16  20E2               	addwfc	fsr1h,w,c
 28507  013A18  6EDA               	movwf	fsr2h,c
 28508  013A1A  5033               	movf	(btemp+11)^0,w,c
 28509  013A1C  12DF               	iorwf	indf2,f,c
 28510                           
 28511                           ;stkvar	_prod @ sp[(-13)+0]
 28512  013A1E  0EF3               	movlw	-13
 28513  013A20  006F FF8C  F028    	movff	plusw1,btemp
 28514  013A26  0EF4               	movlw	-12
 28515  013A28  006F FF8C  F029    	movff	plusw1,btemp+1
 28516  013A2E  0EF5               	movlw	-11
 28517  013A30  006F FF8C  F02A    	movff	plusw1,btemp+2
 28518  013A36  0EF6               	movlw	-10
 28519  013A38  006F FF8C  F02B    	movff	plusw1,btemp+3
 28520  013A3E                     l2981:
 28521                           
 28522                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 28523  013A3E  0EEB               	movlw	235
 28524  013A40  26E1               	addwf	fsr1l,f,c
 28525  013A42  0EFF               	movlw	255
 28526  013A44  22E2               	addwfc	fsr1h,f,c
 28527  013A46  0012               	return		;funcret
 28528  013A48                     __end_of___flmul:
 28529                           	opt callstack 0
 28530                           
 28531 ;; *************** function _SYSTEM_Initialize *****************
 28532 ;; Defined at:
 28533 ;;		line 50 in file "mcc_generated_files/mcc.c"
 28534 ;; Parameters:    Size  Location     Type
 28535 ;;		None
 28536 ;; Auto vars:     Size  Location     Type
 28537 ;;		None
 28538 ;; Return value:  Size  Location     Type
 28539 ;;                  1  [STACK] void 
 28540 ;; Registers used:
 28541 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 28542 ;; Tracked objects:
 28543 ;;		On entry : 0/0
 28544 ;;		On exit  : 3F/3C
 28545 ;;		Unchanged: 0/0
 28546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28550 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28551 ;;Total ram usage:        0 bytes
 28552 ;; Hardware stack levels used:    1
 28553 ;; Hardware stack levels required when called:   17
 28554 ;; This function calls:
 28555 ;;		_ADCC_Initialize
 28556 ;;		_CLKREF_Initialize
 28557 ;;		_DMA1_Initialize
 28558 ;;		_DMA2_Initialize
 28559 ;;		_EXT_INT_Initialize
 28560 ;;		_FVR_Initialize
 28561 ;;		_INTERRUPT_Initialize
 28562 ;;		_OSCILLATOR_Initialize
 28563 ;;		_PIN_MANAGER_Initialize
 28564 ;;		_PMD_Initialize
 28565 ;;		_PWM8_Initialize
 28566 ;;		_SPI1_Initialize
 28567 ;;		_TMR2_Initialize
 28568 ;;		_TMR3_Initialize
 28569 ;;		_TMR5_Initialize
 28570 ;;		_TMR6_Initialize
 28571 ;;		_UART1_Initialize
 28572 ;;		_UART2_Initialize
 28573 ;; This function is called by:
 28574 ;;		_main
 28575 ;; This function uses a reentrant model
 28576 ;;
 28577                           
 28578                           	psect	text107
 28579  01A9AA                     __ptext107:
 28580                           	opt callstack 0
 28581  01A9AA                     _SYSTEM_Initialize:
 28582                           	opt callstack 13
 28583                           
 28584                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 28585                           
 28586                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28587                           ;incstack = 0
 28588  01A9AA  ECB5  F0D2         	call	_INTERRUPT_Initialize	;wreg free
 28589                           
 28590                           ; BSR set to: 57
 28591                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 28592  01A9AE  EC04  F0DB         	call	_PMD_Initialize	;wreg free
 28593                           
 28594                           ; BSR set to: 57
 28595                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 28596  01A9B2  ECEB  F0CF         	call	_PIN_MANAGER_Initialize	;wreg free
 28597                           
 28598                           ; BSR set to: 58
 28599                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 28600  01A9B6  ECF9  F0DA         	call	_OSCILLATOR_Initialize	;wreg free
 28601                           
 28602                           ; BSR set to: 57
 28603                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 28604  01A9BA  EC79  F0DB         	call	_FVR_Initialize	;wreg free
 28605                           
 28606                           ; BSR set to: 62
 28607                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 28608  01A9BE  EC4B  F0D2         	call	_ADCC_Initialize	;wreg free
 28609                           
 28610                           ;mcc_generated_files/mcc.c: 58:     PWM8_Initialize();
 28611  01A9C2  ECEE  F0DA         	call	_PWM8_Initialize	;wreg free
 28612                           
 28613                           ; BSR set to: 63
 28614                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 28615  01A9C6  ECD7  F0DA         	call	_TMR2_Initialize	;wreg free
 28616                           
 28617                           ; BSR set to: 57
 28618                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 28619  01A9CA  EC53  F0D7         	call	_EXT_INT_Initialize	;wreg free
 28620                           
 28621                           ; BSR set to: 57
 28622                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 28623  01A9CE  EC40  F0D8         	call	_TMR6_Initialize	;wreg free
 28624                           
 28625                           ;mcc_generated_files/mcc.c: 62:     TMR3_Initialize();
 28626  01A9D2  ECAA  F0D5         	call	_TMR3_Initialize	;wreg free
 28627                           
 28628                           ;mcc_generated_files/mcc.c: 63:     TMR5_Initialize();
 28629  01A9D6  EC87  F0D5         	call	_TMR5_Initialize	;wreg free
 28630                           
 28631                           ;mcc_generated_files/mcc.c: 64:     UART1_Initialize();
 28632  01A9DA  EC64  F0D5         	call	_UART1_Initialize	;wreg free
 28633                           
 28634                           ; BSR set to: 57
 28635                           ;mcc_generated_files/mcc.c: 65:     UART2_Initialize();
 28636  01A9DE  EC7C  F0D3         	call	_UART2_Initialize	;wreg free
 28637                           
 28638                           ; BSR set to: 57
 28639                           ;mcc_generated_files/mcc.c: 66:     SPI1_Initialize();
 28640  01A9E2  ECE3  F0DA         	call	_SPI1_Initialize	;wreg free
 28641                           
 28642                           ; BSR set to: 61
 28643                           ;mcc_generated_files/mcc.c: 67:     DMA2_Initialize();
 28644  01A9E6  ECD8  F0D3         	call	_DMA2_Initialize	;wreg free
 28645                           
 28646                           ; BSR set to: 59
 28647                           ;mcc_generated_files/mcc.c: 68:     DMA1_Initialize();
 28648  01A9EA  EC16  F0D2         	call	_DMA1_Initialize	;wreg free
 28649                           
 28650                           ; BSR set to: 59
 28651                           ;mcc_generated_files/mcc.c: 69:     CLKREF_Initialize();
 28652  01A9EE  EC4D  F0DB         	call	_CLKREF_Initialize	;wreg free
 28653                           
 28654                           ; BSR set to: 60
 28655                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 28656  01A9F2  0012               	return		;funcret
 28657  01A9F4                     __end_of_SYSTEM_Initialize:
 28658                           	opt callstack 0
 28659                           
 28660 ;; *************** function _UART2_Initialize *****************
 28661 ;; Defined at:
 28662 ;;		line 78 in file "mcc_generated_files/uart2.c"
 28663 ;; Parameters:    Size  Location     Type
 28664 ;;		None
 28665 ;; Auto vars:     Size  Location     Type
 28666 ;;		None
 28667 ;; Return value:  Size  Location     Type
 28668 ;;                  1  [STACK] void 
 28669 ;; Registers used:
 28670 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 28671 ;; Tracked objects:
 28672 ;;		On entry : 3F/39
 28673 ;;		On exit  : 3F/39
 28674 ;;		Unchanged: 0/0
 28675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28679 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28680 ;;Total ram usage:        0 bytes
 28681 ;; Hardware stack levels used:    1
 28682 ;; Hardware stack levels required when called:   16
 28683 ;; This function calls:
 28684 ;;		_UART2_SetRxInterruptHandler
 28685 ;;		_UART2_SetTxInterruptHandler
 28686 ;; This function is called by:
 28687 ;;		_SYSTEM_Initialize
 28688 ;; This function uses a reentrant model
 28689 ;;
 28690                           
 28691                           	psect	text108
 28692  01A6F8                     __ptext108:
 28693                           	opt callstack 0
 28694  01A6F8                     _UART2_Initialize:
 28695                           	opt callstack 13
 28696                           
 28697                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 28698                           
 28699                           ; BSR set to: 60
 28700                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28701                           ;incstack = 0
 28702  01A6F8  0139               	movlb	57	; () banked
 28703  01A6FA  9596               	bcf	150,2,b	;volatile
 28704                           
 28705                           ; BSR set to: 57
 28706                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 28707  01A6FC  0E0A               	movlw	low _UART2_Receive_ISR
 28708  01A6FE  6EE6               	movwf	postinc1,c
 28709  01A700  0EB5               	movlw	high _UART2_Receive_ISR
 28710  01A702  6EE6               	movwf	postinc1,c
 28711  01A704  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 28712  01A706  6EE6               	movwf	postinc1,c
 28713  01A708  ECB9  F0D8         	call	_UART2_SetRxInterruptHandler	;wreg free
 28714                           
 28715                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 28716  01A70C  0139               	movlb	57	; () banked
 28717  01A70E  9796               	bcf	150,3,b	;volatile
 28718                           
 28719                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 28720  01A710  0E54               	movlw	low _UART2_Transmit_ISR
 28721  01A712  6EE6               	movwf	postinc1,c
 28722  01A714  0EB0               	movlw	high _UART2_Transmit_ISR
 28723  01A716  6EE6               	movwf	postinc1,c
 28724  01A718  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 28725  01A71A  6EE6               	movwf	postinc1,c
 28726  01A71C  ECA5  F0D8         	call	_UART2_SetTxInterruptHandler	;wreg free
 28727                           
 28728                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 28729  01A720  013D               	movlb	61	; () banked
 28730  01A722  6BD4               	clrf	212,b	;volatile
 28731                           
 28732                           ; BSR set to: 61
 28733                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 28734  01A724  6BD6               	clrf	214,b	;volatile
 28735                           
 28736                           ; BSR set to: 61
 28737                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 28738  01A726  6BD8               	clrf	216,b	;volatile
 28739                           
 28740                           ; BSR set to: 61
 28741                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 28742  01A728  0EB0               	movlw	176
 28743  01A72A  6FDA               	movwf	218,b	;volatile
 28744                           
 28745                           ; BSR set to: 61
 28746                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 28747  01A72C  0E80               	movlw	128
 28748  01A72E  6FDB               	movwf	219,b	;volatile
 28749                           
 28750                           ; BSR set to: 61
 28751                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 28752  01A730  6BDC               	clrf	220,b	;volatile
 28753                           
 28754                           ; BSR set to: 61
 28755                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 28756  01A732  0E82               	movlw	130
 28757  01A734  6FDD               	movwf	221,b	;volatile
 28758                           
 28759                           ; BSR set to: 61
 28760                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 28761  01A736  0E06               	movlw	6
 28762  01A738  6FDE               	movwf	222,b	;volatile
 28763                           
 28764                           ; BSR set to: 61
 28765                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 28766  01A73A  6BDF               	clrf	223,b	;volatile
 28767                           
 28768                           ; BSR set to: 61
 28769                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 28770  01A73C  6BE0               	clrf	224,b	;volatile
 28771                           
 28772                           ; BSR set to: 61
 28773                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 28774  01A73E  6BE1               	clrf	225,b	;volatile
 28775                           
 28776                           ; BSR set to: 61
 28777                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 28778  01A740  6BE2               	clrf	226,b	;volatile
 28779                           
 28780                           ; BSR set to: 61
 28781                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 28782  01A742  6A5C               	clrf	_uart2TxHead^0,c	;volatile
 28783                           
 28784                           ; BSR set to: 61
 28785                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 28786  01A744  6A5B               	clrf	_uart2TxTail^0,c	;volatile
 28787                           
 28788                           ; BSR set to: 61
 28789                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 28790  01A746  0E40               	movlw	64
 28791  01A748  6E5A               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 28792                           
 28793                           ; BSR set to: 61
 28794                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 28795  01A74A  6A59               	clrf	_uart2RxHead^0,c	;volatile
 28796                           
 28797                           ; BSR set to: 61
 28798                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 28799  01A74C  6A58               	clrf	_uart2RxTail^0,c	;volatile
 28800                           
 28801                           ; BSR set to: 61
 28802                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 28803  01A74E  6A57               	clrf	_uart2RxCount^0,c	;volatile
 28804                           
 28805                           ; BSR set to: 61
 28806                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 28807  01A750  0139               	movlb	57	; () banked
 28808  01A752  8596               	bsf	150,2,b	;volatile
 28809                           
 28810                           ; BSR set to: 57
 28811                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 28812  01A754  0012               	return		;funcret
 28813  01A756                     __end_of_UART2_Initialize:
 28814                           	opt callstack 0
 28815                           
 28816 ;; *************** function _UART2_SetTxInterruptHandler *****************
 28817 ;; Defined at:
 28818 ;;		line 252 in file "mcc_generated_files/uart2.c"
 28819 ;; Parameters:    Size  Location     Type
 28820 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 28821 ;;		 -> UART2_Transmit_ISR(1), 
 28822 ;; Auto vars:     Size  Location     Type
 28823 ;;		None
 28824 ;; Return value:  Size  Location     Type
 28825 ;;                  1  [STACK] void 
 28826 ;; Registers used:
 28827 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 28828 ;; Tracked objects:
 28829 ;;		On entry : 3F/39
 28830 ;;		On exit  : 0/0
 28831 ;;		Unchanged: 0/0
 28832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28836 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28837 ;;Total ram usage:        0 bytes
 28838 ;; Hardware stack levels used:    1
 28839 ;; Hardware stack levels required when called:   15
 28840 ;; This function calls:
 28841 ;;		Nothing
 28842 ;; This function is called by:
 28843 ;;		_UART2_Initialize
 28844 ;; This function uses a reentrant model
 28845 ;;
 28846                           
 28847                           	psect	text109
 28848  01B14A                     __ptext109:
 28849                           	opt callstack 0
 28850  01B14A                     _UART2_SetTxInterruptHandler:
 28851                           	opt callstack 13
 28852                           
 28853                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 28854                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 28855                           
 28856                           ; BSR set to: 57
 28857                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28858                           ;incstack = 0
 28859  01B14A  50E1               	movf	fsr1l,w,c
 28860  01B14C  0FFD               	addlw	-3
 28861  01B14E  6ED9               	movwf	fsr2l,c
 28862  01B150  50E2               	movf	fsr1h,w,c
 28863  01B152  6EDA               	movwf	fsr2h,c
 28864  01B154  0EFF               	movlw	255
 28865  01B156  22DA               	addwfc	fsr2h,f,c
 28866  01B158  006F FF78  F0B4    	movff	postinc2,_UART2_TxInterruptHandler
 28867  01B15E  006F FF78  F0B5    	movff	postinc2,_UART2_TxInterruptHandler+1
 28868  01B164  006F FF74  F0B6    	movff	postdec2,_UART2_TxInterruptHandler+2
 28869                           
 28870                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 28871  01B16A  52E5               	movf	postdec1,f,c
 28872  01B16C  52E5               	movf	postdec1,f,c
 28873  01B16E  52E5               	movf	postdec1,f,c
 28874  01B170  0012               	return		;funcret
 28875  01B172                     __end_of_UART2_SetTxInterruptHandler:
 28876                           	opt callstack 0
 28877                           
 28878 ;; *************** function _UART2_SetRxInterruptHandler *****************
 28879 ;; Defined at:
 28880 ;;		line 248 in file "mcc_generated_files/uart2.c"
 28881 ;; Parameters:    Size  Location     Type
 28882 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 28883 ;;		 -> UART2_Receive_ISR(1), 
 28884 ;; Auto vars:     Size  Location     Type
 28885 ;;		None
 28886 ;; Return value:  Size  Location     Type
 28887 ;;                  1  [STACK] void 
 28888 ;; Registers used:
 28889 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 28890 ;; Tracked objects:
 28891 ;;		On entry : 3F/39
 28892 ;;		On exit  : 0/0
 28893 ;;		Unchanged: 0/0
 28894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28899 ;;Total ram usage:        0 bytes
 28900 ;; Hardware stack levels used:    1
 28901 ;; Hardware stack levels required when called:   15
 28902 ;; This function calls:
 28903 ;;		Nothing
 28904 ;; This function is called by:
 28905 ;;		_UART2_Initialize
 28906 ;; This function uses a reentrant model
 28907 ;;
 28908                           
 28909                           	psect	text110
 28910  01B172                     __ptext110:
 28911                           	opt callstack 0
 28912  01B172                     _UART2_SetRxInterruptHandler:
 28913                           	opt callstack 13
 28914                           
 28915                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 28916                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 28917                           
 28918                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28919                           ;incstack = 0
 28920  01B172  50E1               	movf	fsr1l,w,c
 28921  01B174  0FFD               	addlw	-3
 28922  01B176  6ED9               	movwf	fsr2l,c
 28923  01B178  50E2               	movf	fsr1h,w,c
 28924  01B17A  6EDA               	movwf	fsr2h,c
 28925  01B17C  0EFF               	movlw	255
 28926  01B17E  22DA               	addwfc	fsr2h,f,c
 28927  01B180  006F FF78  F0B7    	movff	postinc2,_UART2_RxInterruptHandler
 28928  01B186  006F FF78  F0B8    	movff	postinc2,_UART2_RxInterruptHandler+1
 28929  01B18C  006F FF74  F0B9    	movff	postdec2,_UART2_RxInterruptHandler+2
 28930                           
 28931                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 28932  01B192  52E5               	movf	postdec1,f,c
 28933  01B194  52E5               	movf	postdec1,f,c
 28934  01B196  52E5               	movf	postdec1,f,c
 28935  01B198  0012               	return		;funcret
 28936  01B19A                     __end_of_UART2_SetRxInterruptHandler:
 28937                           	opt callstack 0
 28938                           
 28939 ;; *************** function _UART1_Initialize *****************
 28940 ;; Defined at:
 28941 ;;		line 75 in file "mcc_generated_files/uart1.c"
 28942 ;; Parameters:    Size  Location     Type
 28943 ;;		None
 28944 ;; Auto vars:     Size  Location     Type
 28945 ;;		None
 28946 ;; Return value:  Size  Location     Type
 28947 ;;                  1  [STACK] void 
 28948 ;; Registers used:
 28949 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 28950 ;; Tracked objects:
 28951 ;;		On entry : 0/39
 28952 ;;		On exit  : 3F/39
 28953 ;;		Unchanged: 0/0
 28954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28959 ;;Total ram usage:        0 bytes
 28960 ;; Hardware stack levels used:    1
 28961 ;; Hardware stack levels required when called:   16
 28962 ;; This function calls:
 28963 ;;		_UART1_SetRxInterruptHandler
 28964 ;; This function is called by:
 28965 ;;		_SYSTEM_Initialize
 28966 ;; This function uses a reentrant model
 28967 ;;
 28968                           
 28969                           	psect	text111
 28970  01AAC8                     __ptext111:
 28971                           	opt callstack 0
 28972  01AAC8                     _UART1_Initialize:
 28973                           	opt callstack 13
 28974                           
 28975                           ;mcc_generated_files/uart1.c: 78:  PIE3bits.U1RXIE = 0;
 28976                           
 28977                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28978                           ;incstack = 0
 28979  01AAC8  0139               	movlb	57	; () banked
 28980  01AACA  9793               	bcf	147,3,b	;volatile
 28981                           
 28982                           ; BSR set to: 57
 28983                           ;mcc_generated_files/uart1.c: 79:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 28984  01AACC  0E44               	movlw	low _UART1_Receive_ISR
 28985  01AACE  6EE6               	movwf	postinc1,c
 28986  01AAD0  0EB5               	movlw	high _UART1_Receive_ISR
 28987  01AAD2  6EE6               	movwf	postinc1,c
 28988  01AAD4  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 28989  01AAD6  6EE6               	movwf	postinc1,c
 28990  01AAD8  ECCD  F0D8         	call	_UART1_SetRxInterruptHandler	;wreg free
 28991                           
 28992                           ;mcc_generated_files/uart1.c: 84:  U1P1L = 0x00;
 28993  01AADC  013D               	movlb	61	; () banked
 28994  01AADE  6BEC               	clrf	236,b	;volatile
 28995                           
 28996                           ; BSR set to: 61
 28997                           ;mcc_generated_files/uart1.c: 87:  U1P1H = 0x00;
 28998  01AAE0  6BED               	clrf	237,b	;volatile
 28999                           
 29000                           ; BSR set to: 61
 29001                           ;mcc_generated_files/uart1.c: 90:  U1P2L = 0x00;
 29002  01AAE2  6BEE               	clrf	238,b	;volatile
 29003                           
 29004                           ; BSR set to: 61
 29005                           ;mcc_generated_files/uart1.c: 93:  U1P2H = 0x00;
 29006  01AAE4  6BEF               	clrf	239,b	;volatile
 29007                           
 29008                           ; BSR set to: 61
 29009                           ;mcc_generated_files/uart1.c: 96:  U1P3L = 0x00;
 29010  01AAE6  6BF0               	clrf	240,b	;volatile
 29011                           
 29012                           ; BSR set to: 61
 29013                           ;mcc_generated_files/uart1.c: 99:  U1P3H = 0x00;
 29014  01AAE8  6BF1               	clrf	241,b	;volatile
 29015                           
 29016                           ; BSR set to: 61
 29017                           ;mcc_generated_files/uart1.c: 102:  U1CON0 = 0xB0;
 29018  01AAEA  0EB0               	movlw	176
 29019  01AAEC  6FF2               	movwf	242,b	;volatile
 29020                           
 29021                           ; BSR set to: 61
 29022                           ;mcc_generated_files/uart1.c: 105:  U1CON1 = 0x80;
 29023  01AAEE  0E80               	movlw	128
 29024  01AAF0  6FF3               	movwf	243,b	;volatile
 29025                           
 29026                           ; BSR set to: 61
 29027                           ;mcc_generated_files/uart1.c: 108:  U1CON2 = 0x00;
 29028  01AAF2  6BF4               	clrf	244,b	;volatile
 29029                           
 29030                           ; BSR set to: 61
 29031                           ;mcc_generated_files/uart1.c: 111:     U1BRGL = 0x8A;
 29032  01AAF4  0E8A               	movlw	138
 29033  01AAF6  6FF5               	movwf	245,b	;volatile
 29034                           
 29035                           ; BSR set to: 61
 29036                           ;mcc_generated_files/uart1.c: 114:     U1BRGH = 0x00;
 29037  01AAF8  6BF6               	clrf	246,b	;volatile
 29038                           
 29039                           ; BSR set to: 61
 29040                           ;mcc_generated_files/uart1.c: 117:  U1FIFO = 0x00;
 29041  01AAFA  6BF7               	clrf	247,b	;volatile
 29042                           
 29043                           ; BSR set to: 61
 29044                           ;mcc_generated_files/uart1.c: 120:  U1UIR = 0x00;
 29045  01AAFC  6BF8               	clrf	248,b	;volatile
 29046                           
 29047                           ; BSR set to: 61
 29048                           ;mcc_generated_files/uart1.c: 123:  U1ERRIR = 0x00;
 29049  01AAFE  6BF9               	clrf	249,b	;volatile
 29050                           
 29051                           ; BSR set to: 61
 29052                           ;mcc_generated_files/uart1.c: 126:  U1ERRIE = 0x00;
 29053  01AB00  6BFA               	clrf	250,b	;volatile
 29054                           
 29055                           ; BSR set to: 61
 29056                           ;mcc_generated_files/uart1.c: 129:  uart1RxHead = 0;
 29057  01AB02  6A5F               	clrf	_uart1RxHead^0,c	;volatile
 29058                           
 29059                           ; BSR set to: 61
 29060                           ;mcc_generated_files/uart1.c: 130:  uart1RxTail = 0;
 29061  01AB04  6A5E               	clrf	_uart1RxTail^0,c	;volatile
 29062                           
 29063                           ; BSR set to: 61
 29064                           ;mcc_generated_files/uart1.c: 131:  uart1RxCount = 0;
 29065  01AB06  6A5D               	clrf	_uart1RxCount^0,c	;volatile
 29066                           
 29067                           ; BSR set to: 61
 29068                           ;mcc_generated_files/uart1.c: 134:  PIE3bits.U1RXIE = 1;
 29069  01AB08  0139               	movlb	57	; () banked
 29070  01AB0A  8793               	bsf	147,3,b	;volatile
 29071                           
 29072                           ; BSR set to: 57
 29073                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 29074  01AB0C  0012               	return		;funcret
 29075  01AB0E                     __end_of_UART1_Initialize:
 29076                           	opt callstack 0
 29077                           
 29078 ;; *************** function _UART1_SetRxInterruptHandler *****************
 29079 ;; Defined at:
 29080 ;;		line 207 in file "mcc_generated_files/uart1.c"
 29081 ;; Parameters:    Size  Location     Type
 29082 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29083 ;;		 -> UART1_Receive_ISR(1), 
 29084 ;; Auto vars:     Size  Location     Type
 29085 ;;		None
 29086 ;; Return value:  Size  Location     Type
 29087 ;;                  1  [STACK] void 
 29088 ;; Registers used:
 29089 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29090 ;; Tracked objects:
 29091 ;;		On entry : 3F/39
 29092 ;;		On exit  : 0/0
 29093 ;;		Unchanged: 0/0
 29094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29098 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29099 ;;Total ram usage:        0 bytes
 29100 ;; Hardware stack levels used:    1
 29101 ;; Hardware stack levels required when called:   15
 29102 ;; This function calls:
 29103 ;;		Nothing
 29104 ;; This function is called by:
 29105 ;;		_UART1_Initialize
 29106 ;; This function uses a reentrant model
 29107 ;;
 29108                           
 29109                           	psect	text112
 29110  01B19A                     __ptext112:
 29111                           	opt callstack 0
 29112  01B19A                     _UART1_SetRxInterruptHandler:
 29113                           	opt callstack 13
 29114                           
 29115                           ;mcc_generated_files/uart1.c: 208:  UART1_RxInterruptHandler = InterruptHandler;
 29116                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29117                           
 29118                           ; BSR set to: 57
 29119                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29120                           ;incstack = 0
 29121  01B19A  50E1               	movf	fsr1l,w,c
 29122  01B19C  0FFD               	addlw	-3
 29123  01B19E  6ED9               	movwf	fsr2l,c
 29124  01B1A0  50E2               	movf	fsr1h,w,c
 29125  01B1A2  6EDA               	movwf	fsr2h,c
 29126  01B1A4  0EFF               	movlw	255
 29127  01B1A6  22DA               	addwfc	fsr2h,f,c
 29128  01B1A8  006F FF78  F0B1    	movff	postinc2,_UART1_RxInterruptHandler
 29129  01B1AE  006F FF78  F0B2    	movff	postinc2,_UART1_RxInterruptHandler+1
 29130  01B1B4  006F FF74  F0B3    	movff	postdec2,_UART1_RxInterruptHandler+2
 29131                           
 29132                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 29133  01B1BA  52E5               	movf	postdec1,f,c
 29134  01B1BC  52E5               	movf	postdec1,f,c
 29135  01B1BE  52E5               	movf	postdec1,f,c
 29136  01B1C0  0012               	return		;funcret
 29137  01B1C2                     __end_of_UART1_SetRxInterruptHandler:
 29138                           	opt callstack 0
 29139                           
 29140 ;; *************** function _TMR6_Initialize *****************
 29141 ;; Defined at:
 29142 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 29143 ;; Parameters:    Size  Location     Type
 29144 ;;		None
 29145 ;; Auto vars:     Size  Location     Type
 29146 ;;		None
 29147 ;; Return value:  Size  Location     Type
 29148 ;;                  1  [STACK] void 
 29149 ;; Registers used:
 29150 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 29151 ;; Tracked objects:
 29152 ;;		On entry : 3F/39
 29153 ;;		On exit  : 0/0
 29154 ;;		Unchanged: 0/0
 29155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29159 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29160 ;;Total ram usage:        0 bytes
 29161 ;; Hardware stack levels used:    1
 29162 ;; Hardware stack levels required when called:   16
 29163 ;; This function calls:
 29164 ;;		_TMR6_SetInterruptHandler
 29165 ;; This function is called by:
 29166 ;;		_SYSTEM_Initialize
 29167 ;; This function uses a reentrant model
 29168 ;;
 29169                           
 29170                           	psect	text113
 29171  01B080                     __ptext113:
 29172                           	opt callstack 0
 29173  01B080                     _TMR6_Initialize:
 29174                           	opt callstack 13
 29175                           
 29176                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 29177                           
 29178                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29179                           ;incstack = 0
 29180  01B080  0E01               	movlw	1
 29181  01B082  6E96               	movwf	150,c	;volatile
 29182                           
 29183                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 29184  01B084  6A95               	clrf	149,c	;volatile
 29185                           
 29186                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 29187  01B086  6A97               	clrf	151,c	;volatile
 29188                           
 29189                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 29190  01B088  0E7C               	movlw	124
 29191  01B08A  6E93               	movwf	147,c	;volatile
 29192                           
 29193                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 29194  01B08C  6A92               	clrf	146,c	;volatile
 29195                           
 29196                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 29197  01B08E  0139               	movlb	57	; () banked
 29198  01B090  91A9               	bcf	169,0,b	;volatile
 29199                           
 29200                           ; BSR set to: 57
 29201                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 29202  01B092  8199               	bsf	153,0,b	;volatile
 29203                           
 29204                           ; BSR set to: 57
 29205                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 29206  01B094  0E5C               	movlw	low _TMR6_DefaultInterruptHandler
 29207  01B096  6EE6               	movwf	postinc1,c
 29208  01B098  0EA9               	movlw	high _TMR6_DefaultInterruptHandler
 29209  01B09A  6EE6               	movwf	postinc1,c
 29210  01B09C  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 29211  01B09E  6EE6               	movwf	postinc1,c
 29212  01B0A0  ECE1  F0D8         	call	_TMR6_SetInterruptHandler	;wreg free
 29213                           
 29214                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 29215  01B0A4  0EE0               	movlw	224
 29216  01B0A6  6E94               	movwf	148,c	;volatile
 29217                           
 29218                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29219  01B0A8  0012               	return		;funcret
 29220  01B0AA                     __end_of_TMR6_Initialize:
 29221                           	opt callstack 0
 29222                           
 29223 ;; *************** function _TMR6_SetInterruptHandler *****************
 29224 ;; Defined at:
 29225 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 29226 ;; Parameters:    Size  Location     Type
 29227 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29228 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 29229 ;; Auto vars:     Size  Location     Type
 29230 ;;		None
 29231 ;; Return value:  Size  Location     Type
 29232 ;;                  1  [STACK] void 
 29233 ;; Registers used:
 29234 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29235 ;; Tracked objects:
 29236 ;;		On entry : 3F/39
 29237 ;;		On exit  : 0/0
 29238 ;;		Unchanged: 0/0
 29239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29243 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29244 ;;Total ram usage:        0 bytes
 29245 ;; Hardware stack levels used:    1
 29246 ;; Hardware stack levels required when called:   15
 29247 ;; This function calls:
 29248 ;;		Nothing
 29249 ;; This function is called by:
 29250 ;;		_TMR6_Initialize
 29251 ;; This function uses a reentrant model
 29252 ;;
 29253                           
 29254                           	psect	text114
 29255  01B1C2                     __ptext114:
 29256                           	opt callstack 0
 29257  01B1C2                     _TMR6_SetInterruptHandler:
 29258                           	opt callstack 13
 29259                           
 29260                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 29261                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29262                           
 29263                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29264                           ;incstack = 0
 29265  01B1C2  50E1               	movf	fsr1l,w,c
 29266  01B1C4  0FFD               	addlw	-3
 29267  01B1C6  6ED9               	movwf	fsr2l,c
 29268  01B1C8  50E2               	movf	fsr1h,w,c
 29269  01B1CA  6EDA               	movwf	fsr2h,c
 29270  01B1CC  0EFF               	movlw	255
 29271  01B1CE  22DA               	addwfc	fsr2h,f,c
 29272  01B1D0  006F FF78  F0A8    	movff	postinc2,_TMR6_InterruptHandler
 29273  01B1D6  006F FF78  F0A9    	movff	postinc2,_TMR6_InterruptHandler+1
 29274  01B1DC  006F FF74  F0AA    	movff	postdec2,_TMR6_InterruptHandler+2
 29275                           
 29276                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 29277  01B1E2  52E5               	movf	postdec1,f,c
 29278  01B1E4  52E5               	movf	postdec1,f,c
 29279  01B1E6  52E5               	movf	postdec1,f,c
 29280  01B1E8  0012               	return		;funcret
 29281  01B1EA                     __end_of_TMR6_SetInterruptHandler:
 29282                           	opt callstack 0
 29283                           
 29284 ;; *************** function _TMR5_Initialize *****************
 29285 ;; Defined at:
 29286 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 29287 ;; Parameters:    Size  Location     Type
 29288 ;;		None
 29289 ;; Auto vars:     Size  Location     Type
 29290 ;;		None
 29291 ;; Return value:  Size  Location     Type
 29292 ;;                  1  [STACK] void 
 29293 ;; Registers used:
 29294 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 29295 ;; Tracked objects:
 29296 ;;		On entry : 0/39
 29297 ;;		On exit  : 0/0
 29298 ;;		Unchanged: 0/0
 29299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29303 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29304 ;;Total ram usage:        0 bytes
 29305 ;; Hardware stack levels used:    1
 29306 ;; Hardware stack levels required when called:   16
 29307 ;; This function calls:
 29308 ;;		_TMR5_SetInterruptHandler
 29309 ;; This function is called by:
 29310 ;;		_SYSTEM_Initialize
 29311 ;; This function uses a reentrant model
 29312 ;;
 29313                           
 29314                           	psect	text115
 29315  01AB0E                     __ptext115:
 29316                           	opt callstack 0
 29317  01AB0E                     _TMR5_Initialize:
 29318                           	opt callstack 13
 29319                           
 29320                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 29321                           
 29322                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29323                           ;incstack = 0
 29324  01AB0E  6A9B               	clrf	155,c	;volatile
 29325                           
 29326                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 29327  01AB10  6A9C               	clrf	156,c	;volatile
 29328                           
 29329                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 29330  01AB12  0E01               	movlw	1
 29331  01AB14  6E9D               	movwf	157,c	;volatile
 29332                           
 29333                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 29334  01AB16  0E63               	movlw	99
 29335  01AB18  6E99               	movwf	153,c	;volatile
 29336                           
 29337                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 29338  01AB1A  0EC0               	movlw	192
 29339  01AB1C  6E98               	movwf	152,c	;volatile
 29340                           
 29341                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 29342  01AB1E  5098               	movf	152,w,c	;volatile
 29343  01AB20  006F FE64  F028    	movff	16281,btemp	;volatile
 29344  01AB26  6A29               	clrf	(btemp+1)^0,c
 29345  01AB28  0060  F0A0  F029   	movff	btemp,btemp+1
 29346  01AB2E  6A28               	clrf	btemp^0,c
 29347  01AB30  1028               	iorwf	btemp^0,w,c
 29348  01AB32  6E52               	movwf	_timer5ReloadVal^0,c	;volatile
 29349  01AB34  5029               	movf	(btemp+1)^0,w,c
 29350  01AB36  6E53               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 29351                           
 29352                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 29353  01AB38  0139               	movlb	57	; () banked
 29354  01AB3A  9DA8               	bcf	168,6,b	;volatile
 29355                           
 29356                           ; BSR set to: 57
 29357                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 29358  01AB3C  8D98               	bsf	152,6,b	;volatile
 29359                           
 29360                           ; BSR set to: 57
 29361                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 29362  01AB3E  0EDA               	movlw	low _TMR5_DefaultInterruptHandler
 29363  01AB40  6EE6               	movwf	postinc1,c
 29364  01AB42  0EAE               	movlw	high _TMR5_DefaultInterruptHandler
 29365  01AB44  6EE6               	movwf	postinc1,c
 29366  01AB46  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 29367  01AB48  6EE6               	movwf	postinc1,c
 29368  01AB4A  ECF5  F0D8         	call	_TMR5_SetInterruptHandler	;wreg free
 29369                           
 29370                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 29371  01AB4E  0E31               	movlw	49
 29372  01AB50  6E9A               	movwf	154,c	;volatile
 29373                           
 29374                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29375  01AB52  0012               	return		;funcret
 29376  01AB54                     __end_of_TMR5_Initialize:
 29377                           	opt callstack 0
 29378                           
 29379 ;; *************** function _TMR5_SetInterruptHandler *****************
 29380 ;; Defined at:
 29381 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 29382 ;; Parameters:    Size  Location     Type
 29383 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29384 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 29385 ;; Auto vars:     Size  Location     Type
 29386 ;;		None
 29387 ;; Return value:  Size  Location     Type
 29388 ;;                  1  [STACK] void 
 29389 ;; Registers used:
 29390 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29391 ;; Tracked objects:
 29392 ;;		On entry : 3F/39
 29393 ;;		On exit  : 0/0
 29394 ;;		Unchanged: 0/0
 29395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29399 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29400 ;;Total ram usage:        0 bytes
 29401 ;; Hardware stack levels used:    1
 29402 ;; Hardware stack levels required when called:   15
 29403 ;; This function calls:
 29404 ;;		Nothing
 29405 ;; This function is called by:
 29406 ;;		_TMR5_Initialize
 29407 ;; This function uses a reentrant model
 29408 ;;
 29409                           
 29410                           	psect	text116
 29411  01B1EA                     __ptext116:
 29412                           	opt callstack 0
 29413  01B1EA                     _TMR5_SetInterruptHandler:
 29414                           	opt callstack 13
 29415                           
 29416                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 29417                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29418                           
 29419                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29420                           ;incstack = 0
 29421  01B1EA  50E1               	movf	fsr1l,w,c
 29422  01B1EC  0FFD               	addlw	-3
 29423  01B1EE  6ED9               	movwf	fsr2l,c
 29424  01B1F0  50E2               	movf	fsr1h,w,c
 29425  01B1F2  6EDA               	movwf	fsr2h,c
 29426  01B1F4  0EFF               	movlw	255
 29427  01B1F6  22DA               	addwfc	fsr2h,f,c
 29428  01B1F8  006F FF78  F0A5    	movff	postinc2,_TMR5_InterruptHandler
 29429  01B1FE  006F FF78  F0A6    	movff	postinc2,_TMR5_InterruptHandler+1
 29430  01B204  006F FF74  F0A7    	movff	postdec2,_TMR5_InterruptHandler+2
 29431                           
 29432                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 29433  01B20A  52E5               	movf	postdec1,f,c
 29434  01B20C  52E5               	movf	postdec1,f,c
 29435  01B20E  52E5               	movf	postdec1,f,c
 29436  01B210  0012               	return		;funcret
 29437  01B212                     __end_of_TMR5_SetInterruptHandler:
 29438                           	opt callstack 0
 29439                           
 29440 ;; *************** function _TMR3_Initialize *****************
 29441 ;; Defined at:
 29442 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 29443 ;; Parameters:    Size  Location     Type
 29444 ;;		None
 29445 ;; Auto vars:     Size  Location     Type
 29446 ;;		None
 29447 ;; Return value:  Size  Location     Type
 29448 ;;                  1  [STACK] void 
 29449 ;; Registers used:
 29450 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 29451 ;; Tracked objects:
 29452 ;;		On entry : 0/39
 29453 ;;		On exit  : 0/0
 29454 ;;		Unchanged: 0/0
 29455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29460 ;;Total ram usage:        0 bytes
 29461 ;; Hardware stack levels used:    1
 29462 ;; Hardware stack levels required when called:   16
 29463 ;; This function calls:
 29464 ;;		_TMR3_SetInterruptHandler
 29465 ;; This function is called by:
 29466 ;;		_SYSTEM_Initialize
 29467 ;; This function uses a reentrant model
 29468 ;;
 29469                           
 29470                           	psect	text117
 29471  01AB54                     __ptext117:
 29472                           	opt callstack 0
 29473  01AB54                     _TMR3_Initialize:
 29474                           	opt callstack 13
 29475                           
 29476                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 29477                           
 29478                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29479                           ;incstack = 0
 29480  01AB54  6AA7               	clrf	167,c	;volatile
 29481                           
 29482                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 29483  01AB56  6AA8               	clrf	168,c	;volatile
 29484                           
 29485                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 29486  01AB58  0E01               	movlw	1
 29487  01AB5A  6EA9               	movwf	169,c	;volatile
 29488                           
 29489                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 29490  01AB5C  0E3C               	movlw	60
 29491  01AB5E  6EA5               	movwf	165,c	;volatile
 29492                           
 29493                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 29494  01AB60  0EB0               	movlw	176
 29495  01AB62  6EA4               	movwf	164,c	;volatile
 29496                           
 29497                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 29498  01AB64  50A4               	movf	164,w,c	;volatile
 29499  01AB66  006F FE94  F028    	movff	16293,btemp	;volatile
 29500  01AB6C  6A29               	clrf	(btemp+1)^0,c
 29501  01AB6E  0060  F0A0  F029   	movff	btemp,btemp+1
 29502  01AB74  6A28               	clrf	btemp^0,c
 29503  01AB76  1028               	iorwf	btemp^0,w,c
 29504  01AB78  6E4E               	movwf	_timer3ReloadVal^0,c	;volatile
 29505  01AB7A  5029               	movf	(btemp+1)^0,w,c
 29506  01AB7C  6E4F               	movwf	(_timer3ReloadVal+1)^0,c	;volatile
 29507                           
 29508                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 29509  01AB7E  0139               	movlb	57	; () banked
 29510  01AB80  9DA6               	bcf	166,6,b	;volatile
 29511                           
 29512                           ; BSR set to: 57
 29513                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 29514  01AB82  8D96               	bsf	150,6,b	;volatile
 29515                           
 29516                           ; BSR set to: 57
 29517                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 29518  01AB84  0E1C               	movlw	low _TMR3_DefaultInterruptHandler
 29519  01AB86  6EE6               	movwf	postinc1,c
 29520  01AB88  0EB7               	movlw	high _TMR3_DefaultInterruptHandler
 29521  01AB8A  6EE6               	movwf	postinc1,c
 29522  01AB8C  0E01               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 29523  01AB8E  6EE6               	movwf	postinc1,c
 29524  01AB90  EC09  F0D9         	call	_TMR3_SetInterruptHandler	;wreg free
 29525                           
 29526                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 29527  01AB94  0E31               	movlw	49
 29528  01AB96  6EA6               	movwf	166,c	;volatile
 29529                           
 29530                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29531  01AB98  0012               	return		;funcret
 29532  01AB9A                     __end_of_TMR3_Initialize:
 29533                           	opt callstack 0
 29534                           
 29535 ;; *************** function _TMR3_SetInterruptHandler *****************
 29536 ;; Defined at:
 29537 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 29538 ;; Parameters:    Size  Location     Type
 29539 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29540 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 29541 ;; Auto vars:     Size  Location     Type
 29542 ;;		None
 29543 ;; Return value:  Size  Location     Type
 29544 ;;                  1  [STACK] void 
 29545 ;; Registers used:
 29546 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29547 ;; Tracked objects:
 29548 ;;		On entry : 0/1
 29549 ;;		On exit  : 0/0
 29550 ;;		Unchanged: 0/0
 29551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29555 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29556 ;;Total ram usage:        0 bytes
 29557 ;; Hardware stack levels used:    1
 29558 ;; Hardware stack levels required when called:   15
 29559 ;; This function calls:
 29560 ;;		Nothing
 29561 ;; This function is called by:
 29562 ;;		_TMR3_Initialize
 29563 ;;		_init_bsoc
 29564 ;; This function uses a reentrant model
 29565 ;;
 29566                           
 29567                           	psect	text118
 29568  01B212                     __ptext118:
 29569                           	opt callstack 0
 29570  01B212                     _TMR3_SetInterruptHandler:
 29571                           	opt callstack 14
 29572                           
 29573                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 29574                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29575                           
 29576                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29577                           ;incstack = 0
 29578  01B212  50E1               	movf	fsr1l,w,c
 29579  01B214  0FFD               	addlw	-3
 29580  01B216  6ED9               	movwf	fsr2l,c
 29581  01B218  50E2               	movf	fsr1h,w,c
 29582  01B21A  6EDA               	movwf	fsr2h,c
 29583  01B21C  0EFF               	movlw	255
 29584  01B21E  22DA               	addwfc	fsr2h,f,c
 29585  01B220  006F FF78  F0A2    	movff	postinc2,_TMR3_InterruptHandler
 29586  01B226  006F FF78  F0A3    	movff	postinc2,_TMR3_InterruptHandler+1
 29587  01B22C  006F FF74  F0A4    	movff	postdec2,_TMR3_InterruptHandler+2
 29588                           
 29589                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 29590  01B232  52E5               	movf	postdec1,f,c
 29591  01B234  52E5               	movf	postdec1,f,c
 29592  01B236  52E5               	movf	postdec1,f,c
 29593  01B238  0012               	return		;funcret
 29594  01B23A                     __end_of_TMR3_SetInterruptHandler:
 29595                           	opt callstack 0
 29596                           
 29597 ;; *************** function _TMR2_Initialize *****************
 29598 ;; Defined at:
 29599 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 29600 ;; Parameters:    Size  Location     Type
 29601 ;;		None
 29602 ;; Auto vars:     Size  Location     Type
 29603 ;;		None
 29604 ;; Return value:  Size  Location     Type
 29605 ;;                  1  [STACK] void 
 29606 ;; Registers used:
 29607 ;;		wreg, status,2
 29608 ;; Tracked objects:
 29609 ;;		On entry : 3F/3F
 29610 ;;		On exit  : 3F/39
 29611 ;;		Unchanged: 0/0
 29612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29617 ;;Total ram usage:        0 bytes
 29618 ;; Hardware stack levels used:    1
 29619 ;; Hardware stack levels required when called:   15
 29620 ;; This function calls:
 29621 ;;		Nothing
 29622 ;; This function is called by:
 29623 ;;		_SYSTEM_Initialize
 29624 ;; This function uses a reentrant model
 29625 ;;
 29626                           
 29627                           	psect	text119
 29628  01B5AE                     __ptext119:
 29629                           	opt callstack 0
 29630  01B5AE                     _TMR2_Initialize:
 29631                           	opt callstack 14
 29632                           
 29633                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 29634                           
 29635                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29636                           ;incstack = 0
 29637  01B5AE  0E01               	movlw	1
 29638  01B5B0  6EAE               	movwf	174,c	;volatile
 29639                           
 29640                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 29641  01B5B2  6AAD               	clrf	173,c	;volatile
 29642                           
 29643                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 29644  01B5B4  6AAF               	clrf	175,c	;volatile
 29645                           
 29646                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 29647  01B5B6  0E63               	movlw	99
 29648  01B5B8  6EAB               	movwf	171,c	;volatile
 29649                           
 29650                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 29651  01B5BA  6AAA               	clrf	170,c	;volatile
 29652                           
 29653                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 29654  01B5BC  0139               	movlb	57	; () banked
 29655  01B5BE  95A4               	bcf	164,2,b	;volatile
 29656                           
 29657                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 29658  01B5C0  0EC0               	movlw	192
 29659  01B5C2  6EAC               	movwf	172,c	;volatile
 29660                           
 29661                           ; BSR set to: 57
 29662                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29663  01B5C4  0012               	return		;funcret
 29664  01B5C6                     __end_of_TMR2_Initialize:
 29665                           	opt callstack 0
 29666                           
 29667 ;; *************** function _SPI1_Initialize *****************
 29668 ;; Defined at:
 29669 ;;		line 64 in file "mcc_generated_files/spi1.c"
 29670 ;; Parameters:    Size  Location     Type
 29671 ;;		None
 29672 ;; Auto vars:     Size  Location     Type
 29673 ;;		None
 29674 ;; Return value:  Size  Location     Type
 29675 ;;                  1  [STACK] void 
 29676 ;; Registers used:
 29677 ;;		wreg, status,2
 29678 ;; Tracked objects:
 29679 ;;		On entry : 3F/39
 29680 ;;		On exit  : 3F/3D
 29681 ;;		Unchanged: 0/0
 29682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29686 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29687 ;;Total ram usage:        0 bytes
 29688 ;; Hardware stack levels used:    1
 29689 ;; Hardware stack levels required when called:   15
 29690 ;; This function calls:
 29691 ;;		Nothing
 29692 ;; This function is called by:
 29693 ;;		_SYSTEM_Initialize
 29694 ;; This function uses a reentrant model
 29695 ;;
 29696                           
 29697                           	psect	text120
 29698  01B5C6                     __ptext120:
 29699                           	opt callstack 0
 29700  01B5C6                     _SPI1_Initialize:
 29701                           	opt callstack 14
 29702                           
 29703                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 29704                           
 29705                           ; BSR set to: 57
 29706                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29707                           ;incstack = 0
 29708  01B5C6  0E40               	movlw	64
 29709  01B5C8  013D               	movlb	61	; () banked
 29710  01B5CA  6F15               	movwf	21,b	;volatile
 29711                           
 29712                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 29713  01B5CC  0E03               	movlw	3
 29714  01B5CE  6F16               	movwf	22,b	;volatile
 29715                           
 29716                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 29717  01B5D0  0E4F               	movlw	79
 29718  01B5D2  6F19               	movwf	25,b	;volatile
 29719                           
 29720                           ; BSR set to: 61
 29721                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 29722  01B5D4  6B1C               	clrf	28,b	;volatile
 29723                           
 29724                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 29725  01B5D6  0E83               	movlw	131
 29726  01B5D8  6F14               	movwf	20,b	;volatile
 29727                           
 29728                           ; BSR set to: 61
 29729                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29730  01B5DA  0012               	return		;funcret
 29731  01B5DC                     __end_of_SPI1_Initialize:
 29732                           	opt callstack 0
 29733                           
 29734 ;; *************** function _PWM8_Initialize *****************
 29735 ;; Defined at:
 29736 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 29737 ;; Parameters:    Size  Location     Type
 29738 ;;		None
 29739 ;; Auto vars:     Size  Location     Type
 29740 ;;		None
 29741 ;; Return value:  Size  Location     Type
 29742 ;;                  1  [STACK] void 
 29743 ;; Registers used:
 29744 ;;		wreg, status,2
 29745 ;; Tracked objects:
 29746 ;;		On entry : 0/3E
 29747 ;;		On exit  : 3F/3F
 29748 ;;		Unchanged: 0/0
 29749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29754 ;;Total ram usage:        0 bytes
 29755 ;; Hardware stack levels used:    1
 29756 ;; Hardware stack levels required when called:   15
 29757 ;; This function calls:
 29758 ;;		Nothing
 29759 ;; This function is called by:
 29760 ;;		_SYSTEM_Initialize
 29761 ;; This function uses a reentrant model
 29762 ;;
 29763                           
 29764                           	psect	text121
 29765  01B5DC                     __ptext121:
 29766                           	opt callstack 0
 29767  01B5DC                     _PWM8_Initialize:
 29768                           	opt callstack 14
 29769                           
 29770                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 29771                           
 29772                           ; BSR set to: 61
 29773                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29774                           ;incstack = 0
 29775  01B5DC  0E80               	movlw	128
 29776  01B5DE  6E62               	movwf	98,c	;volatile
 29777                           
 29778                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 29779  01B5E0  6A61               	clrf	97,c	;volatile
 29780                           
 29781                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 29782  01B5E2  0E40               	movlw	64
 29783  01B5E4  6E60               	movwf	96,c	;volatile
 29784                           
 29785                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 29786  01B5E6  013F               	movlb	63	; () banked
 29787  01B5E8  515F               	movf	95,w,b	;volatile
 29788  01B5EA  0B3F               	andlw	-193
 29789  01B5EC  0940               	iorlw	64
 29790  01B5EE  6F5F               	movwf	95,b	;volatile
 29791                           
 29792                           ; BSR set to: 63
 29793                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29794  01B5F0  0012               	return		;funcret
 29795  01B5F2                     __end_of_PWM8_Initialize:
 29796                           	opt callstack 0
 29797                           
 29798 ;; *************** function _PMD_Initialize *****************
 29799 ;; Defined at:
 29800 ;;		line 90 in file "mcc_generated_files/mcc.c"
 29801 ;; Parameters:    Size  Location     Type
 29802 ;;		None
 29803 ;; Auto vars:     Size  Location     Type
 29804 ;;		None
 29805 ;; Return value:  Size  Location     Type
 29806 ;;                  1  [STACK] void 
 29807 ;; Registers used:
 29808 ;;		None
 29809 ;; Tracked objects:
 29810 ;;		On entry : 3F/39
 29811 ;;		On exit  : 3F/39
 29812 ;;		Unchanged: 0/0
 29813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29818 ;;Total ram usage:        0 bytes
 29819 ;; Hardware stack levels used:    1
 29820 ;; Hardware stack levels required when called:   15
 29821 ;; This function calls:
 29822 ;;		Nothing
 29823 ;; This function is called by:
 29824 ;;		_SYSTEM_Initialize
 29825 ;; This function uses a reentrant model
 29826 ;;
 29827                           
 29828                           	psect	text122
 29829  01B608                     __ptext122:
 29830                           	opt callstack 0
 29831  01B608                     _PMD_Initialize:
 29832                           	opt callstack 14
 29833                           
 29834                           ;mcc_generated_files/mcc.c: 93:     PMD0 = 0x00;
 29835                           
 29836                           ; BSR set to: 63
 29837                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29838                           ;incstack = 0
 29839  01B608  0139               	movlb	57	; () banked
 29840  01B60A  6BC0               	clrf	192,b	;volatile
 29841                           
 29842                           ;mcc_generated_files/mcc.c: 95:     PMD1 = 0x00;
 29843  01B60C  6BC1               	clrf	193,b	;volatile
 29844                           
 29845                           ;mcc_generated_files/mcc.c: 97:     PMD2 = 0x00;
 29846  01B60E  6BC2               	clrf	194,b	;volatile
 29847                           
 29848                           ;mcc_generated_files/mcc.c: 99:     PMD3 = 0x00;
 29849  01B610  6BC3               	clrf	195,b	;volatile
 29850                           
 29851                           ;mcc_generated_files/mcc.c: 101:     PMD4 = 0x00;
 29852  01B612  6BC4               	clrf	196,b	;volatile
 29853                           
 29854                           ;mcc_generated_files/mcc.c: 103:     PMD5 = 0x00;
 29855  01B614  6BC5               	clrf	197,b	;volatile
 29856                           
 29857                           ;mcc_generated_files/mcc.c: 105:     PMD6 = 0x00;
 29858  01B616  6BC6               	clrf	198,b	;volatile
 29859                           
 29860                           ;mcc_generated_files/mcc.c: 107:     PMD7 = 0x00;
 29861  01B618  6BC7               	clrf	199,b	;volatile
 29862                           
 29863                           ; BSR set to: 57
 29864                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 29865  01B61A  0012               	return		;funcret
 29866  01B61C                     __end_of_PMD_Initialize:
 29867                           	opt callstack 0
 29868                           
 29869 ;; *************** function _PIN_MANAGER_Initialize *****************
 29870 ;; Defined at:
 29871 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 29872 ;; Parameters:    Size  Location     Type
 29873 ;;		None
 29874 ;; Auto vars:     Size  Location     Type
 29875 ;;		None
 29876 ;; Return value:  Size  Location     Type
 29877 ;;                  1  [STACK] void 
 29878 ;; Registers used:
 29879 ;;		wreg, status,2
 29880 ;; Tracked objects:
 29881 ;;		On entry : 3F/39
 29882 ;;		On exit  : 3F/3A
 29883 ;;		Unchanged: 0/0
 29884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29888 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29889 ;;Total ram usage:        0 bytes
 29890 ;; Hardware stack levels used:    1
 29891 ;; Hardware stack levels required when called:   15
 29892 ;; This function calls:
 29893 ;;		Nothing
 29894 ;; This function is called by:
 29895 ;;		_SYSTEM_Initialize
 29896 ;; This function uses a reentrant model
 29897 ;;
 29898                           
 29899                           	psect	text123
 29900  019FD6                     __ptext123:
 29901                           	opt callstack 0
 29902  019FD6                     _PIN_MANAGER_Initialize:
 29903                           	opt callstack 14
 29904                           
 29905                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 29906                           
 29907                           ; BSR set to: 57
 29908                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29909                           ;incstack = 0
 29910  019FD6  0E07               	movlw	7
 29911  019FD8  6EBE               	movwf	190,c	;volatile
 29912                           
 29913                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x80;
 29914  019FDA  0E80               	movlw	128
 29915  019FDC  6EBD               	movwf	189,c	;volatile
 29916                           
 29917                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 29918  019FDE  6ABA               	clrf	186,c	;volatile
 29919                           
 29920                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x20;
 29921  019FE0  0E20               	movlw	32
 29922  019FE2  6EBF               	movwf	191,c	;volatile
 29923                           
 29924                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 29925  019FE4  6ABB               	clrf	187,c	;volatile
 29926                           
 29927                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 29928  019FE6  0E07               	movlw	7
 29929  019FE8  6EBC               	movwf	188,c	;volatile
 29930                           
 29931                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 29932  019FEA  6AC6               	clrf	198,c	;volatile
 29933                           
 29934                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 29935  019FEC  0E0F               	movlw	15
 29936  019FEE  6EC7               	movwf	199,c	;volatile
 29937                           
 29938                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 29939  019FF0  68C2               	setf	194,c	;volatile
 29940                           
 29941                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 29942  019FF2  0EBF               	movlw	191
 29943  019FF4  6EC3               	movwf	195,c	;volatile
 29944                           
 29945                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 29946  019FF6  0E90               	movlw	144
 29947  019FF8  6EC4               	movwf	196,c	;volatile
 29948                           
 29949                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 29950  019FFA  0E0C               	movlw	12
 29951  019FFC  6EC5               	movwf	197,c	;volatile
 29952                           
 29953                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 29954  019FFE  013A               	movlb	58	; () banked
 29955  01A000  6B70               	clrf	112,b	;volatile
 29956                           
 29957                           ; BSR set to: 58
 29958                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 29959  01A002  6B60               	clrf	96,b	;volatile
 29960                           
 29961                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 29962  01A004  0E3C               	movlw	60
 29963  01A006  6F50               	movwf	80,b	;volatile
 29964                           
 29965                           ; BSR set to: 58
 29966                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 29967  01A008  6B80               	clrf	128,b	;volatile
 29968                           
 29969                           ; BSR set to: 58
 29970                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 29971  01A00A  6B90               	clrf	144,b	;volatile
 29972                           
 29973                           ; BSR set to: 58
 29974                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 29975  01A00C  6940               	setf	64,b	;volatile
 29976                           
 29977                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 29978  01A00E  0E0C               	movlw	12
 29979  01A010  6F71               	movwf	113,b	;volatile
 29980                           
 29981                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0F;
 29982  01A012  0E0F               	movlw	15
 29983  01A014  6F91               	movwf	145,b	;volatile
 29984                           
 29985                           ; BSR set to: 58
 29986                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 29987  01A016  6B81               	clrf	129,b	;volatile
 29988                           
 29989                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 29990  01A018  0E83               	movlw	131
 29991  01A01A  6F51               	movwf	81,b	;volatile
 29992                           
 29993                           ; BSR set to: 58
 29994                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 29995  01A01C  6B41               	clrf	65,b	;volatile
 29996                           
 29997                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 29998  01A01E  0E97               	movlw	151
 29999  01A020  6F61               	movwf	97,b	;volatile
 30000                           
 30001                           ; BSR set to: 58
 30002                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 30003  01A022  6B82               	clrf	130,b	;volatile
 30004                           
 30005                           ; BSR set to: 58
 30006                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 30007  01A024  6B92               	clrf	146,b	;volatile
 30008                           
 30009                           ; BSR set to: 58
 30010                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 30011  01A026  6B42               	clrf	66,b	;volatile
 30012                           
 30013                           ; BSR set to: 58
 30014                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 30015  01A028  6B52               	clrf	82,b	;volatile
 30016                           
 30017                           ; BSR set to: 58
 30018                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 30019  01A02A  6B62               	clrf	98,b	;volatile
 30020                           
 30021                           ; BSR set to: 58
 30022                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 30023  01A02C  6B72               	clrf	114,b	;volatile
 30024                           
 30025                           ; BSR set to: 58
 30026                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 30027  01A02E  6943               	setf	67,b	;volatile
 30028                           
 30029                           ; BSR set to: 58
 30030                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 30031  01A030  6953               	setf	83,b	;volatile
 30032                           
 30033                           ; BSR set to: 58
 30034                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 30035  01A032  6963               	setf	99,b	;volatile
 30036                           
 30037                           ; BSR set to: 58
 30038                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 30039  01A034  6973               	setf	115,b	;volatile
 30040                           
 30041                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 30042  01A036  0E07               	movlw	7
 30043  01A038  6F83               	movwf	131,b	;volatile
 30044                           
 30045                           ; BSR set to: 58
 30046                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 30047  01A03A  6993               	setf	147,b	;volatile
 30048                           
 30049                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 30050  01A03C  0E0F               	movlw	15
 30051  01A03E  6FE8               	movwf	232,b	;volatile
 30052                           
 30053                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 30054  01A040  0E13               	movlw	19
 30055  01A042  6FDE               	movwf	222,b	;volatile
 30056                           
 30057                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 30058  01A044  0E16               	movlw	22
 30059  01A046  6F0E               	movwf	14,b	;volatile
 30060                           
 30061                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 30062  01A048  0E1E               	movlw	30
 30063  01A04A  6F13               	movwf	19,b	;volatile
 30064                           
 30065                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 30066  01A04C  0E08               	movlw	8
 30067  01A04E  6FC0               	movwf	192,b	;volatile
 30068                           
 30069                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 30070  01A050  0E10               	movlw	16
 30071  01A052  6F19               	movwf	25,b	;volatile
 30072                           
 30073                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 30074  01A054  0E09               	movlw	9
 30075  01A056  6FC1               	movwf	193,b	;volatile
 30076                           
 30077                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 30078  01A058  0E1F               	movlw	31
 30079  01A05A  6F15               	movwf	21,b	;volatile
 30080                           
 30081                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 30082  01A05C  0E13               	movlw	19
 30083  01A05E  6F16               	movwf	22,b	;volatile
 30084                           
 30085                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 30086  01A060  0E17               	movlw	23
 30087  01A062  6FE5               	movwf	229,b	;volatile
 30088                           
 30089                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 30090  01A064  0E14               	movlw	20
 30091  01A066  6FDF               	movwf	223,b	;volatile
 30092                           
 30093                           ; BSR set to: 58
 30094                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 30095  01A068  0012               	return		;funcret
 30096  01A06A                     __end_of_PIN_MANAGER_Initialize:
 30097                           	opt callstack 0
 30098                           
 30099 ;; *************** function _OSCILLATOR_Initialize *****************
 30100 ;; Defined at:
 30101 ;;		line 72 in file "mcc_generated_files/mcc.c"
 30102 ;; Parameters:    Size  Location     Type
 30103 ;;		None
 30104 ;; Auto vars:     Size  Location     Type
 30105 ;;		None
 30106 ;; Return value:  Size  Location     Type
 30107 ;;                  1  [STACK] void 
 30108 ;; Registers used:
 30109 ;;		wreg, status,2
 30110 ;; Tracked objects:
 30111 ;;		On entry : 3F/3A
 30112 ;;		On exit  : 3F/39
 30113 ;;		Unchanged: 0/0
 30114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30118 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30119 ;;Total ram usage:        0 bytes
 30120 ;; Hardware stack levels used:    1
 30121 ;; Hardware stack levels required when called:   15
 30122 ;; This function calls:
 30123 ;;		Nothing
 30124 ;; This function is called by:
 30125 ;;		_SYSTEM_Initialize
 30126 ;; This function uses a reentrant model
 30127 ;;
 30128                           
 30129                           	psect	text124
 30130  01B5F2                     __ptext124:
 30131                           	opt callstack 0
 30132  01B5F2                     _OSCILLATOR_Initialize:
 30133                           	opt callstack 14
 30134                           
 30135                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x20;
 30136                           
 30137                           ; BSR set to: 58
 30138                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30139                           ;incstack = 0
 30140  01B5F2  0E20               	movlw	32
 30141  01B5F4  0139               	movlb	57	; () banked
 30142  01B5F6  6FD9               	movwf	217,b	;volatile
 30143                           
 30144                           ; BSR set to: 57
 30145                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 30146  01B5F8  6BDB               	clrf	219,b	;volatile
 30147                           
 30148                           ; BSR set to: 57
 30149                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 30150  01B5FA  6BDD               	clrf	221,b	;volatile
 30151                           
 30152                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x02;
 30153  01B5FC  0E02               	movlw	2
 30154  01B5FE  6FDF               	movwf	223,b	;volatile
 30155                           
 30156                           ; BSR set to: 57
 30157                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 30158  01B600  6BDE               	clrf	222,b	;volatile
 30159  01B602                     l169:
 30160                           
 30161                           ; BSR set to: 57
 30162                           ;mcc_generated_files/mcc.c: 85:     while(PLLR == 0)
 30163  01B602  B1DC               	btfsc	220,0,b	;volatile
 30164  01B604  0012               	return	
 30165  01B606  D7FD               	goto	l169
 30166  01B608                     __end_of_OSCILLATOR_Initialize:
 30167                           	opt callstack 0
 30168                           
 30169 ;; *************** function _INTERRUPT_Initialize *****************
 30170 ;; Defined at:
 30171 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 30172 ;; Parameters:    Size  Location     Type
 30173 ;;		None
 30174 ;; Auto vars:     Size  Location     Type
 30175 ;;  state           1  [STACK] _Bool 
 30176 ;; Return value:  Size  Location     Type
 30177 ;;                  1  [STACK] void 
 30178 ;; Registers used:
 30179 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 30180 ;; Tracked objects:
 30181 ;;		On entry : 0/0
 30182 ;;		On exit  : 3F/39
 30183 ;;		Unchanged: 0/0
 30184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30188 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30189 ;;Total ram usage:        0 bytes
 30190 ;; Hardware stack levels used:    1
 30191 ;; Hardware stack levels required when called:   15
 30192 ;; This function calls:
 30193 ;;		Nothing
 30194 ;; This function is called by:
 30195 ;;		_SYSTEM_Initialize
 30196 ;; This function uses a reentrant model
 30197 ;;
 30198                           
 30199                           	psect	text125
 30200  01A56A                     __ptext125:
 30201                           	opt callstack 0
 30202  01A56A                     _INTERRUPT_Initialize:
 30203                           	opt callstack 0
 30204                           
 30205                           ; BSR set to: 57
 30206                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30207  01A56A  52E6               	movf	postinc1,f,c
 30208                           
 30209                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 30210                           
 30211                           ;incstack = 0
 30212  01A56C  8AD2               	bsf	210,5,c	;volatile
 30213                           
 30214                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 30215  01A56E  AED2               	btfss	16338,7,c	;volatile
 30216  01A570  D003               	goto	u8960
 30217  01A572  6A33               	clrf	(btemp+11)^0,c
 30218  01A574  2A33               	incf	(btemp+11)^0,f,c
 30219  01A576  D001               	goto	u8978
 30220  01A578                     u8960:
 30221  01A578  6A33               	clrf	(btemp+11)^0,c
 30222  01A57A                     u8978:
 30223                           
 30224                           ;stkvar	_state @ sp[(-1)+0]
 30225  01A57A  0EFF               	movlw	-1
 30226  01A57C  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 30227                           
 30228                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 30229  01A582  9ED2               	bcf	16338,7,c	;volatile
 30230                           
 30231                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 30232  01A584  0E55               	movlw	85
 30233  01A586  6ED4               	movwf	212,c	;volatile
 30234                           
 30235                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 30236  01A588  0EAA               	movlw	170
 30237  01A58A  6ED4               	movwf	212,c	;volatile
 30238                           
 30239                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 30240  01A58C  90D4               	bcf	212,0,c	;volatile
 30241                           
 30242                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 30243  01A58E  0138               	movlb	56	; () banked
 30244  01A590  6B9F               	clrf	159,b	;volatile
 30245                           
 30246                           ; BSR set to: 56
 30247                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 30248  01A592  6B9E               	clrf	158,b	;volatile
 30249                           
 30250                           ; BSR set to: 56
 30251                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 30252  01A594  0E08               	movlw	8
 30253  01A596  6F9D               	movwf	157,b	;volatile
 30254                           
 30255                           ; BSR set to: 56
 30256                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 30257  01A598  0E55               	movlw	85
 30258  01A59A  6ED4               	movwf	212,c	;volatile
 30259                           
 30260                           ; BSR set to: 56
 30261                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 30262  01A59C  0EAA               	movlw	170
 30263  01A59E  6ED4               	movwf	212,c	;volatile
 30264                           
 30265                           ; BSR set to: 56
 30266                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 30267  01A5A0  80D4               	bsf	212,0,c	;volatile
 30268                           
 30269                           ; BSR set to: 56
 30270                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 30271                           ;stkvar	_state @ sp[(-1)+0]
 30272  01A5A2  0EFF               	movlw	-1
 30273  01A5A4  B0E3               	btfsc	plusw1,0,c
 30274  01A5A6  D002               	bra	u8985
 30275  01A5A8  9ED2               	bcf	16338,7,c	;volatile
 30276  01A5AA  D001               	bra	u8986
 30277  01A5AC                     u8985:
 30278  01A5AC  8ED2               	bsf	16338,7,c	;volatile
 30279  01A5AE                     u8986:
 30280                           
 30281                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 30282  01A5AE  0139               	movlb	57	; () banked
 30283  01A5B0  8782               	bsf	130,3,b	;volatile
 30284                           
 30285                           ; BSR set to: 57
 30286                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 30287  01A5B2  8382               	bsf	130,1,b	;volatile
 30288                           
 30289                           ; BSR set to: 57
 30290                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 30291  01A5B4  8182               	bsf	130,0,b	;volatile
 30292                           
 30293                           ; BSR set to: 57
 30294                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 30295  01A5B6  8582               	bsf	130,2,b	;volatile
 30296                           
 30297                           ; BSR set to: 57
 30298                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 30299  01A5B8  8786               	bsf	134,3,b	;volatile
 30300                           
 30301                           ; BSR set to: 57
 30302                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 30303  01A5BA  8586               	bsf	134,2,b	;volatile
 30304                           
 30305                           ; BSR set to: 57
 30306                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1RXIP = 1;
 30307  01A5BC  8783               	bsf	131,3,b	;volatile
 30308                           
 30309                           ; BSR set to: 57
 30310                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR1bits.INT0IP = 1;
 30311  01A5BE  8181               	bsf	129,0,b	;volatile
 30312                           
 30313                           ; BSR set to: 57
 30314                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR5bits.INT1IP = 0;
 30315  01A5C0  9185               	bcf	133,0,b	;volatile
 30316                           
 30317                           ; BSR set to: 57
 30318                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR9bits.TMR6IP = 1;
 30319  01A5C2  8189               	bsf	137,0,b	;volatile
 30320                           
 30321                           ; BSR set to: 57
 30322                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR8bits.TMR5IP = 0;
 30323  01A5C4  9D88               	bcf	136,6,b	;volatile
 30324                           
 30325                           ; BSR set to: 57
 30326                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR1bits.ADIP = 1;
 30327  01A5C6  8581               	bsf	129,2,b	;volatile
 30328                           
 30329                           ; BSR set to: 57
 30330                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADTIP = 1;
 30331  01A5C8  8781               	bsf	129,3,b	;volatile
 30332                           
 30333                           ; BSR set to: 57
 30334                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR6bits.TMR3IP = 0;
 30335  01A5CA  9D86               	bcf	134,6,b	;volatile
 30336                           
 30337                           ; BSR set to: 57
 30338                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 30339  01A5CC  52E5               	movf	postdec1,f,c
 30340  01A5CE  0012               	return		;funcret
 30341  01A5D0                     __end_of_INTERRUPT_Initialize:
 30342                           	opt callstack 0
 30343                           
 30344 ;; *************** function _FVR_Initialize *****************
 30345 ;; Defined at:
 30346 ;;		line 58 in file "mcc_generated_files/fvr.c"
 30347 ;; Parameters:    Size  Location     Type
 30348 ;;		None
 30349 ;; Auto vars:     Size  Location     Type
 30350 ;;		None
 30351 ;; Return value:  Size  Location     Type
 30352 ;;                  1  [STACK] void 
 30353 ;; Registers used:
 30354 ;;		wreg, status,2
 30355 ;; Tracked objects:
 30356 ;;		On entry : 3F/39
 30357 ;;		On exit  : 3F/3E
 30358 ;;		Unchanged: 0/0
 30359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30363 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30364 ;;Total ram usage:        0 bytes
 30365 ;; Hardware stack levels used:    1
 30366 ;; Hardware stack levels required when called:   15
 30367 ;; This function calls:
 30368 ;;		Nothing
 30369 ;; This function is called by:
 30370 ;;		_SYSTEM_Initialize
 30371 ;; This function uses a reentrant model
 30372 ;;
 30373                           
 30374                           	psect	text126
 30375  01B6F2                     __ptext126:
 30376                           	opt callstack 0
 30377  01B6F2                     _FVR_Initialize:
 30378                           	opt callstack 14
 30379                           
 30380                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 30381                           
 30382                           ; BSR set to: 57
 30383                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30384                           ;incstack = 0
 30385  01B6F2  0EAF               	movlw	175
 30386  01B6F4  013E               	movlb	62	; () banked
 30387  01B6F6  6FC1               	movwf	193,b	;volatile
 30388                           
 30389                           ; BSR set to: 62
 30390                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 30391  01B6F8  0012               	return		;funcret
 30392  01B6FA                     __end_of_FVR_Initialize:
 30393                           	opt callstack 0
 30394                           
 30395 ;; *************** function _EXT_INT_Initialize *****************
 30396 ;; Defined at:
 30397 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 30398 ;; Parameters:    Size  Location     Type
 30399 ;;		None
 30400 ;; Auto vars:     Size  Location     Type
 30401 ;;		None
 30402 ;; Return value:  Size  Location     Type
 30403 ;;                  1  [STACK] void 
 30404 ;; Registers used:
 30405 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30406 ;; Tracked objects:
 30407 ;;		On entry : 3F/39
 30408 ;;		On exit  : 3F/39
 30409 ;;		Unchanged: 0/0
 30410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30415 ;;Total ram usage:        0 bytes
 30416 ;; Hardware stack levels used:    1
 30417 ;; Hardware stack levels required when called:   16
 30418 ;; This function calls:
 30419 ;;		_INT0_SetInterruptHandler
 30420 ;;		_INT1_SetInterruptHandler
 30421 ;; This function is called by:
 30422 ;;		_SYSTEM_Initialize
 30423 ;; This function uses a reentrant model
 30424 ;;
 30425                           
 30426                           	psect	text127
 30427  01AEA6                     __ptext127:
 30428                           	opt callstack 0
 30429  01AEA6                     _EXT_INT_Initialize:
 30430                           	opt callstack 13
 30431                           
 30432                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 30433                           
 30434                           ; BSR set to: 62
 30435                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30436                           ;incstack = 0
 30437  01AEA6  0139               	movlb	57	; () banked
 30438  01AEA8  91A1               	bcf	161,0,b	;volatile
 30439                           
 30440                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 30441  01AEAA  90D2               	bcf	210,0,c	;volatile
 30442                           
 30443                           ; BSR set to: 57
 30444                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 30445  01AEAC  0E1E               	movlw	low _INT0_DefaultInterruptHandler
 30446  01AEAE  6EE6               	movwf	postinc1,c
 30447  01AEB0  0EB7               	movlw	high _INT0_DefaultInterruptHandler
 30448  01AEB2  6EE6               	movwf	postinc1,c
 30449  01AEB4  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 30450  01AEB6  6EE6               	movwf	postinc1,c
 30451  01AEB8  EC31  F0D9         	call	_INT0_SetInterruptHandler	;wreg free
 30452                           
 30453                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 30454  01AEBC  0139               	movlb	57	; () banked
 30455  01AEBE  8191               	bsf	145,0,b	;volatile
 30456                           
 30457                           ; BSR set to: 57
 30458                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 30459  01AEC0  91A5               	bcf	165,0,b	;volatile
 30460                           
 30461                           ; BSR set to: 57
 30462                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 30463  01AEC2  92D2               	bcf	210,1,c	;volatile
 30464                           
 30465                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 30466  01AEC4  0E1A               	movlw	low _INT1_DefaultInterruptHandler
 30467  01AEC6  6EE6               	movwf	postinc1,c
 30468  01AEC8  0EB7               	movlw	high _INT1_DefaultInterruptHandler
 30469  01AECA  6EE6               	movwf	postinc1,c
 30470  01AECC  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 30471  01AECE  6EE6               	movwf	postinc1,c
 30472  01AED0  EC1D  F0D9         	call	_INT1_SetInterruptHandler	;wreg free
 30473                           
 30474                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 30475  01AED4  0139               	movlb	57	; () banked
 30476  01AED6  8195               	bsf	149,0,b	;volatile
 30477                           
 30478                           ; BSR set to: 57
 30479                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 30480  01AED8  0012               	return		;funcret
 30481  01AEDA                     __end_of_EXT_INT_Initialize:
 30482                           	opt callstack 0
 30483                           
 30484 ;; *************** function _INT1_SetInterruptHandler *****************
 30485 ;; Defined at:
 30486 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 30487 ;; Parameters:    Size  Location     Type
 30488 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30489 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 30490 ;; Auto vars:     Size  Location     Type
 30491 ;;		None
 30492 ;; Return value:  Size  Location     Type
 30493 ;;                  1  [STACK] void 
 30494 ;; Registers used:
 30495 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30496 ;; Tracked objects:
 30497 ;;		On entry : 3F/39
 30498 ;;		On exit  : 0/0
 30499 ;;		Unchanged: 0/0
 30500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30505 ;;Total ram usage:        0 bytes
 30506 ;; Hardware stack levels used:    1
 30507 ;; Hardware stack levels required when called:   15
 30508 ;; This function calls:
 30509 ;;		Nothing
 30510 ;; This function is called by:
 30511 ;;		_EXT_INT_Initialize
 30512 ;;		_start_switch_handler
 30513 ;; This function uses a reentrant model
 30514 ;;
 30515                           
 30516                           	psect	text128
 30517  01B23A                     __ptext128:
 30518                           	opt callstack 0
 30519  01B23A                     _INT1_SetInterruptHandler:
 30520                           	opt callstack 14
 30521                           
 30522                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 30523                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30524                           
 30525                           ; BSR set to: 57
 30526                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30527                           ;incstack = 0
 30528  01B23A  50E1               	movf	fsr1l,w,c
 30529  01B23C  0FFD               	addlw	-3
 30530  01B23E  6ED9               	movwf	fsr2l,c
 30531  01B240  50E2               	movf	fsr1h,w,c
 30532  01B242  6EDA               	movwf	fsr2h,c
 30533  01B244  0EFF               	movlw	255
 30534  01B246  22DA               	addwfc	fsr2h,f,c
 30535  01B248  006F FF78  F0BA    	movff	postinc2,_INT1_InterruptHandler
 30536  01B24E  006F FF78  F0BB    	movff	postinc2,_INT1_InterruptHandler+1
 30537  01B254  006F FF74  F0BC    	movff	postdec2,_INT1_InterruptHandler+2
 30538                           
 30539                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 30540  01B25A  52E5               	movf	postdec1,f,c
 30541  01B25C  52E5               	movf	postdec1,f,c
 30542  01B25E  52E5               	movf	postdec1,f,c
 30543  01B260  0012               	return		;funcret
 30544  01B262                     __end_of_INT1_SetInterruptHandler:
 30545                           	opt callstack 0
 30546                           
 30547 ;; *************** function _INT0_SetInterruptHandler *****************
 30548 ;; Defined at:
 30549 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 30550 ;; Parameters:    Size  Location     Type
 30551 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30552 ;;		 -> INT0_DefaultInterruptHandler(1), 
 30553 ;; Auto vars:     Size  Location     Type
 30554 ;;		None
 30555 ;; Return value:  Size  Location     Type
 30556 ;;                  1  [STACK] void 
 30557 ;; Registers used:
 30558 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30559 ;; Tracked objects:
 30560 ;;		On entry : 3F/39
 30561 ;;		On exit  : 0/0
 30562 ;;		Unchanged: 0/0
 30563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30567 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30568 ;;Total ram usage:        0 bytes
 30569 ;; Hardware stack levels used:    1
 30570 ;; Hardware stack levels required when called:   15
 30571 ;; This function calls:
 30572 ;;		Nothing
 30573 ;; This function is called by:
 30574 ;;		_EXT_INT_Initialize
 30575 ;; This function uses a reentrant model
 30576 ;;
 30577                           
 30578                           	psect	text129
 30579  01B262                     __ptext129:
 30580                           	opt callstack 0
 30581  01B262                     _INT0_SetInterruptHandler:
 30582                           	opt callstack 13
 30583                           
 30584                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 30585                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30586                           
 30587                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30588                           ;incstack = 0
 30589  01B262  50E1               	movf	fsr1l,w,c
 30590  01B264  0FFD               	addlw	-3
 30591  01B266  6ED9               	movwf	fsr2l,c
 30592  01B268  50E2               	movf	fsr1h,w,c
 30593  01B26A  6EDA               	movwf	fsr2h,c
 30594  01B26C  0EFF               	movlw	255
 30595  01B26E  22DA               	addwfc	fsr2h,f,c
 30596  01B270  006F FF78  F0BD    	movff	postinc2,_INT0_InterruptHandler
 30597  01B276  006F FF78  F0BE    	movff	postinc2,_INT0_InterruptHandler+1
 30598  01B27C  006F FF74  F0BF    	movff	postdec2,_INT0_InterruptHandler+2
 30599                           
 30600                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 30601  01B282  52E5               	movf	postdec1,f,c
 30602  01B284  52E5               	movf	postdec1,f,c
 30603  01B286  52E5               	movf	postdec1,f,c
 30604  01B288  0012               	return		;funcret
 30605  01B28A                     __end_of_INT0_SetInterruptHandler:
 30606                           	opt callstack 0
 30607                           
 30608 ;; *************** function _DMA2_Initialize *****************
 30609 ;; Defined at:
 30610 ;;		line 61 in file "mcc_generated_files/dma2.c"
 30611 ;; Parameters:    Size  Location     Type
 30612 ;;		None
 30613 ;; Auto vars:     Size  Location     Type
 30614 ;;		None
 30615 ;; Return value:  Size  Location     Type
 30616 ;;                  1  [STACK] void 
 30617 ;; Registers used:
 30618 ;;		wreg, status,2
 30619 ;; Tracked objects:
 30620 ;;		On entry : 3F/3D
 30621 ;;		On exit  : 3F/3B
 30622 ;;		Unchanged: 0/0
 30623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30628 ;;Total ram usage:        0 bytes
 30629 ;; Hardware stack levels used:    1
 30630 ;; Hardware stack levels required when called:   15
 30631 ;; This function calls:
 30632 ;;		Nothing
 30633 ;; This function is called by:
 30634 ;;		_SYSTEM_Initialize
 30635 ;; This function uses a reentrant model
 30636 ;;
 30637                           
 30638                           	psect	text130
 30639  01A7B0                     __ptext130:
 30640                           	opt callstack 0
 30641  01A7B0                     _DMA2_Initialize:
 30642                           	opt callstack 14
 30643                           
 30644                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 30645                           
 30646                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30647                           ;incstack = 0
 30648  01A7B0  0E00               	movlw	0
 30649  01A7B2  013B               	movlb	59	; () banked
 30650  01A7B4  6FD9               	movwf	217,b	;volatile
 30651  01A7B6  0E10               	movlw	16
 30652  01A7B8  6FDA               	movwf	218,b	;volatile
 30653  01A7BA  0E00               	movlw	0
 30654  01A7BC  6FDB               	movwf	219,b	;volatile
 30655                           
 30656                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 30657  01A7BE  0E3F               	movlw	63
 30658  01A7C0  6FD1               	movwf	209,b	;volatile
 30659  01A7C2  0EBB               	movlw	187
 30660  01A7C4  6FD0               	movwf	208,b	;volatile
 30661                           
 30662                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 30663  01A7C6  0E03               	movlw	3
 30664  01A7C8  6FDD               	movwf	221,b	;volatile
 30665                           
 30666                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 30667  01A7CA  0E00               	movlw	0
 30668  01A7CC  6FD8               	movwf	216,b	;volatile
 30669  01A7CE  0E01               	movlw	1
 30670  01A7D0  6FD7               	movwf	215,b	;volatile
 30671                           
 30672                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 30673  01A7D2  0E00               	movlw	0
 30674  01A7D4  6FCF               	movwf	207,b	;volatile
 30675  01A7D6  0E01               	movlw	1
 30676  01A7D8  6FCE               	movwf	206,b	;volatile
 30677                           
 30678                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x1C;
 30679  01A7DA  0E1C               	movlw	28
 30680  01A7DC  6FDF               	movwf	223,b	;volatile
 30681                           
 30682                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 30683  01A7DE  0E3D               	movlw	61
 30684  01A7E0  6FDE               	movwf	222,b	;volatile
 30685                           
 30686                           ; BSR set to: 59
 30687                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 30688  01A7E2  0139               	movlb	57	; () banked
 30689  01A7E4  97A5               	bcf	165,3,b	;volatile
 30690                           
 30691                           ; BSR set to: 57
 30692                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 30693  01A7E6  95A5               	bcf	165,2,b	;volatile
 30694                           
 30695                           ; BSR set to: 57
 30696                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 30697  01A7E8  9BA5               	bcf	165,5,b	;volatile
 30698                           
 30699                           ; BSR set to: 57
 30700                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 30701  01A7EA  99A5               	bcf	165,4,b	;volatile
 30702                           
 30703                           ; BSR set to: 57
 30704                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 30705  01A7EC  9795               	bcf	149,3,b	;volatile
 30706                           
 30707                           ; BSR set to: 57
 30708                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 30709  01A7EE  9595               	bcf	149,2,b	;volatile
 30710                           
 30711                           ; BSR set to: 57
 30712                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 30713  01A7F0  9B95               	bcf	149,5,b	;volatile
 30714                           
 30715                           ; BSR set to: 57
 30716                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 30717  01A7F2  9995               	bcf	149,4,b	;volatile
 30718  01A7F4  9ED2               	bcf	16338,7,c	;# 
 30719  01A7F6  0139               	banksel	14831	;# 
 30720  01A7F8  0E55               	movlw	85	;# 
 30721  01A7FA  6FEF               	movwf	14831,b	;# 
 30722  01A7FC  0EAA               	movlw	170	;# 
 30723  01A7FE  6FEF               	movwf	14831,b	;# 
 30724  01A800  81EF               	bsf	14831,0,b	;# 
 30725  01A802  8ED2               	bsf	16338,7,c	;# 
 30726                           
 30727                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 30728  01A804  013B               	movlb	59	; () banked
 30729  01A806  6BDC               	clrf	220,b	;volatile
 30730                           
 30731                           ; BSR set to: 59
 30732                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30733  01A808  0012               	return		;funcret
 30734  01A80A                     __end_of_DMA2_Initialize:
 30735                           	opt callstack 0
 30736                           
 30737 ;; *************** function _DMA1_Initialize *****************
 30738 ;; Defined at:
 30739 ;;		line 86 in file "mcc_generated_files/dma1.c"
 30740 ;; Parameters:    Size  Location     Type
 30741 ;;		None
 30742 ;; Auto vars:     Size  Location     Type
 30743 ;;		None
 30744 ;; Return value:  Size  Location     Type
 30745 ;;                  1  [STACK] void 
 30746 ;; Registers used:
 30747 ;;		wreg, status,2
 30748 ;; Tracked objects:
 30749 ;;		On entry : 3F/3B
 30750 ;;		On exit  : 3F/3B
 30751 ;;		Unchanged: 0/0
 30752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30756 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30757 ;;Total ram usage:        0 bytes
 30758 ;; Hardware stack levels used:    1
 30759 ;; Hardware stack levels required when called:   15
 30760 ;; This function calls:
 30761 ;;		Nothing
 30762 ;; This function is called by:
 30763 ;;		_SYSTEM_Initialize
 30764 ;; This function uses a reentrant model
 30765 ;;
 30766                           
 30767                           	psect	text131
 30768  01A42C                     __ptext131:
 30769                           	opt callstack 0
 30770  01A42C                     _DMA1_Initialize:
 30771                           	opt callstack 14
 30772                           
 30773                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 30774                           
 30775                           ; BSR set to: 59
 30776                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30777                           ;incstack = 0
 30778  01A42C  0E00               	movlw	0
 30779  01A42E  013B               	movlb	59	; () banked
 30780  01A430  6FF9               	movwf	249,b	;volatile
 30781  01A432  0E10               	movlw	16
 30782  01A434  6FFA               	movwf	250,b	;volatile
 30783  01A436  0E00               	movlw	0
 30784  01A438  6FFB               	movwf	251,b	;volatile
 30785                           
 30786                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 30787  01A43A  0E3D               	movlw	61
 30788  01A43C  6FF1               	movwf	241,b	;volatile
 30789  01A43E  0E11               	movlw	17
 30790  01A440  6FF0               	movwf	240,b	;volatile
 30791                           
 30792                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 30793  01A442  0E03               	movlw	3
 30794  01A444  6FFD               	movwf	253,b	;volatile
 30795                           
 30796                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 30797  01A446  0E00               	movlw	0
 30798  01A448  6FF8               	movwf	248,b	;volatile
 30799  01A44A  0E01               	movlw	1
 30800  01A44C  6FF7               	movwf	247,b	;volatile
 30801                           
 30802                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 30803  01A44E  0E00               	movlw	0
 30804  01A450  6FEF               	movwf	239,b	;volatile
 30805  01A452  0E01               	movlw	1
 30806  01A454  6FEE               	movwf	238,b	;volatile
 30807                           
 30808                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 30809  01A456  0E15               	movlw	21
 30810  01A458  6FFF               	movwf	255,b	;volatile
 30811                           
 30812                           ; BSR set to: 59
 30813                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 30814  01A45A  6BFE               	clrf	254,b	;volatile
 30815                           
 30816                           ; BSR set to: 59
 30817                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 30818  01A45C  0139               	movlb	57	; () banked
 30819  01A45E  93A2               	bcf	162,1,b	;volatile
 30820                           
 30821                           ; BSR set to: 57
 30822                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 30823  01A460  91A2               	bcf	162,0,b	;volatile
 30824                           
 30825                           ; BSR set to: 57
 30826                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 30827  01A462  97A2               	bcf	162,3,b	;volatile
 30828                           
 30829                           ; BSR set to: 57
 30830                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 30831  01A464  95A2               	bcf	162,2,b	;volatile
 30832                           
 30833                           ; BSR set to: 57
 30834                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 30835  01A466  8392               	bsf	146,1,b	;volatile
 30836                           
 30837                           ; BSR set to: 57
 30838                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 30839  01A468  8192               	bsf	146,0,b	;volatile
 30840                           
 30841                           ; BSR set to: 57
 30842                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 30843  01A46A  8792               	bsf	146,3,b	;volatile
 30844                           
 30845                           ; BSR set to: 57
 30846                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 30847  01A46C  8592               	bsf	146,2,b	;volatile
 30848                           
 30849                           ; BSR set to: 57
 30850                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 30851  01A46E  6BF1               	clrf	241,b	;volatile
 30852                           
 30853                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 30854  01A470  0E01               	movlw	1
 30855  01A472  6FF2               	movwf	242,b	;volatile
 30856                           
 30857                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 30858  01A474  0E04               	movlw	4
 30859  01A476  6FF3               	movwf	243,b	;volatile
 30860                           
 30861                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 30862  01A478  0E02               	movlw	2
 30863  01A47A  6FF4               	movwf	244,b	;volatile
 30864                           
 30865                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 30866  01A47C  0E03               	movlw	3
 30867  01A47E  6FF7               	movwf	247,b	;volatile
 30868  01A480  9ED2               	bcf	16338,7,c	;# 
 30869  01A482  0139               	banksel	14831	;# 
 30870  01A484  0E55               	movlw	85	;# 
 30871  01A486  6FEF               	movwf	14831,b	;# 
 30872  01A488  0EAA               	movlw	170	;# 
 30873  01A48A  6FEF               	movwf	14831,b	;# 
 30874  01A48C  81EF               	bsf	14831,0,b	;# 
 30875  01A48E  8ED2               	bsf	16338,7,c	;# 
 30876                           
 30877                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 30878  01A490  013B               	movlb	59	; () banked
 30879  01A492  6BFC               	clrf	252,b	;volatile
 30880                           
 30881                           ; BSR set to: 59
 30882                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30883  01A494  0012               	return		;funcret
 30884  01A496                     __end_of_DMA1_Initialize:
 30885                           	opt callstack 0
 30886                           
 30887 ;; *************** function _CLKREF_Initialize *****************
 30888 ;; Defined at:
 30889 ;;		line 58 in file "mcc_generated_files/clkref.c"
 30890 ;; Parameters:    Size  Location     Type
 30891 ;;		None
 30892 ;; Auto vars:     Size  Location     Type
 30893 ;;		None
 30894 ;; Return value:  Size  Location     Type
 30895 ;;                  1  [STACK] void 
 30896 ;; Registers used:
 30897 ;;		wreg, status,2
 30898 ;; Tracked objects:
 30899 ;;		On entry : 3F/3B
 30900 ;;		On exit  : 3F/3C
 30901 ;;		Unchanged: 0/0
 30902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30906 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30907 ;;Total ram usage:        0 bytes
 30908 ;; Hardware stack levels used:    1
 30909 ;; Hardware stack levels required when called:   15
 30910 ;; This function calls:
 30911 ;;		Nothing
 30912 ;; This function is called by:
 30913 ;;		_SYSTEM_Initialize
 30914 ;; This function uses a reentrant model
 30915 ;;
 30916                           
 30917                           	psect	text132
 30918  01B69A                     __ptext132:
 30919                           	opt callstack 0
 30920  01B69A                     _CLKREF_Initialize:
 30921                           	opt callstack 14
 30922                           
 30923                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 30924                           
 30925                           ; BSR set to: 59
 30926                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30927                           ;incstack = 0
 30928  01B69A  013C               	movlb	60	; () banked
 30929  01B69C  6BE6               	clrf	230,b	;volatile
 30930                           
 30931                           ; BSR set to: 60
 30932                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 30933  01B69E  0E94               	movlw	148
 30934  01B6A0  6FE5               	movwf	229,b	;volatile
 30935                           
 30936                           ; BSR set to: 60
 30937                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 30938  01B6A2  0012               	return		;funcret
 30939  01B6A4                     __end_of_CLKREF_Initialize:
 30940                           	opt callstack 0
 30941                           
 30942 ;; *************** function _ADCC_Initialize *****************
 30943 ;; Defined at:
 30944 ;;		line 65 in file "mcc_generated_files/adcc.c"
 30945 ;; Parameters:    Size  Location     Type
 30946 ;;		None
 30947 ;; Auto vars:     Size  Location     Type
 30948 ;;		None
 30949 ;; Return value:  Size  Location     Type
 30950 ;;                  1  [STACK] void 
 30951 ;; Registers used:
 30952 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 30953 ;; Tracked objects:
 30954 ;;		On entry : 3F/3E
 30955 ;;		On exit  : 0/0
 30956 ;;		Unchanged: 0/0
 30957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30962 ;;Total ram usage:        0 bytes
 30963 ;; Hardware stack levels used:    1
 30964 ;; Hardware stack levels required when called:   16
 30965 ;; This function calls:
 30966 ;;		_ADCC_SetADIInterruptHandler
 30967 ;;		_ADCC_SetADTIInterruptHandler
 30968 ;; This function is called by:
 30969 ;;		_SYSTEM_Initialize
 30970 ;; This function uses a reentrant model
 30971 ;;
 30972                           
 30973                           	psect	text133
 30974  01A496                     __ptext133:
 30975                           	opt callstack 0
 30976  01A496                     _ADCC_Initialize:
 30977                           	opt callstack 13
 30978                           
 30979                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 30980                           
 30981                           ; BSR set to: 60
 30982                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30983                           ;incstack = 0
 30984  01A496  013E               	movlb	62	; () banked
 30985  01A498  6BDE               	clrf	222,b	;volatile
 30986                           
 30987                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 30988  01A49A  6BDF               	clrf	223,b	;volatile
 30989                           
 30990                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 30991  01A49C  6BE0               	clrf	224,b	;volatile
 30992                           
 30993                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 30994  01A49E  6BE1               	clrf	225,b	;volatile
 30995                           
 30996                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 30997  01A4A0  6BE4               	clrf	228,b	;volatile
 30998                           
 30999                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 31000  01A4A2  6BE5               	clrf	229,b	;volatile
 31001                           
 31002                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 31003  01A4A4  6BEA               	clrf	234,b	;volatile
 31004                           
 31005                           ; BSR set to: 62
 31006                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 31007  01A4A6  0E40               	movlw	64
 31008  01A4A8  6FEC               	movwf	236,b	;volatile
 31009                           
 31010                           ; BSR set to: 62
 31011                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 31012  01A4AA  6BF1               	clrf	241,b	;volatile
 31013                           
 31014                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 31015  01A4AC  0E20               	movlw	32
 31016  01A4AE  6FF3               	movwf	243,b	;volatile
 31017                           
 31018                           ; BSR set to: 62
 31019                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 31020  01A4B0  6BF4               	clrf	244,b	;volatile
 31021                           
 31022                           ; BSR set to: 62
 31023                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 31024  01A4B2  6BF5               	clrf	245,b	;volatile
 31025                           
 31026                           ; BSR set to: 62
 31027                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 31028  01A4B4  6BF6               	clrf	246,b	;volatile
 31029                           
 31030                           ; BSR set to: 62
 31031                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 31032  01A4B6  6BF7               	clrf	247,b	;volatile
 31033                           
 31034                           ; BSR set to: 62
 31035                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 31036  01A4B8  6BF9               	clrf	249,b	;volatile
 31037                           
 31038                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 31039  01A4BA  0E5B               	movlw	91
 31040  01A4BC  6FFA               	movwf	250,b	;volatile
 31041                           
 31042                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 31043  01A4BE  0E27               	movlw	39
 31044  01A4C0  6FFB               	movwf	251,b	;volatile
 31045                           
 31046                           ; BSR set to: 62
 31047                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 31048  01A4C2  6BFC               	clrf	252,b	;volatile
 31049                           
 31050                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 31051  01A4C4  0E02               	movlw	2
 31052  01A4C6  6FFD               	movwf	253,b	;volatile
 31053                           
 31054                           ; BSR set to: 62
 31055                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 31056  01A4C8  6BFE               	clrf	254,b	;volatile
 31057                           
 31058                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 31059  01A4CA  0E07               	movlw	7
 31060  01A4CC  6FFF               	movwf	255,b	;volatile
 31061                           
 31062                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 31063  01A4CE  0E84               	movlw	132
 31064  01A4D0  6FF8               	movwf	248,b	;volatile
 31065                           
 31066                           ; BSR set to: 62
 31067                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 31068  01A4D2  0139               	movlb	57	; () banked
 31069  01A4D4  95A1               	bcf	161,2,b	;volatile
 31070                           
 31071                           ; BSR set to: 57
 31072                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 31073  01A4D6  8591               	bsf	145,2,b	;volatile
 31074                           
 31075                           ; BSR set to: 57
 31076                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 31077  01A4D8  0E20               	movlw	low _ADCC_DefaultInterruptHandler
 31078  01A4DA  6EE6               	movwf	postinc1,c
 31079  01A4DC  0EB7               	movlw	high _ADCC_DefaultInterruptHandler
 31080  01A4DE  6EE6               	movwf	postinc1,c
 31081  01A4E0  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 31082  01A4E2  6EE6               	movwf	postinc1,c
 31083  01A4E4  EC59  F0D9         	call	_ADCC_SetADIInterruptHandler	;wreg free
 31084                           
 31085                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 31086  01A4E8  0139               	movlb	57	; () banked
 31087  01A4EA  97A1               	bcf	161,3,b	;volatile
 31088                           
 31089                           ; BSR set to: 57
 31090                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 31091  01A4EC  8791               	bsf	145,3,b	;volatile
 31092                           
 31093                           ; BSR set to: 57
 31094                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 31095  01A4EE  0E20               	movlw	low _ADCC_DefaultInterruptHandler
 31096  01A4F0  6EE6               	movwf	postinc1,c
 31097  01A4F2  0EB7               	movlw	high _ADCC_DefaultInterruptHandler
 31098  01A4F4  6EE6               	movwf	postinc1,c
 31099  01A4F6  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 31100  01A4F8  6EE6               	movwf	postinc1,c
 31101  01A4FA  EC45  F0D9         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 31102                           
 31103                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31104  01A4FE  0012               	return		;funcret
 31105  01A500                     __end_of_ADCC_Initialize:
 31106                           	opt callstack 0
 31107                           
 31108 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 31109 ;; Defined at:
 31110 ;;		line 336 in file "mcc_generated_files/adcc.c"
 31111 ;; Parameters:    Size  Location     Type
 31112 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31113 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 31114 ;; Auto vars:     Size  Location     Type
 31115 ;;		None
 31116 ;; Return value:  Size  Location     Type
 31117 ;;                  1  [STACK] void 
 31118 ;; Registers used:
 31119 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31120 ;; Tracked objects:
 31121 ;;		On entry : 0/0
 31122 ;;		On exit  : 0/0
 31123 ;;		Unchanged: 0/0
 31124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31128 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31129 ;;Total ram usage:        0 bytes
 31130 ;; Hardware stack levels used:    1
 31131 ;; Hardware stack levels required when called:   15
 31132 ;; This function calls:
 31133 ;;		Nothing
 31134 ;; This function is called by:
 31135 ;;		_ADCC_Initialize
 31136 ;;		_start_adc_scan
 31137 ;; This function uses a reentrant model
 31138 ;;
 31139                           
 31140                           	psect	text134
 31141  01B28A                     __ptext134:
 31142                           	opt callstack 0
 31143  01B28A                     _ADCC_SetADTIInterruptHandler:
 31144                           	opt callstack 14
 31145                           
 31146                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 31147                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31148                           
 31149                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31150                           ;incstack = 0
 31151  01B28A  50E1               	movf	fsr1l,w,c
 31152  01B28C  0FFD               	addlw	-3
 31153  01B28E  6ED9               	movwf	fsr2l,c
 31154  01B290  50E2               	movf	fsr1h,w,c
 31155  01B292  6EDA               	movwf	fsr2h,c
 31156  01B294  0EFF               	movlw	255
 31157  01B296  22DA               	addwfc	fsr2h,f,c
 31158  01B298  006F FF78  F0AB    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 31159  01B29E  006F FF78  F0AC    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 31160  01B2A4  006F FF74  F0AD    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 31161                           
 31162                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 31163  01B2AA  52E5               	movf	postdec1,f,c
 31164  01B2AC  52E5               	movf	postdec1,f,c
 31165  01B2AE  52E5               	movf	postdec1,f,c
 31166  01B2B0  0012               	return		;funcret
 31167  01B2B2                     __end_of_ADCC_SetADTIInterruptHandler:
 31168                           	opt callstack 0
 31169                           
 31170 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 31171 ;; Defined at:
 31172 ;;		line 323 in file "mcc_generated_files/adcc.c"
 31173 ;; Parameters:    Size  Location     Type
 31174 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31175 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 31176 ;; Auto vars:     Size  Location     Type
 31177 ;;		None
 31178 ;; Return value:  Size  Location     Type
 31179 ;;                  1  [STACK] void 
 31180 ;; Registers used:
 31181 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31182 ;; Tracked objects:
 31183 ;;		On entry : 6/0
 31184 ;;		On exit  : 0/0
 31185 ;;		Unchanged: 0/0
 31186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31191 ;;Total ram usage:        0 bytes
 31192 ;; Hardware stack levels used:    1
 31193 ;; Hardware stack levels required when called:   15
 31194 ;; This function calls:
 31195 ;;		Nothing
 31196 ;; This function is called by:
 31197 ;;		_ADCC_Initialize
 31198 ;;		_start_adc_scan
 31199 ;; This function uses a reentrant model
 31200 ;;
 31201                           
 31202                           	psect	text135
 31203  01B2B2                     __ptext135:
 31204                           	opt callstack 0
 31205  01B2B2                     _ADCC_SetADIInterruptHandler:
 31206                           	opt callstack 14
 31207                           
 31208                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 31209                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31210                           
 31211                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31212                           ;incstack = 0
 31213  01B2B2  50E1               	movf	fsr1l,w,c
 31214  01B2B4  0FFD               	addlw	-3
 31215  01B2B6  6ED9               	movwf	fsr2l,c
 31216  01B2B8  50E2               	movf	fsr1h,w,c
 31217  01B2BA  6EDA               	movwf	fsr2h,c
 31218  01B2BC  0EFF               	movlw	255
 31219  01B2BE  22DA               	addwfc	fsr2h,f,c
 31220  01B2C0  006F FF78  F0AE    	movff	postinc2,_ADCC_ADI_InterruptHandler
 31221  01B2C6  006F FF78  F0AF    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 31222  01B2CC  006F FF74  F0B0    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 31223                           
 31224                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 31225  01B2D2  52E5               	movf	postdec1,f,c
 31226  01B2D4  52E5               	movf	postdec1,f,c
 31227  01B2D6  52E5               	movf	postdec1,f,c
 31228  01B2D8  0012               	return		;funcret
 31229  01B2DA                     __end_of_ADCC_SetADIInterruptHandler:
 31230                           	opt callstack 0
 31231                           
 31232 ;; *************** function _INT1_ISR *****************
 31233 ;; Defined at:
 31234 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 31235 ;; Parameters:    Size  Location     Type
 31236 ;;		None
 31237 ;; Auto vars:     Size  Location     Type
 31238 ;;		None
 31239 ;; Return value:  Size  Location     Type
 31240 ;;                  1    wreg      void 
 31241 ;; Registers used:
 31242 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 31243 ;; Tracked objects:
 31244 ;;		On entry : 0/0
 31245 ;;		On exit  : 0/0
 31246 ;;		Unchanged: 0/0
 31247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31250 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31251 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31252 ;;Total ram usage:        4 bytes
 31253 ;; Hardware stack levels used:    1
 31254 ;; Hardware stack levels required when called:    5
 31255 ;; This function calls:
 31256 ;;		_INT1_CallBack
 31257 ;; This function is called by:
 31258 ;;		Interrupt level 1
 31259 ;; This function uses a non-reentrant model
 31260 ;;
 31261                           
 31262                           	psect	text136
 31263  01AD20                     __ptext136:
 31264                           	opt callstack 0
 31265  01AD20                     _INT1_ISR:
 31266                           	opt callstack 12
 31267                           
 31268                           ;incstack = 0
 31269  01AD20  006F FF60  F007    	movff	status,??_INT1_ISR
 31270  01AD26  0060  F0A0  F008   	movff	btemp,??_INT1_ISR+1
 31271  01AD2C  0060  F0C8  F009   	movff	btemp+10,??_INT1_ISR+2
 31272  01AD32  0060  F0CC  F00A   	movff	btemp+11,??_INT1_ISR+3
 31273  01AD38  EE16  F0A1         	lfsr	1,___intlo_sp
 31274                           
 31275                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 31276  01AD3C  0139               	movlb	57	; () banked
 31277  01AD3E  91A5               	bcf	165,0,b	;volatile
 31278                           
 31279                           ; BSR set to: 57
 31280                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 31281  01AD40  ECCE  F0D9         	call	_INT1_CallBack	;wreg free
 31282  01AD44  0060  F028  F033   	movff	??_INT1_ISR+3,btemp+11
 31283  01AD4A  0060  F024  F032   	movff	??_INT1_ISR+2,btemp+10
 31284  01AD50  0060  F020  F028   	movff	??_INT1_ISR+1,btemp
 31285  01AD56  0060  F01F  FFD8   	movff	??_INT1_ISR,status
 31286  01AD5C  0011               	retfie		f
 31287  01AD5E                     __end_of_INT1_ISR:
 31288                           	opt callstack 0
 31289                           
 31290 ;; *************** function _INT1_CallBack *****************
 31291 ;; Defined at:
 31292 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 31293 ;; Parameters:    Size  Location     Type
 31294 ;;		None
 31295 ;; Auto vars:     Size  Location     Type
 31296 ;;		None
 31297 ;; Return value:  Size  Location     Type
 31298 ;;                  1  [STACK] void 
 31299 ;; Registers used:
 31300 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 31301 ;; Tracked objects:
 31302 ;;		On entry : 3F/39
 31303 ;;		On exit  : 0/0
 31304 ;;		Unchanged: 0/0
 31305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31310 ;;Total ram usage:        0 bytes
 31311 ;; Hardware stack levels used:    1
 31312 ;; Hardware stack levels required when called:    4
 31313 ;; This function calls:
 31314 ;;		Absolute function
 31315 ;;		_INT1_DefaultInterruptHandler
 31316 ;;		_switch_handler
 31317 ;; This function is called by:
 31318 ;;		_INT1_ISR
 31319 ;; This function uses a reentrant model
 31320 ;;
 31321                           
 31322                           	psect	text137
 31323  01B39C                     __ptext137:
 31324                           	opt callstack 0
 31325  01B39C                     _INT1_CallBack:
 31326                           	opt callstack 12
 31327                           
 31328                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 31329                           
 31330                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31331                           ;incstack = 0
 31332  01B39C  0100               	movlb	0	; () banked
 31333  01B39E  51BA               	movf	_INT1_InterruptHandler& (0+255),w,b
 31334  01B3A0  11BB               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 31335  01B3A2  11BC               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 31336  01B3A4  B4D8               	btfsc	status,2,c
 31337  01B3A6  0012               	return	
 31338                           
 31339                           ; BSR set to: 0
 31340                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 31341  01B3A8  D801               	call	u957_28
 31342  01B3AA  0012               	return	
 31343  01B3AC                     u957_28:
 31344  01B3AC  0005               	push	
 31345  01B3AE  6EFA               	movwf	pclath,c
 31346  01B3B0  51BA               	movf	_INT1_InterruptHandler& (0+255),w,b
 31347  01B3B2  6EFD               	movwf	tosl,c
 31348  01B3B4  51BB               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 31349  01B3B6  6EFE               	movwf	tosh,c
 31350  01B3B8  51BC               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 31351  01B3BA  6EFF               	movwf	tosu,c
 31352  01B3BC  50FA               	movf	pclath,w,c
 31353  01B3BE  0012               	return		;indir
 31354  01B3C0                     __end_of_INT1_CallBack:
 31355                           	opt callstack 0
 31356                           
 31357 ;; *************** function _INT1_DefaultInterruptHandler *****************
 31358 ;; Defined at:
 31359 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 31360 ;; Parameters:    Size  Location     Type
 31361 ;;		None
 31362 ;; Auto vars:     Size  Location     Type
 31363 ;;		None
 31364 ;; Return value:  Size  Location     Type
 31365 ;;                  1  [STACK] void 
 31366 ;; Registers used:
 31367 ;;		None
 31368 ;; Tracked objects:
 31369 ;;		On entry : 3F/0
 31370 ;;		On exit  : 0/0
 31371 ;;		Unchanged: 0/0
 31372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31377 ;;Total ram usage:        0 bytes
 31378 ;; Hardware stack levels used:    1
 31379 ;; Hardware stack levels required when called:    3
 31380 ;; This function calls:
 31381 ;;		Nothing
 31382 ;; This function is called by:
 31383 ;;		_EXT_INT_Initialize
 31384 ;;		_INT1_CallBack
 31385 ;; This function uses a reentrant model
 31386 ;;
 31387                           
 31388                           	psect	text138
 31389  01B71A                     __ptext138:
 31390                           	opt callstack 0
 31391  01B71A                     _INT1_DefaultInterruptHandler:
 31392                           	opt callstack 12
 31393                           
 31394                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 31395                           
 31396                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31397                           ;incstack = 0
 31398  01B71A  0012               	return		;funcret
 31399  01B71C                     __end_of_INT1_DefaultInterruptHandler:
 31400                           	opt callstack 0
 31401                           
 31402 ;; *************** function _switch_handler *****************
 31403 ;; Defined at:
 31404 ;;		line 58 in file "dio.c"
 31405 ;; Parameters:    Size  Location     Type
 31406 ;;		None
 31407 ;; Auto vars:     Size  Location     Type
 31408 ;;  i               1  [STACK] unsigned char 
 31409 ;;  sw_value        1  [STACK] unsigned char 
 31410 ;; Return value:  Size  Location     Type
 31411 ;;                  1  [STACK] void 
 31412 ;; Registers used:
 31413 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 31414 ;; Tracked objects:
 31415 ;;		On entry : 3F/0
 31416 ;;		On exit  : 0/0
 31417 ;;		Unchanged: 0/0
 31418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31423 ;;Total ram usage:        0 bytes
 31424 ;; Hardware stack levels used:    1
 31425 ;; Hardware stack levels required when called:    3
 31426 ;; This function calls:
 31427 ;;		Nothing
 31428 ;; This function is called by:
 31429 ;;		_start_switch_handler
 31430 ;;		_INT1_CallBack
 31431 ;; This function uses a reentrant model
 31432 ;;
 31433                           
 31434                           	psect	text139
 31435  018C34                     __ptext139:
 31436                           	opt callstack 0
 31437  018C34                     _switch_handler:
 31438                           	opt callstack 0
 31439                           
 31440                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31441  018C34  52E6               	movf	postinc1,f,c
 31442  018C36  52E6               	movf	postinc1,f,c
 31443                           
 31444                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 31445                           ;stkvar	_i @ sp[(-2)+0]
 31446                           
 31447                           ;incstack = 0
 31448  018C38  0EFE               	movlw	-2
 31449  018C3A  6AE3               	clrf	plusw1,c
 31450  018C3C  9EBD               	bcf	189,7,c	;volatile
 31451  018C3E  9ABF               	bcf	191,5,c	;volatile
 31452                           
 31453                           ;dio.c: 73:  __nop();
 31454  018C40  F000               	nop	
 31455                           
 31456                           ;dio.c: 74:  __nop();
 31457  018C42  F000               	nop	
 31458                           
 31459                           ;dio.c: 75:  __nop();
 31460  018C44  F000               	nop	
 31461  018C46  D019               	goto	l10234
 31462  018C48                     l10222:
 31463                           
 31464                           ;dio.c: 80:    sw_value = PORTFbits.RF3;
 31465  018C48  A6CF               	btfss	207,3,c	;volatile
 31466  018C4A  D011               	goto	u933_20
 31467  018C4C  D00D               	goto	u933_21
 31468  018C4E                     u930_28:
 31469                           
 31470                           ;stkvar	_sw_value @ sp[(-2)+1]
 31471  018C4E  0EFF               	movlw	-1
 31472  018C50  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 31473                           
 31474                           ;dio.c: 81:    break;
 31475  018C56  D027               	goto	l10236
 31476  018C58                     l10224:
 31477                           
 31478                           ;dio.c: 83:    sw_value = PORTFbits.RF2;
 31479  018C58  A4CF               	btfss	207,2,c	;volatile
 31480  018C5A  D009               	goto	u933_20
 31481  018C5C  D005               	goto	u933_21
 31482  018C5E                     l10226:
 31483                           
 31484                           ;dio.c: 86:    sw_value = PORTFbits.RF1;
 31485  018C5E  A2CF               	btfss	207,1,c	;volatile
 31486  018C60  D006               	goto	u933_20
 31487  018C62  D002               	goto	u933_21
 31488  018C64                     l10228:
 31489                           
 31490                           ;dio.c: 89:    sw_value = PORTFbits.RF0;
 31491  018C64  A0CF               	btfss	207,0,c	;volatile
 31492  018C66  D003               	goto	u933_20
 31493  018C68                     u933_21:
 31494  018C68  6A33               	clrf	(btemp+11)^0,c
 31495  018C6A  2A33               	incf	(btemp+11)^0,f,c
 31496  018C6C  D7F0               	goto	u930_28
 31497  018C6E                     u933_20:
 31498  018C6E  6A33               	clrf	(btemp+11)^0,c
 31499  018C70  D7EE               	goto	u930_28
 31500  018C72                     l10230:
 31501                           
 31502                           ;dio.c: 92:    sw_value = 1;
 31503                           ;stkvar	_sw_value @ sp[(-2)+1]
 31504  018C72  0EFF               	movlw	-1
 31505  018C74  6AE3               	clrf	plusw1,c
 31506  018C76  2AE3               	incf	plusw1,f,c
 31507                           
 31508                           ;dio.c: 93:    break;
 31509  018C78  D016               	goto	l10236
 31510  018C7A                     l10234:
 31511                           
 31512                           ;stkvar	_i @ sp[(-2)+0]
 31513  018C7A  0EFE               	movlw	-2
 31514  018C7C  50E3               	movf	plusw1,w,c
 31515  018C7E  6E32               	movwf	(btemp+10)^0,c
 31516  018C80  6A33               	clrf	(btemp+11)^0,c
 31517                           
 31518                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 31519                           ; Switch size 1, requested type "simple"
 31520                           ; Number of cases is 1, Range of values is 0 to 0
 31521                           ; switch strategies available:
 31522                           ; Name         Instructions Cycles
 31523                           ; simple_byte            4     3 (average)
 31524                           ;	Chosen strategy is simple_byte
 31525  018C82  5033               	movf	(btemp+11)^0,w,c
 31526  018C84  0A00               	xorlw	0	; case 0
 31527  018C86  A4D8               	btfss	status,2,c
 31528  018C88  D7F4               	goto	l10230
 31529                           
 31530                           ; Switch size 1, requested type "simple"
 31531                           ; Number of cases is 4, Range of values is 0 to 3
 31532                           ; switch strategies available:
 31533                           ; Name         Instructions Cycles
 31534                           ; simple_byte           13     7 (average)
 31535                           ;	Chosen strategy is simple_byte
 31536  018C8A  5032               	movf	(btemp+10)^0,w,c
 31537  018C8C  0A00               	xorlw	0	; case 0
 31538  018C8E  B4D8               	btfsc	status,2,c
 31539  018C90  D7E9               	goto	l10228
 31540  018C92  0A01               	xorlw	1	; case 1
 31541  018C94  B4D8               	btfsc	status,2,c
 31542  018C96  D7E3               	goto	l10226
 31543  018C98  0A03               	xorlw	3	; case 2
 31544  018C9A  B4D8               	btfsc	status,2,c
 31545  018C9C  D7DD               	goto	l10224
 31546  018C9E  0A01               	xorlw	1	; case 3
 31547  018CA0  B4D8               	btfsc	status,2,c
 31548  018CA2  D7D2               	goto	l10222
 31549  018CA4  D7E6               	goto	l10230
 31550  018CA6                     l10236:
 31551                           
 31552                           ;dio.c: 97:   if (sw_value) {
 31553                           ;stkvar	_sw_value @ sp[(-2)+1]
 31554  018CA6  0EFF               	movlw	-1
 31555  018CA8  50E3               	movf	plusw1,w,c
 31556  018CAA  B4D8               	btfsc	status,2,c
 31557  018CAC  D018               	goto	l10242
 31558                           
 31559                           ;dio.c: 98:    if (S.button[i].sw == SW_ON) {
 31560                           ;stkvar	_i @ sp[(-2)+0]
 31561  018CAE  0EFE               	movlw	-2
 31562  018CB0  50E3               	movf	plusw1,w,c
 31563  018CB2  0D05               	mullw	5
 31564  018CB4  0EBD               	movlw	low _S
 31565  018CB6  24F3               	addwf	243,w,c
 31566  018CB8  6ED9               	movwf	fsr2l,c
 31567  018CBA  0E02               	movlw	high _S
 31568  018CBC  20F4               	addwfc	prodh,w,c
 31569  018CBE  6EDA               	movwf	fsr2h,c
 31570  018CC0  04DE               	decf	postinc2,w,c
 31571  018CC2  A4D8               	btfss	status,2,c
 31572  018CC4  D049               	goto	l10250
 31573                           
 31574                           ;dio.c: 99:     S.button[i].sw = SW_OFF;
 31575                           ;stkvar	_i @ sp[(-2)+0]
 31576  018CC6  0EFE               	movlw	-2
 31577  018CC8  50E3               	movf	plusw1,w,c
 31578  018CCA  0D05               	mullw	5
 31579  018CCC  0EBD               	movlw	low _S
 31580  018CCE  24F3               	addwf	243,w,c
 31581  018CD0  6ED9               	movwf	fsr2l,c
 31582  018CD2  0E02               	movlw	high _S
 31583  018CD4  20F4               	addwfc	prodh,w,c
 31584  018CD6  6EDA               	movwf	fsr2h,c
 31585  018CD8  0E00               	movlw	0
 31586  018CDA  6EDF               	movwf	indf2,c
 31587  018CDC  D03D               	goto	l10250
 31588  018CDE                     l10242:
 31589                           
 31590                           ;dio.c: 102:    if (S.button[i].sw == SW_OFF) {
 31591                           ;stkvar	_i @ sp[(-2)+0]
 31592  018CDE  0EFE               	movlw	-2
 31593  018CE0  50E3               	movf	plusw1,w,c
 31594  018CE2  0D05               	mullw	5
 31595  018CE4  0EBD               	movlw	low _S
 31596  018CE6  24F3               	addwf	243,w,c
 31597  018CE8  6ED9               	movwf	fsr2l,c
 31598  018CEA  0E02               	movlw	high _S
 31599  018CEC  20F4               	addwfc	prodh,w,c
 31600  018CEE  6EDA               	movwf	fsr2h,c
 31601  018CF0  50DF               	movf	indf2,w,c
 31602  018CF2  A4D8               	btfss	status,2,c
 31603  018CF4  D031               	goto	l10250
 31604                           
 31605                           ;dio.c: 103:     S.button[i].sw = SW_ON;
 31606                           ;stkvar	_i @ sp[(-2)+0]
 31607  018CF6  0EFE               	movlw	-2
 31608  018CF8  50E3               	movf	plusw1,w,c
 31609  018CFA  0D05               	mullw	5
 31610  018CFC  0EBD               	movlw	low _S
 31611  018CFE  24F3               	addwf	243,w,c
 31612  018D00  6ED9               	movwf	fsr2l,c
 31613  018D02  0E02               	movlw	high _S
 31614  018D04  20F4               	addwfc	prodh,w,c
 31615  018D06  6EDA               	movwf	fsr2h,c
 31616  018D08  0E01               	movlw	1
 31617  018D0A  6EDF               	movwf	indf2,c
 31618                           
 31619                           ;dio.c: 104:     S.button[i].count = V.timerint_count;
 31620  018D0C  EE20  F2B9         	lfsr	2,_V+185	;volatile
 31621                           
 31622                           ;stkvar	_i @ sp[(-2)+0]
 31623  018D10  0EFE               	movlw	-2
 31624  018D12  50E3               	movf	plusw1,w,c
 31625  018D14  0D05               	mullw	5
 31626  018D16  0EBE               	movlw	low (_S+1)
 31627  018D18  24F3               	addwf	243,w,c
 31628  018D1A  6EE9               	movwf	fsr0l,c
 31629  018D1C  0E02               	movlw	high (_S+1)
 31630  018D1E  20F4               	addwfc	prodh,w,c
 31631  018D20  6EEA               	movwf	fsr0h,c
 31632  018D22  006F FF7B FFEE     	movff	postinc2,postinc0
 31633  018D28  006F FF7B FFEE     	movff	postinc2,postinc0
 31634  018D2E  006F FF7B FFEE     	movff	postinc2,postinc0
 31635  018D34  006F FF7B FFEE     	movff	postinc2,postinc0
 31636                           
 31637                           ;dio.c: 105:     S.sw_bitmap |= 1 << i;
 31638                           ;stkvar	_i @ sp[(-2)+0]
 31639  018D3A  0EFE               	movlw	-2
 31640  018D3C  006F FF8C  F033    	movff	plusw1,btemp+11
 31641  018D42  0E01               	movlw	1
 31642  018D44  6E32               	movwf	(btemp+10)^0,c
 31643  018D46  2A33               	incf	(btemp+11)^0,f,c
 31644  018D48  D002               	goto	u937_24
 31645  018D4A                     u937_25:
 31646  018D4A  90D8               	bcf	status,0,c
 31647  018D4C  3632               	rlcf	(btemp+10)^0,f,c
 31648  018D4E                     u937_24:
 31649  018D4E  2E33               	decfsz	(btemp+11)^0,f,c
 31650  018D50  D7FC               	goto	u937_25
 31651  018D52  5032               	movf	(btemp+10)^0,w,c
 31652  018D54  0102               	movlb	2	; () banked
 31653  018D56  13E5               	iorwf	(_S+40)& (0+255),f,b	;volatile
 31654  018D58                     l10250:
 31655                           
 31656                           ;dio.c: 108:  } while (++i < 4);
 31657                           ;stkvar	_i @ sp[(-2)+0]
 31658  018D58  0EFE               	movlw	-2
 31659  018D5A  2AE3               	incf	plusw1,f,c
 31660  018D5C  0EFE               	movlw	-2
 31661  018D5E  006F FF8C  F028    	movff	plusw1,btemp
 31662  018D64  0E03               	movlw	3
 31663  018D66  6428               	cpfsgt	btemp^0,c
 31664  018D68  D788               	goto	l10234
 31665                           
 31666                           ;dio.c: 117:  do { LATDbits.LATD7 = 1; } while(0);
 31667  018D6A  8EBD               	bsf	189,7,c	;volatile
 31668                           
 31669                           ;dio.c: 118:  do { LATFbits.LATF5 = 1; } while(0);
 31670  018D6C  8ABF               	bsf	191,5,c	;volatile
 31671                           
 31672                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 31673  018D6E  52E5               	movf	postdec1,f,c
 31674  018D70  52E5               	movf	postdec1,f,c
 31675  018D72  0012               	return		;funcret
 31676  018D74                     __end_of_switch_handler:
 31677                           	opt callstack 0
 31678                           
 31679 ;; *************** function _TMR5_ISR *****************
 31680 ;; Defined at:
 31681 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 31682 ;; Parameters:    Size  Location     Type
 31683 ;;		None
 31684 ;; Auto vars:     Size  Location     Type
 31685 ;;		None
 31686 ;; Return value:  Size  Location     Type
 31687 ;;                  1    wreg      void 
 31688 ;; Registers used:
 31689 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 31690 ;; Tracked objects:
 31691 ;;		On entry : 0/0
 31692 ;;		On exit  : 0/0
 31693 ;;		Unchanged: 0/0
 31694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31697 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31698 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31699 ;;Total ram usage:        4 bytes
 31700 ;; Hardware stack levels used:    1
 31701 ;; Hardware stack levels required when called:    5
 31702 ;; This function calls:
 31703 ;;		_TMR5_CallBack
 31704 ;;		_TMR5_WriteTimer
 31705 ;; This function is called by:
 31706 ;;		Interrupt level 1
 31707 ;; This function uses a non-reentrant model
 31708 ;;
 31709                           
 31710                           	psect	text140
 31711  01A80C                     __ptext140:
 31712                           	opt callstack 0
 31713  01A80C                     _TMR5_ISR:
 31714                           	opt callstack 12
 31715                           
 31716                           ;incstack = 0
 31717  01A80C  006F FF60  F00D    	movff	status,??_TMR5_ISR+2
 31718  01A812  0060  F0CC  F00E   	movff	btemp+11,??_TMR5_ISR+3
 31719  01A818  EE16  F0A1         	lfsr	1,___intlo_sp
 31720                           
 31721                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 31722  01A81C  0139               	movlb	57	; () banked
 31723  01A81E  9DA8               	bcf	168,6,b	;volatile
 31724                           
 31725                           ; BSR set to: 57
 31726                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 31727  01A820  0060  F14B  FFE6   	movff	_timer5ReloadVal,postinc1
 31728  01A826  0060  F14F  FFE6   	movff	_timer5ReloadVal+1,postinc1
 31729  01A82C  EC50  F0D6         	call	_TMR5_WriteTimer	;wreg free
 31730                           
 31731                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 31732  01A830  0102               	movlb	2	; () banked
 31733  01A832  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
 31734  01A834  6E0B               	movwf	??_TMR5_ISR^0,c
 31735  01A836  6A0C               	clrf	(??_TMR5_ISR+1)^0,c
 31736  01A838  0E05               	movlw	5
 31737  01A83A  260B               	addwf	??_TMR5_ISR^0,f,c
 31738  01A83C  0E00               	movlw	0
 31739  01A83E  220C               	addwfc	(??_TMR5_ISR+1)^0,f,c
 31740  01A840  4A50               	infsnz	TMR5_ISR@CountCallBack^0,f,c	;volatile
 31741  01A842  2A51               	incf	(TMR5_ISR@CountCallBack+1)^0,f,c	;volatile
 31742  01A844  500B               	movf	??_TMR5_ISR^0,w,c
 31743  01A846  5C50               	subwf	TMR5_ISR@CountCallBack^0,w,c	;volatile
 31744  01A848  500C               	movf	(??_TMR5_ISR+1)^0,w,c
 31745  01A84A  5851               	subwfb	(TMR5_ISR@CountCallBack+1)^0,w,c	;volatile
 31746  01A84C  A0D8               	btfss	status,0,c
 31747  01A84E  D004               	goto	i1l1017
 31748                           
 31749                           ; BSR set to: 2
 31750                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 31751  01A850  ECE0  F0D9         	call	_TMR5_CallBack	;wreg free
 31752                           
 31753                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 31754  01A854  6A50               	clrf	TMR5_ISR@CountCallBack^0,c	;volatile
 31755  01A856  6A51               	clrf	(TMR5_ISR@CountCallBack+1)^0,c	;volatile
 31756  01A858                     i1l1017:
 31757  01A858  0060  F038  F033   	movff	??_TMR5_ISR+3,btemp+11
 31758  01A85E  0060  F037  FFD8   	movff	??_TMR5_ISR+2,status
 31759  01A864  0011               	retfie		f
 31760  01A866                     __end_of_TMR5_ISR:
 31761                           	opt callstack 0
 31762                           
 31763 ;; *************** function _TMR5_WriteTimer *****************
 31764 ;; Defined at:
 31765 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 31766 ;; Parameters:    Size  Location     Type
 31767 ;;  timerVal        2  [STACK] unsigned short 
 31768 ;; Auto vars:     Size  Location     Type
 31769 ;;		None
 31770 ;; Return value:  Size  Location     Type
 31771 ;;                  1  [STACK] void 
 31772 ;; Registers used:
 31773 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 31774 ;; Tracked objects:
 31775 ;;		On entry : 3F/39
 31776 ;;		On exit  : 0/0
 31777 ;;		Unchanged: 0/0
 31778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31783 ;;Total ram usage:        0 bytes
 31784 ;; Hardware stack levels used:    1
 31785 ;; Hardware stack levels required when called:    3
 31786 ;; This function calls:
 31787 ;;		Nothing
 31788 ;; This function is called by:
 31789 ;;		_TMR5_ISR
 31790 ;; This function uses a reentrant model
 31791 ;;
 31792                           
 31793                           	psect	text141
 31794  01ACA0                     __ptext141:
 31795                           	opt callstack 0
 31796  01ACA0                     _TMR5_WriteTimer:
 31797                           	opt callstack 13
 31798                           
 31799                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 31800                           
 31801                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31802                           ;incstack = 0
 31803  01ACA0  A49A               	btfss	154,2,c	;volatile
 31804  01ACA2  D00F               	goto	l10434
 31805                           
 31806                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 31807  01ACA4  909A               	bcf	154,0,c	;volatile
 31808                           
 31809                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 31810                           ;stkvar	_timerVal @ sp[(0)+-2]
 31811  01ACA6  0EFF               	movlw	255
 31812  01ACA8  24E1               	addwf	fsr1l,w,c
 31813  01ACAA  6ED9               	movwf	fsr2l,c
 31814  01ACAC  0EFF               	movlw	255
 31815  01ACAE  20E2               	addwfc	fsr1h,w,c
 31816  01ACB0  6EDA               	movwf	fsr2h,c
 31817  01ACB2  50DF               	movf	indf2,w,c
 31818  01ACB4  6E99               	movwf	153,c	;volatile
 31819                           
 31820                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 31821                           ;stkvar	_timerVal @ sp[(0)+-2]
 31822  01ACB6  0EFE               	movlw	-2
 31823  01ACB8  006F FF8F FF98     	movff	plusw1,16280	;volatile
 31824                           
 31825                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 31826  01ACBE  809A               	bsf	154,0,c	;volatile
 31827                           
 31828                           ;mcc_generated_files/tmr5.c: 142:  } else {
 31829  01ACC0  D00C               	goto	l1000
 31830  01ACC2                     l10434:
 31831                           
 31832                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 31833                           ;stkvar	_timerVal @ sp[(0)+-2]
 31834  01ACC2  0EFF               	movlw	255
 31835  01ACC4  24E1               	addwf	fsr1l,w,c
 31836  01ACC6  6ED9               	movwf	fsr2l,c
 31837  01ACC8  0EFF               	movlw	255
 31838  01ACCA  20E2               	addwfc	fsr1h,w,c
 31839  01ACCC  6EDA               	movwf	fsr2h,c
 31840  01ACCE  50DF               	movf	indf2,w,c
 31841  01ACD0  6E99               	movwf	153,c	;volatile
 31842                           
 31843                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 31844                           ;stkvar	_timerVal @ sp[(0)+-2]
 31845  01ACD2  0EFE               	movlw	-2
 31846  01ACD4  006F FF8F FF98     	movff	plusw1,16280	;volatile
 31847  01ACDA                     l1000:
 31848                           
 31849                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 31850  01ACDA  52E5               	movf	postdec1,f,c
 31851  01ACDC  52E5               	movf	postdec1,f,c
 31852  01ACDE  0012               	return		;funcret
 31853  01ACE0                     __end_of_TMR5_WriteTimer:
 31854                           	opt callstack 0
 31855                           
 31856 ;; *************** function _TMR5_CallBack *****************
 31857 ;; Defined at:
 31858 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 31859 ;; Parameters:    Size  Location     Type
 31860 ;;		None
 31861 ;; Auto vars:     Size  Location     Type
 31862 ;;		None
 31863 ;; Return value:  Size  Location     Type
 31864 ;;                  1  [STACK] void 
 31865 ;; Registers used:
 31866 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 31867 ;; Tracked objects:
 31868 ;;		On entry : 3F/2
 31869 ;;		On exit  : 0/0
 31870 ;;		Unchanged: 0/0
 31871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31876 ;;Total ram usage:        0 bytes
 31877 ;; Hardware stack levels used:    1
 31878 ;; Hardware stack levels required when called:    4
 31879 ;; This function calls:
 31880 ;;		Absolute function
 31881 ;;		_TMR5_DefaultInterruptHandler
 31882 ;; This function is called by:
 31883 ;;		_TMR5_ISR
 31884 ;; This function uses a reentrant model
 31885 ;;
 31886                           
 31887                           	psect	text142
 31888  01B3C0                     __ptext142:
 31889                           	opt callstack 0
 31890  01B3C0                     _TMR5_CallBack:
 31891                           	opt callstack 12
 31892                           
 31893                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 31894                           
 31895                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31896                           ;incstack = 0
 31897  01B3C0  0100               	movlb	0	; () banked
 31898  01B3C2  51A5               	movf	_TMR5_InterruptHandler& (0+255),w,b
 31899  01B3C4  11A6               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 31900  01B3C6  11A7               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 31901  01B3C8  B4D8               	btfsc	status,2,c
 31902  01B3CA  0012               	return	
 31903                           
 31904                           ; BSR set to: 0
 31905                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 31906  01B3CC  D801               	call	u966_28
 31907  01B3CE  0012               	return	
 31908  01B3D0                     u966_28:
 31909  01B3D0  0005               	push	
 31910  01B3D2  6EFA               	movwf	pclath,c
 31911  01B3D4  51A5               	movf	_TMR5_InterruptHandler& (0+255),w,b
 31912  01B3D6  6EFD               	movwf	tosl,c
 31913  01B3D8  51A6               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 31914  01B3DA  6EFE               	movwf	tosh,c
 31915  01B3DC  51A7               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 31916  01B3DE  6EFF               	movwf	tosu,c
 31917  01B3E0  50FA               	movf	pclath,w,c
 31918  01B3E2  0012               	return		;indir
 31919  01B3E4                     __end_of_TMR5_CallBack:
 31920                           	opt callstack 0
 31921                           
 31922 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 31923 ;; Defined at:
 31924 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 31925 ;; Parameters:    Size  Location     Type
 31926 ;;		None
 31927 ;; Auto vars:     Size  Location     Type
 31928 ;;		None
 31929 ;; Return value:  Size  Location     Type
 31930 ;;                  1  [STACK] void 
 31931 ;; Registers used:
 31932 ;;		wreg, status,2, status,0, btemp+11
 31933 ;; Tracked objects:
 31934 ;;		On entry : 3F/0
 31935 ;;		On exit  : 3F/2
 31936 ;;		Unchanged: 0/0
 31937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31941 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31942 ;;Total ram usage:        0 bytes
 31943 ;; Hardware stack levels used:    1
 31944 ;; Hardware stack levels required when called:    3
 31945 ;; This function calls:
 31946 ;;		Nothing
 31947 ;; This function is called by:
 31948 ;;		_TMR5_Initialize
 31949 ;;		_TMR5_CallBack
 31950 ;; This function uses a reentrant model
 31951 ;;
 31952                           
 31953                           	psect	text143
 31954  01AEDA                     __ptext143:
 31955                           	opt callstack 0
 31956  01AEDA                     _TMR5_DefaultInterruptHandler:
 31957                           	opt callstack 12
 31958                           
 31959                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 31960                           
 31961                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31962                           ;incstack = 0
 31963  01AEDA  A0BE               	btfss	190,0,c	;volatile
 31964  01AEDC  D002               	goto	u902_20
 31965  01AEDE  0E01               	movlw	1
 31966  01AEE0  D001               	goto	u902_26
 31967  01AEE2                     u902_20:
 31968  01AEE2  0E00               	movlw	0
 31969  01AEE4                     u902_26:
 31970  01AEE4  0AFF               	xorlw	255
 31971  01AEE6  6E33               	movwf	(btemp+11)^0,c
 31972  01AEE8  50BE               	movf	190,w,c	;volatile
 31973  01AEEA  1833               	xorwf	(btemp+11)^0,w,c
 31974  01AEEC  0BFE               	andlw	-2
 31975  01AEEE  1833               	xorwf	(btemp+11)^0,w,c
 31976  01AEF0  6EBE               	movwf	190,c	;volatile
 31977                           
 31978                           ;mcc_generated_files/tmr5.c: 200:  V.timerint_count++;
 31979  01AEF2  0E01               	movlw	1
 31980  01AEF4  0102               	movlb	2	; () banked
 31981  01AEF6  27B9               	addwf	(_V+185)& (0+255),f,b	;volatile
 31982  01AEF8  0E00               	movlw	0
 31983  01AEFA  23BA               	addwfc	(_V+186)& (0+255),f,b	;volatile
 31984  01AEFC  23BB               	addwfc	(_V+187)& (0+255),f,b	;volatile
 31985  01AEFE  23BC               	addwfc	(_V+188)& (0+255),f,b	;volatile
 31986                           
 31987                           ; BSR set to: 2
 31988                           ;mcc_generated_files/tmr5.c: 201:  V.ticks++;
 31989  01AF00  0E01               	movlw	1
 31990  01AF02  2781               	addwf	(_V+129)& (0+255),f,b	;volatile
 31991  01AF04  0E00               	movlw	0
 31992  01AF06  2382               	addwfc	(_V+130)& (0+255),f,b	;volatile
 31993  01AF08  2383               	addwfc	(_V+131)& (0+255),f,b	;volatile
 31994  01AF0A  2384               	addwfc	(_V+132)& (0+255),f,b	;volatile
 31995                           
 31996                           ; BSR set to: 2
 31997                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 31998  01AF0C  0012               	return		;funcret
 31999  01AF0E                     __end_of_TMR5_DefaultInterruptHandler:
 32000                           	opt callstack 0
 32001                           
 32002 ;; *************** function _TMR3_ISR *****************
 32003 ;; Defined at:
 32004 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 32005 ;; Parameters:    Size  Location     Type
 32006 ;;		None
 32007 ;; Auto vars:     Size  Location     Type
 32008 ;;		None
 32009 ;; Return value:  Size  Location     Type
 32010 ;;                  1    wreg      void 
 32011 ;; Registers used:
 32012 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 32013 ;; Tracked objects:
 32014 ;;		On entry : 0/0
 32015 ;;		On exit  : 3F/0
 32016 ;;		Unchanged: 0/0
 32017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32020 ;;      Temps:         25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32021 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32022 ;;Total ram usage:       25 bytes
 32023 ;; Hardware stack levels used:    1
 32024 ;; Hardware stack levels required when called:   14
 32025 ;; This function calls:
 32026 ;;		_TMR3_CallBack
 32027 ;;		_TMR3_WriteTimer
 32028 ;; This function is called by:
 32029 ;;		Interrupt level 1
 32030 ;; This function uses a non-reentrant model
 32031 ;;
 32032                           
 32033                           	psect	text144
 32034  018844                     __ptext144:
 32035                           	opt callstack 0
 32036  018844                     _TMR3_ISR:
 32037                           	opt callstack 3
 32038                           
 32039                           ; BSR set to: 2
 32040                           ;incstack = 0
 32041  018844  006F FF60  F00F    	movff	status,??_TMR3_ISR
 32042  01884A  006F FFD8  F010    	movff	tblptrl,??_TMR3_ISR+1
 32043  018850  006F FFDC  F011    	movff	tblptrh,??_TMR3_ISR+2
 32044  018856  006F FFE0  F012    	movff	tblptru,??_TMR3_ISR+3
 32045  01885C  006F FFD4  F013    	movff	tablat,??_TMR3_ISR+4
 32046  018862  0060  F0A0  F014   	movff	btemp,??_TMR3_ISR+5
 32047  018868  0060  F0A4  F015   	movff	btemp+1,??_TMR3_ISR+6
 32048  01886E  0060  F0A8  F016   	movff	btemp+2,??_TMR3_ISR+7
 32049  018874  0060  F0AC  F017   	movff	btemp+3,??_TMR3_ISR+8
 32050  01887A  0060  F0B0  F018   	movff	btemp+4,??_TMR3_ISR+9
 32051  018880  0060  F0B4  F019   	movff	btemp+5,??_TMR3_ISR+10
 32052  018886  0060  F0B8  F01A   	movff	btemp+6,??_TMR3_ISR+11
 32053  01888C  0060  F0BC  F01B   	movff	btemp+7,??_TMR3_ISR+12
 32054  018892  0060  F0C0  F01C   	movff	btemp+8,??_TMR3_ISR+13
 32055  018898  0060  F0C4  F01D   	movff	btemp+9,??_TMR3_ISR+14
 32056  01889E  0060  F0C8  F01E   	movff	btemp+10,??_TMR3_ISR+15
 32057  0188A4  0060  F0CC  F01F   	movff	btemp+11,??_TMR3_ISR+16
 32058  0188AA  0060  F0E0  F020   	movff	btemp+16,??_TMR3_ISR+17
 32059  0188B0  0060  F0E4  F021   	movff	btemp+17,??_TMR3_ISR+18
 32060  0188B6  0060  F0E8  F022   	movff	btemp+18,??_TMR3_ISR+19
 32061  0188BC  0060  F0EC  F023   	movff	btemp+19,??_TMR3_ISR+20
 32062  0188C2  0060  F0F0  F024   	movff	btemp+20,??_TMR3_ISR+21
 32063  0188C8  0060  F0F4  F025   	movff	btemp+21,??_TMR3_ISR+22
 32064  0188CE  0060  F0F8  F026   	movff	btemp+22,??_TMR3_ISR+23
 32065  0188D4  0060  F0FC  F027   	movff	btemp+23,??_TMR3_ISR+24
 32066  0188DA  EE16  F0A1         	lfsr	1,___intlo_sp
 32067                           
 32068                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 32069  0188DE  0139               	movlb	57	; () banked
 32070  0188E0  9DA6               	bcf	166,6,b	;volatile
 32071                           
 32072                           ; BSR set to: 57
 32073                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 32074  0188E2  0060  F13B  FFE6   	movff	_timer3ReloadVal,postinc1
 32075  0188E8  0060  F13F  FFE6   	movff	_timer3ReloadVal+1,postinc1
 32076  0188EE  EC70  F0D6         	call	_TMR3_WriteTimer	;wreg free
 32077                           
 32078                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 32079  0188F2  0100               	movlb	0	; () banked
 32080  0188F4  4BC2               	infsnz	TMR3_ISR@CountCallBack& (0+255),f,b	;volatile
 32081  0188F6  2BC3               	incf	(TMR3_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 32082  0188F8  51C3               	movf	(TMR3_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 32083  0188FA  E104               	bnz	i1u1205_20
 32084  0188FC  0E28               	movlw	40
 32085  0188FE  5DC2               	subwf	TMR3_ISR@CountCallBack& (0+255),w,b	;volatile
 32086  018900  A0D8               	btfss	status,0,c
 32087  018902  D005               	goto	i1l1205
 32088  018904                     i1u1205_20:
 32089                           
 32090                           ; BSR set to: 0
 32091                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 32092  018904  ECF2  F0D9         	call	_TMR3_CallBack	;wreg free
 32093                           
 32094                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 32095  018908  0100               	movlb	0	; () banked
 32096  01890A  6BC2               	clrf	TMR3_ISR@CountCallBack& (0+255),b	;volatile
 32097  01890C  6BC3               	clrf	(TMR3_ISR@CountCallBack+1)& (0+255),b	;volatile
 32098  01890E                     i1l1205:
 32099                           
 32100                           ; BSR set to: 0
 32101  01890E  0060  F09C  F03F   	movff	??_TMR3_ISR+24,btemp+23
 32102  018914  0060  F098  F03E   	movff	??_TMR3_ISR+23,btemp+22
 32103  01891A  0060  F094  F03D   	movff	??_TMR3_ISR+22,btemp+21
 32104  018920  0060  F090  F03C   	movff	??_TMR3_ISR+21,btemp+20
 32105  018926  0060  F08C  F03B   	movff	??_TMR3_ISR+20,btemp+19
 32106  01892C  0060  F088  F03A   	movff	??_TMR3_ISR+19,btemp+18
 32107  018932  0060  F084  F039   	movff	??_TMR3_ISR+18,btemp+17
 32108  018938  0060  F080  F038   	movff	??_TMR3_ISR+17,btemp+16
 32109  01893E  0060  F07C  F033   	movff	??_TMR3_ISR+16,btemp+11
 32110  018944  0060  F078  F032   	movff	??_TMR3_ISR+15,btemp+10
 32111  01894A  0060  F074  F031   	movff	??_TMR3_ISR+14,btemp+9
 32112  018950  0060  F070  F030   	movff	??_TMR3_ISR+13,btemp+8
 32113  018956  0060  F06C  F02F   	movff	??_TMR3_ISR+12,btemp+7
 32114  01895C  0060  F068  F02E   	movff	??_TMR3_ISR+11,btemp+6
 32115  018962  0060  F064  F02D   	movff	??_TMR3_ISR+10,btemp+5
 32116  018968  0060  F060  F02C   	movff	??_TMR3_ISR+9,btemp+4
 32117  01896E  0060  F05C  F02B   	movff	??_TMR3_ISR+8,btemp+3
 32118  018974  0060  F058  F02A   	movff	??_TMR3_ISR+7,btemp+2
 32119  01897A  0060  F054  F029   	movff	??_TMR3_ISR+6,btemp+1
 32120  018980  0060  F050  F028   	movff	??_TMR3_ISR+5,btemp
 32121  018986  0060  F04F  FFF5   	movff	??_TMR3_ISR+4,tablat
 32122  01898C  0060  F04B  FFF8   	movff	??_TMR3_ISR+3,tblptru
 32123  018992  0060  F047  FFF7   	movff	??_TMR3_ISR+2,tblptrh
 32124  018998  0060  F043  FFF6   	movff	??_TMR3_ISR+1,tblptrl
 32125  01899E  0060  F03F  FFD8   	movff	??_TMR3_ISR,status
 32126  0189A4  0011               	retfie		f
 32127  0189A6                     __end_of_TMR3_ISR:
 32128                           	opt callstack 0
 32129                           
 32130 ;; *************** function _TMR3_WriteTimer *****************
 32131 ;; Defined at:
 32132 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 32133 ;; Parameters:    Size  Location     Type
 32134 ;;  timerVal        2  [STACK] unsigned short 
 32135 ;; Auto vars:     Size  Location     Type
 32136 ;;		None
 32137 ;; Return value:  Size  Location     Type
 32138 ;;                  1  [STACK] void 
 32139 ;; Registers used:
 32140 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 32141 ;; Tracked objects:
 32142 ;;		On entry : 3F/39
 32143 ;;		On exit  : 0/0
 32144 ;;		Unchanged: 0/0
 32145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32150 ;;Total ram usage:        0 bytes
 32151 ;; Hardware stack levels used:    1
 32152 ;; Hardware stack levels required when called:    3
 32153 ;; This function calls:
 32154 ;;		Nothing
 32155 ;; This function is called by:
 32156 ;;		_TMR3_ISR
 32157 ;; This function uses a reentrant model
 32158 ;;
 32159                           
 32160                           	psect	text145
 32161  01ACE0                     __ptext145:
 32162                           	opt callstack 0
 32163  01ACE0                     _TMR3_WriteTimer:
 32164                           	opt callstack 13
 32165                           
 32166                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 32167                           
 32168                           ; BSR set to: 0
 32169                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32170                           ;incstack = 0
 32171  01ACE0  A4A6               	btfss	166,2,c	;volatile
 32172  01ACE2  D00F               	goto	l10452
 32173                           
 32174                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 32175  01ACE4  90A6               	bcf	166,0,c	;volatile
 32176                           
 32177                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 32178                           ;stkvar	_timerVal @ sp[(0)+-2]
 32179  01ACE6  0EFF               	movlw	255
 32180  01ACE8  24E1               	addwf	fsr1l,w,c
 32181  01ACEA  6ED9               	movwf	fsr2l,c
 32182  01ACEC  0EFF               	movlw	255
 32183  01ACEE  20E2               	addwfc	fsr1h,w,c
 32184  01ACF0  6EDA               	movwf	fsr2h,c
 32185  01ACF2  50DF               	movf	indf2,w,c
 32186  01ACF4  6EA5               	movwf	165,c	;volatile
 32187                           
 32188                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 32189                           ;stkvar	_timerVal @ sp[(0)+-2]
 32190  01ACF6  0EFE               	movlw	-2
 32191  01ACF8  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 32192                           
 32193                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 32194  01ACFE  80A6               	bsf	166,0,c	;volatile
 32195                           
 32196                           ;mcc_generated_files/tmr3.c: 141:     }
 32197  01AD00  D00C               	goto	l1188
 32198  01AD02                     l10452:
 32199                           
 32200                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 32201                           ;stkvar	_timerVal @ sp[(0)+-2]
 32202  01AD02  0EFF               	movlw	255
 32203  01AD04  24E1               	addwf	fsr1l,w,c
 32204  01AD06  6ED9               	movwf	fsr2l,c
 32205  01AD08  0EFF               	movlw	255
 32206  01AD0A  20E2               	addwfc	fsr1h,w,c
 32207  01AD0C  6EDA               	movwf	fsr2h,c
 32208  01AD0E  50DF               	movf	indf2,w,c
 32209  01AD10  6EA5               	movwf	165,c	;volatile
 32210                           
 32211                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 32212                           ;stkvar	_timerVal @ sp[(0)+-2]
 32213  01AD12  0EFE               	movlw	-2
 32214  01AD14  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 32215  01AD1A                     l1188:
 32216                           
 32217                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 32218  01AD1A  52E5               	movf	postdec1,f,c
 32219  01AD1C  52E5               	movf	postdec1,f,c
 32220  01AD1E  0012               	return		;funcret
 32221  01AD20                     __end_of_TMR3_WriteTimer:
 32222                           	opt callstack 0
 32223                           
 32224 ;; *************** function _TMR3_CallBack *****************
 32225 ;; Defined at:
 32226 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 32227 ;; Parameters:    Size  Location     Type
 32228 ;;		None
 32229 ;; Auto vars:     Size  Location     Type
 32230 ;;		None
 32231 ;; Return value:  Size  Location     Type
 32232 ;;                  1  [STACK] void 
 32233 ;; Registers used:
 32234 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 32235 ;; Tracked objects:
 32236 ;;		On entry : 3F/0
 32237 ;;		On exit  : 0/0
 32238 ;;		Unchanged: 0/0
 32239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32243 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32244 ;;Total ram usage:        0 bytes
 32245 ;; Hardware stack levels used:    1
 32246 ;; Hardware stack levels required when called:   13
 32247 ;; This function calls:
 32248 ;;		Absolute function
 32249 ;;		_TMR3_DefaultInterruptHandler
 32250 ;;		_calc_bsoc
 32251 ;; This function is called by:
 32252 ;;		_TMR3_ISR
 32253 ;; This function uses a reentrant model
 32254 ;;
 32255                           
 32256                           	psect	text146
 32257  01B3E4                     __ptext146:
 32258                           	opt callstack 0
 32259  01B3E4                     _TMR3_CallBack:
 32260                           	opt callstack 3
 32261                           
 32262                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 32263                           
 32264                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32265                           ;incstack = 0
 32266  01B3E4  0100               	movlb	0	; () banked
 32267  01B3E6  51A2               	movf	_TMR3_InterruptHandler& (0+255),w,b
 32268  01B3E8  11A3               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 32269  01B3EA  11A4               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 32270  01B3EC  B4D8               	btfsc	status,2,c
 32271  01B3EE  0012               	return	
 32272                           
 32273                           ; BSR set to: 0
 32274                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 32275  01B3F0  D801               	call	u1196_28
 32276  01B3F2  0012               	return	
 32277  01B3F4                     u1196_28:
 32278  01B3F4  0005               	push	
 32279  01B3F6  6EFA               	movwf	pclath,c
 32280  01B3F8  51A2               	movf	_TMR3_InterruptHandler& (0+255),w,b
 32281  01B3FA  6EFD               	movwf	tosl,c
 32282  01B3FC  51A3               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 32283  01B3FE  6EFE               	movwf	tosh,c
 32284  01B400  51A4               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 32285  01B402  6EFF               	movwf	tosu,c
 32286  01B404  50FA               	movf	pclath,w,c
 32287  01B406  0012               	return		;indir
 32288  01B408                     __end_of_TMR3_CallBack:
 32289                           	opt callstack 0
 32290                           
 32291 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 32292 ;; Defined at:
 32293 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 32294 ;; Parameters:    Size  Location     Type
 32295 ;;		None
 32296 ;; Auto vars:     Size  Location     Type
 32297 ;;		None
 32298 ;; Return value:  Size  Location     Type
 32299 ;;                  1  [STACK] void 
 32300 ;; Registers used:
 32301 ;;		None
 32302 ;; Tracked objects:
 32303 ;;		On entry : 3F/0
 32304 ;;		On exit  : 0/0
 32305 ;;		Unchanged: 0/0
 32306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32311 ;;Total ram usage:        0 bytes
 32312 ;; Hardware stack levels used:    1
 32313 ;; Hardware stack levels required when called:    3
 32314 ;; This function calls:
 32315 ;;		Nothing
 32316 ;; This function is called by:
 32317 ;;		_TMR3_Initialize
 32318 ;;		_TMR3_CallBack
 32319 ;; This function uses a reentrant model
 32320 ;;
 32321                           
 32322                           	psect	text147
 32323  01B71C                     __ptext147:
 32324                           	opt callstack 0
 32325  01B71C                     _TMR3_DefaultInterruptHandler:
 32326                           	opt callstack 12
 32327                           
 32328                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 32329                           
 32330                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32331                           ;incstack = 0
 32332  01B71C  0012               	return		;funcret
 32333  01B71E                     __end_of_TMR3_DefaultInterruptHandler:
 32334                           	opt callstack 0
 32335                           
 32336 ;; *************** function _calc_bsoc *****************
 32337 ;; Defined at:
 32338 ;;		line 39 in file "bsoc.c"
 32339 ;; Parameters:    Size  Location     Type
 32340 ;;		None
 32341 ;; Auto vars:     Size  Location     Type
 32342 ;;  log_ptr         2  [STACK] PTR unsigned char 
 32343 ;;		 -> port_data(512), 
 32344 ;; Return value:  Size  Location     Type
 32345 ;;                  1  [STACK] void 
 32346 ;; Registers used:
 32347 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 32348 ;; Tracked objects:
 32349 ;;		On entry : 3F/0
 32350 ;;		On exit  : 3F/1
 32351 ;;		Unchanged: 0/0
 32352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32356 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32357 ;;Total ram usage:        0 bytes
 32358 ;; Hardware stack levels used:    1
 32359 ;; Hardware stack levels required when called:   12
 32360 ;; This function calls:
 32361 ;;		_StartTimer
 32362 ;;		___fladd
 32363 ;;		___fldiv
 32364 ;;		___flge
 32365 ;;		___flmul
 32366 ;;		___flneg
 32367 ;;		___fltol
 32368 ;;		_fabsf
 32369 ;;		_port_data_dma_ptr
 32370 ;;		_send_port_data_dma
 32371 ;;		_sprintf
 32372 ;;		_strlen
 32373 ;; This function is called by:
 32374 ;;		_init_bsoc
 32375 ;;		_TMR3_CallBack
 32376 ;; This function uses a reentrant model
 32377 ;;
 32378                           
 32379                           	psect	text148
 32380  014204                     __ptext148:
 32381                           	opt callstack 0
 32382  014204                     _calc_bsoc:
 32383                           	opt callstack 0
 32384                           
 32385                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32386  014204  52E6               	movf	postinc1,f,c
 32387  014206  52E6               	movf	postinc1,f,c
 32388                           
 32389                           ;incstack = 0
 32390                           ;bsoc.c: 41:  uint8_t * log_ptr;;bsoc.c: 43:  do { LATEbits.LATE1 = 1; } while(0);
 32391  014208  82BE               	bsf	190,1,c	;volatile
 32392                           
 32393                           ;bsoc.c: 45:  C.dynamic_ah += (C.c_bat / 3600.0);
 32394  01420A  0E00               	movlw	0
 32395  01420C  6EE6               	movwf	postinc1,c
 32396  01420E  0E00               	movlw	0
 32397  014210  6EE6               	movwf	postinc1,c
 32398  014212  0E61               	movlw	97
 32399  014214  6EE6               	movwf	postinc1,c
 32400  014216  0E45               	movlw	69
 32401  014218  6EE6               	movwf	postinc1,c
 32402  01421A  0060  F513  FFE6   	movff	_C+68,postinc1
 32403  014220  0060  F517  FFE6   	movff	_C+69,postinc1
 32404  014226  0060  F51B  FFE6   	movff	_C+70,postinc1
 32405  01422C  0060  F51F  FFE6   	movff	_C+71,postinc1
 32406  014232  EC9B  F0A4         	call	___fldiv	;wreg free
 32407  014236  0060  F0A3  FFE6   	movff	btemp,postinc1
 32408  01423C  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 32409  014242  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 32410  014248  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 32411  01424E  0060  F633  FFE6   	movff	_C+140,postinc1
 32412  014254  0060  F637  FFE6   	movff	_C+141,postinc1
 32413  01425A  0060  F63B  FFE6   	movff	_C+142,postinc1
 32414  014260  0060  F63F  FFE6   	movff	_C+143,postinc1
 32415  014266  EC24  F09D         	call	___fladd	;wreg free
 32416  01426A  0060  F0A0  F18C   	movff	btemp,_C+140	;volatile
 32417  014270  0060  F0A4  F18D   	movff	btemp+1,_C+141	;volatile
 32418  014276  0060  F0A8  F18E   	movff	btemp+2,_C+142	;volatile
 32419  01427C  0060  F0AC  F18F   	movff	btemp+3,_C+143	;volatile
 32420                           
 32421                           ;bsoc.c: 46:  if (C.dynamic_ah > (C.bank_ah))
 32422  014282  0060  F633  FFE6   	movff	_C+140,postinc1
 32423  014288  0060  F637  FFE6   	movff	_C+141,postinc1
 32424  01428E  0060  F63B  FFE6   	movff	_C+142,postinc1
 32425  014294  0060  F63F  FFE6   	movff	_C+143,postinc1
 32426  01429A  0060  F623  FFE6   	movff	_C+136,postinc1
 32427  0142A0  0060  F627  FFE6   	movff	_C+137,postinc1
 32428  0142A6  0060  F62B  FFE6   	movff	_C+138,postinc1
 32429  0142AC  0060  F62F  FFE6   	movff	_C+139,postinc1
 32430  0142B2  EC70  F0C3         	call	___flge	;wreg free
 32431  0142B6  B028               	btfsc	btemp& (0+255),0,c
 32432  0142B8  D008               	goto	l12362
 32433                           
 32434                           ;bsoc.c: 47:   C.dynamic_ah = C.bank_ah;
 32435  0142BA  C188  F18C         	movff	_C+136,_C+140	;volatile
 32436  0142BE  C189  F18D         	movff	_C+137,_C+141	;volatile
 32437  0142C2  C18A  F18E         	movff	_C+138,_C+142	;volatile
 32438  0142C6  C18B  F18F         	movff	_C+139,_C+143	;volatile
 32439  0142CA                     l12362:
 32440                           
 32441                           ;bsoc.c: 48:  if (C.dynamic_ah < 0.1)
 32442  0142CA  0ECD               	movlw	205
 32443  0142CC  6EE6               	movwf	postinc1,c
 32444  0142CE  0ECC               	movlw	204
 32445  0142D0  6EE6               	movwf	postinc1,c
 32446  0142D2  0ECC               	movlw	204
 32447  0142D4  6EE6               	movwf	postinc1,c
 32448  0142D6  0E3D               	movlw	61
 32449  0142D8  6EE6               	movwf	postinc1,c
 32450  0142DA  0060  F633  FFE6   	movff	_C+140,postinc1
 32451  0142E0  0060  F637  FFE6   	movff	_C+141,postinc1
 32452  0142E6  0060  F63B  FFE6   	movff	_C+142,postinc1
 32453  0142EC  0060  F63F  FFE6   	movff	_C+143,postinc1
 32454  0142F2  EC70  F0C3         	call	___flge	;wreg free
 32455  0142F6  B028               	btfsc	btemp& (0+255),0,c
 32456  0142F8  D009               	goto	l12366
 32457                           
 32458                           ;bsoc.c: 49:   C.dynamic_ah = 0.1;
 32459  0142FA  0ECD               	movlw	205
 32460  0142FC  0101               	movlb	1	; () banked
 32461  0142FE  6F8C               	movwf	(_C+140)& (0+255),b	;volatile
 32462  014300  0ECC               	movlw	204
 32463  014302  6F8D               	movwf	(_C+141)& (0+255),b	;volatile
 32464  014304  0ECC               	movlw	204
 32465  014306  6F8E               	movwf	(_C+142)& (0+255),b	;volatile
 32466  014308  0E3D               	movlw	61
 32467  01430A  6F8F               	movwf	(_C+143)& (0+255),b	;volatile
 32468  01430C                     l12366:
 32469                           
 32470                           ;bsoc.c: 51:  C.pv_ah += (C.c_pv / 3600.0);
 32471  01430C  0E00               	movlw	0
 32472  01430E  6EE6               	movwf	postinc1,c
 32473  014310  0E00               	movlw	0
 32474  014312  6EE6               	movwf	postinc1,c
 32475  014314  0E61               	movlw	97
 32476  014316  6EE6               	movwf	postinc1,c
 32477  014318  0E45               	movlw	69
 32478  01431A  6EE6               	movwf	postinc1,c
 32479  01431C  0060  F523  FFE6   	movff	_C+72,postinc1
 32480  014322  0060  F527  FFE6   	movff	_C+73,postinc1
 32481  014328  0060  F52B  FFE6   	movff	_C+74,postinc1
 32482  01432E  0060  F52F  FFE6   	movff	_C+75,postinc1
 32483  014334  EC9B  F0A4         	call	___fldiv	;wreg free
 32484  014338  0060  F0A3  FFE6   	movff	btemp,postinc1
 32485  01433E  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 32486  014344  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 32487  01434A  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 32488  014350  0060  F643  FFE6   	movff	_C+144,postinc1
 32489  014356  0060  F647  FFE6   	movff	_C+145,postinc1
 32490  01435C  0060  F64B  FFE6   	movff	_C+146,postinc1
 32491  014362  0060  F64F  FFE6   	movff	_C+147,postinc1
 32492  014368  EC24  F09D         	call	___fladd	;wreg free
 32493  01436C  0060  F0A0  F190   	movff	btemp,_C+144	;volatile
 32494  014372  0060  F0A4  F191   	movff	btemp+1,_C+145	;volatile
 32495  014378  0060  F0A8  F192   	movff	btemp+2,_C+146	;volatile
 32496  01437E  0060  F0AC  F193   	movff	btemp+3,_C+147	;volatile
 32497                           
 32498                           ;bsoc.c: 52:  C.pvkw += (C.p_pv / 3600.0);
 32499  014384  0E00               	movlw	0
 32500  014386  6EE6               	movwf	postinc1,c
 32501  014388  0E00               	movlw	0
 32502  01438A  6EE6               	movwf	postinc1,c
 32503  01438C  0E61               	movlw	97
 32504  01438E  6EE6               	movwf	postinc1,c
 32505  014390  0E45               	movlw	69
 32506  014392  6EE6               	movwf	postinc1,c
 32507  014394  0060  F5E3  FFE6   	movff	_C+120,postinc1
 32508  01439A  0060  F5E7  FFE6   	movff	_C+121,postinc1
 32509  0143A0  0060  F5EB  FFE6   	movff	_C+122,postinc1
 32510  0143A6  0060  F5EF  FFE6   	movff	_C+123,postinc1
 32511  0143AC  EC9B  F0A4         	call	___fldiv	;wreg free
 32512  0143B0  0060  F0A3  FFE6   	movff	btemp,postinc1
 32513  0143B6  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 32514  0143BC  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 32515  0143C2  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 32516  0143C8  0060  F683  FFE6   	movff	_C+160,postinc1
 32517  0143CE  0060  F687  FFE6   	movff	_C+161,postinc1
 32518  0143D4  0060  F68B  FFE6   	movff	_C+162,postinc1
 32519  0143DA  0060  F68F  FFE6   	movff	_C+163,postinc1
 32520  0143E0  EC24  F09D         	call	___fladd	;wreg free
 32521  0143E4  0060  F0A0  F1A0   	movff	btemp,_C+160	;volatile
 32522  0143EA  0060  F0A4  F1A1   	movff	btemp+1,_C+161	;volatile
 32523  0143F0  0060  F0A8  F1A2   	movff	btemp+2,_C+162	;volatile
 32524  0143F6  0060  F0AC  F1A3   	movff	btemp+3,_C+163	;volatile
 32525                           
 32526                           ;bsoc.c: 53:  C.invkw += (C.p_inverter / 3600.0);
 32527  0143FC  0E00               	movlw	0
 32528  0143FE  6EE6               	movwf	postinc1,c
 32529  014400  0E00               	movlw	0
 32530  014402  6EE6               	movwf	postinc1,c
 32531  014404  0E61               	movlw	97
 32532  014406  6EE6               	movwf	postinc1,c
 32533  014408  0E45               	movlw	69
 32534  01440A  6EE6               	movwf	postinc1,c
 32535  01440C  0060  F5D3  FFE6   	movff	_C+116,postinc1
 32536  014412  0060  F5D7  FFE6   	movff	_C+117,postinc1
 32537  014418  0060  F5DB  FFE6   	movff	_C+118,postinc1
 32538  01441E  0060  F5DF  FFE6   	movff	_C+119,postinc1
 32539  014424  EC9B  F0A4         	call	___fldiv	;wreg free
 32540  014428  0060  F0A3  FFE6   	movff	btemp,postinc1
 32541  01442E  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 32542  014434  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 32543  01443A  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 32544  014440  0060  F693  FFE6   	movff	_C+164,postinc1
 32545  014446  0060  F697  FFE6   	movff	_C+165,postinc1
 32546  01444C  0060  F69B  FFE6   	movff	_C+166,postinc1
 32547  014452  0060  F69F  FFE6   	movff	_C+167,postinc1
 32548  014458  EC24  F09D         	call	___fladd	;wreg free
 32549  01445C  0060  F0A0  F1A4   	movff	btemp,_C+164	;volatile
 32550  014462  0060  F0A4  F1A5   	movff	btemp+1,_C+165	;volatile
 32551  014468  0060  F0A8  F1A6   	movff	btemp+2,_C+166	;volatile
 32552  01446E  0060  F0AC  F1A7   	movff	btemp+3,_C+167	;volatile
 32553                           
 32554                           ;bsoc.c: 54:  C.loadkw += (C.p_load / 3600.0);
 32555  014474  0E00               	movlw	0
 32556  014476  6EE6               	movwf	postinc1,c
 32557  014478  0E00               	movlw	0
 32558  01447A  6EE6               	movwf	postinc1,c
 32559  01447C  0E61               	movlw	97
 32560  01447E  6EE6               	movwf	postinc1,c
 32561  014480  0E45               	movlw	69
 32562  014482  6EE6               	movwf	postinc1,c
 32563  014484  0060  F5C3  FFE6   	movff	_C+112,postinc1
 32564  01448A  0060  F5C7  FFE6   	movff	_C+113,postinc1
 32565  014490  0060  F5CB  FFE6   	movff	_C+114,postinc1
 32566  014496  0060  F5CF  FFE6   	movff	_C+115,postinc1
 32567  01449C  EC9B  F0A4         	call	___fldiv	;wreg free
 32568  0144A0  0060  F0A3  FFE6   	movff	btemp,postinc1
 32569  0144A6  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 32570  0144AC  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 32571  0144B2  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 32572  0144B8  0060  F6A3  FFE6   	movff	_C+168,postinc1
 32573  0144BE  0060  F6A7  FFE6   	movff	_C+169,postinc1
 32574  0144C4  0060  F6AB  FFE6   	movff	_C+170,postinc1
 32575  0144CA  0060  F6AF  FFE6   	movff	_C+171,postinc1
 32576  0144D0  EC24  F09D         	call	___fladd	;wreg free
 32577  0144D4  0060  F0A0  F1A8   	movff	btemp,_C+168	;volatile
 32578  0144DA  0060  F0A4  F1A9   	movff	btemp+1,_C+169	;volatile
 32579  0144E0  0060  F0A8  F1AA   	movff	btemp+2,_C+170	;volatile
 32580  0144E6  0060  F0AC  F1AB   	movff	btemp+3,_C+171	;volatile
 32581                           
 32582                           ;bsoc.c: 55:  if (C.p_bat > 0.0)
 32583  0144EC  0060  F5F3  FFE6   	movff	_C+124,postinc1
 32584  0144F2  0060  F5F7  FFE6   	movff	_C+125,postinc1
 32585  0144F8  0060  F5FB  FFE6   	movff	_C+126,postinc1
 32586  0144FE  0060  F5FF  FFE6   	movff	_C+127,postinc1
 32587  014504  0E00               	movlw	0
 32588  014506  6EE6               	movwf	postinc1,c
 32589  014508  0E00               	movlw	0
 32590  01450A  6EE6               	movwf	postinc1,c
 32591  01450C  0E00               	movlw	0
 32592  01450E  6EE6               	movwf	postinc1,c
 32593  014510  0E00               	movlw	0
 32594  014512  6EE6               	movwf	postinc1,c
 32595  014514  EC70  F0C3         	call	___flge	;wreg free
 32596  014518  B028               	btfsc	btemp& (0+255),0,c
 32597  01451A  D03C               	goto	l12378
 32598                           
 32599                           ;bsoc.c: 56:   C.bkwi += (C.p_bat / 3600.0);
 32600  01451C  0E00               	movlw	0
 32601  01451E  6EE6               	movwf	postinc1,c
 32602  014520  0E00               	movlw	0
 32603  014522  6EE6               	movwf	postinc1,c
 32604  014524  0E61               	movlw	97
 32605  014526  6EE6               	movwf	postinc1,c
 32606  014528  0E45               	movlw	69
 32607  01452A  6EE6               	movwf	postinc1,c
 32608  01452C  0060  F5F3  FFE6   	movff	_C+124,postinc1
 32609  014532  0060  F5F7  FFE6   	movff	_C+125,postinc1
 32610  014538  0060  F5FB  FFE6   	movff	_C+126,postinc1
 32611  01453E  0060  F5FF  FFE6   	movff	_C+127,postinc1
 32612  014544  EC9B  F0A4         	call	___fldiv	;wreg free
 32613  014548  0060  F0A3  FFE6   	movff	btemp,postinc1
 32614  01454E  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 32615  014554  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 32616  01455A  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 32617  014560  0060  F663  FFE6   	movff	_C+152,postinc1
 32618  014566  0060  F667  FFE6   	movff	_C+153,postinc1
 32619  01456C  0060  F66B  FFE6   	movff	_C+154,postinc1
 32620  014572  0060  F66F  FFE6   	movff	_C+155,postinc1
 32621  014578  EC24  F09D         	call	___fladd	;wreg free
 32622  01457C  0060  F0A0  F198   	movff	btemp,_C+152	;volatile
 32623  014582  0060  F0A4  F199   	movff	btemp+1,_C+153	;volatile
 32624  014588  0060  F0A8  F19A   	movff	btemp+2,_C+154	;volatile
 32625  01458E  0060  F0AC  F19B   	movff	btemp+3,_C+155	;volatile
 32626  014594                     l12378:
 32627                           
 32628                           ;bsoc.c: 57:  if (C.p_bat < 0.0)
 32629  014594  0101               	movlb	1	; () banked
 32630  014596  AF7F               	btfss	(_C+127)& (0+255),7,b	;volatile
 32631  014598  D04A               	goto	l12382
 32632                           
 32633                           ; BSR set to: 1
 32634                           ;bsoc.c: 58:   C.bkwo += fabsf(C.p_bat / 3600.0);
 32635  01459A  0E00               	movlw	0
 32636  01459C  6EE6               	movwf	postinc1,c
 32637  01459E  0E00               	movlw	0
 32638  0145A0  6EE6               	movwf	postinc1,c
 32639  0145A2  0E61               	movlw	97
 32640  0145A4  6EE6               	movwf	postinc1,c
 32641  0145A6  0E45               	movlw	69
 32642  0145A8  6EE6               	movwf	postinc1,c
 32643  0145AA  0060  F5F3  FFE6   	movff	_C+124,postinc1
 32644  0145B0  0060  F5F7  FFE6   	movff	_C+125,postinc1
 32645  0145B6  0060  F5FB  FFE6   	movff	_C+126,postinc1
 32646  0145BC  0060  F5FF  FFE6   	movff	_C+127,postinc1
 32647  0145C2  EC9B  F0A4         	call	___fldiv	;wreg free
 32648  0145C6  0060  F0A3  FFE6   	movff	btemp,postinc1
 32649  0145CC  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 32650  0145D2  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 32651  0145D8  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 32652  0145DE  ECF9  F0CD         	call	_fabsf	;wreg free
 32653  0145E2  0060  F0A3  FFE6   	movff	btemp,postinc1
 32654  0145E8  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 32655  0145EE  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 32656  0145F4  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 32657  0145FA  0060  F673  FFE6   	movff	_C+156,postinc1
 32658  014600  0060  F677  FFE6   	movff	_C+157,postinc1
 32659  014606  0060  F67B  FFE6   	movff	_C+158,postinc1
 32660  01460C  0060  F67F  FFE6   	movff	_C+159,postinc1
 32661  014612  EC24  F09D         	call	___fladd	;wreg free
 32662  014616  0060  F0A0  F19C   	movff	btemp,_C+156	;volatile
 32663  01461C  0060  F0A4  F19D   	movff	btemp+1,_C+157	;volatile
 32664  014622  0060  F0A8  F19E   	movff	btemp+2,_C+158	;volatile
 32665  014628  0060  F0AC  F19F   	movff	btemp+3,_C+159	;volatile
 32666  01462E                     l12382:
 32667                           
 32668                           ;bsoc.c: 60:  C.soc = ((uint16_t) ((C.dynamic_ah / C.bank_ah)*100.0) + 1);
 32669  01462E  0E00               	movlw	0
 32670  014630  6EE6               	movwf	postinc1,c
 32671  014632  0E00               	movlw	0
 32672  014634  6EE6               	movwf	postinc1,c
 32673  014636  0EC8               	movlw	200
 32674  014638  6EE6               	movwf	postinc1,c
 32675  01463A  0E42               	movlw	66
 32676  01463C  6EE6               	movwf	postinc1,c
 32677  01463E  0060  F623  FFE6   	movff	_C+136,postinc1
 32678  014644  0060  F627  FFE6   	movff	_C+137,postinc1
 32679  01464A  0060  F62B  FFE6   	movff	_C+138,postinc1
 32680  014650  0060  F62F  FFE6   	movff	_C+139,postinc1
 32681  014656  0060  F633  FFE6   	movff	_C+140,postinc1
 32682  01465C  0060  F637  FFE6   	movff	_C+141,postinc1
 32683  014662  0060  F63B  FFE6   	movff	_C+142,postinc1
 32684  014668  0060  F63F  FFE6   	movff	_C+143,postinc1
 32685  01466E  EC9B  F0A4         	call	___fldiv	;wreg free
 32686  014672  0060  F0A3  FFE6   	movff	btemp,postinc1
 32687  014678  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 32688  01467E  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 32689  014684  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 32690  01468A  EC0F  F099         	call	___flmul	;wreg free
 32691  01468E  0060  F0A3  FFE6   	movff	btemp,postinc1
 32692  014694  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 32693  01469A  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 32694  0146A0  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 32695  0146A6  ECFF  F0C1         	call	___fltol	;wreg free
 32696  0146AA  0060  F0A0  F032   	movff	btemp,btemp+10
 32697  0146B0  0060  F0A4  F033   	movff	btemp+1,btemp+11
 32698  0146B6  0E01               	movlw	1
 32699  0146B8  2432               	addwf	(btemp+10)^0,w,c
 32700  0146BA  0101               	movlb	1	; () banked
 32701  0146BC  6FAE               	movwf	(_C+174)& (0+255),b	;volatile
 32702  0146BE  0E00               	movlw	0
 32703  0146C0  2033               	addwfc	(btemp+11)^0,w,c
 32704  0146C2  6FAF               	movwf	(_C+175)& (0+255),b	;volatile
 32705                           
 32706                           ; BSR set to: 1
 32707                           ;bsoc.c: 61:  if (C.soc > 100)
 32708  0146C4  51AF               	movf	(_C+175)& (0+255),w,b	;volatile
 32709  0146C6  E104               	bnz	u1192_20
 32710  0146C8  0E65               	movlw	101
 32711  0146CA  5DAE               	subwf	(_C+174)& (0+255),w,b	;volatile
 32712  0146CC  A0D8               	btfss	status,0,c
 32713  0146CE  D004               	goto	l12388
 32714  0146D0                     u1192_20:
 32715                           
 32716                           ; BSR set to: 1
 32717                           ;bsoc.c: 62:   C.soc = 100;
 32718  0146D0  0E00               	movlw	0
 32719  0146D2  6FAF               	movwf	(_C+175)& (0+255),b	;volatile
 32720  0146D4  0E64               	movlw	100
 32721  0146D6  6FAE               	movwf	(_C+174)& (0+255),b	;volatile
 32722  0146D8                     l12388:
 32723                           
 32724                           ; BSR set to: 1
 32725                           ;bsoc.c: 64:  if (C.c_bat < 0.0) {
 32726  0146D8  AF47               	btfss	(_C+71)& (0+255),7,b	;volatile
 32727  0146DA  D043               	goto	l12392
 32728                           
 32729                           ; BSR set to: 1
 32730                           ;bsoc.c: 65:   C.runtime = (uint16_t) (-(C.dynamic_ah / C.c_bat));
 32731  0146DC  0060  F513  FFE6   	movff	_C+68,postinc1
 32732  0146E2  0060  F517  FFE6   	movff	_C+69,postinc1
 32733  0146E8  0060  F51B  FFE6   	movff	_C+70,postinc1
 32734  0146EE  0060  F51F  FFE6   	movff	_C+71,postinc1
 32735  0146F4  0060  F633  FFE6   	movff	_C+140,postinc1
 32736  0146FA  0060  F637  FFE6   	movff	_C+141,postinc1
 32737  014700  0060  F63B  FFE6   	movff	_C+142,postinc1
 32738  014706  0060  F63F  FFE6   	movff	_C+143,postinc1
 32739  01470C  EC9B  F0A4         	call	___fldiv	;wreg free
 32740  014710  0060  F0A3  FFE6   	movff	btemp,postinc1
 32741  014716  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 32742  01471C  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 32743  014722  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 32744  014728  ECFA  F0D4         	call	___flneg	;wreg free
 32745  01472C  0060  F0A3  FFE6   	movff	btemp,postinc1
 32746  014732  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 32747  014738  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 32748  01473E  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 32749  014744  ECFF  F0C1         	call	___fltol	;wreg free
 32750  014748  0060  F0A0  F032   	movff	btemp,btemp+10
 32751  01474E  0060  F0A4  F033   	movff	btemp+1,btemp+11
 32752  014754  0060  F0C8  F1AC   	movff	btemp+10,_C+172	;volatile
 32753  01475A  0060  F0CC  F1AD   	movff	btemp+11,_C+173	;volatile
 32754                           
 32755                           ;bsoc.c: 66:  } else {
 32756  014760  D004               	goto	l12394
 32757  014762                     l12392:
 32758                           
 32759                           ; BSR set to: 1
 32760                           ;bsoc.c: 67:   C.runtime = 120;
 32761  014762  0E00               	movlw	0
 32762  014764  6FAD               	movwf	(_C+173)& (0+255),b	;volatile
 32763  014766  0E78               	movlw	120
 32764  014768  6FAC               	movwf	(_C+172)& (0+255),b	;volatile
 32765  01476A                     l12394:
 32766                           
 32767                           ;bsoc.c: 69:  if (C.runtime > 120)
 32768  01476A  0101               	movlb	1	; () banked
 32769  01476C  51AD               	movf	(_C+173)& (0+255),w,b	;volatile
 32770  01476E  E104               	bnz	u1194_20
 32771  014770  0E79               	movlw	121
 32772  014772  5DAC               	subwf	(_C+172)& (0+255),w,b	;volatile
 32773  014774  A0D8               	btfss	status,0,c
 32774  014776  D004               	goto	l12398
 32775  014778                     u1194_20:
 32776                           
 32777                           ; BSR set to: 1
 32778                           ;bsoc.c: 70:   C.runtime = 120;
 32779  014778  0E00               	movlw	0
 32780  01477A  6FAD               	movwf	(_C+173)& (0+255),b	;volatile
 32781  01477C  0E78               	movlw	120
 32782  01477E  6FAC               	movwf	(_C+172)& (0+255),b	;volatile
 32783  014780                     l12398:
 32784                           
 32785                           ; BSR set to: 1
 32786                           ;bsoc.c: 72:  V.lowint_count++;
 32787  014780  0E01               	movlw	1
 32788  014782  0102               	movlb	2	; () banked
 32789  014784  27B1               	addwf	(_V+177)& (0+255),f,b	;volatile
 32790  014786  0E00               	movlw	0
 32791  014788  23B2               	addwfc	(_V+178)& (0+255),f,b	;volatile
 32792  01478A  23B3               	addwfc	(_V+179)& (0+255),f,b	;volatile
 32793  01478C  23B4               	addwfc	(_V+180)& (0+255),f,b	;volatile
 32794                           
 32795                           ; BSR set to: 2
 32796                           ;bsoc.c: 74:  log_ptr = port_data_dma_ptr();
 32797  01478E  EC52  F0DB         	call	_port_data_dma_ptr	;wreg free
 32798                           
 32799                           ;stkvar	_log_ptr @ sp[(-2)+0]
 32800  014792  0EFF               	movlw	-1
 32801  014794  0060  F0A7  FFE3   	movff	btemp+1,plusw1
 32802  01479A  0EFE               	movlw	-2
 32803  01479C  0060  F0A3  FFE3   	movff	btemp,plusw1
 32804                           
 32805                           ;bsoc.c: 75:  sprintf((char*) log_ptr, " %lu,%4.4f,%4.4f,%4.4f,%4.4f,%4.3f,%4.3f,%4.3f,%
      +                          4.3f,%4.3f,%4.3f,%4.3d,%4.3d,%2.6f\r\n",
 32806  0147A2  0060  F613  FFE6   	movff	_C+132,postinc1
 32807  0147A8  0060  F617  FFE6   	movff	_C+133,postinc1
 32808  0147AE  0060  F61B  FFE6   	movff	_C+134,postinc1
 32809  0147B4  0060  F61F  FFE6   	movff	_C+135,postinc1
 32810  0147BA  0060  F6B3  FFE6   	movff	_C+172,postinc1
 32811  0147C0  0060  F6B7  FFE6   	movff	_C+173,postinc1
 32812  0147C6  0060  F6BB  FFE6   	movff	_C+174,postinc1
 32813  0147CC  0060  F6BF  FFE6   	movff	_C+175,postinc1
 32814  0147D2  0060  F643  FFE6   	movff	_C+144,postinc1
 32815  0147D8  0060  F647  FFE6   	movff	_C+145,postinc1
 32816  0147DE  0060  F64B  FFE6   	movff	_C+146,postinc1
 32817  0147E4  0060  F64F  FFE6   	movff	_C+147,postinc1
 32818  0147EA  0060  F633  FFE6   	movff	_C+140,postinc1
 32819  0147F0  0060  F637  FFE6   	movff	_C+141,postinc1
 32820  0147F6  0060  F63B  FFE6   	movff	_C+142,postinc1
 32821  0147FC  0060  F63F  FFE6   	movff	_C+143,postinc1
 32822  014802  0060  F5D3  FFE6   	movff	_C+116,postinc1
 32823  014808  0060  F5D7  FFE6   	movff	_C+117,postinc1
 32824  01480E  0060  F5DB  FFE6   	movff	_C+118,postinc1
 32825  014814  0060  F5DF  FFE6   	movff	_C+119,postinc1
 32826  01481A  0060  F5C3  FFE6   	movff	_C+112,postinc1
 32827  014820  0060  F5C7  FFE6   	movff	_C+113,postinc1
 32828  014826  0060  F5CB  FFE6   	movff	_C+114,postinc1
 32829  01482C  0060  F5CF  FFE6   	movff	_C+115,postinc1
 32830  014832  0060  F5E3  FFE6   	movff	_C+120,postinc1
 32831  014838  0060  F5E7  FFE6   	movff	_C+121,postinc1
 32832  01483E  0060  F5EB  FFE6   	movff	_C+122,postinc1
 32833  014844  0060  F5EF  FFE6   	movff	_C+123,postinc1
 32834  01484A  0060  F5F3  FFE6   	movff	_C+124,postinc1
 32835  014850  0060  F5F7  FFE6   	movff	_C+125,postinc1
 32836  014856  0060  F5FB  FFE6   	movff	_C+126,postinc1
 32837  01485C  0060  F5FF  FFE6   	movff	_C+127,postinc1
 32838  014862  0060  F593  FFE6   	movff	_C+100,postinc1
 32839  014868  0060  F597  FFE6   	movff	_C+101,postinc1
 32840  01486E  0060  F59B  FFE6   	movff	_C+102,postinc1
 32841  014874  0060  F59F  FFE6   	movff	_C+103,postinc1
 32842  01487A  0060  F533  FFE6   	movff	_C+76,postinc1
 32843  014880  0060  F537  FFE6   	movff	_C+77,postinc1
 32844  014886  0060  F53B  FFE6   	movff	_C+78,postinc1
 32845  01488C  0060  F53F  FFE6   	movff	_C+79,postinc1
 32846  014892  0060  F543  FFE6   	movff	_C+80,postinc1
 32847  014898  0060  F547  FFE6   	movff	_C+81,postinc1
 32848  01489E  0060  F54B  FFE6   	movff	_C+82,postinc1
 32849  0148A4  0060  F54F  FFE6   	movff	_C+83,postinc1
 32850  0148AA  0060  F553  FFE6   	movff	_C+84,postinc1
 32851  0148B0  0060  F557  FFE6   	movff	_C+85,postinc1
 32852  0148B6  0060  F55B  FFE6   	movff	_C+86,postinc1
 32853  0148BC  0060  F55F  FFE6   	movff	_C+87,postinc1
 32854  0148C2  0060  FA07  FFE6   	movff	_V+129,postinc1
 32855  0148C8  0060  FA0B  FFE6   	movff	_V+130,postinc1
 32856  0148CE  0060  FA0F  FFE6   	movff	_V+131,postinc1
 32857  0148D4  0060  FA13  FFE6   	movff	_V+132,postinc1
 32858  0148DA  0E67               	movlw	low STR_65
 32859  0148DC  6EE6               	movwf	postinc1,c
 32860  0148DE  0EFC               	movlw	high STR_65
 32861  0148E0  6EE6               	movwf	postinc1,c
 32862                           
 32863                           ;stkvar	_log_ptr @ sp[(-56)+0]
 32864  0148E2  0EC8               	movlw	-56
 32865  0148E4  006F FF8F FFE6     	movff	plusw1,postinc1
 32866  0148EA  006F FF8F FFE6     	movff	plusw1,postinc1
 32867  0148F0  0E38               	movlw	56
 32868  0148F2  6EE6               	movwf	postinc1,c
 32869  0148F4  EC08  F0CA         	call	_sprintf	;wreg free
 32870                           
 32871                           ; BSR set to: 0
 32872                           ;bsoc.c: 81:  StartTimer(TMR_DISPLAY, 125);
 32873  0148F8  0E7D               	movlw	125
 32874  0148FA  6EE6               	movwf	postinc1,c
 32875  0148FC  0E00               	movlw	0
 32876  0148FE  6EE6               	movwf	postinc1,c
 32877  014900  0E0A               	movlw	10
 32878  014902  6EE6               	movwf	postinc1,c
 32879  014904  EC10  F0D6         	call	_StartTimer	;wreg free
 32880                           
 32881                           ;bsoc.c: 82:  send_port_data_dma(strlen((char*) log_ptr));
 32882                           ;stkvar	_log_ptr @ sp[(-2)+0]
 32883  014908  0EFE               	movlw	-2
 32884  01490A  006F FF8F FFE6     	movff	plusw1,postinc1
 32885  014910  006F FF8F FFE6     	movff	plusw1,postinc1
 32886  014916  EC4E  F0CF         	call	_strlen	;wreg free
 32887  01491A  0060  F0A3  FFE6   	movff	btemp,postinc1
 32888  014920  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 32889  014926  EC85  F0D4         	call	_send_port_data_dma	;wreg free
 32890                           
 32891                           ; BSR set to: 59
 32892                           ;bsoc.c: 83:  C.update = 0;
 32893  01492A  0101               	movlb	1	; () banked
 32894  01492C  6BB0               	clrf	(_C+176)& (0+255),b	;volatile
 32895                           
 32896                           ; BSR set to: 1
 32897  01492E  92BE               	bcf	190,1,c	;volatile
 32898                           
 32899                           ; BSR set to: 1
 32900                           ; _calc_bsoc: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 32901  014930  52E5               	movf	postdec1,f,c
 32902  014932  52E5               	movf	postdec1,f,c
 32903  014934  0012               	return		;funcret
 32904  014936                     __end_of_calc_bsoc:
 32905                           	opt callstack 0
 32906                           
 32907 ;; *************** function _send_port_data_dma *****************
 32908 ;; Defined at:
 32909 ;;		line 258 in file "eadog.c"
 32910 ;; Parameters:    Size  Location     Type
 32911 ;;  dsize           2  [STACK] unsigned short 
 32912 ;; Auto vars:     Size  Location     Type
 32913 ;;		None
 32914 ;; Return value:  Size  Location     Type
 32915 ;;                  1  [STACK] void 
 32916 ;; Registers used:
 32917 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 32918 ;; Tracked objects:
 32919 ;;		On entry : 0/0
 32920 ;;		On exit  : 3F/3B
 32921 ;;		Unchanged: 0/0
 32922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32927 ;;Total ram usage:        0 bytes
 32928 ;; Hardware stack levels used:    1
 32929 ;; Hardware stack levels required when called:    3
 32930 ;; This function calls:
 32931 ;;		Nothing
 32932 ;; This function is called by:
 32933 ;;		_calc_bsoc
 32934 ;; This function uses a reentrant model
 32935 ;;
 32936                           
 32937                           	psect	text149
 32938  01A90A                     __ptext149:
 32939                           	opt callstack 0
 32940  01A90A                     _send_port_data_dma:
 32941                           	opt callstack 11
 32942                           
 32943                           ;eadog.c: 258: void send_port_data_dma(uint16_t dsize);eadog.c: 259: {;eadog.c: 260:  if
      +                           (dsize > 512)
 32944                           ;stkvar	_dsize @ sp[(0)+-2]
 32945                           
 32946                           ; BSR set to: 1
 32947                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32948                           ;incstack = 0
 32949  01A90A  0EFE               	movlw	-2
 32950  01A90C  04E3               	decf	plusw1,w,c
 32951  01A90E  0EFF               	movlw	-1
 32952  01A910  006F FF8C  F028    	movff	plusw1,btemp
 32953  01A916  0E02               	movlw	2
 32954  01A918  5A28               	subwfb	btemp^0,f,c
 32955  01A91A  A0D8               	btfss	status,0,c
 32956  01A91C  D00C               	goto	l9542
 32957                           
 32958                           ;eadog.c: 261:   dsize = 512;
 32959  01A91E  0E00               	movlw	0
 32960  01A920  6E32               	movwf	(btemp+10)^0,c
 32961  01A922  0E02               	movlw	2
 32962  01A924  6E33               	movwf	(btemp+11)^0,c
 32963                           
 32964                           ;stkvar	_dsize @ sp[(0)+-2]
 32965  01A926  0EFE               	movlw	-2
 32966  01A928  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 32967  01A92E  0EFF               	movlw	-1
 32968  01A930  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 32969  01A936                     l9542:
 32970                           
 32971                           ;eadog.c: 263:  DMA2CON0bits.EN = 0;
 32972  01A936  013B               	movlb	59	; () banked
 32973  01A938  9FDC               	bcf	220,7,b	;volatile
 32974                           
 32975                           ; BSR set to: 59
 32976                           ;eadog.c: 264:  DMA2SSZ = dsize;
 32977                           ;stkvar	_dsize @ sp[(0)+-2]
 32978  01A93A  0EFE               	movlw	-2
 32979  01A93C  006F FF8F FBD7     	movff	plusw1,15319	;volatile
 32980  01A942  0EFF               	movlw	-1
 32981  01A944  006F FF8F FBD8     	movff	plusw1,15320	;volatile
 32982                           
 32983                           ; BSR set to: 59
 32984                           ;eadog.c: 265:  DMA2DSZ = 1;
 32985  01A94A  0E00               	movlw	0
 32986  01A94C  6FCF               	movwf	207,b	;volatile
 32987  01A94E  0E01               	movlw	1
 32988  01A950  6FCE               	movwf	206,b	;volatile
 32989                           
 32990                           ; BSR set to: 59
 32991                           ;eadog.c: 266:  DMA2CON0bits.EN = 1;
 32992  01A952  8FDC               	bsf	220,7,b	;volatile
 32993                           
 32994                           ; BSR set to: 59
 32995                           ;eadog.c: 267:  DMA2CON0bits.DMA2SIRQEN = 1;
 32996  01A954  8DDC               	bsf	220,6,b	;volatile
 32997                           
 32998                           ; BSR set to: 59
 32999                           ; _send_port_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 33000  01A956  52E5               	movf	postdec1,f,c
 33001  01A958  52E5               	movf	postdec1,f,c
 33002  01A95A  0012               	return		;funcret
 33003  01A95C                     __end_of_send_port_data_dma:
 33004                           	opt callstack 0
 33005                           
 33006 ;; *************** function _port_data_dma_ptr *****************
 33007 ;; Defined at:
 33008 ;;		line 273 in file "eadog.c"
 33009 ;; Parameters:    Size  Location     Type
 33010 ;;		None
 33011 ;; Auto vars:     Size  Location     Type
 33012 ;;		None
 33013 ;; Return value:  Size  Location     Type
 33014 ;;                  2  [STACK] PTR unsigned char 
 33015 ;; Registers used:
 33016 ;;		wreg, status,2, status,0, btemp, btemp+1
 33017 ;; Tracked objects:
 33018 ;;		On entry : 3F/2
 33019 ;;		On exit  : 0/0
 33020 ;;		Unchanged: 0/0
 33021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33025 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33026 ;;Total ram usage:        0 bytes
 33027 ;; Hardware stack levels used:    1
 33028 ;; Hardware stack levels required when called:    3
 33029 ;; This function calls:
 33030 ;;		Nothing
 33031 ;; This function is called by:
 33032 ;;		_calc_bsoc
 33033 ;; This function uses a reentrant model
 33034 ;;
 33035                           
 33036                           	psect	text150
 33037  01B6A4                     __ptext150:
 33038                           	opt callstack 0
 33039  01B6A4                     _port_data_dma_ptr:
 33040                           	opt callstack 11
 33041                           
 33042                           ;eadog.c: 275:  return port_data;
 33043                           
 33044                           ; BSR set to: 59
 33045                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33046                           ;incstack = 0
 33047  01B6A4  0EFF               	movlw	low _port_data
 33048  01B6A6  6E28               	movwf	btemp^0,c
 33049  01B6A8  0E05               	movlw	high _port_data
 33050  01B6AA  6E29               	movwf	(btemp+1)^0,c
 33051                           
 33052                           ; _port_data_dma_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 33053  01B6AC  0012               	return		;funcret
 33054  01B6AE                     __end_of_port_data_dma_ptr:
 33055                           	opt callstack 0
 33056                           
 33057 ;; *************** function _INT0_ISR *****************
 33058 ;; Defined at:
 33059 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 33060 ;; Parameters:    Size  Location     Type
 33061 ;;		None
 33062 ;; Auto vars:     Size  Location     Type
 33063 ;;		None
 33064 ;; Return value:  Size  Location     Type
 33065 ;;                  1    wreg      void 
 33066 ;; Registers used:
 33067 ;;		wreg, status,2, status,0, pclath, tosl
 33068 ;; Tracked objects:
 33069 ;;		On entry : 0/0
 33070 ;;		On exit  : 0/0
 33071 ;;		Unchanged: 0/0
 33072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33076 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33077 ;;Total ram usage:        0 bytes
 33078 ;; Hardware stack levels used:    1
 33079 ;; Hardware stack levels required when called:    2
 33080 ;; This function calls:
 33081 ;;		_INT0_CallBack
 33082 ;; This function is called by:
 33083 ;;		Interrupt level 2
 33084 ;; This function uses a non-reentrant model
 33085 ;;
 33086                           
 33087                           	psect	text151
 33088  01B67C                     __ptext151:
 33089                           	opt callstack 0
 33090  01B67C                     _INT0_ISR:
 33091                           	opt callstack 3
 33092                           
 33093                           ;incstack = 0
 33094  01B67C  EE14  F142         	lfsr	1,___inthi_sp
 33095                           
 33096                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 33097  01B680  0139               	movlb	57	; () banked
 33098  01B682  91A1               	bcf	161,0,b	;volatile
 33099                           
 33100                           ; BSR set to: 57
 33101                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 33102  01B684  EC04  F0DA         	call	_INT0_CallBack	;wreg free
 33103  01B688  0011               	retfie		f
 33104  01B68A                     __end_of_INT0_ISR:
 33105                           	opt callstack 0
 33106                           
 33107 ;; *************** function _INT0_CallBack *****************
 33108 ;; Defined at:
 33109 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 33110 ;; Parameters:    Size  Location     Type
 33111 ;;		None
 33112 ;; Auto vars:     Size  Location     Type
 33113 ;;		None
 33114 ;; Return value:  Size  Location     Type
 33115 ;;                  1  [STACK] void 
 33116 ;; Registers used:
 33117 ;;		wreg, status,2, status,0, pclath, tosl
 33118 ;; Tracked objects:
 33119 ;;		On entry : 3F/39
 33120 ;;		On exit  : 0/0
 33121 ;;		Unchanged: 0/0
 33122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33127 ;;Total ram usage:        0 bytes
 33128 ;; Hardware stack levels used:    1
 33129 ;; Hardware stack levels required when called:    1
 33130 ;; This function calls:
 33131 ;;		Absolute function
 33132 ;;		_INT0_DefaultInterruptHandler
 33133 ;; This function is called by:
 33134 ;;		_INT0_ISR
 33135 ;; This function uses a reentrant model
 33136 ;;
 33137                           
 33138                           	psect	text152
 33139  01B408                     __ptext152:
 33140                           	opt callstack 0
 33141  01B408                     _INT0_CallBack:
 33142                           	opt callstack 3
 33143                           
 33144                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 33145                           
 33146                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33147                           ;incstack = 0
 33148  01B408  0100               	movlb	0	; () banked
 33149  01B40A  51BD               	movf	_INT0_InterruptHandler& (0+255),w,b
 33150  01B40C  11BE               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 33151  01B40E  11BF               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 33152  01B410  B4D8               	btfsc	status,2,c
 33153  01B412  0012               	return	
 33154                           
 33155                           ; BSR set to: 0
 33156                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 33157  01B414  D801               	call	u955_48
 33158  01B416  0012               	return	
 33159  01B418                     u955_48:
 33160  01B418  0005               	push	
 33161  01B41A  6EFA               	movwf	pclath,c
 33162  01B41C  51BD               	movf	_INT0_InterruptHandler& (0+255),w,b
 33163  01B41E  6EFD               	movwf	tosl,c
 33164  01B420  51BE               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 33165  01B422  6EFE               	movwf	tosh,c
 33166  01B424  51BF               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 33167  01B426  6EFF               	movwf	tosu,c
 33168  01B428  50FA               	movf	pclath,w,c
 33169  01B42A  0012               	return		;indir
 33170  01B42C                     __end_of_INT0_CallBack:
 33171                           	opt callstack 0
 33172                           
 33173 ;; *************** function _INT0_DefaultInterruptHandler *****************
 33174 ;; Defined at:
 33175 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 33176 ;; Parameters:    Size  Location     Type
 33177 ;;		None
 33178 ;; Auto vars:     Size  Location     Type
 33179 ;;		None
 33180 ;; Return value:  Size  Location     Type
 33181 ;;                  1  [STACK] void 
 33182 ;; Registers used:
 33183 ;;		None
 33184 ;; Tracked objects:
 33185 ;;		On entry : 3F/0
 33186 ;;		On exit  : 0/0
 33187 ;;		Unchanged: 0/0
 33188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33192 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33193 ;;Total ram usage:        0 bytes
 33194 ;; Hardware stack levels used:    1
 33195 ;; This function calls:
 33196 ;;		Nothing
 33197 ;; This function is called by:
 33198 ;;		_EXT_INT_Initialize
 33199 ;;		_INT0_CallBack
 33200 ;; This function uses a reentrant model
 33201 ;;
 33202                           
 33203                           	psect	text153
 33204  01B71E                     __ptext153:
 33205                           	opt callstack 0
 33206  01B71E                     _INT0_DefaultInterruptHandler:
 33207                           	opt callstack 3
 33208                           
 33209                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 33210                           
 33211                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33212                           ;incstack = 0
 33213  01B71E  0012               	return		;funcret
 33214  01B720                     __end_of_INT0_DefaultInterruptHandler:
 33215                           	opt callstack 0
 33216                           
 33217 ;; *************** function _Default_ISR *****************
 33218 ;; Defined at:
 33219 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 33220 ;; Parameters:    Size  Location     Type
 33221 ;;		None
 33222 ;; Auto vars:     Size  Location     Type
 33223 ;;		None
 33224 ;; Return value:  Size  Location     Type
 33225 ;;                  1    wreg      void 
 33226 ;; Registers used:
 33227 ;;		None
 33228 ;; Tracked objects:
 33229 ;;		On entry : 0/0
 33230 ;;		On exit  : 0/0
 33231 ;;		Unchanged: 0/0
 33232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33237 ;;Total ram usage:        0 bytes
 33238 ;; Hardware stack levels used:    1
 33239 ;; This function calls:
 33240 ;;		Nothing
 33241 ;; This function is called by:
 33242 ;;		Interrupt level 2
 33243 ;; This function uses a non-reentrant model
 33244 ;;
 33245                           
 33246                           	psect	text154
 33247  01B714                     __ptext154:
 33248                           	opt callstack 0
 33249  01B714                     _Default_ISR:
 33250                           	opt callstack 5
 33251                           
 33252                           ;incstack = 0
 33253  01B714  EE14  F142         	lfsr	1,___inthi_sp
 33254  01B718  0011               	retfie		f
 33255  01B71A                     __end_of_Default_ISR:
 33256                           	opt callstack 0
 33257                           
 33258 ;; *************** function _ADCC_ISR *****************
 33259 ;; Defined at:
 33260 ;;		line 314 in file "mcc_generated_files/adcc.c"
 33261 ;; Parameters:    Size  Location     Type
 33262 ;;		None
 33263 ;; Auto vars:     Size  Location     Type
 33264 ;;		None
 33265 ;; Return value:  Size  Location     Type
 33266 ;;                  1    wreg      void 
 33267 ;; Registers used:
 33268 ;;		wreg, status,2, status,0, pclath, tosl
 33269 ;; Tracked objects:
 33270 ;;		On entry : 0/0
 33271 ;;		On exit  : 0/0
 33272 ;;		Unchanged: 0/0
 33273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33277 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33278 ;;Total ram usage:        0 bytes
 33279 ;; Hardware stack levels used:    1
 33280 ;; Hardware stack levels required when called:    1
 33281 ;; This function calls:
 33282 ;;		Absolute function
 33283 ;;		_ADCC_DefaultInterruptHandler
 33284 ;;		_adc_int_handler
 33285 ;; This function is called by:
 33286 ;;		Interrupt level 2
 33287 ;; This function uses a non-reentrant model
 33288 ;;
 33289                           
 33290                           	psect	text155
 33291  01B028                     __ptext155:
 33292                           	opt callstack 0
 33293  01B028                     _ADCC_ISR:
 33294                           	opt callstack 4
 33295                           
 33296                           ;incstack = 0
 33297  01B028  EE14  F142         	lfsr	1,___inthi_sp
 33298                           
 33299                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 33300  01B02C  0139               	movlb	57	; () banked
 33301  01B02E  95A1               	bcf	161,2,b	;volatile
 33302                           
 33303                           ; BSR set to: 57
 33304                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 33305  01B030  0100               	movlb	0	; () banked
 33306  01B032  51AE               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 33307  01B034  11AF               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 33308  01B036  11B0               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 33309  01B038  B4D8               	btfsc	status,2,c
 33310  01B03A  0011               	retfie		f
 33311                           
 33312                           ; BSR set to: 0
 33313                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 33314  01B03C  D801               	call	i2u998_48
 33315  01B03E  0011               	retfie		f
 33316  01B040                     i2u998_48:
 33317  01B040  0005               	push	
 33318  01B042  6EFA               	movwf	pclath,c
 33319  01B044  51AE               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 33320  01B046  6EFD               	movwf	tosl,c
 33321  01B048  51AF               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 33322  01B04A  6EFE               	movwf	tosh,c
 33323  01B04C  51B0               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 33324  01B04E  6EFF               	movwf	tosu,c
 33325  01B050  50FA               	movf	pclath,w,c
 33326  01B052  0012               	return		;indir
 33327  01B054                     __end_of_ADCC_ISR:
 33328                           	opt callstack 0
 33329                           
 33330 ;; *************** function _adc_int_t_handler *****************
 33331 ;; Defined at:
 33332 ;;		line 143 in file "daq.c"
 33333 ;; Parameters:    Size  Location     Type
 33334 ;;		None
 33335 ;; Auto vars:     Size  Location     Type
 33336 ;;		None
 33337 ;; Return value:  Size  Location     Type
 33338 ;;                  1  [STACK] void 
 33339 ;; Registers used:
 33340 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 33341 ;; Tracked objects:
 33342 ;;		On entry : 3F/0
 33343 ;;		On exit  : 1/0
 33344 ;;		Unchanged: 0/0
 33345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33349 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33350 ;;Total ram usage:        0 bytes
 33351 ;; Hardware stack levels used:    1
 33352 ;; Hardware stack levels required when called:    1
 33353 ;; This function calls:
 33354 ;;		_ADCC_DischargeSampleCapacitor
 33355 ;;		_ADCC_StartConversion
 33356 ;; This function is called by:
 33357 ;;		_start_adc_scan
 33358 ;;		_ADCC_ThresholdISR
 33359 ;; This function uses a reentrant model
 33360 ;;
 33361                           
 33362                           	psect	text156
 33363  01A3AE                     __ptext156:
 33364                           	opt callstack 0
 33365  01A3AE                     _adc_int_t_handler:
 33366                           	opt callstack 3
 33367                           
 33368                           ;daq.c: 148:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 33369                           
 33370                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33371                           ;incstack = 0
 33372  01A3AE  013E               	movlb	62	; () banked
 33373  01A3B0  51E6               	movf	230,w,b	;volatile
 33374  01A3B2  006F FB9C  F028    	movff	16103,btemp	;volatile
 33375  01A3B8  6A29               	clrf	(btemp+1)^0,c
 33376  01A3BA  0060  F0A0  F029   	movff	btemp,btemp+1
 33377  01A3C0  6A28               	clrf	btemp^0,c
 33378  01A3C2  2628               	addwf	btemp^0,f,c
 33379  01A3C4  0E00               	movlw	0
 33380  01A3C6  2229               	addwfc	(btemp+1)^0,f,c
 33381  01A3C8  0100               	movlb	0	; () banked
 33382  01A3CA  51E8               	movf	(_R+36)& (0+255),w,b	;volatile
 33383  01A3CC  0D02               	mullw	2
 33384  01A3CE  50F3               	movf	243,w,c
 33385  01A3D0  0FC4               	addlw	low _R
 33386  01A3D2  6ED9               	movwf	fsr2l,c
 33387  01A3D4  6ADA               	clrf	fsr2h,c
 33388  01A3D6  0060  F0A3  FFDE   	movff	btemp,postinc2
 33389  01A3DC  0060  F0A7  FFDD   	movff	btemp+1,postdec2
 33390  01A3E2                     l10814:
 33391                           
 33392                           ;daq.c: 150:   if (++R.scan_index > 0XD) {
 33393  01A3E2  0100               	movlb	0	; () banked
 33394  01A3E4  2BE8               	incf	(_R+36)& (0+255),f,b	;volatile
 33395  01A3E6  0E0D               	movlw	13
 33396  01A3E8  65E8               	cpfsgt	(_R+36)& (0+255),b	;volatile
 33397  01A3EA  D003               	goto	l10820
 33398                           
 33399                           ; BSR set to: 0
 33400                           ;daq.c: 151:    R.done = 1;
 33401  01A3EC  0E01               	movlw	1
 33402  01A3EE  6FEB               	movwf	(_R+39)& (0+255),b	;volatile
 33403  01A3F0  0012               	return	
 33404  01A3F2                     l10820:
 33405                           
 33406                           ; BSR set to: 0
 33407                           ;daq.c: 157:  } while (!((R.scan_select >> R.scan_index) &0x1));
 33408  01A3F2  0060  F3A0  F033   	movff	_R+36,btemp+11	;volatile
 33409  01A3F8  EE20  F0E9         	lfsr	2,_R+37	;volatile
 33410  01A3FC  006F FF78  F030    	movff	postinc2,btemp+8
 33411  01A402  006F FF74  F031    	movff	postdec2,btemp+9
 33412  01A408  2A33               	incf	(btemp+11)^0,f,c
 33413  01A40A  D003               	goto	u995_44
 33414  01A40C                     u995_45:
 33415  01A40C  90D8               	bcf	status,0,c
 33416  01A40E  3231               	rrcf	(btemp+9)^0,f,c
 33417  01A410  3230               	rrcf	(btemp+8)^0,f,c
 33418  01A412                     u995_44:
 33419  01A412  2E33               	decfsz	(btemp+11)^0,f,c
 33420  01A414  D7FB               	goto	u995_45
 33421  01A416  A030               	btfss	(btemp+8)^0,0,c
 33422  01A418  D7E4               	goto	l10814
 33423                           
 33424                           ;daq.c: 158:  ADCC_DischargeSampleCapacitor();
 33425  01A41A  EC69  F0DB         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 33426                           
 33427                           ; BSR set to: 62
 33428                           ;daq.c: 159:  ADCC_StartConversion(R.scan_index & 0xf);
 33429  01A41E  0100               	movlb	0	; () banked
 33430  01A420  51E8               	movf	(_R+36)& (0+255),w,b	;volatile
 33431  01A422  0B0F               	andlw	15
 33432  01A424  6EE6               	movwf	postinc1,c
 33433  01A426  EC0E  F0DB         	call	_ADCC_StartConversion	;wreg free
 33434                           
 33435                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 33436  01A42A  0012               	return		;funcret
 33437  01A42C                     __end_of_adc_int_t_handler:
 33438                           	opt callstack 0
 33439                           
 33440 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 33441 ;; Defined at:
 33442 ;;		line 339 in file "mcc_generated_files/adcc.c"
 33443 ;; Parameters:    Size  Location     Type
 33444 ;;		None
 33445 ;; Auto vars:     Size  Location     Type
 33446 ;;		None
 33447 ;; Return value:  Size  Location     Type
 33448 ;;                  1  [STACK] void 
 33449 ;; Registers used:
 33450 ;;		None
 33451 ;; Tracked objects:
 33452 ;;		On entry : 3F/0
 33453 ;;		On exit  : 0/0
 33454 ;;		Unchanged: 0/0
 33455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33460 ;;Total ram usage:        0 bytes
 33461 ;; Hardware stack levels used:    1
 33462 ;; This function calls:
 33463 ;;		Nothing
 33464 ;; This function is called by:
 33465 ;;		_ADCC_Initialize
 33466 ;;		_ADCC_ISR
 33467 ;;		_ADCC_ThresholdISR
 33468 ;; This function uses a reentrant model
 33469 ;;
 33470                           
 33471                           	psect	text157
 33472  01B720                     __ptext157:
 33473                           	opt callstack 0
 33474  01B720                     _ADCC_DefaultInterruptHandler:
 33475                           	opt callstack 4
 33476                           
 33477                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 33478                           
 33479                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33480                           ;incstack = 0
 33481  01B720  0012               	return		;funcret
 33482  01B722                     __end_of_ADCC_DefaultInterruptHandler:
 33483                           	opt callstack 0
 33484                           
 33485 ;; *************** function _adc_int_handler *****************
 33486 ;; Defined at:
 33487 ;;		line 133 in file "daq.c"
 33488 ;; Parameters:    Size  Location     Type
 33489 ;;		None
 33490 ;; Auto vars:     Size  Location     Type
 33491 ;;		None
 33492 ;; Return value:  Size  Location     Type
 33493 ;;                  1  [STACK] void 
 33494 ;; Registers used:
 33495 ;;		None
 33496 ;; Tracked objects:
 33497 ;;		On entry : 3F/0
 33498 ;;		On exit  : 0/0
 33499 ;;		Unchanged: 0/0
 33500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33505 ;;Total ram usage:        0 bytes
 33506 ;; Hardware stack levels used:    1
 33507 ;; This function calls:
 33508 ;;		Nothing
 33509 ;; This function is called by:
 33510 ;;		_start_adc_scan
 33511 ;;		_ADCC_ISR
 33512 ;; This function uses a reentrant model
 33513 ;;
 33514                           
 33515                           	psect	text158
 33516  01B722                     __ptext158:
 33517                           	opt callstack 0
 33518  01B722                     _adc_int_handler:
 33519                           	opt callstack 4
 33520                           
 33521                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 33522                           
 33523                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33524                           ;incstack = 0
 33525  01B722  0012               	return		;funcret
 33526  01B724                     __end_of_adc_int_handler:
 33527                           	opt callstack 0
 33528                           
 33529 ;; *************** function _ADCC_ThresholdISR *****************
 33530 ;; Defined at:
 33531 ;;		line 327 in file "mcc_generated_files/adcc.c"
 33532 ;; Parameters:    Size  Location     Type
 33533 ;;		None
 33534 ;; Auto vars:     Size  Location     Type
 33535 ;;		None
 33536 ;; Return value:  Size  Location     Type
 33537 ;;                  1    wreg      void 
 33538 ;; Registers used:
 33539 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 33540 ;; Tracked objects:
 33541 ;;		On entry : 0/0
 33542 ;;		On exit  : 0/0
 33543 ;;		Unchanged: 0/0
 33544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33547 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33548 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33549 ;;Total ram usage:        5 bytes
 33550 ;; Hardware stack levels used:    1
 33551 ;; Hardware stack levels required when called:    2
 33552 ;; This function calls:
 33553 ;;		Absolute function
 33554 ;;		_ADCC_DefaultInterruptHandler
 33555 ;;		_adc_int_t_handler
 33556 ;; This function is called by:
 33557 ;;		Interrupt level 2
 33558 ;; This function uses a non-reentrant model
 33559 ;;
 33560                           
 33561                           	psect	text159
 33562  01A500                     __ptext159:
 33563                           	opt callstack 0
 33564  01A500                     _ADCC_ThresholdISR:
 33565                           	opt callstack 3
 33566                           
 33567                           ;incstack = 0
 33568  01A500  0060  F0A0  F001   	movff	btemp,??_ADCC_ThresholdISR
 33569  01A506  0060  F0A4  F002   	movff	btemp+1,??_ADCC_ThresholdISR+1
 33570  01A50C  0060  F0C0  F003   	movff	btemp+8,??_ADCC_ThresholdISR+2
 33571  01A512  0060  F0C4  F004   	movff	btemp+9,??_ADCC_ThresholdISR+3
 33572  01A518  0060  F0CC  F005   	movff	btemp+11,??_ADCC_ThresholdISR+4
 33573  01A51E  EE14  F142         	lfsr	1,___inthi_sp
 33574                           
 33575                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 33576  01A522  0139               	movlb	57	; () banked
 33577  01A524  97A1               	bcf	161,3,b	;volatile
 33578                           
 33579                           ; BSR set to: 57
 33580                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 33581  01A526  0100               	movlb	0	; () banked
 33582  01A528  51AB               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 33583  01A52A  11AC               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 33584  01A52C  11AD               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 33585  01A52E  B4D8               	btfsc	status,2,c
 33586  01A530  D00C               	goto	i2u1000_49
 33587                           
 33588                           ; BSR set to: 0
 33589                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 33590  01A532  D801               	call	i2u1000_48
 33591  01A534  D00A               	goto	i2u1000_49
 33592  01A536                     i2u1000_48:
 33593  01A536  0005               	push	
 33594  01A538  6EFA               	movwf	pclath,c
 33595  01A53A  51AB               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 33596  01A53C  6EFD               	movwf	tosl,c
 33597  01A53E  51AC               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 33598  01A540  6EFE               	movwf	tosh,c
 33599  01A542  51AD               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 33600  01A544  6EFF               	movwf	tosu,c
 33601  01A546  50FA               	movf	pclath,w,c
 33602  01A548  0012               	return		;indir
 33603  01A54A                     i2u1000_49:
 33604  01A54A  0060  F014  F033   	movff	??_ADCC_ThresholdISR+4,btemp+11
 33605  01A550  0060  F010  F031   	movff	??_ADCC_ThresholdISR+3,btemp+9
 33606  01A556  0060  F00C  F030   	movff	??_ADCC_ThresholdISR+2,btemp+8
 33607  01A55C  0060  F008  F029   	movff	??_ADCC_ThresholdISR+1,btemp+1
 33608  01A562  0060  F004  F028   	movff	??_ADCC_ThresholdISR,btemp
 33609  01A568  0011               	retfie		f
 33610  01A56A                     __end_of_ADCC_ThresholdISR:
 33611                           	opt callstack 0
 33612                           
 33613 ;; *************** function _UART1_rx_vect_isr *****************
 33614 ;; Defined at:
 33615 ;;		line 181 in file "mcc_generated_files/uart1.c"
 33616 ;; Parameters:    Size  Location     Type
 33617 ;;		None
 33618 ;; Auto vars:     Size  Location     Type
 33619 ;;		None
 33620 ;; Return value:  Size  Location     Type
 33621 ;;                  1    wreg      void 
 33622 ;; Registers used:
 33623 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 33624 ;; Tracked objects:
 33625 ;;		On entry : 0/0
 33626 ;;		On exit  : 0/0
 33627 ;;		Unchanged: 0/0
 33628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33632 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33633 ;;Total ram usage:        0 bytes
 33634 ;; Hardware stack levels used:    1
 33635 ;; Hardware stack levels required when called:    1
 33636 ;; This function calls:
 33637 ;;		Absolute function
 33638 ;;		_UART1_Receive_ISR
 33639 ;; This function is called by:
 33640 ;;		Interrupt level 2
 33641 ;; This function uses a non-reentrant model
 33642 ;;
 33643                           
 33644                           	psect	text160
 33645  01B2DC                     __ptext160:
 33646                           	opt callstack 0
 33647  01B2DC                     _UART1_rx_vect_isr:
 33648                           	opt callstack 4
 33649                           
 33650                           ;incstack = 0
 33651  01B2DC  EE14  F142         	lfsr	1,___inthi_sp
 33652                           
 33653                           ;mcc_generated_files/uart1.c: 183:     if(UART1_RxInterruptHandler)
 33654  01B2E0  0100               	movlb	0	; () banked
 33655  01B2E2  51B1               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 33656  01B2E4  11B2               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 33657  01B2E6  11B3               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 33658  01B2E8  B4D8               	btfsc	status,2,c
 33659  01B2EA  0011               	retfie		f
 33660                           
 33661                           ; BSR set to: 0
 33662                           ;mcc_generated_files/uart1.c: 184: {;mcc_generated_files/uart1.c: 185:   UART1_RxInterru
      +                          ptHandler();
 33663  01B2EC  D801               	call	i2u1002_48
 33664  01B2EE  0011               	retfie		f
 33665  01B2F0                     i2u1002_48:
 33666  01B2F0  0005               	push	
 33667  01B2F2  6EFA               	movwf	pclath,c
 33668  01B2F4  51B1               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 33669  01B2F6  6EFD               	movwf	tosl,c
 33670  01B2F8  51B2               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 33671  01B2FA  6EFE               	movwf	tosh,c
 33672  01B2FC  51B3               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 33673  01B2FE  6EFF               	movwf	tosu,c
 33674  01B300  50FA               	movf	pclath,w,c
 33675  01B302  0012               	return		;indir
 33676  01B304                     __end_of_UART1_rx_vect_isr:
 33677                           	opt callstack 0
 33678                           
 33679 ;; *************** function _UART1_Receive_ISR *****************
 33680 ;; Defined at:
 33681 ;;		line 192 in file "mcc_generated_files/uart1.c"
 33682 ;; Parameters:    Size  Location     Type
 33683 ;;		None
 33684 ;; Auto vars:     Size  Location     Type
 33685 ;;		None
 33686 ;; Return value:  Size  Location     Type
 33687 ;;                  1  [STACK] void 
 33688 ;; Registers used:
 33689 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 33690 ;; Tracked objects:
 33691 ;;		On entry : 3F/0
 33692 ;;		On exit  : 0/0
 33693 ;;		Unchanged: 0/0
 33694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33699 ;;Total ram usage:        0 bytes
 33700 ;; Hardware stack levels used:    1
 33701 ;; This function calls:
 33702 ;;		Nothing
 33703 ;; This function is called by:
 33704 ;;		_UART1_Initialize
 33705 ;;		_UART1_rx_vect_isr
 33706 ;; This function uses a reentrant model
 33707 ;;
 33708                           
 33709                           	psect	text161
 33710  01B544                     __ptext161:
 33711                           	opt callstack 0
 33712  01B544                     _UART1_Receive_ISR:
 33713                           	opt callstack 4
 33714                           
 33715                           ;mcc_generated_files/uart1.c: 195:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 33716                           
 33717                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33718                           ;incstack = 0
 33719  01B544  505F               	movf	_uart1RxHead^0,w,c
 33720  01B546  0F6C               	addlw	low _uart1RxBuffer
 33721  01B548  6ED9               	movwf	fsr2l,c
 33722  01B54A  6ADA               	clrf	fsr2h,c
 33723  01B54C  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 33724  01B552  2A5F               	incf	_uart1RxHead^0,f,c	;volatile
 33725                           
 33726                           ;mcc_generated_files/uart1.c: 196:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 33727  01B554  0E07               	movlw	7
 33728  01B556  645F               	cpfsgt	_uart1RxHead^0,c
 33729  01B558  D001               	goto	l10396
 33730                           
 33731                           ;mcc_generated_files/uart1.c: 197:     {;mcc_generated_files/uart1.c: 198:   uart1RxHead
      +                           = 0;
 33732  01B55A  6A5F               	clrf	_uart1RxHead^0,c	;volatile
 33733  01B55C                     l10396:
 33734                           
 33735                           ;mcc_generated_files/uart1.c: 200:  uart1RxCount++;
 33736  01B55C  2A5D               	incf	_uart1RxCount^0,f,c	;volatile
 33737                           
 33738                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 33739  01B55E  0012               	return		;funcret
 33740  01B560                     __end_of_UART1_Receive_ISR:
 33741                           	opt callstack 0
 33742                           
 33743 ;; *************** function _UART2_tx_vect_isr *****************
 33744 ;; Defined at:
 33745 ;;		line 195 in file "mcc_generated_files/uart2.c"
 33746 ;; Parameters:    Size  Location     Type
 33747 ;;		None
 33748 ;; Auto vars:     Size  Location     Type
 33749 ;;		None
 33750 ;; Return value:  Size  Location     Type
 33751 ;;                  1    wreg      void 
 33752 ;; Registers used:
 33753 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 33754 ;; Tracked objects:
 33755 ;;		On entry : 0/0
 33756 ;;		On exit  : 0/0
 33757 ;;		Unchanged: 0/0
 33758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33763 ;;Total ram usage:        0 bytes
 33764 ;; Hardware stack levels used:    1
 33765 ;; Hardware stack levels required when called:    1
 33766 ;; This function calls:
 33767 ;;		Absolute function
 33768 ;;		_UART2_Transmit_ISR
 33769 ;; This function is called by:
 33770 ;;		Interrupt level 2
 33771 ;; This function uses a non-reentrant model
 33772 ;;
 33773                           
 33774                           	psect	text162
 33775  01B304                     __ptext162:
 33776                           	opt callstack 0
 33777  01B304                     _UART2_tx_vect_isr:
 33778                           	opt callstack 4
 33779                           
 33780                           ;incstack = 0
 33781  01B304  EE14  F142         	lfsr	1,___inthi_sp
 33782                           
 33783                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 33784  01B308  0100               	movlb	0	; () banked
 33785  01B30A  51B4               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 33786  01B30C  11B5               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 33787  01B30E  11B6               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 33788  01B310  B4D8               	btfsc	status,2,c
 33789  01B312  0011               	retfie		f
 33790                           
 33791                           ; BSR set to: 0
 33792                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 33793  01B314  D801               	call	i2u1004_48
 33794  01B316  0011               	retfie		f
 33795  01B318                     i2u1004_48:
 33796  01B318  0005               	push	
 33797  01B31A  6EFA               	movwf	pclath,c
 33798  01B31C  51B4               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 33799  01B31E  6EFD               	movwf	tosl,c
 33800  01B320  51B5               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 33801  01B322  6EFE               	movwf	tosh,c
 33802  01B324  51B6               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 33803  01B326  6EFF               	movwf	tosu,c
 33804  01B328  50FA               	movf	pclath,w,c
 33805  01B32A  0012               	return		;indir
 33806  01B32C                     __end_of_UART2_tx_vect_isr:
 33807                           	opt callstack 0
 33808                           
 33809 ;; *************** function _UART2_Transmit_ISR *****************
 33810 ;; Defined at:
 33811 ;;		line 213 in file "mcc_generated_files/uart2.c"
 33812 ;; Parameters:    Size  Location     Type
 33813 ;;		None
 33814 ;; Auto vars:     Size  Location     Type
 33815 ;;		None
 33816 ;; Return value:  Size  Location     Type
 33817 ;;                  1  [STACK] void 
 33818 ;; Registers used:
 33819 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 33820 ;; Tracked objects:
 33821 ;;		On entry : 3F/0
 33822 ;;		On exit  : 3B/39
 33823 ;;		Unchanged: 0/0
 33824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33829 ;;Total ram usage:        0 bytes
 33830 ;; Hardware stack levels used:    1
 33831 ;; This function calls:
 33832 ;;		Nothing
 33833 ;; This function is called by:
 33834 ;;		_UART2_Initialize
 33835 ;;		_UART2_tx_vect_isr
 33836 ;; This function uses a reentrant model
 33837 ;;
 33838                           
 33839                           	psect	text163
 33840  01B054                     __ptext163:
 33841                           	opt callstack 0
 33842  01B054                     _UART2_Transmit_ISR:
 33843                           	opt callstack 4
 33844                           
 33845                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 33846                           
 33847                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33848                           ;incstack = 0
 33849  01B054  0E40               	movlw	64
 33850  01B056  605A               	cpfslt	_uart2TxBufferRemaining^0,c
 33851  01B058  D010               	goto	l673
 33852                           
 33853                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 33854  01B05A  0E54               	movlw	low _uart2TxBuffer
 33855  01B05C  245B               	addwf	_uart2TxTail^0,w,c	;volatile
 33856  01B05E  6ED9               	movwf	fsr2l,c
 33857  01B060  6ADA               	clrf	fsr2h,c
 33858  01B062  0E03               	movlw	high _uart2TxBuffer
 33859  01B064  22DA               	addwfc	fsr2h,f,c
 33860  01B066  50DF               	movf	indf2,w,c
 33861  01B068  013D               	movlb	61	; () banked
 33862  01B06A  6FD2               	movwf	210,b	;volatile
 33863                           
 33864                           ; BSR set to: 61
 33865  01B06C  2A5B               	incf	_uart2TxTail^0,f,c	;volatile
 33866                           
 33867                           ; BSR set to: 61
 33868                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 33869  01B06E  0E3F               	movlw	63
 33870  01B070  645B               	cpfsgt	_uart2TxTail^0,c
 33871  01B072  D001               	goto	l10408
 33872                           
 33873                           ; BSR set to: 61
 33874                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 33875  01B074  6A5B               	clrf	_uart2TxTail^0,c	;volatile
 33876  01B076                     l10408:
 33877                           
 33878                           ; BSR set to: 61
 33879                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 33880  01B076  2A5A               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 33881                           
 33882                           ;mcc_generated_files/uart2.c: 224:     }
 33883  01B078  0012               	return	
 33884  01B07A                     l673:
 33885                           
 33886                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 33887  01B07A  0139               	movlb	57	; () banked
 33888  01B07C  9796               	bcf	150,3,b	;volatile
 33889                           
 33890                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 33891  01B07E  0012               	return		;funcret
 33892  01B080                     __end_of_UART2_Transmit_ISR:
 33893                           	opt callstack 0
 33894                           
 33895 ;; *************** function _UART2_rx_vect_isr *****************
 33896 ;; Defined at:
 33897 ;;		line 203 in file "mcc_generated_files/uart2.c"
 33898 ;; Parameters:    Size  Location     Type
 33899 ;;		None
 33900 ;; Auto vars:     Size  Location     Type
 33901 ;;		None
 33902 ;; Return value:  Size  Location     Type
 33903 ;;                  1    wreg      void 
 33904 ;; Registers used:
 33905 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 33906 ;; Tracked objects:
 33907 ;;		On entry : 0/0
 33908 ;;		On exit  : 0/0
 33909 ;;		Unchanged: 0/0
 33910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33914 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33915 ;;Total ram usage:        0 bytes
 33916 ;; Hardware stack levels used:    1
 33917 ;; Hardware stack levels required when called:    1
 33918 ;; This function calls:
 33919 ;;		Absolute function
 33920 ;;		_UART2_Receive_ISR
 33921 ;; This function is called by:
 33922 ;;		Interrupt level 2
 33923 ;; This function uses a non-reentrant model
 33924 ;;
 33925                           
 33926                           	psect	text164
 33927  01B32C                     __ptext164:
 33928                           	opt callstack 0
 33929  01B32C                     _UART2_rx_vect_isr:
 33930                           	opt callstack 4
 33931                           
 33932                           ;incstack = 0
 33933  01B32C  EE14  F142         	lfsr	1,___inthi_sp
 33934                           
 33935                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 33936  01B330  0100               	movlb	0	; () banked
 33937  01B332  51B7               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 33938  01B334  11B8               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 33939  01B336  11B9               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 33940  01B338  B4D8               	btfsc	status,2,c
 33941  01B33A  0011               	retfie		f
 33942                           
 33943                           ; BSR set to: 0
 33944                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 33945  01B33C  D801               	call	i2u1006_48
 33946  01B33E  0011               	retfie		f
 33947  01B340                     i2u1006_48:
 33948  01B340  0005               	push	
 33949  01B342  6EFA               	movwf	pclath,c
 33950  01B344  51B7               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 33951  01B346  6EFD               	movwf	tosl,c
 33952  01B348  51B8               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 33953  01B34A  6EFE               	movwf	tosh,c
 33954  01B34C  51B9               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 33955  01B34E  6EFF               	movwf	tosu,c
 33956  01B350  50FA               	movf	pclath,w,c
 33957  01B352  0012               	return		;indir
 33958  01B354                     __end_of_UART2_rx_vect_isr:
 33959                           	opt callstack 0
 33960                           
 33961 ;; *************** function _UART2_Receive_ISR *****************
 33962 ;; Defined at:
 33963 ;;		line 233 in file "mcc_generated_files/uart2.c"
 33964 ;; Parameters:    Size  Location     Type
 33965 ;;		None
 33966 ;; Auto vars:     Size  Location     Type
 33967 ;;		None
 33968 ;; Return value:  Size  Location     Type
 33969 ;;                  1  [STACK] void 
 33970 ;; Registers used:
 33971 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 33972 ;; Tracked objects:
 33973 ;;		On entry : 3F/0
 33974 ;;		On exit  : 0/0
 33975 ;;		Unchanged: 0/0
 33976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33980 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33981 ;;Total ram usage:        0 bytes
 33982 ;; Hardware stack levels used:    1
 33983 ;; This function calls:
 33984 ;;		Nothing
 33985 ;; This function is called by:
 33986 ;;		_UART2_Initialize
 33987 ;;		_UART2_rx_vect_isr
 33988 ;; This function uses a reentrant model
 33989 ;;
 33990                           
 33991                           	psect	text165
 33992  01B50A                     __ptext165:
 33993                           	opt callstack 0
 33994  01B50A                     _UART2_Receive_ISR:
 33995                           	opt callstack 4
 33996                           
 33997                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 33998                           
 33999                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34000                           ;incstack = 0
 34001  01B50A  0E00               	movlw	low _uart2RxBuffer
 34002  01B50C  2459               	addwf	_uart2RxHead^0,w,c	;volatile
 34003  01B50E  6ED9               	movwf	fsr2l,c
 34004  01B510  6ADA               	clrf	fsr2h,c
 34005  01B512  0E05               	movlw	high _uart2RxBuffer
 34006  01B514  22DA               	addwfc	fsr2h,f,c
 34007  01B516  006F F743 FFDF     	movff	15824,indf2	;volatile
 34008  01B51C  2A59               	incf	_uart2RxHead^0,f,c	;volatile
 34009                           
 34010                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 34011  01B51E  2859               	incf	_uart2RxHead^0,w,c
 34012  01B520  B4D8               	btfsc	status,2,c
 34013                           
 34014                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 34015  01B522  6A59               	clrf	_uart2RxHead^0,c	;volatile
 34016                           
 34017                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 34018  01B524  2A57               	incf	_uart2RxCount^0,f,c	;volatile
 34019                           
 34020                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 34021  01B526  0012               	return		;funcret
 34022  01B528                     __end_of_UART2_Receive_ISR:
 34023                           	opt callstack 0
 34024                           
 34025 ;; *************** function _TMR6_ISR *****************
 34026 ;; Defined at:
 34027 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 34028 ;; Parameters:    Size  Location     Type
 34029 ;;		None
 34030 ;; Auto vars:     Size  Location     Type
 34031 ;;		None
 34032 ;; Return value:  Size  Location     Type
 34033 ;;                  1    wreg      void 
 34034 ;; Registers used:
 34035 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 34036 ;; Tracked objects:
 34037 ;;		On entry : 0/0
 34038 ;;		On exit  : 0/0
 34039 ;;		Unchanged: 0/0
 34040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34043 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34044 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34045 ;;Total ram usage:        1 bytes
 34046 ;; Hardware stack levels used:    1
 34047 ;; Hardware stack levels required when called:    2
 34048 ;; This function calls:
 34049 ;;		_TMR6_CallBack
 34050 ;; This function is called by:
 34051 ;;		Interrupt level 2
 34052 ;; This function uses a non-reentrant model
 34053 ;;
 34054                           
 34055                           	psect	text166
 34056  01B57C                     __ptext166:
 34057                           	opt callstack 0
 34058  01B57C                     _TMR6_ISR:
 34059                           	opt callstack 3
 34060                           
 34061                           ;incstack = 0
 34062  01B57C  0060  F0A0  F006   	movff	btemp,??_TMR6_ISR
 34063  01B582  EE14  F142         	lfsr	1,___inthi_sp
 34064                           
 34065                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 34066  01B586  0139               	movlb	57	; () banked
 34067  01B588  91A9               	bcf	169,0,b	;volatile
 34068                           
 34069                           ; BSR set to: 57
 34070                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 34071  01B58A  EC16  F0DA         	call	_TMR6_CallBack	;wreg free
 34072  01B58E  0060  F018  F028   	movff	??_TMR6_ISR,btemp
 34073  01B594  0011               	retfie		f
 34074  01B596                     __end_of_TMR6_ISR:
 34075                           	opt callstack 0
 34076                           
 34077 ;; *************** function _TMR6_CallBack *****************
 34078 ;; Defined at:
 34079 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 34080 ;; Parameters:    Size  Location     Type
 34081 ;;		None
 34082 ;; Auto vars:     Size  Location     Type
 34083 ;;		None
 34084 ;; Return value:  Size  Location     Type
 34085 ;;                  1  [STACK] void 
 34086 ;; Registers used:
 34087 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 34088 ;; Tracked objects:
 34089 ;;		On entry : 3F/39
 34090 ;;		On exit  : 0/0
 34091 ;;		Unchanged: 0/0
 34092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34096 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34097 ;;Total ram usage:        0 bytes
 34098 ;; Hardware stack levels used:    1
 34099 ;; Hardware stack levels required when called:    1
 34100 ;; This function calls:
 34101 ;;		Absolute function
 34102 ;;		_TMR6_DefaultInterruptHandler
 34103 ;; This function is called by:
 34104 ;;		_TMR6_ISR
 34105 ;; This function uses a reentrant model
 34106 ;;
 34107                           
 34108                           	psect	text167
 34109  01B42C                     __ptext167:
 34110                           	opt callstack 0
 34111  01B42C                     _TMR6_CallBack:
 34112                           	opt callstack 3
 34113                           
 34114                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 34115                           
 34116                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34117                           ;incstack = 0
 34118  01B42C  0100               	movlb	0	; () banked
 34119  01B42E  51A8               	movf	_TMR6_InterruptHandler& (0+255),w,b
 34120  01B430  11A9               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 34121  01B432  11AA               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 34122  01B434  B4D8               	btfsc	status,2,c
 34123  01B436  0012               	return	
 34124                           
 34125                           ; BSR set to: 0
 34126                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 34127  01B438  D801               	call	u963_48
 34128  01B43A  0012               	return	
 34129  01B43C                     u963_48:
 34130  01B43C  0005               	push	
 34131  01B43E  6EFA               	movwf	pclath,c
 34132  01B440  51A8               	movf	_TMR6_InterruptHandler& (0+255),w,b
 34133  01B442  6EFD               	movwf	tosl,c
 34134  01B444  51A9               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 34135  01B446  6EFE               	movwf	tosh,c
 34136  01B448  51AA               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 34137  01B44A  6EFF               	movwf	tosu,c
 34138  01B44C  50FA               	movf	pclath,w,c
 34139  01B44E  0012               	return		;indir
 34140  01B450                     __end_of_TMR6_CallBack:
 34141                           	opt callstack 0
 34142                           
 34143 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 34144 ;; Defined at:
 34145 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 34146 ;; Parameters:    Size  Location     Type
 34147 ;;		None
 34148 ;; Auto vars:     Size  Location     Type
 34149 ;;  i               1  [STACK] unsigned char 
 34150 ;; Return value:  Size  Location     Type
 34151 ;;                  1  [STACK] void 
 34152 ;; Registers used:
 34153 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 34154 ;; Tracked objects:
 34155 ;;		On entry : 3F/0
 34156 ;;		On exit  : 0/0
 34157 ;;		Unchanged: 0/0
 34158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34163 ;;Total ram usage:        0 bytes
 34164 ;; Hardware stack levels used:    1
 34165 ;; This function calls:
 34166 ;;		Nothing
 34167 ;; This function is called by:
 34168 ;;		_TMR6_Initialize
 34169 ;;		_TMR6_CallBack
 34170 ;; This function uses a reentrant model
 34171 ;;
 34172                           
 34173                           	psect	text168
 34174  01A95C                     __ptext168:
 34175                           	opt callstack 0
 34176  01A95C                     _TMR6_DefaultInterruptHandler:
 34177                           	opt callstack 0
 34178                           
 34179                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34180  01A95C  52E6               	movf	postinc1,f,c
 34181                           
 34182                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 34183                           ;stkvar	_i @ sp[(-1)+0]
 34184                           
 34185                           ;incstack = 0
 34186  01A95E  0EFF               	movlw	-1
 34187  01A960  6AE3               	clrf	plusw1,c
 34188  01A962                     l9982:
 34189                           
 34190                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 34191                           ;stkvar	_i @ sp[(-1)+0]
 34192  01A962  0EFF               	movlw	-1
 34193  01A964  50E3               	movf	plusw1,w,c
 34194  01A966  0D02               	mullw	2
 34195  01A968  0EE6               	movlw	low _tickCount
 34196  01A96A  24F3               	addwf	243,w,c
 34197  01A96C  6ED9               	movwf	fsr2l,c
 34198  01A96E  0E02               	movlw	high _tickCount
 34199  01A970  20F4               	addwfc	prodh,w,c
 34200  01A972  6EDA               	movwf	fsr2h,c
 34201  01A974  50DE               	movf	postinc2,w,c
 34202  01A976  10DE               	iorwf	postinc2,w,c
 34203  01A978  B4D8               	btfsc	status,2,c
 34204  01A97A  D00C               	goto	l9986
 34205                           
 34206                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 34207                           ;stkvar	_i @ sp[(-1)+0]
 34208  01A97C  0EFF               	movlw	-1
 34209  01A97E  50E3               	movf	plusw1,w,c
 34210  01A980  0D02               	mullw	2
 34211  01A982  0EE6               	movlw	low _tickCount
 34212  01A984  24F3               	addwf	243,w,c
 34213  01A986  6ED9               	movwf	fsr2l,c
 34214  01A988  0E02               	movlw	high _tickCount
 34215  01A98A  20F4               	addwfc	prodh,w,c
 34216  01A98C  6EDA               	movwf	fsr2h,c
 34217  01A98E  06DE               	decf	postinc2,f,c
 34218  01A990  0E00               	movlw	0
 34219  01A992  5ADD               	subwfb	postdec2,f,c
 34220  01A994                     l9986:
 34221                           
 34222                           ;mcc_generated_files/tmr6.c: 207:  }
 34223                           ;stkvar	_i @ sp[(-1)+0]
 34224  01A994  0EFF               	movlw	-1
 34225  01A996  2AE3               	incf	plusw1,f,c
 34226                           
 34227                           ;stkvar	_i @ sp[(-1)+0]
 34228  01A998  0EFF               	movlw	-1
 34229  01A99A  006F FF8C  F028    	movff	plusw1,btemp
 34230  01A9A0  0E0C               	movlw	12
 34231  01A9A2  6428               	cpfsgt	btemp^0,c
 34232  01A9A4  D7DE               	goto	l9982
 34233                           
 34234                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 34235  01A9A6  52E5               	movf	postdec1,f,c
 34236  01A9A8  0012               	return		;funcret
 34237  01A9AA                     __end_of_TMR6_DefaultInterruptHandler:
 34238                           	opt callstack 0
 34239                           
 34240 ;; *************** function _DMA1_DMASCNT_ISR *****************
 34241 ;; Defined at:
 34242 ;;		line 126 in file "mcc_generated_files/dma1.c"
 34243 ;; Parameters:    Size  Location     Type
 34244 ;;		None
 34245 ;; Auto vars:     Size  Location     Type
 34246 ;;		None
 34247 ;; Return value:  Size  Location     Type
 34248 ;;                  1    wreg      void 
 34249 ;; Registers used:
 34250 ;;		None
 34251 ;; Tracked objects:
 34252 ;;		On entry : 0/0
 34253 ;;		On exit  : 3F/0
 34254 ;;		Unchanged: 0/0
 34255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34260 ;;Total ram usage:        0 bytes
 34261 ;; Hardware stack levels used:    1
 34262 ;; This function calls:
 34263 ;;		Nothing
 34264 ;; This function is called by:
 34265 ;;		Interrupt level 2
 34266 ;; This function uses a non-reentrant model
 34267 ;;
 34268                           
 34269                           	psect	text169
 34270  01B68C                     __ptext169:
 34271                           	opt callstack 0
 34272  01B68C                     _DMA1_DMASCNT_ISR:
 34273                           	opt callstack 5
 34274                           
 34275                           ;incstack = 0
 34276  01B68C  EE14  F142         	lfsr	1,___inthi_sp
 34277                           
 34278                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 34279  01B690  0139               	movlb	57	; () banked
 34280  01B692  91A2               	bcf	162,0,b	;volatile
 34281                           
 34282                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 34283  01B694  0100               	movlb	0	; () banked
 34284  01B696  9760               	bcf	_spi_link& (0+255),3,b	;volatile
 34285                           
 34286                           ; BSR set to: 0
 34287  01B698  0011               	retfie		f
 34288  01B69A                     __end_of_DMA1_DMASCNT_ISR:
 34289                           	opt callstack 0
 34290                           
 34291 ;; *************** function _DMA1_DMADCNT_ISR *****************
 34292 ;; Defined at:
 34293 ;;		line 134 in file "mcc_generated_files/dma1.c"
 34294 ;; Parameters:    Size  Location     Type
 34295 ;;		None
 34296 ;; Auto vars:     Size  Location     Type
 34297 ;;		None
 34298 ;; Return value:  Size  Location     Type
 34299 ;;                  1    wreg      void 
 34300 ;; Registers used:
 34301 ;;		None
 34302 ;; Tracked objects:
 34303 ;;		On entry : 0/0
 34304 ;;		On exit  : 3F/39
 34305 ;;		Unchanged: 0/0
 34306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34311 ;;Total ram usage:        0 bytes
 34312 ;; Hardware stack levels used:    1
 34313 ;; This function calls:
 34314 ;;		Nothing
 34315 ;; This function is called by:
 34316 ;;		Interrupt level 2
 34317 ;; This function uses a non-reentrant model
 34318 ;;
 34319                           
 34320                           	psect	text170
 34321  01B6B0                     __ptext170:
 34322                           	opt callstack 0
 34323  01B6B0                     _DMA1_DMADCNT_ISR:
 34324                           	opt callstack 5
 34325                           
 34326                           ; BSR set to: 0
 34327                           ;incstack = 0
 34328  01B6B0  EE14  F142         	lfsr	1,___inthi_sp
 34329                           
 34330                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 34331  01B6B4  0139               	movlb	57	; () banked
 34332  01B6B6  93A2               	bcf	162,1,b	;volatile
 34333                           
 34334                           ; BSR set to: 57
 34335  01B6B8  0011               	retfie		f
 34336  01B6BA                     __end_of_DMA1_DMADCNT_ISR:
 34337                           	opt callstack 0
 34338                           
 34339 ;; *************** function _DMA1_DMAA_ISR *****************
 34340 ;; Defined at:
 34341 ;;		line 144 in file "mcc_generated_files/dma1.c"
 34342 ;; Parameters:    Size  Location     Type
 34343 ;;		None
 34344 ;; Auto vars:     Size  Location     Type
 34345 ;;		None
 34346 ;; Return value:  Size  Location     Type
 34347 ;;                  1    wreg      void 
 34348 ;; Registers used:
 34349 ;;		None
 34350 ;; Tracked objects:
 34351 ;;		On entry : 0/0
 34352 ;;		On exit  : 3F/39
 34353 ;;		Unchanged: 0/0
 34354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34358 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34359 ;;Total ram usage:        0 bytes
 34360 ;; Hardware stack levels used:    1
 34361 ;; This function calls:
 34362 ;;		Nothing
 34363 ;; This function is called by:
 34364 ;;		Interrupt level 2
 34365 ;; This function uses a non-reentrant model
 34366 ;;
 34367                           
 34368                           	psect	text171
 34369  01B6BC                     __ptext171:
 34370                           	opt callstack 0
 34371  01B6BC                     _DMA1_DMAA_ISR:
 34372                           	opt callstack 5
 34373                           
 34374                           ; BSR set to: 57
 34375                           ;incstack = 0
 34376  01B6BC  EE14  F142         	lfsr	1,___inthi_sp
 34377                           
 34378                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 34379  01B6C0  0139               	movlb	57	; () banked
 34380  01B6C2  97A2               	bcf	162,3,b	;volatile
 34381                           
 34382                           ; BSR set to: 57
 34383  01B6C4  0011               	retfie		f
 34384  01B6C6                     __end_of_DMA1_DMAA_ISR:
 34385                           	opt callstack 0
 34386                           
 34387 ;; *************** function _DMA1_DMAOR_ISR *****************
 34388 ;; Defined at:
 34389 ;;		line 155 in file "mcc_generated_files/dma1.c"
 34390 ;; Parameters:    Size  Location     Type
 34391 ;;		None
 34392 ;; Auto vars:     Size  Location     Type
 34393 ;;		None
 34394 ;; Return value:  Size  Location     Type
 34395 ;;                  1    wreg      void 
 34396 ;; Registers used:
 34397 ;;		None
 34398 ;; Tracked objects:
 34399 ;;		On entry : 0/0
 34400 ;;		On exit  : 3F/39
 34401 ;;		Unchanged: 0/0
 34402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34406 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34407 ;;Total ram usage:        0 bytes
 34408 ;; Hardware stack levels used:    1
 34409 ;; This function calls:
 34410 ;;		Nothing
 34411 ;; This function is called by:
 34412 ;;		Interrupt level 2
 34413 ;; This function uses a non-reentrant model
 34414 ;;
 34415                           
 34416                           	psect	text172
 34417  01B6C8                     __ptext172:
 34418                           	opt callstack 0
 34419  01B6C8                     _DMA1_DMAOR_ISR:
 34420                           	opt callstack 5
 34421                           
 34422                           ; BSR set to: 57
 34423                           ;incstack = 0
 34424  01B6C8  EE14  F142         	lfsr	1,___inthi_sp
 34425                           
 34426                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 34427  01B6CC  0139               	movlb	57	; () banked
 34428  01B6CE  95A2               	bcf	162,2,b	;volatile
 34429                           
 34430                           ; BSR set to: 57
 34431  01B6D0  0011               	retfie		f
 34432  01B6D2                     __end_of_DMA1_DMAOR_ISR:
 34433                           	opt callstack 0
 34434                           
 34435                           ;
 34436                           ; Interrupt Vector Table @ 0x8
 34437                           ;
 34438                           
 34439                           	psect	ivt0x8
 34440  000008                     __pivt0x8:
 34441                           	opt callstack 0
 34442  000008                     ivt0x8_base:
 34443                           	opt callstack 0
 34444                           
 34445                           ; Vector 0 : SWINT
 34446  000008  6DC5               	dw	_Default_ISR shr (0+2)
 34447                           
 34448                           ; Vector 1 : HLVD
 34449  00000A  6DC5               	dw	_Default_ISR shr (0+2)
 34450                           
 34451                           ; Vector 2 : OSF
 34452  00000C  6DC5               	dw	_Default_ISR shr (0+2)
 34453                           
 34454                           ; Vector 3 : CSW
 34455  00000E  6DC5               	dw	_Default_ISR shr (0+2)
 34456                           
 34457                           ; Vector 4 : NVM
 34458  000010  6DC5               	dw	_Default_ISR shr (0+2)
 34459                           
 34460                           ; Vector 5 : SCAN
 34461  000012  6DC5               	dw	_Default_ISR shr (0+2)
 34462                           
 34463                           ; Vector 6 : CRC
 34464  000014  6DC5               	dw	_Default_ISR shr (0+2)
 34465                           
 34466                           ; Vector 7 : IOC
 34467  000016  6DC5               	dw	_Default_ISR shr (0+2)
 34468                           
 34469                           ; Vector 8 : INT0
 34470  000018  6D9F               	dw	_INT0_ISR shr (0+2)
 34471                           
 34472                           ; Vector 9 : ZCD
 34473  00001A  6DC5               	dw	_Default_ISR shr (0+2)
 34474                           
 34475                           ; Vector 10 : AD
 34476  00001C  6C0A               	dw	_ADCC_ISR shr (0+2)
 34477                           
 34478                           ; Vector 11 : ADT
 34479  00001E  6940               	dw	_ADCC_ThresholdISR shr (0+2)
 34480                           
 34481                           ; Vector 12 : CMP1
 34482  000020  6DC5               	dw	_Default_ISR shr (0+2)
 34483                           
 34484                           ; Vector 13 : SMT1
 34485  000022  6DC5               	dw	_Default_ISR shr (0+2)
 34486                           
 34487                           ; Vector 14 : SMT1PRA
 34488  000024  6DC5               	dw	_Default_ISR shr (0+2)
 34489                           
 34490                           ; Vector 15 : SMT1PRW
 34491  000026  6DC5               	dw	_Default_ISR shr (0+2)
 34492                           
 34493                           ; Vector 16 : DMA1SCNT
 34494  000028  6DA3               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 34495                           
 34496                           ; Vector 17 : DMA1DCNT
 34497  00002A  6DAC               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 34498                           
 34499                           ; Vector 18 : DMA1OR
 34500  00002C  6DB2               	dw	_DMA1_DMAOR_ISR shr (0+2)
 34501                           
 34502                           ; Vector 19 : DMA1A
 34503  00002E  6DAF               	dw	_DMA1_DMAA_ISR shr (0+2)
 34504                           
 34505                           ; Vector 20 : SPI1RX
 34506  000030  6DC5               	dw	_Default_ISR shr (0+2)
 34507                           
 34508                           ; Vector 21 : SPI1TX
 34509  000032  6DC5               	dw	_Default_ISR shr (0+2)
 34510                           
 34511                           ; Vector 22 : SPI1
 34512  000034  6DC5               	dw	_Default_ISR shr (0+2)
 34513                           
 34514                           ; Vector 23 : I2C1RX
 34515  000036  6DC5               	dw	_Default_ISR shr (0+2)
 34516                           
 34517                           ; Vector 24 : I2C1TX
 34518  000038  6DC5               	dw	_Default_ISR shr (0+2)
 34519                           
 34520                           ; Vector 25 : I2C1
 34521  00003A  6DC5               	dw	_Default_ISR shr (0+2)
 34522                           
 34523                           ; Vector 26 : I2C1E
 34524  00003C  6DC5               	dw	_Default_ISR shr (0+2)
 34525                           
 34526                           ; Vector 27 : U1RX
 34527  00003E  6CB7               	dw	_UART1_rx_vect_isr shr (0+2)
 34528                           
 34529                           ; Vector 28 : U1TX
 34530  000040  6DC5               	dw	_Default_ISR shr (0+2)
 34531                           
 34532                           ; Vector 29 : U1E
 34533  000042  6DC5               	dw	_Default_ISR shr (0+2)
 34534                           
 34535                           ; Vector 30 : U1
 34536  000044  6DC5               	dw	_Default_ISR shr (0+2)
 34537                           
 34538                           ; Vector 31 : TMR0
 34539  000046  6DC5               	dw	_Default_ISR shr (0+2)
 34540                           
 34541                           ; Vector 32 : TMR1
 34542  000048  6DC5               	dw	_Default_ISR shr (0+2)
 34543                           
 34544                           ; Vector 33 : TMR1G
 34545  00004A  6DC5               	dw	_Default_ISR shr (0+2)
 34546                           
 34547                           ; Vector 34 : TMR2
 34548  00004C  6DC5               	dw	_Default_ISR shr (0+2)
 34549                           
 34550                           ; Vector 35 : CCP1
 34551  00004E  6DC5               	dw	_Default_ISR shr (0+2)
 34552                           
 34553                           ; Vector 36 : Undefined
 34554  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 34555                           
 34556                           ; Vector 37 : NCO1
 34557  000052  6DC5               	dw	_Default_ISR shr (0+2)
 34558                           
 34559                           ; Vector 38 : CWG1
 34560  000054  6DC5               	dw	_Default_ISR shr (0+2)
 34561                           
 34562                           ; Vector 39 : CLC1
 34563  000056  6DC5               	dw	_Default_ISR shr (0+2)
 34564                           
 34565                           ; Vector 40 : INT1
 34566  000058  6B48               	dw	_INT1_ISR shr (0+2)
 34567                           
 34568                           ; Vector 41 : CMP2
 34569  00005A  6DC5               	dw	_Default_ISR shr (0+2)
 34570                           
 34571                           ; Vector 42 : DMA2SCNT
 34572  00005C  6DC5               	dw	_Default_ISR shr (0+2)
 34573                           
 34574                           ; Vector 43 : DMA2DCNT
 34575  00005E  6DC5               	dw	_Default_ISR shr (0+2)
 34576                           
 34577                           ; Vector 44 : DMA2OR
 34578  000060  6DC5               	dw	_Default_ISR shr (0+2)
 34579                           
 34580                           ; Vector 45 : DMA2A
 34581  000062  6DC5               	dw	_Default_ISR shr (0+2)
 34582                           
 34583                           ; Vector 46 : I2C2RX
 34584  000064  6DC5               	dw	_Default_ISR shr (0+2)
 34585                           
 34586                           ; Vector 47 : I2C2TX
 34587  000066  6DC5               	dw	_Default_ISR shr (0+2)
 34588                           
 34589                           ; Vector 48 : I2C2
 34590  000068  6DC5               	dw	_Default_ISR shr (0+2)
 34591                           
 34592                           ; Vector 49 : I2C2E
 34593  00006A  6DC5               	dw	_Default_ISR shr (0+2)
 34594                           
 34595                           ; Vector 50 : U2RX
 34596  00006C  6CCB               	dw	_UART2_rx_vect_isr shr (0+2)
 34597                           
 34598                           ; Vector 51 : U2TX
 34599  00006E  6CC1               	dw	_UART2_tx_vect_isr shr (0+2)
 34600                           
 34601                           ; Vector 52 : U2E
 34602  000070  6DC5               	dw	_Default_ISR shr (0+2)
 34603                           
 34604                           ; Vector 53 : U2
 34605  000072  6DC5               	dw	_Default_ISR shr (0+2)
 34606                           
 34607                           ; Vector 54 : TMR3
 34608  000074  6211               	dw	_TMR3_ISR shr (0+2)
 34609                           
 34610                           ; Vector 55 : TMR3G
 34611  000076  6DC5               	dw	_Default_ISR shr (0+2)
 34612                           
 34613                           ; Vector 56 : TMR4
 34614  000078  6DC5               	dw	_Default_ISR shr (0+2)
 34615                           
 34616                           ; Vector 57 : CCP2
 34617  00007A  6DC5               	dw	_Default_ISR shr (0+2)
 34618                           
 34619                           ; Vector 58 : Undefined
 34620  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 34621                           
 34622                           ; Vector 59 : CWG2
 34623  00007E  6DC5               	dw	_Default_ISR shr (0+2)
 34624                           
 34625                           ; Vector 60 : CLC2
 34626  000080  6DC5               	dw	_Default_ISR shr (0+2)
 34627                           
 34628                           ; Vector 61 : INT2
 34629  000082  6DC5               	dw	_Default_ISR shr (0+2)
 34630                           
 34631                           ; Vector 62 : Undefined
 34632  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 34633                           
 34634                           ; Vector 63 : Undefined
 34635  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 34636                           
 34637                           ; Vector 64 : Undefined
 34638  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 34639                           
 34640                           ; Vector 65 : Undefined
 34641  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 34642                           
 34643                           ; Vector 66 : Undefined
 34644  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 34645                           
 34646                           ; Vector 67 : Undefined
 34647  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 34648                           
 34649                           ; Vector 68 : Undefined
 34650  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 34651                           
 34652                           ; Vector 69 : Undefined
 34653  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 34654                           
 34655                           ; Vector 70 : TMR5
 34656  000094  6A03               	dw	_TMR5_ISR shr (0+2)
 34657                           
 34658                           ; Vector 71 : TMR5G
 34659  000096  6DC5               	dw	_Default_ISR shr (0+2)
 34660                           
 34661                           ; Vector 72 : TMR6
 34662  000098  6D5F               	dw	_TMR6_ISR shr (0+2)
 34663                           
 34664                           ; Vector 73 : CCP3
 34665  00009A  6DC5               	dw	_Default_ISR shr (0+2)
 34666                           
 34667                           ; Vector 74 : CWG3
 34668  00009C  6DC5               	dw	_Default_ISR shr (0+2)
 34669                           
 34670                           ; Vector 75 : CLC3
 34671  00009E  6DC5               	dw	_Default_ISR shr (0+2)
 34672                           
 34673                           ; Vector 76 : Undefined
 34674  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 34675                           
 34676                           ; Vector 77 : Undefined
 34677  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 34678                           
 34679                           ; Vector 78 : Undefined
 34680  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 34681                           
 34682                           ; Vector 79 : Undefined
 34683  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 34684                           
 34685                           ; Vector 80 : CCP4
 34686  0000A8  6DC5               	dw	_Default_ISR shr (0+2)
 34687                           
 34688                           ; Vector 81 : CLC4
 34689  0000AA  6DC5               	dw	_Default_ISR shr (0+2)
 34690  0000AC                     ivt0x8_undefint:
 34691                           	opt callstack 0
 34692  0000AC  00FF               	reset	
 34693                           
 34694                           	psect	text173
 34695  000000                     __ptext173:
 34696                           	opt callstack 0
 34697                           
 34698                           	psect	rparam
 34699  0000                     
 34700                           	psect	temp
 34701  000028                     btemp:
 34702                           	opt callstack 0
 34703  000028                     	ds	32
 34704  0000                     wtemp0	set	btemp
 34705  0000                     wtemp1	set	btemp+2
 34706  0000                     wtemp2	set	btemp+4
 34707  0000                     wtemp3	set	btemp+6
 34708  0000                     wtemp4	set	btemp+8
 34709  0000                     wtemp5	set	btemp+10
 34710  0000                     wtemp8	set	btemp+1
 34711  0000                     ttemp0	set	btemp
 34712  0000                     ttemp1	set	btemp+3
 34713  0000                     ttemp2	set	btemp+6
 34714  0000                     ttemp3	set	btemp+9
 34715  0000                     ttemp5	set	btemp+1
 34716  0000                     ttemp6	set	btemp+4
 34717  0000                     ttemp7	set	btemp+8
 34718  0000                     ltemp0	set	btemp
 34719  0000                     ltemp1	set	btemp+4
 34720  0000                     ltemp2	set	btemp+8
 34721  0000                     lltemp0	set	btemp
 34722  0000                     lltemp1	set	btemp+8
 34723  0000                     lltemp2	set	btemp+16
 34724  0000                     lltemp3	set	btemp+24
 34725                           tosu	equ	0x3FFF
 34726                           tosh	equ	0x3FFE
 34727                           tosl	equ	0x3FFD
 34728                           stkptr	equ	0x3FFC
 34729                           pclatu	equ	0x3FFB
 34730                           pclath	equ	0x3FFA
 34731                           pcl	equ	0x3FF9
 34732                           tblptru	equ	0x3FF8
 34733                           tblptrh	equ	0x3FF7
 34734                           tblptrl	equ	0x3FF6
 34735                           tablat	equ	0x3FF5
 34736                           prodh	equ	0x3FF4
 34737                           prodl	equ	0x3FF3
 34738                           indf0	equ	0x3FEF
 34739                           postinc0	equ	0x3FEE
 34740                           postdec0	equ	0x3FED
 34741                           preinc0	equ	0x3FEC
 34742                           plusw0	equ	0x3FEB
 34743                           fsr0h	equ	0x3FEA
 34744                           fsr0l	equ	0x3FE9
 34745                           wreg	equ	0x3FE8
 34746                           indf1	equ	0x3FE7
 34747                           postinc1	equ	0x3FE6
 34748                           postdec1	equ	0x3FE5
 34749                           preinc1	equ	0x3FE4
 34750                           plusw1	equ	0x3FE3
 34751                           fsr1h	equ	0x3FE2
 34752                           fsr1l	equ	0x3FE1
 34753                           bsr	equ	0x3FE0
 34754                           indf2	equ	0x3FDF
 34755                           postinc2	equ	0x3FDE
 34756                           postdec2	equ	0x3FDD
 34757                           preinc2	equ	0x3FDC
 34758                           plusw2	equ	0x3FDB
 34759                           fsr2h	equ	0x3FDA
 34760                           fsr2l	equ	0x3FD9
 34761                           status	equ	0x3FD8


Data Sizes:
    Strings     919
    Constant    492
    Data        1002
    BSS         1298
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     39      63
    BANK0           160      0     154
    BANK1           256      0     255
    BANK2           256      0     256
    BANK3           256      0     228
    BANK4           256      0     134
    BANK5           256      0     255
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_102(CODE[1]), STR_64(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_99(CODE[3]), STR_95(CODE[3]), STR_90(CODE[3]), STR_85(CODE[3]), 
		 -> STR_80(CODE[3]), STR_76(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_99(CODE[3]), STR_95(CODE[3]), STR_90(CODE[3]), STR_85(CODE[3]), 
		 -> STR_80(CODE[3]), STR_76(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 85
		 -> ct(STACK[3]), STR_65(CODE[85]), STR_63(CODE[3]), STR_62(CODE[3]), 
		 -> STR_61(CODE[19]), STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), 
		 -> STR_57(CODE[19]), STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), 
		 -> STR_53(CODE[15]), STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), 
		 -> STR_49(CODE[19]), STR_48(CODE[19]), STR_45(CODE[3]), STR_44(CODE[3]), 
		 -> STR_43(CODE[3]), STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), 
		 -> STR_39(CODE[20]), STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), 
		 -> STR_35(CODE[20]), STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), 
		 -> STR_31(CODE[19]), STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), 
		 -> STR_23(CODE[19]), STR_22(CODE[19]), STR_21(CODE[17]), STR_20(CODE[16]), 
		 -> STR_19(CODE[16]), STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), 
		 -> STR_15(CODE[21]), STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), 
		 -> STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), 
		 -> STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_2(CODE[15]), STR_1(CODE[17]), 

    l	PTR const unsigned char  size(2) Largest target is 85
		 -> ct(STACK[3]), STR_65(CODE[85]), STR_63(CODE[3]), STR_62(CODE[3]), 
		 -> STR_61(CODE[19]), STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), 
		 -> STR_57(CODE[19]), STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), 
		 -> STR_53(CODE[15]), STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), 
		 -> STR_49(CODE[19]), STR_48(CODE[19]), STR_45(CODE[3]), STR_44(CODE[3]), 
		 -> STR_43(CODE[3]), STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), 
		 -> STR_39(CODE[20]), STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), 
		 -> STR_35(CODE[20]), STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), 
		 -> STR_31(CODE[19]), STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), 
		 -> STR_23(CODE[19]), STR_22(CODE[19]), STR_21(CODE[17]), STR_20(CODE[16]), 
		 -> STR_19(CODE[16]), STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), 
		 -> STR_15(CODE[21]), STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), 
		 -> STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), 
		 -> STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_2(CODE[15]), STR_1(CODE[17]), 

    s	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK3[80]), 
		 -> spin(CODE[120]), STR_47(CODE[9]), STR_46(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[6]), 
		 -> V(BANK2[189]), 

    a	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK3[80]), 
		 -> spin(CODE[120]), STR_47(CODE[9]), STR_46(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[6]), 
		 -> V(BANK2[189]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_71(CODE[4]), STR_70(CODE[4]), STR_67(CODE[4]), STR_66(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_71(CODE[4]), STR_70(CODE[4]), STR_67(CODE[4]), STR_66(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_45(CODE[3]), STR_44(CODE[3]), STR_43(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 85
		 -> STR_65(CODE[85]), STR_63(CODE[3]), STR_62(CODE[3]), STR_61(CODE[19]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), STR_49(CODE[19]), 
		 -> STR_48(CODE[19]), STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), 
		 -> STR_39(CODE[20]), STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), 
		 -> STR_35(CODE[20]), STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), 
		 -> STR_31(CODE[19]), STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), 
		 -> STR_23(CODE[19]), STR_22(CODE[19]), STR_21(CODE[17]), STR_20(CODE[16]), 
		 -> STR_19(CODE[16]), STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), 
		 -> STR_15(CODE[21]), STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), 
		 -> STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), 
		 -> STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_2(CODE[15]), STR_1(CODE[17]), 

    s	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK2[189]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK2[189]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S6019_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK2[189]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK2[189]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR const unsigned char  size(2) Largest target is 85
		 -> STR_65(CODE[85]), STR_63(CODE[3]), STR_62(CODE[3]), STR_61(CODE[19]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), STR_49(CODE[19]), 
		 -> STR_48(CODE[19]), STR_45(CODE[3]), STR_44(CODE[3]), STR_43(CODE[3]), 
		 -> STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), STR_39(CODE[20]), 
		 -> STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), STR_35(CODE[20]), 
		 -> STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), STR_31(CODE[19]), 
		 -> STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), STR_27(CODE[19]), 
		 -> STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), STR_23(CODE[19]), 
		 -> STR_22(CODE[19]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), 
		 -> STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 85
		 -> STR_65(CODE[85]), STR_63(CODE[3]), STR_62(CODE[3]), STR_61(CODE[19]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), STR_49(CODE[19]), 
		 -> STR_48(CODE[19]), STR_45(CODE[3]), STR_44(CODE[3]), STR_43(CODE[3]), 
		 -> STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), STR_39(CODE[20]), 
		 -> STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), STR_35(CODE[20]), 
		 -> STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), STR_31(CODE[19]), 
		 -> STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), STR_27(CODE[19]), 
		 -> STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), STR_23(CODE[19]), 
		 -> STR_22(CODE[19]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), 
		 -> STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(2) Largest target is 85
		 -> STR_65(CODE[85]), STR_63(CODE[3]), STR_62(CODE[3]), STR_61(CODE[19]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), STR_49(CODE[19]), 
		 -> STR_48(CODE[19]), STR_45(CODE[3]), STR_44(CODE[3]), STR_43(CODE[3]), 
		 -> STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), STR_39(CODE[20]), 
		 -> STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), STR_35(CODE[20]), 
		 -> STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), STR_31(CODE[19]), 
		 -> STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), STR_27(CODE[19]), 
		 -> STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), STR_23(CODE[19]), 
		 -> STR_22(CODE[19]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), 
		 -> STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_47(CODE[9]), STR_46(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), STR_3(CODE[6]), 
		 -> V(BANK2[189]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_47(CODE[9]), STR_46(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), STR_3(CODE[6]), 
		 -> V(BANK2[189]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_47(CODE[9]), 
		 -> STR_46(CODE[12]), D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), 
		 -> STR_3(CODE[6]), V(BANK2[189]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    log_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__hid_input	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    S4487tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_47(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_46(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK2[189]), 

    sp__port_data_dma_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK2[189]), 

    sp__hid_display	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1995spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    S1995spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                13    13      0  373863
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                            ___fladd
                             ___flge
                            ___fltol
                    _calc_model_data
                      _calc_ror_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                    _conv_raw_result
                   _convert_adc_data
                _eaDogM_WriteCommand
                          _esr_check
                              _fabsf
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                      _init_port_dma
                          _lp_filter
                      _mode_lamp_dim
                   _set_display_info
                 _set_load_relay_one
                 _set_load_relay_two
                          _set_vterm
                           _spinners
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      31
 ---------------------------------------------------------------------------------
 (1) _spinners                                             3     1      2     290
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _init_port_dma                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1268
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0    8321
           _TMR3_SetInterruptHandler
                       _Volts_to_SOC
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _conv_raw_result
 ---------------------------------------------------------------------------------
 (2) _Volts_to_SOC                                         4     0      4      22
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          1     0      1     474
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            1     0      1     138
                         _get_switch
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _esr_check                                            1     0      1    8599
                         _StartTimer
                          _TimerDone
                            ___fldiv
                            ___flsub
                    _conv_raw_result
                              _fabsf
                 _set_load_relay_one
                 _set_load_relay_two
                  _update_adc_result
 ---------------------------------------------------------------------------------
 (2) _update_adc_result                                    0     0      0     132
                         _StartTimer
                          _TimerDone
                     _check_adc_scan
                     _clear_adc_scan
                     _start_adc_scan
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_two                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_one                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   31190
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10995
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  186232
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   92863
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (17) _sprintf                                            66    10     56   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   62814
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     0      4   62550
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   31159
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   31298
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   29912
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (21) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (21) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (17) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   1     0      1      66
 ---------------------------------------------------------------------------------
 (1) _calc_ror_data                                        0     0      0    7418
                             ___flge
                            ___flsub
                    _conv_raw_result
                              _fabsf
 ---------------------------------------------------------------------------------
 (17) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (2) _conv_raw_result                                      2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (3) _nanf                                                 6     4      2      23
 ---------------------------------------------------------------------------------
 (3) _get_raw_result                                       1     0      1      22
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            10     5      5     322
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      22
        _UART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            4     4      0     204
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0     204
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (16) _switch_handler                                      2     2      0     204
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            4     4      0      90
                                             10 COMRAM     4     4      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR3_ISR                                           25    25      0   35480
                                             14 COMRAM    25    25      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR3_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR3_CallBack                                       0     0      0   35390
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (16) _calc_bsoc                                           2     2      0   35390
                         _StartTimer
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                              _fabsf
                  _port_data_dma_ptr
                 _send_port_data_dma
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _sprintf                                            66    10     56   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (21) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (21) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (17) _send_port_data_dma                                  2     0      2      45
 ---------------------------------------------------------------------------------
 (17) _port_data_dma_ptr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (17) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (16) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (27) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (27) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 26
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   ___fladd
   ___flge
   ___fltol
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _calc_ror_data
     ___flge
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _conv_raw_result
     ___fldiv
     ___flmul
     ___flsub
       ___fladd
     ___xxtofl
     _get_raw_result
     _nanf
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _esr_check
     _StartTimer
     _TimerDone
     ___fldiv
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
     _set_load_relay_one
     _set_load_relay_two
     _update_adc_result
       _StartTimer
       _TimerDone
       _check_adc_scan
       _clear_adc_scan
       _start_adc_scan
         _ADCC_DischargeSampleCapacitor
         _ADCC_SetADIInterruptHandler
         _ADCC_SetADTIInterruptHandler
         _ADCC_StartConversion
   _fabsf
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
     _Volts_to_SOC
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _init_port_dma
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_display_info
     _TimerDone
   _set_load_relay_one
   _set_load_relay_two
   _set_vterm
   _spinners
     _strlen
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _wait_lcd_done
       _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       _StartTimer
       ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___fltol
       _fabsf
       _port_data_dma_ptr
       _send_port_data_dma
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _strlen
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     3E2      69       12.1%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      FF      15       99.6%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      86      13       52.3%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      E4      11       89.1%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0     100       9      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FF       7       99.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      9A       5       96.2%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F     27      3F       1      100.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     541      58        0.0%
DATA                 0      0     923       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Dec 18 21:12:58 2019

                     _SPI1_Exchange8bit B492                __end_of_set_display_info B4EC  
                                     _C 0100                                       _D 07FF  
                                     _H 00F3                                       _P 009E  
                                     _R 00C4                                       _S 02BD  
                                     _T FB4B                                       _V 0200  
      __end_of_TMR5_SetInterruptHandler B212            __end_of_start_switch_handler B492  
                           __CFG_CP$OFF 000000                 __size_of_ringBufS_flush 0092  
                                    _bp FC53                  __end_of_FVR_Initialize B6FA  
                           __CFG_LVP$ON 000000                                     l169 B602  
                                   l807 B4A0                                     l673 B07A  
                                   _GIE 01FE97                                     _abs AA3C  
                                   _pad 90DE                 __size_of_PMD_Initialize 0014  
                       _TMR2_Initialize B5AE                                     prod 003FF3  
                                   tosl 003FFD                                     wreg 003FE8  
                         _INT0_CallBack B408                       _update_adc_result AD5E  
                         __CFG_BBEN$OFF 000000                   __size_of_Volts_to_SOC 0092  
                         _INT1_CallBack B39C                            __CFG_ZCD$OFF 000000  
                                  l1000 ACDA                                    l2106 913A  
                                  l1322 12A2                                    l1340 18DA  
                                  l3021 7BAE                                    l2126 543A  
                                  l2206 0B1A                                    l1350 1AFA  
                                  l2047 6B8C                                    l1351 1CFC  
                                  l2162 123A                                    l2330 3214  
                                  l1338 18D4                         _timer3ReloadVal 004E  
                                  l1188 AD1A                                    l3052 AA7C  
                                  l3044 8100                                    l2244 6C7A  
                                  l1356 2230                                    l1348 1974  
                                  l1437 A760                                    l2191 066A  
                                  l1712 B4E8                                    l3152 8FBC  
                                  l2280 5820                                    l2265 62E8  
                                  l3083 7338                                    l1581 A186  
                                  l2622 9A72                                    l1655 ADB4  
                                  l1672 92FE                                    l1664 7854  
                                  l1825 7F6A                                    l2633 8838  
                                  l1577 9DEE                                    l1665 79B0  
                                  l2626 8764                                    l3434 A3A4  
                                  l3419 7798                                    l2900 41FA  
                                  l2660 8566                                    l1596 AE1E  
                                  l1774 5356                                    l1934 A21A  
                  _ADCC_StartConversion B61C                                    l3447 A320  
                                  l1943 9618                                    l2912 408A  
                                  l1866 9812                                    l2945 4EA6  
                                  l8100 32EA                                    l8020 4CE0  
                                  l8012 4CAE                                    l8004 4C48  
                                  l2981 3A3E                                    l8030 4D22  
                                  l8006 4C5A                                    l8014 4CB2  
                                  l8040 4D6C                                    l8202 38C4  
                                  l8114 3382                                    l8026 4CFC  
                                  l8212 3938                                    l8116 3388  
                                  l8108 3342                                    l8060 4E22  
                                  l8044 4D72                                    l9100 7224  
                                  l8230 39EC                                    l8222 39A8  
                                  l8126 33DA                                    l8118 33B8  
                                  l7510 3B24                                    l8054 4DE6  
                                  l8302 8FF8                                    l8232 3A06  
                                  l8216 397E                                    l7504 3ADE  
                                  l8072 4E7A                                    l9104 728C  
                                  l8400 84D2                                    l8090 3274  
                                  l7522 3B8E                                    l8074 4E8A  
                                  l8066 4E52                                    l9114 7328  
                                  l8306 9010                                    l8410 8514  
                                  l8402 84EE                                    l9130 760A  
                                  l7700 41AA                                    l7612 3EEE  
                                  l7540 3C36                                    l7532 3BE4  
                                  l7516 3B5C                                    l7508 3AF4  
                                  l8252 89CA                                    l8324 90C4  
                                  l8316 9090                                    l8340 9A70  
                                  l8332 99FA                                    l9132 7676  
                                  l7614 3F00                                    l7622 3F3C  
                                  l7534 3C14                                    l7470 9EC2  
                                  l8184 384E                                    l8096 32B4  
                                  l7528 3BCE                                    l9080 710A  
                                  l7472 9EE4                                    l8264 8A00  
                                  l8336 9A3C                                    l8408 84FE  
                                  l8424 8158                                    l8178 3832  
                                  l8098 32BA                                    l7706 41DA  
                                  l7634 4014                                    l7618 3F0A  
                                  l7570 3D74                                    l8354 87B2  
                                  l8258 89E0                                    l7810 6174  
                                  l8188 3874                                    l7652 40AC  
                                  l7644 406E                                    l7636 403A  
                                  l7580 3DE6                                    l8348 8722  
                                  l7740 AA6C                                    l7820 627A  
                                  l7812 61C4                                    l8436 822A  
                                  l8198 38BE                                    l7654 40BE  
                                  l7590 3E22                                    l8366 8836  
                                  l8358 8800                                    l9094 71AA  
                                  l9078 70E8                                    l8286 8ADA  
                                  l8278 8AA6                                    l8374 AA12  
                                  l7672 40F8                                    l7584 3E06  
                                  l8472 A8FA                                    l9096 71C2  
                                  l9088 717E                                    l8384 8450  
                                  l7816 620C                                    l8456 8BDA  
                                  l8448 8B2E                                    l7658 40CA  
                                  l7586 3E18                                    l7594 3E52  
                                  l7498 3A9E                                    l9602 7B2C  
                                  l9098 71E6                                    l7914 74D4  
                                  l7906 7428                                    l8298 8FE6  
                                  l7754 809E                                    l7684 4156  
                                  l7668 40F2                                    l7940 49CC  
                                  l9612 7B8E                                    l7860 6F04  
                                  l7764 80F8                                    l9542 A936  
                                  l7694 4182                                    l7934 498C  
                                  l7854 6EB0                                    l7758 80A2  
                                  l7782 A394                                    l7838 A310  
                                  l9534 B00E                                    l7960 4AAA  
                                  l7944 49E2                                    l9384 B142  
                                  l9472 AE28                                    l7698 419A  
                                  l7954 4A6A                                    l7946 4A12  
                                  l9570 79FE                                    l7866 6F4A  
                                  l7972 4B2E                                    l7964 4AC0  
                                  l9580 7A78                                    l7796 6056  
                                  l7966 4AF0                                    l9590 7ADA  
                                  l9582 7A8E                                    l7878 701C  
                                  l9592 7AF8                                    l9584 7AAC  
                                  l7986 4B82                                    l7978 4B68  
                                  l9594 7B0E                                    l9578 7A6A  
                                  l7898 73A0                                    l7996 4C12  
                                  STR_1 FF50                                    STR_2 FFA2  
                                  STR_3 FFD0                                    STR_4 FF1D  
                                  STR_5 FDF0                                    STR_6 FDF0  
                                  STR_7 FDF0                                    l9982 A962  
                                  STR_8 FF0B                                    STR_9 FD08  
                                  l9986 A994                                    _LATA 003FBA  
                                  _LATB 003FBB                                    _LATC 003FBC  
                                  _LATD 003FBD                                    _LATE 003FBE  
                                  _LATF 003FBF                                    _T2PR 003FAB  
                                  u5200 9F12                                    u6010 AFC2  
                                  u6020 AFC4                                    u6110 7054  
                                  u5230 AF92                                    u5207 9F04  
                                  u5400 3E6A                                    u6040 6EAA  
                                  u6200 7454                                    u5240 AF94  
                                  u6130 70A6                                    _T6PR 003F93  
                                  u5500 405C                                    u5340 3D9A  
                                  u6060 6F00                                    u6220 750C  
                                  u7020 851C                                    _PMD0 0039C0  
                                  _PMD1 0039C1                                    u5350 3DBA  
                                  u7110 8B28                                    _PMD2 0039C2  
                                  u5351 3DB4                                    u6071 6F0A  
                                  _PMD3 0039C3                                    u5600 4146  
                                  u6080 6F44                                    u6240 755E  
                                  u6160 739A                                    u7040 8546  
                                  u7120 8B5A                                    _PMD4 0039C4  
                                  _PMD5 0039C5                                    u6090 6F76  
                                  _PMD6 0039C6                                    u7051 8118  
                                  _PMD7 0039C7                                    u5540 40D0  
                                  u5460 3F32                                    u6420 4D64  
                                  u6180 73F0                                    u7060 8152  
                                  u7140 8C12                                    u5605 4136  
                                  u5630 4166                                    u5390 3E4A  
                                  u6190 7422                                    u7070 8184  
                                  u5560 40EA                                    u5368 3DBC  
                                  u7160 A8D6                                    u5800 80F2  
                                  u5465 3F22                                    u7170 A8F6  
                                  u5730 AA50                                    u7090 8262  
                                  u5395 3E3A                                    u6700 3992  
                                  u6460 4DC0                                    u6380 4CDA  
                                  u5740 8022                                    u6605 37EC  
                                  u6470 4DFA                                    u8310 717A  
                                  u5910 611A                                    u5830 A352  
                                  u5670 AF62                                    u6640 38B6  
                                  u9200 7DCE                                    u6480 4E36  
                                  u5840 A354                                    u5680 AF64  
                                  u6465 4DB0                                    u5745 8018  
                                  u6570 33C8                                    u9114 4F1E  
                                  u8330 72D2                                    u5930 61F2  
                                  u9115 4F18                                    u5915 6110  
                                  u9035 B648                                    u8340 72D4  
                                  u6820 903C                                    u5860 5FEE  
                                  u8420 773E                                    u9036 B64A  
                                  u9045 B638                                    u9134 50F4  
                                  u6750 8A2C                                    u5790 80F0  
                                  u5870 603A                                    u8430 776C  
                                  u9046 B63A                                    u9135 50EE  
                                  u5935 61E8                                    u6680 3912  
                                  u6840 90B0                                    u5960 ABD2  
                                  u9400 A1C0                                    u6585 355C  
                                  u5785 80D2                                    u5865 5FE4  
                                  u8425 7738                                    u6690 394C  
                                  u9154 51C2                                    u9074 4ECC  
                                  u6770 8AC6                                    u5970 ABD4  
                                  u6595 3624                                    u9155 51BC  
                                  u9075 4EC6                                    u8427 772A  
                                  u9180 51EC                                    u6940 AA0E  
                                  u8380 76A4                                    u5980 A2CE  
                                  u6685 3902                                    u8437 775E  
                                  u9174 51E4                                    u9094 4EFC  
                                  u6950 8430                                    u5990 A2D0  
                                  u9430 A206                                    u9175 51DE  
                                  u9095 4EF6                                    u5895 6074  
                                  u6880 9A6C                                    u6960 8444  
                                  u5896 607A                                    u5897 6088  
                                  u9290 B45C                                    u6970 847E  
                                  u9418 A1C2                                    u6955 8426  
                                  u8387 7696                                    u8815 AC0E  
                                  u6975 8474                                    u9296 B45E  
                                  u8920 7B22                                    u9448 A208  
                                  _PLLR 01CEE0                                    u8960 A578  
                                  u8985 A5AC                                    u8986 A5AE  
                                  u8978 A57A                                    _WPUA 003A41  
                                  _WPUB 003A51                                    _WPUC 003A61  
                                  _WPUD 003A71                                    _WPUE 003A81  
                                  _WPUF 003A91                        __end_of_ADCC_ISR B054  
                         __CFG_FCMEN$ON 000000                                    _dbuf 0394  
                                  _cp_h FC63                                    _cp_l FC5F  
                                  _atoi 70CE                                    _ctoa A21E  
                                  _main 1244                                    _dtoa 535C  
                                  _nanf A696                                    _seed 01F7  
                                  _prec 004A                                    _nout 00C0  
                                  _spin FBDB                                    fsr0h 003FEA  
                                  fsr1h 003FE2                                    indf0 003FEF  
                                  fsr2h 003FDA                                    fsr0l 003FE9  
                                  indf1 003FE7                                    indf2 003FDF  
                                  fsr1l 003FE1                                    fsr2l 003FD9  
                                  _stoa 6B90                                    btemp 0028  
                                  _utoa 62A4                                    _xtoa 57DC  
                __end_of_check_adc_scan B6E2                           ___fpclassifyf 7F74  
                                  prodh 003FF4                                    prodl 003FF3  
                                  start 00AE                         _timer5ReloadVal 0052  
             __end_of_SPI1_Exchange8bit B4B0               __size_of_clear_hid_pflags 0024  
                       _TMR3_Initialize AB54             __size_of_set_load_relay_one 0010  
           __size_of_set_load_relay_two 0010                           __CFG_CSWEN$ON 000000  
                     _UART1_rx_vect_isr B2DC                            ___param_bank 000000  
                    ?_UART1_rx_vect_isr 0001                        __end_of_INT0_ISR B68A  
                      __end_of_INT1_ISR AD5E          __size_of_OSCILLATOR_Initialize 0016  
              __end_of_ringBufS_put_dma 9DF6           __end_of_OSCILLATOR_Initialize B608  
                                 l10110 7DF0                                   l10032 4EB2  
                                 l10122 7E30                                   l10060 510C  
                                 l10052 50DA                                   l10230 8C72  
                                 l10222 8C48                                   l10118 7E1C  
                                 l10038 4EE2                                   l10224 8C58  
                                 l10072 5288                                   l10064 51A8  
                                 l10048 5000                                   l10250 8D58  
                                 l10242 8CDE                                   l10226 8C5E  
                                 l10234 8C7A                                   l10228 8C64  
                                 l10236 8CA6                                   l10156 ADCA  
                                 l12020 5B4C                                   l12004 5A62  
                                 l10332 A072                                   l10078 5324  
                                 l10086 5336                                   l10262 A1D4  
                                 l10408 B076                                   l10336 A0DA  
                                 l10434 ACC2                                   l11402 9F4E  
                                 l12130 29BC                                   l12114 280E  
                                 l12106 2722                                   l10610 698C  
                                 l10452 AD02                                   l11412 910A  
                                 l12220 3142                                   l10604 6964  
                                 l11406 9F8C                                   l11422 9180  
                                 l12230 31A0                                   l12206 300A  
                                 l12142 2AA8                                   l12118 2862  
                                 l12054 2354                                   l10198 AD7E  
                                 l10630 6A0C                                   l10622 69E6  
                                 l10614 6998                                   l11416 9132  
                                 l11432 992C                                   l11600 022C  
                                 l12080 2526                                   l12056 238E  
                                 l11426 91CA                                   l11418 9144  
                                 l11514 5474                                   l11506 542A  
                                 l12226 319C                                   l12162 2C08  
                                 l12138 2A74                                   l12058 23A4  
                                 l12322 9216                                   l10714 9526  
                                 l10562 98D4                                   l10396 B55C  
                                 l10820 A3F2                                   l10708 5F2C  
                                 l10548 83D8                                   l11700 077A  
                                 l11604 0258                                   l12172 2CB6  
                                 l12076 24D6                                   l12236 31C0  
                                 l11460 67A4                                   l10652 6B54  
                                 l10556 982E                                   l10814 A3E2  
                                 l11390 8ED2                                   l11518 5492  
                                 l11710 0926                                   l11630 0396  
                                 l11614 02FC                                   l11622 032A  
                                 l12182 2DD8                                   l12078 2510  
                                 l11454 673A                                   l10654 6B7C  
                                 l10726 9582                                   l11480 A23C  
                                 l11552 5792                                   l11528 56A4  
                                 l11640 04D2                                   l12192 2E8E  
                                 l12096 268A                                   l11448 667C  
                                 l10664 9B40                                   l10584 68EA  
                                 l10736 95F2                                   l12362 42CA  
                                 l10754 AC98                                   l11482 A268  
                                 l11810 0FD6                                   l11634 0406  
                                 l12290 9CCC                                   l12522 794C  
                                 l10594 692E                                   l10586 68FA  
                                 l11548 5756                                   l11812 0FF0  
                                 l11732 0B12                                   l11724 0A48  
                                 l11652 0554                                   l11636 0470  
                                 l12292 9D0E                                   l11468 6852  
                                 l12276 9E4E                                   l12508 7824  
                                 l10668 9B7E                                   l10588 68FE  
                                 PRLOCK 0039EF                                   l12382 462E  
                                 l12366 430C                                   l11822 1092  
                                 l11734 0B34                                   l11566 00AC  
                                 l11902 6DD2                                   l10598 693A  
                                 l12710 1940                                   l12392 4762  
                                 l11832 10E2                                   l11760 0CBA  
                                 l11672 05F6                                   l11664 0594  
                                 l11656 057C                                   l11920 62D8  
                                 l12394 476A                                   l12378 4594  
                                 l11690 06B8                                   l11674 0602  
                                 l11658 058E                                   l11578 00F0  
                                 l11586 0146                                   l11906 6E0E  
                                 l12730 1EDE                                   l12570 1284  
                                 l12388 46D8                                   l11748 0C32  
                                 l11596 01EA                                   l12628 146E  
                                 l12572 128C                                   l12398 4780  
                                 l11694 06F0                                   l11598 0216  
                                 l12734 1F40                                   l12718 1966  
                                 l11848 119A                                   l11768 0D24  
                                 l11776 0D90                                   l11784 0EA2  
                                 l11928 6334                                   l11960 5810  
                                 l12744 20BC                                   l12760 2154  
                                 l12576 12AA                                   l11938 652A  
                                 l12770 2198                                   l12746 20E6  
                                 l12578 12BC                                   l11796 0F3A  
                                 l11892 6D1C                                   l11884 6CB0  
                                 l11868 6BFC                                   l11980 58E6  
                                 l11972 5886                                   l12756 2130  
                                 l12676 16C6                                   l11966 584A  
                                 l11888 6CEC                                   l12784 21E0  
                                 l12776 21AA                                   l12688 17A0  
                                 l12696 18DE                                   l11898 6DA6  
                                 l12778 21C2                                   l12698 190C  
                                 l11996 59DC                                   l12788 2206  
                                 l12798 225E                         __end_of___aodiv 70CE  
                          _Volts_to_SOC A06A                                   _ADCAP 003EF5  
                                 _ADACT 003EFE                         __end_of___fladd 4204  
                                 _ADCLK 003EFF                         __end_of___aomod 7582  
                                 _ADPCH 003EF1                         __end_of___fldiv 4EB0  
                                 _ADREF 003EFD                         __end_of___awdiv 8AF4  
                       __end_of___flneg AA3C                                   STR_10 FD35  
                                 STR_11 FD4B                                   STR_12 FF2E  
                                 STR_21 FF61                                   STR_13 FF3F  
                                 STR_14 FF72                                   STR_30 FEE5  
                                 STR_22 FE99                                   STR_23 FEBF  
                                 STR_31 FE27                                   STR_15 FD61  
                                 STR_40 FF83                                   STR_24 FEAC  
                                 STR_32 FE3A                                   STR_16 FD1F  
                                 STR_41 FF83                                   STR_25 FE60  
                                 STR_33 FE4D                                   STR_17 FCBC  
                         __CFG_WDTE$OFF 000000                                   STR_42 FF61  
                                 STR_50 FFBD                                   STR_26 FE86  
                                 STR_34 FD9E                                   STR_18 FCD6  
                                 STR_51 FFBD                                   STR_43 FFFB  
                                 STR_19 FF83                                   STR_27 FE73  
                                 STR_35 FDDA                                   STR_44 FFF8  
                                 STR_52 FF93                                   STR_28 FEF8  
                                 STR_36 FD8A                         __end_of___awmod 90DE  
                                 STR_53 FF93                                   STR_29 FED2  
                                 STR_37 FD76                                   STR_54 FF93  
                                 STR_70 FFDA                                   STR_46 FFB1  
                                 STR_38 FDB2                                   STR_71 FFE2  
                                 STR_47 FFC7                                   STR_39 FDC6  
                                 STR_55 FCF0                                   STR_64 FCBB  
                                 STR_80 FFEF                                   STR_48 FE01  
                                 _ADRPT 003EEC                                   STR_49 FE01  
                                 STR_57 FE14                                   STR_65 FC67  
                                 STR_90 FFF2                                   STR_74 FFE9  
                                 STR_66 FFD6                                   STR_58 FDEE  
                                 STR_83 FFEC                                   STR_67 FFDE  
                                 STR_76 FFE9                                   STR_85 FFEC  
                                 STR_93 FFF5                                   STR_78 FFEF  
                                 STR_95 FFF5                                   STR_88 FFF2  
                       __end_of___flmul 3A48                                   STR_97 FFE6  
                                 STR_99 FFE6                         __end_of___flsub AAC8  
                       __end_of___fltol 8570                                   u10310 8EC6  
                                 u11110 10B8                                   u10330 8F42  
                                 u11130 116E                                   u11050 0EE4  
                                 u11210 6D12                                   u11140 1170  
                                 u11220 6D58                                   u11301 656C  
                                 u10510 53FE                                   u11310 6582  
                                 u12030 799C                                   u12110 17CE  
                                 u11311 6580                                   u10600 5716  
                                 u11320 6596                                   u11400 5934  
                                 u12040 799E                                   u12200 213A  
                                 u10530 5410                                   u11250 6E34  
                                 u11330 659A                                   u10450 68C6  
                                 u12210 214C                                   u11227 6D4A  
                       __end_of___lodiv 828A                                   u10620 572C  
                                 u10700 0196                                   u11500 5ADC  
                                 u11420 5992                                   u10550 5460  
                                 u10390 99A6                                   u11270 62BE  
                                 u11430 5994                                   u11350 57F6  
                                 u12206 213C                                   u10560 56B8  
                                 u10480 538C                                   u12216 214E  
                                 u10490 538E                                   u10810 0562  
                                 u10730 02A6                                   u11450 5A5E  
                                 u11610 256E                                   u12090 158C  
                                 _U1P1H 003DED                                   u10571 56E8  
                                 u10580 56FE                                   u10740 02A8  
                                 u10660 00DA                                   u11460 5A7E  
                                 u11380 58DE                                   u11700 28EA  
                                 u11620 2570                                   _U1P2H 003DEF  
                                 u10581 56FC                                   u10397 9998  
                                 u10590 5712                                   u11390 5932  
                                 u11630 2596                                   u12190 2120  
                                 _U1P1L 003DEC                                   _U1P3H 003DF1  
                                 u11471 5AAE                                   u11455 5A40  
                                 _T3CLK 003FA9                                   u10840 05C6  
                                 u11480 5AC4                                   u11800 2EE2  
                                 u11560 23EC                                   _T2CON 003FAC  
                                 _U1P2L 003DEE                                   u11481 5AC2  
                                 u10690 0194                                   u11490 5AD8  
                                 u11730 2B62                                   u11570 23EE  
                                 _U1P3L 003DF0                                   u10780 050E  
                                 u11820 3092                                   u11740 2B64  
                                 u11580 2414                                   u12196 2122  
                                 u10950 0A18                                   _U2P1L 003DD4  
                                 u10880 0648                                   u11680 2776  
                                 u11840 9E2E                                   _T3CON 003FA6  
                                 _U2P2L 003DD6                                   _U2P3L 003DD8  
                                 _T5CLK 003F9D                         __end_of___lomod 8C34  
                                 _T2HLT 003FAD                                   _T5CON 003F9A  
                                 _T6CON 003F94                          __CFG_DEBUG$OFF 000000  
                                 _T6HLT 003F95              _ADCC_ADTI_InterruptHandler 00AB  
                                 _T2TMR 003FAA                                   _U1UIR 003DF8  
                                 _T2RST 003FAF                                   _U1RXB 003DE8  
                                 _U2UIR 003DE0                                   _U2RXB 003DD0  
                                 _U2TXB 003DD2                                   _T6TMR 003F92  
                                 _T6RST 003F97                     ??_UART1_rx_vect_isr 0006  
                                 _ISRPR 0039F1                                   _OSCEN 0039DD  
                                 _TMR3H 003FA5                                   _TMR5H 003F99  
                                 _TMR3L 003FA4                                   _TMR5L 003F98  
             __end_of_update_adc_result AD98                                   _TRISA 003FC2  
                                 _TRISB 003FC3                                   _TRISC 003FC4  
                                 _TRISD 003FC5                                   _TRISE 003FC6  
                                 _TRISF 003FC7                             _Default_ISR B714  
               __size_of_clear_adc_scan 0006       __size_of_TMR3_SetInterruptHandler 0028  
     __size_of_TMR6_SetInterruptHandler 0028                           __CFG_WRTB$OFF 000000  
                      __end_of_TMR3_ISR 89A6                           __CFG_WRTC$OFF 000000  
                         __CFG_WRTD$OFF 000000                        __end_of_TMR5_ISR A866  
                          _DMA1CON0bits 003BFC                        __end_of_TMR6_ISR B596  
                          _DMA1CON1bits 003BFD                                   _fabsf 9BF2  
                                 _flags 004C                __size_of_calc_model_data 03A2  
                          _DMA2CON0bits 003BDC                            _DMA2CON1bits 003BDD  
                                 _fputc 8EA2              __size_of_send_lcd_cmd_long 0028  
                       __end_of_isalpha ABDE                                   _fputs 9F3E  
                       __end_of_isdigit AFCE                         __end_of_ivln2_h FC5F  
                    __CFG_MCLRE$EXTMCLR 000000                                   _srand AE72  
                                 _width 0048                                   _putch B560  
                       __end_of_islower AF6E                         __end_of_isspace A90A  
              _INT1_SetInterruptHandler B23A                         __end_of_isupper AF9E  
                                 pclath 003FFA                                   tablat 003FF5  
                                 ltemp0 0028                                   ltemp1 002C  
                                 ltemp2 0030                __size_of_DMA1_Initialize 006A  
                                 plusw1 003FE3                                   plusw2 003FDB  
                                 ttemp0 0028                                   ttemp1 002B  
                                 ttemp2 002E                                   ttemp3 0031  
                                 ttemp5 0029                                   ttemp6 002C  
                                 ttemp7 0030                                   status 003FD8  
   __end_of_UART1_SetRxInterruptHandler B1C2             _UART1_SetRxInterruptHandler B19A  
                                 wtemp0 0028                                   wtemp1 002A  
                                 wtemp2 002C                                   wtemp3 002E  
                                 wtemp4 0030                                   wtemp5 0032  
                                 wtemp8 0029                         __end_of_sprintf 951A  
                       __end_of_tolower A3AE                         __end_of_strncmp 77A2  
                       __end_of_toupper A32A               __size_of_DMA1_DMADCNT_ISR 000A  
             __end_of_UART1_rx_vect_isr B304                __size_of_SPI1_Initialize 0016  
                       _TMR5_Initialize AB0E                   __end_of_ringBufS_init B122  
                       __initialization 9302                       _UART2_rx_vect_isr B32C  
                          __end_of_cp_h FC67                            __end_of_cp_l FC63  
                          __end_of_atoi 7342                            __end_of_ctoa A2A6  
                          __end_of_main 2272                            __end_of_dtoa 57DC  
                          __end_of_nanf A6F8                            __end_of_spin FC53  
                          __end_of_stoa 6E4E                            __end_of_utoa 65E4  
                          __end_of_xtoa 5B96                          __CFG_SAFEN$OFF 000000  
                    ?_UART2_rx_vect_isr 0001                 __end_of_TMR2_Initialize B5C6  
              __size_of_DMA2_Initialize 005A              __end_of_check_enter_button ACA0  
              _TMR5_SetInterruptHandler B1EA                           __activetblptr 000003  
             __size_of_DMA1_DMASCNT_ISR 000E                   _TMR3_InterruptHandler 00A2  
                     _port_data_dma_ptr B6A4                      esr_check@esr_state 0054  
                   ??_UART2_rx_vect_isr 0006                                  INTCON0 003FD2  
  __size_of_UART2_SetRxInterruptHandler 0028                          __CFG_MVECEN$ON 000000  
                       _TMR6_Initialize B080                         _PWM8_Initialize B5DC  
                      _UART1_Initialize AAC8                       _UART2_tx_vect_isr B304  
                    _UART2_Transmit_ISR B054                                  _ADACCU 003EEA  
                                _ADACQH 003EF4                                  _ADACQL 003EF3  
                                _ADCON0 003EF8                                  _ADCON1 003EF9  
                                _ADCON2 003EFA                                  _ADCON3 003EFB  
                        _start_adc_scan A5D0                                  _ADLTHH 003EDF  
                                _ADLTHL 003EDE                                  _ADPREH 003EF7  
                                _ADPREL 003EF6                                  _DMA1PR 0039F3  
                                _DMA2PR 0039F4                                  _ADSTAT 003EFC  
                                _ADUTHH 003EE1                                  _ADUTHL 003EE0  
                    _PWM8_LoadDutyValue ABDE                                  _ANSELA 003A40  
                                _ANSELB 003A50                                  _ANSELC 003A60  
                                _ANSELD 003A70                                  _ANSELE 003A80  
                                _ANSELF 003A90                      ?_UART2_tx_vect_isr 0001  
                                _U1CON0 003DF2                                  _U1CON1 003DF3  
                                _U1CON2 003DF4                                  _T3GATE 003FA8  
                                _U1BRGH 003DF6                                  _U1FIFO 003DF7  
                                _T3GCON 003FA7                                  _U2CON0 003DDA  
                                _U2CON1 003DDB                                  _U1BRGL 003DF5  
                                _U2CON2 003DDC                                  _U2BRGH 003DDE  
                                _U2FIFO 003DDF                                  _U2BRGL 003DDD  
                                _T5GATE 003F9C                                  _T5GCON 003F9B  
                                _MAINPR 0039F2                                  _RC3PPS 003A13  
                                _RD1PPS 003A19                                  i1l1017 A858  
                                _RB6PPS 003A0E                                  i1l1205 890E  
                  _start_switch_handler B472                                  _RC5PPS 003A15  
                                _ODCONA 003A42                                  _ODCONB 003A52  
                                _ODCONC 003A62                                  _RC6PPS 003A16  
                                _ODCOND 003A72                                  _ODCONE 003A82  
                                _ODCONF 003A92                 __end_of_TMR3_Initialize AB9A  
                        __CFG_WDTCCS$SC 000000                                  _FVRCON 003EC1  
                      _mode_lamp_bright B66C                                  _SCANPR 0039F7  
                                _IVTADH 00389E                                  _IVTADL 00389D  
                                _IVTADU 00389F            __size_of_eaDogM_WriteCommand 000E  
                                _OSCFRQ 0039DF                                  u902_20 AEE2  
                                u902_26 AEE4                                  u930_28 8C4E  
                                u933_20 8C6E                                  u933_21 8C68  
                                u937_24 8D4E                                  u937_25 8D4A  
                  __size_of_hid_display 0102                                  u963_48 B43C  
                                u955_48 B418                                  u957_28 B3AC  
                                u966_28 B3D0                                  u995_44 A412  
                                u995_45 A40C                        __end_of___xxtofl 7BB8  
 __end_of_ADCC_DischargeSampleCapacitor B6DA  __size_of_ADCC_DischargeSampleCapacitor 0008  
         _ADCC_DischargeSampleCapacitor B6D2                __end_of_send_lcd_cmd_dma A8B8  
                       _TMR3_WriteTimer ACE0                     ??_UART2_tx_vect_isr 0006  
             __end_of_UART2_rx_vect_isr B354              __size_of_SPI1_Exchange8bit 001E  
                __size_of_DMA1_DMAA_ISR 000A                          __CFG_XINST$OFF 000000  
                     _CLKREF_Initialize B69A                        _UART2_Initialize A6F8  
                                _WaitMs AE06                         _conv_raw_result 4EB0  
                          _CCPTMRS1bits 003F5F    __size_of_ADCC_SetADIInterruptHandler 0028  
                                ___flge 86E0                                  ___fleq 99B8  
                     _ADCC_ThresholdISR A500                          __CFG_STVREN$ON 000000  
                        _ringBufS_flush A0FC                                  _efgtoa 0000  
                                _floorf 5F38                      ?_ADCC_ThresholdISR 0001  
                                _memset 65E4                    __size_of_help_button 0038  
                                clear_0 9396                                  clear_1 93AA  
                                clear_2 93BC                                  clear_3 93C8  
                                clear_4 93D4                                  clear_5 93E0  
                                clear_6 93EC                                  clear_7 93F8  
             __end_of_port_data_dma_ptr B6AE                                  _printf A634  
                    _eaDogM_WriteString 9DF6                                  _strcpy 98E4  
                             ?_ADCC_ISR 0001                                  _strlen 9E9C  
                    __size_of_TimerDone 0028                            __pdataBIGRAM 05FF  
                       _ADCC_Initialize A496                          _PMD_Initialize B608  
            __size_of_update_adc_result 003A               __end_of_UART2_tx_vect_isr B32C  
                                lltemp0 0028                                  lltemp1 0030  
                                lltemp2 0038                                  lltemp3 0040  
                   ??_ADCC_ThresholdISR 0001                  __end_of_start_adc_scan A634  
                          __mediumconst FA7A                                  preinc2 003FDC  
                __size_of_init_port_dma 0030                                  tblptrh 003FF7  
                                tblptrl 003FF6                                  tblptru 003FF8  
                      __end_of_wdtdelay A7B0                        __end_of_spinners 98E4  
                      __end_of_vfprintf 9D4C                              _StartTimer AC20  
         __size_of_INTERRUPT_Initialize 0066                 __end_of_TMR5_Initialize AB54  
                     _SYSTEM_Initialize A9AA                              __accesstop 0060  
               __end_of__initialization 940A                               ?_INT0_ISR 0001  
                             ?_INT1_ISR 0001                    __end_of_display_help B6F2  
                  __end_of_display_info B6EA               __end_of_CLKREF_Initialize B6A4  
                         ___rparam_used 000001              __size_of_UART1_rx_vect_isr 0028  
                       _TMR5_WriteTimer ACA0                   _set_temp_display_help B64E  
                      _clear_hid_pflags B378                   __end_of_TMR3_CallBack B408  
             __end_of_ADCC_ThresholdISR A56A                      __size_of_calc_bsoc 0732  
                __end_of_ringBufS_flush A18E                          __pcstackCOMRAM 0001  
                            ___inthi_sp 1142                              ___intlo_sp 18A1  
                          __pidataBANK0 ADD0                            __pidataBANK1 961C  
                          __pidataBANK2 9A7C             __size_of_send_port_data_dma 0052  
                         __end_of_fabsf 9CA0                               ?_TMR3_ISR 0001  
                             ?_TMR5_ISR 0001                               ?_TMR6_ISR 0001  
                        ivt0x8_undefint 00AC                           __end_of_fputc 8FC6  
                         __end_of_fputs 9FD6                           __end_of_srand AEA6  
                 __end_of_TMR5_CallBack B3E4                           __end_of_putch B57A  
               __end_of_PWM8_Initialize B5F2                 __end_of_TMR6_Initialize B0AA  
                     _adc_int_t_handler A3AE                  __end_of_PMD_Initialize B61C  
                            __end_of_bp FC5B                              ??_ADCC_ISR 0001  
                 __end_of_TMR6_CallBack B450             __size_of_EXT_INT_Initialize 0034  
                __size_of_calc_ror_data 0174                           _DMA1_DMAA_ISR B6BC  
                 TMR3_ISR@CountCallBack 00C2                          _clear_adc_scan B6FA  
                    __size_of_hid_input 0090                  __size_of_mode_lamp_dim 0018  
              _UART2_RxInterruptHandler 00B7               __end_of_SYSTEM_Initialize A9F4  
                       __CFG_PR1WAY$OFF 000000                         __CFG_IVT1WAY$ON 000000  
               __end_of_TMR3_WriteTimer AD20                              __pbssBANK0 0060  
                            __pbssBANK1 01F7                              __pbssBANK2 02BD  
                            __pbssBANK3 0300                              __pbssBANK4 0400  
                            __pbssBANK5 0500                              _check_help 77A2  
               __end_of_conv_raw_result 535C                      __size_of_esr_check 02C0  
                 _INT0_InterruptHandler 00BD                              ??_INT0_ISR 0001  
                            ??_INT1_ISR 0007                       __end_of_TimerDone B14A  
                      _DMA1_DMADCNT_ISR B6B0                      __size_of_init_bsoc 0170  
            __size_of_UART2_rx_vect_isr 0028                                 IVTBASEH 003FD6  
                               IVTBASEL 003FD5                                 IVTBASEU 003FD7  
                    __size_of_lp_filter 01BC                           _init_port_dma AF0E  
                 __end_of_wait_lcd_done B544        __end_of_TMR3_SetInterruptHandler B23A  
                       __CFG_PPS1WAY$ON 000000        __end_of_TMR6_SetInterruptHandler B1EA  
                            ??_TMR3_ISR 000F                 __end_of_ADCC_Initialize A500  
                            ??_TMR5_ISR 000B               __end_of_adc_int_t_handler A42C  
                            ??_TMR6_ISR 0006                                 _ADFLTRH 003EE7  
                               _ADFLTRL 003EE6                                 _DMA1DSA 003BF0  
                               _DMA2DSA 003BD0                                 _DMA1DSZ 003BEE  
                               _DMA2DSZ 003BCE                                 _DMA1SSA 003BF9  
                               _DMA2SSA 003BD9    __end_of_ADCC_SetADTIInterruptHandler B2B2  
 __size_of_ADCC_SetADTIInterruptHandler 0028            _ADCC_SetADTIInterruptHandler B28A  
                               _DMA1SSZ 003BF7                                 _DMA2SSZ 003BD7  
            __size_of_port_data_dma_ptr 000A                                 _ADSTPTH 003EE5  
                               _ADSTPTL 003EE4                       _UART1_Receive_ISR B544  
                               _CLKRCLK 003CE6                                 _CLKRCON 003CE5  
                __end_of_clear_adc_scan B700                          ?_DMA1_DMAA_ISR 0001  
                      _DMA1_DMASCNT_ISR B68C                                 _U1ERRIE 003DFA  
                    __size_of_set_vterm 001E                                 _U1ERRIR 003DF9  
                               _U2ERRIE 003DE2                                 _U2ERRIR 003DE1  
                               u1192_20 46D0                                 u1194_20 4778  
                               u1196_28 B3F4                                 _INT0PPS 003AC0  
                   __CFG_PWRTS$PWRT_OFF 000000                                 _INT1PPS 003AC1  
                          ?_Default_ISR 0001              __size_of_UART2_tx_vect_isr 0028  
                               _U1RXPPS 003AE5                                 _U2RXPPS 003AE8  
                               _OSCCON1 0039D9                                 _OSCCON3 0039DB  
                               _IVTLOCK 003FD4                      __size_of_vfpfcnvrt 0FAC  
                               _SPI1CLK 003D1C                                 _SPI1RXB 003D10  
                     __end_of_calc_bsoc 4936                                 _SPI1TXB 003D11  
                               _OSCTUNE 0039DE                                 _PWM8DCH 003F61  
                               _PWM8DCL 003F60                                 _PWM8CON 003F62  
                               _SLRCONA 003A43                                 _SLRCONB 003A53  
                               _SLRCONC 003A63                                 _SLRCOND 003A73  
                               _SLRCONE 003A83                                 _SLRCONF 003A93  
                            _get_switch AFFC                      __size_of_start_lcd 0006  
               __end_of_TMR5_WriteTimer ACE0                 __size_of_switch_handler 0140  
                    __size_of_stop_bsoc 0006              __end_of_set_load_relay_one B64E  
            __end_of_set_load_relay_two B63E       __size_of_INT0_SetInterruptHandler 0028  
            __size_of_CLKREF_Initialize 000A                           _calc_ror_data 828A  
               __size_of_DMA1_DMAOR_ISR 000A                                 __Hparam 0000  
            __size_of_ADCC_ThresholdISR 006A                           _mode_lamp_dim B596  
                               __Lparam 0000                __end_of_UART1_Initialize AB0E  
                     __end_of_hid_input A21E                         __size_of_WaitMs 0036  
                       __size_of___flge 0162                         __size_of___fleq 00C4  
                               ___aodiv 6E4E                                 ___fladd 3A48  
                               ___aomod 7342                                 ___fldiv 4936  
                               ___awdiv 89A6                                 ___flneg A9F4  
                               ___awmod 8FC6                                 ___flmul 321E  
                               ___flsub AA82                                 ___fltol 83FE  
                               ___lodiv 810A                                 ___lomod 8AF4  
             __end_of_UART1_Receive_ISR B560                         __size_of_efgtoa 1244  
                       __size_of_floorf 036C                    __end_of_init_display 97FE  
                               __pcinit 9302                __end_of_mode_lamp_bright B67A  
                       __size_of_memset 02EC                __size_of_adc_int_handler 0002  
                   _eaDogM_WriteCommand B65E                                 __ramtop 2000  
                               __ptext0 1244                                 __ptext1 B354  
                               __ptext2 B472                                 __ptext3 AE72  
                               __ptext4 97FE                                 __ptext5 AF0E  
                               __ptext6 9714                                 __ptext7 B0AA  
                               __ptext8 B0D2                                 __ptext9 B492  
                     __end_of_esr_check 6B90                       _UART2_Receive_ISR B50A  
                       __size_of_printf 0062                         __CFG_WRTAPP$OFF 000000  
                       __size_of_strcpy 00D4                         __size_of_strlen 00A2  
                 _OSCILLATOR_Initialize B5F2                                 us614999 70B8  
                               us710999 8274                            __size_of_abs 0046  
                               us625999 7570                                 us715999 8C24  
                          __size_of_pad 0114                       __end_of_init_bsoc 86E0  
                               _isalpha AB9A                                 _isdigit AF9E  
                               _ivln2_h FC5B                               _T3CONbits 003FA6  
                               _mode_sw 0056                       __end_of_lp_filter 7F74  
                               _islower AF3E                                 _isspace A8B8  
                       __CFG_WRTSAF$OFF 000000                               _T5CONbits 003F9A  
              __end_of_UART2_Initialize A756                                 _isupper AF6E  
            __size_of_SYSTEM_Initialize 004A                                 _sprintf 9410  
                               _tolower A32A                   __size_of_display_help 0008  
                               _utctime 0096                   __size_of_display_info 0008  
                               _strncmp 7582                                 _toupper A2A6  
                  end_of_initialization 940A               __size_of_convert_adc_data 00B8  
                    _check_enter_button AC60                               i1u1205_20 8904  
                             i2u1000_48 A536                               i2u1000_49 A54A  
   __end_of_UART2_SetRxInterruptHandler B19A             _UART2_SetRxInterruptHandler B172  
                             i2u1002_48 B2F0                               i2u1004_48 B318  
                             i2u1006_48 B340                       __end_of_set_vterm B4CE  
                     __end_of_vfpfcnvrt 321E                               _SPI1TCNTL 003D12  
                               postdec0 003FED                                 postdec1 003FE5  
                               postdec2 003FDD                                 postinc0 003FEE  
                               postinc1 003FE6                                 postinc2 003FDE  
            __size_of_adc_int_t_handler 007E                     __size_of_StartTimer 0040  
                     __end_of_start_lcd B70C               __end_of_UART2_Receive_ISR B528  
                        wdtdelay@dcount 009A                   __CFG_WDTCPS$WDTCPS_31 000000  
                       ??_DMA1_DMAA_ISR 0007                   _INT1_InterruptHandler 00BA  
                             _PORTBbits 003FCB                       __end_of_stop_bsoc B712  
              _TMR3_SetInterruptHandler B212                               _PORTFbits 003FCF  
              _TMR6_SetInterruptHandler B1C2                            _display_help B6EA  
                 _TMR5_InterruptHandler 00A5                            _display_info B6E2  
  __size_of_UART2_SetTxInterruptHandler 0028                __end_of_clear_hid_pflags B39C  
                     __size_of_ADCC_ISR 002C     __end_of_ADCC_SetADIInterruptHandler B2DA  
           _ADCC_SetADIInterruptHandler B2B2                              _update_lcd 91F2  
                       _calc_model_data 5B96                  __size_of_ringBufS_init 0028  
                      __CFG_FEXTOSC$ECH 000000                              _static_soc B354  
                       _DMA1_Initialize A42C                              _start_bsoc B450  
                       _SPI1_Initialize B5C6                   __end_of_get_vterm_ptr AFFC  
                     __size_of_INT0_ISR 000E                       __size_of_INT1_ISR 003E  
                        __end_of_WaitMs AE3C            __end_of_INTERRUPT_Initialize A5D0  
                            _vterm_dump 8D74                          __end_of___flge 8842  
                        __end_of___fleq 9A7C    __end_of_INT0_DefaultInterruptHandler B720  
 __size_of_INT0_DefaultInterruptHandler 0002            _INT0_DefaultInterruptHandler B71E  
            __size_of_UART1_Receive_ISR 001C                         _DMA2_Initialize A7B0  
                         __pidataBIGRAM 7BB8                          __end_of_efgtoa 1244  
                     __size_of_TMR3_ISR 0162                       __size_of_TMR5_ISR 005A  
                     __size_of_TMR6_ISR 001A                     __size_of_check_help 0212  
                        __end_of_floorf 62A4             __size_of_UART2_Transmit_ISR 002C  
                            floorf@F524 007A                          __end_of_memset 68D0  
                        __end_of_printf A696                __end_of_DMA1_DMADCNT_ISR B6BA  
           __size_of_PWM8_LoadDutyValue 0042                   __end_of_INT0_CallBack B42C  
                        __end_of_strcpy 99B8                          __end_of_strlen 9F3E  
                   start_initialization 9302    __end_of_TMR5_DefaultInterruptHandler AF0E  
 __size_of_TMR5_DefaultInterruptHandler 0034            _TMR5_DefaultInterruptHandler AEDA  
       __size_of_PIN_MANAGER_Initialize 0094                             __end_of_abs AA82  
                 __end_of_INT1_CallBack B3C0               __size_of_set_display_info 001E  
                           __end_of_pad 91F2                    __size_of_Default_ISR 0006  
                  __end_of_send_lcd_cmd B0FA                          _switch_handler 8C34  
         __size_of_ADCC_StartConversion 0012                              ivt0x8_base 0008  
                         _uart1RxBuffer 006C                   __end_of___fpclassifyf 810A  
                         _uart2RxBuffer 0500                __end_of_DMA1_DMASCNT_ISR B69A  
                         _uart2TxBuffer 0354                          _DMA1_DMAOR_ISR B6C8  
                   __end_of_hid_display 961C              __end_of_send_port_data_dma A95C  
                      __CFG_LPBOREN$OFF 000000                   __size_of_init_display 00EA  
           __size_of_eaDogM_WriteString 00A6                               _TimerDone B122  
                         _ringBufS_init B0FA                             __pdataBANK0 00C4  
                           __pdataBANK1 0100                             __pdataBANK2 0200  
            __size_of_UART2_Receive_ISR 001E                     __size_of_get_switch 002C  
            __end_of_EXT_INT_Initialize AEDA                 __end_of_calc_model_data 5F38  
                   __end_of_help_button ADD0         __end_of_eaDogM_WriteStringAtPos AE72  
                   __end_of_BVSOC_TABLE FB4B                    calc_model_data@bcror 008E  
                           __pbssBIGRAM 07FF                 __end_of_DMA1_Initialize A496  
                  calc_model_data@bvror 0092                             __pbssCOMRAM 0048  
      __end_of_INT0_SetInterruptHandler B28A                __size_of_TMR2_Initialize 0018  
                __size_of_TMR3_CallBack 0024                  __end_of_switch_handler 8D74  
                     __size_of___xxtofl 0204                 __end_of_SPI1_Initialize B5DC  
              _UART1_RxInterruptHandler 00B1                _UART2_TxInterruptHandler 00B4  
                             __end_of_T FBDB                        _convert_adc_data 9B3A  
                             _calc_bsoc 4204               __size_of_ringBufS_put_dma 00AA  
                          _init_display 9714                  __end_of_DMA1_DMAOR_ISR B6D2  
                __size_of_TMR5_CallBack 0024                   _TMR6_InterruptHandler 00A8  
                    calc_ror_data@bcror 0086                  __size_of_TMR6_CallBack 0024  
               __end_of_DMA2_Initialize A80A                      calc_ror_data@bvror 008A  
                _PIN_MANAGER_Initialize 9FD6                __size_of_TMR3_Initialize 0046  
                  __end_of_wait_lcd_set B706                           __pmediumconst FA7A  
                             __ptext100 5B96                               __ptext101 B70C  
                             __ptext110 B172                               __ptext102 B450  
                             __ptext111 AAC8                               __ptext103 7DB8  
                             __ptext120 B5C6                               __ptext112 B19A  
                             __ptext104 AA82                               __ptext121 B5DC  
                             __ptext113 B080                               __ptext105 3A48  
                             __ptext130 A7B0                               __ptext122 B608  
                             __ptext114 B1C2                               __ptext106 321E  
                             __ptext131 A42C                               __ptext123 9FD6  
                             __ptext115 AB0E                               __ptext107 A9AA  
                             __ptext140 A80C                               __ptext132 B69A  
                             __ptext124 B5F2                               __ptext116 B1EA  
                             __ptext108 A6F8                               __ptext141 ACA0  
                             __ptext133 A496                               __ptext125 A56A  
                             __ptext117 AB54                               __ptext109 B14A  
                             __ptext150 B6A4                               __ptext142 B3C0  
                             __ptext134 B28A                               __ptext126 B6F2  
                             __ptext118 B212                               __ptext151 B67C  
                             __ptext143 AEDA                               __ptext135 B2B2  
                             __ptext127 AEA6                               __ptext119 B5AE  
                             __ptext160 B2DC                               __ptext152 B408  
                             __ptext144 8844                               __ptext136 AD20  
                             __ptext128 B23A                               __ptext161 B544  
                             __ptext153 B71E                               __ptext145 ACE0  
                             __ptext137 B39C                               __ptext129 B262  
                             __ptext170 B6B0                               __ptext162 B304  
                             __ptext154 B714                               __ptext146 B3E4  
                             __ptext138 B71A                               __ptext171 B6BC  
                             __ptext163 B054                               __ptext155 B028  
                             __ptext147 B71C                               __ptext139 8C34  
                             __ptext172 B6C8                               __ptext164 B32C  
                             __ptext156 A3AE                               __ptext148 4204  
                             __ptext173 0000                               __ptext165 B50A  
                             __ptext157 B720                               __ptext149 A90A  
                             __ptext166 B57C                               __ptext158 B722  
                             __ptext167 B42C                               __ptext159 A500  
                             __ptext168 A95C                               __ptext169 B68C  
                             _hid_input A18E                      __end_of_StartTimer AC60  
                    _set_load_relay_one B63E                      _set_load_relay_two B62E  
                     __size_of_wdtdelay 005A                       __size_of_spinners 00E6  
                     __size_of_vfprintf 00AC                                _ADCC_ISR B028  
                __CFG_BBSIZE$BBSIZE_512 000000                               fabsf@F463 007E  
                              _DMA1CON0 003BFC                                _DMA1CON1 003BFD  
                              _DMA1AIRQ 003BFE                                _DMA2CON0 003BDC  
                              _DMA2CON1 003BDD                                _DMA2AIRQ 003BDE  
                              _DMA1SIRQ 003BFF                                _DMA2SIRQ 003BDF  
                             _esr_check 68D0                 __size_of_get_raw_result 001E  
                        __size_of_fabsf 00AE                               _init_bsoc 8570  
                __size_of_wait_lcd_done 001C                          __size_of_fputc 0124  
                              _T2CLKCON 003FAE                          __size_of_fputs 0098  
                             _lp_filter 7DB8                             _hid_display 951A  
                        __size_of_srand 0034                          __size_of_putch 001A  
                  _INTERRUPT_Initialize A56A                                _T6CLKCON 003F96  
         __size_of_start_switch_handler 0020                         ?_DMA1_DMAOR_ISR 0001  
                              _INT0_ISR B67C                                _INT1_ISR AD20  
                              _LATCbits 003FBC                                _LATDbits 003FBD  
                              _LATEbits 003FBE                                _LATFbits 003FBF  
     __size_of_INT1_SetInterruptHandler 0028                                _IPR1bits 003981  
                              _IPR2bits 003982                                _PIE1bits 003991  
                              _IPR3bits 003983                                _PIE2bits 003992  
                              _IPR5bits 003985                                _PIE3bits 003993  
                             _tickCount 02E6                                _IPR6bits 003986  
                              _PIE5bits 003995                                _IPR8bits 003988  
                              _PIE6bits 003996                                _IPR9bits 003989  
                              _PIE8bits 003998                     __CFG_BORV$VBOR_2P45 000000  
                              _PIE9bits 003999                               _ring_buf1 0443  
                             _ring_buf2 0400                                _PIR1bits 0039A1  
                              _PIR2bits 0039A2                                _SPI1BAUD 003D19  
                              _PIR4bits 0039A4                                _SPI1CON0 003D14  
                              _SPI1CON1 003D15                                _SPI1CON2 003D16  
                         _TMR3_CallBack B3E4                                _PIR5bits 0039A5  
                              _PIR6bits 0039A6                                _PIR8bits 0039A8  
                              _PIR9bits 0039A9                __size_of_TMR5_Initialize 0046  
                              i2u998_48 B040                               _set_vterm B4B0  
                   __size_of_update_lcd 0110                             _help_button AD98  
                              _TMR3_ISR 8844                             _BVSOC_TABLE FA7B  
                              _TMR5_ISR A80C                                _TMR6_ISR B57C  
                             _port_data 05FF                     __size_of_static_soc 0024  
                             _vfpfcnvrt 2272                            _SPI1INTFbits 003D1A  
                   __size_of_start_bsoc 0022                           _TMR5_CallBack B3C0  
                            _ADCON0bits 003EF8                      __end_of_check_help 79B4  
                             _start_lcd B706                 __size_of_FVR_Initialize 0008  
             __size_of_send_lcd_cmd_dma 0052                           _TMR6_CallBack B42C  
                 __size_of_send_lcd_cmd 0028       __size_of_TMR5_SetInterruptHandler 0028  
                             _stop_bsoc B70C                        _set_display_info B4CE  
              __size_of_PWM8_Initialize 0016                __size_of_TMR6_Initialize 002A  
                           _INTCON0bits 003FD2                               copy_data0 9316  
                             copy_data1 933C                               copy_data2 935E  
                             copy_data3 9380                _INT0_SetInterruptHandler B262  
                   __size_of_vterm_dump 012E     __end_of_UART2_SetTxInterruptHandler B172  
           _UART2_SetTxInterruptHandler B14A                            _uart1RxCount 005D  
                          _uart2RxCount 0057                                __Hrparam 0000  
      __size_of_eaDogM_WriteStringAtPos 0036                 __CFG_RSTOSC$EXTOSC_4PLL 000000  
              __size_of_TMR3_WriteTimer 0040                                __Lrparam 0000  
               __size_of_check_adc_scan 0008                      __CFG_BOREN$SBORDIS 000000  
              __size_of_conv_raw_result 04AC                           _wait_lcd_done B528  
                          _send_lcd_cmd B0D2                        __size_of___aodiv 0280  
                      __size_of___fladd 07BC                        __size_of___aomod 0240  
                       _adc_int_handler B722                        __size_of___fldiv 057A  
                      __size_of___awdiv 014E                        __size_of___flneg 0048  
                      __size_of___awmod 0118                        __size_of___flmul 082A  
                      __size_of___flsub 0046                        __size_of___fltol 0172  
                      __size_of___lodiv 0180                        __size_of___lomod 0140  
                    __end_of_get_switch B028                   __end_of_DMA1_DMAA_ISR B6C6  
                    ___fpclassifyf@F463 0082    __size_of_UART1_SetRxInterruptHandler 0028  
                       lp_filter@smooth 0300                                ___xxtofl 79B4  
                     ?_DMA1_DMADCNT_ISR 0001             __size_of_check_enter_button 0040  
              __size_of_ADCC_Initialize 006A             __end_of_eaDogM_WriteCommand B66C  
                      __size_of_isalpha 0044                        __size_of_isdigit 0030  
                              __pivt0x8 0008                        __size_of_islower 0030  
                      __size_of_isspace 0052                      ??_DMA1_DMADCNT_ISR 0007  
                              __ptext10 B0FA                                __ptext11 8570  
                              __ptext20 B6D2                                __ptext12 A06A  
                              __ptext21 B6FA                                __ptext13 951A  
                              __ptext30 9410                                __ptext22 B6DA  
                              __ptext14 A18E                                __ptext31 AFCE  
                              __ptext23 B62E                                __ptext15 AFFC  
                              __ptext40 B706                                __ptext32 AE06  
                              __ptext24 B63E                                __ptext16 68D0  
                              __ptext41 A0FC                                __ptext33 91F2  
                              __ptext25 B65E                                __ptext17 AD5E  
                              __ptext50 62A4                                __ptext42 65E4  
                              __ptext34 AE3C                                __ptext26 9B3A  
                              __ptext18 A5D0                                __ptext51 8AF4  
                              __ptext43 A634                                __ptext35 A866  
                              __ptext27 B378                                __ptext19 B61C  
                              __ptext60 7F74                                __ptext52 810A  
                              __ptext44 9CA0                                __ptext36 B528  
                              __ptext28 77A2                                __ptext61 83FE  
                              __ptext53 7582                                __ptext45 2272  
                              __ptext37 A756                                __ptext29 8D74  
                              __ptext70 A21E                                __ptext62 A9F4  
                              __ptext54 6B90                                __ptext46 57DC  
                              __ptext38 9DF6                                __ptext71 90DE  
                              __ptext63 99B8                                __ptext55 0000  
                              __ptext47 A2A6                                __ptext39 B700  
                              __ptext80 B4B0                                __ptext72 9E9C  
                              __ptext64 8FC6                                __ptext56 A32A  
                              __ptext48 AF3E                                __ptext81 B64E  
                              __ptext73 9F3E                                __ptext65 89A6  
                              __ptext57 AF6E                                __ptext49 AB9A  
                              __ptext90 B6EA                                __ptext82 B4CE  
                              __ptext74 8EA2                                __ptext66 535C  
                              __ptext58 98E4                                __ptext91 AC60  
                              __ptext83 B596                                __ptext75 B560  
                              __ptext67 AA3C                                __ptext59 5F38  
                              __ptext92 828A                                __ptext84 B66C  
                              __ptext76 9D4C                                __ptext68 7342  
                              __ptext93 9BF2                                __ptext85 ABDE  
                              __ptext77 70CE                                __ptext69 6E4E  
                              __ptext94 4EB0                                __ptext86 AD98  
                              __ptext78 A8B8                                __ptext95 A696  
                              __ptext87 B122                                __ptext79 AF9E  
                              __ptext96 B4EC                                __ptext88 AC20  
                              __ptext97 79B4                                __ptext89 B6E2  
                              __ptext98 4936                                __ptext99 86E0  
                      __size_of_isupper 0030                                us1116999 6BA2  
                              us1047999 5376                                us1128999 630A  
                      __size_of_sprintf 010A                        __size_of_tolower 0084  
                              us1137999 585C                        __size_of_strncmp 0220  
                      __size_of_toupper 0084                        _ringBufS_put_dma 9D4C  
                  __end_of_Volts_to_SOC A0FC                           __size_of_atoi 0274  
                         __size_of_ctoa 0088                           __size_of_main 102E  
                         __size_of_dtoa 0480                           __size_of_nanf 0062  
                 __size_of_wait_lcd_set 0006                           __size_of_stoa 02BE  
                         __size_of_utoa 0340                           __size_of_xtoa 03BA  
                  __CFG_WDTCWS$WDTCWS_7 000000                       ?_DMA1_DMASCNT_ISR 0001  
                 __end_of_init_port_dma AF3E                             _IVTLOCKbits 003FD4  
              __size_of_TMR5_WriteTimer 0040               _ADCC_ADI_InterruptHandler 00AE  
                             stoa@F1166 00EC                      ??_DMA1_DMASCNT_ISR 0007  
          __end_of_ADCC_StartConversion B62E                                _spi_link 0060  
                              _wdtdelay A756              __end_of_UART2_Transmit_ISR B080  
                              _spinners 97FE                                _vfprintf 9CA0  
              __end_of_convert_adc_data 9BF2              __end_of_PWM8_LoadDutyValue AC20  
  __end_of_TMR3_DefaultInterruptHandler B71E   __size_of_TMR3_DefaultInterruptHandler 0002  
          _TMR3_DefaultInterruptHandler B71C    __end_of_INT1_DefaultInterruptHandler B71C  
 __size_of_INT1_DefaultInterruptHandler 0002            _INT1_DefaultInterruptHandler B71A  
                    _send_port_data_dma A90A                           ??_Default_ISR 0001  
                           _uart1RxHead 005F                  __size_of_get_vterm_ptr 002E  
                           _uart2RxHead 0059                             _uart1RxTail 005E  
                        _get_raw_result B4EC                             _uart2TxHead 005C  
                           _uart2RxTail 0058                               spinners@s 0074  
                           _uart2TxTail 005B                            _wait_lcd_set B700  
                      Volts_to_SOC@slot 0055                      _EXT_INT_Initialize AEA6  
  __end_of_TMR6_DefaultInterruptHandler A9AA   __size_of_TMR6_DefaultInterruptHandler 004E  
          _TMR6_DefaultInterruptHandler A95C    __end_of_ADCC_DefaultInterruptHandler B722  
 __size_of_ADCC_DefaultInterruptHandler 0002            _ADCC_DefaultInterruptHandler B720  
                              intlevel1 0000                                intlevel2 0000  
                     _send_lcd_cmd_long B0AA          __size_of_set_temp_display_help 0010  
         __end_of_set_temp_display_help B65E                   __end_of_calc_ror_data 83FE  
                     __CFG_CLKOUTEN$OFF 000000              __end_of_eaDogM_WriteString 9E9C  
                 __end_of_mode_lamp_dim B5AE                 __end_of_adc_int_handler B724  
                __size_of_INT0_CallBack 0024                              _SPI1SCKPPS 003ADE  
                            _SPI1SDIPPS 003ADF                  __size_of_INT1_CallBack 0024  
                    __end_of_update_lcd 9302                  _uart2TxBufferRemaining 005A  
                    __end_of_static_soc B378                      __end_of_start_bsoc B472  
                        _FVR_Initialize B6F2                  __end_of_get_raw_result B50A  
                      _send_lcd_cmd_dma A866                  __size_of___fpclassifyf 0196  
                 TMR5_ISR@CountCallBack 0050        __end_of_INT1_SetInterruptHandler B262  
             __size_of_UART1_Initialize 0046                        ??_DMA1_DMAOR_ISR 0007  
             __end_of_send_lcd_cmd_long B0D2                 __size_of_start_adc_scan 0064  
                   __end_of_Default_ISR B71A          __end_of_PIN_MANAGER_Initialize A06A  
             __size_of_mode_lamp_bright 000E                      __end_of_vterm_dump 8EA2  
               _eaDogM_WriteStringAtPos AE3C                           _get_vterm_ptr AFCE  
                        _check_adc_scan B6DA               __size_of_UART2_Initialize 005E  
